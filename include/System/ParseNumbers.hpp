// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: ReadOnlySpan`1<T>
  template<typename T>
  struct ReadOnlySpan_1;
}
// Completed forward declares
// Type namespace: System
namespace System {
  // Forward declaring type: ParseNumbers
  class ParseNumbers;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::ParseNumbers);
DEFINE_IL2CPP_ARG_TYPE(::System::ParseNumbers*, "System", "ParseNumbers");
// Type namespace: System
namespace System {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.ParseNumbers
  // [TokenAttribute] Offset: FFFFFFFF
  class ParseNumbers : public ::Il2CppObject {
    public:
    // static public System.Int64 StringToLong(System.ReadOnlySpan`1<System.Char> s, System.Int32 radix, System.Int32 flags)
    // Offset: 0x466B2CC
    static int64_t StringToLong(::System::ReadOnlySpan_1<::Il2CppChar> s, int radix, int flags);
    // static public System.Int64 StringToLong(System.ReadOnlySpan`1<System.Char> s, System.Int32 radix, System.Int32 flags, ref System.Int32 currPos)
    // Offset: 0x466B2E4
    static int64_t StringToLong(::System::ReadOnlySpan_1<::Il2CppChar> s, int radix, int flags, ByRef<int> currPos);
    // static public System.Int32 StringToInt(System.ReadOnlySpan`1<System.Char> s, System.Int32 radix, System.Int32 flags)
    // Offset: 0x466B908
    static int StringToInt(::System::ReadOnlySpan_1<::Il2CppChar> s, int radix, int flags);
    // static public System.Int32 StringToInt(System.ReadOnlySpan`1<System.Char> s, System.Int32 radix, System.Int32 flags, ref System.Int32 currPos)
    // Offset: 0x466B920
    static int StringToInt(::System::ReadOnlySpan_1<::Il2CppChar> s, int radix, int flags, ByRef<int> currPos);
    // static public System.String IntToString(System.Int32 n, System.Int32 radix, System.Int32 width, System.Char paddingChar, System.Int32 flags)
    // Offset: 0x466BEFC
    static ::StringW IntToString(int n, int radix, int width, ::Il2CppChar paddingChar, int flags);
    // static private System.Void EatWhiteSpace(System.ReadOnlySpan`1<System.Char> s, ref System.Int32 i)
    // Offset: 0x466B648
    static void EatWhiteSpace(::System::ReadOnlySpan_1<::Il2CppChar> s, ByRef<int> i);
    // static private System.Int64 GrabLongs(System.Int32 radix, System.ReadOnlySpan`1<System.Char> s, ref System.Int32 i, System.Boolean isUnsigned)
    // Offset: 0x466B714
    static int64_t GrabLongs(int radix, ::System::ReadOnlySpan_1<::Il2CppChar> s, ByRef<int> i, bool isUnsigned);
    // static private System.Int32 GrabInts(System.Int32 radix, System.ReadOnlySpan`1<System.Char> s, ref System.Int32 i, System.Boolean isUnsigned)
    // Offset: 0x466BCDC
    static int GrabInts(int radix, ::System::ReadOnlySpan_1<::Il2CppChar> s, ByRef<int> i, bool isUnsigned);
    // static private System.Void ThrowOverflowInt32Exception()
    // Offset: 0x466C2B4
    static void ThrowOverflowInt32Exception();
    // static private System.Void ThrowOverflowInt64Exception()
    // Offset: 0x466C224
    static void ThrowOverflowInt64Exception();
    // static private System.Void ThrowOverflowUInt32Exception()
    // Offset: 0x466C2FC
    static void ThrowOverflowUInt32Exception();
    // static private System.Void ThrowOverflowUInt64Exception()
    // Offset: 0x466C26C
    static void ThrowOverflowUInt64Exception();
    // static private System.Boolean IsDigit(System.Char c, System.Int32 radix, out System.Int32 result)
    // Offset: 0x466C344
    static bool IsDigit(::Il2CppChar c, int radix, ByRef<int> result);
  }; // System.ParseNumbers
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::ParseNumbers::StringToLong
// Il2CppName: StringToLong
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (*)(::System::ReadOnlySpan_1<::Il2CppChar>, int, int)>(&System::ParseNumbers::StringToLong)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ReadOnlySpan`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Char")})->byval_arg;
    static auto* radix = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* flags = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ParseNumbers*), "StringToLong", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, radix, flags});
  }
};
// Writing MetadataGetter for method: System::ParseNumbers::StringToLong
// Il2CppName: StringToLong
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (*)(::System::ReadOnlySpan_1<::Il2CppChar>, int, int, ByRef<int>)>(&System::ParseNumbers::StringToLong)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ReadOnlySpan`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Char")})->byval_arg;
    static auto* radix = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* flags = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* currPos = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ParseNumbers*), "StringToLong", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, radix, flags, currPos});
  }
};
// Writing MetadataGetter for method: System::ParseNumbers::StringToInt
// Il2CppName: StringToInt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::ReadOnlySpan_1<::Il2CppChar>, int, int)>(&System::ParseNumbers::StringToInt)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ReadOnlySpan`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Char")})->byval_arg;
    static auto* radix = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* flags = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ParseNumbers*), "StringToInt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, radix, flags});
  }
};
// Writing MetadataGetter for method: System::ParseNumbers::StringToInt
// Il2CppName: StringToInt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::ReadOnlySpan_1<::Il2CppChar>, int, int, ByRef<int>)>(&System::ParseNumbers::StringToInt)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ReadOnlySpan`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Char")})->byval_arg;
    static auto* radix = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* flags = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* currPos = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ParseNumbers*), "StringToInt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, radix, flags, currPos});
  }
};
// Writing MetadataGetter for method: System::ParseNumbers::IntToString
// Il2CppName: IntToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(int, int, int, ::Il2CppChar, int)>(&System::ParseNumbers::IntToString)> {
  static const MethodInfo* get() {
    static auto* n = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* radix = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* width = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* paddingChar = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    static auto* flags = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ParseNumbers*), "IntToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{n, radix, width, paddingChar, flags});
  }
};
// Writing MetadataGetter for method: System::ParseNumbers::EatWhiteSpace
// Il2CppName: EatWhiteSpace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::ReadOnlySpan_1<::Il2CppChar>, ByRef<int>)>(&System::ParseNumbers::EatWhiteSpace)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ReadOnlySpan`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Char")})->byval_arg;
    static auto* i = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ParseNumbers*), "EatWhiteSpace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, i});
  }
};
// Writing MetadataGetter for method: System::ParseNumbers::GrabLongs
// Il2CppName: GrabLongs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (*)(int, ::System::ReadOnlySpan_1<::Il2CppChar>, ByRef<int>, bool)>(&System::ParseNumbers::GrabLongs)> {
  static const MethodInfo* get() {
    static auto* radix = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* s = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ReadOnlySpan`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Char")})->byval_arg;
    static auto* i = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* isUnsigned = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ParseNumbers*), "GrabLongs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{radix, s, i, isUnsigned});
  }
};
// Writing MetadataGetter for method: System::ParseNumbers::GrabInts
// Il2CppName: GrabInts
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int, ::System::ReadOnlySpan_1<::Il2CppChar>, ByRef<int>, bool)>(&System::ParseNumbers::GrabInts)> {
  static const MethodInfo* get() {
    static auto* radix = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* s = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ReadOnlySpan`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Char")})->byval_arg;
    static auto* i = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* isUnsigned = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ParseNumbers*), "GrabInts", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{radix, s, i, isUnsigned});
  }
};
// Writing MetadataGetter for method: System::ParseNumbers::ThrowOverflowInt32Exception
// Il2CppName: ThrowOverflowInt32Exception
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::ParseNumbers::ThrowOverflowInt32Exception)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ParseNumbers*), "ThrowOverflowInt32Exception", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ParseNumbers::ThrowOverflowInt64Exception
// Il2CppName: ThrowOverflowInt64Exception
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::ParseNumbers::ThrowOverflowInt64Exception)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ParseNumbers*), "ThrowOverflowInt64Exception", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ParseNumbers::ThrowOverflowUInt32Exception
// Il2CppName: ThrowOverflowUInt32Exception
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::ParseNumbers::ThrowOverflowUInt32Exception)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ParseNumbers*), "ThrowOverflowUInt32Exception", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ParseNumbers::ThrowOverflowUInt64Exception
// Il2CppName: ThrowOverflowUInt64Exception
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::ParseNumbers::ThrowOverflowUInt64Exception)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ParseNumbers*), "ThrowOverflowUInt64Exception", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ParseNumbers::IsDigit
// Il2CppName: IsDigit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Il2CppChar, int, ByRef<int>)>(&System::ParseNumbers::IsDigit)> {
  static const MethodInfo* get() {
    static auto* c = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    static auto* radix = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ParseNumbers*), "IsDigit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{c, radix, result});
  }
};
