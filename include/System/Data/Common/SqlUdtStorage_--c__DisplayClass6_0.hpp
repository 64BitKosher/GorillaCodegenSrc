// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Data.Common.SqlUdtStorage
#include "System/Data/Common/SqlUdtStorage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Data::Common::SqlUdtStorage::$$c__DisplayClass6_0);
DEFINE_IL2CPP_ARG_TYPE(::System::Data::Common::SqlUdtStorage::$$c__DisplayClass6_0*, "System.Data.Common", "SqlUdtStorage/<>c__DisplayClass6_0");
// Type namespace: System.Data.Common
namespace System::Data::Common {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: System.Data.Common.SqlUdtStorage/<>c__DisplayClass6_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class SqlUdtStorage::$$c__DisplayClass6_0 : public ::Il2CppObject {
    public:
    public:
    // public System.Type type
    // Size: 0x8
    // Offset: 0x10
    ::System::Type* type;
    // Field size check
    static_assert(sizeof(::System::Type*) == 0x8);
    public:
    // Creating conversion operator: operator ::System::Type*
    constexpr operator ::System::Type*() const noexcept {
      return type;
    }
    // Get instance field reference: public System.Type type
    [[deprecated("Use field access instead!")]] ::System::Type*& dyn_type();
    // public System.Void .ctor()
    // Offset: 0x4CF1B8C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SqlUdtStorage::$$c__DisplayClass6_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlUdtStorage::$$c__DisplayClass6_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SqlUdtStorage::$$c__DisplayClass6_0*, creationType>()));
    }
    // System.Object <GetStaticNullForUdtType>b__0(System.Type t)
    // Offset: 0x4CF2FB0
    ::Il2CppObject* $GetStaticNullForUdtType$b__0(::System::Type* t);
  }; // System.Data.Common.SqlUdtStorage/<>c__DisplayClass6_0
  #pragma pack(pop)
  static check_size<sizeof(SqlUdtStorage::$$c__DisplayClass6_0), 16 + sizeof(::System::Type*)> __System_Data_Common_SqlUdtStorage_$$c__DisplayClass6_0SizeCheck;
  static_assert(sizeof(SqlUdtStorage::$$c__DisplayClass6_0) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Data::Common::SqlUdtStorage::$$c__DisplayClass6_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Data::Common::SqlUdtStorage::$$c__DisplayClass6_0::$GetStaticNullForUdtType$b__0
// Il2CppName: <GetStaticNullForUdtType>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Data::Common::SqlUdtStorage::$$c__DisplayClass6_0::*)(::System::Type*)>(&System::Data::Common::SqlUdtStorage::$$c__DisplayClass6_0::$GetStaticNullForUdtType$b__0)> {
  static const MethodInfo* get() {
    static auto* t = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::Common::SqlUdtStorage::$$c__DisplayClass6_0*), "<GetStaticNullForUdtType>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{t});
  }
};
