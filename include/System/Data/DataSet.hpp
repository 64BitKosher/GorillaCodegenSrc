// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ComponentModel.MarshalByValueComponent
#include "System/ComponentModel/MarshalByValueComponent.hpp"
// Including type: System.ComponentModel.IListSource
#include "System/ComponentModel/IListSource.hpp"
// Including type: System.Xml.Serialization.IXmlSerializable
#include "System/Xml/Serialization/IXmlSerializable.hpp"
// Including type: System.ComponentModel.ISupportInitializeNotification
#include "System/ComponentModel/ISupportInitializeNotification.hpp"
// Including type: System.Runtime.Serialization.ISerializable
#include "System/Runtime/Serialization/ISerializable.hpp"
// Including type: System.Data.SerializationFormat
#include "System/Data/SerializationFormat.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Data
namespace System::Data {
  // Forward declaring type: DataViewManager
  class DataViewManager;
  // Forward declaring type: DataTableCollection
  class DataTableCollection;
  // Forward declaring type: DataRelationCollection
  class DataRelationCollection;
  // Forward declaring type: PropertyCollection
  class PropertyCollection;
  // Forward declaring type: MergeFailedEventHandler
  class MergeFailedEventHandler;
  // Forward declaring type: DataRowCreatedEventHandler
  class DataRowCreatedEventHandler;
  // Forward declaring type: DataSetClearEventhandler
  class DataSetClearEventhandler;
  // Forward declaring type: SchemaSerializationMode
  struct SchemaSerializationMode;
  // Forward declaring type: DataTable
  class DataTable;
  // Forward declaring type: SchemaFormat
  struct SchemaFormat;
  // Forward declaring type: XmlReadMode
  struct XmlReadMode;
  // Forward declaring type: XmlWriteMode
  struct XmlWriteMode;
  // Forward declaring type: MissingSchemaAction
  struct MissingSchemaAction;
  // Forward declaring type: MergeFailedEventArgs
  class MergeFailedEventArgs;
  // Forward declaring type: DataRow
  class DataRow;
  // Forward declaring type: DataRelation
  class DataRelation;
}
// Forward declaring namespace: System::Globalization
namespace System::Globalization {
  // Forward declaring type: CultureInfo
  class CultureInfo;
}
// Forward declaring namespace: System::ComponentModel
namespace System::ComponentModel {
  // Forward declaring type: PropertyChangedEventHandler
  class PropertyChangedEventHandler;
  // Forward declaring type: PropertyChangedEventArgs
  class PropertyChangedEventArgs;
  // Forward declaring type: PropertyDescriptor
  class PropertyDescriptor;
  // Forward declaring type: ISite
  class ISite;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: EventHandler
  class EventHandler;
  // Forward declaring type: Converter`2<TInput, TOutput>
  template<typename TInput, typename TOutput>
  class Converter_2;
  // Forward declaring type: Type
  class Type;
}
// Forward declaring namespace: System::Xml::Schema
namespace System::Xml::Schema {
  // Forward declaring type: XmlSchemaComplexType
  class XmlSchemaComplexType;
  // Forward declaring type: XmlSchemaSet
  class XmlSchemaSet;
  // Forward declaring type: XmlSchema
  class XmlSchema;
}
// Forward declaring namespace: System::Runtime::Serialization
namespace System::Runtime::Serialization {
  // Forward declaring type: SerializationInfo
  class SerializationInfo;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IList
  class IList;
}
// Forward declaring namespace: System::Xml
namespace System::Xml {
  // Forward declaring type: XmlReader
  class XmlReader;
  // Forward declaring type: XmlWriter
  class XmlWriter;
  // Forward declaring type: XmlDocument
  class XmlDocument;
}
// Completed forward declares
// Type namespace: System.Data
namespace System::Data {
  // Forward declaring type: DataSet
  class DataSet;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Data::DataSet);
DEFINE_IL2CPP_ARG_TYPE(::System::Data::DataSet*, "System.Data", "DataSet");
// Type namespace: System.Data
namespace System::Data {
  // Size: 0xB8
  #pragma pack(push, 1)
  // Autogenerated type: System.Data.DataSet
  // [TokenAttribute] Offset: FFFFFFFF
  // [ToolboxItemAttribute] Offset: FFFFFFFF
  // [XmlRootAttribute] Offset: FFFFFFFF
  // [DefaultPropertyAttribute] Offset: FFFFFFFF
  // [XmlSchemaProviderAttribute] Offset: FFFFFFFF
  class DataSet : public ::System::ComponentModel::MarshalByValueComponent/*, public ::System::ComponentModel::IListSource, public ::System::Xml::Serialization::IXmlSerializable, public ::System::ComponentModel::ISupportInitializeNotification, public ::System::Runtime::Serialization::ISerializable*/ {
    public:
    public:
    // private System.Data.DataViewManager _defaultViewManager
    // Size: 0x8
    // Offset: 0x20
    ::System::Data::DataViewManager* defaultViewManager;
    // Field size check
    static_assert(sizeof(::System::Data::DataViewManager*) == 0x8);
    // private readonly System.Data.DataTableCollection _tableCollection
    // Size: 0x8
    // Offset: 0x28
    ::System::Data::DataTableCollection* tableCollection;
    // Field size check
    static_assert(sizeof(::System::Data::DataTableCollection*) == 0x8);
    // private readonly System.Data.DataRelationCollection _relationCollection
    // Size: 0x8
    // Offset: 0x30
    ::System::Data::DataRelationCollection* relationCollection;
    // Field size check
    static_assert(sizeof(::System::Data::DataRelationCollection*) == 0x8);
    // System.Data.PropertyCollection _extendedProperties
    // Size: 0x8
    // Offset: 0x38
    ::System::Data::PropertyCollection* extendedProperties;
    // Field size check
    static_assert(sizeof(::System::Data::PropertyCollection*) == 0x8);
    // private System.String _dataSetName
    // Size: 0x8
    // Offset: 0x40
    ::StringW dataSetName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String _datasetPrefix
    // Size: 0x8
    // Offset: 0x48
    ::StringW datasetPrefix;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // System.String _namespaceURI
    // Size: 0x8
    // Offset: 0x50
    ::StringW namespaceURI;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Boolean _enforceConstraints
    // Size: 0x1
    // Offset: 0x58
    bool enforceConstraints;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _caseSensitive
    // Size: 0x1
    // Offset: 0x59
    bool caseSensitive;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: caseSensitive and: culture
    char __padding8[0x6] = {};
    // private System.Globalization.CultureInfo _culture
    // Size: 0x8
    // Offset: 0x60
    ::System::Globalization::CultureInfo* culture;
    // Field size check
    static_assert(sizeof(::System::Globalization::CultureInfo*) == 0x8);
    // private System.Boolean _cultureUserSet
    // Size: 0x1
    // Offset: 0x68
    bool cultureUserSet;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // System.Boolean _fInReadXml
    // Size: 0x1
    // Offset: 0x69
    bool fInReadXml;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // System.Boolean _fInLoadDiffgram
    // Size: 0x1
    // Offset: 0x6A
    bool fInLoadDiffgram;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // System.Boolean _fTopLevelTable
    // Size: 0x1
    // Offset: 0x6B
    bool fTopLevelTable;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // System.Boolean _fInitInProgress
    // Size: 0x1
    // Offset: 0x6C
    bool fInitInProgress;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // System.Boolean _fEnableCascading
    // Size: 0x1
    // Offset: 0x6D
    bool fEnableCascading;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // System.Boolean _fIsSchemaLoading
    // Size: 0x1
    // Offset: 0x6E
    bool fIsSchemaLoading;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: fIsSchemaLoading and: mainTableName
    char __padding16[0x1] = {};
    // System.String _mainTableName
    // Size: 0x8
    // Offset: 0x70
    ::StringW mainTableName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Data.SerializationFormat _remotingFormat
    // Size: 0x4
    // Offset: 0x78
    ::System::Data::SerializationFormat remotingFormat;
    // Field size check
    static_assert(sizeof(::System::Data::SerializationFormat) == 0x4);
    // Padding between fields: remotingFormat and: defaultViewManagerLock
    char __padding18[0x4] = {};
    // private System.Object _defaultViewManagerLock
    // Size: 0x8
    // Offset: 0x80
    ::Il2CppObject* defaultViewManagerLock;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    // private readonly System.Int32 _objectID
    // Size: 0x4
    // Offset: 0x88
    int objectID;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // System.Boolean _useDataSetSchemaOnly
    // Size: 0x1
    // Offset: 0x8C
    bool useDataSetSchemaOnly;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // System.Boolean _udtIsWrapped
    // Size: 0x1
    // Offset: 0x8D
    bool udtIsWrapped;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: udtIsWrapped and: PropertyChanging
    char __padding22[0x2] = {};
    // private System.ComponentModel.PropertyChangedEventHandler PropertyChanging
    // Size: 0x8
    // Offset: 0x90
    ::System::ComponentModel::PropertyChangedEventHandler* PropertyChanging;
    // Field size check
    static_assert(sizeof(::System::ComponentModel::PropertyChangedEventHandler*) == 0x8);
    // private System.Data.MergeFailedEventHandler MergeFailed
    // Size: 0x8
    // Offset: 0x98
    ::System::Data::MergeFailedEventHandler* MergeFailed;
    // Field size check
    static_assert(sizeof(::System::Data::MergeFailedEventHandler*) == 0x8);
    // private System.Data.DataRowCreatedEventHandler DataRowCreated
    // Size: 0x8
    // Offset: 0xA0
    ::System::Data::DataRowCreatedEventHandler* DataRowCreated;
    // Field size check
    static_assert(sizeof(::System::Data::DataRowCreatedEventHandler*) == 0x8);
    // private System.Data.DataSetClearEventhandler ClearFunctionCalled
    // Size: 0x8
    // Offset: 0xA8
    ::System::Data::DataSetClearEventhandler* ClearFunctionCalled;
    // Field size check
    static_assert(sizeof(::System::Data::DataSetClearEventhandler*) == 0x8);
    // private System.EventHandler Initialized
    // Size: 0x8
    // Offset: 0xB0
    ::System::EventHandler* Initialized;
    // Field size check
    static_assert(sizeof(::System::EventHandler*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::System::ComponentModel::IListSource
    operator ::System::ComponentModel::IListSource() noexcept {
      return *reinterpret_cast<::System::ComponentModel::IListSource*>(this);
    }
    // Creating interface conversion operator: operator ::System::Xml::Serialization::IXmlSerializable
    operator ::System::Xml::Serialization::IXmlSerializable() noexcept {
      return *reinterpret_cast<::System::Xml::Serialization::IXmlSerializable*>(this);
    }
    // Creating interface conversion operator: operator ::System::ComponentModel::ISupportInitializeNotification
    operator ::System::ComponentModel::ISupportInitializeNotification() noexcept {
      return *reinterpret_cast<::System::ComponentModel::ISupportInitializeNotification*>(this);
    }
    // Creating interface conversion operator: operator ::System::Runtime::Serialization::ISerializable
    operator ::System::Runtime::Serialization::ISerializable() noexcept {
      return *reinterpret_cast<::System::Runtime::Serialization::ISerializable*>(this);
    }
    // Get static field: static private System.Int32 s_objectTypeCount
    static int _get_s_objectTypeCount();
    // Set static field: static private System.Int32 s_objectTypeCount
    static void _set_s_objectTypeCount(int value);
    // Get static field: static private System.Xml.Schema.XmlSchemaComplexType s_schemaTypeForWSDL
    static ::System::Xml::Schema::XmlSchemaComplexType* _get_s_schemaTypeForWSDL();
    // Set static field: static private System.Xml.Schema.XmlSchemaComplexType s_schemaTypeForWSDL
    static void _set_s_schemaTypeForWSDL(::System::Xml::Schema::XmlSchemaComplexType* value);
    // Get instance field reference: private System.Data.DataViewManager _defaultViewManager
    [[deprecated("Use field access instead!")]] ::System::Data::DataViewManager*& dyn__defaultViewManager();
    // Get instance field reference: private readonly System.Data.DataTableCollection _tableCollection
    [[deprecated("Use field access instead!")]] ::System::Data::DataTableCollection*& dyn__tableCollection();
    // Get instance field reference: private readonly System.Data.DataRelationCollection _relationCollection
    [[deprecated("Use field access instead!")]] ::System::Data::DataRelationCollection*& dyn__relationCollection();
    // Get instance field reference: System.Data.PropertyCollection _extendedProperties
    [[deprecated("Use field access instead!")]] ::System::Data::PropertyCollection*& dyn__extendedProperties();
    // Get instance field reference: private System.String _dataSetName
    [[deprecated("Use field access instead!")]] ::StringW& dyn__dataSetName();
    // Get instance field reference: private System.String _datasetPrefix
    [[deprecated("Use field access instead!")]] ::StringW& dyn__datasetPrefix();
    // Get instance field reference: System.String _namespaceURI
    [[deprecated("Use field access instead!")]] ::StringW& dyn__namespaceURI();
    // Get instance field reference: private System.Boolean _enforceConstraints
    [[deprecated("Use field access instead!")]] bool& dyn__enforceConstraints();
    // Get instance field reference: private System.Boolean _caseSensitive
    [[deprecated("Use field access instead!")]] bool& dyn__caseSensitive();
    // Get instance field reference: private System.Globalization.CultureInfo _culture
    [[deprecated("Use field access instead!")]] ::System::Globalization::CultureInfo*& dyn__culture();
    // Get instance field reference: private System.Boolean _cultureUserSet
    [[deprecated("Use field access instead!")]] bool& dyn__cultureUserSet();
    // Get instance field reference: System.Boolean _fInReadXml
    [[deprecated("Use field access instead!")]] bool& dyn__fInReadXml();
    // Get instance field reference: System.Boolean _fInLoadDiffgram
    [[deprecated("Use field access instead!")]] bool& dyn__fInLoadDiffgram();
    // Get instance field reference: System.Boolean _fTopLevelTable
    [[deprecated("Use field access instead!")]] bool& dyn__fTopLevelTable();
    // Get instance field reference: System.Boolean _fInitInProgress
    [[deprecated("Use field access instead!")]] bool& dyn__fInitInProgress();
    // Get instance field reference: System.Boolean _fEnableCascading
    [[deprecated("Use field access instead!")]] bool& dyn__fEnableCascading();
    // Get instance field reference: System.Boolean _fIsSchemaLoading
    [[deprecated("Use field access instead!")]] bool& dyn__fIsSchemaLoading();
    // Get instance field reference: System.String _mainTableName
    [[deprecated("Use field access instead!")]] ::StringW& dyn__mainTableName();
    // Get instance field reference: private System.Data.SerializationFormat _remotingFormat
    [[deprecated("Use field access instead!")]] ::System::Data::SerializationFormat& dyn__remotingFormat();
    // Get instance field reference: private System.Object _defaultViewManagerLock
    [[deprecated("Use field access instead!")]] ::Il2CppObject*& dyn__defaultViewManagerLock();
    // Get instance field reference: private readonly System.Int32 _objectID
    [[deprecated("Use field access instead!")]] int& dyn__objectID();
    // Get instance field reference: System.Boolean _useDataSetSchemaOnly
    [[deprecated("Use field access instead!")]] bool& dyn__useDataSetSchemaOnly();
    // Get instance field reference: System.Boolean _udtIsWrapped
    [[deprecated("Use field access instead!")]] bool& dyn__udtIsWrapped();
    // Get instance field reference: private System.ComponentModel.PropertyChangedEventHandler PropertyChanging
    [[deprecated("Use field access instead!")]] ::System::ComponentModel::PropertyChangedEventHandler*& dyn_PropertyChanging();
    // Get instance field reference: private System.Data.MergeFailedEventHandler MergeFailed
    [[deprecated("Use field access instead!")]] ::System::Data::MergeFailedEventHandler*& dyn_MergeFailed();
    // Get instance field reference: private System.Data.DataRowCreatedEventHandler DataRowCreated
    [[deprecated("Use field access instead!")]] ::System::Data::DataRowCreatedEventHandler*& dyn_DataRowCreated();
    // Get instance field reference: private System.Data.DataSetClearEventhandler ClearFunctionCalled
    [[deprecated("Use field access instead!")]] ::System::Data::DataSetClearEventhandler*& dyn_ClearFunctionCalled();
    // Get instance field reference: private System.EventHandler Initialized
    [[deprecated("Use field access instead!")]] ::System::EventHandler*& dyn_Initialized();
    // public System.Void .ctor()
    // Offset: 0x4C3EDE4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DataSet* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DataSet*, creationType>()));
    }
    // public System.Void .ctor(System.String dataSetName)
    // Offset: 0x4C3F1F0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DataSet* New_ctor(::StringW dataSetName) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DataSet*, creationType>(dataSetName)));
    }
    // public System.Data.SerializationFormat get_RemotingFormat()
    // Offset: 0x4C3F378
    ::System::Data::SerializationFormat get_RemotingFormat();
    // public System.Void set_RemotingFormat(System.Data.SerializationFormat value)
    // Offset: 0x4C3F380
    void set_RemotingFormat(::System::Data::SerializationFormat value);
    // public System.Data.SchemaSerializationMode get_SchemaSerializationMode()
    // Offset: 0x4C3F550
    ::System::Data::SchemaSerializationMode get_SchemaSerializationMode();
    // protected System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    // Offset: 0x4C3F558
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DataSet* New_ctor(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DataSet*, creationType>(info, context)));
    }
    // protected System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context, System.Boolean ConstructSchema)
    // Offset: 0x4C3F560
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DataSet* New_ctor(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context, bool ConstructSchema) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DataSet*, creationType>(info, context, ConstructSchema)));
    }
    // public System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    // Offset: 0x4C3F7A0
    void GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context);
    // protected System.Void InitializeDerivedDataSet()
    // Offset: 0x4C3FDB8
    void InitializeDerivedDataSet();
    // private System.Void SerializeDataSet(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context, System.Data.SerializationFormat remotingFormat)
    // Offset: 0x4C3F7A8
    void SerializeDataSet(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context, ::System::Data::SerializationFormat remotingFormat);
    // System.Void DeserializeDataSet(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context, System.Data.SerializationFormat remotingFormat, System.Data.SchemaSerializationMode schemaSerializationMode)
    // Offset: 0x4C3F758
    void DeserializeDataSet(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context, ::System::Data::SerializationFormat remotingFormat, ::System::Data::SchemaSerializationMode schemaSerializationMode);
    // private System.Void DeserializeDataSetSchema(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context, System.Data.SerializationFormat remotingFormat, System.Data.SchemaSerializationMode schemaSerializationMode)
    // Offset: 0x4C40ACC
    void DeserializeDataSetSchema(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context, ::System::Data::SerializationFormat remotingFormat, ::System::Data::SchemaSerializationMode schemaSerializationMode);
    // private System.Void DeserializeDataSetData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context, System.Data.SerializationFormat remotingFormat)
    // Offset: 0x4C40FB0
    void DeserializeDataSetData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context, ::System::Data::SerializationFormat remotingFormat);
    // private System.Void SerializeDataSetProperties(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    // Offset: 0x4C3FDBC
    void SerializeDataSetProperties(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context);
    // private System.Void DeserializeDataSetProperties(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    // Offset: 0x4C41180
    void DeserializeDataSetProperties(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context);
    // private System.Void SerializeRelations(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    // Offset: 0x4C3FF2C
    void SerializeRelations(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context);
    // private System.Void DeserializeRelations(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    // Offset: 0x4C41718
    void DeserializeRelations(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context);
    // System.Void FailedEnableConstraints()
    // Offset: 0x4C42A2C
    void FailedEnableConstraints();
    // public System.Boolean get_CaseSensitive()
    // Offset: 0x4C42BE4
    bool get_CaseSensitive();
    // public System.Void set_CaseSensitive(System.Boolean value)
    // Offset: 0x4C42BEC
    void set_CaseSensitive(bool value);
    // private System.Boolean System.ComponentModel.IListSource.get_ContainsListCollection()
    // Offset: 0x4C43318
    bool System_ComponentModel_IListSource_get_ContainsListCollection();
    // public System.Data.DataViewManager get_DefaultViewManager()
    // Offset: 0x4C43320
    ::System::Data::DataViewManager* get_DefaultViewManager();
    // public System.Boolean get_EnforceConstraints()
    // Offset: 0x4C43444
    bool get_EnforceConstraints();
    // public System.Void set_EnforceConstraints(System.Boolean value)
    // Offset: 0x4C42A5C
    void set_EnforceConstraints(bool value);
    // System.Void RestoreEnforceConstraints(System.Boolean value)
    // Offset: 0x4C43C04
    void RestoreEnforceConstraints(bool value);
    // System.Void EnableConstraints()
    // Offset: 0x4C4344C
    void EnableConstraints();
    // public System.String get_DataSetName()
    // Offset: 0x4C43C10
    ::StringW get_DataSetName();
    // public System.Void set_DataSetName(System.String value)
    // Offset: 0x4C3F218
    void set_DataSetName(::StringW value);
    // public System.String get_Namespace()
    // Offset: 0x4C43C90
    ::StringW get_Namespace();
    // public System.Void set_Namespace(System.String value)
    // Offset: 0x4C43C98
    void set_Namespace(::StringW value);
    // public System.String get_Prefix()
    // Offset: 0x4C442F4
    ::StringW get_Prefix();
    // public System.Void set_Prefix(System.String value)
    // Offset: 0x4C442FC
    void set_Prefix(::StringW value);
    // public System.Data.PropertyCollection get_ExtendedProperties()
    // Offset: 0x4C428D8
    ::System::Data::PropertyCollection* get_ExtendedProperties();
    // public System.Boolean get_IsInitialized()
    // Offset: 0x4C44434
    bool get_IsInitialized();
    // public System.Globalization.CultureInfo get_Locale()
    // Offset: 0x4C44444
    ::System::Globalization::CultureInfo* get_Locale();
    // public System.Void set_Locale(System.Globalization.CultureInfo value)
    // Offset: 0x4C4444C
    void set_Locale(::System::Globalization::CultureInfo* value);
    // System.Void SetLocaleValue(System.Globalization.CultureInfo value, System.Boolean userSet)
    // Offset: 0x4C445EC
    void SetLocaleValue(::System::Globalization::CultureInfo* value, bool userSet);
    // System.Boolean ShouldSerializeLocale()
    // Offset: 0x4C451F4
    bool ShouldSerializeLocale();
    // public System.Data.DataRelationCollection get_Relations()
    // Offset: 0x4C453C0
    ::System::Data::DataRelationCollection* get_Relations();
    // public System.Data.DataTableCollection get_Tables()
    // Offset: 0x4C453C8
    ::System::Data::DataTableCollection* get_Tables();
    // public System.Void add_Initialized(System.EventHandler value)
    // Offset: 0x4C453D0
    void add_Initialized(::System::EventHandler* value);
    // public System.Void remove_Initialized(System.EventHandler value)
    // Offset: 0x4C4546C
    void remove_Initialized(::System::EventHandler* value);
    // public System.Void BeginInit()
    // Offset: 0x4C45508
    void BeginInit();
    // public System.Void EndInit()
    // Offset: 0x4C45514
    void EndInit();
    // public System.Void Clear()
    // Offset: 0x4C45740
    void Clear();
    // public System.Data.DataSet Clone()
    // Offset: 0x4C45970
    ::System::Data::DataSet* Clone();
    // System.Int32 EstimatedXmlStringSize()
    // Offset: 0x4C40798
    int EstimatedXmlStringSize();
    // private System.Collections.IList System.ComponentModel.IListSource.GetList()
    // Offset: 0x4C469C4
    ::System::Collections::IList* System_ComponentModel_IListSource_GetList();
    // System.String GetRemotingDiffGram(System.Data.DataTable table)
    // Offset: 0x4C469C8
    ::StringW GetRemotingDiffGram(::System::Data::DataTable* table);
    // System.String GetXmlSchemaForRemoting(System.Data.DataTable table)
    // Offset: 0x4C40600
    ::StringW GetXmlSchemaForRemoting(::System::Data::DataTable* table);
    // public System.Void ReadXmlSchema(System.Xml.XmlReader reader)
    // Offset: 0x4C46AF8
    void ReadXmlSchema(::System::Xml::XmlReader* reader);
    // System.Void ReadXmlSchema(System.Xml.XmlReader reader, System.Boolean denyResolving)
    // Offset: 0x4C41FF0
    void ReadXmlSchema(::System::Xml::XmlReader* reader, bool denyResolving);
    // System.Boolean MoveToElement(System.Xml.XmlReader reader, System.Int32 depth)
    // Offset: 0x4C46F00
    bool MoveToElement(::System::Xml::XmlReader* reader, int depth);
    // static private System.Void MoveToElement(System.Xml.XmlReader reader)
    // Offset: 0x4C473AC
    static void MoveToElement(::System::Xml::XmlReader* reader);
    // System.Void ReadEndElement(System.Xml.XmlReader reader)
    // Offset: 0x4C46FB4
    void ReadEndElement(::System::Xml::XmlReader* reader);
    // System.Void ReadXSDSchema(System.Xml.XmlReader reader, System.Boolean denyResolving)
    // Offset: 0x4C46C58
    void ReadXSDSchema(::System::Xml::XmlReader* reader, bool denyResolving);
    // System.Void ReadXDRSchema(System.Xml.XmlReader reader)
    // Offset: 0x4C46B00
    void ReadXDRSchema(::System::Xml::XmlReader* reader);
    // private System.Void WriteXmlSchema(System.Xml.XmlWriter writer, System.Data.SchemaFormat schemaFormat, System.Converter`2<System.Type,System.String> multipleTargetConverter)
    // Offset: 0x4C47424
    void WriteXmlSchema(::System::Xml::XmlWriter* writer, ::System::Data::SchemaFormat schemaFormat, ::System::Converter_2<::System::Type*, ::StringW>* multipleTargetConverter);
    // public System.Data.XmlReadMode ReadXml(System.Xml.XmlReader reader)
    // Offset: 0x4C47660
    ::System::Data::XmlReadMode ReadXml(::System::Xml::XmlReader* reader);
    // System.Data.XmlReadMode ReadXml(System.Xml.XmlReader reader, System.Boolean denyResolving)
    // Offset: 0x4C47668
    ::System::Data::XmlReadMode ReadXml(::System::Xml::XmlReader* reader, bool denyResolving);
    // System.Void InferSchema(System.Xml.XmlDocument xdoc, System.String[] excludedNamespaces, System.Data.XmlReadMode mode)
    // Offset: 0x4C47048
    void InferSchema(::System::Xml::XmlDocument* xdoc, ::ArrayW<::StringW> excludedNamespaces, ::System::Data::XmlReadMode mode);
    // private System.Boolean IsEmpty()
    // Offset: 0x4C49B9C
    bool IsEmpty();
    // private System.Void ReadXmlDiffgram(System.Xml.XmlReader reader)
    // Offset: 0x4C48810
    void ReadXmlDiffgram(::System::Xml::XmlReader* reader);
    // public System.Data.XmlReadMode ReadXml(System.Xml.XmlReader reader, System.Data.XmlReadMode mode)
    // Offset: 0x4C428D0
    ::System::Data::XmlReadMode ReadXml(::System::Xml::XmlReader* reader, ::System::Data::XmlReadMode mode);
    // System.Data.XmlReadMode ReadXml(System.Xml.XmlReader reader, System.Data.XmlReadMode mode, System.Boolean denyResolving)
    // Offset: 0x4C4A010
    ::System::Data::XmlReadMode ReadXml(::System::Xml::XmlReader* reader, ::System::Data::XmlReadMode mode, bool denyResolving);
    // public System.Void WriteXml(System.Xml.XmlWriter writer, System.Data.XmlWriteMode mode)
    // Offset: 0x4C408B0
    void WriteXml(::System::Xml::XmlWriter* writer, ::System::Data::XmlWriteMode mode);
    // public System.Void Merge(System.Data.DataSet dataSet)
    // Offset: 0x4C49E8C
    void Merge(::System::Data::DataSet* dataSet);
    // public System.Void Merge(System.Data.DataSet dataSet, System.Boolean preserveChanges, System.Data.MissingSchemaAction missingSchemaAction)
    // Offset: 0x4C4AE3C
    void Merge(::System::Data::DataSet* dataSet, bool preserveChanges, ::System::Data::MissingSchemaAction missingSchemaAction);
    // protected System.Void OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs pcevent)
    // Offset: 0x4C4B0AC
    void OnPropertyChanging(::System::ComponentModel::PropertyChangedEventArgs* pcevent);
    // System.Void OnMergeFailed(System.Data.MergeFailedEventArgs mfevent)
    // Offset: 0x4C4B0D4
    void OnMergeFailed(::System::Data::MergeFailedEventArgs* mfevent);
    // System.Void RaiseMergeFailed(System.Data.DataTable table, System.String conflict, System.Data.MissingSchemaAction missingSchemaAction)
    // Offset: 0x4C4B134
    void RaiseMergeFailed(::System::Data::DataTable* table, ::StringW conflict, ::System::Data::MissingSchemaAction missingSchemaAction);
    // System.Void OnDataRowCreated(System.Data.DataRow row)
    // Offset: 0x4C4B1DC
    void OnDataRowCreated(::System::Data::DataRow* row);
    // System.Void OnClearFunctionCalled(System.Data.DataTable table)
    // Offset: 0x4C45948
    void OnClearFunctionCalled(::System::Data::DataTable* table);
    // private System.Void OnInitialized()
    // Offset: 0x4C456C0
    void OnInitialized();
    // protected internal System.Void OnRemoveTable(System.Data.DataTable table)
    // Offset: 0x4C4B204
    void OnRemoveTable(::System::Data::DataTable* table);
    // System.Void OnRemovedTable(System.Data.DataTable table)
    // Offset: 0x4C4B208
    void OnRemovedTable(::System::Data::DataTable* table);
    // protected System.Void OnRemoveRelation(System.Data.DataRelation relation)
    // Offset: 0x4C4B234
    void OnRemoveRelation(::System::Data::DataRelation* relation);
    // System.Void OnRemoveRelationHack(System.Data.DataRelation relation)
    // Offset: 0x4C39674
    void OnRemoveRelationHack(::System::Data::DataRelation* relation);
    // protected internal System.Void RaisePropertyChanging(System.String name)
    // Offset: 0x4C43C18
    void RaisePropertyChanging(::StringW name);
    // System.Data.DataTable[] TopLevelTables()
    // Offset: 0x4C4B238
    ::ArrayW<::System::Data::DataTable*> TopLevelTables();
    // System.Data.DataTable[] TopLevelTables(System.Boolean forSchema)
    // Offset: 0x4C4B240
    ::ArrayW<::System::Data::DataTable*> TopLevelTables(bool forSchema);
    // public System.Void Reset()
    // Offset: 0x4C4B528
    void Reset();
    // System.Boolean ValidateCaseConstraint()
    // Offset: 0x4C42F1C
    bool ValidateCaseConstraint();
    // System.Boolean ValidateLocaleConstraint()
    // Offset: 0x4C44DA0
    bool ValidateLocaleConstraint();
    // System.Data.DataTable FindTable(System.Data.DataTable baseTable, System.ComponentModel.PropertyDescriptor[] props, System.Int32 propStart)
    // Offset: 0x4C4BAB0
    ::System::Data::DataTable* FindTable(::System::Data::DataTable* baseTable, ::ArrayW<::System::ComponentModel::PropertyDescriptor*> props, int propStart);
    // protected System.Void ReadXmlSerializable(System.Xml.XmlReader reader)
    // Offset: 0x4C4BBA8
    void ReadXmlSerializable(::System::Xml::XmlReader* reader);
    // static public System.Xml.Schema.XmlSchemaComplexType GetDataSetSchema(System.Xml.Schema.XmlSchemaSet schemaSet)
    // Offset: 0x4C4BE94
    static ::System::Xml::Schema::XmlSchemaComplexType* GetDataSetSchema(::System::Xml::Schema::XmlSchemaSet* schemaSet);
    // private System.Xml.Schema.XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema()
    // Offset: 0x4C4C110
    ::System::Xml::Schema::XmlSchema* System_Xml_Serialization_IXmlSerializable_GetSchema();
    // private System.Void System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader reader)
    // Offset: 0x4C4C2E4
    void System_Xml_Serialization_IXmlSerializable_ReadXml(::System::Xml::XmlReader* reader);
    // private System.Void System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter writer)
    // Offset: 0x4C4C534
    void System_Xml_Serialization_IXmlSerializable_WriteXml(::System::Xml::XmlWriter* writer);
    // System.String get_MainTableName()
    // Offset: 0x4C4C568
    ::StringW get_MainTableName();
    // System.Void set_MainTableName(System.String value)
    // Offset: 0x4C4C570
    void set_MainTableName(::StringW value);
    // System.Int32 get_ObjectID()
    // Offset: 0x4C4C578
    int get_ObjectID();
    // public override System.ComponentModel.ISite get_Site()
    // Offset: 0x4C451FC
    // Implemented from: System.ComponentModel.MarshalByValueComponent
    // Base method: System.ComponentModel.ISite MarshalByValueComponent::get_Site()
    ::System::ComponentModel::ISite* get_Site();
    // public override System.Void set_Site(System.ComponentModel.ISite value)
    // Offset: 0x4C45204
    // Implemented from: System.ComponentModel.MarshalByValueComponent
    // Base method: System.Void MarshalByValueComponent::set_Site(System.ComponentModel.ISite value)
    void set_Site(::System::ComponentModel::ISite* value);
  }; // System.Data.DataSet
  #pragma pack(pop)
  static check_size<sizeof(DataSet), 176 + sizeof(::System::EventHandler*)> __System_Data_DataSetSizeCheck;
  static_assert(sizeof(DataSet) == 0xB8);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Data::DataSet::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Data::DataSet::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Data::DataSet::get_RemotingFormat
// Il2CppName: get_RemotingFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::SerializationFormat (System::Data::DataSet::*)()>(&System::Data::DataSet::get_RemotingFormat)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "get_RemotingFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::set_RemotingFormat
// Il2CppName: set_RemotingFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)(::System::Data::SerializationFormat)>(&System::Data::DataSet::set_RemotingFormat)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Data", "SerializationFormat")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "set_RemotingFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::get_SchemaSerializationMode
// Il2CppName: get_SchemaSerializationMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::SchemaSerializationMode (System::Data::DataSet::*)()>(&System::Data::DataSet::get_SchemaSerializationMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "get_SchemaSerializationMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Data::DataSet::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Data::DataSet::GetObjectData
// Il2CppName: GetObjectData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)(::System::Runtime::Serialization::SerializationInfo*, ::System::Runtime::Serialization::StreamingContext)>(&System::Data::DataSet::GetObjectData)> {
  static const MethodInfo* get() {
    static auto* info = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "SerializationInfo")->byval_arg;
    static auto* context = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "StreamingContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "GetObjectData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{info, context});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::InitializeDerivedDataSet
// Il2CppName: InitializeDerivedDataSet
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)()>(&System::Data::DataSet::InitializeDerivedDataSet)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "InitializeDerivedDataSet", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::SerializeDataSet
// Il2CppName: SerializeDataSet
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)(::System::Runtime::Serialization::SerializationInfo*, ::System::Runtime::Serialization::StreamingContext, ::System::Data::SerializationFormat)>(&System::Data::DataSet::SerializeDataSet)> {
  static const MethodInfo* get() {
    static auto* info = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "SerializationInfo")->byval_arg;
    static auto* context = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "StreamingContext")->byval_arg;
    static auto* remotingFormat = &::il2cpp_utils::GetClassFromName("System.Data", "SerializationFormat")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "SerializeDataSet", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{info, context, remotingFormat});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::DeserializeDataSet
// Il2CppName: DeserializeDataSet
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)(::System::Runtime::Serialization::SerializationInfo*, ::System::Runtime::Serialization::StreamingContext, ::System::Data::SerializationFormat, ::System::Data::SchemaSerializationMode)>(&System::Data::DataSet::DeserializeDataSet)> {
  static const MethodInfo* get() {
    static auto* info = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "SerializationInfo")->byval_arg;
    static auto* context = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "StreamingContext")->byval_arg;
    static auto* remotingFormat = &::il2cpp_utils::GetClassFromName("System.Data", "SerializationFormat")->byval_arg;
    static auto* schemaSerializationMode = &::il2cpp_utils::GetClassFromName("System.Data", "SchemaSerializationMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "DeserializeDataSet", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{info, context, remotingFormat, schemaSerializationMode});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::DeserializeDataSetSchema
// Il2CppName: DeserializeDataSetSchema
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)(::System::Runtime::Serialization::SerializationInfo*, ::System::Runtime::Serialization::StreamingContext, ::System::Data::SerializationFormat, ::System::Data::SchemaSerializationMode)>(&System::Data::DataSet::DeserializeDataSetSchema)> {
  static const MethodInfo* get() {
    static auto* info = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "SerializationInfo")->byval_arg;
    static auto* context = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "StreamingContext")->byval_arg;
    static auto* remotingFormat = &::il2cpp_utils::GetClassFromName("System.Data", "SerializationFormat")->byval_arg;
    static auto* schemaSerializationMode = &::il2cpp_utils::GetClassFromName("System.Data", "SchemaSerializationMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "DeserializeDataSetSchema", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{info, context, remotingFormat, schemaSerializationMode});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::DeserializeDataSetData
// Il2CppName: DeserializeDataSetData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)(::System::Runtime::Serialization::SerializationInfo*, ::System::Runtime::Serialization::StreamingContext, ::System::Data::SerializationFormat)>(&System::Data::DataSet::DeserializeDataSetData)> {
  static const MethodInfo* get() {
    static auto* info = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "SerializationInfo")->byval_arg;
    static auto* context = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "StreamingContext")->byval_arg;
    static auto* remotingFormat = &::il2cpp_utils::GetClassFromName("System.Data", "SerializationFormat")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "DeserializeDataSetData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{info, context, remotingFormat});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::SerializeDataSetProperties
// Il2CppName: SerializeDataSetProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)(::System::Runtime::Serialization::SerializationInfo*, ::System::Runtime::Serialization::StreamingContext)>(&System::Data::DataSet::SerializeDataSetProperties)> {
  static const MethodInfo* get() {
    static auto* info = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "SerializationInfo")->byval_arg;
    static auto* context = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "StreamingContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "SerializeDataSetProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{info, context});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::DeserializeDataSetProperties
// Il2CppName: DeserializeDataSetProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)(::System::Runtime::Serialization::SerializationInfo*, ::System::Runtime::Serialization::StreamingContext)>(&System::Data::DataSet::DeserializeDataSetProperties)> {
  static const MethodInfo* get() {
    static auto* info = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "SerializationInfo")->byval_arg;
    static auto* context = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "StreamingContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "DeserializeDataSetProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{info, context});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::SerializeRelations
// Il2CppName: SerializeRelations
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)(::System::Runtime::Serialization::SerializationInfo*, ::System::Runtime::Serialization::StreamingContext)>(&System::Data::DataSet::SerializeRelations)> {
  static const MethodInfo* get() {
    static auto* info = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "SerializationInfo")->byval_arg;
    static auto* context = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "StreamingContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "SerializeRelations", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{info, context});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::DeserializeRelations
// Il2CppName: DeserializeRelations
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)(::System::Runtime::Serialization::SerializationInfo*, ::System::Runtime::Serialization::StreamingContext)>(&System::Data::DataSet::DeserializeRelations)> {
  static const MethodInfo* get() {
    static auto* info = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "SerializationInfo")->byval_arg;
    static auto* context = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "StreamingContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "DeserializeRelations", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{info, context});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::FailedEnableConstraints
// Il2CppName: FailedEnableConstraints
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)()>(&System::Data::DataSet::FailedEnableConstraints)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "FailedEnableConstraints", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::get_CaseSensitive
// Il2CppName: get_CaseSensitive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataSet::*)()>(&System::Data::DataSet::get_CaseSensitive)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "get_CaseSensitive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::set_CaseSensitive
// Il2CppName: set_CaseSensitive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)(bool)>(&System::Data::DataSet::set_CaseSensitive)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "set_CaseSensitive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::System_ComponentModel_IListSource_get_ContainsListCollection
// Il2CppName: System.ComponentModel.IListSource.get_ContainsListCollection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataSet::*)()>(&System::Data::DataSet::System_ComponentModel_IListSource_get_ContainsListCollection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "System.ComponentModel.IListSource.get_ContainsListCollection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::get_DefaultViewManager
// Il2CppName: get_DefaultViewManager
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::DataViewManager* (System::Data::DataSet::*)()>(&System::Data::DataSet::get_DefaultViewManager)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "get_DefaultViewManager", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::get_EnforceConstraints
// Il2CppName: get_EnforceConstraints
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataSet::*)()>(&System::Data::DataSet::get_EnforceConstraints)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "get_EnforceConstraints", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::set_EnforceConstraints
// Il2CppName: set_EnforceConstraints
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)(bool)>(&System::Data::DataSet::set_EnforceConstraints)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "set_EnforceConstraints", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::RestoreEnforceConstraints
// Il2CppName: RestoreEnforceConstraints
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)(bool)>(&System::Data::DataSet::RestoreEnforceConstraints)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "RestoreEnforceConstraints", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::EnableConstraints
// Il2CppName: EnableConstraints
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)()>(&System::Data::DataSet::EnableConstraints)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "EnableConstraints", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::get_DataSetName
// Il2CppName: get_DataSetName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Data::DataSet::*)()>(&System::Data::DataSet::get_DataSetName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "get_DataSetName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::set_DataSetName
// Il2CppName: set_DataSetName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)(::StringW)>(&System::Data::DataSet::set_DataSetName)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "set_DataSetName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::get_Namespace
// Il2CppName: get_Namespace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Data::DataSet::*)()>(&System::Data::DataSet::get_Namespace)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "get_Namespace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::set_Namespace
// Il2CppName: set_Namespace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)(::StringW)>(&System::Data::DataSet::set_Namespace)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "set_Namespace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::get_Prefix
// Il2CppName: get_Prefix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Data::DataSet::*)()>(&System::Data::DataSet::get_Prefix)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "get_Prefix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::set_Prefix
// Il2CppName: set_Prefix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)(::StringW)>(&System::Data::DataSet::set_Prefix)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "set_Prefix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::get_ExtendedProperties
// Il2CppName: get_ExtendedProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::PropertyCollection* (System::Data::DataSet::*)()>(&System::Data::DataSet::get_ExtendedProperties)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "get_ExtendedProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::get_IsInitialized
// Il2CppName: get_IsInitialized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataSet::*)()>(&System::Data::DataSet::get_IsInitialized)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "get_IsInitialized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::get_Locale
// Il2CppName: get_Locale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Globalization::CultureInfo* (System::Data::DataSet::*)()>(&System::Data::DataSet::get_Locale)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "get_Locale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::set_Locale
// Il2CppName: set_Locale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)(::System::Globalization::CultureInfo*)>(&System::Data::DataSet::set_Locale)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Globalization", "CultureInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "set_Locale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::SetLocaleValue
// Il2CppName: SetLocaleValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)(::System::Globalization::CultureInfo*, bool)>(&System::Data::DataSet::SetLocaleValue)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Globalization", "CultureInfo")->byval_arg;
    static auto* userSet = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "SetLocaleValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, userSet});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::ShouldSerializeLocale
// Il2CppName: ShouldSerializeLocale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataSet::*)()>(&System::Data::DataSet::ShouldSerializeLocale)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "ShouldSerializeLocale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::get_Relations
// Il2CppName: get_Relations
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::DataRelationCollection* (System::Data::DataSet::*)()>(&System::Data::DataSet::get_Relations)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "get_Relations", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::get_Tables
// Il2CppName: get_Tables
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::DataTableCollection* (System::Data::DataSet::*)()>(&System::Data::DataSet::get_Tables)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "get_Tables", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::add_Initialized
// Il2CppName: add_Initialized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)(::System::EventHandler*)>(&System::Data::DataSet::add_Initialized)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "EventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "add_Initialized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::remove_Initialized
// Il2CppName: remove_Initialized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)(::System::EventHandler*)>(&System::Data::DataSet::remove_Initialized)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "EventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "remove_Initialized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::BeginInit
// Il2CppName: BeginInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)()>(&System::Data::DataSet::BeginInit)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "BeginInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::EndInit
// Il2CppName: EndInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)()>(&System::Data::DataSet::EndInit)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "EndInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::Clear
// Il2CppName: Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)()>(&System::Data::DataSet::Clear)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::Clone
// Il2CppName: Clone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::DataSet* (System::Data::DataSet::*)()>(&System::Data::DataSet::Clone)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "Clone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::EstimatedXmlStringSize
// Il2CppName: EstimatedXmlStringSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Data::DataSet::*)()>(&System::Data::DataSet::EstimatedXmlStringSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "EstimatedXmlStringSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::System_ComponentModel_IListSource_GetList
// Il2CppName: System.ComponentModel.IListSource.GetList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IList* (System::Data::DataSet::*)()>(&System::Data::DataSet::System_ComponentModel_IListSource_GetList)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "System.ComponentModel.IListSource.GetList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::GetRemotingDiffGram
// Il2CppName: GetRemotingDiffGram
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Data::DataSet::*)(::System::Data::DataTable*)>(&System::Data::DataSet::GetRemotingDiffGram)> {
  static const MethodInfo* get() {
    static auto* table = &::il2cpp_utils::GetClassFromName("System.Data", "DataTable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "GetRemotingDiffGram", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{table});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::GetXmlSchemaForRemoting
// Il2CppName: GetXmlSchemaForRemoting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Data::DataSet::*)(::System::Data::DataTable*)>(&System::Data::DataSet::GetXmlSchemaForRemoting)> {
  static const MethodInfo* get() {
    static auto* table = &::il2cpp_utils::GetClassFromName("System.Data", "DataTable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "GetXmlSchemaForRemoting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{table});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::ReadXmlSchema
// Il2CppName: ReadXmlSchema
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)(::System::Xml::XmlReader*)>(&System::Data::DataSet::ReadXmlSchema)> {
  static const MethodInfo* get() {
    static auto* reader = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlReader")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "ReadXmlSchema", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{reader});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::ReadXmlSchema
// Il2CppName: ReadXmlSchema
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)(::System::Xml::XmlReader*, bool)>(&System::Data::DataSet::ReadXmlSchema)> {
  static const MethodInfo* get() {
    static auto* reader = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlReader")->byval_arg;
    static auto* denyResolving = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "ReadXmlSchema", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{reader, denyResolving});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::MoveToElement
// Il2CppName: MoveToElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataSet::*)(::System::Xml::XmlReader*, int)>(&System::Data::DataSet::MoveToElement)> {
  static const MethodInfo* get() {
    static auto* reader = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlReader")->byval_arg;
    static auto* depth = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "MoveToElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{reader, depth});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::MoveToElement
// Il2CppName: MoveToElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Xml::XmlReader*)>(&System::Data::DataSet::MoveToElement)> {
  static const MethodInfo* get() {
    static auto* reader = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlReader")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "MoveToElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{reader});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::ReadEndElement
// Il2CppName: ReadEndElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)(::System::Xml::XmlReader*)>(&System::Data::DataSet::ReadEndElement)> {
  static const MethodInfo* get() {
    static auto* reader = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlReader")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "ReadEndElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{reader});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::ReadXSDSchema
// Il2CppName: ReadXSDSchema
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)(::System::Xml::XmlReader*, bool)>(&System::Data::DataSet::ReadXSDSchema)> {
  static const MethodInfo* get() {
    static auto* reader = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlReader")->byval_arg;
    static auto* denyResolving = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "ReadXSDSchema", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{reader, denyResolving});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::ReadXDRSchema
// Il2CppName: ReadXDRSchema
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)(::System::Xml::XmlReader*)>(&System::Data::DataSet::ReadXDRSchema)> {
  static const MethodInfo* get() {
    static auto* reader = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlReader")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "ReadXDRSchema", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{reader});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::WriteXmlSchema
// Il2CppName: WriteXmlSchema
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)(::System::Xml::XmlWriter*, ::System::Data::SchemaFormat, ::System::Converter_2<::System::Type*, ::StringW>*)>(&System::Data::DataSet::WriteXmlSchema)> {
  static const MethodInfo* get() {
    static auto* writer = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlWriter")->byval_arg;
    static auto* schemaFormat = &::il2cpp_utils::GetClassFromName("System.Data", "SchemaFormat")->byval_arg;
    static auto* multipleTargetConverter = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Converter`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Type"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "WriteXmlSchema", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{writer, schemaFormat, multipleTargetConverter});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::ReadXml
// Il2CppName: ReadXml
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::XmlReadMode (System::Data::DataSet::*)(::System::Xml::XmlReader*)>(&System::Data::DataSet::ReadXml)> {
  static const MethodInfo* get() {
    static auto* reader = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlReader")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "ReadXml", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{reader});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::ReadXml
// Il2CppName: ReadXml
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::XmlReadMode (System::Data::DataSet::*)(::System::Xml::XmlReader*, bool)>(&System::Data::DataSet::ReadXml)> {
  static const MethodInfo* get() {
    static auto* reader = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlReader")->byval_arg;
    static auto* denyResolving = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "ReadXml", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{reader, denyResolving});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::InferSchema
// Il2CppName: InferSchema
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)(::System::Xml::XmlDocument*, ::ArrayW<::StringW>, ::System::Data::XmlReadMode)>(&System::Data::DataSet::InferSchema)> {
  static const MethodInfo* get() {
    static auto* xdoc = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlDocument")->byval_arg;
    static auto* excludedNamespaces = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    static auto* mode = &::il2cpp_utils::GetClassFromName("System.Data", "XmlReadMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "InferSchema", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{xdoc, excludedNamespaces, mode});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::IsEmpty
// Il2CppName: IsEmpty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataSet::*)()>(&System::Data::DataSet::IsEmpty)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "IsEmpty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::ReadXmlDiffgram
// Il2CppName: ReadXmlDiffgram
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)(::System::Xml::XmlReader*)>(&System::Data::DataSet::ReadXmlDiffgram)> {
  static const MethodInfo* get() {
    static auto* reader = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlReader")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "ReadXmlDiffgram", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{reader});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::ReadXml
// Il2CppName: ReadXml
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::XmlReadMode (System::Data::DataSet::*)(::System::Xml::XmlReader*, ::System::Data::XmlReadMode)>(&System::Data::DataSet::ReadXml)> {
  static const MethodInfo* get() {
    static auto* reader = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlReader")->byval_arg;
    static auto* mode = &::il2cpp_utils::GetClassFromName("System.Data", "XmlReadMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "ReadXml", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{reader, mode});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::ReadXml
// Il2CppName: ReadXml
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::XmlReadMode (System::Data::DataSet::*)(::System::Xml::XmlReader*, ::System::Data::XmlReadMode, bool)>(&System::Data::DataSet::ReadXml)> {
  static const MethodInfo* get() {
    static auto* reader = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlReader")->byval_arg;
    static auto* mode = &::il2cpp_utils::GetClassFromName("System.Data", "XmlReadMode")->byval_arg;
    static auto* denyResolving = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "ReadXml", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{reader, mode, denyResolving});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::WriteXml
// Il2CppName: WriteXml
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)(::System::Xml::XmlWriter*, ::System::Data::XmlWriteMode)>(&System::Data::DataSet::WriteXml)> {
  static const MethodInfo* get() {
    static auto* writer = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlWriter")->byval_arg;
    static auto* mode = &::il2cpp_utils::GetClassFromName("System.Data", "XmlWriteMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "WriteXml", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{writer, mode});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::Merge
// Il2CppName: Merge
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)(::System::Data::DataSet*)>(&System::Data::DataSet::Merge)> {
  static const MethodInfo* get() {
    static auto* dataSet = &::il2cpp_utils::GetClassFromName("System.Data", "DataSet")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "Merge", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dataSet});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::Merge
// Il2CppName: Merge
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)(::System::Data::DataSet*, bool, ::System::Data::MissingSchemaAction)>(&System::Data::DataSet::Merge)> {
  static const MethodInfo* get() {
    static auto* dataSet = &::il2cpp_utils::GetClassFromName("System.Data", "DataSet")->byval_arg;
    static auto* preserveChanges = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* missingSchemaAction = &::il2cpp_utils::GetClassFromName("System.Data", "MissingSchemaAction")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "Merge", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dataSet, preserveChanges, missingSchemaAction});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::OnPropertyChanging
// Il2CppName: OnPropertyChanging
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)(::System::ComponentModel::PropertyChangedEventArgs*)>(&System::Data::DataSet::OnPropertyChanging)> {
  static const MethodInfo* get() {
    static auto* pcevent = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "PropertyChangedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "OnPropertyChanging", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pcevent});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::OnMergeFailed
// Il2CppName: OnMergeFailed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)(::System::Data::MergeFailedEventArgs*)>(&System::Data::DataSet::OnMergeFailed)> {
  static const MethodInfo* get() {
    static auto* mfevent = &::il2cpp_utils::GetClassFromName("System.Data", "MergeFailedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "OnMergeFailed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mfevent});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::RaiseMergeFailed
// Il2CppName: RaiseMergeFailed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)(::System::Data::DataTable*, ::StringW, ::System::Data::MissingSchemaAction)>(&System::Data::DataSet::RaiseMergeFailed)> {
  static const MethodInfo* get() {
    static auto* table = &::il2cpp_utils::GetClassFromName("System.Data", "DataTable")->byval_arg;
    static auto* conflict = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* missingSchemaAction = &::il2cpp_utils::GetClassFromName("System.Data", "MissingSchemaAction")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "RaiseMergeFailed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{table, conflict, missingSchemaAction});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::OnDataRowCreated
// Il2CppName: OnDataRowCreated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)(::System::Data::DataRow*)>(&System::Data::DataSet::OnDataRowCreated)> {
  static const MethodInfo* get() {
    static auto* row = &::il2cpp_utils::GetClassFromName("System.Data", "DataRow")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "OnDataRowCreated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{row});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::OnClearFunctionCalled
// Il2CppName: OnClearFunctionCalled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)(::System::Data::DataTable*)>(&System::Data::DataSet::OnClearFunctionCalled)> {
  static const MethodInfo* get() {
    static auto* table = &::il2cpp_utils::GetClassFromName("System.Data", "DataTable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "OnClearFunctionCalled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{table});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::OnInitialized
// Il2CppName: OnInitialized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)()>(&System::Data::DataSet::OnInitialized)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "OnInitialized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::OnRemoveTable
// Il2CppName: OnRemoveTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)(::System::Data::DataTable*)>(&System::Data::DataSet::OnRemoveTable)> {
  static const MethodInfo* get() {
    static auto* table = &::il2cpp_utils::GetClassFromName("System.Data", "DataTable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "OnRemoveTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{table});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::OnRemovedTable
// Il2CppName: OnRemovedTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)(::System::Data::DataTable*)>(&System::Data::DataSet::OnRemovedTable)> {
  static const MethodInfo* get() {
    static auto* table = &::il2cpp_utils::GetClassFromName("System.Data", "DataTable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "OnRemovedTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{table});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::OnRemoveRelation
// Il2CppName: OnRemoveRelation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)(::System::Data::DataRelation*)>(&System::Data::DataSet::OnRemoveRelation)> {
  static const MethodInfo* get() {
    static auto* relation = &::il2cpp_utils::GetClassFromName("System.Data", "DataRelation")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "OnRemoveRelation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{relation});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::OnRemoveRelationHack
// Il2CppName: OnRemoveRelationHack
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)(::System::Data::DataRelation*)>(&System::Data::DataSet::OnRemoveRelationHack)> {
  static const MethodInfo* get() {
    static auto* relation = &::il2cpp_utils::GetClassFromName("System.Data", "DataRelation")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "OnRemoveRelationHack", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{relation});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::RaisePropertyChanging
// Il2CppName: RaisePropertyChanging
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)(::StringW)>(&System::Data::DataSet::RaisePropertyChanging)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "RaisePropertyChanging", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::TopLevelTables
// Il2CppName: TopLevelTables
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::System::Data::DataTable*> (System::Data::DataSet::*)()>(&System::Data::DataSet::TopLevelTables)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "TopLevelTables", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::TopLevelTables
// Il2CppName: TopLevelTables
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::System::Data::DataTable*> (System::Data::DataSet::*)(bool)>(&System::Data::DataSet::TopLevelTables)> {
  static const MethodInfo* get() {
    static auto* forSchema = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "TopLevelTables", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{forSchema});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)()>(&System::Data::DataSet::Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::ValidateCaseConstraint
// Il2CppName: ValidateCaseConstraint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataSet::*)()>(&System::Data::DataSet::ValidateCaseConstraint)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "ValidateCaseConstraint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::ValidateLocaleConstraint
// Il2CppName: ValidateLocaleConstraint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataSet::*)()>(&System::Data::DataSet::ValidateLocaleConstraint)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "ValidateLocaleConstraint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::FindTable
// Il2CppName: FindTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::DataTable* (System::Data::DataSet::*)(::System::Data::DataTable*, ::ArrayW<::System::ComponentModel::PropertyDescriptor*>, int)>(&System::Data::DataSet::FindTable)> {
  static const MethodInfo* get() {
    static auto* baseTable = &::il2cpp_utils::GetClassFromName("System.Data", "DataTable")->byval_arg;
    static auto* props = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System.ComponentModel", "PropertyDescriptor"), 1)->byval_arg;
    static auto* propStart = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "FindTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{baseTable, props, propStart});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::ReadXmlSerializable
// Il2CppName: ReadXmlSerializable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)(::System::Xml::XmlReader*)>(&System::Data::DataSet::ReadXmlSerializable)> {
  static const MethodInfo* get() {
    static auto* reader = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlReader")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "ReadXmlSerializable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{reader});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::GetDataSetSchema
// Il2CppName: GetDataSetSchema
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::Schema::XmlSchemaComplexType* (*)(::System::Xml::Schema::XmlSchemaSet*)>(&System::Data::DataSet::GetDataSetSchema)> {
  static const MethodInfo* get() {
    static auto* schemaSet = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XmlSchemaSet")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "GetDataSetSchema", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{schemaSet});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::System_Xml_Serialization_IXmlSerializable_GetSchema
// Il2CppName: System.Xml.Serialization.IXmlSerializable.GetSchema
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Xml::Schema::XmlSchema* (System::Data::DataSet::*)()>(&System::Data::DataSet::System_Xml_Serialization_IXmlSerializable_GetSchema)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "System.Xml.Serialization.IXmlSerializable.GetSchema", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::System_Xml_Serialization_IXmlSerializable_ReadXml
// Il2CppName: System.Xml.Serialization.IXmlSerializable.ReadXml
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)(::System::Xml::XmlReader*)>(&System::Data::DataSet::System_Xml_Serialization_IXmlSerializable_ReadXml)> {
  static const MethodInfo* get() {
    static auto* reader = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlReader")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "System.Xml.Serialization.IXmlSerializable.ReadXml", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{reader});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::System_Xml_Serialization_IXmlSerializable_WriteXml
// Il2CppName: System.Xml.Serialization.IXmlSerializable.WriteXml
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)(::System::Xml::XmlWriter*)>(&System::Data::DataSet::System_Xml_Serialization_IXmlSerializable_WriteXml)> {
  static const MethodInfo* get() {
    static auto* writer = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlWriter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "System.Xml.Serialization.IXmlSerializable.WriteXml", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{writer});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::get_MainTableName
// Il2CppName: get_MainTableName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Data::DataSet::*)()>(&System::Data::DataSet::get_MainTableName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "get_MainTableName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::set_MainTableName
// Il2CppName: set_MainTableName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)(::StringW)>(&System::Data::DataSet::set_MainTableName)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "set_MainTableName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::get_ObjectID
// Il2CppName: get_ObjectID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Data::DataSet::*)()>(&System::Data::DataSet::get_ObjectID)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "get_ObjectID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::get_Site
// Il2CppName: get_Site
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::ComponentModel::ISite* (System::Data::DataSet::*)()>(&System::Data::DataSet::get_Site)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "get_Site", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataSet::set_Site
// Il2CppName: set_Site
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataSet::*)(::System::ComponentModel::ISite*)>(&System::Data::DataSet::set_Site)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "ISite")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataSet*), "set_Site", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
