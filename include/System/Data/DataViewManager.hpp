// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ComponentModel.MarshalByValueComponent
#include "System/ComponentModel/MarshalByValueComponent.hpp"
// Including type: System.ComponentModel.IBindingList
#include "System/ComponentModel/IBindingList.hpp"
// Including type: System.ComponentModel.ITypedList
#include "System/ComponentModel/ITypedList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Data
namespace System::Data {
  // Forward declaring type: DataViewSettingCollection
  class DataViewSettingCollection;
  // Forward declaring type: DataSet
  class DataSet;
  // Forward declaring type: DataViewManagerListItemTypeDescriptor
  class DataViewManagerListItemTypeDescriptor;
  // Forward declaring type: DataView
  class DataView;
  // Forward declaring type: DataTable
  class DataTable;
}
// Forward declaring namespace: System::ComponentModel
namespace System::ComponentModel {
  // Forward declaring type: ListChangedEventHandler
  class ListChangedEventHandler;
  // Forward declaring type: PropertyDescriptor
  class PropertyDescriptor;
  // Forward declaring type: ListSortDirection
  struct ListSortDirection;
  // Forward declaring type: PropertyDescriptorCollection
  class PropertyDescriptorCollection;
  // Forward declaring type: ListChangedEventArgs
  class ListChangedEventArgs;
  // Forward declaring type: CollectionChangeEventArgs
  class CollectionChangeEventArgs;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: NotSupportedException
  class NotSupportedException;
  // Forward declaring type: Array
  class Array;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: System.Data
namespace System::Data {
  // Forward declaring type: DataViewManager
  class DataViewManager;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Data::DataViewManager);
DEFINE_IL2CPP_ARG_TYPE(::System::Data::DataViewManager*, "System.Data", "DataViewManager");
// Type namespace: System.Data
namespace System::Data {
  // Size: 0x48
  #pragma pack(push, 1)
  // Autogenerated type: System.Data.DataViewManager
  // [TokenAttribute] Offset: FFFFFFFF
  class DataViewManager : public ::System::ComponentModel::MarshalByValueComponent/*, public ::System::ComponentModel::IBindingList, public ::System::ComponentModel::ITypedList*/ {
    public:
    public:
    // private System.Data.DataViewSettingCollection _dataViewSettingsCollection
    // Size: 0x8
    // Offset: 0x20
    ::System::Data::DataViewSettingCollection* dataViewSettingsCollection;
    // Field size check
    static_assert(sizeof(::System::Data::DataViewSettingCollection*) == 0x8);
    // private System.Data.DataSet _dataSet
    // Size: 0x8
    // Offset: 0x28
    ::System::Data::DataSet* dataSet;
    // Field size check
    static_assert(sizeof(::System::Data::DataSet*) == 0x8);
    // private System.Data.DataViewManagerListItemTypeDescriptor _item
    // Size: 0x8
    // Offset: 0x30
    ::System::Data::DataViewManagerListItemTypeDescriptor* item;
    // Field size check
    static_assert(sizeof(::System::Data::DataViewManagerListItemTypeDescriptor*) == 0x8);
    // private System.Boolean _locked
    // Size: 0x1
    // Offset: 0x38
    bool locked;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: locked and: nViews
    char __padding3[0x3] = {};
    // System.Int32 _nViews
    // Size: 0x4
    // Offset: 0x3C
    int nViews;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.ComponentModel.ListChangedEventHandler ListChanged
    // Size: 0x8
    // Offset: 0x40
    ::System::ComponentModel::ListChangedEventHandler* ListChanged;
    // Field size check
    static_assert(sizeof(::System::ComponentModel::ListChangedEventHandler*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::System::ComponentModel::IBindingList
    operator ::System::ComponentModel::IBindingList() noexcept {
      return *reinterpret_cast<::System::ComponentModel::IBindingList*>(this);
    }
    // Creating interface conversion operator: operator ::System::ComponentModel::ITypedList
    operator ::System::ComponentModel::ITypedList() noexcept {
      return *reinterpret_cast<::System::ComponentModel::ITypedList*>(this);
    }
    // Get static field: static private System.NotSupportedException s_notSupported
    static ::System::NotSupportedException* _get_s_notSupported();
    // Set static field: static private System.NotSupportedException s_notSupported
    static void _set_s_notSupported(::System::NotSupportedException* value);
    // Get instance field reference: private System.Data.DataViewSettingCollection _dataViewSettingsCollection
    [[deprecated("Use field access instead!")]] ::System::Data::DataViewSettingCollection*& dyn__dataViewSettingsCollection();
    // Get instance field reference: private System.Data.DataSet _dataSet
    [[deprecated("Use field access instead!")]] ::System::Data::DataSet*& dyn__dataSet();
    // Get instance field reference: private System.Data.DataViewManagerListItemTypeDescriptor _item
    [[deprecated("Use field access instead!")]] ::System::Data::DataViewManagerListItemTypeDescriptor*& dyn__item();
    // Get instance field reference: private System.Boolean _locked
    [[deprecated("Use field access instead!")]] bool& dyn__locked();
    // Get instance field reference: System.Int32 _nViews
    [[deprecated("Use field access instead!")]] int& dyn__nViews();
    // Get instance field reference: private System.ComponentModel.ListChangedEventHandler ListChanged
    [[deprecated("Use field access instead!")]] ::System::ComponentModel::ListChangedEventHandler*& dyn_ListChanged();
    // System.Void .ctor(System.Data.DataSet dataSet, System.Boolean locked)
    // Offset: 0x4C53B98
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DataViewManager* New_ctor(::System::Data::DataSet* dataSet, bool locked) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewManager::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DataViewManager*, creationType>(dataSet, locked)));
    }
    // public System.Data.DataSet get_DataSet()
    // Offset: 0x4C53E58
    ::System::Data::DataSet* get_DataSet();
    // public System.Data.DataViewSettingCollection get_DataViewSettings()
    // Offset: 0x4C53E60
    ::System::Data::DataViewSettingCollection* get_DataViewSettings();
    // private System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
    // Offset: 0x4C53E68
    ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator();
    // private System.Int32 System.Collections.ICollection.get_Count()
    // Offset: 0x4C53F44
    int System_Collections_ICollection_get_Count();
    // private System.Object System.Collections.ICollection.get_SyncRoot()
    // Offset: 0x4C53F4C
    ::Il2CppObject* System_Collections_ICollection_get_SyncRoot();
    // private System.Boolean System.Collections.ICollection.get_IsSynchronized()
    // Offset: 0x4C53F50
    bool System_Collections_ICollection_get_IsSynchronized();
    // private System.Boolean System.Collections.IList.get_IsReadOnly()
    // Offset: 0x4C53F58
    bool System_Collections_IList_get_IsReadOnly();
    // private System.Boolean System.Collections.IList.get_IsFixedSize()
    // Offset: 0x4C53F60
    bool System_Collections_IList_get_IsFixedSize();
    // private System.Void System.Collections.ICollection.CopyTo(System.Array array, System.Int32 index)
    // Offset: 0x4C53F68
    void System_Collections_ICollection_CopyTo(::System::Array* array, int index);
    // private System.Object System.Collections.IList.get_Item(System.Int32 index)
    // Offset: 0x4C53FF4
    ::Il2CppObject* System_Collections_IList_get_Item(int index);
    // private System.Void System.Collections.IList.set_Item(System.Int32 index, System.Object value)
    // Offset: 0x4C53FFC
    void System_Collections_IList_set_Item(int index, ::Il2CppObject* value);
    // private System.Int32 System.Collections.IList.Add(System.Object value)
    // Offset: 0x4C54024
    int System_Collections_IList_Add(::Il2CppObject* value);
    // private System.Void System.Collections.IList.Clear()
    // Offset: 0x4C5404C
    void System_Collections_IList_Clear();
    // private System.Boolean System.Collections.IList.Contains(System.Object value)
    // Offset: 0x4C54074
    bool System_Collections_IList_Contains(::Il2CppObject* value);
    // private System.Int32 System.Collections.IList.IndexOf(System.Object value)
    // Offset: 0x4C54084
    int System_Collections_IList_IndexOf(::Il2CppObject* value);
    // private System.Void System.Collections.IList.Insert(System.Int32 index, System.Object value)
    // Offset: 0x4C54098
    void System_Collections_IList_Insert(int index, ::Il2CppObject* value);
    // private System.Void System.Collections.IList.Remove(System.Object value)
    // Offset: 0x4C540C0
    void System_Collections_IList_Remove(::Il2CppObject* value);
    // private System.Void System.Collections.IList.RemoveAt(System.Int32 index)
    // Offset: 0x4C540E8
    void System_Collections_IList_RemoveAt(int index);
    // private System.Boolean System.ComponentModel.IBindingList.get_AllowNew()
    // Offset: 0x4C54110
    bool System_ComponentModel_IBindingList_get_AllowNew();
    // private System.Object System.ComponentModel.IBindingList.AddNew()
    // Offset: 0x4C54118
    ::Il2CppObject* System_ComponentModel_IBindingList_AddNew();
    // private System.Boolean System.ComponentModel.IBindingList.get_AllowEdit()
    // Offset: 0x4C54158
    bool System_ComponentModel_IBindingList_get_AllowEdit();
    // private System.Boolean System.ComponentModel.IBindingList.get_AllowRemove()
    // Offset: 0x4C54160
    bool System_ComponentModel_IBindingList_get_AllowRemove();
    // private System.Boolean System.ComponentModel.IBindingList.get_SupportsChangeNotification()
    // Offset: 0x4C54168
    bool System_ComponentModel_IBindingList_get_SupportsChangeNotification();
    // private System.Boolean System.ComponentModel.IBindingList.get_SupportsSearching()
    // Offset: 0x4C54170
    bool System_ComponentModel_IBindingList_get_SupportsSearching();
    // private System.Boolean System.ComponentModel.IBindingList.get_SupportsSorting()
    // Offset: 0x4C54178
    bool System_ComponentModel_IBindingList_get_SupportsSorting();
    // private System.Boolean System.ComponentModel.IBindingList.get_IsSorted()
    // Offset: 0x4C54180
    bool System_ComponentModel_IBindingList_get_IsSorted();
    // private System.ComponentModel.PropertyDescriptor System.ComponentModel.IBindingList.get_SortProperty()
    // Offset: 0x4C541C0
    ::System::ComponentModel::PropertyDescriptor* System_ComponentModel_IBindingList_get_SortProperty();
    // private System.ComponentModel.ListSortDirection System.ComponentModel.IBindingList.get_SortDirection()
    // Offset: 0x4C54200
    ::System::ComponentModel::ListSortDirection System_ComponentModel_IBindingList_get_SortDirection();
    // public System.Void add_ListChanged(System.ComponentModel.ListChangedEventHandler value)
    // Offset: 0x4C54240
    void add_ListChanged(::System::ComponentModel::ListChangedEventHandler* value);
    // public System.Void remove_ListChanged(System.ComponentModel.ListChangedEventHandler value)
    // Offset: 0x4C542DC
    void remove_ListChanged(::System::ComponentModel::ListChangedEventHandler* value);
    // private System.Void System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor property)
    // Offset: 0x4C54378
    void System_ComponentModel_IBindingList_AddIndex(::System::ComponentModel::PropertyDescriptor* property);
    // private System.Void System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor property, System.ComponentModel.ListSortDirection direction)
    // Offset: 0x4C5437C
    void System_ComponentModel_IBindingList_ApplySort(::System::ComponentModel::PropertyDescriptor* property, ::System::ComponentModel::ListSortDirection direction);
    // private System.Int32 System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor property, System.Object key)
    // Offset: 0x4C543BC
    int System_ComponentModel_IBindingList_Find(::System::ComponentModel::PropertyDescriptor* property, ::Il2CppObject* key);
    // private System.Void System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor property)
    // Offset: 0x4C543FC
    void System_ComponentModel_IBindingList_RemoveIndex(::System::ComponentModel::PropertyDescriptor* property);
    // private System.Void System.ComponentModel.IBindingList.RemoveSort()
    // Offset: 0x4C54400
    void System_ComponentModel_IBindingList_RemoveSort();
    // private System.String System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[] listAccessors)
    // Offset: 0x4C54440
    ::StringW System_ComponentModel_ITypedList_GetListName(::ArrayW<::System::ComponentModel::PropertyDescriptor*> listAccessors);
    // private System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[] listAccessors)
    // Offset: 0x4C544EC
    ::System::ComponentModel::PropertyDescriptorCollection* System_ComponentModel_ITypedList_GetItemProperties(::ArrayW<::System::ComponentModel::PropertyDescriptor*> listAccessors);
    // public System.Data.DataView CreateDataView(System.Data.DataTable table)
    // Offset: 0x4C5465C
    ::System::Data::DataView* CreateDataView(::System::Data::DataTable* table);
    // protected System.Void OnListChanged(System.ComponentModel.ListChangedEventArgs e)
    // Offset: 0x4C54700
    void OnListChanged(::System::ComponentModel::ListChangedEventArgs* e);
    // protected System.Void TableCollectionChanged(System.Object sender, System.ComponentModel.CollectionChangeEventArgs e)
    // Offset: 0x4C547F8
    void TableCollectionChanged(::Il2CppObject* sender, ::System::ComponentModel::CollectionChangeEventArgs* e);
    // protected System.Void RelationCollectionChanged(System.Object sender, System.ComponentModel.CollectionChangeEventArgs e)
    // Offset: 0x4C54A1C
    void RelationCollectionChanged(::Il2CppObject* sender, ::System::ComponentModel::CollectionChangeEventArgs* e);
    // static private System.Void .cctor()
    // Offset: 0x4C54C40
    static void _cctor();
  }; // System.Data.DataViewManager
  #pragma pack(pop)
  static check_size<sizeof(DataViewManager), 64 + sizeof(::System::ComponentModel::ListChangedEventHandler*)> __System_Data_DataViewManagerSizeCheck;
  static_assert(sizeof(DataViewManager) == 0x48);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Data::DataViewManager::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Data::DataViewManager::get_DataSet
// Il2CppName: get_DataSet
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::DataSet* (System::Data::DataViewManager::*)()>(&System::Data::DataViewManager::get_DataSet)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataViewManager*), "get_DataSet", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataViewManager::get_DataViewSettings
// Il2CppName: get_DataViewSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::DataViewSettingCollection* (System::Data::DataViewManager::*)()>(&System::Data::DataViewManager::get_DataViewSettings)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataViewManager*), "get_DataViewSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataViewManager::System_Collections_IEnumerable_GetEnumerator
// Il2CppName: System.Collections.IEnumerable.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (System::Data::DataViewManager::*)()>(&System::Data::DataViewManager::System_Collections_IEnumerable_GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataViewManager*), "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataViewManager::System_Collections_ICollection_get_Count
// Il2CppName: System.Collections.ICollection.get_Count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Data::DataViewManager::*)()>(&System::Data::DataViewManager::System_Collections_ICollection_get_Count)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataViewManager*), "System.Collections.ICollection.get_Count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataViewManager::System_Collections_ICollection_get_SyncRoot
// Il2CppName: System.Collections.ICollection.get_SyncRoot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Data::DataViewManager::*)()>(&System::Data::DataViewManager::System_Collections_ICollection_get_SyncRoot)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataViewManager*), "System.Collections.ICollection.get_SyncRoot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataViewManager::System_Collections_ICollection_get_IsSynchronized
// Il2CppName: System.Collections.ICollection.get_IsSynchronized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataViewManager::*)()>(&System::Data::DataViewManager::System_Collections_ICollection_get_IsSynchronized)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataViewManager*), "System.Collections.ICollection.get_IsSynchronized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataViewManager::System_Collections_IList_get_IsReadOnly
// Il2CppName: System.Collections.IList.get_IsReadOnly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataViewManager::*)()>(&System::Data::DataViewManager::System_Collections_IList_get_IsReadOnly)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataViewManager*), "System.Collections.IList.get_IsReadOnly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataViewManager::System_Collections_IList_get_IsFixedSize
// Il2CppName: System.Collections.IList.get_IsFixedSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataViewManager::*)()>(&System::Data::DataViewManager::System_Collections_IList_get_IsFixedSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataViewManager*), "System.Collections.IList.get_IsFixedSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataViewManager::System_Collections_ICollection_CopyTo
// Il2CppName: System.Collections.ICollection.CopyTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataViewManager::*)(::System::Array*, int)>(&System::Data::DataViewManager::System_Collections_ICollection_CopyTo)> {
  static const MethodInfo* get() {
    static auto* array = &::il2cpp_utils::GetClassFromName("System", "Array")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataViewManager*), "System.Collections.ICollection.CopyTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{array, index});
  }
};
// Writing MetadataGetter for method: System::Data::DataViewManager::System_Collections_IList_get_Item
// Il2CppName: System.Collections.IList.get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Data::DataViewManager::*)(int)>(&System::Data::DataViewManager::System_Collections_IList_get_Item)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataViewManager*), "System.Collections.IList.get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: System::Data::DataViewManager::System_Collections_IList_set_Item
// Il2CppName: System.Collections.IList.set_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataViewManager::*)(int, ::Il2CppObject*)>(&System::Data::DataViewManager::System_Collections_IList_set_Item)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataViewManager*), "System.Collections.IList.set_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, value});
  }
};
// Writing MetadataGetter for method: System::Data::DataViewManager::System_Collections_IList_Add
// Il2CppName: System.Collections.IList.Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Data::DataViewManager::*)(::Il2CppObject*)>(&System::Data::DataViewManager::System_Collections_IList_Add)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataViewManager*), "System.Collections.IList.Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataViewManager::System_Collections_IList_Clear
// Il2CppName: System.Collections.IList.Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataViewManager::*)()>(&System::Data::DataViewManager::System_Collections_IList_Clear)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataViewManager*), "System.Collections.IList.Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataViewManager::System_Collections_IList_Contains
// Il2CppName: System.Collections.IList.Contains
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataViewManager::*)(::Il2CppObject*)>(&System::Data::DataViewManager::System_Collections_IList_Contains)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataViewManager*), "System.Collections.IList.Contains", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataViewManager::System_Collections_IList_IndexOf
// Il2CppName: System.Collections.IList.IndexOf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Data::DataViewManager::*)(::Il2CppObject*)>(&System::Data::DataViewManager::System_Collections_IList_IndexOf)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataViewManager*), "System.Collections.IList.IndexOf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataViewManager::System_Collections_IList_Insert
// Il2CppName: System.Collections.IList.Insert
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataViewManager::*)(int, ::Il2CppObject*)>(&System::Data::DataViewManager::System_Collections_IList_Insert)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataViewManager*), "System.Collections.IList.Insert", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, value});
  }
};
// Writing MetadataGetter for method: System::Data::DataViewManager::System_Collections_IList_Remove
// Il2CppName: System.Collections.IList.Remove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataViewManager::*)(::Il2CppObject*)>(&System::Data::DataViewManager::System_Collections_IList_Remove)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataViewManager*), "System.Collections.IList.Remove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataViewManager::System_Collections_IList_RemoveAt
// Il2CppName: System.Collections.IList.RemoveAt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataViewManager::*)(int)>(&System::Data::DataViewManager::System_Collections_IList_RemoveAt)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataViewManager*), "System.Collections.IList.RemoveAt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: System::Data::DataViewManager::System_ComponentModel_IBindingList_get_AllowNew
// Il2CppName: System.ComponentModel.IBindingList.get_AllowNew
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataViewManager::*)()>(&System::Data::DataViewManager::System_ComponentModel_IBindingList_get_AllowNew)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataViewManager*), "System.ComponentModel.IBindingList.get_AllowNew", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataViewManager::System_ComponentModel_IBindingList_AddNew
// Il2CppName: System.ComponentModel.IBindingList.AddNew
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Data::DataViewManager::*)()>(&System::Data::DataViewManager::System_ComponentModel_IBindingList_AddNew)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataViewManager*), "System.ComponentModel.IBindingList.AddNew", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataViewManager::System_ComponentModel_IBindingList_get_AllowEdit
// Il2CppName: System.ComponentModel.IBindingList.get_AllowEdit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataViewManager::*)()>(&System::Data::DataViewManager::System_ComponentModel_IBindingList_get_AllowEdit)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataViewManager*), "System.ComponentModel.IBindingList.get_AllowEdit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataViewManager::System_ComponentModel_IBindingList_get_AllowRemove
// Il2CppName: System.ComponentModel.IBindingList.get_AllowRemove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataViewManager::*)()>(&System::Data::DataViewManager::System_ComponentModel_IBindingList_get_AllowRemove)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataViewManager*), "System.ComponentModel.IBindingList.get_AllowRemove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataViewManager::System_ComponentModel_IBindingList_get_SupportsChangeNotification
// Il2CppName: System.ComponentModel.IBindingList.get_SupportsChangeNotification
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataViewManager::*)()>(&System::Data::DataViewManager::System_ComponentModel_IBindingList_get_SupportsChangeNotification)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataViewManager*), "System.ComponentModel.IBindingList.get_SupportsChangeNotification", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataViewManager::System_ComponentModel_IBindingList_get_SupportsSearching
// Il2CppName: System.ComponentModel.IBindingList.get_SupportsSearching
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataViewManager::*)()>(&System::Data::DataViewManager::System_ComponentModel_IBindingList_get_SupportsSearching)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataViewManager*), "System.ComponentModel.IBindingList.get_SupportsSearching", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataViewManager::System_ComponentModel_IBindingList_get_SupportsSorting
// Il2CppName: System.ComponentModel.IBindingList.get_SupportsSorting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataViewManager::*)()>(&System::Data::DataViewManager::System_ComponentModel_IBindingList_get_SupportsSorting)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataViewManager*), "System.ComponentModel.IBindingList.get_SupportsSorting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataViewManager::System_ComponentModel_IBindingList_get_IsSorted
// Il2CppName: System.ComponentModel.IBindingList.get_IsSorted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Data::DataViewManager::*)()>(&System::Data::DataViewManager::System_ComponentModel_IBindingList_get_IsSorted)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataViewManager*), "System.ComponentModel.IBindingList.get_IsSorted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataViewManager::System_ComponentModel_IBindingList_get_SortProperty
// Il2CppName: System.ComponentModel.IBindingList.get_SortProperty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::ComponentModel::PropertyDescriptor* (System::Data::DataViewManager::*)()>(&System::Data::DataViewManager::System_ComponentModel_IBindingList_get_SortProperty)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataViewManager*), "System.ComponentModel.IBindingList.get_SortProperty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataViewManager::System_ComponentModel_IBindingList_get_SortDirection
// Il2CppName: System.ComponentModel.IBindingList.get_SortDirection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::ComponentModel::ListSortDirection (System::Data::DataViewManager::*)()>(&System::Data::DataViewManager::System_ComponentModel_IBindingList_get_SortDirection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataViewManager*), "System.ComponentModel.IBindingList.get_SortDirection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataViewManager::add_ListChanged
// Il2CppName: add_ListChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataViewManager::*)(::System::ComponentModel::ListChangedEventHandler*)>(&System::Data::DataViewManager::add_ListChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "ListChangedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataViewManager*), "add_ListChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataViewManager::remove_ListChanged
// Il2CppName: remove_ListChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataViewManager::*)(::System::ComponentModel::ListChangedEventHandler*)>(&System::Data::DataViewManager::remove_ListChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "ListChangedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataViewManager*), "remove_ListChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Data::DataViewManager::System_ComponentModel_IBindingList_AddIndex
// Il2CppName: System.ComponentModel.IBindingList.AddIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataViewManager::*)(::System::ComponentModel::PropertyDescriptor*)>(&System::Data::DataViewManager::System_ComponentModel_IBindingList_AddIndex)> {
  static const MethodInfo* get() {
    static auto* property = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "PropertyDescriptor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataViewManager*), "System.ComponentModel.IBindingList.AddIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{property});
  }
};
// Writing MetadataGetter for method: System::Data::DataViewManager::System_ComponentModel_IBindingList_ApplySort
// Il2CppName: System.ComponentModel.IBindingList.ApplySort
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataViewManager::*)(::System::ComponentModel::PropertyDescriptor*, ::System::ComponentModel::ListSortDirection)>(&System::Data::DataViewManager::System_ComponentModel_IBindingList_ApplySort)> {
  static const MethodInfo* get() {
    static auto* property = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "PropertyDescriptor")->byval_arg;
    static auto* direction = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "ListSortDirection")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataViewManager*), "System.ComponentModel.IBindingList.ApplySort", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{property, direction});
  }
};
// Writing MetadataGetter for method: System::Data::DataViewManager::System_ComponentModel_IBindingList_Find
// Il2CppName: System.ComponentModel.IBindingList.Find
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Data::DataViewManager::*)(::System::ComponentModel::PropertyDescriptor*, ::Il2CppObject*)>(&System::Data::DataViewManager::System_ComponentModel_IBindingList_Find)> {
  static const MethodInfo* get() {
    static auto* property = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "PropertyDescriptor")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataViewManager*), "System.ComponentModel.IBindingList.Find", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{property, key});
  }
};
// Writing MetadataGetter for method: System::Data::DataViewManager::System_ComponentModel_IBindingList_RemoveIndex
// Il2CppName: System.ComponentModel.IBindingList.RemoveIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataViewManager::*)(::System::ComponentModel::PropertyDescriptor*)>(&System::Data::DataViewManager::System_ComponentModel_IBindingList_RemoveIndex)> {
  static const MethodInfo* get() {
    static auto* property = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "PropertyDescriptor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataViewManager*), "System.ComponentModel.IBindingList.RemoveIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{property});
  }
};
// Writing MetadataGetter for method: System::Data::DataViewManager::System_ComponentModel_IBindingList_RemoveSort
// Il2CppName: System.ComponentModel.IBindingList.RemoveSort
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataViewManager::*)()>(&System::Data::DataViewManager::System_ComponentModel_IBindingList_RemoveSort)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataViewManager*), "System.ComponentModel.IBindingList.RemoveSort", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Data::DataViewManager::System_ComponentModel_ITypedList_GetListName
// Il2CppName: System.ComponentModel.ITypedList.GetListName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Data::DataViewManager::*)(::ArrayW<::System::ComponentModel::PropertyDescriptor*>)>(&System::Data::DataViewManager::System_ComponentModel_ITypedList_GetListName)> {
  static const MethodInfo* get() {
    static auto* listAccessors = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System.ComponentModel", "PropertyDescriptor"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataViewManager*), "System.ComponentModel.ITypedList.GetListName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{listAccessors});
  }
};
// Writing MetadataGetter for method: System::Data::DataViewManager::System_ComponentModel_ITypedList_GetItemProperties
// Il2CppName: System.ComponentModel.ITypedList.GetItemProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::ComponentModel::PropertyDescriptorCollection* (System::Data::DataViewManager::*)(::ArrayW<::System::ComponentModel::PropertyDescriptor*>)>(&System::Data::DataViewManager::System_ComponentModel_ITypedList_GetItemProperties)> {
  static const MethodInfo* get() {
    static auto* listAccessors = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System.ComponentModel", "PropertyDescriptor"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataViewManager*), "System.ComponentModel.ITypedList.GetItemProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{listAccessors});
  }
};
// Writing MetadataGetter for method: System::Data::DataViewManager::CreateDataView
// Il2CppName: CreateDataView
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Data::DataView* (System::Data::DataViewManager::*)(::System::Data::DataTable*)>(&System::Data::DataViewManager::CreateDataView)> {
  static const MethodInfo* get() {
    static auto* table = &::il2cpp_utils::GetClassFromName("System.Data", "DataTable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataViewManager*), "CreateDataView", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{table});
  }
};
// Writing MetadataGetter for method: System::Data::DataViewManager::OnListChanged
// Il2CppName: OnListChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataViewManager::*)(::System::ComponentModel::ListChangedEventArgs*)>(&System::Data::DataViewManager::OnListChanged)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "ListChangedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataViewManager*), "OnListChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: System::Data::DataViewManager::TableCollectionChanged
// Il2CppName: TableCollectionChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataViewManager::*)(::Il2CppObject*, ::System::ComponentModel::CollectionChangeEventArgs*)>(&System::Data::DataViewManager::TableCollectionChanged)> {
  static const MethodInfo* get() {
    static auto* sender = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* e = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "CollectionChangeEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataViewManager*), "TableCollectionChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sender, e});
  }
};
// Writing MetadataGetter for method: System::Data::DataViewManager::RelationCollectionChanged
// Il2CppName: RelationCollectionChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Data::DataViewManager::*)(::Il2CppObject*, ::System::ComponentModel::CollectionChangeEventArgs*)>(&System::Data::DataViewManager::RelationCollectionChanged)> {
  static const MethodInfo* get() {
    static auto* sender = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* e = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "CollectionChangeEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataViewManager*), "RelationCollectionChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sender, e});
  }
};
// Writing MetadataGetter for method: System::Data::DataViewManager::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::Data::DataViewManager::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Data::DataViewManager*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
