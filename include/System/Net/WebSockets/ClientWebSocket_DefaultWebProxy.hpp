// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Net.WebSockets.ClientWebSocket
#include "System/Net/WebSockets/ClientWebSocket.hpp"
// Including type: System.Net.IWebProxy
#include "System/Net/IWebProxy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Net
namespace System::Net {
  // Forward declaring type: ICredentials
  class ICredentials;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Uri
  class Uri;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Net::WebSockets::ClientWebSocket::DefaultWebProxy);
DEFINE_IL2CPP_ARG_TYPE(::System::Net::WebSockets::ClientWebSocket::DefaultWebProxy*, "System.Net.WebSockets", "ClientWebSocket/DefaultWebProxy");
// Type namespace: System.Net.WebSockets
namespace System::Net::WebSockets {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Net.WebSockets.ClientWebSocket/DefaultWebProxy
  // [TokenAttribute] Offset: FFFFFFFF
  class ClientWebSocket::DefaultWebProxy : public ::Il2CppObject/*, public ::System::Net::IWebProxy*/ {
    public:
    // Creating interface conversion operator: operator ::System::Net::IWebProxy
    operator ::System::Net::IWebProxy() noexcept {
      return *reinterpret_cast<::System::Net::IWebProxy*>(this);
    }
    // Get static field: static private readonly System.Net.WebSockets.ClientWebSocket/DefaultWebProxy <Instance>k__BackingField
    static ::System::Net::WebSockets::ClientWebSocket::DefaultWebProxy* _get_$Instance$k__BackingField();
    // Set static field: static private readonly System.Net.WebSockets.ClientWebSocket/DefaultWebProxy <Instance>k__BackingField
    static void _set_$Instance$k__BackingField(::System::Net::WebSockets::ClientWebSocket::DefaultWebProxy* value);
    // static public System.Net.WebSockets.ClientWebSocket/DefaultWebProxy get_Instance()
    // Offset: 0x4EE77B8
    static ::System::Net::WebSockets::ClientWebSocket::DefaultWebProxy* get_Instance();
    // public System.Net.ICredentials get_Credentials()
    // Offset: 0x4EE7810
    ::System::Net::ICredentials* get_Credentials();
    // public System.Void set_Credentials(System.Net.ICredentials value)
    // Offset: 0x4EE7848
    void set_Credentials(::System::Net::ICredentials* value);
    // public System.Uri GetProxy(System.Uri destination)
    // Offset: 0x4EE7880
    ::System::Uri* GetProxy(::System::Uri* destination);
    // public System.Boolean IsBypassed(System.Uri host)
    // Offset: 0x4EE78B8
    bool IsBypassed(::System::Uri* host);
    // public System.Void .ctor()
    // Offset: 0x4EE78F0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ClientWebSocket::DefaultWebProxy* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::ClientWebSocket::DefaultWebProxy::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ClientWebSocket::DefaultWebProxy*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x4EE78F8
    static void _cctor();
  }; // System.Net.WebSockets.ClientWebSocket/DefaultWebProxy
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Net::WebSockets::ClientWebSocket::DefaultWebProxy::get_Instance
// Il2CppName: get_Instance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Net::WebSockets::ClientWebSocket::DefaultWebProxy* (*)()>(&System::Net::WebSockets::ClientWebSocket::DefaultWebProxy::get_Instance)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebSockets::ClientWebSocket::DefaultWebProxy*), "get_Instance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebSockets::ClientWebSocket::DefaultWebProxy::get_Credentials
// Il2CppName: get_Credentials
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Net::ICredentials* (System::Net::WebSockets::ClientWebSocket::DefaultWebProxy::*)()>(&System::Net::WebSockets::ClientWebSocket::DefaultWebProxy::get_Credentials)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebSockets::ClientWebSocket::DefaultWebProxy*), "get_Credentials", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebSockets::ClientWebSocket::DefaultWebProxy::set_Credentials
// Il2CppName: set_Credentials
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebSockets::ClientWebSocket::DefaultWebProxy::*)(::System::Net::ICredentials*)>(&System::Net::WebSockets::ClientWebSocket::DefaultWebProxy::set_Credentials)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net", "ICredentials")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebSockets::ClientWebSocket::DefaultWebProxy*), "set_Credentials", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebSockets::ClientWebSocket::DefaultWebProxy::GetProxy
// Il2CppName: GetProxy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Uri* (System::Net::WebSockets::ClientWebSocket::DefaultWebProxy::*)(::System::Uri*)>(&System::Net::WebSockets::ClientWebSocket::DefaultWebProxy::GetProxy)> {
  static const MethodInfo* get() {
    static auto* destination = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebSockets::ClientWebSocket::DefaultWebProxy*), "GetProxy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{destination});
  }
};
// Writing MetadataGetter for method: System::Net::WebSockets::ClientWebSocket::DefaultWebProxy::IsBypassed
// Il2CppName: IsBypassed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Net::WebSockets::ClientWebSocket::DefaultWebProxy::*)(::System::Uri*)>(&System::Net::WebSockets::ClientWebSocket::DefaultWebProxy::IsBypassed)> {
  static const MethodInfo* get() {
    static auto* host = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebSockets::ClientWebSocket::DefaultWebProxy*), "IsBypassed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{host});
  }
};
// Writing MetadataGetter for method: System::Net::WebSockets::ClientWebSocket::DefaultWebProxy::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Net::WebSockets::ClientWebSocket::DefaultWebProxy::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::Net::WebSockets::ClientWebSocket::DefaultWebProxy::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebSockets::ClientWebSocket::DefaultWebProxy*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
