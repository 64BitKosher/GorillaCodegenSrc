// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Net.WebSockets.ManagedWebSocket
#include "System/Net/WebSockets/ManagedWebSocket.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Forward declaring namespace: System::Threading
namespace System::Threading {
  // Forward declaring type: TimerCallback
  class TimerCallback;
}
// Forward declaring namespace: System::Threading::Tasks
namespace System::Threading::Tasks {
  // Forward declaring type: Task
  class Task;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Net::WebSockets::ManagedWebSocket::$$c);
DEFINE_IL2CPP_ARG_TYPE(::System::Net::WebSockets::ManagedWebSocket::$$c*, "System.Net.WebSockets", "ManagedWebSocket/<>c");
// Type namespace: System.Net.WebSockets
namespace System::Net::WebSockets {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Net.WebSockets.ManagedWebSocket/<>c
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class ManagedWebSocket::$$c : public ::Il2CppObject {
    public:
    // Get static field: static public readonly System.Net.WebSockets.ManagedWebSocket/<>c <>9
    static ::System::Net::WebSockets::ManagedWebSocket::$$c* _get_$$9();
    // Set static field: static public readonly System.Net.WebSockets.ManagedWebSocket/<>c <>9
    static void _set_$$9(::System::Net::WebSockets::ManagedWebSocket::$$c* value);
    // Get static field: static public System.Action`1<System.Object> <>9__36_0
    static ::System::Action_1<::Il2CppObject*>* _get_$$9__36_0();
    // Set static field: static public System.Action`1<System.Object> <>9__36_0
    static void _set_$$9__36_0(::System::Action_1<::Il2CppObject*>* value);
    // Get static field: static public System.Threading.TimerCallback <>9__36_1
    static ::System::Threading::TimerCallback* _get_$$9__36_1();
    // Set static field: static public System.Threading.TimerCallback <>9__36_1
    static void _set_$$9__36_1(::System::Threading::TimerCallback* value);
    // Get static field: static public System.Action`1<System.Object> <>9__56_0
    static ::System::Action_1<::Il2CppObject*>* _get_$$9__56_0();
    // Set static field: static public System.Action`1<System.Object> <>9__56_0
    static void _set_$$9__56_0(::System::Action_1<::Il2CppObject*>* value);
    // Get static field: static public System.Action`1<System.Threading.Tasks.Task> <>9__58_0
    static ::System::Action_1<::System::Threading::Tasks::Task*>* _get_$$9__58_0();
    // Set static field: static public System.Action`1<System.Threading.Tasks.Task> <>9__58_0
    static void _set_$$9__58_0(::System::Action_1<::System::Threading::Tasks::Task*>* value);
    // Get static field: static public System.Action`1<System.Object> <>9__63_0
    static ::System::Action_1<::Il2CppObject*>* _get_$$9__63_0();
    // Set static field: static public System.Action`1<System.Object> <>9__63_0
    static void _set_$$9__63_0(::System::Action_1<::Il2CppObject*>* value);
    // static private System.Void .cctor()
    // Offset: 0x4EE2FE8
    static void _cctor();
    // public System.Void .ctor()
    // Offset: 0x4EE3050
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ManagedWebSocket::$$c* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::ManagedWebSocket::$$c::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ManagedWebSocket::$$c*, creationType>()));
    }
    // System.Void <.ctor>b__36_0(System.Object s)
    // Offset: 0x4EE3058
    void $_ctor$b__36_0(::Il2CppObject* s);
    // System.Void <.ctor>b__36_1(System.Object s)
    // Offset: 0x4EE317C
    void $_ctor$b__36_1(::Il2CppObject* s);
    // System.Void <SendFrameFallbackAsync>b__56_0(System.Object s)
    // Offset: 0x4EE31DC
    void $SendFrameFallbackAsync$b__56_0(::Il2CppObject* s);
    // System.Void <SendKeepAliveFrameAsync>b__58_0(System.Threading.Tasks.Task p)
    // Offset: 0x4EE3244
    void $SendKeepAliveFrameAsync$b__58_0(::System::Threading::Tasks::Task* p);
    // System.Void <WaitForServerToCloseConnectionAsync>b__63_0(System.Object s)
    // Offset: 0x4EE325C
    void $WaitForServerToCloseConnectionAsync$b__63_0(::Il2CppObject* s);
  }; // System.Net.WebSockets.ManagedWebSocket/<>c
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Net::WebSockets::ManagedWebSocket::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::Net::WebSockets::ManagedWebSocket::$$c::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebSockets::ManagedWebSocket::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebSockets::ManagedWebSocket::$$c::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Net::WebSockets::ManagedWebSocket::$$c::$_ctor$b__36_0
// Il2CppName: <.ctor>b__36_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebSockets::ManagedWebSocket::$$c::*)(::Il2CppObject*)>(&System::Net::WebSockets::ManagedWebSocket::$$c::$_ctor$b__36_0)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebSockets::ManagedWebSocket::$$c*), "<.ctor>b__36_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s});
  }
};
// Writing MetadataGetter for method: System::Net::WebSockets::ManagedWebSocket::$$c::$_ctor$b__36_1
// Il2CppName: <.ctor>b__36_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebSockets::ManagedWebSocket::$$c::*)(::Il2CppObject*)>(&System::Net::WebSockets::ManagedWebSocket::$$c::$_ctor$b__36_1)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebSockets::ManagedWebSocket::$$c*), "<.ctor>b__36_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s});
  }
};
// Writing MetadataGetter for method: System::Net::WebSockets::ManagedWebSocket::$$c::$SendFrameFallbackAsync$b__56_0
// Il2CppName: <SendFrameFallbackAsync>b__56_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebSockets::ManagedWebSocket::$$c::*)(::Il2CppObject*)>(&System::Net::WebSockets::ManagedWebSocket::$$c::$SendFrameFallbackAsync$b__56_0)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebSockets::ManagedWebSocket::$$c*), "<SendFrameFallbackAsync>b__56_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s});
  }
};
// Writing MetadataGetter for method: System::Net::WebSockets::ManagedWebSocket::$$c::$SendKeepAliveFrameAsync$b__58_0
// Il2CppName: <SendKeepAliveFrameAsync>b__58_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebSockets::ManagedWebSocket::$$c::*)(::System::Threading::Tasks::Task*)>(&System::Net::WebSockets::ManagedWebSocket::$$c::$SendKeepAliveFrameAsync$b__58_0)> {
  static const MethodInfo* get() {
    static auto* p = &::il2cpp_utils::GetClassFromName("System.Threading.Tasks", "Task")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebSockets::ManagedWebSocket::$$c*), "<SendKeepAliveFrameAsync>b__58_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p});
  }
};
// Writing MetadataGetter for method: System::Net::WebSockets::ManagedWebSocket::$$c::$WaitForServerToCloseConnectionAsync$b__63_0
// Il2CppName: <WaitForServerToCloseConnectionAsync>b__63_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebSockets::ManagedWebSocket::$$c::*)(::Il2CppObject*)>(&System::Net::WebSockets::ManagedWebSocket::$$c::$WaitForServerToCloseConnectionAsync$b__63_0)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebSockets::ManagedWebSocket::$$c*), "<WaitForServerToCloseConnectionAsync>b__63_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s});
  }
};
