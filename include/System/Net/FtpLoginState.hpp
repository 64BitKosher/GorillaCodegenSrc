// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: System.Net
namespace System::Net {
  // Forward declaring type: FtpLoginState
  struct FtpLoginState;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::System::Net::FtpLoginState, "System.Net", "FtpLoginState");
// Type namespace: System.Net
namespace System::Net {
  // Size: 0x1
  #pragma pack(push, 1)
  // Autogenerated type: System.Net.FtpLoginState
  // [TokenAttribute] Offset: FFFFFFFF
  struct FtpLoginState/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Byte value__
    // Size: 0x1
    // Offset: 0x0
    uint8_t value;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    public:
    // Creating value type constructor for type: FtpLoginState
    constexpr FtpLoginState(uint8_t value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator uint8_t
    constexpr operator uint8_t() const noexcept {
      return value;
    }
    // static field const value: static public System.Net.FtpLoginState NotLoggedIn
    static constexpr const uint8_t NotLoggedIn = 0u;
    // Get static field: static public System.Net.FtpLoginState NotLoggedIn
    static ::System::Net::FtpLoginState _get_NotLoggedIn();
    // Set static field: static public System.Net.FtpLoginState NotLoggedIn
    static void _set_NotLoggedIn(::System::Net::FtpLoginState value);
    // static field const value: static public System.Net.FtpLoginState LoggedIn
    static constexpr const uint8_t LoggedIn = 1u;
    // Get static field: static public System.Net.FtpLoginState LoggedIn
    static ::System::Net::FtpLoginState _get_LoggedIn();
    // Set static field: static public System.Net.FtpLoginState LoggedIn
    static void _set_LoggedIn(::System::Net::FtpLoginState value);
    // static field const value: static public System.Net.FtpLoginState LoggedInButNeedsRelogin
    static constexpr const uint8_t LoggedInButNeedsRelogin = 2u;
    // Get static field: static public System.Net.FtpLoginState LoggedInButNeedsRelogin
    static ::System::Net::FtpLoginState _get_LoggedInButNeedsRelogin();
    // Set static field: static public System.Net.FtpLoginState LoggedInButNeedsRelogin
    static void _set_LoggedInButNeedsRelogin(::System::Net::FtpLoginState value);
    // static field const value: static public System.Net.FtpLoginState ReloginFailed
    static constexpr const uint8_t ReloginFailed = 3u;
    // Get static field: static public System.Net.FtpLoginState ReloginFailed
    static ::System::Net::FtpLoginState _get_ReloginFailed();
    // Set static field: static public System.Net.FtpLoginState ReloginFailed
    static void _set_ReloginFailed(::System::Net::FtpLoginState value);
    // Get instance field reference: public System.Byte value__
    [[deprecated("Use field access instead!")]] uint8_t& dyn_value__();
  }; // System.Net.FtpLoginState
  #pragma pack(pop)
  static check_size<sizeof(FtpLoginState), 0 + sizeof(uint8_t)> __System_Net_FtpLoginStateSizeCheck;
  static_assert(sizeof(FtpLoginState) == 0x1);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
