// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Net.Sockets.Socket
#include "System/Net/Sockets/Socket.hpp"
// Including type: System.Net.Sockets.SocketAsyncEventArgs
#include "System/Net/Sockets/SocketAsyncEventArgs.hpp"
// Including type: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1
#include "System/Runtime/CompilerServices/AsyncTaskMethodBuilder_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::System::Net::Sockets::Socket::TaskSocketAsyncEventArgs_1, "System.Net.Sockets", "Socket/TaskSocketAsyncEventArgs`1");
// Type namespace: System.Net.Sockets
namespace System::Net::Sockets {
  // WARNING Size may be invalid!
  // Autogenerated type: System.Net.Sockets.Socket/TaskSocketAsyncEventArgs`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename TResult>
  class Socket::TaskSocketAsyncEventArgs_1 : public ::System::Net::Sockets::SocketAsyncEventArgs {
    public:
    public:
    // System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<TResult> _builder
    // Size: 0xFFFFFFFF
    // Offset: 0x0
    ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<TResult> builder;
    // System.Boolean _accessed
    // Size: 0x1
    // Offset: 0x0
    bool accessed;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Autogenerated instance field getter
    // Get instance field: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<TResult> _builder
    [[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<TResult>& dyn__builder() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::Socket::TaskSocketAsyncEventArgs_1::dyn__builder");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_builder"))->offset;
      return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<TResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: System.Boolean _accessed
    [[deprecated("Use field access instead!")]] bool& dyn__accessed() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::Socket::TaskSocketAsyncEventArgs_1::dyn__accessed");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_accessed"))->offset;
      return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<TResult> GetCompletionResponsibility(out System.Boolean responsibleForReturningToPool)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<TResult> GetCompletionResponsibility(ByRef<bool> responsibleForReturningToPool) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::Socket::TaskSocketAsyncEventArgs_1::GetCompletionResponsibility");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCompletionResponsibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool&>()})));
      return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<TResult>, false>(this, ___internal__method, byref(responsibleForReturningToPool));
    }
    // System.Void .ctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: System.Net.Sockets.SocketAsyncEventArgs
    // Base method: System.Void SocketAsyncEventArgs::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Socket::TaskSocketAsyncEventArgs_1<TResult>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::Socket::TaskSocketAsyncEventArgs_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Socket::TaskSocketAsyncEventArgs_1<TResult>*, creationType>()));
    }
  }; // System.Net.Sockets.Socket/TaskSocketAsyncEventArgs`1
  // Could not write size check! Type: System.Net.Sockets.Socket/TaskSocketAsyncEventArgs`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
