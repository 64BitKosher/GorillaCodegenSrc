// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.Net.SecurityStatusPalErrorCode
#include "System/Net/SecurityStatusPalErrorCode.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Exception
  class Exception;
}
// Completed forward declares
// Type namespace: System.Net
namespace System::Net {
  // Forward declaring type: SecurityStatusPal
  struct SecurityStatusPal;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::System::Net::SecurityStatusPal, "System.Net", "SecurityStatusPal");
// Type namespace: System.Net
namespace System::Net {
  // Size: 0x10
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: System.Net.SecurityStatusPal
  // [TokenAttribute] Offset: FFFFFFFF
  // [IsReadOnlyAttribute] Offset: FFFFFFFF
  struct SecurityStatusPal/*, public ::System::ValueType*/ {
    public:
    public:
    // public readonly System.Net.SecurityStatusPalErrorCode ErrorCode
    // Size: 0x4
    // Offset: 0x0
    ::System::Net::SecurityStatusPalErrorCode ErrorCode;
    // Field size check
    static_assert(sizeof(::System::Net::SecurityStatusPalErrorCode) == 0x4);
    // Padding between fields: ErrorCode and: Exception
    char __padding0[0x4] = {};
    // public readonly System.Exception Exception
    // Size: 0x8
    // Offset: 0x8
    ::System::Exception* Exception;
    // Field size check
    static_assert(sizeof(::System::Exception*) == 0x8);
    public:
    // Creating value type constructor for type: SecurityStatusPal
    constexpr SecurityStatusPal(::System::Net::SecurityStatusPalErrorCode ErrorCode_ = {}, ::System::Exception* Exception_ = {}) noexcept : ErrorCode{ErrorCode_}, Exception{Exception_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public readonly System.Net.SecurityStatusPalErrorCode ErrorCode
    [[deprecated("Use field access instead!")]] ::System::Net::SecurityStatusPalErrorCode& dyn_ErrorCode();
    // Get instance field reference: public readonly System.Exception Exception
    [[deprecated("Use field access instead!")]] ::System::Exception*& dyn_Exception();
    // public System.Void .ctor(System.Net.SecurityStatusPalErrorCode errorCode, System.Exception exception)
    // Offset: 0x4FA84B0
    // ABORTED: conflicts with another method.  SecurityStatusPal(::System::Net::SecurityStatusPalErrorCode errorCode, ::System::Exception* exception);
    // public override System.String ToString()
    // Offset: 0x4FA9484
    // Implemented from: System.ValueType
    // Base method: System.String ValueType::ToString()
    ::StringW ToString();
  }; // System.Net.SecurityStatusPal
  #pragma pack(pop)
  static check_size<sizeof(SecurityStatusPal), 8 + sizeof(::System::Exception*)> __System_Net_SecurityStatusPalSizeCheck;
  static_assert(sizeof(SecurityStatusPal) == 0x10);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Net::SecurityStatusPal::SecurityStatusPal
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Net::SecurityStatusPal::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::SecurityStatusPal::*)()>(&System::Net::SecurityStatusPal::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::SecurityStatusPal), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
