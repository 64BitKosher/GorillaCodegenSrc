// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Net.NetworkInformation.UnixNetworkInterface
#include "System/Net/NetworkInformation/UnixNetworkInterface.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Net::NetworkInformation
namespace System::Net::NetworkInformation {
  // Forward declaring type: OperationalStatus
  struct OperationalStatus;
}
// Completed forward declares
// Type namespace: System.Net.NetworkInformation
namespace System::Net::NetworkInformation {
  // Forward declaring type: AixNetworkInterface
  class AixNetworkInterface;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Net::NetworkInformation::AixNetworkInterface);
DEFINE_IL2CPP_ARG_TYPE(::System::Net::NetworkInformation::AixNetworkInterface*, "System.Net.NetworkInformation", "AixNetworkInterface");
// Type namespace: System.Net.NetworkInformation
namespace System::Net::NetworkInformation {
  // Size: 0x34
  #pragma pack(push, 1)
  // Autogenerated type: System.Net.NetworkInformation.AixNetworkInterface
  // [TokenAttribute] Offset: FFFFFFFF
  class AixNetworkInterface : public ::System::Net::NetworkInformation::UnixNetworkInterface {
    public:
    public:
    // private System.UInt32 _ifa_flags
    // Size: 0x4
    // Offset: 0x2C
    uint ifa_flags;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.Int32 _ifru_mtu
    // Size: 0x4
    // Offset: 0x30
    int ifru_mtu;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Get instance field reference: private System.UInt32 _ifa_flags
    [[deprecated("Use field access instead!")]] uint& dyn__ifa_flags();
    // Get instance field reference: private System.Int32 _ifru_mtu
    [[deprecated("Use field access instead!")]] int& dyn__ifru_mtu();
    // System.Void .ctor(System.String name, System.UInt32 ifa_flags, System.Int32 ifru_mtu)
    // Offset: 0x4EC7FEC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AixNetworkInterface* New_ctor(::StringW name, uint ifa_flags, int ifru_mtu) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::AixNetworkInterface::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AixNetworkInterface*, creationType>(name, ifa_flags, ifru_mtu)));
    }
    // public override System.Net.NetworkInformation.OperationalStatus get_OperationalStatus()
    // Offset: 0x4EC819C
    // Implemented from: System.Net.NetworkInformation.NetworkInterface
    // Base method: System.Net.NetworkInformation.OperationalStatus NetworkInterface::get_OperationalStatus()
    ::System::Net::NetworkInformation::OperationalStatus get_OperationalStatus();
  }; // System.Net.NetworkInformation.AixNetworkInterface
  #pragma pack(pop)
  static check_size<sizeof(AixNetworkInterface), 48 + sizeof(int)> __System_Net_NetworkInformation_AixNetworkInterfaceSizeCheck;
  static_assert(sizeof(AixNetworkInterface) == 0x34);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Net::NetworkInformation::AixNetworkInterface::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Net::NetworkInformation::AixNetworkInterface::get_OperationalStatus
// Il2CppName: get_OperationalStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Net::NetworkInformation::OperationalStatus (System::Net::NetworkInformation::AixNetworkInterface::*)()>(&System::Net::NetworkInformation::AixNetworkInterface::get_OperationalStatus)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::NetworkInformation::AixNetworkInterface*), "get_OperationalStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
