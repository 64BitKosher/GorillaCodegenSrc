// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Net.NetworkInformation.UnixNetworkInterfaceAPI
#include "System/Net/NetworkInformation/UnixNetworkInterfaceAPI.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Net::NetworkInformation
namespace System::Net::NetworkInformation {
  // Forward declaring type: AixAddressFamily
  struct AixAddressFamily;
  // Forward declaring type: AixIoctlRequest
  struct AixIoctlRequest;
  // Forward declaring type: NetworkInterface
  class NetworkInterface;
}
// Forward declaring namespace: System::Net::NetworkInformation::AixStructs
namespace System::Net::NetworkInformation::AixStructs {
  // Forward declaring type: ifconf
  struct ifconf;
  // Forward declaring type: ifreq_flags
  struct ifreq_flags;
  // Forward declaring type: ifreq_mtu
  struct ifreq_mtu;
}
// Completed forward declares
// Type namespace: System.Net.NetworkInformation
namespace System::Net::NetworkInformation {
  // Forward declaring type: AixNetworkInterfaceAPI
  class AixNetworkInterfaceAPI;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Net::NetworkInformation::AixNetworkInterfaceAPI);
DEFINE_IL2CPP_ARG_TYPE(::System::Net::NetworkInformation::AixNetworkInterfaceAPI*, "System.Net.NetworkInformation", "AixNetworkInterfaceAPI");
// Type namespace: System.Net.NetworkInformation
namespace System::Net::NetworkInformation {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Net.NetworkInformation.AixNetworkInterfaceAPI
  // [TokenAttribute] Offset: FFFFFFFF
  class AixNetworkInterfaceAPI : public ::System::Net::NetworkInformation::UnixNetworkInterfaceAPI {
    public:
    // static public System.Int32 socket(System.Net.NetworkInformation.AixAddressFamily family, System.Int32 type, System.Int32 protocol)
    // Offset: 0x4EC6C60
    static int socket(::System::Net::NetworkInformation::AixAddressFamily family, int type, int protocol);
    // static public System.Int32 close(System.Int32 fd)
    // Offset: 0x4EC6D00
    static int close(int fd);
    // static public System.Int32 ioctl(System.Int32 fd, System.Net.NetworkInformation.AixIoctlRequest request, ref System.Int32 arg)
    // Offset: 0x4EC6D78
    static int ioctl(int fd, ::System::Net::NetworkInformation::AixIoctlRequest request, ByRef<int> arg);
    // static public System.Int32 ioctl(System.Int32 fd, System.Net.NetworkInformation.AixIoctlRequest request, ref System.Net.NetworkInformation.AixStructs.ifconf arg)
    // Offset: 0x4EC6E18
    static int ioctl(int fd, ::System::Net::NetworkInformation::AixIoctlRequest request, ByRef<::System::Net::NetworkInformation::AixStructs::ifconf> arg);
    // static public System.Int32 ioctl(System.Int32 fd, System.Net.NetworkInformation.AixIoctlRequest request, ref System.Net.NetworkInformation.AixStructs.ifreq_flags arg)
    // Offset: 0x4EC6EB8
    static int ioctl(int fd, ::System::Net::NetworkInformation::AixIoctlRequest request, ByRef<::System::Net::NetworkInformation::AixStructs::ifreq_flags> arg);
    // static public System.Int32 ioctl(System.Int32 fd, System.Net.NetworkInformation.AixIoctlRequest request, ref System.Net.NetworkInformation.AixStructs.ifreq_mtu arg)
    // Offset: 0x4EC6F58
    static int ioctl(int fd, ::System::Net::NetworkInformation::AixIoctlRequest request, ByRef<::System::Net::NetworkInformation::AixStructs::ifreq_mtu> arg);
    // static private System.Void ByteArrayCopy(System.Byte* dst, System.Byte* src, System.Int32 elements)
    // Offset: 0x4EC6FF8
    static void ByteArrayCopy(uint8_t* dst, uint8_t* src, int elements);
    // public override System.Net.NetworkInformation.NetworkInterface[] GetAllNetworkInterfaces()
    // Offset: 0x4EC7014
    // Implemented from: System.Net.NetworkInformation.NetworkInterfaceFactory
    // Base method: System.Net.NetworkInformation.NetworkInterface[] NetworkInterfaceFactory::GetAllNetworkInterfaces()
    ::ArrayW<::System::Net::NetworkInformation::NetworkInterface*> GetAllNetworkInterfaces();
    // public System.Void .ctor()
    // Offset: 0x4EC80F0
    // Implemented from: System.Net.NetworkInformation.UnixNetworkInterfaceAPI
    // Base method: System.Void UnixNetworkInterfaceAPI::.ctor()
    // Base method: System.Void NetworkInterfaceFactory::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AixNetworkInterfaceAPI* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::AixNetworkInterfaceAPI::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AixNetworkInterfaceAPI*, creationType>()));
    }
  }; // System.Net.NetworkInformation.AixNetworkInterfaceAPI
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Net::NetworkInformation::AixNetworkInterfaceAPI::socket
// Il2CppName: socket
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::Net::NetworkInformation::AixAddressFamily, int, int)>(&System::Net::NetworkInformation::AixNetworkInterfaceAPI::socket)> {
  static const MethodInfo* get() {
    static auto* family = &::il2cpp_utils::GetClassFromName("System.Net.NetworkInformation", "AixAddressFamily")->byval_arg;
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* protocol = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::NetworkInformation::AixNetworkInterfaceAPI*), "socket", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{family, type, protocol});
  }
};
// Writing MetadataGetter for method: System::Net::NetworkInformation::AixNetworkInterfaceAPI::close
// Il2CppName: close
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int)>(&System::Net::NetworkInformation::AixNetworkInterfaceAPI::close)> {
  static const MethodInfo* get() {
    static auto* fd = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::NetworkInformation::AixNetworkInterfaceAPI*), "close", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fd});
  }
};
// Writing MetadataGetter for method: System::Net::NetworkInformation::AixNetworkInterfaceAPI::ioctl
// Il2CppName: ioctl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int, ::System::Net::NetworkInformation::AixIoctlRequest, ByRef<int>)>(&System::Net::NetworkInformation::AixNetworkInterfaceAPI::ioctl)> {
  static const MethodInfo* get() {
    static auto* fd = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* request = &::il2cpp_utils::GetClassFromName("System.Net.NetworkInformation", "AixIoctlRequest")->byval_arg;
    static auto* arg = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::NetworkInformation::AixNetworkInterfaceAPI*), "ioctl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fd, request, arg});
  }
};
// Writing MetadataGetter for method: System::Net::NetworkInformation::AixNetworkInterfaceAPI::ioctl
// Il2CppName: ioctl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int, ::System::Net::NetworkInformation::AixIoctlRequest, ByRef<::System::Net::NetworkInformation::AixStructs::ifconf>)>(&System::Net::NetworkInformation::AixNetworkInterfaceAPI::ioctl)> {
  static const MethodInfo* get() {
    static auto* fd = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* request = &::il2cpp_utils::GetClassFromName("System.Net.NetworkInformation", "AixIoctlRequest")->byval_arg;
    static auto* arg = &::il2cpp_utils::GetClassFromName("System.Net.NetworkInformation.AixStructs", "ifconf")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::NetworkInformation::AixNetworkInterfaceAPI*), "ioctl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fd, request, arg});
  }
};
// Writing MetadataGetter for method: System::Net::NetworkInformation::AixNetworkInterfaceAPI::ioctl
// Il2CppName: ioctl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int, ::System::Net::NetworkInformation::AixIoctlRequest, ByRef<::System::Net::NetworkInformation::AixStructs::ifreq_flags>)>(&System::Net::NetworkInformation::AixNetworkInterfaceAPI::ioctl)> {
  static const MethodInfo* get() {
    static auto* fd = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* request = &::il2cpp_utils::GetClassFromName("System.Net.NetworkInformation", "AixIoctlRequest")->byval_arg;
    static auto* arg = &::il2cpp_utils::GetClassFromName("System.Net.NetworkInformation.AixStructs", "ifreq_flags")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::NetworkInformation::AixNetworkInterfaceAPI*), "ioctl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fd, request, arg});
  }
};
// Writing MetadataGetter for method: System::Net::NetworkInformation::AixNetworkInterfaceAPI::ioctl
// Il2CppName: ioctl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int, ::System::Net::NetworkInformation::AixIoctlRequest, ByRef<::System::Net::NetworkInformation::AixStructs::ifreq_mtu>)>(&System::Net::NetworkInformation::AixNetworkInterfaceAPI::ioctl)> {
  static const MethodInfo* get() {
    static auto* fd = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* request = &::il2cpp_utils::GetClassFromName("System.Net.NetworkInformation", "AixIoctlRequest")->byval_arg;
    static auto* arg = &::il2cpp_utils::GetClassFromName("System.Net.NetworkInformation.AixStructs", "ifreq_mtu")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::NetworkInformation::AixNetworkInterfaceAPI*), "ioctl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fd, request, arg});
  }
};
// Writing MetadataGetter for method: System::Net::NetworkInformation::AixNetworkInterfaceAPI::ByteArrayCopy
// Il2CppName: ByteArrayCopy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint8_t*, uint8_t*, int)>(&System::Net::NetworkInformation::AixNetworkInterfaceAPI::ByteArrayCopy)> {
  static const MethodInfo* get() {
    static auto* dst = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* src = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* elements = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::NetworkInformation::AixNetworkInterfaceAPI*), "ByteArrayCopy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dst, src, elements});
  }
};
// Writing MetadataGetter for method: System::Net::NetworkInformation::AixNetworkInterfaceAPI::GetAllNetworkInterfaces
// Il2CppName: GetAllNetworkInterfaces
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::System::Net::NetworkInformation::NetworkInterface*> (System::Net::NetworkInformation::AixNetworkInterfaceAPI::*)()>(&System::Net::NetworkInformation::AixNetworkInterfaceAPI::GetAllNetworkInterfaces)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::NetworkInformation::AixNetworkInterfaceAPI*), "GetAllNetworkInterfaces", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::NetworkInformation::AixNetworkInterfaceAPI::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
