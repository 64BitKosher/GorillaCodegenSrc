// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: System.Net.NetworkInformation
namespace System::Net::NetworkInformation {
  // Forward declaring type: AixAddressFamily
  struct AixAddressFamily;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::System::Net::NetworkInformation::AixAddressFamily, "System.Net.NetworkInformation", "AixAddressFamily");
// Type namespace: System.Net.NetworkInformation
namespace System::Net::NetworkInformation {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: System.Net.NetworkInformation.AixAddressFamily
  // [TokenAttribute] Offset: FFFFFFFF
  struct AixAddressFamily/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: AixAddressFamily
    constexpr AixAddressFamily(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public System.Net.NetworkInformation.AixAddressFamily AF_INET
    static constexpr const int AF_INET = 2;
    // Get static field: static public System.Net.NetworkInformation.AixAddressFamily AF_INET
    static ::System::Net::NetworkInformation::AixAddressFamily _get_AF_INET();
    // Set static field: static public System.Net.NetworkInformation.AixAddressFamily AF_INET
    static void _set_AF_INET(::System::Net::NetworkInformation::AixAddressFamily value);
    // static field const value: static public System.Net.NetworkInformation.AixAddressFamily AF_INET6
    static constexpr const int AF_INET6 = 24;
    // Get static field: static public System.Net.NetworkInformation.AixAddressFamily AF_INET6
    static ::System::Net::NetworkInformation::AixAddressFamily _get_AF_INET6();
    // Set static field: static public System.Net.NetworkInformation.AixAddressFamily AF_INET6
    static void _set_AF_INET6(::System::Net::NetworkInformation::AixAddressFamily value);
    // static field const value: static public System.Net.NetworkInformation.AixAddressFamily AF_LINK
    static constexpr const int AF_LINK = 18;
    // Get static field: static public System.Net.NetworkInformation.AixAddressFamily AF_LINK
    static ::System::Net::NetworkInformation::AixAddressFamily _get_AF_LINK();
    // Set static field: static public System.Net.NetworkInformation.AixAddressFamily AF_LINK
    static void _set_AF_LINK(::System::Net::NetworkInformation::AixAddressFamily value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // System.Net.NetworkInformation.AixAddressFamily
  #pragma pack(pop)
  static check_size<sizeof(AixAddressFamily), 0 + sizeof(int)> __System_Net_NetworkInformation_AixAddressFamilySizeCheck;
  static_assert(sizeof(AixAddressFamily) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
