// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Completed includes
// Type namespace: System.Net.NetworkInformation.AixStructs
namespace System::Net::NetworkInformation::AixStructs {
  // Forward declaring type: ifconf
  struct ifconf;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::System::Net::NetworkInformation::AixStructs::ifconf, "System.Net.NetworkInformation.AixStructs", "ifconf");
// Type namespace: System.Net.NetworkInformation.AixStructs
namespace System::Net::NetworkInformation::AixStructs {
  // Size: 0x10
  #pragma pack(push, 1)
  // WARNING Layout: Explicit may not be correctly taken into account!
  // Autogenerated type: System.Net.NetworkInformation.AixStructs.ifconf
  // [TokenAttribute] Offset: FFFFFFFF
  struct ifconf/*, public ::System::ValueType*/ {
    public:
    public:
    // public System.Int32 ifc_len
    // Size: 0x4
    // Offset: 0x0
    int ifc_len;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: ifc_len and: ifc_buf
    char __padding0[0x4] = {};
    // public System.IntPtr ifc_buf
    // Size: 0x8
    // Offset: 0x8
    ::System::IntPtr ifc_buf;
    // Field size check
    static_assert(sizeof(::System::IntPtr) == 0x8);
    public:
    // Creating value type constructor for type: ifconf
    constexpr ifconf(int ifc_len_ = {}, ::System::IntPtr ifc_buf_ = {}) noexcept : ifc_len{ifc_len_}, ifc_buf{ifc_buf_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public System.Int32 ifc_len
    [[deprecated("Use field access instead!")]] int& dyn_ifc_len();
    // Get instance field reference: public System.IntPtr ifc_buf
    [[deprecated("Use field access instead!")]] ::System::IntPtr& dyn_ifc_buf();
  }; // System.Net.NetworkInformation.AixStructs.ifconf
  #pragma pack(pop)
  static check_size<sizeof(ifconf), 8 + sizeof(::System::IntPtr)> __System_Net_NetworkInformation_AixStructs_ifconfSizeCheck;
  static_assert(sizeof(ifconf) == 0x10);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
