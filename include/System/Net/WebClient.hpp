// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ComponentModel.Component
#include "System/ComponentModel/Component.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Net
namespace System::Net {
  // Forward declaring type: ICredentials
  class ICredentials;
  // Forward declaring type: WebHeaderCollection
  class WebHeaderCollection;
  // Forward declaring type: WebResponse
  class WebResponse;
  // Forward declaring type: WebRequest
  class WebRequest;
  // Forward declaring type: IWebProxy
  class IWebProxy;
  // Forward declaring type: DownloadStringCompletedEventHandler
  class DownloadStringCompletedEventHandler;
  // Forward declaring type: DownloadDataCompletedEventHandler
  class DownloadDataCompletedEventHandler;
  // Forward declaring type: UploadStringCompletedEventHandler
  class UploadStringCompletedEventHandler;
  // Forward declaring type: UploadDataCompletedEventHandler
  class UploadDataCompletedEventHandler;
  // Forward declaring type: UploadFileCompletedEventHandler
  class UploadFileCompletedEventHandler;
  // Forward declaring type: UploadValuesCompletedEventHandler
  class UploadValuesCompletedEventHandler;
  // Forward declaring type: OpenReadCompletedEventHandler
  class OpenReadCompletedEventHandler;
  // Forward declaring type: OpenWriteCompletedEventHandler
  class OpenWriteCompletedEventHandler;
  // Forward declaring type: DownloadProgressChangedEventHandler
  class DownloadProgressChangedEventHandler;
  // Forward declaring type: UploadProgressChangedEventHandler
  class UploadProgressChangedEventHandler;
  // Forward declaring type: DownloadStringCompletedEventArgs
  class DownloadStringCompletedEventArgs;
  // Forward declaring type: DownloadDataCompletedEventArgs
  class DownloadDataCompletedEventArgs;
  // Forward declaring type: DownloadProgressChangedEventArgs
  class DownloadProgressChangedEventArgs;
  // Forward declaring type: UploadStringCompletedEventArgs
  class UploadStringCompletedEventArgs;
  // Forward declaring type: UploadDataCompletedEventArgs
  class UploadDataCompletedEventArgs;
  // Forward declaring type: UploadFileCompletedEventArgs
  class UploadFileCompletedEventArgs;
  // Forward declaring type: UploadValuesCompletedEventArgs
  class UploadValuesCompletedEventArgs;
  // Forward declaring type: UploadProgressChangedEventArgs
  class UploadProgressChangedEventArgs;
  // Forward declaring type: OpenReadCompletedEventArgs
  class OpenReadCompletedEventArgs;
  // Forward declaring type: OpenWriteCompletedEventArgs
  class OpenWriteCompletedEventArgs;
  // Forward declaring type: WriteStreamClosedEventHandler
  class WriteStreamClosedEventHandler;
  // Forward declaring type: WriteStreamClosedEventArgs
  class WriteStreamClosedEventArgs;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Uri
  class Uri;
  // Forward declaring type: String
  class String;
  // Forward declaring type: IAsyncResult
  class IAsyncResult;
  // Forward declaring type: Action`3<T1, T2, T3>
  template<typename T1, typename T2, typename T3>
  class Action_3;
  // Forward declaring type: Exception
  class Exception;
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
}
// Forward declaring namespace: System::Collections::Specialized
namespace System::Collections::Specialized {
  // Forward declaring type: NameValueCollection
  class NameValueCollection;
}
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: Encoding
  class Encoding;
}
// Forward declaring namespace: System::ComponentModel
namespace System::ComponentModel {
  // Forward declaring type: AsyncOperation
  class AsyncOperation;
  // Forward declaring type: AsyncCompletedEventHandler
  class AsyncCompletedEventHandler;
  // Forward declaring type: AsyncCompletedEventArgs
  class AsyncCompletedEventArgs;
}
// Forward declaring namespace: System::Threading
namespace System::Threading {
  // Forward declaring type: SendOrPostCallback
  class SendOrPostCallback;
}
// Forward declaring namespace: System::Net::Cache
namespace System::Net::Cache {
  // Forward declaring type: RequestCachePolicy
  class RequestCachePolicy;
}
// Forward declaring namespace: System::Threading::Tasks
namespace System::Threading::Tasks {
  // Forward declaring type: Task`1<TResult>
  template<typename TResult>
  class Task_1;
  // Forward declaring type: Task
  class Task;
  // Forward declaring type: TaskCompletionSource`1<TResult>
  template<typename TResult>
  class TaskCompletionSource_1;
}
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: Stream
  class Stream;
  // Forward declaring type: FileStream
  class FileStream;
}
// Completed forward declares
// Type namespace: System.Net
namespace System::Net {
  // Forward declaring type: WebClient
  class WebClient;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Net::WebClient);
DEFINE_IL2CPP_ARG_TYPE(::System::Net::WebClient*, "System.Net", "WebClient");
// Type namespace: System.Net
namespace System::Net {
  // Size: 0x152
  #pragma pack(push, 1)
  // Autogenerated type: System.Net.WebClient
  // [TokenAttribute] Offset: FFFFFFFF
  class WebClient : public ::System::ComponentModel::Component {
    public:
    // Nested type: ::System::Net::WebClient::ProgressData
    class ProgressData;
    // Nested type: ::System::Net::WebClient::WebClientWriteStream
    class WebClientWriteStream;
    // Nested type: ::System::Net::WebClient::$GetWebResponseTaskAsync$d__112
    struct $GetWebResponseTaskAsync$d__112;
    // Nested type: ::System::Net::WebClient::$DownloadBitsAsync$d__150
    struct $DownloadBitsAsync$d__150;
    // Nested type: ::System::Net::WebClient::$UploadBitsAsync$d__152
    struct $UploadBitsAsync$d__152;
    // Nested type: ::System::Net::WebClient::$$c__DisplayClass164_0
    class $$c__DisplayClass164_0;
    // Nested type: ::System::Net::WebClient::$$c__DisplayClass167_0
    class $$c__DisplayClass167_0;
    // Nested type: ::System::Net::WebClient::$$c__DisplayClass182_0
    class $$c__DisplayClass182_0;
    // Nested type: ::System::Net::WebClient::$$c__DisplayClass185_0
    class $$c__DisplayClass185_0;
    // Nested type: ::System::Net::WebClient::$$c__DisplayClass188_0
    class $$c__DisplayClass188_0;
    // Nested type: ::System::Net::WebClient::$$c__DisplayClass192_0
    class $$c__DisplayClass192_0;
    // Nested type: ::System::Net::WebClient::$$c
    class $$c;
    // Nested type: ::System::Net::WebClient::$$c__DisplayClass194_0
    class $$c__DisplayClass194_0;
    // Nested type: ::System::Net::WebClient::$$c__DisplayClass198_0
    class $$c__DisplayClass198_0;
    // Nested type: ::System::Net::WebClient::$$c__DisplayClass202_0
    class $$c__DisplayClass202_0;
    // Nested type: ::System::Net::WebClient::$$c__DisplayClass204_0
    class $$c__DisplayClass204_0;
    // Nested type: ::System::Net::WebClient::$$c__DisplayClass206_0
    class $$c__DisplayClass206_0;
    // Nested type: ::System::Net::WebClient::$$c__DisplayClass210_0
    class $$c__DisplayClass210_0;
    // Nested type: ::System::Net::WebClient::$$c__DisplayClass214_0
    class $$c__DisplayClass214_0;
    // Nested type: ::System::Net::WebClient::$$c__DisplayClass218_0
    class $$c__DisplayClass218_0;
    public:
    // private System.Uri _baseAddress
    // Size: 0x8
    // Offset: 0x28
    ::System::Uri* baseAddress;
    // Field size check
    static_assert(sizeof(::System::Uri*) == 0x8);
    // private System.Net.ICredentials _credentials
    // Size: 0x8
    // Offset: 0x30
    ::System::Net::ICredentials* credentials;
    // Field size check
    static_assert(sizeof(::System::Net::ICredentials*) == 0x8);
    // private System.Net.WebHeaderCollection _headers
    // Size: 0x8
    // Offset: 0x38
    ::System::Net::WebHeaderCollection* headers;
    // Field size check
    static_assert(sizeof(::System::Net::WebHeaderCollection*) == 0x8);
    // private System.Collections.Specialized.NameValueCollection _requestParameters
    // Size: 0x8
    // Offset: 0x40
    ::System::Collections::Specialized::NameValueCollection* requestParameters;
    // Field size check
    static_assert(sizeof(::System::Collections::Specialized::NameValueCollection*) == 0x8);
    // private System.Net.WebResponse _webResponse
    // Size: 0x8
    // Offset: 0x48
    ::System::Net::WebResponse* webResponse;
    // Field size check
    static_assert(sizeof(::System::Net::WebResponse*) == 0x8);
    // private System.Net.WebRequest _webRequest
    // Size: 0x8
    // Offset: 0x50
    ::System::Net::WebRequest* webRequest;
    // Field size check
    static_assert(sizeof(::System::Net::WebRequest*) == 0x8);
    // private System.Text.Encoding _encoding
    // Size: 0x8
    // Offset: 0x58
    ::System::Text::Encoding* encoding;
    // Field size check
    static_assert(sizeof(::System::Text::Encoding*) == 0x8);
    // private System.String _method
    // Size: 0x8
    // Offset: 0x60
    ::StringW method;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Int64 _contentLength
    // Size: 0x8
    // Offset: 0x68
    int64_t contentLength;
    // Field size check
    static_assert(sizeof(int64_t) == 0x8);
    // private System.Boolean _initWebClientAsync
    // Size: 0x1
    // Offset: 0x70
    bool initWebClientAsync;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _canceled
    // Size: 0x1
    // Offset: 0x71
    bool canceled;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: canceled and: progress
    char __padding10[0x6] = {};
    // private System.Net.WebClient/ProgressData _progress
    // Size: 0x8
    // Offset: 0x78
    ::System::Net::WebClient::ProgressData* progress;
    // Field size check
    static_assert(sizeof(::System::Net::WebClient::ProgressData*) == 0x8);
    // private System.Net.IWebProxy _proxy
    // Size: 0x8
    // Offset: 0x80
    ::System::Net::IWebProxy* proxy;
    // Field size check
    static_assert(sizeof(::System::Net::IWebProxy*) == 0x8);
    // private System.Boolean _proxySet
    // Size: 0x1
    // Offset: 0x88
    bool proxySet;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: proxySet and: callNesting
    char __padding13[0x3] = {};
    // private System.Int32 _callNesting
    // Size: 0x4
    // Offset: 0x8C
    int callNesting;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.ComponentModel.AsyncOperation _asyncOp
    // Size: 0x8
    // Offset: 0x90
    ::System::ComponentModel::AsyncOperation* asyncOp;
    // Field size check
    static_assert(sizeof(::System::ComponentModel::AsyncOperation*) == 0x8);
    // private System.Threading.SendOrPostCallback _downloadDataOperationCompleted
    // Size: 0x8
    // Offset: 0x98
    ::System::Threading::SendOrPostCallback* downloadDataOperationCompleted;
    // Field size check
    static_assert(sizeof(::System::Threading::SendOrPostCallback*) == 0x8);
    // private System.Threading.SendOrPostCallback _openReadOperationCompleted
    // Size: 0x8
    // Offset: 0xA0
    ::System::Threading::SendOrPostCallback* openReadOperationCompleted;
    // Field size check
    static_assert(sizeof(::System::Threading::SendOrPostCallback*) == 0x8);
    // private System.Threading.SendOrPostCallback _openWriteOperationCompleted
    // Size: 0x8
    // Offset: 0xA8
    ::System::Threading::SendOrPostCallback* openWriteOperationCompleted;
    // Field size check
    static_assert(sizeof(::System::Threading::SendOrPostCallback*) == 0x8);
    // private System.Threading.SendOrPostCallback _downloadStringOperationCompleted
    // Size: 0x8
    // Offset: 0xB0
    ::System::Threading::SendOrPostCallback* downloadStringOperationCompleted;
    // Field size check
    static_assert(sizeof(::System::Threading::SendOrPostCallback*) == 0x8);
    // private System.Threading.SendOrPostCallback _downloadFileOperationCompleted
    // Size: 0x8
    // Offset: 0xB8
    ::System::Threading::SendOrPostCallback* downloadFileOperationCompleted;
    // Field size check
    static_assert(sizeof(::System::Threading::SendOrPostCallback*) == 0x8);
    // private System.Threading.SendOrPostCallback _uploadStringOperationCompleted
    // Size: 0x8
    // Offset: 0xC0
    ::System::Threading::SendOrPostCallback* uploadStringOperationCompleted;
    // Field size check
    static_assert(sizeof(::System::Threading::SendOrPostCallback*) == 0x8);
    // private System.Threading.SendOrPostCallback _uploadDataOperationCompleted
    // Size: 0x8
    // Offset: 0xC8
    ::System::Threading::SendOrPostCallback* uploadDataOperationCompleted;
    // Field size check
    static_assert(sizeof(::System::Threading::SendOrPostCallback*) == 0x8);
    // private System.Threading.SendOrPostCallback _uploadFileOperationCompleted
    // Size: 0x8
    // Offset: 0xD0
    ::System::Threading::SendOrPostCallback* uploadFileOperationCompleted;
    // Field size check
    static_assert(sizeof(::System::Threading::SendOrPostCallback*) == 0x8);
    // private System.Threading.SendOrPostCallback _uploadValuesOperationCompleted
    // Size: 0x8
    // Offset: 0xD8
    ::System::Threading::SendOrPostCallback* uploadValuesOperationCompleted;
    // Field size check
    static_assert(sizeof(::System::Threading::SendOrPostCallback*) == 0x8);
    // private System.Threading.SendOrPostCallback _reportDownloadProgressChanged
    // Size: 0x8
    // Offset: 0xE0
    ::System::Threading::SendOrPostCallback* reportDownloadProgressChanged;
    // Field size check
    static_assert(sizeof(::System::Threading::SendOrPostCallback*) == 0x8);
    // private System.Threading.SendOrPostCallback _reportUploadProgressChanged
    // Size: 0x8
    // Offset: 0xE8
    ::System::Threading::SendOrPostCallback* reportUploadProgressChanged;
    // Field size check
    static_assert(sizeof(::System::Threading::SendOrPostCallback*) == 0x8);
    // private System.Net.DownloadStringCompletedEventHandler DownloadStringCompleted
    // Size: 0x8
    // Offset: 0xF0
    ::System::Net::DownloadStringCompletedEventHandler* DownloadStringCompleted;
    // Field size check
    static_assert(sizeof(::System::Net::DownloadStringCompletedEventHandler*) == 0x8);
    // private System.Net.DownloadDataCompletedEventHandler DownloadDataCompleted
    // Size: 0x8
    // Offset: 0xF8
    ::System::Net::DownloadDataCompletedEventHandler* DownloadDataCompleted;
    // Field size check
    static_assert(sizeof(::System::Net::DownloadDataCompletedEventHandler*) == 0x8);
    // private System.ComponentModel.AsyncCompletedEventHandler DownloadFileCompleted
    // Size: 0x8
    // Offset: 0x100
    ::System::ComponentModel::AsyncCompletedEventHandler* DownloadFileCompleted;
    // Field size check
    static_assert(sizeof(::System::ComponentModel::AsyncCompletedEventHandler*) == 0x8);
    // private System.Net.UploadStringCompletedEventHandler UploadStringCompleted
    // Size: 0x8
    // Offset: 0x108
    ::System::Net::UploadStringCompletedEventHandler* UploadStringCompleted;
    // Field size check
    static_assert(sizeof(::System::Net::UploadStringCompletedEventHandler*) == 0x8);
    // private System.Net.UploadDataCompletedEventHandler UploadDataCompleted
    // Size: 0x8
    // Offset: 0x110
    ::System::Net::UploadDataCompletedEventHandler* UploadDataCompleted;
    // Field size check
    static_assert(sizeof(::System::Net::UploadDataCompletedEventHandler*) == 0x8);
    // private System.Net.UploadFileCompletedEventHandler UploadFileCompleted
    // Size: 0x8
    // Offset: 0x118
    ::System::Net::UploadFileCompletedEventHandler* UploadFileCompleted;
    // Field size check
    static_assert(sizeof(::System::Net::UploadFileCompletedEventHandler*) == 0x8);
    // private System.Net.UploadValuesCompletedEventHandler UploadValuesCompleted
    // Size: 0x8
    // Offset: 0x120
    ::System::Net::UploadValuesCompletedEventHandler* UploadValuesCompleted;
    // Field size check
    static_assert(sizeof(::System::Net::UploadValuesCompletedEventHandler*) == 0x8);
    // private System.Net.OpenReadCompletedEventHandler OpenReadCompleted
    // Size: 0x8
    // Offset: 0x128
    ::System::Net::OpenReadCompletedEventHandler* OpenReadCompleted;
    // Field size check
    static_assert(sizeof(::System::Net::OpenReadCompletedEventHandler*) == 0x8);
    // private System.Net.OpenWriteCompletedEventHandler OpenWriteCompleted
    // Size: 0x8
    // Offset: 0x130
    ::System::Net::OpenWriteCompletedEventHandler* OpenWriteCompleted;
    // Field size check
    static_assert(sizeof(::System::Net::OpenWriteCompletedEventHandler*) == 0x8);
    // private System.Net.DownloadProgressChangedEventHandler DownloadProgressChanged
    // Size: 0x8
    // Offset: 0x138
    ::System::Net::DownloadProgressChangedEventHandler* DownloadProgressChanged;
    // Field size check
    static_assert(sizeof(::System::Net::DownloadProgressChangedEventHandler*) == 0x8);
    // private System.Net.UploadProgressChangedEventHandler UploadProgressChanged
    // Size: 0x8
    // Offset: 0x140
    ::System::Net::UploadProgressChangedEventHandler* UploadProgressChanged;
    // Field size check
    static_assert(sizeof(::System::Net::UploadProgressChangedEventHandler*) == 0x8);
    // private System.Net.Cache.RequestCachePolicy <CachePolicy>k__BackingField
    // Size: 0x8
    // Offset: 0x148
    ::System::Net::Cache::RequestCachePolicy* CachePolicy;
    // Field size check
    static_assert(sizeof(::System::Net::Cache::RequestCachePolicy*) == 0x8);
    // private System.Boolean <AllowReadStreamBuffering>k__BackingField
    // Size: 0x1
    // Offset: 0x150
    bool AllowReadStreamBuffering;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean <AllowWriteStreamBuffering>k__BackingField
    // Size: 0x1
    // Offset: 0x151
    bool AllowWriteStreamBuffering;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // static field const value: static private System.Int32 DefaultCopyBufferLength
    static constexpr const int DefaultCopyBufferLength = 8192;
    // Get static field: static private System.Int32 DefaultCopyBufferLength
    static int _get_DefaultCopyBufferLength();
    // Set static field: static private System.Int32 DefaultCopyBufferLength
    static void _set_DefaultCopyBufferLength(int value);
    // static field const value: static private System.Int32 DefaultDownloadBufferLength
    static constexpr const int DefaultDownloadBufferLength = 65536;
    // Get static field: static private System.Int32 DefaultDownloadBufferLength
    static int _get_DefaultDownloadBufferLength();
    // Set static field: static private System.Int32 DefaultDownloadBufferLength
    static void _set_DefaultDownloadBufferLength(int value);
    // static field const value: static private System.String DefaultUploadFileContentType
    static constexpr const char* DefaultUploadFileContentType = "application/octet-stream";
    // Get static field: static private System.String DefaultUploadFileContentType
    static ::StringW _get_DefaultUploadFileContentType();
    // Set static field: static private System.String DefaultUploadFileContentType
    static void _set_DefaultUploadFileContentType(::StringW value);
    // static field const value: static private System.String UploadFileContentType
    static constexpr const char* UploadFileContentType = "multipart/form-data";
    // Get static field: static private System.String UploadFileContentType
    static ::StringW _get_UploadFileContentType();
    // Set static field: static private System.String UploadFileContentType
    static void _set_UploadFileContentType(::StringW value);
    // static field const value: static private System.String UploadValuesContentType
    static constexpr const char* UploadValuesContentType = "application/x-www-form-urlencoded";
    // Get static field: static private System.String UploadValuesContentType
    static ::StringW _get_UploadValuesContentType();
    // Set static field: static private System.String UploadValuesContentType
    static void _set_UploadValuesContentType(::StringW value);
    // Get static field: static private readonly System.Char[] s_parseContentTypeSeparators
    static ::ArrayW<::Il2CppChar> _get_s_parseContentTypeSeparators();
    // Set static field: static private readonly System.Char[] s_parseContentTypeSeparators
    static void _set_s_parseContentTypeSeparators(::ArrayW<::Il2CppChar> value);
    // Get static field: static private readonly System.Text.Encoding[] s_knownEncodings
    static ::ArrayW<::System::Text::Encoding*> _get_s_knownEncodings();
    // Set static field: static private readonly System.Text.Encoding[] s_knownEncodings
    static void _set_s_knownEncodings(::ArrayW<::System::Text::Encoding*> value);
    // Get instance field reference: private System.Uri _baseAddress
    [[deprecated("Use field access instead!")]] ::System::Uri*& dyn__baseAddress();
    // Get instance field reference: private System.Net.ICredentials _credentials
    [[deprecated("Use field access instead!")]] ::System::Net::ICredentials*& dyn__credentials();
    // Get instance field reference: private System.Net.WebHeaderCollection _headers
    [[deprecated("Use field access instead!")]] ::System::Net::WebHeaderCollection*& dyn__headers();
    // Get instance field reference: private System.Collections.Specialized.NameValueCollection _requestParameters
    [[deprecated("Use field access instead!")]] ::System::Collections::Specialized::NameValueCollection*& dyn__requestParameters();
    // Get instance field reference: private System.Net.WebResponse _webResponse
    [[deprecated("Use field access instead!")]] ::System::Net::WebResponse*& dyn__webResponse();
    // Get instance field reference: private System.Net.WebRequest _webRequest
    [[deprecated("Use field access instead!")]] ::System::Net::WebRequest*& dyn__webRequest();
    // Get instance field reference: private System.Text.Encoding _encoding
    [[deprecated("Use field access instead!")]] ::System::Text::Encoding*& dyn__encoding();
    // Get instance field reference: private System.String _method
    [[deprecated("Use field access instead!")]] ::StringW& dyn__method();
    // Get instance field reference: private System.Int64 _contentLength
    [[deprecated("Use field access instead!")]] int64_t& dyn__contentLength();
    // Get instance field reference: private System.Boolean _initWebClientAsync
    [[deprecated("Use field access instead!")]] bool& dyn__initWebClientAsync();
    // Get instance field reference: private System.Boolean _canceled
    [[deprecated("Use field access instead!")]] bool& dyn__canceled();
    // Get instance field reference: private System.Net.WebClient/ProgressData _progress
    [[deprecated("Use field access instead!")]] ::System::Net::WebClient::ProgressData*& dyn__progress();
    // Get instance field reference: private System.Net.IWebProxy _proxy
    [[deprecated("Use field access instead!")]] ::System::Net::IWebProxy*& dyn__proxy();
    // Get instance field reference: private System.Boolean _proxySet
    [[deprecated("Use field access instead!")]] bool& dyn__proxySet();
    // Get instance field reference: private System.Int32 _callNesting
    [[deprecated("Use field access instead!")]] int& dyn__callNesting();
    // Get instance field reference: private System.ComponentModel.AsyncOperation _asyncOp
    [[deprecated("Use field access instead!")]] ::System::ComponentModel::AsyncOperation*& dyn__asyncOp();
    // Get instance field reference: private System.Threading.SendOrPostCallback _downloadDataOperationCompleted
    [[deprecated("Use field access instead!")]] ::System::Threading::SendOrPostCallback*& dyn__downloadDataOperationCompleted();
    // Get instance field reference: private System.Threading.SendOrPostCallback _openReadOperationCompleted
    [[deprecated("Use field access instead!")]] ::System::Threading::SendOrPostCallback*& dyn__openReadOperationCompleted();
    // Get instance field reference: private System.Threading.SendOrPostCallback _openWriteOperationCompleted
    [[deprecated("Use field access instead!")]] ::System::Threading::SendOrPostCallback*& dyn__openWriteOperationCompleted();
    // Get instance field reference: private System.Threading.SendOrPostCallback _downloadStringOperationCompleted
    [[deprecated("Use field access instead!")]] ::System::Threading::SendOrPostCallback*& dyn__downloadStringOperationCompleted();
    // Get instance field reference: private System.Threading.SendOrPostCallback _downloadFileOperationCompleted
    [[deprecated("Use field access instead!")]] ::System::Threading::SendOrPostCallback*& dyn__downloadFileOperationCompleted();
    // Get instance field reference: private System.Threading.SendOrPostCallback _uploadStringOperationCompleted
    [[deprecated("Use field access instead!")]] ::System::Threading::SendOrPostCallback*& dyn__uploadStringOperationCompleted();
    // Get instance field reference: private System.Threading.SendOrPostCallback _uploadDataOperationCompleted
    [[deprecated("Use field access instead!")]] ::System::Threading::SendOrPostCallback*& dyn__uploadDataOperationCompleted();
    // Get instance field reference: private System.Threading.SendOrPostCallback _uploadFileOperationCompleted
    [[deprecated("Use field access instead!")]] ::System::Threading::SendOrPostCallback*& dyn__uploadFileOperationCompleted();
    // Get instance field reference: private System.Threading.SendOrPostCallback _uploadValuesOperationCompleted
    [[deprecated("Use field access instead!")]] ::System::Threading::SendOrPostCallback*& dyn__uploadValuesOperationCompleted();
    // Get instance field reference: private System.Threading.SendOrPostCallback _reportDownloadProgressChanged
    [[deprecated("Use field access instead!")]] ::System::Threading::SendOrPostCallback*& dyn__reportDownloadProgressChanged();
    // Get instance field reference: private System.Threading.SendOrPostCallback _reportUploadProgressChanged
    [[deprecated("Use field access instead!")]] ::System::Threading::SendOrPostCallback*& dyn__reportUploadProgressChanged();
    // Get instance field reference: private System.Net.DownloadStringCompletedEventHandler DownloadStringCompleted
    [[deprecated("Use field access instead!")]] ::System::Net::DownloadStringCompletedEventHandler*& dyn_DownloadStringCompleted();
    // Get instance field reference: private System.Net.DownloadDataCompletedEventHandler DownloadDataCompleted
    [[deprecated("Use field access instead!")]] ::System::Net::DownloadDataCompletedEventHandler*& dyn_DownloadDataCompleted();
    // Get instance field reference: private System.ComponentModel.AsyncCompletedEventHandler DownloadFileCompleted
    [[deprecated("Use field access instead!")]] ::System::ComponentModel::AsyncCompletedEventHandler*& dyn_DownloadFileCompleted();
    // Get instance field reference: private System.Net.UploadStringCompletedEventHandler UploadStringCompleted
    [[deprecated("Use field access instead!")]] ::System::Net::UploadStringCompletedEventHandler*& dyn_UploadStringCompleted();
    // Get instance field reference: private System.Net.UploadDataCompletedEventHandler UploadDataCompleted
    [[deprecated("Use field access instead!")]] ::System::Net::UploadDataCompletedEventHandler*& dyn_UploadDataCompleted();
    // Get instance field reference: private System.Net.UploadFileCompletedEventHandler UploadFileCompleted
    [[deprecated("Use field access instead!")]] ::System::Net::UploadFileCompletedEventHandler*& dyn_UploadFileCompleted();
    // Get instance field reference: private System.Net.UploadValuesCompletedEventHandler UploadValuesCompleted
    [[deprecated("Use field access instead!")]] ::System::Net::UploadValuesCompletedEventHandler*& dyn_UploadValuesCompleted();
    // Get instance field reference: private System.Net.OpenReadCompletedEventHandler OpenReadCompleted
    [[deprecated("Use field access instead!")]] ::System::Net::OpenReadCompletedEventHandler*& dyn_OpenReadCompleted();
    // Get instance field reference: private System.Net.OpenWriteCompletedEventHandler OpenWriteCompleted
    [[deprecated("Use field access instead!")]] ::System::Net::OpenWriteCompletedEventHandler*& dyn_OpenWriteCompleted();
    // Get instance field reference: private System.Net.DownloadProgressChangedEventHandler DownloadProgressChanged
    [[deprecated("Use field access instead!")]] ::System::Net::DownloadProgressChangedEventHandler*& dyn_DownloadProgressChanged();
    // Get instance field reference: private System.Net.UploadProgressChangedEventHandler UploadProgressChanged
    [[deprecated("Use field access instead!")]] ::System::Net::UploadProgressChangedEventHandler*& dyn_UploadProgressChanged();
    // Get instance field reference: private System.Net.Cache.RequestCachePolicy <CachePolicy>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Net::Cache::RequestCachePolicy*& dyn_$CachePolicy$k__BackingField();
    // Get instance field reference: private System.Boolean <AllowReadStreamBuffering>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$AllowReadStreamBuffering$k__BackingField();
    // Get instance field reference: private System.Boolean <AllowWriteStreamBuffering>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$AllowWriteStreamBuffering$k__BackingField();
    // public System.Void add_DownloadStringCompleted(System.Net.DownloadStringCompletedEventHandler value)
    // Offset: 0x4FBFB28
    void add_DownloadStringCompleted(::System::Net::DownloadStringCompletedEventHandler* value);
    // public System.Void remove_DownloadStringCompleted(System.Net.DownloadStringCompletedEventHandler value)
    // Offset: 0x4FBFBC4
    void remove_DownloadStringCompleted(::System::Net::DownloadStringCompletedEventHandler* value);
    // public System.Void add_DownloadDataCompleted(System.Net.DownloadDataCompletedEventHandler value)
    // Offset: 0x4FBFC60
    void add_DownloadDataCompleted(::System::Net::DownloadDataCompletedEventHandler* value);
    // public System.Void remove_DownloadDataCompleted(System.Net.DownloadDataCompletedEventHandler value)
    // Offset: 0x4FBFCFC
    void remove_DownloadDataCompleted(::System::Net::DownloadDataCompletedEventHandler* value);
    // public System.Void add_DownloadFileCompleted(System.ComponentModel.AsyncCompletedEventHandler value)
    // Offset: 0x4FBFD98
    void add_DownloadFileCompleted(::System::ComponentModel::AsyncCompletedEventHandler* value);
    // public System.Void remove_DownloadFileCompleted(System.ComponentModel.AsyncCompletedEventHandler value)
    // Offset: 0x4FBFE38
    void remove_DownloadFileCompleted(::System::ComponentModel::AsyncCompletedEventHandler* value);
    // public System.Void add_UploadStringCompleted(System.Net.UploadStringCompletedEventHandler value)
    // Offset: 0x4FBFED8
    void add_UploadStringCompleted(::System::Net::UploadStringCompletedEventHandler* value);
    // public System.Void remove_UploadStringCompleted(System.Net.UploadStringCompletedEventHandler value)
    // Offset: 0x4FBFF78
    void remove_UploadStringCompleted(::System::Net::UploadStringCompletedEventHandler* value);
    // public System.Void add_UploadDataCompleted(System.Net.UploadDataCompletedEventHandler value)
    // Offset: 0x4FC0018
    void add_UploadDataCompleted(::System::Net::UploadDataCompletedEventHandler* value);
    // public System.Void remove_UploadDataCompleted(System.Net.UploadDataCompletedEventHandler value)
    // Offset: 0x4FC00B8
    void remove_UploadDataCompleted(::System::Net::UploadDataCompletedEventHandler* value);
    // public System.Void add_UploadFileCompleted(System.Net.UploadFileCompletedEventHandler value)
    // Offset: 0x4FC0158
    void add_UploadFileCompleted(::System::Net::UploadFileCompletedEventHandler* value);
    // public System.Void remove_UploadFileCompleted(System.Net.UploadFileCompletedEventHandler value)
    // Offset: 0x4FC01F8
    void remove_UploadFileCompleted(::System::Net::UploadFileCompletedEventHandler* value);
    // public System.Void add_UploadValuesCompleted(System.Net.UploadValuesCompletedEventHandler value)
    // Offset: 0x4FC0298
    void add_UploadValuesCompleted(::System::Net::UploadValuesCompletedEventHandler* value);
    // public System.Void remove_UploadValuesCompleted(System.Net.UploadValuesCompletedEventHandler value)
    // Offset: 0x4FC0338
    void remove_UploadValuesCompleted(::System::Net::UploadValuesCompletedEventHandler* value);
    // public System.Void add_OpenReadCompleted(System.Net.OpenReadCompletedEventHandler value)
    // Offset: 0x4FC03D8
    void add_OpenReadCompleted(::System::Net::OpenReadCompletedEventHandler* value);
    // public System.Void remove_OpenReadCompleted(System.Net.OpenReadCompletedEventHandler value)
    // Offset: 0x4FC0478
    void remove_OpenReadCompleted(::System::Net::OpenReadCompletedEventHandler* value);
    // public System.Void add_OpenWriteCompleted(System.Net.OpenWriteCompletedEventHandler value)
    // Offset: 0x4FC0518
    void add_OpenWriteCompleted(::System::Net::OpenWriteCompletedEventHandler* value);
    // public System.Void remove_OpenWriteCompleted(System.Net.OpenWriteCompletedEventHandler value)
    // Offset: 0x4FC05B8
    void remove_OpenWriteCompleted(::System::Net::OpenWriteCompletedEventHandler* value);
    // public System.Void add_DownloadProgressChanged(System.Net.DownloadProgressChangedEventHandler value)
    // Offset: 0x4FC0658
    void add_DownloadProgressChanged(::System::Net::DownloadProgressChangedEventHandler* value);
    // public System.Void remove_DownloadProgressChanged(System.Net.DownloadProgressChangedEventHandler value)
    // Offset: 0x4FC06F8
    void remove_DownloadProgressChanged(::System::Net::DownloadProgressChangedEventHandler* value);
    // public System.Void add_UploadProgressChanged(System.Net.UploadProgressChangedEventHandler value)
    // Offset: 0x4FC0798
    void add_UploadProgressChanged(::System::Net::UploadProgressChangedEventHandler* value);
    // public System.Void remove_UploadProgressChanged(System.Net.UploadProgressChangedEventHandler value)
    // Offset: 0x4FC0838
    void remove_UploadProgressChanged(::System::Net::UploadProgressChangedEventHandler* value);
    // protected System.Void OnDownloadStringCompleted(System.Net.DownloadStringCompletedEventArgs e)
    // Offset: 0x4FC08D8
    void OnDownloadStringCompleted(::System::Net::DownloadStringCompletedEventArgs* e);
    // protected System.Void OnDownloadDataCompleted(System.Net.DownloadDataCompletedEventArgs e)
    // Offset: 0x4FC0900
    void OnDownloadDataCompleted(::System::Net::DownloadDataCompletedEventArgs* e);
    // protected System.Void OnDownloadFileCompleted(System.ComponentModel.AsyncCompletedEventArgs e)
    // Offset: 0x4FC0928
    void OnDownloadFileCompleted(::System::ComponentModel::AsyncCompletedEventArgs* e);
    // protected System.Void OnDownloadProgressChanged(System.Net.DownloadProgressChangedEventArgs e)
    // Offset: 0x4FC0950
    void OnDownloadProgressChanged(::System::Net::DownloadProgressChangedEventArgs* e);
    // protected System.Void OnUploadStringCompleted(System.Net.UploadStringCompletedEventArgs e)
    // Offset: 0x4FC0978
    void OnUploadStringCompleted(::System::Net::UploadStringCompletedEventArgs* e);
    // protected System.Void OnUploadDataCompleted(System.Net.UploadDataCompletedEventArgs e)
    // Offset: 0x4FC09A0
    void OnUploadDataCompleted(::System::Net::UploadDataCompletedEventArgs* e);
    // protected System.Void OnUploadFileCompleted(System.Net.UploadFileCompletedEventArgs e)
    // Offset: 0x4FC09C8
    void OnUploadFileCompleted(::System::Net::UploadFileCompletedEventArgs* e);
    // protected System.Void OnUploadValuesCompleted(System.Net.UploadValuesCompletedEventArgs e)
    // Offset: 0x4FC09F0
    void OnUploadValuesCompleted(::System::Net::UploadValuesCompletedEventArgs* e);
    // protected System.Void OnUploadProgressChanged(System.Net.UploadProgressChangedEventArgs e)
    // Offset: 0x4FC0A18
    void OnUploadProgressChanged(::System::Net::UploadProgressChangedEventArgs* e);
    // protected System.Void OnOpenReadCompleted(System.Net.OpenReadCompletedEventArgs e)
    // Offset: 0x4FC0A40
    void OnOpenReadCompleted(::System::Net::OpenReadCompletedEventArgs* e);
    // protected System.Void OnOpenWriteCompleted(System.Net.OpenWriteCompletedEventArgs e)
    // Offset: 0x4FC0A68
    void OnOpenWriteCompleted(::System::Net::OpenWriteCompletedEventArgs* e);
    // private System.Void StartOperation()
    // Offset: 0x4FC0A90
    void StartOperation();
    // private System.ComponentModel.AsyncOperation StartAsyncOperation(System.Object userToken)
    // Offset: 0x4FC0B78
    ::System::ComponentModel::AsyncOperation* StartAsyncOperation(::Il2CppObject* userToken);
    // private System.Void EndOperation()
    // Offset: 0x4FC0B58
    void EndOperation();
    // public System.Text.Encoding get_Encoding()
    // Offset: 0x4FC0F1C
    ::System::Text::Encoding* get_Encoding();
    // public System.Void set_Encoding(System.Text.Encoding value)
    // Offset: 0x4FC0F24
    void set_Encoding(::System::Text::Encoding* value);
    // public System.String get_BaseAddress()
    // Offset: 0x4FC0FF8
    ::StringW get_BaseAddress();
    // public System.Void set_BaseAddress(System.String value)
    // Offset: 0x4FC10A0
    void set_BaseAddress(::StringW value);
    // public System.Net.ICredentials get_Credentials()
    // Offset: 0x4FC1204
    ::System::Net::ICredentials* get_Credentials();
    // public System.Void set_Credentials(System.Net.ICredentials value)
    // Offset: 0x4FC120C
    void set_Credentials(::System::Net::ICredentials* value);
    // public System.Boolean get_UseDefaultCredentials()
    // Offset: 0x4FC1214
    bool get_UseDefaultCredentials();
    // public System.Void set_UseDefaultCredentials(System.Boolean value)
    // Offset: 0x4FC1278
    void set_UseDefaultCredentials(bool value);
    // public System.Net.WebHeaderCollection get_Headers()
    // Offset: 0x4FC12F0
    ::System::Net::WebHeaderCollection* get_Headers();
    // public System.Void set_Headers(System.Net.WebHeaderCollection value)
    // Offset: 0x4FC1360
    void set_Headers(::System::Net::WebHeaderCollection* value);
    // public System.Collections.Specialized.NameValueCollection get_QueryString()
    // Offset: 0x4FC1368
    ::System::Collections::Specialized::NameValueCollection* get_QueryString();
    // public System.Void set_QueryString(System.Collections.Specialized.NameValueCollection value)
    // Offset: 0x4FC13D8
    void set_QueryString(::System::Collections::Specialized::NameValueCollection* value);
    // public System.Net.WebHeaderCollection get_ResponseHeaders()
    // Offset: 0x4FC13E0
    ::System::Net::WebHeaderCollection* get_ResponseHeaders();
    // public System.Net.IWebProxy get_Proxy()
    // Offset: 0x4FC13FC
    ::System::Net::IWebProxy* get_Proxy();
    // public System.Void set_Proxy(System.Net.IWebProxy value)
    // Offset: 0x4FC1468
    void set_Proxy(::System::Net::IWebProxy* value);
    // public System.Net.Cache.RequestCachePolicy get_CachePolicy()
    // Offset: 0x4FC148C
    ::System::Net::Cache::RequestCachePolicy* get_CachePolicy();
    // public System.Void set_CachePolicy(System.Net.Cache.RequestCachePolicy value)
    // Offset: 0x4FC1494
    void set_CachePolicy(::System::Net::Cache::RequestCachePolicy* value);
    // public System.Boolean get_IsBusy()
    // Offset: 0x4FC14A4
    bool get_IsBusy();
    // protected System.Net.WebRequest GetWebRequest(System.Uri address)
    // Offset: 0x4FC14B4
    ::System::Net::WebRequest* GetWebRequest(::System::Uri* address);
    // protected System.Net.WebResponse GetWebResponse(System.Net.WebRequest request)
    // Offset: 0x4FC19C0
    ::System::Net::WebResponse* GetWebResponse(::System::Net::WebRequest* request);
    // protected System.Net.WebResponse GetWebResponse(System.Net.WebRequest request, System.IAsyncResult result)
    // Offset: 0x4FC1A10
    ::System::Net::WebResponse* GetWebResponse(::System::Net::WebRequest* request, ::System::IAsyncResult* result);
    // private System.Threading.Tasks.Task`1<System.Net.WebResponse> GetWebResponseTaskAsync(System.Net.WebRequest request)
    // Offset: 0x4FC1A64
    ::System::Threading::Tasks::Task_1<::System::Net::WebResponse*>* GetWebResponseTaskAsync(::System::Net::WebRequest* request);
    // public System.Byte[] DownloadData(System.String address)
    // Offset: 0x4FC1B98
    ::ArrayW<uint8_t> DownloadData(::StringW address);
    // public System.Byte[] DownloadData(System.Uri address)
    // Offset: 0x4FC1D2C
    ::ArrayW<uint8_t> DownloadData(::System::Uri* address);
    // private System.Byte[] DownloadDataInternal(System.Uri address, out System.Net.WebRequest request)
    // Offset: 0x4FC1E40
    ::ArrayW<uint8_t> DownloadDataInternal(::System::Uri* address, ByRef<::System::Net::WebRequest*> request);
    // public System.Void DownloadFile(System.String address, System.String fileName)
    // Offset: 0x4FC29A4
    void DownloadFile(::StringW address, ::StringW fileName);
    // public System.Void DownloadFile(System.Uri address, System.String fileName)
    // Offset: 0x4FC29D0
    void DownloadFile(::System::Uri* address, ::StringW fileName);
    // public System.IO.Stream OpenRead(System.String address)
    // Offset: 0x4FC2DB4
    ::System::IO::Stream* OpenRead(::StringW address);
    // public System.IO.Stream OpenRead(System.Uri address)
    // Offset: 0x4FC2DD0
    ::System::IO::Stream* OpenRead(::System::Uri* address);
    // public System.IO.Stream OpenWrite(System.String address)
    // Offset: 0x4FC3144
    ::System::IO::Stream* OpenWrite(::StringW address);
    // public System.IO.Stream OpenWrite(System.Uri address)
    // Offset: 0x4FC3504
    ::System::IO::Stream* OpenWrite(::System::Uri* address);
    // public System.IO.Stream OpenWrite(System.String address, System.String method)
    // Offset: 0x4FC350C
    ::System::IO::Stream* OpenWrite(::StringW address, ::StringW method);
    // public System.IO.Stream OpenWrite(System.Uri address, System.String method)
    // Offset: 0x4FC3164
    ::System::IO::Stream* OpenWrite(::System::Uri* address, ::StringW method);
    // public System.Byte[] UploadData(System.String address, System.Byte[] data)
    // Offset: 0x4FC36A4
    ::ArrayW<uint8_t> UploadData(::StringW address, ::ArrayW<uint8_t> data);
    // public System.Byte[] UploadData(System.Uri address, System.Byte[] data)
    // Offset: 0x4FC3834
    ::ArrayW<uint8_t> UploadData(::System::Uri* address, ::ArrayW<uint8_t> data);
    // public System.Byte[] UploadData(System.String address, System.String method, System.Byte[] data)
    // Offset: 0x4FC3840
    ::ArrayW<uint8_t> UploadData(::StringW address, ::StringW method, ::ArrayW<uint8_t> data);
    // public System.Byte[] UploadData(System.Uri address, System.String method, System.Byte[] data)
    // Offset: 0x4FC36D4
    ::ArrayW<uint8_t> UploadData(::System::Uri* address, ::StringW method, ::ArrayW<uint8_t> data);
    // private System.Byte[] UploadDataInternal(System.Uri address, System.String method, System.Byte[] data, out System.Net.WebRequest request)
    // Offset: 0x4FC3874
    ::ArrayW<uint8_t> UploadDataInternal(::System::Uri* address, ::StringW method, ::ArrayW<uint8_t> data, ByRef<::System::Net::WebRequest*> request);
    // private System.Void OpenFileInternal(System.Boolean needsHeaderAndBoundary, System.String fileName, ref System.IO.FileStream fs, ref System.Byte[] buffer, ref System.Byte[] formHeaderBytes, ref System.Byte[] boundaryBytes)
    // Offset: 0x4FC416C
    void OpenFileInternal(bool needsHeaderAndBoundary, ::StringW fileName, ByRef<::System::IO::FileStream*> fs, ByRef<::ArrayW<uint8_t>> buffer, ByRef<::ArrayW<uint8_t>> formHeaderBytes, ByRef<::ArrayW<uint8_t>> boundaryBytes);
    // public System.Byte[] UploadFile(System.String address, System.String fileName)
    // Offset: 0x4FC4858
    ::ArrayW<uint8_t> UploadFile(::StringW address, ::StringW fileName);
    // public System.Byte[] UploadFile(System.Uri address, System.String fileName)
    // Offset: 0x4FC4888
    ::ArrayW<uint8_t> UploadFile(::System::Uri* address, ::StringW fileName);
    // public System.Byte[] UploadFile(System.String address, System.String method, System.String fileName)
    // Offset: 0x4FC4CCC
    ::ArrayW<uint8_t> UploadFile(::StringW address, ::StringW method, ::StringW fileName);
    // public System.Byte[] UploadFile(System.Uri address, System.String method, System.String fileName)
    // Offset: 0x4FC4894
    ::ArrayW<uint8_t> UploadFile(::System::Uri* address, ::StringW method, ::StringW fileName);
    // private System.Byte[] GetValuesToUpload(System.Collections.Specialized.NameValueCollection data)
    // Offset: 0x4FC4D00
    ::ArrayW<uint8_t> GetValuesToUpload(::System::Collections::Specialized::NameValueCollection* data);
    // public System.Byte[] UploadValues(System.String address, System.Collections.Specialized.NameValueCollection data)
    // Offset: 0x4FC5054
    ::ArrayW<uint8_t> UploadValues(::StringW address, ::System::Collections::Specialized::NameValueCollection* data);
    // public System.Byte[] UploadValues(System.Uri address, System.Collections.Specialized.NameValueCollection data)
    // Offset: 0x4FC5430
    ::ArrayW<uint8_t> UploadValues(::System::Uri* address, ::System::Collections::Specialized::NameValueCollection* data);
    // public System.Byte[] UploadValues(System.String address, System.String method, System.Collections.Specialized.NameValueCollection data)
    // Offset: 0x4FC543C
    ::ArrayW<uint8_t> UploadValues(::StringW address, ::StringW method, ::System::Collections::Specialized::NameValueCollection* data);
    // public System.Byte[] UploadValues(System.Uri address, System.String method, System.Collections.Specialized.NameValueCollection data)
    // Offset: 0x4FC5084
    ::ArrayW<uint8_t> UploadValues(::System::Uri* address, ::StringW method, ::System::Collections::Specialized::NameValueCollection* data);
    // public System.String UploadString(System.String address, System.String data)
    // Offset: 0x4FC5470
    ::StringW UploadString(::StringW address, ::StringW data);
    // public System.String UploadString(System.Uri address, System.String data)
    // Offset: 0x4FC563C
    ::StringW UploadString(::System::Uri* address, ::StringW data);
    // public System.String UploadString(System.String address, System.String method, System.String data)
    // Offset: 0x4FC5648
    ::StringW UploadString(::StringW address, ::StringW method, ::StringW data);
    // public System.String UploadString(System.Uri address, System.String method, System.String data)
    // Offset: 0x4FC54A0
    ::StringW UploadString(::System::Uri* address, ::StringW method, ::StringW data);
    // public System.String DownloadString(System.String address)
    // Offset: 0x4FC5ABC
    ::StringW DownloadString(::StringW address);
    // public System.String DownloadString(System.Uri address)
    // Offset: 0x4FC5AD8
    ::StringW DownloadString(::System::Uri* address);
    // static private System.Void AbortRequest(System.Net.WebRequest request)
    // Offset: 0x4FC28C4
    static void AbortRequest(::System::Net::WebRequest* request);
    // private System.Void CopyHeadersTo(System.Net.WebRequest request)
    // Offset: 0x4FC15D4
    void CopyHeadersTo(::System::Net::WebRequest* request);
    // private System.Uri GetUri(System.String address)
    // Offset: 0x4FC1BB4
    ::System::Uri* GetUri(::StringW address);
    // private System.Uri GetUri(System.Uri address)
    // Offset: 0x4FC20BC
    ::System::Uri* GetUri(::System::Uri* address);
    // private System.Byte[] DownloadBits(System.Net.WebRequest request, System.IO.Stream writeStream)
    // Offset: 0x4FC238C
    ::ArrayW<uint8_t> DownloadBits(::System::Net::WebRequest* request, ::System::IO::Stream* writeStream);
    // private System.Void DownloadBitsAsync(System.Net.WebRequest request, System.IO.Stream writeStream, System.ComponentModel.AsyncOperation asyncOp, System.Action`3<System.Byte[],System.Exception,System.ComponentModel.AsyncOperation> completionDelegate)
    // Offset: 0x4FC5C00
    void DownloadBitsAsync(::System::Net::WebRequest* request, ::System::IO::Stream* writeStream, ::System::ComponentModel::AsyncOperation* asyncOp, ::System::Action_3<::ArrayW<uint8_t>, ::System::Exception*, ::System::ComponentModel::AsyncOperation*>* completionDelegate);
    // private System.Byte[] UploadBits(System.Net.WebRequest request, System.IO.Stream readStream, System.Byte[] buffer, System.Int32 chunkSize, System.Byte[] header, System.Byte[] footer)
    // Offset: 0x4FC3AEC
    ::ArrayW<uint8_t> UploadBits(::System::Net::WebRequest* request, ::System::IO::Stream* readStream, ::ArrayW<uint8_t> buffer, int chunkSize, ::ArrayW<uint8_t> header, ::ArrayW<uint8_t> footer);
    // private System.Void UploadBitsAsync(System.Net.WebRequest request, System.IO.Stream readStream, System.Byte[] buffer, System.Int32 chunkSize, System.Byte[] header, System.Byte[] footer, System.ComponentModel.AsyncOperation asyncOp, System.Action`3<System.Byte[],System.Exception,System.ComponentModel.AsyncOperation> completionDelegate)
    // Offset: 0x4FC5D14
    void UploadBitsAsync(::System::Net::WebRequest* request, ::System::IO::Stream* readStream, ::ArrayW<uint8_t> buffer, int chunkSize, ::ArrayW<uint8_t> header, ::ArrayW<uint8_t> footer, ::System::ComponentModel::AsyncOperation* asyncOp, ::System::Action_3<::ArrayW<uint8_t>, ::System::Exception*, ::System::ComponentModel::AsyncOperation*>* completionDelegate);
    // static private System.Boolean ByteArrayHasPrefix(System.Byte[] prefix, System.Byte[] byteArray)
    // Offset: 0x4FC5E74
    static bool ByteArrayHasPrefix(::ArrayW<uint8_t> prefix, ::ArrayW<uint8_t> byteArray);
    // private System.String GetStringUsingEncoding(System.Net.WebRequest request, System.Byte[] data)
    // Offset: 0x4FC567C
    ::StringW GetStringUsingEncoding(::System::Net::WebRequest* request, ::ArrayW<uint8_t> data);
    // private System.String MapToDefaultMethod(System.Uri address)
    // Offset: 0x4FC3538
    ::StringW MapToDefaultMethod(::System::Uri* address);
    // static private System.String UrlEncode(System.String str)
    // Offset: 0x4FC4F90
    static ::StringW UrlEncode(::StringW str);
    // static private System.Byte[] UrlEncodeBytesToBytesInternal(System.Byte[] bytes, System.Int32 offset, System.Int32 count, System.Boolean alwaysCreateReturnValue)
    // Offset: 0x4FC5EF8
    static ::ArrayW<uint8_t> UrlEncodeBytesToBytesInternal(::ArrayW<uint8_t> bytes, int offset, int count, bool alwaysCreateReturnValue);
    // static private System.Char IntToHex(System.Int32 n)
    // Offset: 0x4FC6264
    static ::Il2CppChar IntToHex(int n);
    // static private System.Boolean IsSafe(System.Char ch)
    // Offset: 0x4FC61F8
    static bool IsSafe(::Il2CppChar ch);
    // private System.Void InvokeOperationCompleted(System.ComponentModel.AsyncOperation asyncOp, System.Threading.SendOrPostCallback callback, System.ComponentModel.AsyncCompletedEventArgs eventArgs)
    // Offset: 0x4FC627C
    void InvokeOperationCompleted(::System::ComponentModel::AsyncOperation* asyncOp, ::System::Threading::SendOrPostCallback* callback, ::System::ComponentModel::AsyncCompletedEventArgs* eventArgs);
    // public System.Void OpenReadAsync(System.Uri address)
    // Offset: 0x4FC62F4
    void OpenReadAsync(::System::Uri* address);
    // public System.Void OpenReadAsync(System.Uri address, System.Object userToken)
    // Offset: 0x4FC62FC
    void OpenReadAsync(::System::Uri* address, ::Il2CppObject* userToken);
    // public System.Void OpenWriteAsync(System.Uri address)
    // Offset: 0x4FC6724
    void OpenWriteAsync(::System::Uri* address);
    // public System.Void OpenWriteAsync(System.Uri address, System.String method)
    // Offset: 0x4FC6A58
    void OpenWriteAsync(::System::Uri* address, ::StringW method);
    // public System.Void OpenWriteAsync(System.Uri address, System.String method, System.Object userToken)
    // Offset: 0x4FC6730
    void OpenWriteAsync(::System::Uri* address, ::StringW method, ::Il2CppObject* userToken);
    // private System.Void DownloadStringAsyncCallback(System.Byte[] returnBytes, System.Exception exception, System.Object state)
    // Offset: 0x4FC6AA8
    void DownloadStringAsyncCallback(::ArrayW<uint8_t> returnBytes, ::System::Exception* exception, ::Il2CppObject* state);
    // public System.Void DownloadStringAsync(System.Uri address)
    // Offset: 0x4FC6CBC
    void DownloadStringAsync(::System::Uri* address);
    // public System.Void DownloadStringAsync(System.Uri address, System.Object userToken)
    // Offset: 0x4FC6CC4
    void DownloadStringAsync(::System::Uri* address, ::Il2CppObject* userToken);
    // private System.Void DownloadDataAsyncCallback(System.Byte[] returnBytes, System.Exception exception, System.Object state)
    // Offset: 0x4FC6F18
    void DownloadDataAsyncCallback(::ArrayW<uint8_t> returnBytes, ::System::Exception* exception, ::Il2CppObject* state);
    // public System.Void DownloadDataAsync(System.Uri address)
    // Offset: 0x4FC7030
    void DownloadDataAsync(::System::Uri* address);
    // public System.Void DownloadDataAsync(System.Uri address, System.Object userToken)
    // Offset: 0x4FC7038
    void DownloadDataAsync(::System::Uri* address, ::Il2CppObject* userToken);
    // private System.Void DownloadFileAsyncCallback(System.Byte[] returnBytes, System.Exception exception, System.Object state)
    // Offset: 0x4FC728C
    void DownloadFileAsyncCallback(::ArrayW<uint8_t> returnBytes, ::System::Exception* exception, ::Il2CppObject* state);
    // public System.Void DownloadFileAsync(System.Uri address, System.String fileName)
    // Offset: 0x4FC7350
    void DownloadFileAsync(::System::Uri* address, ::StringW fileName);
    // public System.Void DownloadFileAsync(System.Uri address, System.String fileName, System.Object userToken)
    // Offset: 0x4FC7358
    void DownloadFileAsync(::System::Uri* address, ::StringW fileName, ::Il2CppObject* userToken);
    // public System.Void UploadStringAsync(System.Uri address, System.String data)
    // Offset: 0x4FC7604
    void UploadStringAsync(::System::Uri* address, ::StringW data);
    // public System.Void UploadStringAsync(System.Uri address, System.String method, System.String data)
    // Offset: 0x4FC7944
    void UploadStringAsync(::System::Uri* address, ::StringW method, ::StringW data);
    // public System.Void UploadStringAsync(System.Uri address, System.String method, System.String data, System.Object userToken)
    // Offset: 0x4FC7614
    void UploadStringAsync(::System::Uri* address, ::StringW method, ::StringW data, ::Il2CppObject* userToken);
    // public System.Void UploadDataAsync(System.Uri address, System.Byte[] data)
    // Offset: 0x4FC798C
    void UploadDataAsync(::System::Uri* address, ::ArrayW<uint8_t> data);
    // public System.Void UploadDataAsync(System.Uri address, System.String method, System.Byte[] data)
    // Offset: 0x4FC7D4C
    void UploadDataAsync(::System::Uri* address, ::StringW method, ::ArrayW<uint8_t> data);
    // public System.Void UploadDataAsync(System.Uri address, System.String method, System.Byte[] data, System.Object userToken)
    // Offset: 0x4FC799C
    void UploadDataAsync(::System::Uri* address, ::StringW method, ::ArrayW<uint8_t> data, ::Il2CppObject* userToken);
    // public System.Void UploadFileAsync(System.Uri address, System.String fileName)
    // Offset: 0x4FC7D9C
    void UploadFileAsync(::System::Uri* address, ::StringW fileName);
    // public System.Void UploadFileAsync(System.Uri address, System.String method, System.String fileName)
    // Offset: 0x4FC81B0
    void UploadFileAsync(::System::Uri* address, ::StringW method, ::StringW fileName);
    // public System.Void UploadFileAsync(System.Uri address, System.String method, System.String fileName, System.Object userToken)
    // Offset: 0x4FC7DAC
    void UploadFileAsync(::System::Uri* address, ::StringW method, ::StringW fileName, ::Il2CppObject* userToken);
    // public System.Void UploadValuesAsync(System.Uri address, System.Collections.Specialized.NameValueCollection data)
    // Offset: 0x4FC8200
    void UploadValuesAsync(::System::Uri* address, ::System::Collections::Specialized::NameValueCollection* data);
    // public System.Void UploadValuesAsync(System.Uri address, System.String method, System.Collections.Specialized.NameValueCollection data)
    // Offset: 0x4FC85C8
    void UploadValuesAsync(::System::Uri* address, ::StringW method, ::System::Collections::Specialized::NameValueCollection* data);
    // public System.Void UploadValuesAsync(System.Uri address, System.String method, System.Collections.Specialized.NameValueCollection data, System.Object userToken)
    // Offset: 0x4FC8210
    void UploadValuesAsync(::System::Uri* address, ::StringW method, ::System::Collections::Specialized::NameValueCollection* data, ::Il2CppObject* userToken);
    // static private System.Exception GetExceptionToPropagate(System.Exception e)
    // Offset: 0x4FC6608
    static ::System::Exception* GetExceptionToPropagate(::System::Exception* e);
    // public System.Void CancelAsync()
    // Offset: 0x4FC8618
    void CancelAsync();
    // public System.Threading.Tasks.Task`1<System.String> DownloadStringTaskAsync(System.String address)
    // Offset: 0x4FC8678
    ::System::Threading::Tasks::Task_1<::StringW>* DownloadStringTaskAsync(::StringW address);
    // public System.Threading.Tasks.Task`1<System.String> DownloadStringTaskAsync(System.Uri address)
    // Offset: 0x4FC8694
    ::System::Threading::Tasks::Task_1<::StringW>* DownloadStringTaskAsync(::System::Uri* address);
    // public System.Threading.Tasks.Task`1<System.IO.Stream> OpenReadTaskAsync(System.String address)
    // Offset: 0x4FC89A0
    ::System::Threading::Tasks::Task_1<::System::IO::Stream*>* OpenReadTaskAsync(::StringW address);
    // public System.Threading.Tasks.Task`1<System.IO.Stream> OpenReadTaskAsync(System.Uri address)
    // Offset: 0x4FC89BC
    ::System::Threading::Tasks::Task_1<::System::IO::Stream*>* OpenReadTaskAsync(::System::Uri* address);
    // public System.Threading.Tasks.Task`1<System.IO.Stream> OpenWriteTaskAsync(System.String address)
    // Offset: 0x4FC8CC8
    ::System::Threading::Tasks::Task_1<::System::IO::Stream*>* OpenWriteTaskAsync(::StringW address);
    // public System.Threading.Tasks.Task`1<System.IO.Stream> OpenWriteTaskAsync(System.Uri address)
    // Offset: 0x4FC8EF0
    ::System::Threading::Tasks::Task_1<::System::IO::Stream*>* OpenWriteTaskAsync(::System::Uri* address);
    // public System.Threading.Tasks.Task`1<System.IO.Stream> OpenWriteTaskAsync(System.String address, System.String method)
    // Offset: 0x4FC8EF8
    ::System::Threading::Tasks::Task_1<::System::IO::Stream*>* OpenWriteTaskAsync(::StringW address, ::StringW method);
    // public System.Threading.Tasks.Task`1<System.IO.Stream> OpenWriteTaskAsync(System.Uri address, System.String method)
    // Offset: 0x4FC8CE8
    ::System::Threading::Tasks::Task_1<::System::IO::Stream*>* OpenWriteTaskAsync(::System::Uri* address, ::StringW method);
    // public System.Threading.Tasks.Task`1<System.String> UploadStringTaskAsync(System.String address, System.String data)
    // Offset: 0x4FC9038
    ::System::Threading::Tasks::Task_1<::StringW>* UploadStringTaskAsync(::StringW address, ::StringW data);
    // public System.Threading.Tasks.Task`1<System.String> UploadStringTaskAsync(System.Uri address, System.String data)
    // Offset: 0x4FC909C
    ::System::Threading::Tasks::Task_1<::StringW>* UploadStringTaskAsync(::System::Uri* address, ::StringW data);
    // public System.Threading.Tasks.Task`1<System.String> UploadStringTaskAsync(System.String address, System.String method, System.String data)
    // Offset: 0x4FC9068
    ::System::Threading::Tasks::Task_1<::StringW>* UploadStringTaskAsync(::StringW address, ::StringW method, ::StringW data);
    // public System.Threading.Tasks.Task`1<System.String> UploadStringTaskAsync(System.Uri address, System.String method, System.String data)
    // Offset: 0x4FC90A8
    ::System::Threading::Tasks::Task_1<::StringW>* UploadStringTaskAsync(::System::Uri* address, ::StringW method, ::StringW data);
    // public System.Threading.Tasks.Task`1<System.Byte[]> DownloadDataTaskAsync(System.String address)
    // Offset: 0x4FC93CC
    ::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* DownloadDataTaskAsync(::StringW address);
    // public System.Threading.Tasks.Task`1<System.Byte[]> DownloadDataTaskAsync(System.Uri address)
    // Offset: 0x4FC93E8
    ::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* DownloadDataTaskAsync(::System::Uri* address);
    // public System.Threading.Tasks.Task DownloadFileTaskAsync(System.String address, System.String fileName)
    // Offset: 0x4FC96F4
    ::System::Threading::Tasks::Task* DownloadFileTaskAsync(::StringW address, ::StringW fileName);
    // public System.Threading.Tasks.Task DownloadFileTaskAsync(System.Uri address, System.String fileName)
    // Offset: 0x4FC9720
    ::System::Threading::Tasks::Task* DownloadFileTaskAsync(::System::Uri* address, ::StringW fileName);
    // public System.Threading.Tasks.Task`1<System.Byte[]> UploadDataTaskAsync(System.String address, System.Byte[] data)
    // Offset: 0x4FC9934
    ::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* UploadDataTaskAsync(::StringW address, ::ArrayW<uint8_t> data);
    // public System.Threading.Tasks.Task`1<System.Byte[]> UploadDataTaskAsync(System.Uri address, System.Byte[] data)
    // Offset: 0x4FC9B74
    ::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* UploadDataTaskAsync(::System::Uri* address, ::ArrayW<uint8_t> data);
    // public System.Threading.Tasks.Task`1<System.Byte[]> UploadDataTaskAsync(System.String address, System.String method, System.Byte[] data)
    // Offset: 0x4FC9B80
    ::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* UploadDataTaskAsync(::StringW address, ::StringW method, ::ArrayW<uint8_t> data);
    // public System.Threading.Tasks.Task`1<System.Byte[]> UploadDataTaskAsync(System.Uri address, System.String method, System.Byte[] data)
    // Offset: 0x4FC9964
    ::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* UploadDataTaskAsync(::System::Uri* address, ::StringW method, ::ArrayW<uint8_t> data);
    // public System.Threading.Tasks.Task`1<System.Byte[]> UploadFileTaskAsync(System.String address, System.String fileName)
    // Offset: 0x4FC9CC8
    ::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* UploadFileTaskAsync(::StringW address, ::StringW fileName);
    // public System.Threading.Tasks.Task`1<System.Byte[]> UploadFileTaskAsync(System.Uri address, System.String fileName)
    // Offset: 0x4FC9F08
    ::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* UploadFileTaskAsync(::System::Uri* address, ::StringW fileName);
    // public System.Threading.Tasks.Task`1<System.Byte[]> UploadFileTaskAsync(System.String address, System.String method, System.String fileName)
    // Offset: 0x4FC9F14
    ::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* UploadFileTaskAsync(::StringW address, ::StringW method, ::StringW fileName);
    // public System.Threading.Tasks.Task`1<System.Byte[]> UploadFileTaskAsync(System.Uri address, System.String method, System.String fileName)
    // Offset: 0x4FC9CF8
    ::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* UploadFileTaskAsync(::System::Uri* address, ::StringW method, ::StringW fileName);
    // public System.Threading.Tasks.Task`1<System.Byte[]> UploadValuesTaskAsync(System.String address, System.Collections.Specialized.NameValueCollection data)
    // Offset: 0x4FCA05C
    ::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* UploadValuesTaskAsync(::StringW address, ::System::Collections::Specialized::NameValueCollection* data);
    // public System.Threading.Tasks.Task`1<System.Byte[]> UploadValuesTaskAsync(System.String address, System.String method, System.Collections.Specialized.NameValueCollection data)
    // Offset: 0x4FCA29C
    ::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* UploadValuesTaskAsync(::StringW address, ::StringW method, ::System::Collections::Specialized::NameValueCollection* data);
    // public System.Threading.Tasks.Task`1<System.Byte[]> UploadValuesTaskAsync(System.Uri address, System.Collections.Specialized.NameValueCollection data)
    // Offset: 0x4FCA2D0
    ::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* UploadValuesTaskAsync(::System::Uri* address, ::System::Collections::Specialized::NameValueCollection* data);
    // public System.Threading.Tasks.Task`1<System.Byte[]> UploadValuesTaskAsync(System.Uri address, System.String method, System.Collections.Specialized.NameValueCollection data)
    // Offset: 0x4FCA08C
    ::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* UploadValuesTaskAsync(::System::Uri* address, ::StringW method, ::System::Collections::Specialized::NameValueCollection* data);
    // private System.Void HandleCompletion(System.Threading.Tasks.TaskCompletionSource`1<T> tcs, TAsyncCompletedEventArgs e, System.Func`2<TAsyncCompletedEventArgs,T> getResult, TCompletionDelegate handler, System.Action`2<System.Net.WebClient,TCompletionDelegate> unregisterHandler)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class TAsyncCompletedEventArgs, class TCompletionDelegate, class T>
    void HandleCompletion(::System::Threading::Tasks::TaskCompletionSource_1<T>* tcs, TAsyncCompletedEventArgs e, ::System::Func_2<TAsyncCompletedEventArgs, T>* getResult, TCompletionDelegate handler, ::System::Action_2<::System::Net::WebClient*, TCompletionDelegate>* unregisterHandler) {
      static_assert(std::is_convertible_v<TAsyncCompletedEventArgs, ::System::ComponentModel::AsyncCompletedEventArgs*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebClient::HandleCompletion");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleCompletion", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TAsyncCompletedEventArgs>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TCompletionDelegate>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tcs), ::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(getResult), ::il2cpp_utils::ExtractType(handler), ::il2cpp_utils::ExtractType(unregisterHandler)})));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TAsyncCompletedEventArgs>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TCompletionDelegate>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___generic__method, tcs, e, getResult, handler, unregisterHandler);
    }
    // private System.Void PostProgressChanged(System.ComponentModel.AsyncOperation asyncOp, System.Net.WebClient/ProgressData progress)
    // Offset: 0x4FCA3F0
    void PostProgressChanged(::System::ComponentModel::AsyncOperation* asyncOp, ::System::Net::WebClient::ProgressData* progress);
    // static private System.Void ThrowIfNull(System.Object argument, System.String parameterName)
    // Offset: 0x4FC0FAC
    static void ThrowIfNull(::Il2CppObject* argument, ::StringW parameterName);
    // public System.Boolean get_AllowReadStreamBuffering()
    // Offset: 0x4FCA624
    bool get_AllowReadStreamBuffering();
    // public System.Void set_AllowReadStreamBuffering(System.Boolean value)
    // Offset: 0x4FCA62C
    void set_AllowReadStreamBuffering(bool value);
    // public System.Boolean get_AllowWriteStreamBuffering()
    // Offset: 0x4FCA638
    bool get_AllowWriteStreamBuffering();
    // public System.Void set_AllowWriteStreamBuffering(System.Boolean value)
    // Offset: 0x4FCA640
    void set_AllowWriteStreamBuffering(bool value);
    // public System.Void add_WriteStreamClosed(System.Net.WriteStreamClosedEventHandler value)
    // Offset: 0x4FCA64C
    void add_WriteStreamClosed(::System::Net::WriteStreamClosedEventHandler* value);
    // public System.Void remove_WriteStreamClosed(System.Net.WriteStreamClosedEventHandler value)
    // Offset: 0x4FCA650
    void remove_WriteStreamClosed(::System::Net::WriteStreamClosedEventHandler* value);
    // protected System.Void OnWriteStreamClosed(System.Net.WriteStreamClosedEventArgs e)
    // Offset: 0x4FCA654
    void OnWriteStreamClosed(::System::Net::WriteStreamClosedEventArgs* e);
    // private System.Void <StartAsyncOperation>b__78_0(System.Object arg)
    // Offset: 0x4FCA844
    void $StartAsyncOperation$b__78_0(::Il2CppObject* arg);
    // private System.Void <StartAsyncOperation>b__78_1(System.Object arg)
    // Offset: 0x4FCA8D4
    void $StartAsyncOperation$b__78_1(::Il2CppObject* arg);
    // private System.Void <StartAsyncOperation>b__78_2(System.Object arg)
    // Offset: 0x4FCA964
    void $StartAsyncOperation$b__78_2(::Il2CppObject* arg);
    // private System.Void <StartAsyncOperation>b__78_3(System.Object arg)
    // Offset: 0x4FCA9F4
    void $StartAsyncOperation$b__78_3(::Il2CppObject* arg);
    // private System.Void <StartAsyncOperation>b__78_4(System.Object arg)
    // Offset: 0x4FCAA84
    void $StartAsyncOperation$b__78_4(::Il2CppObject* arg);
    // private System.Void <StartAsyncOperation>b__78_5(System.Object arg)
    // Offset: 0x4FCAB14
    void $StartAsyncOperation$b__78_5(::Il2CppObject* arg);
    // private System.Void <StartAsyncOperation>b__78_6(System.Object arg)
    // Offset: 0x4FCABA4
    void $StartAsyncOperation$b__78_6(::Il2CppObject* arg);
    // private System.Void <StartAsyncOperation>b__78_7(System.Object arg)
    // Offset: 0x4FCAC34
    void $StartAsyncOperation$b__78_7(::Il2CppObject* arg);
    // private System.Void <StartAsyncOperation>b__78_8(System.Object arg)
    // Offset: 0x4FCACC4
    void $StartAsyncOperation$b__78_8(::Il2CppObject* arg);
    // private System.Void <StartAsyncOperation>b__78_9(System.Object arg)
    // Offset: 0x4FCAD54
    void $StartAsyncOperation$b__78_9(::Il2CppObject* arg);
    // private System.Void <StartAsyncOperation>b__78_10(System.Object arg)
    // Offset: 0x4FCADE4
    void $StartAsyncOperation$b__78_10(::Il2CppObject* arg);
    // private System.Void <UploadStringAsync>b__179_0(System.Byte[] bytesResult, System.Exception error, System.ComponentModel.AsyncOperation uploadAsyncOp)
    // Offset: 0x4FCAE74
    void $UploadStringAsync$b__179_0(::ArrayW<uint8_t> bytesResult, ::System::Exception* error, ::System::ComponentModel::AsyncOperation* uploadAsyncOp);
    // public System.Void .ctor()
    // Offset: 0x4FBF9F4
    // Implemented from: System.ComponentModel.Component
    // Base method: System.Void Component::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WebClient* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebClient::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WebClient*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x4FCA658
    // Implemented from: System.ComponentModel.Component
    // Base method: System.Void Component::.cctor()
    static void _cctor();
  }; // System.Net.WebClient
  #pragma pack(pop)
  static check_size<sizeof(WebClient), 337 + sizeof(bool)> __System_Net_WebClientSizeCheck;
  static_assert(sizeof(WebClient) == 0x152);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Net::WebClient::add_DownloadStringCompleted
// Il2CppName: add_DownloadStringCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::DownloadStringCompletedEventHandler*)>(&System::Net::WebClient::add_DownloadStringCompleted)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net", "DownloadStringCompletedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "add_DownloadStringCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::remove_DownloadStringCompleted
// Il2CppName: remove_DownloadStringCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::DownloadStringCompletedEventHandler*)>(&System::Net::WebClient::remove_DownloadStringCompleted)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net", "DownloadStringCompletedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "remove_DownloadStringCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::add_DownloadDataCompleted
// Il2CppName: add_DownloadDataCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::DownloadDataCompletedEventHandler*)>(&System::Net::WebClient::add_DownloadDataCompleted)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net", "DownloadDataCompletedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "add_DownloadDataCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::remove_DownloadDataCompleted
// Il2CppName: remove_DownloadDataCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::DownloadDataCompletedEventHandler*)>(&System::Net::WebClient::remove_DownloadDataCompleted)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net", "DownloadDataCompletedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "remove_DownloadDataCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::add_DownloadFileCompleted
// Il2CppName: add_DownloadFileCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::ComponentModel::AsyncCompletedEventHandler*)>(&System::Net::WebClient::add_DownloadFileCompleted)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "AsyncCompletedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "add_DownloadFileCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::remove_DownloadFileCompleted
// Il2CppName: remove_DownloadFileCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::ComponentModel::AsyncCompletedEventHandler*)>(&System::Net::WebClient::remove_DownloadFileCompleted)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "AsyncCompletedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "remove_DownloadFileCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::add_UploadStringCompleted
// Il2CppName: add_UploadStringCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::UploadStringCompletedEventHandler*)>(&System::Net::WebClient::add_UploadStringCompleted)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net", "UploadStringCompletedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "add_UploadStringCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::remove_UploadStringCompleted
// Il2CppName: remove_UploadStringCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::UploadStringCompletedEventHandler*)>(&System::Net::WebClient::remove_UploadStringCompleted)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net", "UploadStringCompletedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "remove_UploadStringCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::add_UploadDataCompleted
// Il2CppName: add_UploadDataCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::UploadDataCompletedEventHandler*)>(&System::Net::WebClient::add_UploadDataCompleted)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net", "UploadDataCompletedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "add_UploadDataCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::remove_UploadDataCompleted
// Il2CppName: remove_UploadDataCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::UploadDataCompletedEventHandler*)>(&System::Net::WebClient::remove_UploadDataCompleted)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net", "UploadDataCompletedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "remove_UploadDataCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::add_UploadFileCompleted
// Il2CppName: add_UploadFileCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::UploadFileCompletedEventHandler*)>(&System::Net::WebClient::add_UploadFileCompleted)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net", "UploadFileCompletedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "add_UploadFileCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::remove_UploadFileCompleted
// Il2CppName: remove_UploadFileCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::UploadFileCompletedEventHandler*)>(&System::Net::WebClient::remove_UploadFileCompleted)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net", "UploadFileCompletedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "remove_UploadFileCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::add_UploadValuesCompleted
// Il2CppName: add_UploadValuesCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::UploadValuesCompletedEventHandler*)>(&System::Net::WebClient::add_UploadValuesCompleted)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net", "UploadValuesCompletedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "add_UploadValuesCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::remove_UploadValuesCompleted
// Il2CppName: remove_UploadValuesCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::UploadValuesCompletedEventHandler*)>(&System::Net::WebClient::remove_UploadValuesCompleted)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net", "UploadValuesCompletedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "remove_UploadValuesCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::add_OpenReadCompleted
// Il2CppName: add_OpenReadCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::OpenReadCompletedEventHandler*)>(&System::Net::WebClient::add_OpenReadCompleted)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net", "OpenReadCompletedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "add_OpenReadCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::remove_OpenReadCompleted
// Il2CppName: remove_OpenReadCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::OpenReadCompletedEventHandler*)>(&System::Net::WebClient::remove_OpenReadCompleted)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net", "OpenReadCompletedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "remove_OpenReadCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::add_OpenWriteCompleted
// Il2CppName: add_OpenWriteCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::OpenWriteCompletedEventHandler*)>(&System::Net::WebClient::add_OpenWriteCompleted)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net", "OpenWriteCompletedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "add_OpenWriteCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::remove_OpenWriteCompleted
// Il2CppName: remove_OpenWriteCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::OpenWriteCompletedEventHandler*)>(&System::Net::WebClient::remove_OpenWriteCompleted)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net", "OpenWriteCompletedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "remove_OpenWriteCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::add_DownloadProgressChanged
// Il2CppName: add_DownloadProgressChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::DownloadProgressChangedEventHandler*)>(&System::Net::WebClient::add_DownloadProgressChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net", "DownloadProgressChangedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "add_DownloadProgressChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::remove_DownloadProgressChanged
// Il2CppName: remove_DownloadProgressChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::DownloadProgressChangedEventHandler*)>(&System::Net::WebClient::remove_DownloadProgressChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net", "DownloadProgressChangedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "remove_DownloadProgressChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::add_UploadProgressChanged
// Il2CppName: add_UploadProgressChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::UploadProgressChangedEventHandler*)>(&System::Net::WebClient::add_UploadProgressChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net", "UploadProgressChangedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "add_UploadProgressChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::remove_UploadProgressChanged
// Il2CppName: remove_UploadProgressChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::UploadProgressChangedEventHandler*)>(&System::Net::WebClient::remove_UploadProgressChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net", "UploadProgressChangedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "remove_UploadProgressChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OnDownloadStringCompleted
// Il2CppName: OnDownloadStringCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::DownloadStringCompletedEventArgs*)>(&System::Net::WebClient::OnDownloadStringCompleted)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("System.Net", "DownloadStringCompletedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OnDownloadStringCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OnDownloadDataCompleted
// Il2CppName: OnDownloadDataCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::DownloadDataCompletedEventArgs*)>(&System::Net::WebClient::OnDownloadDataCompleted)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("System.Net", "DownloadDataCompletedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OnDownloadDataCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OnDownloadFileCompleted
// Il2CppName: OnDownloadFileCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::ComponentModel::AsyncCompletedEventArgs*)>(&System::Net::WebClient::OnDownloadFileCompleted)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "AsyncCompletedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OnDownloadFileCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OnDownloadProgressChanged
// Il2CppName: OnDownloadProgressChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::DownloadProgressChangedEventArgs*)>(&System::Net::WebClient::OnDownloadProgressChanged)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("System.Net", "DownloadProgressChangedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OnDownloadProgressChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OnUploadStringCompleted
// Il2CppName: OnUploadStringCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::UploadStringCompletedEventArgs*)>(&System::Net::WebClient::OnUploadStringCompleted)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("System.Net", "UploadStringCompletedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OnUploadStringCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OnUploadDataCompleted
// Il2CppName: OnUploadDataCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::UploadDataCompletedEventArgs*)>(&System::Net::WebClient::OnUploadDataCompleted)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("System.Net", "UploadDataCompletedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OnUploadDataCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OnUploadFileCompleted
// Il2CppName: OnUploadFileCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::UploadFileCompletedEventArgs*)>(&System::Net::WebClient::OnUploadFileCompleted)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("System.Net", "UploadFileCompletedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OnUploadFileCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OnUploadValuesCompleted
// Il2CppName: OnUploadValuesCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::UploadValuesCompletedEventArgs*)>(&System::Net::WebClient::OnUploadValuesCompleted)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("System.Net", "UploadValuesCompletedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OnUploadValuesCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OnUploadProgressChanged
// Il2CppName: OnUploadProgressChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::UploadProgressChangedEventArgs*)>(&System::Net::WebClient::OnUploadProgressChanged)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("System.Net", "UploadProgressChangedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OnUploadProgressChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OnOpenReadCompleted
// Il2CppName: OnOpenReadCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::OpenReadCompletedEventArgs*)>(&System::Net::WebClient::OnOpenReadCompleted)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("System.Net", "OpenReadCompletedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OnOpenReadCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OnOpenWriteCompleted
// Il2CppName: OnOpenWriteCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::OpenWriteCompletedEventArgs*)>(&System::Net::WebClient::OnOpenWriteCompleted)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("System.Net", "OpenWriteCompletedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OnOpenWriteCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::StartOperation
// Il2CppName: StartOperation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)()>(&System::Net::WebClient::StartOperation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "StartOperation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::StartAsyncOperation
// Il2CppName: StartAsyncOperation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::ComponentModel::AsyncOperation* (System::Net::WebClient::*)(::Il2CppObject*)>(&System::Net::WebClient::StartAsyncOperation)> {
  static const MethodInfo* get() {
    static auto* userToken = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "StartAsyncOperation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userToken});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::EndOperation
// Il2CppName: EndOperation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)()>(&System::Net::WebClient::EndOperation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "EndOperation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::get_Encoding
// Il2CppName: get_Encoding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::Encoding* (System::Net::WebClient::*)()>(&System::Net::WebClient::get_Encoding)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "get_Encoding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::set_Encoding
// Il2CppName: set_Encoding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Text::Encoding*)>(&System::Net::WebClient::set_Encoding)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Text", "Encoding")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "set_Encoding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::get_BaseAddress
// Il2CppName: get_BaseAddress
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::WebClient::*)()>(&System::Net::WebClient::get_BaseAddress)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "get_BaseAddress", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::set_BaseAddress
// Il2CppName: set_BaseAddress
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::StringW)>(&System::Net::WebClient::set_BaseAddress)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "set_BaseAddress", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::get_Credentials
// Il2CppName: get_Credentials
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Net::ICredentials* (System::Net::WebClient::*)()>(&System::Net::WebClient::get_Credentials)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "get_Credentials", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::set_Credentials
// Il2CppName: set_Credentials
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::ICredentials*)>(&System::Net::WebClient::set_Credentials)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net", "ICredentials")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "set_Credentials", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::get_UseDefaultCredentials
// Il2CppName: get_UseDefaultCredentials
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Net::WebClient::*)()>(&System::Net::WebClient::get_UseDefaultCredentials)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "get_UseDefaultCredentials", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::set_UseDefaultCredentials
// Il2CppName: set_UseDefaultCredentials
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(bool)>(&System::Net::WebClient::set_UseDefaultCredentials)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "set_UseDefaultCredentials", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::get_Headers
// Il2CppName: get_Headers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Net::WebHeaderCollection* (System::Net::WebClient::*)()>(&System::Net::WebClient::get_Headers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "get_Headers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::set_Headers
// Il2CppName: set_Headers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::WebHeaderCollection*)>(&System::Net::WebClient::set_Headers)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net", "WebHeaderCollection")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "set_Headers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::get_QueryString
// Il2CppName: get_QueryString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Specialized::NameValueCollection* (System::Net::WebClient::*)()>(&System::Net::WebClient::get_QueryString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "get_QueryString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::set_QueryString
// Il2CppName: set_QueryString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Collections::Specialized::NameValueCollection*)>(&System::Net::WebClient::set_QueryString)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Collections.Specialized", "NameValueCollection")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "set_QueryString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::get_ResponseHeaders
// Il2CppName: get_ResponseHeaders
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Net::WebHeaderCollection* (System::Net::WebClient::*)()>(&System::Net::WebClient::get_ResponseHeaders)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "get_ResponseHeaders", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::get_Proxy
// Il2CppName: get_Proxy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Net::IWebProxy* (System::Net::WebClient::*)()>(&System::Net::WebClient::get_Proxy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "get_Proxy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::set_Proxy
// Il2CppName: set_Proxy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::IWebProxy*)>(&System::Net::WebClient::set_Proxy)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net", "IWebProxy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "set_Proxy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::get_CachePolicy
// Il2CppName: get_CachePolicy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Net::Cache::RequestCachePolicy* (System::Net::WebClient::*)()>(&System::Net::WebClient::get_CachePolicy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "get_CachePolicy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::set_CachePolicy
// Il2CppName: set_CachePolicy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::Cache::RequestCachePolicy*)>(&System::Net::WebClient::set_CachePolicy)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net.Cache", "RequestCachePolicy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "set_CachePolicy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::get_IsBusy
// Il2CppName: get_IsBusy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Net::WebClient::*)()>(&System::Net::WebClient::get_IsBusy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "get_IsBusy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::GetWebRequest
// Il2CppName: GetWebRequest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Net::WebRequest* (System::Net::WebClient::*)(::System::Uri*)>(&System::Net::WebClient::GetWebRequest)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "GetWebRequest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::GetWebResponse
// Il2CppName: GetWebResponse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Net::WebResponse* (System::Net::WebClient::*)(::System::Net::WebRequest*)>(&System::Net::WebClient::GetWebResponse)> {
  static const MethodInfo* get() {
    static auto* request = &::il2cpp_utils::GetClassFromName("System.Net", "WebRequest")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "GetWebResponse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{request});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::GetWebResponse
// Il2CppName: GetWebResponse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Net::WebResponse* (System::Net::WebClient::*)(::System::Net::WebRequest*, ::System::IAsyncResult*)>(&System::Net::WebClient::GetWebResponse)> {
  static const MethodInfo* get() {
    static auto* request = &::il2cpp_utils::GetClassFromName("System.Net", "WebRequest")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "IAsyncResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "GetWebResponse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{request, result});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::GetWebResponseTaskAsync
// Il2CppName: GetWebResponseTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::System::Net::WebResponse*>* (System::Net::WebClient::*)(::System::Net::WebRequest*)>(&System::Net::WebClient::GetWebResponseTaskAsync)> {
  static const MethodInfo* get() {
    static auto* request = &::il2cpp_utils::GetClassFromName("System.Net", "WebRequest")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "GetWebResponseTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{request});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::DownloadData
// Il2CppName: DownloadData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Net::WebClient::*)(::StringW)>(&System::Net::WebClient::DownloadData)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "DownloadData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::DownloadData
// Il2CppName: DownloadData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Net::WebClient::*)(::System::Uri*)>(&System::Net::WebClient::DownloadData)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "DownloadData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::DownloadDataInternal
// Il2CppName: DownloadDataInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Net::WebClient::*)(::System::Uri*, ByRef<::System::Net::WebRequest*>)>(&System::Net::WebClient::DownloadDataInternal)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* request = &::il2cpp_utils::GetClassFromName("System.Net", "WebRequest")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "DownloadDataInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, request});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::DownloadFile
// Il2CppName: DownloadFile
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::StringW, ::StringW)>(&System::Net::WebClient::DownloadFile)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* fileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "DownloadFile", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, fileName});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::DownloadFile
// Il2CppName: DownloadFile
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Uri*, ::StringW)>(&System::Net::WebClient::DownloadFile)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* fileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "DownloadFile", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, fileName});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OpenRead
// Il2CppName: OpenRead
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IO::Stream* (System::Net::WebClient::*)(::StringW)>(&System::Net::WebClient::OpenRead)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OpenRead", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OpenRead
// Il2CppName: OpenRead
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IO::Stream* (System::Net::WebClient::*)(::System::Uri*)>(&System::Net::WebClient::OpenRead)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OpenRead", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OpenWrite
// Il2CppName: OpenWrite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IO::Stream* (System::Net::WebClient::*)(::StringW)>(&System::Net::WebClient::OpenWrite)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OpenWrite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OpenWrite
// Il2CppName: OpenWrite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IO::Stream* (System::Net::WebClient::*)(::System::Uri*)>(&System::Net::WebClient::OpenWrite)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OpenWrite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OpenWrite
// Il2CppName: OpenWrite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IO::Stream* (System::Net::WebClient::*)(::StringW, ::StringW)>(&System::Net::WebClient::OpenWrite)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OpenWrite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OpenWrite
// Il2CppName: OpenWrite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IO::Stream* (System::Net::WebClient::*)(::System::Uri*, ::StringW)>(&System::Net::WebClient::OpenWrite)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OpenWrite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadData
// Il2CppName: UploadData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Net::WebClient::*)(::StringW, ::ArrayW<uint8_t>)>(&System::Net::WebClient::UploadData)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadData
// Il2CppName: UploadData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Net::WebClient::*)(::System::Uri*, ::ArrayW<uint8_t>)>(&System::Net::WebClient::UploadData)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadData
// Il2CppName: UploadData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Net::WebClient::*)(::StringW, ::StringW, ::ArrayW<uint8_t>)>(&System::Net::WebClient::UploadData)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadData
// Il2CppName: UploadData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Net::WebClient::*)(::System::Uri*, ::StringW, ::ArrayW<uint8_t>)>(&System::Net::WebClient::UploadData)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadDataInternal
// Il2CppName: UploadDataInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Net::WebClient::*)(::System::Uri*, ::StringW, ::ArrayW<uint8_t>, ByRef<::System::Net::WebRequest*>)>(&System::Net::WebClient::UploadDataInternal)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* request = &::il2cpp_utils::GetClassFromName("System.Net", "WebRequest")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadDataInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method, data, request});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OpenFileInternal
// Il2CppName: OpenFileInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(bool, ::StringW, ByRef<::System::IO::FileStream*>, ByRef<::ArrayW<uint8_t>>, ByRef<::ArrayW<uint8_t>>, ByRef<::ArrayW<uint8_t>>)>(&System::Net::WebClient::OpenFileInternal)> {
  static const MethodInfo* get() {
    static auto* needsHeaderAndBoundary = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* fileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* fs = &::il2cpp_utils::GetClassFromName("System.IO", "FileStream")->this_arg;
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->this_arg;
    static auto* formHeaderBytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->this_arg;
    static auto* boundaryBytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OpenFileInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{needsHeaderAndBoundary, fileName, fs, buffer, formHeaderBytes, boundaryBytes});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadFile
// Il2CppName: UploadFile
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Net::WebClient::*)(::StringW, ::StringW)>(&System::Net::WebClient::UploadFile)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* fileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadFile", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, fileName});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadFile
// Il2CppName: UploadFile
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Net::WebClient::*)(::System::Uri*, ::StringW)>(&System::Net::WebClient::UploadFile)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* fileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadFile", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, fileName});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadFile
// Il2CppName: UploadFile
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Net::WebClient::*)(::StringW, ::StringW, ::StringW)>(&System::Net::WebClient::UploadFile)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* fileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadFile", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method, fileName});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadFile
// Il2CppName: UploadFile
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Net::WebClient::*)(::System::Uri*, ::StringW, ::StringW)>(&System::Net::WebClient::UploadFile)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* fileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadFile", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method, fileName});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::GetValuesToUpload
// Il2CppName: GetValuesToUpload
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Net::WebClient::*)(::System::Collections::Specialized::NameValueCollection*)>(&System::Net::WebClient::GetValuesToUpload)> {
  static const MethodInfo* get() {
    static auto* data = &::il2cpp_utils::GetClassFromName("System.Collections.Specialized", "NameValueCollection")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "GetValuesToUpload", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadValues
// Il2CppName: UploadValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Net::WebClient::*)(::StringW, ::System::Collections::Specialized::NameValueCollection*)>(&System::Net::WebClient::UploadValues)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("System.Collections.Specialized", "NameValueCollection")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadValues
// Il2CppName: UploadValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Net::WebClient::*)(::System::Uri*, ::System::Collections::Specialized::NameValueCollection*)>(&System::Net::WebClient::UploadValues)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("System.Collections.Specialized", "NameValueCollection")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadValues
// Il2CppName: UploadValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Net::WebClient::*)(::StringW, ::StringW, ::System::Collections::Specialized::NameValueCollection*)>(&System::Net::WebClient::UploadValues)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("System.Collections.Specialized", "NameValueCollection")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadValues
// Il2CppName: UploadValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Net::WebClient::*)(::System::Uri*, ::StringW, ::System::Collections::Specialized::NameValueCollection*)>(&System::Net::WebClient::UploadValues)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("System.Collections.Specialized", "NameValueCollection")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadString
// Il2CppName: UploadString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::WebClient::*)(::StringW, ::StringW)>(&System::Net::WebClient::UploadString)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadString
// Il2CppName: UploadString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::WebClient::*)(::System::Uri*, ::StringW)>(&System::Net::WebClient::UploadString)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadString
// Il2CppName: UploadString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::WebClient::*)(::StringW, ::StringW, ::StringW)>(&System::Net::WebClient::UploadString)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadString
// Il2CppName: UploadString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::WebClient::*)(::System::Uri*, ::StringW, ::StringW)>(&System::Net::WebClient::UploadString)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::DownloadString
// Il2CppName: DownloadString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::WebClient::*)(::StringW)>(&System::Net::WebClient::DownloadString)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "DownloadString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::DownloadString
// Il2CppName: DownloadString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::WebClient::*)(::System::Uri*)>(&System::Net::WebClient::DownloadString)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "DownloadString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::AbortRequest
// Il2CppName: AbortRequest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Net::WebRequest*)>(&System::Net::WebClient::AbortRequest)> {
  static const MethodInfo* get() {
    static auto* request = &::il2cpp_utils::GetClassFromName("System.Net", "WebRequest")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "AbortRequest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{request});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::CopyHeadersTo
// Il2CppName: CopyHeadersTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::WebRequest*)>(&System::Net::WebClient::CopyHeadersTo)> {
  static const MethodInfo* get() {
    static auto* request = &::il2cpp_utils::GetClassFromName("System.Net", "WebRequest")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "CopyHeadersTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{request});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::GetUri
// Il2CppName: GetUri
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Uri* (System::Net::WebClient::*)(::StringW)>(&System::Net::WebClient::GetUri)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "GetUri", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::GetUri
// Il2CppName: GetUri
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Uri* (System::Net::WebClient::*)(::System::Uri*)>(&System::Net::WebClient::GetUri)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "GetUri", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::DownloadBits
// Il2CppName: DownloadBits
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Net::WebClient::*)(::System::Net::WebRequest*, ::System::IO::Stream*)>(&System::Net::WebClient::DownloadBits)> {
  static const MethodInfo* get() {
    static auto* request = &::il2cpp_utils::GetClassFromName("System.Net", "WebRequest")->byval_arg;
    static auto* writeStream = &::il2cpp_utils::GetClassFromName("System.IO", "Stream")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "DownloadBits", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{request, writeStream});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::DownloadBitsAsync
// Il2CppName: DownloadBitsAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::WebRequest*, ::System::IO::Stream*, ::System::ComponentModel::AsyncOperation*, ::System::Action_3<::ArrayW<uint8_t>, ::System::Exception*, ::System::ComponentModel::AsyncOperation*>*)>(&System::Net::WebClient::DownloadBitsAsync)> {
  static const MethodInfo* get() {
    static auto* request = &::il2cpp_utils::GetClassFromName("System.Net", "WebRequest")->byval_arg;
    static auto* writeStream = &::il2cpp_utils::GetClassFromName("System.IO", "Stream")->byval_arg;
    static auto* asyncOp = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "AsyncOperation")->byval_arg;
    static auto* completionDelegate = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`3"), ::std::vector<const Il2CppClass*>{il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1), ::il2cpp_utils::GetClassFromName("System", "Exception"), ::il2cpp_utils::GetClassFromName("System.ComponentModel", "AsyncOperation")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "DownloadBitsAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{request, writeStream, asyncOp, completionDelegate});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadBits
// Il2CppName: UploadBits
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Net::WebClient::*)(::System::Net::WebRequest*, ::System::IO::Stream*, ::ArrayW<uint8_t>, int, ::ArrayW<uint8_t>, ::ArrayW<uint8_t>)>(&System::Net::WebClient::UploadBits)> {
  static const MethodInfo* get() {
    static auto* request = &::il2cpp_utils::GetClassFromName("System.Net", "WebRequest")->byval_arg;
    static auto* readStream = &::il2cpp_utils::GetClassFromName("System.IO", "Stream")->byval_arg;
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* chunkSize = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* header = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* footer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadBits", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{request, readStream, buffer, chunkSize, header, footer});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadBitsAsync
// Il2CppName: UploadBitsAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::WebRequest*, ::System::IO::Stream*, ::ArrayW<uint8_t>, int, ::ArrayW<uint8_t>, ::ArrayW<uint8_t>, ::System::ComponentModel::AsyncOperation*, ::System::Action_3<::ArrayW<uint8_t>, ::System::Exception*, ::System::ComponentModel::AsyncOperation*>*)>(&System::Net::WebClient::UploadBitsAsync)> {
  static const MethodInfo* get() {
    static auto* request = &::il2cpp_utils::GetClassFromName("System.Net", "WebRequest")->byval_arg;
    static auto* readStream = &::il2cpp_utils::GetClassFromName("System.IO", "Stream")->byval_arg;
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* chunkSize = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* header = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* footer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* asyncOp = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "AsyncOperation")->byval_arg;
    static auto* completionDelegate = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`3"), ::std::vector<const Il2CppClass*>{il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1), ::il2cpp_utils::GetClassFromName("System", "Exception"), ::il2cpp_utils::GetClassFromName("System.ComponentModel", "AsyncOperation")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadBitsAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{request, readStream, buffer, chunkSize, header, footer, asyncOp, completionDelegate});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::ByteArrayHasPrefix
// Il2CppName: ByteArrayHasPrefix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::ArrayW<uint8_t>, ::ArrayW<uint8_t>)>(&System::Net::WebClient::ByteArrayHasPrefix)> {
  static const MethodInfo* get() {
    static auto* prefix = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* byteArray = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "ByteArrayHasPrefix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{prefix, byteArray});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::GetStringUsingEncoding
// Il2CppName: GetStringUsingEncoding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::WebClient::*)(::System::Net::WebRequest*, ::ArrayW<uint8_t>)>(&System::Net::WebClient::GetStringUsingEncoding)> {
  static const MethodInfo* get() {
    static auto* request = &::il2cpp_utils::GetClassFromName("System.Net", "WebRequest")->byval_arg;
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "GetStringUsingEncoding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{request, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::MapToDefaultMethod
// Il2CppName: MapToDefaultMethod
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::WebClient::*)(::System::Uri*)>(&System::Net::WebClient::MapToDefaultMethod)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "MapToDefaultMethod", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UrlEncode
// Il2CppName: UrlEncode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&System::Net::WebClient::UrlEncode)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UrlEncode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UrlEncodeBytesToBytesInternal
// Il2CppName: UrlEncodeBytesToBytesInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (*)(::ArrayW<uint8_t>, int, int, bool)>(&System::Net::WebClient::UrlEncodeBytesToBytesInternal)> {
  static const MethodInfo* get() {
    static auto* bytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* alwaysCreateReturnValue = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UrlEncodeBytesToBytesInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bytes, offset, count, alwaysCreateReturnValue});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::IntToHex
// Il2CppName: IntToHex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppChar (*)(int)>(&System::Net::WebClient::IntToHex)> {
  static const MethodInfo* get() {
    static auto* n = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "IntToHex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{n});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::IsSafe
// Il2CppName: IsSafe
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Il2CppChar)>(&System::Net::WebClient::IsSafe)> {
  static const MethodInfo* get() {
    static auto* ch = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "IsSafe", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ch});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::InvokeOperationCompleted
// Il2CppName: InvokeOperationCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::ComponentModel::AsyncOperation*, ::System::Threading::SendOrPostCallback*, ::System::ComponentModel::AsyncCompletedEventArgs*)>(&System::Net::WebClient::InvokeOperationCompleted)> {
  static const MethodInfo* get() {
    static auto* asyncOp = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "AsyncOperation")->byval_arg;
    static auto* callback = &::il2cpp_utils::GetClassFromName("System.Threading", "SendOrPostCallback")->byval_arg;
    static auto* eventArgs = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "AsyncCompletedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "InvokeOperationCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{asyncOp, callback, eventArgs});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OpenReadAsync
// Il2CppName: OpenReadAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Uri*)>(&System::Net::WebClient::OpenReadAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OpenReadAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OpenReadAsync
// Il2CppName: OpenReadAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Uri*, ::Il2CppObject*)>(&System::Net::WebClient::OpenReadAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* userToken = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OpenReadAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, userToken});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OpenWriteAsync
// Il2CppName: OpenWriteAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Uri*)>(&System::Net::WebClient::OpenWriteAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OpenWriteAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OpenWriteAsync
// Il2CppName: OpenWriteAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Uri*, ::StringW)>(&System::Net::WebClient::OpenWriteAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OpenWriteAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OpenWriteAsync
// Il2CppName: OpenWriteAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Uri*, ::StringW, ::Il2CppObject*)>(&System::Net::WebClient::OpenWriteAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* userToken = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OpenWriteAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method, userToken});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::DownloadStringAsyncCallback
// Il2CppName: DownloadStringAsyncCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::ArrayW<uint8_t>, ::System::Exception*, ::Il2CppObject*)>(&System::Net::WebClient::DownloadStringAsyncCallback)> {
  static const MethodInfo* get() {
    static auto* returnBytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* exception = &::il2cpp_utils::GetClassFromName("System", "Exception")->byval_arg;
    static auto* state = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "DownloadStringAsyncCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{returnBytes, exception, state});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::DownloadStringAsync
// Il2CppName: DownloadStringAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Uri*)>(&System::Net::WebClient::DownloadStringAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "DownloadStringAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::DownloadStringAsync
// Il2CppName: DownloadStringAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Uri*, ::Il2CppObject*)>(&System::Net::WebClient::DownloadStringAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* userToken = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "DownloadStringAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, userToken});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::DownloadDataAsyncCallback
// Il2CppName: DownloadDataAsyncCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::ArrayW<uint8_t>, ::System::Exception*, ::Il2CppObject*)>(&System::Net::WebClient::DownloadDataAsyncCallback)> {
  static const MethodInfo* get() {
    static auto* returnBytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* exception = &::il2cpp_utils::GetClassFromName("System", "Exception")->byval_arg;
    static auto* state = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "DownloadDataAsyncCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{returnBytes, exception, state});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::DownloadDataAsync
// Il2CppName: DownloadDataAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Uri*)>(&System::Net::WebClient::DownloadDataAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "DownloadDataAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::DownloadDataAsync
// Il2CppName: DownloadDataAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Uri*, ::Il2CppObject*)>(&System::Net::WebClient::DownloadDataAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* userToken = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "DownloadDataAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, userToken});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::DownloadFileAsyncCallback
// Il2CppName: DownloadFileAsyncCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::ArrayW<uint8_t>, ::System::Exception*, ::Il2CppObject*)>(&System::Net::WebClient::DownloadFileAsyncCallback)> {
  static const MethodInfo* get() {
    static auto* returnBytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* exception = &::il2cpp_utils::GetClassFromName("System", "Exception")->byval_arg;
    static auto* state = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "DownloadFileAsyncCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{returnBytes, exception, state});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::DownloadFileAsync
// Il2CppName: DownloadFileAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Uri*, ::StringW)>(&System::Net::WebClient::DownloadFileAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* fileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "DownloadFileAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, fileName});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::DownloadFileAsync
// Il2CppName: DownloadFileAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Uri*, ::StringW, ::Il2CppObject*)>(&System::Net::WebClient::DownloadFileAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* fileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* userToken = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "DownloadFileAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, fileName, userToken});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadStringAsync
// Il2CppName: UploadStringAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Uri*, ::StringW)>(&System::Net::WebClient::UploadStringAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadStringAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadStringAsync
// Il2CppName: UploadStringAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Uri*, ::StringW, ::StringW)>(&System::Net::WebClient::UploadStringAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadStringAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadStringAsync
// Il2CppName: UploadStringAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Uri*, ::StringW, ::StringW, ::Il2CppObject*)>(&System::Net::WebClient::UploadStringAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* userToken = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadStringAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method, data, userToken});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadDataAsync
// Il2CppName: UploadDataAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Uri*, ::ArrayW<uint8_t>)>(&System::Net::WebClient::UploadDataAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadDataAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadDataAsync
// Il2CppName: UploadDataAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Uri*, ::StringW, ::ArrayW<uint8_t>)>(&System::Net::WebClient::UploadDataAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadDataAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadDataAsync
// Il2CppName: UploadDataAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Uri*, ::StringW, ::ArrayW<uint8_t>, ::Il2CppObject*)>(&System::Net::WebClient::UploadDataAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* userToken = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadDataAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method, data, userToken});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadFileAsync
// Il2CppName: UploadFileAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Uri*, ::StringW)>(&System::Net::WebClient::UploadFileAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* fileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadFileAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, fileName});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadFileAsync
// Il2CppName: UploadFileAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Uri*, ::StringW, ::StringW)>(&System::Net::WebClient::UploadFileAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* fileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadFileAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method, fileName});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadFileAsync
// Il2CppName: UploadFileAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Uri*, ::StringW, ::StringW, ::Il2CppObject*)>(&System::Net::WebClient::UploadFileAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* fileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* userToken = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadFileAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method, fileName, userToken});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadValuesAsync
// Il2CppName: UploadValuesAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Uri*, ::System::Collections::Specialized::NameValueCollection*)>(&System::Net::WebClient::UploadValuesAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("System.Collections.Specialized", "NameValueCollection")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadValuesAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadValuesAsync
// Il2CppName: UploadValuesAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Uri*, ::StringW, ::System::Collections::Specialized::NameValueCollection*)>(&System::Net::WebClient::UploadValuesAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("System.Collections.Specialized", "NameValueCollection")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadValuesAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadValuesAsync
// Il2CppName: UploadValuesAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Uri*, ::StringW, ::System::Collections::Specialized::NameValueCollection*, ::Il2CppObject*)>(&System::Net::WebClient::UploadValuesAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("System.Collections.Specialized", "NameValueCollection")->byval_arg;
    static auto* userToken = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadValuesAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method, data, userToken});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::GetExceptionToPropagate
// Il2CppName: GetExceptionToPropagate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Exception* (*)(::System::Exception*)>(&System::Net::WebClient::GetExceptionToPropagate)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("System", "Exception")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "GetExceptionToPropagate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::CancelAsync
// Il2CppName: CancelAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)()>(&System::Net::WebClient::CancelAsync)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "CancelAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::DownloadStringTaskAsync
// Il2CppName: DownloadStringTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::StringW>* (System::Net::WebClient::*)(::StringW)>(&System::Net::WebClient::DownloadStringTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "DownloadStringTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::DownloadStringTaskAsync
// Il2CppName: DownloadStringTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::StringW>* (System::Net::WebClient::*)(::System::Uri*)>(&System::Net::WebClient::DownloadStringTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "DownloadStringTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OpenReadTaskAsync
// Il2CppName: OpenReadTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::System::IO::Stream*>* (System::Net::WebClient::*)(::StringW)>(&System::Net::WebClient::OpenReadTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OpenReadTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OpenReadTaskAsync
// Il2CppName: OpenReadTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::System::IO::Stream*>* (System::Net::WebClient::*)(::System::Uri*)>(&System::Net::WebClient::OpenReadTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OpenReadTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OpenWriteTaskAsync
// Il2CppName: OpenWriteTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::System::IO::Stream*>* (System::Net::WebClient::*)(::StringW)>(&System::Net::WebClient::OpenWriteTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OpenWriteTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OpenWriteTaskAsync
// Il2CppName: OpenWriteTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::System::IO::Stream*>* (System::Net::WebClient::*)(::System::Uri*)>(&System::Net::WebClient::OpenWriteTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OpenWriteTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OpenWriteTaskAsync
// Il2CppName: OpenWriteTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::System::IO::Stream*>* (System::Net::WebClient::*)(::StringW, ::StringW)>(&System::Net::WebClient::OpenWriteTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OpenWriteTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OpenWriteTaskAsync
// Il2CppName: OpenWriteTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::System::IO::Stream*>* (System::Net::WebClient::*)(::System::Uri*, ::StringW)>(&System::Net::WebClient::OpenWriteTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OpenWriteTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadStringTaskAsync
// Il2CppName: UploadStringTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::StringW>* (System::Net::WebClient::*)(::StringW, ::StringW)>(&System::Net::WebClient::UploadStringTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadStringTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadStringTaskAsync
// Il2CppName: UploadStringTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::StringW>* (System::Net::WebClient::*)(::System::Uri*, ::StringW)>(&System::Net::WebClient::UploadStringTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadStringTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadStringTaskAsync
// Il2CppName: UploadStringTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::StringW>* (System::Net::WebClient::*)(::StringW, ::StringW, ::StringW)>(&System::Net::WebClient::UploadStringTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadStringTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadStringTaskAsync
// Il2CppName: UploadStringTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::StringW>* (System::Net::WebClient::*)(::System::Uri*, ::StringW, ::StringW)>(&System::Net::WebClient::UploadStringTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadStringTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::DownloadDataTaskAsync
// Il2CppName: DownloadDataTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* (System::Net::WebClient::*)(::StringW)>(&System::Net::WebClient::DownloadDataTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "DownloadDataTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::DownloadDataTaskAsync
// Il2CppName: DownloadDataTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* (System::Net::WebClient::*)(::System::Uri*)>(&System::Net::WebClient::DownloadDataTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "DownloadDataTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::DownloadFileTaskAsync
// Il2CppName: DownloadFileTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task* (System::Net::WebClient::*)(::StringW, ::StringW)>(&System::Net::WebClient::DownloadFileTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* fileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "DownloadFileTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, fileName});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::DownloadFileTaskAsync
// Il2CppName: DownloadFileTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task* (System::Net::WebClient::*)(::System::Uri*, ::StringW)>(&System::Net::WebClient::DownloadFileTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* fileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "DownloadFileTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, fileName});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadDataTaskAsync
// Il2CppName: UploadDataTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* (System::Net::WebClient::*)(::StringW, ::ArrayW<uint8_t>)>(&System::Net::WebClient::UploadDataTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadDataTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadDataTaskAsync
// Il2CppName: UploadDataTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* (System::Net::WebClient::*)(::System::Uri*, ::ArrayW<uint8_t>)>(&System::Net::WebClient::UploadDataTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadDataTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadDataTaskAsync
// Il2CppName: UploadDataTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* (System::Net::WebClient::*)(::StringW, ::StringW, ::ArrayW<uint8_t>)>(&System::Net::WebClient::UploadDataTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadDataTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadDataTaskAsync
// Il2CppName: UploadDataTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* (System::Net::WebClient::*)(::System::Uri*, ::StringW, ::ArrayW<uint8_t>)>(&System::Net::WebClient::UploadDataTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadDataTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadFileTaskAsync
// Il2CppName: UploadFileTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* (System::Net::WebClient::*)(::StringW, ::StringW)>(&System::Net::WebClient::UploadFileTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* fileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadFileTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, fileName});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadFileTaskAsync
// Il2CppName: UploadFileTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* (System::Net::WebClient::*)(::System::Uri*, ::StringW)>(&System::Net::WebClient::UploadFileTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* fileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadFileTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, fileName});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadFileTaskAsync
// Il2CppName: UploadFileTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* (System::Net::WebClient::*)(::StringW, ::StringW, ::StringW)>(&System::Net::WebClient::UploadFileTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* fileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadFileTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method, fileName});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadFileTaskAsync
// Il2CppName: UploadFileTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* (System::Net::WebClient::*)(::System::Uri*, ::StringW, ::StringW)>(&System::Net::WebClient::UploadFileTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* fileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadFileTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method, fileName});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadValuesTaskAsync
// Il2CppName: UploadValuesTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* (System::Net::WebClient::*)(::StringW, ::System::Collections::Specialized::NameValueCollection*)>(&System::Net::WebClient::UploadValuesTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("System.Collections.Specialized", "NameValueCollection")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadValuesTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadValuesTaskAsync
// Il2CppName: UploadValuesTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* (System::Net::WebClient::*)(::StringW, ::StringW, ::System::Collections::Specialized::NameValueCollection*)>(&System::Net::WebClient::UploadValuesTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("System.Collections.Specialized", "NameValueCollection")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadValuesTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadValuesTaskAsync
// Il2CppName: UploadValuesTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* (System::Net::WebClient::*)(::System::Uri*, ::System::Collections::Specialized::NameValueCollection*)>(&System::Net::WebClient::UploadValuesTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("System.Collections.Specialized", "NameValueCollection")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadValuesTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadValuesTaskAsync
// Il2CppName: UploadValuesTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* (System::Net::WebClient::*)(::System::Uri*, ::StringW, ::System::Collections::Specialized::NameValueCollection*)>(&System::Net::WebClient::UploadValuesTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("System.Collections.Specialized", "NameValueCollection")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadValuesTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::HandleCompletion
// Il2CppName: HandleCompletion
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: System::Net::WebClient::PostProgressChanged
// Il2CppName: PostProgressChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::ComponentModel::AsyncOperation*, ::System::Net::WebClient::ProgressData*)>(&System::Net::WebClient::PostProgressChanged)> {
  static const MethodInfo* get() {
    static auto* asyncOp = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "AsyncOperation")->byval_arg;
    static auto* progress = &::il2cpp_utils::GetClassFromName("System.Net", "WebClient/ProgressData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "PostProgressChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{asyncOp, progress});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::ThrowIfNull
// Il2CppName: ThrowIfNull
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppObject*, ::StringW)>(&System::Net::WebClient::ThrowIfNull)> {
  static const MethodInfo* get() {
    static auto* argument = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* parameterName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "ThrowIfNull", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{argument, parameterName});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::get_AllowReadStreamBuffering
// Il2CppName: get_AllowReadStreamBuffering
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Net::WebClient::*)()>(&System::Net::WebClient::get_AllowReadStreamBuffering)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "get_AllowReadStreamBuffering", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::set_AllowReadStreamBuffering
// Il2CppName: set_AllowReadStreamBuffering
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(bool)>(&System::Net::WebClient::set_AllowReadStreamBuffering)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "set_AllowReadStreamBuffering", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::get_AllowWriteStreamBuffering
// Il2CppName: get_AllowWriteStreamBuffering
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Net::WebClient::*)()>(&System::Net::WebClient::get_AllowWriteStreamBuffering)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "get_AllowWriteStreamBuffering", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::set_AllowWriteStreamBuffering
// Il2CppName: set_AllowWriteStreamBuffering
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(bool)>(&System::Net::WebClient::set_AllowWriteStreamBuffering)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "set_AllowWriteStreamBuffering", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::add_WriteStreamClosed
// Il2CppName: add_WriteStreamClosed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::WriteStreamClosedEventHandler*)>(&System::Net::WebClient::add_WriteStreamClosed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net", "WriteStreamClosedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "add_WriteStreamClosed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::remove_WriteStreamClosed
// Il2CppName: remove_WriteStreamClosed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::WriteStreamClosedEventHandler*)>(&System::Net::WebClient::remove_WriteStreamClosed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net", "WriteStreamClosedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "remove_WriteStreamClosed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OnWriteStreamClosed
// Il2CppName: OnWriteStreamClosed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::WriteStreamClosedEventArgs*)>(&System::Net::WebClient::OnWriteStreamClosed)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("System.Net", "WriteStreamClosedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OnWriteStreamClosed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::$StartAsyncOperation$b__78_0
// Il2CppName: <StartAsyncOperation>b__78_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::Il2CppObject*)>(&System::Net::WebClient::$StartAsyncOperation$b__78_0)> {
  static const MethodInfo* get() {
    static auto* arg = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "<StartAsyncOperation>b__78_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{arg});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::$StartAsyncOperation$b__78_1
// Il2CppName: <StartAsyncOperation>b__78_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::Il2CppObject*)>(&System::Net::WebClient::$StartAsyncOperation$b__78_1)> {
  static const MethodInfo* get() {
    static auto* arg = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "<StartAsyncOperation>b__78_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{arg});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::$StartAsyncOperation$b__78_2
// Il2CppName: <StartAsyncOperation>b__78_2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::Il2CppObject*)>(&System::Net::WebClient::$StartAsyncOperation$b__78_2)> {
  static const MethodInfo* get() {
    static auto* arg = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "<StartAsyncOperation>b__78_2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{arg});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::$StartAsyncOperation$b__78_3
// Il2CppName: <StartAsyncOperation>b__78_3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::Il2CppObject*)>(&System::Net::WebClient::$StartAsyncOperation$b__78_3)> {
  static const MethodInfo* get() {
    static auto* arg = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "<StartAsyncOperation>b__78_3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{arg});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::$StartAsyncOperation$b__78_4
// Il2CppName: <StartAsyncOperation>b__78_4
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::Il2CppObject*)>(&System::Net::WebClient::$StartAsyncOperation$b__78_4)> {
  static const MethodInfo* get() {
    static auto* arg = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "<StartAsyncOperation>b__78_4", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{arg});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::$StartAsyncOperation$b__78_5
// Il2CppName: <StartAsyncOperation>b__78_5
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::Il2CppObject*)>(&System::Net::WebClient::$StartAsyncOperation$b__78_5)> {
  static const MethodInfo* get() {
    static auto* arg = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "<StartAsyncOperation>b__78_5", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{arg});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::$StartAsyncOperation$b__78_6
// Il2CppName: <StartAsyncOperation>b__78_6
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::Il2CppObject*)>(&System::Net::WebClient::$StartAsyncOperation$b__78_6)> {
  static const MethodInfo* get() {
    static auto* arg = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "<StartAsyncOperation>b__78_6", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{arg});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::$StartAsyncOperation$b__78_7
// Il2CppName: <StartAsyncOperation>b__78_7
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::Il2CppObject*)>(&System::Net::WebClient::$StartAsyncOperation$b__78_7)> {
  static const MethodInfo* get() {
    static auto* arg = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "<StartAsyncOperation>b__78_7", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{arg});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::$StartAsyncOperation$b__78_8
// Il2CppName: <StartAsyncOperation>b__78_8
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::Il2CppObject*)>(&System::Net::WebClient::$StartAsyncOperation$b__78_8)> {
  static const MethodInfo* get() {
    static auto* arg = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "<StartAsyncOperation>b__78_8", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{arg});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::$StartAsyncOperation$b__78_9
// Il2CppName: <StartAsyncOperation>b__78_9
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::Il2CppObject*)>(&System::Net::WebClient::$StartAsyncOperation$b__78_9)> {
  static const MethodInfo* get() {
    static auto* arg = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "<StartAsyncOperation>b__78_9", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{arg});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::$StartAsyncOperation$b__78_10
// Il2CppName: <StartAsyncOperation>b__78_10
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::Il2CppObject*)>(&System::Net::WebClient::$StartAsyncOperation$b__78_10)> {
  static const MethodInfo* get() {
    static auto* arg = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "<StartAsyncOperation>b__78_10", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{arg});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::$UploadStringAsync$b__179_0
// Il2CppName: <UploadStringAsync>b__179_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::ArrayW<uint8_t>, ::System::Exception*, ::System::ComponentModel::AsyncOperation*)>(&System::Net::WebClient::$UploadStringAsync$b__179_0)> {
  static const MethodInfo* get() {
    static auto* bytesResult = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* error = &::il2cpp_utils::GetClassFromName("System", "Exception")->byval_arg;
    static auto* uploadAsyncOp = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "AsyncOperation")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "<UploadStringAsync>b__179_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bytesResult, error, uploadAsyncOp});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Net::WebClient::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::Net::WebClient::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
