// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Exception
  class Exception;
}
// Completed forward declares
// Type namespace: System.Net
namespace System::Net {
  // Forward declaring type: ExceptionCheck
  class ExceptionCheck;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Net::ExceptionCheck);
DEFINE_IL2CPP_ARG_TYPE(::System::Net::ExceptionCheck*, "System.Net", "ExceptionCheck");
// Type namespace: System.Net
namespace System::Net {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Net.ExceptionCheck
  // [TokenAttribute] Offset: FFFFFFFF
  class ExceptionCheck : public ::Il2CppObject {
    public:
    // static System.Boolean IsFatal(System.Exception exception)
    // Offset: 0x4FA48F0
    static bool IsFatal(::System::Exception* exception);
  }; // System.Net.ExceptionCheck
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Net::ExceptionCheck::IsFatal
// Il2CppName: IsFatal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::Exception*)>(&System::Net::ExceptionCheck::IsFatal)> {
  static const MethodInfo* get() {
    static auto* exception = &::il2cpp_utils::GetClassFromName("System", "Exception")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::ExceptionCheck*), "IsFatal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{exception});
  }
};
