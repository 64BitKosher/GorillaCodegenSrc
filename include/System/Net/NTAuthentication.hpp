// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Net.ContextFlagsPal
#include "System/Net/ContextFlagsPal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Net::Security
namespace System::Net::Security {
  // Forward declaring type: SafeFreeCredentials
  class SafeFreeCredentials;
  // Forward declaring type: SafeDeleteContext
  class SafeDeleteContext;
}
// Forward declaring namespace: System::Security::Authentication::ExtendedProtection
namespace System::Security::Authentication::ExtendedProtection {
  // Forward declaring type: ChannelBinding
  class ChannelBinding;
}
// Forward declaring namespace: System::Net
namespace System::Net {
  // Forward declaring type: NetworkCredential
  class NetworkCredential;
  // Forward declaring type: SecurityStatusPal
  struct SecurityStatusPal;
}
// Completed forward declares
// Type namespace: System.Net
namespace System::Net {
  // Forward declaring type: NTAuthentication
  class NTAuthentication;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Net::NTAuthentication);
DEFINE_IL2CPP_ARG_TYPE(::System::Net::NTAuthentication*, "System.Net", "NTAuthentication");
// Type namespace: System.Net
namespace System::Net {
  // Size: 0x68
  #pragma pack(push, 1)
  // Autogenerated type: System.Net.NTAuthentication
  // [TokenAttribute] Offset: FFFFFFFF
  class NTAuthentication : public ::Il2CppObject {
    public:
    public:
    // private System.Boolean _isServer
    // Size: 0x1
    // Offset: 0x10
    bool isServer;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: isServer and: credentialsHandle
    char __padding0[0x7] = {};
    // private System.Net.Security.SafeFreeCredentials _credentialsHandle
    // Size: 0x8
    // Offset: 0x18
    ::System::Net::Security::SafeFreeCredentials* credentialsHandle;
    // Field size check
    static_assert(sizeof(::System::Net::Security::SafeFreeCredentials*) == 0x8);
    // private System.Net.Security.SafeDeleteContext _securityContext
    // Size: 0x8
    // Offset: 0x20
    ::System::Net::Security::SafeDeleteContext* securityContext;
    // Field size check
    static_assert(sizeof(::System::Net::Security::SafeDeleteContext*) == 0x8);
    // private System.String _spn
    // Size: 0x8
    // Offset: 0x28
    ::StringW spn;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Int32 _tokenSize
    // Size: 0x4
    // Offset: 0x30
    int tokenSize;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Net.ContextFlagsPal _requestedContextFlags
    // Size: 0x4
    // Offset: 0x34
    ::System::Net::ContextFlagsPal requestedContextFlags;
    // Field size check
    static_assert(sizeof(::System::Net::ContextFlagsPal) == 0x4);
    // private System.Net.ContextFlagsPal _contextFlags
    // Size: 0x4
    // Offset: 0x38
    ::System::Net::ContextFlagsPal contextFlags;
    // Field size check
    static_assert(sizeof(::System::Net::ContextFlagsPal) == 0x4);
    // private System.Boolean _isCompleted
    // Size: 0x1
    // Offset: 0x3C
    bool isCompleted;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: isCompleted and: package
    char __padding7[0x3] = {};
    // private System.String _package
    // Size: 0x8
    // Offset: 0x40
    ::StringW package;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String _lastProtocolName
    // Size: 0x8
    // Offset: 0x48
    ::StringW lastProtocolName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String _protocolName
    // Size: 0x8
    // Offset: 0x50
    ::StringW protocolName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String _clientSpecifiedSpn
    // Size: 0x8
    // Offset: 0x58
    ::StringW clientSpecifiedSpn;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Security.Authentication.ExtendedProtection.ChannelBinding _channelBinding
    // Size: 0x8
    // Offset: 0x60
    ::System::Security::Authentication::ExtendedProtection::ChannelBinding* channelBinding;
    // Field size check
    static_assert(sizeof(::System::Security::Authentication::ExtendedProtection::ChannelBinding*) == 0x8);
    public:
    // Get instance field reference: private System.Boolean _isServer
    [[deprecated("Use field access instead!")]] bool& dyn__isServer();
    // Get instance field reference: private System.Net.Security.SafeFreeCredentials _credentialsHandle
    [[deprecated("Use field access instead!")]] ::System::Net::Security::SafeFreeCredentials*& dyn__credentialsHandle();
    // Get instance field reference: private System.Net.Security.SafeDeleteContext _securityContext
    [[deprecated("Use field access instead!")]] ::System::Net::Security::SafeDeleteContext*& dyn__securityContext();
    // Get instance field reference: private System.String _spn
    [[deprecated("Use field access instead!")]] ::StringW& dyn__spn();
    // Get instance field reference: private System.Int32 _tokenSize
    [[deprecated("Use field access instead!")]] int& dyn__tokenSize();
    // Get instance field reference: private System.Net.ContextFlagsPal _requestedContextFlags
    [[deprecated("Use field access instead!")]] ::System::Net::ContextFlagsPal& dyn__requestedContextFlags();
    // Get instance field reference: private System.Net.ContextFlagsPal _contextFlags
    [[deprecated("Use field access instead!")]] ::System::Net::ContextFlagsPal& dyn__contextFlags();
    // Get instance field reference: private System.Boolean _isCompleted
    [[deprecated("Use field access instead!")]] bool& dyn__isCompleted();
    // Get instance field reference: private System.String _package
    [[deprecated("Use field access instead!")]] ::StringW& dyn__package();
    // Get instance field reference: private System.String _lastProtocolName
    [[deprecated("Use field access instead!")]] ::StringW& dyn__lastProtocolName();
    // Get instance field reference: private System.String _protocolName
    [[deprecated("Use field access instead!")]] ::StringW& dyn__protocolName();
    // Get instance field reference: private System.String _clientSpecifiedSpn
    [[deprecated("Use field access instead!")]] ::StringW& dyn__clientSpecifiedSpn();
    // Get instance field reference: private System.Security.Authentication.ExtendedProtection.ChannelBinding _channelBinding
    [[deprecated("Use field access instead!")]] ::System::Security::Authentication::ExtendedProtection::ChannelBinding*& dyn__channelBinding();
    // System.Boolean get_IsCompleted()
    // Offset: 0x4FA7C84
    bool get_IsCompleted();
    // System.Boolean get_IsValidContext()
    // Offset: 0x4FA7C8C
    bool get_IsValidContext();
    // System.String get_Package()
    // Offset: 0x4FA7CBC
    ::StringW get_Package();
    // System.Boolean get_IsServer()
    // Offset: 0x4FA7CC4
    bool get_IsServer();
    // System.String get_ClientSpecifiedSpn()
    // Offset: 0x4FA7CCC
    ::StringW get_ClientSpecifiedSpn();
    // System.String get_ProtocolName()
    // Offset: 0x4FA7EA4
    ::StringW get_ProtocolName();
    // System.Boolean get_IsKerberos()
    // Offset: 0x4FA7F44
    bool get_IsKerberos();
    // System.Void .ctor(System.Boolean isServer, System.String package, System.Net.NetworkCredential credential, System.String spn, System.Net.ContextFlagsPal requestedContextFlags, System.Security.Authentication.ExtendedProtection.ChannelBinding channelBinding)
    // Offset: 0x4FA7FB8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NTAuthentication* New_ctor(bool isServer, ::StringW package, ::System::Net::NetworkCredential* credential, ::StringW spn, ::System::Net::ContextFlagsPal requestedContextFlags, ::System::Security::Authentication::ExtendedProtection::ChannelBinding* channelBinding) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NTAuthentication::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NTAuthentication*, creationType>(isServer, package, credential, spn, requestedContextFlags, channelBinding)));
    }
    // private System.Void Initialize(System.Boolean isServer, System.String package, System.Net.NetworkCredential credential, System.String spn, System.Net.ContextFlagsPal requestedContextFlags, System.Security.Authentication.ExtendedProtection.ChannelBinding channelBinding)
    // Offset: 0x4FA801C
    void Initialize(bool isServer, ::StringW package, ::System::Net::NetworkCredential* credential, ::StringW spn, ::System::Net::ContextFlagsPal requestedContextFlags, ::System::Security::Authentication::ExtendedProtection::ChannelBinding* channelBinding);
    // System.Net.Security.SafeDeleteContext GetContext(out System.Net.SecurityStatusPal status)
    // Offset: 0x4FA8328
    ::System::Net::Security::SafeDeleteContext* GetContext(ByRef<::System::Net::SecurityStatusPal> status);
    // System.Void CloseContext()
    // Offset: 0x4FA84C0
    void CloseContext();
    // System.Int32 VerifySignature(System.Byte[] buffer, System.Int32 offset, System.Int32 count)
    // Offset: 0x4FA84FC
    int VerifySignature(::ArrayW<uint8_t> buffer, int offset, int count);
    // System.Int32 MakeSignature(System.Byte[] buffer, System.Int32 offset, System.Int32 count, ref System.Byte[] output)
    // Offset: 0x4FA8508
    int MakeSignature(::ArrayW<uint8_t> buffer, int offset, int count, ByRef<::ArrayW<uint8_t>> output);
    // System.String GetOutgoingBlob(System.String incomingBlob)
    // Offset: 0x4FA8514
    ::StringW GetOutgoingBlob(::StringW incomingBlob);
    // System.Byte[] GetOutgoingBlob(System.Byte[] incomingBlob, System.Boolean thrownOnError)
    // Offset: 0x4FA9350
    ::ArrayW<uint8_t> GetOutgoingBlob(::ArrayW<uint8_t> incomingBlob, bool thrownOnError);
    // System.Byte[] GetOutgoingBlob(System.Byte[] incomingBlob, System.Boolean throwOnError, out System.Net.SecurityStatusPal statusCode)
    // Offset: 0x4FA863C
    ::ArrayW<uint8_t> GetOutgoingBlob(::ArrayW<uint8_t> incomingBlob, bool throwOnError, ByRef<::System::Net::SecurityStatusPal> statusCode);
    // private System.String GetClientSpecifiedSpn()
    // Offset: 0x4FA7D0C
    ::StringW GetClientSpecifiedSpn();
  }; // System.Net.NTAuthentication
  #pragma pack(pop)
  static check_size<sizeof(NTAuthentication), 96 + sizeof(::System::Security::Authentication::ExtendedProtection::ChannelBinding*)> __System_Net_NTAuthenticationSizeCheck;
  static_assert(sizeof(NTAuthentication) == 0x68);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Net::NTAuthentication::get_IsCompleted
// Il2CppName: get_IsCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Net::NTAuthentication::*)()>(&System::Net::NTAuthentication::get_IsCompleted)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::NTAuthentication*), "get_IsCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::NTAuthentication::get_IsValidContext
// Il2CppName: get_IsValidContext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Net::NTAuthentication::*)()>(&System::Net::NTAuthentication::get_IsValidContext)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::NTAuthentication*), "get_IsValidContext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::NTAuthentication::get_Package
// Il2CppName: get_Package
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::NTAuthentication::*)()>(&System::Net::NTAuthentication::get_Package)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::NTAuthentication*), "get_Package", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::NTAuthentication::get_IsServer
// Il2CppName: get_IsServer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Net::NTAuthentication::*)()>(&System::Net::NTAuthentication::get_IsServer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::NTAuthentication*), "get_IsServer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::NTAuthentication::get_ClientSpecifiedSpn
// Il2CppName: get_ClientSpecifiedSpn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::NTAuthentication::*)()>(&System::Net::NTAuthentication::get_ClientSpecifiedSpn)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::NTAuthentication*), "get_ClientSpecifiedSpn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::NTAuthentication::get_ProtocolName
// Il2CppName: get_ProtocolName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::NTAuthentication::*)()>(&System::Net::NTAuthentication::get_ProtocolName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::NTAuthentication*), "get_ProtocolName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::NTAuthentication::get_IsKerberos
// Il2CppName: get_IsKerberos
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Net::NTAuthentication::*)()>(&System::Net::NTAuthentication::get_IsKerberos)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::NTAuthentication*), "get_IsKerberos", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::NTAuthentication::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Net::NTAuthentication::Initialize
// Il2CppName: Initialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::NTAuthentication::*)(bool, ::StringW, ::System::Net::NetworkCredential*, ::StringW, ::System::Net::ContextFlagsPal, ::System::Security::Authentication::ExtendedProtection::ChannelBinding*)>(&System::Net::NTAuthentication::Initialize)> {
  static const MethodInfo* get() {
    static auto* isServer = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* package = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* credential = &::il2cpp_utils::GetClassFromName("System.Net", "NetworkCredential")->byval_arg;
    static auto* spn = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* requestedContextFlags = &::il2cpp_utils::GetClassFromName("System.Net", "ContextFlagsPal")->byval_arg;
    static auto* channelBinding = &::il2cpp_utils::GetClassFromName("System.Security.Authentication.ExtendedProtection", "ChannelBinding")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::NTAuthentication*), "Initialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{isServer, package, credential, spn, requestedContextFlags, channelBinding});
  }
};
// Writing MetadataGetter for method: System::Net::NTAuthentication::GetContext
// Il2CppName: GetContext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Net::Security::SafeDeleteContext* (System::Net::NTAuthentication::*)(ByRef<::System::Net::SecurityStatusPal>)>(&System::Net::NTAuthentication::GetContext)> {
  static const MethodInfo* get() {
    static auto* status = &::il2cpp_utils::GetClassFromName("System.Net", "SecurityStatusPal")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::NTAuthentication*), "GetContext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{status});
  }
};
// Writing MetadataGetter for method: System::Net::NTAuthentication::CloseContext
// Il2CppName: CloseContext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::NTAuthentication::*)()>(&System::Net::NTAuthentication::CloseContext)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::NTAuthentication*), "CloseContext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::NTAuthentication::VerifySignature
// Il2CppName: VerifySignature
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Net::NTAuthentication::*)(::ArrayW<uint8_t>, int, int)>(&System::Net::NTAuthentication::VerifySignature)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::NTAuthentication*), "VerifySignature", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, offset, count});
  }
};
// Writing MetadataGetter for method: System::Net::NTAuthentication::MakeSignature
// Il2CppName: MakeSignature
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Net::NTAuthentication::*)(::ArrayW<uint8_t>, int, int, ByRef<::ArrayW<uint8_t>>)>(&System::Net::NTAuthentication::MakeSignature)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* output = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::NTAuthentication*), "MakeSignature", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, offset, count, output});
  }
};
// Writing MetadataGetter for method: System::Net::NTAuthentication::GetOutgoingBlob
// Il2CppName: GetOutgoingBlob
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::NTAuthentication::*)(::StringW)>(&System::Net::NTAuthentication::GetOutgoingBlob)> {
  static const MethodInfo* get() {
    static auto* incomingBlob = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::NTAuthentication*), "GetOutgoingBlob", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{incomingBlob});
  }
};
// Writing MetadataGetter for method: System::Net::NTAuthentication::GetOutgoingBlob
// Il2CppName: GetOutgoingBlob
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Net::NTAuthentication::*)(::ArrayW<uint8_t>, bool)>(&System::Net::NTAuthentication::GetOutgoingBlob)> {
  static const MethodInfo* get() {
    static auto* incomingBlob = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* thrownOnError = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::NTAuthentication*), "GetOutgoingBlob", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{incomingBlob, thrownOnError});
  }
};
// Writing MetadataGetter for method: System::Net::NTAuthentication::GetOutgoingBlob
// Il2CppName: GetOutgoingBlob
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Net::NTAuthentication::*)(::ArrayW<uint8_t>, bool, ByRef<::System::Net::SecurityStatusPal>)>(&System::Net::NTAuthentication::GetOutgoingBlob)> {
  static const MethodInfo* get() {
    static auto* incomingBlob = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* throwOnError = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* statusCode = &::il2cpp_utils::GetClassFromName("System.Net", "SecurityStatusPal")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::NTAuthentication*), "GetOutgoingBlob", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{incomingBlob, throwOnError, statusCode});
  }
};
// Writing MetadataGetter for method: System::Net::NTAuthentication::GetClientSpecifiedSpn
// Il2CppName: GetClientSpecifiedSpn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::NTAuthentication::*)()>(&System::Net::NTAuthentication::GetClientSpecifiedSpn)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::NTAuthentication*), "GetClientSpecifiedSpn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
