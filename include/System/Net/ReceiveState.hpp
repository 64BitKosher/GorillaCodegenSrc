// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Net
namespace System::Net {
  // Forward declaring type: ResponseDescription
  class ResponseDescription;
  // Forward declaring type: CommandStream
  class CommandStream;
}
// Completed forward declares
// Type namespace: System.Net
namespace System::Net {
  // Forward declaring type: ReceiveState
  class ReceiveState;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Net::ReceiveState);
DEFINE_IL2CPP_ARG_TYPE(::System::Net::ReceiveState*, "System.Net", "ReceiveState");
// Type namespace: System.Net
namespace System::Net {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: System.Net.ReceiveState
  // [TokenAttribute] Offset: FFFFFFFF
  class ReceiveState : public ::Il2CppObject {
    public:
    public:
    // System.Net.ResponseDescription Resp
    // Size: 0x8
    // Offset: 0x10
    ::System::Net::ResponseDescription* Resp;
    // Field size check
    static_assert(sizeof(::System::Net::ResponseDescription*) == 0x8);
    // System.Int32 ValidThrough
    // Size: 0x4
    // Offset: 0x18
    int ValidThrough;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: ValidThrough and: Buffer
    char __padding1[0x4] = {};
    // System.Byte[] Buffer
    // Size: 0x8
    // Offset: 0x20
    ::ArrayW<uint8_t> Buffer;
    // Field size check
    static_assert(sizeof(::ArrayW<uint8_t>) == 0x8);
    // System.Net.CommandStream Connection
    // Size: 0x8
    // Offset: 0x28
    ::System::Net::CommandStream* Connection;
    // Field size check
    static_assert(sizeof(::System::Net::CommandStream*) == 0x8);
    public:
    // static field const value: static private System.Int32 bufferSize
    static constexpr const int bufferSize = 1024;
    // Get static field: static private System.Int32 bufferSize
    static int _get_bufferSize();
    // Set static field: static private System.Int32 bufferSize
    static void _set_bufferSize(int value);
    // Get instance field reference: System.Net.ResponseDescription Resp
    [[deprecated("Use field access instead!")]] ::System::Net::ResponseDescription*& dyn_Resp();
    // Get instance field reference: System.Int32 ValidThrough
    [[deprecated("Use field access instead!")]] int& dyn_ValidThrough();
    // Get instance field reference: System.Byte[] Buffer
    [[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& dyn_Buffer();
    // Get instance field reference: System.Net.CommandStream Connection
    [[deprecated("Use field access instead!")]] ::System::Net::CommandStream*& dyn_Connection();
    // System.Void .ctor(System.Net.CommandStream connection)
    // Offset: 0x4FB1B24
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ReceiveState* New_ctor(::System::Net::CommandStream* connection) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ReceiveState::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ReceiveState*, creationType>(connection)));
    }
  }; // System.Net.ReceiveState
  #pragma pack(pop)
  static check_size<sizeof(ReceiveState), 40 + sizeof(::System::Net::CommandStream*)> __System_Net_ReceiveStateSizeCheck;
  static_assert(sizeof(ReceiveState) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Net::ReceiveState::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
