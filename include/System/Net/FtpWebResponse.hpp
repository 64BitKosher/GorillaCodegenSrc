// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Net.WebResponse
#include "System/Net/WebResponse.hpp"
// Including type: System.Net.FtpStatusCode
#include "System/Net/FtpStatusCode.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Net
namespace System::Net {
  // Forward declaring type: WebHeaderCollection
  class WebHeaderCollection;
}
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: Stream
  class Stream;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Uri
  class Uri;
}
// Completed forward declares
// Type namespace: System.Net
namespace System::Net {
  // Forward declaring type: FtpWebResponse
  class FtpWebResponse;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Net::FtpWebResponse);
DEFINE_IL2CPP_ARG_TYPE(::System::Net::FtpWebResponse*, "System.Net", "FtpWebResponse");
// Type namespace: System.Net
namespace System::Net {
  // Size: 0x70
  #pragma pack(push, 1)
  // Autogenerated type: System.Net.FtpWebResponse
  // [TokenAttribute] Offset: FFFFFFFF
  class FtpWebResponse : public ::System::Net::WebResponse {
    public:
    // Writing base type padding for base size: 0x1A to desired offset: 0x20
    char ___base_padding[0x6] = {};
    // Nested type: ::System::Net::FtpWebResponse::EmptyStream
    class EmptyStream;
    public:
    // System.IO.Stream _responseStream
    // Size: 0x8
    // Offset: 0x20
    ::System::IO::Stream* responseStream;
    // Field size check
    static_assert(sizeof(::System::IO::Stream*) == 0x8);
    // private System.Int64 _contentLength
    // Size: 0x8
    // Offset: 0x28
    int64_t contentLength;
    // Field size check
    static_assert(sizeof(int64_t) == 0x8);
    // private System.Uri _responseUri
    // Size: 0x8
    // Offset: 0x30
    ::System::Uri* responseUri;
    // Field size check
    static_assert(sizeof(::System::Uri*) == 0x8);
    // private System.Net.FtpStatusCode _statusCode
    // Size: 0x4
    // Offset: 0x38
    ::System::Net::FtpStatusCode statusCode;
    // Field size check
    static_assert(sizeof(::System::Net::FtpStatusCode) == 0x4);
    // Padding between fields: statusCode and: statusLine
    char __padding3[0x4] = {};
    // private System.String _statusLine
    // Size: 0x8
    // Offset: 0x40
    ::StringW statusLine;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Net.WebHeaderCollection _ftpRequestHeaders
    // Size: 0x8
    // Offset: 0x48
    ::System::Net::WebHeaderCollection* ftpRequestHeaders;
    // Field size check
    static_assert(sizeof(::System::Net::WebHeaderCollection*) == 0x8);
    // private System.DateTime _lastModified
    // Size: 0x8
    // Offset: 0x50
    ::System::DateTime lastModified;
    // Field size check
    static_assert(sizeof(::System::DateTime) == 0x8);
    // private System.String _bannerMessage
    // Size: 0x8
    // Offset: 0x58
    ::StringW bannerMessage;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String _welcomeMessage
    // Size: 0x8
    // Offset: 0x60
    ::StringW welcomeMessage;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String _exitMessage
    // Size: 0x8
    // Offset: 0x68
    ::StringW exitMessage;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: System.IO.Stream _responseStream
    [[deprecated("Use field access instead!")]] ::System::IO::Stream*& dyn__responseStream();
    // Get instance field reference: private System.Int64 _contentLength
    [[deprecated("Use field access instead!")]] int64_t& dyn__contentLength();
    // Get instance field reference: private System.Uri _responseUri
    [[deprecated("Use field access instead!")]] ::System::Uri*& dyn__responseUri();
    // Get instance field reference: private System.Net.FtpStatusCode _statusCode
    [[deprecated("Use field access instead!")]] ::System::Net::FtpStatusCode& dyn__statusCode();
    // Get instance field reference: private System.String _statusLine
    [[deprecated("Use field access instead!")]] ::StringW& dyn__statusLine();
    // Get instance field reference: private System.Net.WebHeaderCollection _ftpRequestHeaders
    [[deprecated("Use field access instead!")]] ::System::Net::WebHeaderCollection*& dyn__ftpRequestHeaders();
    // Get instance field reference: private System.DateTime _lastModified
    [[deprecated("Use field access instead!")]] ::System::DateTime& dyn__lastModified();
    // Get instance field reference: private System.String _bannerMessage
    [[deprecated("Use field access instead!")]] ::StringW& dyn__bannerMessage();
    // Get instance field reference: private System.String _welcomeMessage
    [[deprecated("Use field access instead!")]] ::StringW& dyn__welcomeMessage();
    // Get instance field reference: private System.String _exitMessage
    [[deprecated("Use field access instead!")]] ::StringW& dyn__exitMessage();
    // System.Void .ctor(System.IO.Stream responseStream, System.Int64 contentLength, System.Uri responseUri, System.Net.FtpStatusCode statusCode, System.String statusLine, System.DateTime lastModified, System.String bannerMessage, System.String welcomeMessage, System.String exitMessage)
    // Offset: 0x4FBE8B4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static FtpWebResponse* New_ctor(::System::IO::Stream* responseStream, int64_t contentLength, ::System::Uri* responseUri, ::System::Net::FtpStatusCode statusCode, ::StringW statusLine, ::System::DateTime lastModified, ::StringW bannerMessage, ::StringW welcomeMessage, ::StringW exitMessage) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebResponse::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<FtpWebResponse*, creationType>(responseStream, contentLength, responseUri, statusCode, statusLine, lastModified, bannerMessage, welcomeMessage, exitMessage)));
    }
    // System.Void UpdateStatus(System.Net.FtpStatusCode statusCode, System.String statusLine, System.String exitMessage)
    // Offset: 0x4FBCEF8
    void UpdateStatus(::System::Net::FtpStatusCode statusCode, ::StringW statusLine, ::StringW exitMessage);
    // System.Void SetResponseStream(System.IO.Stream stream)
    // Offset: 0x4FBE80C
    void SetResponseStream(::System::IO::Stream* stream);
    // public System.Net.FtpStatusCode get_StatusCode()
    // Offset: 0x4FBF3B8
    ::System::Net::FtpStatusCode get_StatusCode();
    // public System.String get_StatusDescription()
    // Offset: 0x4FBF3C0
    ::StringW get_StatusDescription();
    // public System.DateTime get_LastModified()
    // Offset: 0x4FBF3C8
    ::System::DateTime get_LastModified();
    // public System.String get_BannerMessage()
    // Offset: 0x4FBF3D0
    ::StringW get_BannerMessage();
    // public System.String get_WelcomeMessage()
    // Offset: 0x4FBF3D8
    ::StringW get_WelcomeMessage();
    // public System.String get_ExitMessage()
    // Offset: 0x4FBF3E0
    ::StringW get_ExitMessage();
    // public override System.IO.Stream GetResponseStream()
    // Offset: 0x4FBF08C
    // Implemented from: System.Net.WebResponse
    // Base method: System.IO.Stream WebResponse::GetResponseStream()
    ::System::IO::Stream* GetResponseStream();
    // public override System.Void Close()
    // Offset: 0x4FBF194
    // Implemented from: System.Net.WebResponse
    // Base method: System.Void WebResponse::Close()
    void Close();
    // public override System.Int64 get_ContentLength()
    // Offset: 0x4FBF288
    // Implemented from: System.Net.WebResponse
    // Base method: System.Int64 WebResponse::get_ContentLength()
    int64_t get_ContentLength();
    // public override System.Net.WebHeaderCollection get_Headers()
    // Offset: 0x4FBF290
    // Implemented from: System.Net.WebResponse
    // Base method: System.Net.WebHeaderCollection WebResponse::get_Headers()
    ::System::Net::WebHeaderCollection* get_Headers();
    // public override System.Boolean get_SupportsHeaders()
    // Offset: 0x4FBF3A8
    // Implemented from: System.Net.WebResponse
    // Base method: System.Boolean WebResponse::get_SupportsHeaders()
    bool get_SupportsHeaders();
    // public override System.Uri get_ResponseUri()
    // Offset: 0x4FBF3B0
    // Implemented from: System.Net.WebResponse
    // Base method: System.Uri WebResponse::get_ResponseUri()
    ::System::Uri* get_ResponseUri();
    // System.Void .ctor()
    // Offset: 0x4FBF3E8
    // Implemented from: System.Net.WebResponse
    // Base method: System.Void WebResponse::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static FtpWebResponse* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebResponse::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<FtpWebResponse*, creationType>()));
    }
  }; // System.Net.FtpWebResponse
  #pragma pack(pop)
  static check_size<sizeof(FtpWebResponse), 104 + sizeof(::StringW)> __System_Net_FtpWebResponseSizeCheck;
  static_assert(sizeof(FtpWebResponse) == 0x70);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Net::FtpWebResponse::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Net::FtpWebResponse::UpdateStatus
// Il2CppName: UpdateStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::FtpWebResponse::*)(::System::Net::FtpStatusCode, ::StringW, ::StringW)>(&System::Net::FtpWebResponse::UpdateStatus)> {
  static const MethodInfo* get() {
    static auto* statusCode = &::il2cpp_utils::GetClassFromName("System.Net", "FtpStatusCode")->byval_arg;
    static auto* statusLine = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* exitMessage = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::FtpWebResponse*), "UpdateStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{statusCode, statusLine, exitMessage});
  }
};
// Writing MetadataGetter for method: System::Net::FtpWebResponse::SetResponseStream
// Il2CppName: SetResponseStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::FtpWebResponse::*)(::System::IO::Stream*)>(&System::Net::FtpWebResponse::SetResponseStream)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("System.IO", "Stream")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::FtpWebResponse*), "SetResponseStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: System::Net::FtpWebResponse::get_StatusCode
// Il2CppName: get_StatusCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Net::FtpStatusCode (System::Net::FtpWebResponse::*)()>(&System::Net::FtpWebResponse::get_StatusCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::FtpWebResponse*), "get_StatusCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::FtpWebResponse::get_StatusDescription
// Il2CppName: get_StatusDescription
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::FtpWebResponse::*)()>(&System::Net::FtpWebResponse::get_StatusDescription)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::FtpWebResponse*), "get_StatusDescription", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::FtpWebResponse::get_LastModified
// Il2CppName: get_LastModified
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::DateTime (System::Net::FtpWebResponse::*)()>(&System::Net::FtpWebResponse::get_LastModified)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::FtpWebResponse*), "get_LastModified", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::FtpWebResponse::get_BannerMessage
// Il2CppName: get_BannerMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::FtpWebResponse::*)()>(&System::Net::FtpWebResponse::get_BannerMessage)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::FtpWebResponse*), "get_BannerMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::FtpWebResponse::get_WelcomeMessage
// Il2CppName: get_WelcomeMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::FtpWebResponse::*)()>(&System::Net::FtpWebResponse::get_WelcomeMessage)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::FtpWebResponse*), "get_WelcomeMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::FtpWebResponse::get_ExitMessage
// Il2CppName: get_ExitMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::FtpWebResponse::*)()>(&System::Net::FtpWebResponse::get_ExitMessage)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::FtpWebResponse*), "get_ExitMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::FtpWebResponse::GetResponseStream
// Il2CppName: GetResponseStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IO::Stream* (System::Net::FtpWebResponse::*)()>(&System::Net::FtpWebResponse::GetResponseStream)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::FtpWebResponse*), "GetResponseStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::FtpWebResponse::Close
// Il2CppName: Close
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::FtpWebResponse::*)()>(&System::Net::FtpWebResponse::Close)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::FtpWebResponse*), "Close", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::FtpWebResponse::get_ContentLength
// Il2CppName: get_ContentLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (System::Net::FtpWebResponse::*)()>(&System::Net::FtpWebResponse::get_ContentLength)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::FtpWebResponse*), "get_ContentLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::FtpWebResponse::get_Headers
// Il2CppName: get_Headers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Net::WebHeaderCollection* (System::Net::FtpWebResponse::*)()>(&System::Net::FtpWebResponse::get_Headers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::FtpWebResponse*), "get_Headers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::FtpWebResponse::get_SupportsHeaders
// Il2CppName: get_SupportsHeaders
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Net::FtpWebResponse::*)()>(&System::Net::FtpWebResponse::get_SupportsHeaders)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::FtpWebResponse*), "get_SupportsHeaders", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::FtpWebResponse::get_ResponseUri
// Il2CppName: get_ResponseUri
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Uri* (System::Net::FtpWebResponse::*)()>(&System::Net::FtpWebResponse::get_ResponseUri)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::FtpWebResponse*), "get_ResponseUri", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::FtpWebResponse::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
