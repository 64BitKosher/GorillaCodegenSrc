// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Net.Security.SafeDeleteContext
#include "System/Net/Security/SafeDeleteContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Microsoft::Win32::SafeHandles
namespace Microsoft::Win32::SafeHandles {
  // Forward declaring type: SafeGssNameHandle
  class SafeGssNameHandle;
  // Forward declaring type: SafeGssContextHandle
  class SafeGssContextHandle;
}
// Forward declaring namespace: System::Net::Security
namespace System::Net::Security {
  // Forward declaring type: SafeFreeNegoCredentials
  class SafeFreeNegoCredentials;
}
// Completed forward declares
// Type namespace: System.Net.Security
namespace System::Net::Security {
  // Forward declaring type: SafeDeleteNegoContext
  class SafeDeleteNegoContext;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Net::Security::SafeDeleteNegoContext);
DEFINE_IL2CPP_ARG_TYPE(::System::Net::Security::SafeDeleteNegoContext*, "System.Net.Security", "SafeDeleteNegoContext");
// Type namespace: System.Net.Security
namespace System::Net::Security {
  // Size: 0x39
  #pragma pack(push, 1)
  // Autogenerated type: System.Net.Security.SafeDeleteNegoContext
  // [TokenAttribute] Offset: FFFFFFFF
  class SafeDeleteNegoContext : public ::System::Net::Security::SafeDeleteContext {
    public:
    public:
    // private Microsoft.Win32.SafeHandles.SafeGssNameHandle _targetName
    // Size: 0x8
    // Offset: 0x28
    ::Microsoft::Win32::SafeHandles::SafeGssNameHandle* targetName;
    // Field size check
    static_assert(sizeof(::Microsoft::Win32::SafeHandles::SafeGssNameHandle*) == 0x8);
    // private Microsoft.Win32.SafeHandles.SafeGssContextHandle _context
    // Size: 0x8
    // Offset: 0x30
    ::Microsoft::Win32::SafeHandles::SafeGssContextHandle* context;
    // Field size check
    static_assert(sizeof(::Microsoft::Win32::SafeHandles::SafeGssContextHandle*) == 0x8);
    // private System.Boolean _isNtlmUsed
    // Size: 0x1
    // Offset: 0x38
    bool isNtlmUsed;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::Net::Security::SafeFreeCredentials*
    constexpr operator ::System::Net::Security::SafeFreeCredentials*() const noexcept = delete;
    // Get instance field reference: private Microsoft.Win32.SafeHandles.SafeGssNameHandle _targetName
    [[deprecated("Use field access instead!")]] ::Microsoft::Win32::SafeHandles::SafeGssNameHandle*& dyn__targetName();
    // Get instance field reference: private Microsoft.Win32.SafeHandles.SafeGssContextHandle _context
    [[deprecated("Use field access instead!")]] ::Microsoft::Win32::SafeHandles::SafeGssContextHandle*& dyn__context();
    // Get instance field reference: private System.Boolean _isNtlmUsed
    [[deprecated("Use field access instead!")]] bool& dyn__isNtlmUsed();
    // public Microsoft.Win32.SafeHandles.SafeGssNameHandle get_TargetName()
    // Offset: 0x4EEDA00
    ::Microsoft::Win32::SafeHandles::SafeGssNameHandle* get_TargetName();
    // public System.Boolean get_IsNtlmUsed()
    // Offset: 0x4EEDA08
    bool get_IsNtlmUsed();
    // public Microsoft.Win32.SafeHandles.SafeGssContextHandle get_GssContext()
    // Offset: 0x4EEDA10
    ::Microsoft::Win32::SafeHandles::SafeGssContextHandle* get_GssContext();
    // public System.Void .ctor(System.Net.Security.SafeFreeNegoCredentials credential, System.String targetName)
    // Offset: 0x4EEC8A4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SafeDeleteNegoContext* New_ctor(::System::Net::Security::SafeFreeNegoCredentials* credential, ::StringW targetName) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SafeDeleteNegoContext::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SafeDeleteNegoContext*, creationType>(credential, targetName)));
    }
    // public System.Void SetGssContext(Microsoft.Win32.SafeHandles.SafeGssContextHandle context)
    // Offset: 0x4EEDA18
    void SetGssContext(::Microsoft::Win32::SafeHandles::SafeGssContextHandle* context);
    // public System.Void SetAuthenticationPackage(System.Boolean isNtlmUsed)
    // Offset: 0x4EEDA20
    void SetAuthenticationPackage(bool isNtlmUsed);
    // protected override System.Void Dispose(System.Boolean disposing)
    // Offset: 0x4EEDA2C
    // Implemented from: System.Runtime.InteropServices.SafeHandle
    // Base method: System.Void SafeHandle::Dispose(System.Boolean disposing)
    void Dispose(bool disposing);
  }; // System.Net.Security.SafeDeleteNegoContext
  #pragma pack(pop)
  static check_size<sizeof(SafeDeleteNegoContext), 56 + sizeof(bool)> __System_Net_Security_SafeDeleteNegoContextSizeCheck;
  static_assert(sizeof(SafeDeleteNegoContext) == 0x39);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Net::Security::SafeDeleteNegoContext::get_TargetName
// Il2CppName: get_TargetName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Microsoft::Win32::SafeHandles::SafeGssNameHandle* (System::Net::Security::SafeDeleteNegoContext::*)()>(&System::Net::Security::SafeDeleteNegoContext::get_TargetName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::Security::SafeDeleteNegoContext*), "get_TargetName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::Security::SafeDeleteNegoContext::get_IsNtlmUsed
// Il2CppName: get_IsNtlmUsed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Net::Security::SafeDeleteNegoContext::*)()>(&System::Net::Security::SafeDeleteNegoContext::get_IsNtlmUsed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::Security::SafeDeleteNegoContext*), "get_IsNtlmUsed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::Security::SafeDeleteNegoContext::get_GssContext
// Il2CppName: get_GssContext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Microsoft::Win32::SafeHandles::SafeGssContextHandle* (System::Net::Security::SafeDeleteNegoContext::*)()>(&System::Net::Security::SafeDeleteNegoContext::get_GssContext)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::Security::SafeDeleteNegoContext*), "get_GssContext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::Security::SafeDeleteNegoContext::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Net::Security::SafeDeleteNegoContext::SetGssContext
// Il2CppName: SetGssContext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::Security::SafeDeleteNegoContext::*)(::Microsoft::Win32::SafeHandles::SafeGssContextHandle*)>(&System::Net::Security::SafeDeleteNegoContext::SetGssContext)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("Microsoft.Win32.SafeHandles", "SafeGssContextHandle")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::Security::SafeDeleteNegoContext*), "SetGssContext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: System::Net::Security::SafeDeleteNegoContext::SetAuthenticationPackage
// Il2CppName: SetAuthenticationPackage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::Security::SafeDeleteNegoContext::*)(bool)>(&System::Net::Security::SafeDeleteNegoContext::SetAuthenticationPackage)> {
  static const MethodInfo* get() {
    static auto* isNtlmUsed = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::Security::SafeDeleteNegoContext*), "SetAuthenticationPackage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{isNtlmUsed});
  }
};
// Writing MetadataGetter for method: System::Net::Security::SafeDeleteNegoContext::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::Security::SafeDeleteNegoContext::*)(bool)>(&System::Net::Security::SafeDeleteNegoContext::Dispose)> {
  static const MethodInfo* get() {
    static auto* disposing = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::Security::SafeDeleteNegoContext*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{disposing});
  }
};
