// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: ReadOnlySpan`1<T>
  template<typename T>
  struct ReadOnlySpan_1;
}
// Completed forward declares
// Type namespace: System
namespace System {
  // Forward declaring type: InternalSpanEx
  class InternalSpanEx;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::InternalSpanEx);
DEFINE_IL2CPP_ARG_TYPE(::System::InternalSpanEx*, "System", "InternalSpanEx");
// Type namespace: System
namespace System {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.InternalSpanEx
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class InternalSpanEx : public ::Il2CppObject {
    public:
    // static System.Boolean EqualsOrdinalIgnoreCase(System.ReadOnlySpan`1<System.Char> span, System.ReadOnlySpan`1<System.Char> value)
    // Offset: 0x574B774
    static bool EqualsOrdinalIgnoreCase(::System::ReadOnlySpan_1<::Il2CppChar> span, ::System::ReadOnlySpan_1<::Il2CppChar> value);
    // static private System.Boolean EqualsOrdinalIgnoreCase(ref System.Char charA, ref System.Char charB, System.Int32 length)
    // Offset: 0x574B82C
    static bool EqualsOrdinalIgnoreCase(ByRef<::Il2CppChar> charA, ByRef<::Il2CppChar> charB, int length);
    // static System.Boolean AllCharsInUInt32AreAscii(System.UInt32 value)
    // Offset: 0x574BA3C
    static bool AllCharsInUInt32AreAscii(uint value);
    // static System.Boolean AllCharsInUInt64AreAscii(System.UInt64 value)
    // Offset: 0x574BA48
    static bool AllCharsInUInt64AreAscii(uint64_t value);
    // static System.Boolean UInt32OrdinalIgnoreCaseAscii(System.UInt32 valueA, System.UInt32 valueB)
    // Offset: 0x574BA54
    static bool UInt32OrdinalIgnoreCaseAscii(uint valueA, uint valueB);
    // static System.Boolean UInt64OrdinalIgnoreCaseAscii(System.UInt64 valueA, System.UInt64 valueB)
    // Offset: 0x574BA8C
    static bool UInt64OrdinalIgnoreCaseAscii(uint64_t valueA, uint64_t valueB);
    // static private System.Boolean EqualsOrdinalIgnoreCaseNonAscii(ref System.Char charA, ref System.Char charB, System.Int32 length)
    // Offset: 0x574B9C8
    static bool EqualsOrdinalIgnoreCaseNonAscii(ByRef<::Il2CppChar> charA, ByRef<::Il2CppChar> charB, int length);
  }; // System.InternalSpanEx
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::InternalSpanEx::EqualsOrdinalIgnoreCase
// Il2CppName: EqualsOrdinalIgnoreCase
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::ReadOnlySpan_1<::Il2CppChar>, ::System::ReadOnlySpan_1<::Il2CppChar>)>(&System::InternalSpanEx::EqualsOrdinalIgnoreCase)> {
  static const MethodInfo* get() {
    static auto* span = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ReadOnlySpan`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Char")})->byval_arg;
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ReadOnlySpan`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Char")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::InternalSpanEx*), "EqualsOrdinalIgnoreCase", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{span, value});
  }
};
// Writing MetadataGetter for method: System::InternalSpanEx::EqualsOrdinalIgnoreCase
// Il2CppName: EqualsOrdinalIgnoreCase
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::Il2CppChar>, ByRef<::Il2CppChar>, int)>(&System::InternalSpanEx::EqualsOrdinalIgnoreCase)> {
  static const MethodInfo* get() {
    static auto* charA = &::il2cpp_utils::GetClassFromName("System", "Char")->this_arg;
    static auto* charB = &::il2cpp_utils::GetClassFromName("System", "Char")->this_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::InternalSpanEx*), "EqualsOrdinalIgnoreCase", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{charA, charB, length});
  }
};
// Writing MetadataGetter for method: System::InternalSpanEx::AllCharsInUInt32AreAscii
// Il2CppName: AllCharsInUInt32AreAscii
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint)>(&System::InternalSpanEx::AllCharsInUInt32AreAscii)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::InternalSpanEx*), "AllCharsInUInt32AreAscii", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::InternalSpanEx::AllCharsInUInt64AreAscii
// Il2CppName: AllCharsInUInt64AreAscii
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t)>(&System::InternalSpanEx::AllCharsInUInt64AreAscii)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::InternalSpanEx*), "AllCharsInUInt64AreAscii", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::InternalSpanEx::UInt32OrdinalIgnoreCaseAscii
// Il2CppName: UInt32OrdinalIgnoreCaseAscii
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint, uint)>(&System::InternalSpanEx::UInt32OrdinalIgnoreCaseAscii)> {
  static const MethodInfo* get() {
    static auto* valueA = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* valueB = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::InternalSpanEx*), "UInt32OrdinalIgnoreCaseAscii", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{valueA, valueB});
  }
};
// Writing MetadataGetter for method: System::InternalSpanEx::UInt64OrdinalIgnoreCaseAscii
// Il2CppName: UInt64OrdinalIgnoreCaseAscii
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, uint64_t)>(&System::InternalSpanEx::UInt64OrdinalIgnoreCaseAscii)> {
  static const MethodInfo* get() {
    static auto* valueA = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* valueB = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::InternalSpanEx*), "UInt64OrdinalIgnoreCaseAscii", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{valueA, valueB});
  }
};
// Writing MetadataGetter for method: System::InternalSpanEx::EqualsOrdinalIgnoreCaseNonAscii
// Il2CppName: EqualsOrdinalIgnoreCaseNonAscii
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::Il2CppChar>, ByRef<::Il2CppChar>, int)>(&System::InternalSpanEx::EqualsOrdinalIgnoreCaseNonAscii)> {
  static const MethodInfo* get() {
    static auto* charA = &::il2cpp_utils::GetClassFromName("System", "Char")->this_arg;
    static auto* charB = &::il2cpp_utils::GetClassFromName("System", "Char")->this_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::InternalSpanEx*), "EqualsOrdinalIgnoreCaseNonAscii", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{charA, charB, length});
  }
};
