// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::IO::Enumeration
namespace System::IO::Enumeration {
}
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: EnumerationOptions
  class EnumerationOptions;
  // Forward declaring type: FileInfo
  class FileInfo;
  // Forward declaring type: DirectoryInfo
  class DirectoryInfo;
  // Forward declaring type: FileSystemInfo
  class FileSystemInfo;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: ReadOnlySpan`1<T>
  template<typename T>
  struct ReadOnlySpan_1;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IEnumerable`1<T>
  template<typename T>
  class IEnumerable_1;
}
// Completed forward declares
// Type namespace: System.IO.Enumeration
namespace System::IO::Enumeration {
  // Forward declaring type: FileSystemEnumerableFactory
  class FileSystemEnumerableFactory;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::IO::Enumeration::FileSystemEnumerableFactory);
DEFINE_IL2CPP_ARG_TYPE(::System::IO::Enumeration::FileSystemEnumerableFactory*, "System.IO.Enumeration", "FileSystemEnumerableFactory");
// Type namespace: System.IO.Enumeration
namespace System::IO::Enumeration {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.IO.Enumeration.FileSystemEnumerableFactory
  // [TokenAttribute] Offset: FFFFFFFF
  class FileSystemEnumerableFactory : public ::Il2CppObject {
    public:
    // Nested type: ::System::IO::Enumeration::FileSystemEnumerableFactory::$$c__DisplayClass3_0
    class $$c__DisplayClass3_0;
    // Nested type: ::System::IO::Enumeration::FileSystemEnumerableFactory::$$c
    class $$c;
    // Nested type: ::System::IO::Enumeration::FileSystemEnumerableFactory::$$c__DisplayClass4_0
    class $$c__DisplayClass4_0;
    // Nested type: ::System::IO::Enumeration::FileSystemEnumerableFactory::$$c__DisplayClass5_0
    class $$c__DisplayClass5_0;
    // Nested type: ::System::IO::Enumeration::FileSystemEnumerableFactory::$$c__DisplayClass6_0
    class $$c__DisplayClass6_0;
    // Nested type: ::System::IO::Enumeration::FileSystemEnumerableFactory::$$c__DisplayClass7_0
    class $$c__DisplayClass7_0;
    // Nested type: ::System::IO::Enumeration::FileSystemEnumerableFactory::$$c__DisplayClass8_0
    class $$c__DisplayClass8_0;
    // Get static field: static private readonly System.Char[] s_unixEscapeChars
    static ::ArrayW<::Il2CppChar> _get_s_unixEscapeChars();
    // Set static field: static private readonly System.Char[] s_unixEscapeChars
    static void _set_s_unixEscapeChars(::ArrayW<::Il2CppChar> value);
    // static System.Void NormalizeInputs(ref System.String directory, ref System.String expression, System.IO.EnumerationOptions options)
    // Offset: 0x45E2004
    static void NormalizeInputs(ByRef<::StringW> directory, ByRef<::StringW> expression, ::System::IO::EnumerationOptions* options);
    // static private System.Boolean MatchesPattern(System.String expression, System.ReadOnlySpan`1<System.Char> name, System.IO.EnumerationOptions options)
    // Offset: 0x45E2854
    static bool MatchesPattern(::StringW expression, ::System::ReadOnlySpan_1<::Il2CppChar> name, ::System::IO::EnumerationOptions* options);
    // static System.Collections.Generic.IEnumerable`1<System.String> UserFiles(System.String directory, System.String expression, System.IO.EnumerationOptions options)
    // Offset: 0x45E2B8C
    static ::System::Collections::Generic::IEnumerable_1<::StringW>* UserFiles(::StringW directory, ::StringW expression, ::System::IO::EnumerationOptions* options);
    // static System.Collections.Generic.IEnumerable`1<System.String> UserDirectories(System.String directory, System.String expression, System.IO.EnumerationOptions options)
    // Offset: 0x45E2D88
    static ::System::Collections::Generic::IEnumerable_1<::StringW>* UserDirectories(::StringW directory, ::StringW expression, ::System::IO::EnumerationOptions* options);
    // static System.Collections.Generic.IEnumerable`1<System.String> UserEntries(System.String directory, System.String expression, System.IO.EnumerationOptions options)
    // Offset: 0x45E2F84
    static ::System::Collections::Generic::IEnumerable_1<::StringW>* UserEntries(::StringW directory, ::StringW expression, ::System::IO::EnumerationOptions* options);
    // static System.Collections.Generic.IEnumerable`1<System.IO.FileInfo> FileInfos(System.String directory, System.String expression, System.IO.EnumerationOptions options)
    // Offset: 0x45E3180
    static ::System::Collections::Generic::IEnumerable_1<::System::IO::FileInfo*>* FileInfos(::StringW directory, ::StringW expression, ::System::IO::EnumerationOptions* options);
    // static System.Collections.Generic.IEnumerable`1<System.IO.DirectoryInfo> DirectoryInfos(System.String directory, System.String expression, System.IO.EnumerationOptions options)
    // Offset: 0x45E337C
    static ::System::Collections::Generic::IEnumerable_1<::System::IO::DirectoryInfo*>* DirectoryInfos(::StringW directory, ::StringW expression, ::System::IO::EnumerationOptions* options);
    // static System.Collections.Generic.IEnumerable`1<System.IO.FileSystemInfo> FileSystemInfos(System.String directory, System.String expression, System.IO.EnumerationOptions options)
    // Offset: 0x45E3578
    static ::System::Collections::Generic::IEnumerable_1<::System::IO::FileSystemInfo*>* FileSystemInfos(::StringW directory, ::StringW expression, ::System::IO::EnumerationOptions* options);
    // static private System.Void .cctor()
    // Offset: 0x45E3774
    static void _cctor();
  }; // System.IO.Enumeration.FileSystemEnumerableFactory
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::IO::Enumeration::FileSystemEnumerableFactory::NormalizeInputs
// Il2CppName: NormalizeInputs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::StringW>, ByRef<::StringW>, ::System::IO::EnumerationOptions*)>(&System::IO::Enumeration::FileSystemEnumerableFactory::NormalizeInputs)> {
  static const MethodInfo* get() {
    static auto* directory = &::il2cpp_utils::GetClassFromName("System", "String")->this_arg;
    static auto* expression = &::il2cpp_utils::GetClassFromName("System", "String")->this_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.IO", "EnumerationOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::IO::Enumeration::FileSystemEnumerableFactory*), "NormalizeInputs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{directory, expression, options});
  }
};
// Writing MetadataGetter for method: System::IO::Enumeration::FileSystemEnumerableFactory::MatchesPattern
// Il2CppName: MatchesPattern
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ::System::ReadOnlySpan_1<::Il2CppChar>, ::System::IO::EnumerationOptions*)>(&System::IO::Enumeration::FileSystemEnumerableFactory::MatchesPattern)> {
  static const MethodInfo* get() {
    static auto* expression = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* name = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ReadOnlySpan`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Char")})->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.IO", "EnumerationOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::IO::Enumeration::FileSystemEnumerableFactory*), "MatchesPattern", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{expression, name, options});
  }
};
// Writing MetadataGetter for method: System::IO::Enumeration::FileSystemEnumerableFactory::UserFiles
// Il2CppName: UserFiles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<::StringW>* (*)(::StringW, ::StringW, ::System::IO::EnumerationOptions*)>(&System::IO::Enumeration::FileSystemEnumerableFactory::UserFiles)> {
  static const MethodInfo* get() {
    static auto* directory = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* expression = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.IO", "EnumerationOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::IO::Enumeration::FileSystemEnumerableFactory*), "UserFiles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{directory, expression, options});
  }
};
// Writing MetadataGetter for method: System::IO::Enumeration::FileSystemEnumerableFactory::UserDirectories
// Il2CppName: UserDirectories
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<::StringW>* (*)(::StringW, ::StringW, ::System::IO::EnumerationOptions*)>(&System::IO::Enumeration::FileSystemEnumerableFactory::UserDirectories)> {
  static const MethodInfo* get() {
    static auto* directory = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* expression = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.IO", "EnumerationOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::IO::Enumeration::FileSystemEnumerableFactory*), "UserDirectories", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{directory, expression, options});
  }
};
// Writing MetadataGetter for method: System::IO::Enumeration::FileSystemEnumerableFactory::UserEntries
// Il2CppName: UserEntries
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<::StringW>* (*)(::StringW, ::StringW, ::System::IO::EnumerationOptions*)>(&System::IO::Enumeration::FileSystemEnumerableFactory::UserEntries)> {
  static const MethodInfo* get() {
    static auto* directory = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* expression = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.IO", "EnumerationOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::IO::Enumeration::FileSystemEnumerableFactory*), "UserEntries", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{directory, expression, options});
  }
};
// Writing MetadataGetter for method: System::IO::Enumeration::FileSystemEnumerableFactory::FileInfos
// Il2CppName: FileInfos
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<::System::IO::FileInfo*>* (*)(::StringW, ::StringW, ::System::IO::EnumerationOptions*)>(&System::IO::Enumeration::FileSystemEnumerableFactory::FileInfos)> {
  static const MethodInfo* get() {
    static auto* directory = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* expression = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.IO", "EnumerationOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::IO::Enumeration::FileSystemEnumerableFactory*), "FileInfos", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{directory, expression, options});
  }
};
// Writing MetadataGetter for method: System::IO::Enumeration::FileSystemEnumerableFactory::DirectoryInfos
// Il2CppName: DirectoryInfos
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<::System::IO::DirectoryInfo*>* (*)(::StringW, ::StringW, ::System::IO::EnumerationOptions*)>(&System::IO::Enumeration::FileSystemEnumerableFactory::DirectoryInfos)> {
  static const MethodInfo* get() {
    static auto* directory = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* expression = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.IO", "EnumerationOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::IO::Enumeration::FileSystemEnumerableFactory*), "DirectoryInfos", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{directory, expression, options});
  }
};
// Writing MetadataGetter for method: System::IO::Enumeration::FileSystemEnumerableFactory::FileSystemInfos
// Il2CppName: FileSystemInfos
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<::System::IO::FileSystemInfo*>* (*)(::StringW, ::StringW, ::System::IO::EnumerationOptions*)>(&System::IO::Enumeration::FileSystemEnumerableFactory::FileSystemInfos)> {
  static const MethodInfo* get() {
    static auto* directory = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* expression = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.IO", "EnumerationOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::IO::Enumeration::FileSystemEnumerableFactory*), "FileSystemInfos", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{directory, expression, options});
  }
};
// Writing MetadataGetter for method: System::IO::Enumeration::FileSystemEnumerableFactory::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::IO::Enumeration::FileSystemEnumerableFactory::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::IO::Enumeration::FileSystemEnumerableFactory*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
