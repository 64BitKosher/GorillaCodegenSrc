// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.IO.FileSystemInfo
#include "System/IO/FileSystemInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: FileInfo
  class FileInfo;
  // Forward declaring type: SearchOption
  struct SearchOption;
  // Forward declaring type: EnumerationOptions
  class EnumerationOptions;
  // Forward declaring type: SearchTarget
  struct SearchTarget;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IEnumerable`1<T>
  template<typename T>
  class IEnumerable_1;
}
// Forward declaring namespace: System::Runtime::Serialization
namespace System::Runtime::Serialization {
  // Forward declaring type: SerializationInfo
  class SerializationInfo;
}
// Completed forward declares
// Type namespace: System.IO
namespace System::IO {
  // Forward declaring type: DirectoryInfo
  class DirectoryInfo;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::IO::DirectoryInfo);
DEFINE_IL2CPP_ARG_TYPE(::System::IO::DirectoryInfo*, "System.IO", "DirectoryInfo");
// Type namespace: System.IO
namespace System::IO {
  // Size: 0xA8
  #pragma pack(push, 1)
  // Autogenerated type: System.IO.DirectoryInfo
  // [TokenAttribute] Offset: FFFFFFFF
  class DirectoryInfo : public ::System::IO::FileSystemInfo {
    public:
    // public System.Void .ctor(System.String path)
    // Offset: 0x45CA914
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DirectoryInfo* New_ctor(::StringW path) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::DirectoryInfo::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DirectoryInfo*, creationType>(path)));
    }
    // System.Void .ctor(System.String originalPath, System.String fullPath, System.String fileName, System.Boolean isNormalized)
    // Offset: 0x45C9CC8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DirectoryInfo* New_ctor(::StringW originalPath, ::StringW fullPath, ::StringW fileName, bool isNormalized) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::DirectoryInfo::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DirectoryInfo*, creationType>(originalPath, fullPath, fileName, isNormalized)));
    }
    // private System.Void Init(System.String originalPath, System.String fullPath, System.String fileName, System.Boolean isNormalized)
    // Offset: 0x45CAA08
    void Init(::StringW originalPath, ::StringW fullPath, ::StringW fileName, bool isNormalized);
    // public System.IO.FileInfo[] GetFiles()
    // Offset: 0x45CADFC
    ::ArrayW<::System::IO::FileInfo*> GetFiles();
    // public System.IO.FileInfo[] GetFiles(System.String searchPattern, System.IO.SearchOption searchOption)
    // Offset: 0x45CAF44
    ::ArrayW<::System::IO::FileInfo*> GetFiles(::StringW searchPattern, ::System::IO::SearchOption searchOption);
    // public System.IO.FileInfo[] GetFiles(System.String searchPattern, System.IO.EnumerationOptions enumerationOptions)
    // Offset: 0x45CAEA4
    ::ArrayW<::System::IO::FileInfo*> GetFiles(::StringW searchPattern, ::System::IO::EnumerationOptions* enumerationOptions);
    // static System.Collections.Generic.IEnumerable`1<System.IO.FileSystemInfo> InternalEnumerateInfos(System.String path, System.String searchPattern, System.IO.SearchTarget searchTarget, System.IO.EnumerationOptions options)
    // Offset: 0x45CAFB8
    static ::System::Collections::Generic::IEnumerable_1<::System::IO::FileSystemInfo*>* InternalEnumerateInfos(::StringW path, ::StringW searchPattern, ::System::IO::SearchTarget searchTarget, ::System::IO::EnumerationOptions* options);
    // public override System.Void Delete()
    // Offset: 0x45CB170
    // Implemented from: System.IO.FileSystemInfo
    // Base method: System.Void FileSystemInfo::Delete()
    void Delete();
    // private System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    // Offset: 0x45CB17C
    // Implemented from: System.IO.FileSystemInfo
    // Base method: System.Void FileSystemInfo::.ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DirectoryInfo* New_ctor(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::DirectoryInfo::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DirectoryInfo*, creationType>(info, context)));
    }
  }; // System.IO.DirectoryInfo
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::IO::DirectoryInfo::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::IO::DirectoryInfo::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::IO::DirectoryInfo::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::IO::DirectoryInfo::*)(::StringW, ::StringW, ::StringW, bool)>(&System::IO::DirectoryInfo::Init)> {
  static const MethodInfo* get() {
    static auto* originalPath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* fullPath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* fileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* isNormalized = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::IO::DirectoryInfo*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{originalPath, fullPath, fileName, isNormalized});
  }
};
// Writing MetadataGetter for method: System::IO::DirectoryInfo::GetFiles
// Il2CppName: GetFiles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::System::IO::FileInfo*> (System::IO::DirectoryInfo::*)()>(&System::IO::DirectoryInfo::GetFiles)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::IO::DirectoryInfo*), "GetFiles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::IO::DirectoryInfo::GetFiles
// Il2CppName: GetFiles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::System::IO::FileInfo*> (System::IO::DirectoryInfo::*)(::StringW, ::System::IO::SearchOption)>(&System::IO::DirectoryInfo::GetFiles)> {
  static const MethodInfo* get() {
    static auto* searchPattern = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* searchOption = &::il2cpp_utils::GetClassFromName("System.IO", "SearchOption")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::IO::DirectoryInfo*), "GetFiles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{searchPattern, searchOption});
  }
};
// Writing MetadataGetter for method: System::IO::DirectoryInfo::GetFiles
// Il2CppName: GetFiles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::System::IO::FileInfo*> (System::IO::DirectoryInfo::*)(::StringW, ::System::IO::EnumerationOptions*)>(&System::IO::DirectoryInfo::GetFiles)> {
  static const MethodInfo* get() {
    static auto* searchPattern = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* enumerationOptions = &::il2cpp_utils::GetClassFromName("System.IO", "EnumerationOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::IO::DirectoryInfo*), "GetFiles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{searchPattern, enumerationOptions});
  }
};
// Writing MetadataGetter for method: System::IO::DirectoryInfo::InternalEnumerateInfos
// Il2CppName: InternalEnumerateInfos
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<::System::IO::FileSystemInfo*>* (*)(::StringW, ::StringW, ::System::IO::SearchTarget, ::System::IO::EnumerationOptions*)>(&System::IO::DirectoryInfo::InternalEnumerateInfos)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* searchPattern = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* searchTarget = &::il2cpp_utils::GetClassFromName("System.IO", "SearchTarget")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.IO", "EnumerationOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::IO::DirectoryInfo*), "InternalEnumerateInfos", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path, searchPattern, searchTarget, options});
  }
};
// Writing MetadataGetter for method: System::IO::DirectoryInfo::Delete
// Il2CppName: Delete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::IO::DirectoryInfo::*)()>(&System::IO::DirectoryInfo::Delete)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::IO::DirectoryInfo*), "Delete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::IO::DirectoryInfo::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
