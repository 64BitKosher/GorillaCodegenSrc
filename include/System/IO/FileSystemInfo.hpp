// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.MarshalByRefObject
#include "System/MarshalByRefObject.hpp"
// Including type: System.Runtime.Serialization.ISerializable
#include "System/Runtime/Serialization/ISerializable.hpp"
// Including type: System.IO.FileStatus
#include "System/IO/FileStatus.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: FileAttributes
  struct FileAttributes;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: DateTimeOffset
  struct DateTimeOffset;
  // Forward declaring type: DateTime
  struct DateTime;
}
// Forward declaring namespace: System::Runtime::Serialization
namespace System::Runtime::Serialization {
  // Forward declaring type: SerializationInfo
  class SerializationInfo;
}
// Completed forward declares
// Type namespace: System.IO
namespace System::IO {
  // Forward declaring type: FileSystemInfo
  class FileSystemInfo;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::IO::FileSystemInfo);
DEFINE_IL2CPP_ARG_TYPE(::System::IO::FileSystemInfo*, "System.IO", "FileSystemInfo");
// Type namespace: System.IO
namespace System::IO {
  // Size: 0xA8
  #pragma pack(push, 1)
  // Autogenerated type: System.IO.FileSystemInfo
  // [TokenAttribute] Offset: FFFFFFFF
  class FileSystemInfo : public ::System::MarshalByRefObject/*, public ::System::Runtime::Serialization::ISerializable*/ {
    public:
    public:
    // private System.IO.FileStatus _fileStatus
    // Size: 0x77
    // Offset: 0x18
    ::System::IO::FileStatus fileStatus;
    // Field size check
    static_assert(sizeof(::System::IO::FileStatus) == 0x77);
    // Padding between fields: fileStatus and: FullPath
    char __padding0[0x1] = {};
    // protected System.String FullPath
    // Size: 0x8
    // Offset: 0x90
    ::StringW FullPath;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // protected System.String OriginalPath
    // Size: 0x8
    // Offset: 0x98
    ::StringW OriginalPath;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // System.String _name
    // Size: 0x8
    // Offset: 0xA0
    ::StringW name;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Creating interface conversion operator: operator ::System::Runtime::Serialization::ISerializable
    operator ::System::Runtime::Serialization::ISerializable() noexcept {
      return *reinterpret_cast<::System::Runtime::Serialization::ISerializable*>(this);
    }
    // Deleting conversion operator: operator ::Il2CppObject*
    constexpr operator ::Il2CppObject*() const noexcept = delete;
    // Get instance field reference: private System.IO.FileStatus _fileStatus
    [[deprecated("Use field access instead!")]] ::System::IO::FileStatus& dyn__fileStatus();
    // Get instance field reference: protected System.String FullPath
    [[deprecated("Use field access instead!")]] ::StringW& dyn_FullPath();
    // Get instance field reference: protected System.String OriginalPath
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OriginalPath();
    // Get instance field reference: System.String _name
    [[deprecated("Use field access instead!")]] ::StringW& dyn__name();
    // static System.IO.FileSystemInfo Create(System.String fullPath, System.String fileName, ref System.IO.FileStatus fileStatus)
    // Offset: 0x45D03D8
    static ::System::IO::FileSystemInfo* Create(::StringW fullPath, ::StringW fileName, ByRef<::System::IO::FileStatus> fileStatus);
    // System.Void Init(ref System.IO.FileStatus fileStatus)
    // Offset: 0x45D04A8
    void Init(ByRef<::System::IO::FileStatus> fileStatus);
    // public System.IO.FileAttributes get_Attributes()
    // Offset: 0x45CE6B4
    ::System::IO::FileAttributes get_Attributes();
    // public System.Void set_Attributes(System.IO.FileAttributes value)
    // Offset: 0x45D03C4
    void set_Attributes(::System::IO::FileAttributes value);
    // System.Boolean get_ExistsCore()
    // Offset: 0x45D0524
    bool get_ExistsCore();
    // System.DateTimeOffset get_CreationTimeCore()
    // Offset: 0x45D05BC
    ::System::DateTimeOffset get_CreationTimeCore();
    // System.Int64 get_LengthCore()
    // Offset: 0x45CE780
    int64_t get_LengthCore();
    // static System.Void ThrowNotFound(System.String path)
    // Offset: 0x45CF214
    static void ThrowNotFound(::StringW path);
    // System.String get_NormalizedPath()
    // Offset: 0x45D0628
    ::StringW get_NormalizedPath();
    // protected System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    // Offset: 0x45CB180
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static FileSystemInfo* New_ctor(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemInfo::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<FileSystemInfo*, creationType>(info, context)));
    }
    // public System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    // Offset: 0x45D0684
    void GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context);
    // public System.String get_FullName()
    // Offset: 0x45D07CC
    ::StringW get_FullName();
    // public System.String get_Extension()
    // Offset: 0x45D07D4
    ::StringW get_Extension();
    // public System.String get_Name()
    // Offset: 0x45D0904
    ::StringW get_Name();
    // public System.Boolean get_Exists()
    // Offset: 0x45D090C
    bool get_Exists();
    // public System.Void Delete()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Delete();
    // public System.DateTime get_CreationTime()
    // Offset: 0x45D0994
    ::System::DateTime get_CreationTime();
    // public System.DateTime get_CreationTimeUtc()
    // Offset: 0x45D09CC
    ::System::DateTime get_CreationTimeUtc();
    // protected System.Void .ctor()
    // Offset: 0x45CA994
    // Implemented from: System.MarshalByRefObject
    // Base method: System.Void MarshalByRefObject::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static FileSystemInfo* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemInfo::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<FileSystemInfo*, creationType>()));
    }
    // public override System.String ToString()
    // Offset: 0x45D09F4
    // Implemented from: System.Object
    // Base method: System.String Object::ToString()
    ::StringW ToString();
  }; // System.IO.FileSystemInfo
  #pragma pack(pop)
  static check_size<sizeof(FileSystemInfo), 160 + sizeof(::StringW)> __System_IO_FileSystemInfoSizeCheck;
  static_assert(sizeof(FileSystemInfo) == 0xA8);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::IO::FileSystemInfo::Create
// Il2CppName: Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IO::FileSystemInfo* (*)(::StringW, ::StringW, ByRef<::System::IO::FileStatus>)>(&System::IO::FileSystemInfo::Create)> {
  static const MethodInfo* get() {
    static auto* fullPath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* fileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* fileStatus = &::il2cpp_utils::GetClassFromName("System.IO", "FileStatus")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::IO::FileSystemInfo*), "Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fullPath, fileName, fileStatus});
  }
};
// Writing MetadataGetter for method: System::IO::FileSystemInfo::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::IO::FileSystemInfo::*)(ByRef<::System::IO::FileStatus>)>(&System::IO::FileSystemInfo::Init)> {
  static const MethodInfo* get() {
    static auto* fileStatus = &::il2cpp_utils::GetClassFromName("System.IO", "FileStatus")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::IO::FileSystemInfo*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fileStatus});
  }
};
// Writing MetadataGetter for method: System::IO::FileSystemInfo::get_Attributes
// Il2CppName: get_Attributes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IO::FileAttributes (System::IO::FileSystemInfo::*)()>(&System::IO::FileSystemInfo::get_Attributes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::IO::FileSystemInfo*), "get_Attributes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::IO::FileSystemInfo::set_Attributes
// Il2CppName: set_Attributes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::IO::FileSystemInfo::*)(::System::IO::FileAttributes)>(&System::IO::FileSystemInfo::set_Attributes)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.IO", "FileAttributes")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::IO::FileSystemInfo*), "set_Attributes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::IO::FileSystemInfo::get_ExistsCore
// Il2CppName: get_ExistsCore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::IO::FileSystemInfo::*)()>(&System::IO::FileSystemInfo::get_ExistsCore)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::IO::FileSystemInfo*), "get_ExistsCore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::IO::FileSystemInfo::get_CreationTimeCore
// Il2CppName: get_CreationTimeCore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::DateTimeOffset (System::IO::FileSystemInfo::*)()>(&System::IO::FileSystemInfo::get_CreationTimeCore)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::IO::FileSystemInfo*), "get_CreationTimeCore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::IO::FileSystemInfo::get_LengthCore
// Il2CppName: get_LengthCore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (System::IO::FileSystemInfo::*)()>(&System::IO::FileSystemInfo::get_LengthCore)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::IO::FileSystemInfo*), "get_LengthCore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::IO::FileSystemInfo::ThrowNotFound
// Il2CppName: ThrowNotFound
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&System::IO::FileSystemInfo::ThrowNotFound)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::IO::FileSystemInfo*), "ThrowNotFound", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path});
  }
};
// Writing MetadataGetter for method: System::IO::FileSystemInfo::get_NormalizedPath
// Il2CppName: get_NormalizedPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::IO::FileSystemInfo::*)()>(&System::IO::FileSystemInfo::get_NormalizedPath)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::IO::FileSystemInfo*), "get_NormalizedPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::IO::FileSystemInfo::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::IO::FileSystemInfo::GetObjectData
// Il2CppName: GetObjectData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::IO::FileSystemInfo::*)(::System::Runtime::Serialization::SerializationInfo*, ::System::Runtime::Serialization::StreamingContext)>(&System::IO::FileSystemInfo::GetObjectData)> {
  static const MethodInfo* get() {
    static auto* info = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "SerializationInfo")->byval_arg;
    static auto* context = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "StreamingContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::IO::FileSystemInfo*), "GetObjectData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{info, context});
  }
};
// Writing MetadataGetter for method: System::IO::FileSystemInfo::get_FullName
// Il2CppName: get_FullName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::IO::FileSystemInfo::*)()>(&System::IO::FileSystemInfo::get_FullName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::IO::FileSystemInfo*), "get_FullName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::IO::FileSystemInfo::get_Extension
// Il2CppName: get_Extension
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::IO::FileSystemInfo::*)()>(&System::IO::FileSystemInfo::get_Extension)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::IO::FileSystemInfo*), "get_Extension", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::IO::FileSystemInfo::get_Name
// Il2CppName: get_Name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::IO::FileSystemInfo::*)()>(&System::IO::FileSystemInfo::get_Name)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::IO::FileSystemInfo*), "get_Name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::IO::FileSystemInfo::get_Exists
// Il2CppName: get_Exists
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::IO::FileSystemInfo::*)()>(&System::IO::FileSystemInfo::get_Exists)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::IO::FileSystemInfo*), "get_Exists", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::IO::FileSystemInfo::Delete
// Il2CppName: Delete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::IO::FileSystemInfo::*)()>(&System::IO::FileSystemInfo::Delete)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::IO::FileSystemInfo*), "Delete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::IO::FileSystemInfo::get_CreationTime
// Il2CppName: get_CreationTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::DateTime (System::IO::FileSystemInfo::*)()>(&System::IO::FileSystemInfo::get_CreationTime)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::IO::FileSystemInfo*), "get_CreationTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::IO::FileSystemInfo::get_CreationTimeUtc
// Il2CppName: get_CreationTimeUtc
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::DateTime (System::IO::FileSystemInfo::*)()>(&System::IO::FileSystemInfo::get_CreationTimeUtc)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::IO::FileSystemInfo*), "get_CreationTimeUtc", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::IO::FileSystemInfo::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::IO::FileSystemInfo::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::IO::FileSystemInfo::*)()>(&System::IO::FileSystemInfo::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::IO::FileSystemInfo*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
