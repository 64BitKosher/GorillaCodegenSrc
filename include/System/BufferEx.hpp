// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Type namespace: System
namespace System {
  // Forward declaring type: BufferEx
  class BufferEx;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::BufferEx);
DEFINE_IL2CPP_ARG_TYPE(::System::BufferEx*, "System", "BufferEx");
// Type namespace: System
namespace System {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.BufferEx
  // [TokenAttribute] Offset: FFFFFFFF
  class BufferEx : public ::Il2CppObject {
    public:
    // static System.Void ZeroMemory(System.Byte* dest, System.UInt32 len)
    // Offset: 0x574ADB4
    static void ZeroMemory(uint8_t* dest, uint len);
    // static System.Void Memcpy(System.Byte* dest, System.Byte* src, System.Int32 len)
    // Offset: 0x574ADDC
    static void Memcpy(uint8_t* dest, uint8_t* src, int len);
  }; // System.BufferEx
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::BufferEx::ZeroMemory
// Il2CppName: ZeroMemory
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint8_t*, uint)>(&System::BufferEx::ZeroMemory)> {
  static const MethodInfo* get() {
    static auto* dest = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* len = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::BufferEx*), "ZeroMemory", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dest, len});
  }
};
// Writing MetadataGetter for method: System::BufferEx::Memcpy
// Il2CppName: Memcpy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint8_t*, uint8_t*, int)>(&System::BufferEx::Memcpy)> {
  static const MethodInfo* get() {
    static auto* dest = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* src = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* len = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::BufferEx*), "Memcpy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dest, src, len});
  }
};
