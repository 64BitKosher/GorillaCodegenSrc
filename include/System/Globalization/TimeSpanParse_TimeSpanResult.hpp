// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Globalization.TimeSpanParse
#include "System/Globalization/TimeSpanParse.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::System::Globalization::TimeSpanParse::TimeSpanResult, "System.Globalization", "TimeSpanParse/TimeSpanResult");
// Type namespace: System.Globalization
namespace System::Globalization {
  // Size: 0x9
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: System.Globalization.TimeSpanParse/TimeSpanResult
  // [TokenAttribute] Offset: FFFFFFFF
  struct TimeSpanParse::TimeSpanResult/*, public ::System::ValueType*/ {
    public:
    public:
    // System.TimeSpan parsedTimeSpan
    // Size: 0x8
    // Offset: 0x0
    ::System::TimeSpan parsedTimeSpan;
    // Field size check
    static_assert(sizeof(::System::TimeSpan) == 0x8);
    // private readonly System.Boolean _throwOnFailure
    // Size: 0x1
    // Offset: 0x8
    bool throwOnFailure;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating value type constructor for type: TimeSpanResult
    constexpr TimeSpanResult(::System::TimeSpan parsedTimeSpan_ = {}, bool throwOnFailure_ = {}) noexcept : parsedTimeSpan{parsedTimeSpan_}, throwOnFailure{throwOnFailure_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: System.TimeSpan parsedTimeSpan
    [[deprecated("Use field access instead!")]] ::System::TimeSpan& dyn_parsedTimeSpan();
    // Get instance field reference: private readonly System.Boolean _throwOnFailure
    [[deprecated("Use field access instead!")]] bool& dyn__throwOnFailure();
    // System.Void .ctor(System.Boolean throwOnFailure)
    // Offset: 0x45F8334
    TimeSpanResult(bool throwOnFailure);
    // System.Boolean SetFailure(System.Globalization.TimeSpanParse/ParseFailureKind kind, System.String resourceKey, System.Object messageArgument, System.String argumentName)
    // Offset: 0x45F8344
    bool SetFailure(::System::Globalization::TimeSpanParse::ParseFailureKind kind, ::StringW resourceKey, ::Il2CppObject* messageArgument, ::StringW argumentName);
  }; // System.Globalization.TimeSpanParse/TimeSpanResult
  #pragma pack(pop)
  static check_size<sizeof(TimeSpanParse::TimeSpanResult), 8 + sizeof(bool)> __System_Globalization_TimeSpanParse_TimeSpanResultSizeCheck;
  static_assert(sizeof(TimeSpanParse::TimeSpanResult) == 0x9);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Globalization::TimeSpanParse::TimeSpanResult::TimeSpanResult
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Globalization::TimeSpanParse::TimeSpanResult::SetFailure
// Il2CppName: SetFailure
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Globalization::TimeSpanParse::TimeSpanResult::*)(::System::Globalization::TimeSpanParse::ParseFailureKind, ::StringW, ::Il2CppObject*, ::StringW)>(&System::Globalization::TimeSpanParse::TimeSpanResult::SetFailure)> {
  static const MethodInfo* get() {
    static auto* kind = &::il2cpp_utils::GetClassFromName("System.Globalization", "TimeSpanParse/ParseFailureKind")->byval_arg;
    static auto* resourceKey = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* messageArgument = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* argumentName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::TimeSpanParse::TimeSpanResult), "SetFailure", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{kind, resourceKey, messageArgument, argumentName});
  }
};
