// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Runtime.Serialization.IDeserializationCallback
#include "System/Runtime/Serialization/IDeserializationCallback.hpp"
// Including type: System.Globalization.CompareOptions
#include "System/Globalization/CompareOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Globalization
namespace System::Globalization {
  // Forward declaring type: SortVersion
  class SortVersion;
  // Forward declaring type: ISimpleCollator
  class ISimpleCollator;
  // Forward declaring type: SortKey
  class SortKey;
  // Forward declaring type: CultureInfo
  class CultureInfo;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: ReadOnlySpan`1<T>
  template<typename T>
  struct ReadOnlySpan_1;
}
// Forward declaring namespace: System::Runtime::Serialization
namespace System::Runtime::Serialization {
  // Forward declaring type: StreamingContext
  struct StreamingContext;
}
// Completed forward declares
// Type namespace: System.Globalization
namespace System::Globalization {
  // Forward declaring type: CompareInfo
  class CompareInfo;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Globalization::CompareInfo);
DEFINE_IL2CPP_ARG_TYPE(::System::Globalization::CompareInfo*, "System.Globalization", "CompareInfo");
// Type namespace: System.Globalization
namespace System::Globalization {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: System.Globalization.CompareInfo
  // [TokenAttribute] Offset: FFFFFFFF
  class CompareInfo : public ::Il2CppObject/*, public ::System::Runtime::Serialization::IDeserializationCallback*/ {
    public:
    public:
    // private System.String m_name
    // Size: 0x8
    // Offset: 0x10
    ::StringW m_name;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String _sortName
    // Size: 0x8
    // Offset: 0x18
    ::StringW sortName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Globalization.SortVersion m_SortVersion
    // Size: 0x8
    // Offset: 0x20
    ::System::Globalization::SortVersion* m_SortVersion;
    // Field size check
    static_assert(sizeof(::System::Globalization::SortVersion*) == 0x8);
    // private System.Int32 culture
    // Size: 0x4
    // Offset: 0x28
    int culture;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: culture and: collator
    char __padding3[0x4] = {};
    // private System.Globalization.ISimpleCollator collator
    // Size: 0x8
    // Offset: 0x30
    ::System::Globalization::ISimpleCollator* collator;
    // Field size check
    static_assert(sizeof(::System::Globalization::ISimpleCollator*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::System::Runtime::Serialization::IDeserializationCallback
    operator ::System::Runtime::Serialization::IDeserializationCallback() noexcept {
      return *reinterpret_cast<::System::Runtime::Serialization::IDeserializationCallback*>(this);
    }
    // static field const value: static private System.Globalization.CompareOptions ValidIndexMaskOffFlags
    static constexpr const int ValidIndexMaskOffFlags = -32;
    // Get static field: static private System.Globalization.CompareOptions ValidIndexMaskOffFlags
    static ::System::Globalization::CompareOptions _get_ValidIndexMaskOffFlags();
    // Set static field: static private System.Globalization.CompareOptions ValidIndexMaskOffFlags
    static void _set_ValidIndexMaskOffFlags(::System::Globalization::CompareOptions value);
    // static field const value: static private System.Globalization.CompareOptions ValidCompareMaskOffFlags
    static constexpr const int ValidCompareMaskOffFlags = -536870944;
    // Get static field: static private System.Globalization.CompareOptions ValidCompareMaskOffFlags
    static ::System::Globalization::CompareOptions _get_ValidCompareMaskOffFlags();
    // Set static field: static private System.Globalization.CompareOptions ValidCompareMaskOffFlags
    static void _set_ValidCompareMaskOffFlags(::System::Globalization::CompareOptions value);
    // static field const value: static private System.Globalization.CompareOptions ValidHashCodeOfStringMaskOffFlags
    static constexpr const int ValidHashCodeOfStringMaskOffFlags = -32;
    // Get static field: static private System.Globalization.CompareOptions ValidHashCodeOfStringMaskOffFlags
    static ::System::Globalization::CompareOptions _get_ValidHashCodeOfStringMaskOffFlags();
    // Set static field: static private System.Globalization.CompareOptions ValidHashCodeOfStringMaskOffFlags
    static void _set_ValidHashCodeOfStringMaskOffFlags(::System::Globalization::CompareOptions value);
    // static field const value: static private System.Globalization.CompareOptions ValidSortkeyCtorMaskOffFlags
    static constexpr const int ValidSortkeyCtorMaskOffFlags = -536870944;
    // Get static field: static private System.Globalization.CompareOptions ValidSortkeyCtorMaskOffFlags
    static ::System::Globalization::CompareOptions _get_ValidSortkeyCtorMaskOffFlags();
    // Set static field: static private System.Globalization.CompareOptions ValidSortkeyCtorMaskOffFlags
    static void _set_ValidSortkeyCtorMaskOffFlags(::System::Globalization::CompareOptions value);
    // Get static field: static readonly System.Globalization.CompareInfo Invariant
    static ::System::Globalization::CompareInfo* _get_Invariant();
    // Set static field: static readonly System.Globalization.CompareInfo Invariant
    static void _set_Invariant(::System::Globalization::CompareInfo* value);
    // Get static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Globalization.ISimpleCollator> collators
    static ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Globalization::ISimpleCollator*>* _get_collators();
    // Set static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Globalization.ISimpleCollator> collators
    static void _set_collators(::System::Collections::Generic::Dictionary_2<::StringW, ::System::Globalization::ISimpleCollator*>* value);
    // Get static field: static private System.Boolean managedCollation
    static bool _get_managedCollation();
    // Set static field: static private System.Boolean managedCollation
    static void _set_managedCollation(bool value);
    // Get static field: static private System.Boolean managedCollationChecked
    static bool _get_managedCollationChecked();
    // Set static field: static private System.Boolean managedCollationChecked
    static void _set_managedCollationChecked(bool value);
    // Get instance field reference: private System.String m_name
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_name();
    // Get instance field reference: private System.String _sortName
    [[deprecated("Use field access instead!")]] ::StringW& dyn__sortName();
    // Get instance field reference: private System.Globalization.SortVersion m_SortVersion
    [[deprecated("Use field access instead!")]] ::System::Globalization::SortVersion*& dyn_m_SortVersion();
    // Get instance field reference: private System.Int32 culture
    [[deprecated("Use field access instead!")]] int& dyn_culture();
    // Get instance field reference: private System.Globalization.ISimpleCollator collator
    [[deprecated("Use field access instead!")]] ::System::Globalization::ISimpleCollator*& dyn_collator();
    // static System.Int32 InvariantIndexOf(System.String source, System.String value, System.Int32 startIndex, System.Int32 count, System.Boolean ignoreCase)
    // Offset: 0x45E49F0
    static int InvariantIndexOf(::StringW source, ::StringW value, int startIndex, int count, bool ignoreCase);
    // static System.Int32 InvariantIndexOf(System.ReadOnlySpan`1<System.Char> source, System.ReadOnlySpan`1<System.Char> value, System.Boolean ignoreCase)
    // Offset: 0x45E4E50
    static int InvariantIndexOf(::System::ReadOnlySpan_1<::Il2CppChar> source, ::System::ReadOnlySpan_1<::Il2CppChar> value, bool ignoreCase);
    // static System.Int32 InvariantLastIndexOf(System.String source, System.String value, System.Int32 startIndex, System.Int32 count, System.Boolean ignoreCase)
    // Offset: 0x45E4F2C
    static int InvariantLastIndexOf(::StringW source, ::StringW value, int startIndex, int count, bool ignoreCase);
    // static private System.Int32 InvariantFindString(System.Char* source, System.Int32 sourceCount, System.Char* value, System.Int32 valueCount, System.Boolean ignoreCase, System.Boolean start)
    // Offset: 0x45E4AB4
    static int InvariantFindString(::Il2CppChar* source, int sourceCount, ::Il2CppChar* value, int valueCount, bool ignoreCase, bool start);
    // static private System.Char InvariantToUpper(System.Char c)
    // Offset: 0x45E4FF8
    static ::Il2CppChar InvariantToUpper(::Il2CppChar c);
    // private System.Globalization.SortKey InvariantCreateSortKey(System.String source, System.Globalization.CompareOptions options)
    // Offset: 0x45E5010
    ::System::Globalization::SortKey* InvariantCreateSortKey(::StringW source, ::System::Globalization::CompareOptions options);
    // System.Void .ctor(System.Globalization.CultureInfo culture)
    // Offset: 0x45E52B8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CompareInfo* New_ctor(::System::Globalization::CultureInfo* culture) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CompareInfo*, creationType>(culture)));
    }
    // static public System.Globalization.CompareInfo GetCompareInfo(System.String name)
    // Offset: 0x45E531C
    static ::System::Globalization::CompareInfo* GetCompareInfo(::StringW name);
    // private System.Void OnDeserializing(System.Runtime.Serialization.StreamingContext ctx)
    // Offset: 0x45E53D4
    void OnDeserializing(::System::Runtime::Serialization::StreamingContext ctx);
    // private System.Void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object sender)
    // Offset: 0x45E53E0
    void System_Runtime_Serialization_IDeserializationCallback_OnDeserialization(::Il2CppObject* sender);
    // private System.Void OnDeserialized(System.Runtime.Serialization.StreamingContext ctx)
    // Offset: 0x45E5494
    void OnDeserialized(::System::Runtime::Serialization::StreamingContext ctx);
    // private System.Void OnDeserialized()
    // Offset: 0x45E53E4
    void OnDeserialized();
    // private System.Void OnSerializing(System.Runtime.Serialization.StreamingContext ctx)
    // Offset: 0x45E5498
    void OnSerializing(::System::Runtime::Serialization::StreamingContext ctx);
    // public System.String get_Name()
    // Offset: 0x45E5524
    ::StringW get_Name();
    // public System.Int32 Compare(System.String string1, System.String string2)
    // Offset: 0x45E55B0
    int Compare(::StringW string1, ::StringW string2);
    // public System.Int32 Compare(System.String string1, System.String string2, System.Globalization.CompareOptions options)
    // Offset: 0x45E55C0
    int Compare(::StringW string1, ::StringW string2, ::System::Globalization::CompareOptions options);
    // System.Int32 Compare(System.ReadOnlySpan`1<System.Char> string1, System.String string2, System.Globalization.CompareOptions options)
    // Offset: 0x45E5B50
    int Compare(::System::ReadOnlySpan_1<::Il2CppChar> string1, ::StringW string2, ::System::Globalization::CompareOptions options);
    // System.Int32 CompareOptionIgnoreCase(System.ReadOnlySpan`1<System.Char> string1, System.ReadOnlySpan`1<System.Char> string2)
    // Offset: 0x45E5F4C
    int CompareOptionIgnoreCase(::System::ReadOnlySpan_1<::Il2CppChar> string1, ::System::ReadOnlySpan_1<::Il2CppChar> string2);
    // public System.Int32 Compare(System.String string1, System.Int32 offset1, System.Int32 length1, System.String string2, System.Int32 offset2, System.Int32 length2, System.Globalization.CompareOptions options)
    // Offset: 0x45E6178
    int Compare(::StringW string1, int offset1, int length1, ::StringW string2, int offset2, int length2, ::System::Globalization::CompareOptions options);
    // static System.Int32 CompareOrdinalIgnoreCase(System.String strA, System.Int32 indexA, System.Int32 lengthA, System.String strB, System.Int32 indexB, System.Int32 lengthB)
    // Offset: 0x45E66C4
    static int CompareOrdinalIgnoreCase(::StringW strA, int indexA, int lengthA, ::StringW strB, int indexB, int lengthB);
    // static System.Int32 CompareOrdinalIgnoreCase(System.ReadOnlySpan`1<System.Char> strA, System.ReadOnlySpan`1<System.Char> strB)
    // Offset: 0x45E5860
    static int CompareOrdinalIgnoreCase(::System::ReadOnlySpan_1<::Il2CppChar> strA, ::System::ReadOnlySpan_1<::Il2CppChar> strB);
    // public System.Boolean IsPrefix(System.String source, System.String prefix, System.Globalization.CompareOptions options)
    // Offset: 0x45E69BC
    bool IsPrefix(::StringW source, ::StringW prefix, ::System::Globalization::CompareOptions options);
    // System.Boolean IsPrefix(System.ReadOnlySpan`1<System.Char> source, System.ReadOnlySpan`1<System.Char> prefix, System.Globalization.CompareOptions options)
    // Offset: 0x45E6D44
    bool IsPrefix(::System::ReadOnlySpan_1<::Il2CppChar> source, ::System::ReadOnlySpan_1<::Il2CppChar> prefix, ::System::Globalization::CompareOptions options);
    // public System.Boolean IsSuffix(System.String source, System.String suffix, System.Globalization.CompareOptions options)
    // Offset: 0x45E6DA8
    bool IsSuffix(::StringW source, ::StringW suffix, ::System::Globalization::CompareOptions options);
    // System.Boolean IsSuffix(System.ReadOnlySpan`1<System.Char> source, System.ReadOnlySpan`1<System.Char> suffix, System.Globalization.CompareOptions options)
    // Offset: 0x45E712C
    bool IsSuffix(::System::ReadOnlySpan_1<::Il2CppChar> source, ::System::ReadOnlySpan_1<::Il2CppChar> suffix, ::System::Globalization::CompareOptions options);
    // public System.Int32 IndexOf(System.String source, System.String value, System.Globalization.CompareOptions options)
    // Offset: 0x45E7190
    int IndexOf(::StringW source, ::StringW value, ::System::Globalization::CompareOptions options);
    // public System.Int32 IndexOf(System.String source, System.String value, System.Int32 startIndex, System.Int32 count, System.Globalization.CompareOptions options)
    // Offset: 0x45E71FC
    int IndexOf(::StringW source, ::StringW value, int startIndex, int count, ::System::Globalization::CompareOptions options);
    // System.Int32 IndexOfOrdinal(System.ReadOnlySpan`1<System.Char> source, System.ReadOnlySpan`1<System.Char> value, System.Boolean ignoreCase)
    // Offset: 0x45E7600
    int IndexOfOrdinal(::System::ReadOnlySpan_1<::Il2CppChar> source, ::System::ReadOnlySpan_1<::Il2CppChar> value, bool ignoreCase);
    // System.Int32 IndexOf(System.ReadOnlySpan`1<System.Char> source, System.ReadOnlySpan`1<System.Char> value, System.Globalization.CompareOptions options)
    // Offset: 0x45E7684
    int IndexOf(::System::ReadOnlySpan_1<::Il2CppChar> source, ::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::CompareOptions options);
    // System.Int32 IndexOf(System.String source, System.String value, System.Int32 startIndex, System.Int32 count, System.Globalization.CompareOptions options, System.Int32* matchLengthPtr)
    // Offset: 0x45E770C
    int IndexOf(::StringW source, ::StringW value, int startIndex, int count, ::System::Globalization::CompareOptions options, int* matchLengthPtr);
    // System.Int32 IndexOfOrdinal(System.String source, System.String value, System.Int32 startIndex, System.Int32 count, System.Boolean ignoreCase)
    // Offset: 0x45E74AC
    int IndexOfOrdinal(::StringW source, ::StringW value, int startIndex, int count, bool ignoreCase);
    // public System.Int32 LastIndexOf(System.String source, System.String value, System.Int32 startIndex, System.Int32 count, System.Globalization.CompareOptions options)
    // Offset: 0x45E78CC
    int LastIndexOf(::StringW source, ::StringW value, int startIndex, int count, ::System::Globalization::CompareOptions options);
    // System.Int32 LastIndexOfOrdinal(System.String source, System.String value, System.Int32 startIndex, System.Int32 count, System.Boolean ignoreCase)
    // Offset: 0x45E7C10
    int LastIndexOfOrdinal(::StringW source, ::StringW value, int startIndex, int count, bool ignoreCase);
    // public System.Globalization.SortKey GetSortKey(System.String source, System.Globalization.CompareOptions options)
    // Offset: 0x45E7D48
    ::System::Globalization::SortKey* GetSortKey(::StringW source, ::System::Globalization::CompareOptions options);
    // static System.Int32 GetIgnoreCaseHash(System.String source)
    // Offset: 0x45E7FB0
    static int GetIgnoreCaseHash(::StringW source);
    // System.Int32 GetHashCodeOfString(System.String source, System.Globalization.CompareOptions options)
    // Offset: 0x45E83FC
    int GetHashCodeOfString(::StringW source, ::System::Globalization::CompareOptions options);
    // public System.Int32 GetHashCode(System.String source, System.Globalization.CompareOptions options)
    // Offset: 0x45E85C8
    int GetHashCode(::StringW source, ::System::Globalization::CompareOptions options);
    // static private System.Boolean get_UseManagedCollation()
    // Offset: 0x45E8728
    static bool get_UseManagedCollation();
    // private System.Globalization.ISimpleCollator GetCollator()
    // Offset: 0x45E8874
    ::System::Globalization::ISimpleCollator* GetCollator();
    // private System.Globalization.SortKey CreateSortKeyCore(System.String source, System.Globalization.CompareOptions options)
    // Offset: 0x45E8B9C
    ::System::Globalization::SortKey* CreateSortKeyCore(::StringW source, ::System::Globalization::CompareOptions options);
    // private System.Int32 internal_index_switch(System.String s1, System.Int32 sindex, System.Int32 count, System.String s2, System.Globalization.CompareOptions opt, System.Boolean first)
    // Offset: 0x45E8CD4
    int internal_index_switch(::StringW s1, int sindex, int count, ::StringW s2, ::System::Globalization::CompareOptions opt, bool first);
    // private System.Int32 internal_compare_switch(System.String str1, System.Int32 offset1, System.Int32 length1, System.String str2, System.Int32 offset2, System.Int32 length2, System.Globalization.CompareOptions options)
    // Offset: 0x45E5A54
    int internal_compare_switch(::StringW str1, int offset1, int length1, ::StringW str2, int offset2, int length2, ::System::Globalization::CompareOptions options);
    // private System.Int32 internal_compare_managed(System.String str1, System.Int32 offset1, System.Int32 length1, System.String str2, System.Int32 offset2, System.Int32 length2, System.Globalization.CompareOptions options)
    // Offset: 0x45E90A4
    int internal_compare_managed(::StringW str1, int offset1, int length1, ::StringW str2, int offset2, int length2, ::System::Globalization::CompareOptions options);
    // private System.Int32 internal_index_managed(System.String s1, System.Int32 sindex, System.Int32 count, System.String s2, System.Globalization.CompareOptions opt, System.Boolean first)
    // Offset: 0x45E8EC4
    int internal_index_managed(::StringW s1, int sindex, int count, ::StringW s2, ::System::Globalization::CompareOptions opt, bool first);
    // static private System.Int32 internal_compare_icall(System.Char* str1, System.Int32 length1, System.Char* str2, System.Int32 length2, System.Globalization.CompareOptions options)
    // Offset: 0x45E91A4
    static int internal_compare_icall(::Il2CppChar* str1, int length1, ::Il2CppChar* str2, int length2, ::System::Globalization::CompareOptions options);
    // static private System.Int32 internal_compare(System.String str1, System.Int32 offset1, System.Int32 length1, System.String str2, System.Int32 offset2, System.Int32 length2, System.Globalization.CompareOptions options)
    // Offset: 0x45E8FF0
    static int internal_compare(::StringW str1, int offset1, int length1, ::StringW str2, int offset2, int length2, ::System::Globalization::CompareOptions options);
    // static private System.Int32 internal_index_icall(System.Char* source, System.Int32 sindex, System.Int32 count, System.Char* value, System.Int32 value_length, System.Boolean first)
    // Offset: 0x45E91A8
    static int internal_index_icall(::Il2CppChar* source, int sindex, int count, ::Il2CppChar* value, int value_length, bool first);
    // static private System.Int32 internal_index(System.String source, System.Int32 sindex, System.Int32 count, System.String value, System.Boolean first)
    // Offset: 0x45E8E10
    static int internal_index(::StringW source, int sindex, int count, ::StringW value, bool first);
    // private System.Void InitSort(System.Globalization.CultureInfo culture)
    // Offset: 0x45E5300
    void InitSort(::System::Globalization::CultureInfo* culture);
    // static private System.Int32 CompareStringOrdinalIgnoreCase(System.Char* pString1, System.Int32 length1, System.Char* pString2, System.Int32 length2)
    // Offset: 0x45E6838
    static int CompareStringOrdinalIgnoreCase(::Il2CppChar* pString1, int length1, ::Il2CppChar* pString2, int length2);
    // static System.Int32 IndexOfOrdinalCore(System.String source, System.String value, System.Int32 startIndex, System.Int32 count, System.Boolean ignoreCase)
    // Offset: 0x45E78AC
    static int IndexOfOrdinalCore(::StringW source, ::StringW value, int startIndex, int count, bool ignoreCase);
    // static System.Int32 LastIndexOfOrdinalCore(System.String source, System.String value, System.Int32 startIndex, System.Int32 count, System.Boolean ignoreCase)
    // Offset: 0x45E7D28
    static int LastIndexOfOrdinalCore(::StringW source, ::StringW value, int startIndex, int count, bool ignoreCase);
    // private System.Int32 LastIndexOfCore(System.String source, System.String target, System.Int32 startIndex, System.Int32 count, System.Globalization.CompareOptions options)
    // Offset: 0x45E7D10
    int LastIndexOfCore(::StringW source, ::StringW target, int startIndex, int count, ::System::Globalization::CompareOptions options);
    // private System.Int32 IndexOfCore(System.String source, System.String target, System.Int32 startIndex, System.Int32 count, System.Globalization.CompareOptions options, System.Int32* matchLengthPtr)
    // Offset: 0x45E75AC
    int IndexOfCore(::StringW source, ::StringW target, int startIndex, int count, ::System::Globalization::CompareOptions options, int* matchLengthPtr);
    // private System.Int32 IndexOfCore(System.ReadOnlySpan`1<System.Char> source, System.ReadOnlySpan`1<System.Char> target, System.Globalization.CompareOptions options, System.Int32* matchLengthPtr)
    // Offset: 0x45E768C
    int IndexOfCore(::System::ReadOnlySpan_1<::Il2CppChar> source, ::System::ReadOnlySpan_1<::Il2CppChar> target, ::System::Globalization::CompareOptions options, int* matchLengthPtr);
    // private System.Int32 IndexOfOrdinalCore(System.ReadOnlySpan`1<System.Char> source, System.ReadOnlySpan`1<System.Char> value, System.Boolean ignoreCase)
    // Offset: 0x45E7608
    int IndexOfOrdinalCore(::System::ReadOnlySpan_1<::Il2CppChar> source, ::System::ReadOnlySpan_1<::Il2CppChar> value, bool ignoreCase);
    // private System.Int32 CompareString(System.ReadOnlySpan`1<System.Char> string1, System.String string2, System.Globalization.CompareOptions options)
    // Offset: 0x45E5EE8
    int CompareString(::System::ReadOnlySpan_1<::Il2CppChar> string1, ::StringW string2, ::System::Globalization::CompareOptions options);
    // private System.Int32 CompareString(System.ReadOnlySpan`1<System.Char> string1, System.ReadOnlySpan`1<System.Char> string2, System.Globalization.CompareOptions options)
    // Offset: 0x45E6088
    int CompareString(::System::ReadOnlySpan_1<::Il2CppChar> string1, ::System::ReadOnlySpan_1<::Il2CppChar> string2, ::System::Globalization::CompareOptions options);
    // private System.Globalization.SortKey CreateSortKey(System.String source, System.Globalization.CompareOptions options)
    // Offset: 0x45E7E10
    ::System::Globalization::SortKey* CreateSortKey(::StringW source, ::System::Globalization::CompareOptions options);
    // private System.Boolean StartsWith(System.String source, System.String prefix, System.Globalization.CompareOptions options)
    // Offset: 0x45E6BD0
    bool StartsWith(::StringW source, ::StringW prefix, ::System::Globalization::CompareOptions options);
    // private System.Boolean StartsWith(System.ReadOnlySpan`1<System.Char> source, System.ReadOnlySpan`1<System.Char> prefix, System.Globalization.CompareOptions options)
    // Offset: 0x45E6D48
    bool StartsWith(::System::ReadOnlySpan_1<::Il2CppChar> source, ::System::ReadOnlySpan_1<::Il2CppChar> prefix, ::System::Globalization::CompareOptions options);
    // private System.Boolean EndsWith(System.String source, System.String suffix, System.Globalization.CompareOptions options)
    // Offset: 0x45E6FBC
    bool EndsWith(::StringW source, ::StringW suffix, ::System::Globalization::CompareOptions options);
    // private System.Boolean EndsWith(System.ReadOnlySpan`1<System.Char> source, System.ReadOnlySpan`1<System.Char> suffix, System.Globalization.CompareOptions options)
    // Offset: 0x45E7130
    bool EndsWith(::System::ReadOnlySpan_1<::Il2CppChar> source, ::System::ReadOnlySpan_1<::Il2CppChar> suffix, ::System::Globalization::CompareOptions options);
    // System.Int32 GetHashCodeOfStringCore(System.String source, System.Globalization.CompareOptions options)
    // Offset: 0x45E859C
    int GetHashCodeOfStringCore(::StringW source, ::System::Globalization::CompareOptions options);
    // static private System.Void .cctor()
    // Offset: 0x45E91B0
    static void _cctor();
    // public override System.Boolean Equals(System.Object value)
    // Offset: 0x45E7EC8
    // Implemented from: System.Object
    // Base method: System.Boolean Object::Equals(System.Object value)
    bool Equals(::Il2CppObject* value);
    // public override System.Int32 GetHashCode()
    // Offset: 0x45E7F88
    // Implemented from: System.Object
    // Base method: System.Int32 Object::GetHashCode()
    int GetHashCode();
    // public override System.String ToString()
    // Offset: 0x45E86C8
    // Implemented from: System.Object
    // Base method: System.String Object::ToString()
    ::StringW ToString();
    // System.Void .ctor()
    // Offset: 0x45E9244
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CompareInfo* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CompareInfo*, creationType>()));
    }
  }; // System.Globalization.CompareInfo
  #pragma pack(pop)
  static check_size<sizeof(CompareInfo), 48 + sizeof(::System::Globalization::ISimpleCollator*)> __System_Globalization_CompareInfoSizeCheck;
  static_assert(sizeof(CompareInfo) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Globalization::CompareInfo::InvariantIndexOf
// Il2CppName: InvariantIndexOf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW, ::StringW, int, int, bool)>(&System::Globalization::CompareInfo::InvariantIndexOf)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* startIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* ignoreCase = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "InvariantIndexOf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, value, startIndex, count, ignoreCase});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::InvariantIndexOf
// Il2CppName: InvariantIndexOf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::ReadOnlySpan_1<::Il2CppChar>, ::System::ReadOnlySpan_1<::Il2CppChar>, bool)>(&System::Globalization::CompareInfo::InvariantIndexOf)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ReadOnlySpan`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Char")})->byval_arg;
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ReadOnlySpan`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Char")})->byval_arg;
    static auto* ignoreCase = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "InvariantIndexOf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, value, ignoreCase});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::InvariantLastIndexOf
// Il2CppName: InvariantLastIndexOf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW, ::StringW, int, int, bool)>(&System::Globalization::CompareInfo::InvariantLastIndexOf)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* startIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* ignoreCase = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "InvariantLastIndexOf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, value, startIndex, count, ignoreCase});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::InvariantFindString
// Il2CppName: InvariantFindString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Il2CppChar*, int, ::Il2CppChar*, int, bool, bool)>(&System::Globalization::CompareInfo::InvariantFindString)> {
  static const MethodInfo* get() {
    static auto* source = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Char"))->byval_arg;
    static auto* sourceCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Char"))->byval_arg;
    static auto* valueCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* ignoreCase = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* start = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "InvariantFindString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, sourceCount, value, valueCount, ignoreCase, start});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::InvariantToUpper
// Il2CppName: InvariantToUpper
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppChar (*)(::Il2CppChar)>(&System::Globalization::CompareInfo::InvariantToUpper)> {
  static const MethodInfo* get() {
    static auto* c = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "InvariantToUpper", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{c});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::InvariantCreateSortKey
// Il2CppName: InvariantCreateSortKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Globalization::SortKey* (System::Globalization::CompareInfo::*)(::StringW, ::System::Globalization::CompareOptions)>(&System::Globalization::CompareInfo::InvariantCreateSortKey)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "InvariantCreateSortKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, options});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Globalization::CompareInfo::GetCompareInfo
// Il2CppName: GetCompareInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Globalization::CompareInfo* (*)(::StringW)>(&System::Globalization::CompareInfo::GetCompareInfo)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "GetCompareInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::OnDeserializing
// Il2CppName: OnDeserializing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Globalization::CompareInfo::*)(::System::Runtime::Serialization::StreamingContext)>(&System::Globalization::CompareInfo::OnDeserializing)> {
  static const MethodInfo* get() {
    static auto* ctx = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "StreamingContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "OnDeserializing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ctx});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::System_Runtime_Serialization_IDeserializationCallback_OnDeserialization
// Il2CppName: System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Globalization::CompareInfo::*)(::Il2CppObject*)>(&System::Globalization::CompareInfo::System_Runtime_Serialization_IDeserializationCallback_OnDeserialization)> {
  static const MethodInfo* get() {
    static auto* sender = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "System.Runtime.Serialization.IDeserializationCallback.OnDeserialization", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sender});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::OnDeserialized
// Il2CppName: OnDeserialized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Globalization::CompareInfo::*)(::System::Runtime::Serialization::StreamingContext)>(&System::Globalization::CompareInfo::OnDeserialized)> {
  static const MethodInfo* get() {
    static auto* ctx = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "StreamingContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "OnDeserialized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ctx});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::OnDeserialized
// Il2CppName: OnDeserialized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Globalization::CompareInfo::*)()>(&System::Globalization::CompareInfo::OnDeserialized)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "OnDeserialized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::OnSerializing
// Il2CppName: OnSerializing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Globalization::CompareInfo::*)(::System::Runtime::Serialization::StreamingContext)>(&System::Globalization::CompareInfo::OnSerializing)> {
  static const MethodInfo* get() {
    static auto* ctx = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "StreamingContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "OnSerializing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ctx});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::get_Name
// Il2CppName: get_Name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Globalization::CompareInfo::*)()>(&System::Globalization::CompareInfo::get_Name)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "get_Name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::Compare
// Il2CppName: Compare
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Globalization::CompareInfo::*)(::StringW, ::StringW)>(&System::Globalization::CompareInfo::Compare)> {
  static const MethodInfo* get() {
    static auto* string1 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* string2 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "Compare", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{string1, string2});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::Compare
// Il2CppName: Compare
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Globalization::CompareInfo::*)(::StringW, ::StringW, ::System::Globalization::CompareOptions)>(&System::Globalization::CompareInfo::Compare)> {
  static const MethodInfo* get() {
    static auto* string1 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* string2 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "Compare", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{string1, string2, options});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::Compare
// Il2CppName: Compare
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Globalization::CompareInfo::*)(::System::ReadOnlySpan_1<::Il2CppChar>, ::StringW, ::System::Globalization::CompareOptions)>(&System::Globalization::CompareInfo::Compare)> {
  static const MethodInfo* get() {
    static auto* string1 = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ReadOnlySpan`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Char")})->byval_arg;
    static auto* string2 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "Compare", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{string1, string2, options});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::CompareOptionIgnoreCase
// Il2CppName: CompareOptionIgnoreCase
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Globalization::CompareInfo::*)(::System::ReadOnlySpan_1<::Il2CppChar>, ::System::ReadOnlySpan_1<::Il2CppChar>)>(&System::Globalization::CompareInfo::CompareOptionIgnoreCase)> {
  static const MethodInfo* get() {
    static auto* string1 = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ReadOnlySpan`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Char")})->byval_arg;
    static auto* string2 = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ReadOnlySpan`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Char")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "CompareOptionIgnoreCase", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{string1, string2});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::Compare
// Il2CppName: Compare
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Globalization::CompareInfo::*)(::StringW, int, int, ::StringW, int, int, ::System::Globalization::CompareOptions)>(&System::Globalization::CompareInfo::Compare)> {
  static const MethodInfo* get() {
    static auto* string1 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* offset1 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* length1 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* string2 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* offset2 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* length2 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "Compare", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{string1, offset1, length1, string2, offset2, length2, options});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::CompareOrdinalIgnoreCase
// Il2CppName: CompareOrdinalIgnoreCase
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW, int, int, ::StringW, int, int)>(&System::Globalization::CompareInfo::CompareOrdinalIgnoreCase)> {
  static const MethodInfo* get() {
    static auto* strA = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* indexA = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* lengthA = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* strB = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* indexB = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* lengthB = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "CompareOrdinalIgnoreCase", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{strA, indexA, lengthA, strB, indexB, lengthB});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::CompareOrdinalIgnoreCase
// Il2CppName: CompareOrdinalIgnoreCase
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::ReadOnlySpan_1<::Il2CppChar>, ::System::ReadOnlySpan_1<::Il2CppChar>)>(&System::Globalization::CompareInfo::CompareOrdinalIgnoreCase)> {
  static const MethodInfo* get() {
    static auto* strA = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ReadOnlySpan`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Char")})->byval_arg;
    static auto* strB = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ReadOnlySpan`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Char")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "CompareOrdinalIgnoreCase", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{strA, strB});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::IsPrefix
// Il2CppName: IsPrefix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Globalization::CompareInfo::*)(::StringW, ::StringW, ::System::Globalization::CompareOptions)>(&System::Globalization::CompareInfo::IsPrefix)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* prefix = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "IsPrefix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, prefix, options});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::IsPrefix
// Il2CppName: IsPrefix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Globalization::CompareInfo::*)(::System::ReadOnlySpan_1<::Il2CppChar>, ::System::ReadOnlySpan_1<::Il2CppChar>, ::System::Globalization::CompareOptions)>(&System::Globalization::CompareInfo::IsPrefix)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ReadOnlySpan`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Char")})->byval_arg;
    static auto* prefix = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ReadOnlySpan`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Char")})->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "IsPrefix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, prefix, options});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::IsSuffix
// Il2CppName: IsSuffix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Globalization::CompareInfo::*)(::StringW, ::StringW, ::System::Globalization::CompareOptions)>(&System::Globalization::CompareInfo::IsSuffix)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* suffix = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "IsSuffix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, suffix, options});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::IsSuffix
// Il2CppName: IsSuffix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Globalization::CompareInfo::*)(::System::ReadOnlySpan_1<::Il2CppChar>, ::System::ReadOnlySpan_1<::Il2CppChar>, ::System::Globalization::CompareOptions)>(&System::Globalization::CompareInfo::IsSuffix)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ReadOnlySpan`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Char")})->byval_arg;
    static auto* suffix = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ReadOnlySpan`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Char")})->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "IsSuffix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, suffix, options});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::IndexOf
// Il2CppName: IndexOf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Globalization::CompareInfo::*)(::StringW, ::StringW, ::System::Globalization::CompareOptions)>(&System::Globalization::CompareInfo::IndexOf)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "IndexOf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, value, options});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::IndexOf
// Il2CppName: IndexOf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Globalization::CompareInfo::*)(::StringW, ::StringW, int, int, ::System::Globalization::CompareOptions)>(&System::Globalization::CompareInfo::IndexOf)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* startIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "IndexOf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, value, startIndex, count, options});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::IndexOfOrdinal
// Il2CppName: IndexOfOrdinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Globalization::CompareInfo::*)(::System::ReadOnlySpan_1<::Il2CppChar>, ::System::ReadOnlySpan_1<::Il2CppChar>, bool)>(&System::Globalization::CompareInfo::IndexOfOrdinal)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ReadOnlySpan`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Char")})->byval_arg;
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ReadOnlySpan`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Char")})->byval_arg;
    static auto* ignoreCase = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "IndexOfOrdinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, value, ignoreCase});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::IndexOf
// Il2CppName: IndexOf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Globalization::CompareInfo::*)(::System::ReadOnlySpan_1<::Il2CppChar>, ::System::ReadOnlySpan_1<::Il2CppChar>, ::System::Globalization::CompareOptions)>(&System::Globalization::CompareInfo::IndexOf)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ReadOnlySpan`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Char")})->byval_arg;
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ReadOnlySpan`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Char")})->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "IndexOf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, value, options});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::IndexOf
// Il2CppName: IndexOf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Globalization::CompareInfo::*)(::StringW, ::StringW, int, int, ::System::Globalization::CompareOptions, int*)>(&System::Globalization::CompareInfo::IndexOf)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* startIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    static auto* matchLengthPtr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "IndexOf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, value, startIndex, count, options, matchLengthPtr});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::IndexOfOrdinal
// Il2CppName: IndexOfOrdinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Globalization::CompareInfo::*)(::StringW, ::StringW, int, int, bool)>(&System::Globalization::CompareInfo::IndexOfOrdinal)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* startIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* ignoreCase = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "IndexOfOrdinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, value, startIndex, count, ignoreCase});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::LastIndexOf
// Il2CppName: LastIndexOf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Globalization::CompareInfo::*)(::StringW, ::StringW, int, int, ::System::Globalization::CompareOptions)>(&System::Globalization::CompareInfo::LastIndexOf)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* startIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "LastIndexOf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, value, startIndex, count, options});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::LastIndexOfOrdinal
// Il2CppName: LastIndexOfOrdinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Globalization::CompareInfo::*)(::StringW, ::StringW, int, int, bool)>(&System::Globalization::CompareInfo::LastIndexOfOrdinal)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* startIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* ignoreCase = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "LastIndexOfOrdinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, value, startIndex, count, ignoreCase});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::GetSortKey
// Il2CppName: GetSortKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Globalization::SortKey* (System::Globalization::CompareInfo::*)(::StringW, ::System::Globalization::CompareOptions)>(&System::Globalization::CompareInfo::GetSortKey)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "GetSortKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, options});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::GetIgnoreCaseHash
// Il2CppName: GetIgnoreCaseHash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW)>(&System::Globalization::CompareInfo::GetIgnoreCaseHash)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "GetIgnoreCaseHash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::GetHashCodeOfString
// Il2CppName: GetHashCodeOfString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Globalization::CompareInfo::*)(::StringW, ::System::Globalization::CompareOptions)>(&System::Globalization::CompareInfo::GetHashCodeOfString)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "GetHashCodeOfString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, options});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Globalization::CompareInfo::*)(::StringW, ::System::Globalization::CompareOptions)>(&System::Globalization::CompareInfo::GetHashCode)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, options});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::get_UseManagedCollation
// Il2CppName: get_UseManagedCollation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&System::Globalization::CompareInfo::get_UseManagedCollation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "get_UseManagedCollation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::GetCollator
// Il2CppName: GetCollator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Globalization::ISimpleCollator* (System::Globalization::CompareInfo::*)()>(&System::Globalization::CompareInfo::GetCollator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "GetCollator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::CreateSortKeyCore
// Il2CppName: CreateSortKeyCore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Globalization::SortKey* (System::Globalization::CompareInfo::*)(::StringW, ::System::Globalization::CompareOptions)>(&System::Globalization::CompareInfo::CreateSortKeyCore)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "CreateSortKeyCore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, options});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::internal_index_switch
// Il2CppName: internal_index_switch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Globalization::CompareInfo::*)(::StringW, int, int, ::StringW, ::System::Globalization::CompareOptions, bool)>(&System::Globalization::CompareInfo::internal_index_switch)> {
  static const MethodInfo* get() {
    static auto* s1 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* sindex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* s2 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* opt = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    static auto* first = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "internal_index_switch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s1, sindex, count, s2, opt, first});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::internal_compare_switch
// Il2CppName: internal_compare_switch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Globalization::CompareInfo::*)(::StringW, int, int, ::StringW, int, int, ::System::Globalization::CompareOptions)>(&System::Globalization::CompareInfo::internal_compare_switch)> {
  static const MethodInfo* get() {
    static auto* str1 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* offset1 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* length1 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* str2 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* offset2 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* length2 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "internal_compare_switch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str1, offset1, length1, str2, offset2, length2, options});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::internal_compare_managed
// Il2CppName: internal_compare_managed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Globalization::CompareInfo::*)(::StringW, int, int, ::StringW, int, int, ::System::Globalization::CompareOptions)>(&System::Globalization::CompareInfo::internal_compare_managed)> {
  static const MethodInfo* get() {
    static auto* str1 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* offset1 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* length1 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* str2 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* offset2 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* length2 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "internal_compare_managed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str1, offset1, length1, str2, offset2, length2, options});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::internal_index_managed
// Il2CppName: internal_index_managed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Globalization::CompareInfo::*)(::StringW, int, int, ::StringW, ::System::Globalization::CompareOptions, bool)>(&System::Globalization::CompareInfo::internal_index_managed)> {
  static const MethodInfo* get() {
    static auto* s1 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* sindex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* s2 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* opt = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    static auto* first = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "internal_index_managed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s1, sindex, count, s2, opt, first});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::internal_compare_icall
// Il2CppName: internal_compare_icall
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Il2CppChar*, int, ::Il2CppChar*, int, ::System::Globalization::CompareOptions)>(&System::Globalization::CompareInfo::internal_compare_icall)> {
  static const MethodInfo* get() {
    static auto* str1 = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Char"))->byval_arg;
    static auto* length1 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* str2 = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Char"))->byval_arg;
    static auto* length2 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "internal_compare_icall", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str1, length1, str2, length2, options});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::internal_compare
// Il2CppName: internal_compare
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW, int, int, ::StringW, int, int, ::System::Globalization::CompareOptions)>(&System::Globalization::CompareInfo::internal_compare)> {
  static const MethodInfo* get() {
    static auto* str1 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* offset1 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* length1 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* str2 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* offset2 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* length2 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "internal_compare", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str1, offset1, length1, str2, offset2, length2, options});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::internal_index_icall
// Il2CppName: internal_index_icall
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Il2CppChar*, int, int, ::Il2CppChar*, int, bool)>(&System::Globalization::CompareInfo::internal_index_icall)> {
  static const MethodInfo* get() {
    static auto* source = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Char"))->byval_arg;
    static auto* sindex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Char"))->byval_arg;
    static auto* value_length = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* first = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "internal_index_icall", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, sindex, count, value, value_length, first});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::internal_index
// Il2CppName: internal_index
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW, int, int, ::StringW, bool)>(&System::Globalization::CompareInfo::internal_index)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* sindex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* first = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "internal_index", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, sindex, count, value, first});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::InitSort
// Il2CppName: InitSort
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Globalization::CompareInfo::*)(::System::Globalization::CultureInfo*)>(&System::Globalization::CompareInfo::InitSort)> {
  static const MethodInfo* get() {
    static auto* culture = &::il2cpp_utils::GetClassFromName("System.Globalization", "CultureInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "InitSort", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{culture});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::CompareStringOrdinalIgnoreCase
// Il2CppName: CompareStringOrdinalIgnoreCase
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Il2CppChar*, int, ::Il2CppChar*, int)>(&System::Globalization::CompareInfo::CompareStringOrdinalIgnoreCase)> {
  static const MethodInfo* get() {
    static auto* pString1 = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Char"))->byval_arg;
    static auto* length1 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* pString2 = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Char"))->byval_arg;
    static auto* length2 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "CompareStringOrdinalIgnoreCase", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pString1, length1, pString2, length2});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::IndexOfOrdinalCore
// Il2CppName: IndexOfOrdinalCore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW, ::StringW, int, int, bool)>(&System::Globalization::CompareInfo::IndexOfOrdinalCore)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* startIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* ignoreCase = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "IndexOfOrdinalCore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, value, startIndex, count, ignoreCase});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::LastIndexOfOrdinalCore
// Il2CppName: LastIndexOfOrdinalCore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW, ::StringW, int, int, bool)>(&System::Globalization::CompareInfo::LastIndexOfOrdinalCore)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* startIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* ignoreCase = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "LastIndexOfOrdinalCore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, value, startIndex, count, ignoreCase});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::LastIndexOfCore
// Il2CppName: LastIndexOfCore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Globalization::CompareInfo::*)(::StringW, ::StringW, int, int, ::System::Globalization::CompareOptions)>(&System::Globalization::CompareInfo::LastIndexOfCore)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* target = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* startIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "LastIndexOfCore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, target, startIndex, count, options});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::IndexOfCore
// Il2CppName: IndexOfCore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Globalization::CompareInfo::*)(::StringW, ::StringW, int, int, ::System::Globalization::CompareOptions, int*)>(&System::Globalization::CompareInfo::IndexOfCore)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* target = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* startIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    static auto* matchLengthPtr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "IndexOfCore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, target, startIndex, count, options, matchLengthPtr});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::IndexOfCore
// Il2CppName: IndexOfCore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Globalization::CompareInfo::*)(::System::ReadOnlySpan_1<::Il2CppChar>, ::System::ReadOnlySpan_1<::Il2CppChar>, ::System::Globalization::CompareOptions, int*)>(&System::Globalization::CompareInfo::IndexOfCore)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ReadOnlySpan`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Char")})->byval_arg;
    static auto* target = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ReadOnlySpan`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Char")})->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    static auto* matchLengthPtr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "IndexOfCore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, target, options, matchLengthPtr});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::IndexOfOrdinalCore
// Il2CppName: IndexOfOrdinalCore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Globalization::CompareInfo::*)(::System::ReadOnlySpan_1<::Il2CppChar>, ::System::ReadOnlySpan_1<::Il2CppChar>, bool)>(&System::Globalization::CompareInfo::IndexOfOrdinalCore)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ReadOnlySpan`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Char")})->byval_arg;
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ReadOnlySpan`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Char")})->byval_arg;
    static auto* ignoreCase = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "IndexOfOrdinalCore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, value, ignoreCase});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::CompareString
// Il2CppName: CompareString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Globalization::CompareInfo::*)(::System::ReadOnlySpan_1<::Il2CppChar>, ::StringW, ::System::Globalization::CompareOptions)>(&System::Globalization::CompareInfo::CompareString)> {
  static const MethodInfo* get() {
    static auto* string1 = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ReadOnlySpan`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Char")})->byval_arg;
    static auto* string2 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "CompareString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{string1, string2, options});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::CompareString
// Il2CppName: CompareString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Globalization::CompareInfo::*)(::System::ReadOnlySpan_1<::Il2CppChar>, ::System::ReadOnlySpan_1<::Il2CppChar>, ::System::Globalization::CompareOptions)>(&System::Globalization::CompareInfo::CompareString)> {
  static const MethodInfo* get() {
    static auto* string1 = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ReadOnlySpan`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Char")})->byval_arg;
    static auto* string2 = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ReadOnlySpan`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Char")})->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "CompareString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{string1, string2, options});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::CreateSortKey
// Il2CppName: CreateSortKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Globalization::SortKey* (System::Globalization::CompareInfo::*)(::StringW, ::System::Globalization::CompareOptions)>(&System::Globalization::CompareInfo::CreateSortKey)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "CreateSortKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, options});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::StartsWith
// Il2CppName: StartsWith
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Globalization::CompareInfo::*)(::StringW, ::StringW, ::System::Globalization::CompareOptions)>(&System::Globalization::CompareInfo::StartsWith)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* prefix = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "StartsWith", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, prefix, options});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::StartsWith
// Il2CppName: StartsWith
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Globalization::CompareInfo::*)(::System::ReadOnlySpan_1<::Il2CppChar>, ::System::ReadOnlySpan_1<::Il2CppChar>, ::System::Globalization::CompareOptions)>(&System::Globalization::CompareInfo::StartsWith)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ReadOnlySpan`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Char")})->byval_arg;
    static auto* prefix = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ReadOnlySpan`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Char")})->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "StartsWith", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, prefix, options});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::EndsWith
// Il2CppName: EndsWith
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Globalization::CompareInfo::*)(::StringW, ::StringW, ::System::Globalization::CompareOptions)>(&System::Globalization::CompareInfo::EndsWith)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* suffix = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "EndsWith", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, suffix, options});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::EndsWith
// Il2CppName: EndsWith
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Globalization::CompareInfo::*)(::System::ReadOnlySpan_1<::Il2CppChar>, ::System::ReadOnlySpan_1<::Il2CppChar>, ::System::Globalization::CompareOptions)>(&System::Globalization::CompareInfo::EndsWith)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ReadOnlySpan`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Char")})->byval_arg;
    static auto* suffix = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ReadOnlySpan`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Char")})->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "EndsWith", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, suffix, options});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::GetHashCodeOfStringCore
// Il2CppName: GetHashCodeOfStringCore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Globalization::CompareInfo::*)(::StringW, ::System::Globalization::CompareOptions)>(&System::Globalization::CompareInfo::GetHashCodeOfStringCore)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "GetHashCodeOfStringCore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, options});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::Globalization::CompareInfo::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Globalization::CompareInfo::*)(::Il2CppObject*)>(&System::Globalization::CompareInfo::Equals)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Globalization::CompareInfo::*)()>(&System::Globalization::CompareInfo::GetHashCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Globalization::CompareInfo::*)()>(&System::Globalization::CompareInfo::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
