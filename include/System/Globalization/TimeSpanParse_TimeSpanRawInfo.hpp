// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Globalization.TimeSpanParse
#include "System/Globalization/TimeSpanParse.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.Globalization.TimeSpanParse/TTT
#include "System/Globalization/TimeSpanParse_TTT.hpp"
// Including type: System.Globalization.TimeSpanFormat/FormatLiterals
#include "System/Globalization/TimeSpanFormat.hpp"
// Including type: System.Globalization.TimeSpanParse/TimeSpanToken
#include "System/Globalization/TimeSpanParse_TimeSpanToken.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Globalization
namespace System::Globalization {
  // Forward declaring type: DateTimeFormatInfo
  class DateTimeFormatInfo;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::System::Globalization::TimeSpanParse::TimeSpanRawInfo, "System.Globalization", "TimeSpanParse/TimeSpanRawInfo");
// Type namespace: System.Globalization
namespace System::Globalization {
  // WARNING Size may be invalid!
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: System.Globalization.TimeSpanParse/TimeSpanRawInfo
  // [TokenAttribute] Offset: FFFFFFFF
  // [IsByRefLikeAttribute] Offset: FFFFFFFF
  // [ObsoleteAttribute] Offset: FFFFFFFF
  struct TimeSpanParse::TimeSpanRawInfo/*, public ::System::ValueType*/ {
    public:
    public:
    // System.Globalization.TimeSpanParse/TTT _lastSeenTTT
    // Size: 0x1
    // Offset: 0x0
    ::System::Globalization::TimeSpanParse::TTT lastSeenTTT;
    // Field size check
    static_assert(sizeof(::System::Globalization::TimeSpanParse::TTT) == 0x1);
    // System.Int32 _tokenCount
    // Size: 0x4
    // Offset: 0x4
    int tokenCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // System.Int32 _sepCount
    // Size: 0x4
    // Offset: 0x8
    int sepCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // System.Int32 _numCount
    // Size: 0x4
    // Offset: 0xC
    int numCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Globalization.TimeSpanFormat/FormatLiterals _posLoc
    // Size: 0x28
    // Offset: 0x10
    ::System::Globalization::TimeSpanFormat::FormatLiterals posLoc;
    // Field size check
    static_assert(sizeof(::System::Globalization::TimeSpanFormat::FormatLiterals) == 0x28);
    // private System.Globalization.TimeSpanFormat/FormatLiterals _negLoc
    // Size: 0x28
    // Offset: 0x38
    ::System::Globalization::TimeSpanFormat::FormatLiterals negLoc;
    // Field size check
    static_assert(sizeof(::System::Globalization::TimeSpanFormat::FormatLiterals) == 0x28);
    // private System.Boolean _posLocInit
    // Size: 0x1
    // Offset: 0x60
    bool posLocInit;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _negLocInit
    // Size: 0x1
    // Offset: 0x61
    bool negLocInit;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.String _fullPosPattern
    // Size: 0x8
    // Offset: 0x68
    ::StringW fullPosPattern;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String _fullNegPattern
    // Size: 0x8
    // Offset: 0x70
    ::StringW fullNegPattern;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // System.Globalization.TimeSpanParse/TimeSpanToken _numbers0
    // Size: 0xFFFFFFFF
    // Offset: 0x78
    ::System::Globalization::TimeSpanParse::TimeSpanToken numbers0;
    // System.Globalization.TimeSpanParse/TimeSpanToken _numbers1
    // Size: 0xFFFFFFFF
    // Offset: 0x98
    ::System::Globalization::TimeSpanParse::TimeSpanToken numbers1;
    // System.Globalization.TimeSpanParse/TimeSpanToken _numbers2
    // Size: 0xFFFFFFFF
    // Offset: 0xB8
    ::System::Globalization::TimeSpanParse::TimeSpanToken numbers2;
    // System.Globalization.TimeSpanParse/TimeSpanToken _numbers3
    // Size: 0xFFFFFFFF
    // Offset: 0xD8
    ::System::Globalization::TimeSpanParse::TimeSpanToken numbers3;
    // System.Globalization.TimeSpanParse/TimeSpanToken _numbers4
    // Size: 0xFFFFFFFF
    // Offset: 0xF8
    ::System::Globalization::TimeSpanParse::TimeSpanToken numbers4;
    // System.ReadOnlySpan`1<System.Char> _literals0
    // Size: 0xFFFFFFFF
    // Offset: 0x118
    ::System::ReadOnlySpan_1<::Il2CppChar> literals0;
    // System.ReadOnlySpan`1<System.Char> _literals1
    // Size: 0xFFFFFFFF
    // Offset: 0x128
    ::System::ReadOnlySpan_1<::Il2CppChar> literals1;
    // System.ReadOnlySpan`1<System.Char> _literals2
    // Size: 0xFFFFFFFF
    // Offset: 0x138
    ::System::ReadOnlySpan_1<::Il2CppChar> literals2;
    // System.ReadOnlySpan`1<System.Char> _literals3
    // Size: 0xFFFFFFFF
    // Offset: 0x148
    ::System::ReadOnlySpan_1<::Il2CppChar> literals3;
    // System.ReadOnlySpan`1<System.Char> _literals4
    // Size: 0xFFFFFFFF
    // Offset: 0x158
    ::System::ReadOnlySpan_1<::Il2CppChar> literals4;
    // System.ReadOnlySpan`1<System.Char> _literals5
    // Size: 0xFFFFFFFF
    // Offset: 0x168
    ::System::ReadOnlySpan_1<::Il2CppChar> literals5;
    public:
    // Creating value type constructor for type: TimeSpanRawInfo
    constexpr TimeSpanRawInfo(::System::Globalization::TimeSpanParse::TTT lastSeenTTT_ = {}, int tokenCount_ = {}, int sepCount_ = {}, int numCount_ = {}, ::System::Globalization::TimeSpanFormat::FormatLiterals posLoc_ = {}, ::System::Globalization::TimeSpanFormat::FormatLiterals negLoc_ = {}, bool posLocInit_ = {}, bool negLocInit_ = {}, ::StringW fullPosPattern_ = {}, ::StringW fullNegPattern_ = {}, ::System::Globalization::TimeSpanParse::TimeSpanToken numbers0_ = {}, ::System::Globalization::TimeSpanParse::TimeSpanToken numbers1_ = {}, ::System::Globalization::TimeSpanParse::TimeSpanToken numbers2_ = {}, ::System::Globalization::TimeSpanParse::TimeSpanToken numbers3_ = {}, ::System::Globalization::TimeSpanParse::TimeSpanToken numbers4_ = {}, ::System::ReadOnlySpan_1<::Il2CppChar> literals0_ = {}, ::System::ReadOnlySpan_1<::Il2CppChar> literals1_ = {}, ::System::ReadOnlySpan_1<::Il2CppChar> literals2_ = {}, ::System::ReadOnlySpan_1<::Il2CppChar> literals3_ = {}, ::System::ReadOnlySpan_1<::Il2CppChar> literals4_ = {}, ::System::ReadOnlySpan_1<::Il2CppChar> literals5_ = {}) noexcept : lastSeenTTT{lastSeenTTT_}, tokenCount{tokenCount_}, sepCount{sepCount_}, numCount{numCount_}, posLoc{posLoc_}, negLoc{negLoc_}, posLocInit{posLocInit_}, negLocInit{negLocInit_}, fullPosPattern{fullPosPattern_}, fullNegPattern{fullNegPattern_}, numbers0{numbers0_}, numbers1{numbers1_}, numbers2{numbers2_}, numbers3{numbers3_}, numbers4{numbers4_}, literals0{literals0_}, literals1{literals1_}, literals2{literals2_}, literals3{literals3_}, literals4{literals4_}, literals5{literals5_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: System.Globalization.TimeSpanParse/TTT _lastSeenTTT
    [[deprecated("Use field access instead!")]] ::System::Globalization::TimeSpanParse::TTT& dyn__lastSeenTTT();
    // Get instance field reference: System.Int32 _tokenCount
    [[deprecated("Use field access instead!")]] int& dyn__tokenCount();
    // Get instance field reference: System.Int32 _sepCount
    [[deprecated("Use field access instead!")]] int& dyn__sepCount();
    // Get instance field reference: System.Int32 _numCount
    [[deprecated("Use field access instead!")]] int& dyn__numCount();
    // Get instance field reference: private System.Globalization.TimeSpanFormat/FormatLiterals _posLoc
    [[deprecated("Use field access instead!")]] ::System::Globalization::TimeSpanFormat::FormatLiterals& dyn__posLoc();
    // Get instance field reference: private System.Globalization.TimeSpanFormat/FormatLiterals _negLoc
    [[deprecated("Use field access instead!")]] ::System::Globalization::TimeSpanFormat::FormatLiterals& dyn__negLoc();
    // Get instance field reference: private System.Boolean _posLocInit
    [[deprecated("Use field access instead!")]] bool& dyn__posLocInit();
    // Get instance field reference: private System.Boolean _negLocInit
    [[deprecated("Use field access instead!")]] bool& dyn__negLocInit();
    // Get instance field reference: private System.String _fullPosPattern
    [[deprecated("Use field access instead!")]] ::StringW& dyn__fullPosPattern();
    // Get instance field reference: private System.String _fullNegPattern
    [[deprecated("Use field access instead!")]] ::StringW& dyn__fullNegPattern();
    // Get instance field reference: System.Globalization.TimeSpanParse/TimeSpanToken _numbers0
    [[deprecated("Use field access instead!")]] ::System::Globalization::TimeSpanParse::TimeSpanToken& dyn__numbers0();
    // Get instance field reference: System.Globalization.TimeSpanParse/TimeSpanToken _numbers1
    [[deprecated("Use field access instead!")]] ::System::Globalization::TimeSpanParse::TimeSpanToken& dyn__numbers1();
    // Get instance field reference: System.Globalization.TimeSpanParse/TimeSpanToken _numbers2
    [[deprecated("Use field access instead!")]] ::System::Globalization::TimeSpanParse::TimeSpanToken& dyn__numbers2();
    // Get instance field reference: System.Globalization.TimeSpanParse/TimeSpanToken _numbers3
    [[deprecated("Use field access instead!")]] ::System::Globalization::TimeSpanParse::TimeSpanToken& dyn__numbers3();
    // Get instance field reference: System.Globalization.TimeSpanParse/TimeSpanToken _numbers4
    [[deprecated("Use field access instead!")]] ::System::Globalization::TimeSpanParse::TimeSpanToken& dyn__numbers4();
    // Get instance field reference: System.ReadOnlySpan`1<System.Char> _literals0
    [[deprecated("Use field access instead!")]] ::System::ReadOnlySpan_1<::Il2CppChar>& dyn__literals0();
    // Get instance field reference: System.ReadOnlySpan`1<System.Char> _literals1
    [[deprecated("Use field access instead!")]] ::System::ReadOnlySpan_1<::Il2CppChar>& dyn__literals1();
    // Get instance field reference: System.ReadOnlySpan`1<System.Char> _literals2
    [[deprecated("Use field access instead!")]] ::System::ReadOnlySpan_1<::Il2CppChar>& dyn__literals2();
    // Get instance field reference: System.ReadOnlySpan`1<System.Char> _literals3
    [[deprecated("Use field access instead!")]] ::System::ReadOnlySpan_1<::Il2CppChar>& dyn__literals3();
    // Get instance field reference: System.ReadOnlySpan`1<System.Char> _literals4
    [[deprecated("Use field access instead!")]] ::System::ReadOnlySpan_1<::Il2CppChar>& dyn__literals4();
    // Get instance field reference: System.ReadOnlySpan`1<System.Char> _literals5
    [[deprecated("Use field access instead!")]] ::System::ReadOnlySpan_1<::Il2CppChar>& dyn__literals5();
    // System.Globalization.TimeSpanFormat/FormatLiterals get_PositiveInvariant()
    // Offset: 0x45F7DE4
    ::System::Globalization::TimeSpanFormat::FormatLiterals get_PositiveInvariant();
    // System.Globalization.TimeSpanFormat/FormatLiterals get_NegativeInvariant()
    // Offset: 0x45F7E4C
    ::System::Globalization::TimeSpanFormat::FormatLiterals get_NegativeInvariant();
    // System.Globalization.TimeSpanFormat/FormatLiterals get_PositiveLocalized()
    // Offset: 0x45F5AA0
    ::System::Globalization::TimeSpanFormat::FormatLiterals get_PositiveLocalized();
    // System.Globalization.TimeSpanFormat/FormatLiterals get_NegativeLocalized()
    // Offset: 0x45F5B50
    ::System::Globalization::TimeSpanFormat::FormatLiterals get_NegativeLocalized();
    // System.Boolean FullAppCompatMatch(System.Globalization.TimeSpanFormat/FormatLiterals pattern)
    // Offset: 0x45F6368
    bool FullAppCompatMatch(::System::Globalization::TimeSpanFormat::FormatLiterals pattern);
    // System.Boolean PartialAppCompatMatch(System.Globalization.TimeSpanFormat/FormatLiterals pattern)
    // Offset: 0x45F6D10
    bool PartialAppCompatMatch(::System::Globalization::TimeSpanFormat::FormatLiterals pattern);
    // System.Boolean FullMatch(System.Globalization.TimeSpanFormat/FormatLiterals pattern)
    // Offset: 0x45F5654
    bool FullMatch(::System::Globalization::TimeSpanFormat::FormatLiterals pattern);
    // System.Boolean FullDMatch(System.Globalization.TimeSpanFormat/FormatLiterals pattern)
    // Offset: 0x45F726C
    bool FullDMatch(::System::Globalization::TimeSpanFormat::FormatLiterals pattern);
    // System.Boolean FullHMMatch(System.Globalization.TimeSpanFormat/FormatLiterals pattern)
    // Offset: 0x45F700C
    bool FullHMMatch(::System::Globalization::TimeSpanFormat::FormatLiterals pattern);
    // System.Boolean FullDHMMatch(System.Globalization.TimeSpanFormat/FormatLiterals pattern)
    // Offset: 0x45F6A0C
    bool FullDHMMatch(::System::Globalization::TimeSpanFormat::FormatLiterals pattern);
    // System.Boolean FullHMSMatch(System.Globalization.TimeSpanFormat/FormatLiterals pattern)
    // Offset: 0x45F6708
    bool FullHMSMatch(::System::Globalization::TimeSpanFormat::FormatLiterals pattern);
    // System.Boolean FullDHMSMatch(System.Globalization.TimeSpanFormat/FormatLiterals pattern)
    // Offset: 0x45F5FC0
    bool FullDHMSMatch(::System::Globalization::TimeSpanFormat::FormatLiterals pattern);
    // System.Boolean FullHMSFMatch(System.Globalization.TimeSpanFormat/FormatLiterals pattern)
    // Offset: 0x45F5C18
    bool FullHMSFMatch(::System::Globalization::TimeSpanFormat::FormatLiterals pattern);
    // System.Void Init(System.Globalization.DateTimeFormatInfo dtfi)
    // Offset: 0x45F2E40
    void Init(::System::Globalization::DateTimeFormatInfo* dtfi);
    // System.Boolean ProcessToken(ref System.Globalization.TimeSpanParse/TimeSpanToken tok, ref System.Globalization.TimeSpanParse/TimeSpanResult result)
    // Offset: 0x45F30E8
    bool ProcessToken(ByRef<::System::Globalization::TimeSpanParse::TimeSpanToken> tok, ByRef<::System::Globalization::TimeSpanParse::TimeSpanResult> result);
    // private System.Boolean AddSep(System.ReadOnlySpan`1<System.Char> sep, ref System.Globalization.TimeSpanParse/TimeSpanResult result)
    // Offset: 0x45F7EB8
    bool AddSep(::System::ReadOnlySpan_1<::Il2CppChar> sep, ByRef<::System::Globalization::TimeSpanParse::TimeSpanResult> result);
    // private System.Boolean AddNum(System.Globalization.TimeSpanParse/TimeSpanToken num, ref System.Globalization.TimeSpanParse/TimeSpanResult result)
    // Offset: 0x45F7FCC
    bool AddNum(::System::Globalization::TimeSpanParse::TimeSpanToken num, ByRef<::System::Globalization::TimeSpanParse::TimeSpanResult> result);
  }; // System.Globalization.TimeSpanParse/TimeSpanRawInfo
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Globalization::TimeSpanParse::TimeSpanRawInfo::get_PositiveInvariant
// Il2CppName: get_PositiveInvariant
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Globalization::TimeSpanFormat::FormatLiterals (System::Globalization::TimeSpanParse::TimeSpanRawInfo::*)()>(&System::Globalization::TimeSpanParse::TimeSpanRawInfo::get_PositiveInvariant)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::TimeSpanParse::TimeSpanRawInfo), "get_PositiveInvariant", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Globalization::TimeSpanParse::TimeSpanRawInfo::get_NegativeInvariant
// Il2CppName: get_NegativeInvariant
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Globalization::TimeSpanFormat::FormatLiterals (System::Globalization::TimeSpanParse::TimeSpanRawInfo::*)()>(&System::Globalization::TimeSpanParse::TimeSpanRawInfo::get_NegativeInvariant)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::TimeSpanParse::TimeSpanRawInfo), "get_NegativeInvariant", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Globalization::TimeSpanParse::TimeSpanRawInfo::get_PositiveLocalized
// Il2CppName: get_PositiveLocalized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Globalization::TimeSpanFormat::FormatLiterals (System::Globalization::TimeSpanParse::TimeSpanRawInfo::*)()>(&System::Globalization::TimeSpanParse::TimeSpanRawInfo::get_PositiveLocalized)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::TimeSpanParse::TimeSpanRawInfo), "get_PositiveLocalized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Globalization::TimeSpanParse::TimeSpanRawInfo::get_NegativeLocalized
// Il2CppName: get_NegativeLocalized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Globalization::TimeSpanFormat::FormatLiterals (System::Globalization::TimeSpanParse::TimeSpanRawInfo::*)()>(&System::Globalization::TimeSpanParse::TimeSpanRawInfo::get_NegativeLocalized)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::TimeSpanParse::TimeSpanRawInfo), "get_NegativeLocalized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Globalization::TimeSpanParse::TimeSpanRawInfo::FullAppCompatMatch
// Il2CppName: FullAppCompatMatch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Globalization::TimeSpanParse::TimeSpanRawInfo::*)(::System::Globalization::TimeSpanFormat::FormatLiterals)>(&System::Globalization::TimeSpanParse::TimeSpanRawInfo::FullAppCompatMatch)> {
  static const MethodInfo* get() {
    static auto* pattern = &::il2cpp_utils::GetClassFromName("System.Globalization", "TimeSpanFormat/FormatLiterals")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::TimeSpanParse::TimeSpanRawInfo), "FullAppCompatMatch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pattern});
  }
};
// Writing MetadataGetter for method: System::Globalization::TimeSpanParse::TimeSpanRawInfo::PartialAppCompatMatch
// Il2CppName: PartialAppCompatMatch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Globalization::TimeSpanParse::TimeSpanRawInfo::*)(::System::Globalization::TimeSpanFormat::FormatLiterals)>(&System::Globalization::TimeSpanParse::TimeSpanRawInfo::PartialAppCompatMatch)> {
  static const MethodInfo* get() {
    static auto* pattern = &::il2cpp_utils::GetClassFromName("System.Globalization", "TimeSpanFormat/FormatLiterals")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::TimeSpanParse::TimeSpanRawInfo), "PartialAppCompatMatch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pattern});
  }
};
// Writing MetadataGetter for method: System::Globalization::TimeSpanParse::TimeSpanRawInfo::FullMatch
// Il2CppName: FullMatch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Globalization::TimeSpanParse::TimeSpanRawInfo::*)(::System::Globalization::TimeSpanFormat::FormatLiterals)>(&System::Globalization::TimeSpanParse::TimeSpanRawInfo::FullMatch)> {
  static const MethodInfo* get() {
    static auto* pattern = &::il2cpp_utils::GetClassFromName("System.Globalization", "TimeSpanFormat/FormatLiterals")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::TimeSpanParse::TimeSpanRawInfo), "FullMatch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pattern});
  }
};
// Writing MetadataGetter for method: System::Globalization::TimeSpanParse::TimeSpanRawInfo::FullDMatch
// Il2CppName: FullDMatch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Globalization::TimeSpanParse::TimeSpanRawInfo::*)(::System::Globalization::TimeSpanFormat::FormatLiterals)>(&System::Globalization::TimeSpanParse::TimeSpanRawInfo::FullDMatch)> {
  static const MethodInfo* get() {
    static auto* pattern = &::il2cpp_utils::GetClassFromName("System.Globalization", "TimeSpanFormat/FormatLiterals")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::TimeSpanParse::TimeSpanRawInfo), "FullDMatch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pattern});
  }
};
// Writing MetadataGetter for method: System::Globalization::TimeSpanParse::TimeSpanRawInfo::FullHMMatch
// Il2CppName: FullHMMatch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Globalization::TimeSpanParse::TimeSpanRawInfo::*)(::System::Globalization::TimeSpanFormat::FormatLiterals)>(&System::Globalization::TimeSpanParse::TimeSpanRawInfo::FullHMMatch)> {
  static const MethodInfo* get() {
    static auto* pattern = &::il2cpp_utils::GetClassFromName("System.Globalization", "TimeSpanFormat/FormatLiterals")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::TimeSpanParse::TimeSpanRawInfo), "FullHMMatch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pattern});
  }
};
// Writing MetadataGetter for method: System::Globalization::TimeSpanParse::TimeSpanRawInfo::FullDHMMatch
// Il2CppName: FullDHMMatch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Globalization::TimeSpanParse::TimeSpanRawInfo::*)(::System::Globalization::TimeSpanFormat::FormatLiterals)>(&System::Globalization::TimeSpanParse::TimeSpanRawInfo::FullDHMMatch)> {
  static const MethodInfo* get() {
    static auto* pattern = &::il2cpp_utils::GetClassFromName("System.Globalization", "TimeSpanFormat/FormatLiterals")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::TimeSpanParse::TimeSpanRawInfo), "FullDHMMatch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pattern});
  }
};
// Writing MetadataGetter for method: System::Globalization::TimeSpanParse::TimeSpanRawInfo::FullHMSMatch
// Il2CppName: FullHMSMatch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Globalization::TimeSpanParse::TimeSpanRawInfo::*)(::System::Globalization::TimeSpanFormat::FormatLiterals)>(&System::Globalization::TimeSpanParse::TimeSpanRawInfo::FullHMSMatch)> {
  static const MethodInfo* get() {
    static auto* pattern = &::il2cpp_utils::GetClassFromName("System.Globalization", "TimeSpanFormat/FormatLiterals")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::TimeSpanParse::TimeSpanRawInfo), "FullHMSMatch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pattern});
  }
};
// Writing MetadataGetter for method: System::Globalization::TimeSpanParse::TimeSpanRawInfo::FullDHMSMatch
// Il2CppName: FullDHMSMatch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Globalization::TimeSpanParse::TimeSpanRawInfo::*)(::System::Globalization::TimeSpanFormat::FormatLiterals)>(&System::Globalization::TimeSpanParse::TimeSpanRawInfo::FullDHMSMatch)> {
  static const MethodInfo* get() {
    static auto* pattern = &::il2cpp_utils::GetClassFromName("System.Globalization", "TimeSpanFormat/FormatLiterals")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::TimeSpanParse::TimeSpanRawInfo), "FullDHMSMatch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pattern});
  }
};
// Writing MetadataGetter for method: System::Globalization::TimeSpanParse::TimeSpanRawInfo::FullHMSFMatch
// Il2CppName: FullHMSFMatch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Globalization::TimeSpanParse::TimeSpanRawInfo::*)(::System::Globalization::TimeSpanFormat::FormatLiterals)>(&System::Globalization::TimeSpanParse::TimeSpanRawInfo::FullHMSFMatch)> {
  static const MethodInfo* get() {
    static auto* pattern = &::il2cpp_utils::GetClassFromName("System.Globalization", "TimeSpanFormat/FormatLiterals")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::TimeSpanParse::TimeSpanRawInfo), "FullHMSFMatch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pattern});
  }
};
// Writing MetadataGetter for method: System::Globalization::TimeSpanParse::TimeSpanRawInfo::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Globalization::TimeSpanParse::TimeSpanRawInfo::*)(::System::Globalization::DateTimeFormatInfo*)>(&System::Globalization::TimeSpanParse::TimeSpanRawInfo::Init)> {
  static const MethodInfo* get() {
    static auto* dtfi = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeFormatInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::TimeSpanParse::TimeSpanRawInfo), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dtfi});
  }
};
// Writing MetadataGetter for method: System::Globalization::TimeSpanParse::TimeSpanRawInfo::ProcessToken
// Il2CppName: ProcessToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Globalization::TimeSpanParse::TimeSpanRawInfo::*)(ByRef<::System::Globalization::TimeSpanParse::TimeSpanToken>, ByRef<::System::Globalization::TimeSpanParse::TimeSpanResult>)>(&System::Globalization::TimeSpanParse::TimeSpanRawInfo::ProcessToken)> {
  static const MethodInfo* get() {
    static auto* tok = &::il2cpp_utils::GetClassFromName("System.Globalization", "TimeSpanParse/TimeSpanToken")->this_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System.Globalization", "TimeSpanParse/TimeSpanResult")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::TimeSpanParse::TimeSpanRawInfo), "ProcessToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tok, result});
  }
};
// Writing MetadataGetter for method: System::Globalization::TimeSpanParse::TimeSpanRawInfo::AddSep
// Il2CppName: AddSep
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Globalization::TimeSpanParse::TimeSpanRawInfo::*)(::System::ReadOnlySpan_1<::Il2CppChar>, ByRef<::System::Globalization::TimeSpanParse::TimeSpanResult>)>(&System::Globalization::TimeSpanParse::TimeSpanRawInfo::AddSep)> {
  static const MethodInfo* get() {
    static auto* sep = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ReadOnlySpan`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Char")})->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System.Globalization", "TimeSpanParse/TimeSpanResult")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::TimeSpanParse::TimeSpanRawInfo), "AddSep", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sep, result});
  }
};
// Writing MetadataGetter for method: System::Globalization::TimeSpanParse::TimeSpanRawInfo::AddNum
// Il2CppName: AddNum
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Globalization::TimeSpanParse::TimeSpanRawInfo::*)(::System::Globalization::TimeSpanParse::TimeSpanToken, ByRef<::System::Globalization::TimeSpanParse::TimeSpanResult>)>(&System::Globalization::TimeSpanParse::TimeSpanRawInfo::AddNum)> {
  static const MethodInfo* get() {
    static auto* num = &::il2cpp_utils::GetClassFromName("System.Globalization", "TimeSpanParse/TimeSpanToken")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System.Globalization", "TimeSpanParse/TimeSpanResult")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::TimeSpanParse::TimeSpanRawInfo), "AddNum", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{num, result});
  }
};
