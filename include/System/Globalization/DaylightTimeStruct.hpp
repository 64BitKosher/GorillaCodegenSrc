// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Completed includes
// Type namespace: System.Globalization
namespace System::Globalization {
  // Forward declaring type: DaylightTimeStruct
  struct DaylightTimeStruct;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::System::Globalization::DaylightTimeStruct, "System.Globalization", "DaylightTimeStruct");
// Type namespace: System.Globalization
namespace System::Globalization {
  // Size: 0x18
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: System.Globalization.DaylightTimeStruct
  // [TokenAttribute] Offset: FFFFFFFF
  // [IsReadOnlyAttribute] Offset: FFFFFFFF
  struct DaylightTimeStruct/*, public ::System::ValueType*/ {
    public:
    public:
    // public readonly System.DateTime Start
    // Size: 0x8
    // Offset: 0x0
    ::System::DateTime Start;
    // Field size check
    static_assert(sizeof(::System::DateTime) == 0x8);
    // public readonly System.DateTime End
    // Size: 0x8
    // Offset: 0x8
    ::System::DateTime End;
    // Field size check
    static_assert(sizeof(::System::DateTime) == 0x8);
    // public readonly System.TimeSpan Delta
    // Size: 0x8
    // Offset: 0x10
    ::System::TimeSpan Delta;
    // Field size check
    static_assert(sizeof(::System::TimeSpan) == 0x8);
    public:
    // Creating value type constructor for type: DaylightTimeStruct
    constexpr DaylightTimeStruct(::System::DateTime Start_ = {}, ::System::DateTime End_ = {}, ::System::TimeSpan Delta_ = {}) noexcept : Start{Start_}, End{End_}, Delta{Delta_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public readonly System.DateTime Start
    [[deprecated("Use field access instead!")]] ::System::DateTime& dyn_Start();
    // Get instance field reference: public readonly System.DateTime End
    [[deprecated("Use field access instead!")]] ::System::DateTime& dyn_End();
    // Get instance field reference: public readonly System.TimeSpan Delta
    [[deprecated("Use field access instead!")]] ::System::TimeSpan& dyn_Delta();
    // public System.Void .ctor(System.DateTime start, System.DateTime end, System.TimeSpan delta)
    // Offset: 0x45F0A2C
    // ABORTED: conflicts with another method.  DaylightTimeStruct(::System::DateTime start, ::System::DateTime end, ::System::TimeSpan delta);
  }; // System.Globalization.DaylightTimeStruct
  #pragma pack(pop)
  static check_size<sizeof(DaylightTimeStruct), 16 + sizeof(::System::TimeSpan)> __System_Globalization_DaylightTimeStructSizeCheck;
  static_assert(sizeof(DaylightTimeStruct) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Globalization::DaylightTimeStruct::DaylightTimeStruct
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
