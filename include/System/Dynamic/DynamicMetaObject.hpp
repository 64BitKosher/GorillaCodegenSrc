// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Linq::Expressions
namespace System::Linq::Expressions {
  // Forward declaring type: Expression
  class Expression;
}
// Forward declaring namespace: System::Dynamic
namespace System::Dynamic {
  // Forward declaring type: BindingRestrictions
  class BindingRestrictions;
  // Forward declaring type: ConvertBinder
  class ConvertBinder;
  // Forward declaring type: GetMemberBinder
  class GetMemberBinder;
  // Forward declaring type: SetMemberBinder
  class SetMemberBinder;
  // Forward declaring type: DeleteMemberBinder
  class DeleteMemberBinder;
  // Forward declaring type: GetIndexBinder
  class GetIndexBinder;
  // Forward declaring type: SetIndexBinder
  class SetIndexBinder;
  // Forward declaring type: DeleteIndexBinder
  class DeleteIndexBinder;
  // Forward declaring type: InvokeMemberBinder
  class InvokeMemberBinder;
  // Forward declaring type: InvokeBinder
  class InvokeBinder;
  // Forward declaring type: CreateInstanceBinder
  class CreateInstanceBinder;
  // Forward declaring type: UnaryOperationBinder
  class UnaryOperationBinder;
  // Forward declaring type: BinaryOperationBinder
  class BinaryOperationBinder;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IEnumerable`1<T>
  template<typename T>
  class IEnumerable_1;
}
// Completed forward declares
// Type namespace: System.Dynamic
namespace System::Dynamic {
  // Forward declaring type: DynamicMetaObject
  class DynamicMetaObject;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Dynamic::DynamicMetaObject);
DEFINE_IL2CPP_ARG_TYPE(::System::Dynamic::DynamicMetaObject*, "System.Dynamic", "DynamicMetaObject");
// Type namespace: System.Dynamic
namespace System::Dynamic {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: System.Dynamic.DynamicMetaObject
  // [TokenAttribute] Offset: FFFFFFFF
  class DynamicMetaObject : public ::Il2CppObject {
    public:
    public:
    // private readonly System.Object _value
    // Size: 0x8
    // Offset: 0x10
    ::Il2CppObject* value;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    // private readonly System.Linq.Expressions.Expression <Expression>k__BackingField
    // Size: 0x8
    // Offset: 0x18
    ::System::Linq::Expressions::Expression* Expression;
    // Field size check
    static_assert(sizeof(::System::Linq::Expressions::Expression*) == 0x8);
    // private readonly System.Dynamic.BindingRestrictions <Restrictions>k__BackingField
    // Size: 0x8
    // Offset: 0x20
    ::System::Dynamic::BindingRestrictions* Restrictions;
    // Field size check
    static_assert(sizeof(::System::Dynamic::BindingRestrictions*) == 0x8);
    public:
    // Get static field: static public readonly System.Dynamic.DynamicMetaObject[] EmptyMetaObjects
    static ::ArrayW<::System::Dynamic::DynamicMetaObject*> _get_EmptyMetaObjects();
    // Set static field: static public readonly System.Dynamic.DynamicMetaObject[] EmptyMetaObjects
    static void _set_EmptyMetaObjects(::ArrayW<::System::Dynamic::DynamicMetaObject*> value);
    // Get static field: static private readonly System.Object s_noValueSentinel
    static ::Il2CppObject* _get_s_noValueSentinel();
    // Set static field: static private readonly System.Object s_noValueSentinel
    static void _set_s_noValueSentinel(::Il2CppObject* value);
    // Get instance field reference: private readonly System.Object _value
    [[deprecated("Use field access instead!")]] ::Il2CppObject*& dyn__value();
    // Get instance field reference: private readonly System.Linq.Expressions.Expression <Expression>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Linq::Expressions::Expression*& dyn_$Expression$k__BackingField();
    // Get instance field reference: private readonly System.Dynamic.BindingRestrictions <Restrictions>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Dynamic::BindingRestrictions*& dyn_$Restrictions$k__BackingField();
    // public System.Void .ctor(System.Linq.Expressions.Expression expression, System.Dynamic.BindingRestrictions restrictions)
    // Offset: 0x4BE2364
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DynamicMetaObject* New_ctor(::System::Linq::Expressions::Expression* expression, ::System::Dynamic::BindingRestrictions* restrictions) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Dynamic::DynamicMetaObject::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DynamicMetaObject*, creationType>(expression, restrictions)));
    }
    // public System.Void .ctor(System.Linq.Expressions.Expression expression, System.Dynamic.BindingRestrictions restrictions, System.Object value)
    // Offset: 0x4BE2454
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DynamicMetaObject* New_ctor(::System::Linq::Expressions::Expression* expression, ::System::Dynamic::BindingRestrictions* restrictions, ::Il2CppObject* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Dynamic::DynamicMetaObject::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DynamicMetaObject*, creationType>(expression, restrictions, value)));
    }
    // public System.Linq.Expressions.Expression get_Expression()
    // Offset: 0x4BE2480
    ::System::Linq::Expressions::Expression* get_Expression();
    // public System.Dynamic.BindingRestrictions get_Restrictions()
    // Offset: 0x4BE2488
    ::System::Dynamic::BindingRestrictions* get_Restrictions();
    // public System.Object get_Value()
    // Offset: 0x4BE11A4
    ::Il2CppObject* get_Value();
    // public System.Boolean get_HasValue()
    // Offset: 0x4BE11C8
    bool get_HasValue();
    // public System.Type get_RuntimeType()
    // Offset: 0x4BE2490
    ::System::Type* get_RuntimeType();
    // public System.Type get_LimitType()
    // Offset: 0x4BE12BC
    ::System::Type* get_LimitType();
    // public System.Dynamic.DynamicMetaObject BindConvert(System.Dynamic.ConvertBinder binder)
    // Offset: 0x4BE2508
    ::System::Dynamic::DynamicMetaObject* BindConvert(::System::Dynamic::ConvertBinder* binder);
    // public System.Dynamic.DynamicMetaObject BindGetMember(System.Dynamic.GetMemberBinder binder)
    // Offset: 0x4BE2580
    ::System::Dynamic::DynamicMetaObject* BindGetMember(::System::Dynamic::GetMemberBinder* binder);
    // public System.Dynamic.DynamicMetaObject BindSetMember(System.Dynamic.SetMemberBinder binder, System.Dynamic.DynamicMetaObject value)
    // Offset: 0x4BE25F0
    ::System::Dynamic::DynamicMetaObject* BindSetMember(::System::Dynamic::SetMemberBinder* binder, ::System::Dynamic::DynamicMetaObject* value);
    // public System.Dynamic.DynamicMetaObject BindDeleteMember(System.Dynamic.DeleteMemberBinder binder)
    // Offset: 0x4BE2668
    ::System::Dynamic::DynamicMetaObject* BindDeleteMember(::System::Dynamic::DeleteMemberBinder* binder);
    // public System.Dynamic.DynamicMetaObject BindGetIndex(System.Dynamic.GetIndexBinder binder, System.Dynamic.DynamicMetaObject[] indexes)
    // Offset: 0x4BE26E0
    ::System::Dynamic::DynamicMetaObject* BindGetIndex(::System::Dynamic::GetIndexBinder* binder, ::ArrayW<::System::Dynamic::DynamicMetaObject*> indexes);
    // public System.Dynamic.DynamicMetaObject BindSetIndex(System.Dynamic.SetIndexBinder binder, System.Dynamic.DynamicMetaObject[] indexes, System.Dynamic.DynamicMetaObject value)
    // Offset: 0x4BE2758
    ::System::Dynamic::DynamicMetaObject* BindSetIndex(::System::Dynamic::SetIndexBinder* binder, ::ArrayW<::System::Dynamic::DynamicMetaObject*> indexes, ::System::Dynamic::DynamicMetaObject* value);
    // public System.Dynamic.DynamicMetaObject BindDeleteIndex(System.Dynamic.DeleteIndexBinder binder, System.Dynamic.DynamicMetaObject[] indexes)
    // Offset: 0x4BE27E0
    ::System::Dynamic::DynamicMetaObject* BindDeleteIndex(::System::Dynamic::DeleteIndexBinder* binder, ::ArrayW<::System::Dynamic::DynamicMetaObject*> indexes);
    // public System.Dynamic.DynamicMetaObject BindInvokeMember(System.Dynamic.InvokeMemberBinder binder, System.Dynamic.DynamicMetaObject[] args)
    // Offset: 0x4BE2860
    ::System::Dynamic::DynamicMetaObject* BindInvokeMember(::System::Dynamic::InvokeMemberBinder* binder, ::ArrayW<::System::Dynamic::DynamicMetaObject*> args);
    // public System.Dynamic.DynamicMetaObject BindInvoke(System.Dynamic.InvokeBinder binder, System.Dynamic.DynamicMetaObject[] args)
    // Offset: 0x4BE28D8
    ::System::Dynamic::DynamicMetaObject* BindInvoke(::System::Dynamic::InvokeBinder* binder, ::ArrayW<::System::Dynamic::DynamicMetaObject*> args);
    // public System.Dynamic.DynamicMetaObject BindCreateInstance(System.Dynamic.CreateInstanceBinder binder, System.Dynamic.DynamicMetaObject[] args)
    // Offset: 0x4BE2950
    ::System::Dynamic::DynamicMetaObject* BindCreateInstance(::System::Dynamic::CreateInstanceBinder* binder, ::ArrayW<::System::Dynamic::DynamicMetaObject*> args);
    // public System.Dynamic.DynamicMetaObject BindUnaryOperation(System.Dynamic.UnaryOperationBinder binder)
    // Offset: 0x4BE29D0
    ::System::Dynamic::DynamicMetaObject* BindUnaryOperation(::System::Dynamic::UnaryOperationBinder* binder);
    // public System.Dynamic.DynamicMetaObject BindBinaryOperation(System.Dynamic.BinaryOperationBinder binder, System.Dynamic.DynamicMetaObject arg)
    // Offset: 0x4BE2A40
    ::System::Dynamic::DynamicMetaObject* BindBinaryOperation(::System::Dynamic::BinaryOperationBinder* binder, ::System::Dynamic::DynamicMetaObject* arg);
    // public System.Collections.Generic.IEnumerable`1<System.String> GetDynamicMemberNames()
    // Offset: 0x4BE2AC0
    ::System::Collections::Generic::IEnumerable_1<::StringW>* GetDynamicMemberNames();
    // static public System.Dynamic.DynamicMetaObject Create(System.Object value, System.Linq.Expressions.Expression expression)
    // Offset: 0x4BE2B4C
    static ::System::Dynamic::DynamicMetaObject* Create(::Il2CppObject* value, ::System::Linq::Expressions::Expression* expression);
    // static private System.Void .cctor()
    // Offset: 0x4BE2D08
    static void _cctor();
  }; // System.Dynamic.DynamicMetaObject
  #pragma pack(pop)
  static check_size<sizeof(DynamicMetaObject), 32 + sizeof(::System::Dynamic::BindingRestrictions*)> __System_Dynamic_DynamicMetaObjectSizeCheck;
  static_assert(sizeof(DynamicMetaObject) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Dynamic::DynamicMetaObject::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Dynamic::DynamicMetaObject::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Dynamic::DynamicMetaObject::get_Expression
// Il2CppName: get_Expression
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Linq::Expressions::Expression* (System::Dynamic::DynamicMetaObject::*)()>(&System::Dynamic::DynamicMetaObject::get_Expression)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::DynamicMetaObject*), "get_Expression", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Dynamic::DynamicMetaObject::get_Restrictions
// Il2CppName: get_Restrictions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Dynamic::BindingRestrictions* (System::Dynamic::DynamicMetaObject::*)()>(&System::Dynamic::DynamicMetaObject::get_Restrictions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::DynamicMetaObject*), "get_Restrictions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Dynamic::DynamicMetaObject::get_Value
// Il2CppName: get_Value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Dynamic::DynamicMetaObject::*)()>(&System::Dynamic::DynamicMetaObject::get_Value)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::DynamicMetaObject*), "get_Value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Dynamic::DynamicMetaObject::get_HasValue
// Il2CppName: get_HasValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Dynamic::DynamicMetaObject::*)()>(&System::Dynamic::DynamicMetaObject::get_HasValue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::DynamicMetaObject*), "get_HasValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Dynamic::DynamicMetaObject::get_RuntimeType
// Il2CppName: get_RuntimeType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Type* (System::Dynamic::DynamicMetaObject::*)()>(&System::Dynamic::DynamicMetaObject::get_RuntimeType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::DynamicMetaObject*), "get_RuntimeType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Dynamic::DynamicMetaObject::get_LimitType
// Il2CppName: get_LimitType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Type* (System::Dynamic::DynamicMetaObject::*)()>(&System::Dynamic::DynamicMetaObject::get_LimitType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::DynamicMetaObject*), "get_LimitType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Dynamic::DynamicMetaObject::BindConvert
// Il2CppName: BindConvert
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Dynamic::DynamicMetaObject* (System::Dynamic::DynamicMetaObject::*)(::System::Dynamic::ConvertBinder*)>(&System::Dynamic::DynamicMetaObject::BindConvert)> {
  static const MethodInfo* get() {
    static auto* binder = &::il2cpp_utils::GetClassFromName("System.Dynamic", "ConvertBinder")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::DynamicMetaObject*), "BindConvert", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{binder});
  }
};
// Writing MetadataGetter for method: System::Dynamic::DynamicMetaObject::BindGetMember
// Il2CppName: BindGetMember
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Dynamic::DynamicMetaObject* (System::Dynamic::DynamicMetaObject::*)(::System::Dynamic::GetMemberBinder*)>(&System::Dynamic::DynamicMetaObject::BindGetMember)> {
  static const MethodInfo* get() {
    static auto* binder = &::il2cpp_utils::GetClassFromName("System.Dynamic", "GetMemberBinder")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::DynamicMetaObject*), "BindGetMember", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{binder});
  }
};
// Writing MetadataGetter for method: System::Dynamic::DynamicMetaObject::BindSetMember
// Il2CppName: BindSetMember
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Dynamic::DynamicMetaObject* (System::Dynamic::DynamicMetaObject::*)(::System::Dynamic::SetMemberBinder*, ::System::Dynamic::DynamicMetaObject*)>(&System::Dynamic::DynamicMetaObject::BindSetMember)> {
  static const MethodInfo* get() {
    static auto* binder = &::il2cpp_utils::GetClassFromName("System.Dynamic", "SetMemberBinder")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Dynamic", "DynamicMetaObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::DynamicMetaObject*), "BindSetMember", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{binder, value});
  }
};
// Writing MetadataGetter for method: System::Dynamic::DynamicMetaObject::BindDeleteMember
// Il2CppName: BindDeleteMember
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Dynamic::DynamicMetaObject* (System::Dynamic::DynamicMetaObject::*)(::System::Dynamic::DeleteMemberBinder*)>(&System::Dynamic::DynamicMetaObject::BindDeleteMember)> {
  static const MethodInfo* get() {
    static auto* binder = &::il2cpp_utils::GetClassFromName("System.Dynamic", "DeleteMemberBinder")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::DynamicMetaObject*), "BindDeleteMember", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{binder});
  }
};
// Writing MetadataGetter for method: System::Dynamic::DynamicMetaObject::BindGetIndex
// Il2CppName: BindGetIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Dynamic::DynamicMetaObject* (System::Dynamic::DynamicMetaObject::*)(::System::Dynamic::GetIndexBinder*, ::ArrayW<::System::Dynamic::DynamicMetaObject*>)>(&System::Dynamic::DynamicMetaObject::BindGetIndex)> {
  static const MethodInfo* get() {
    static auto* binder = &::il2cpp_utils::GetClassFromName("System.Dynamic", "GetIndexBinder")->byval_arg;
    static auto* indexes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System.Dynamic", "DynamicMetaObject"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::DynamicMetaObject*), "BindGetIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{binder, indexes});
  }
};
// Writing MetadataGetter for method: System::Dynamic::DynamicMetaObject::BindSetIndex
// Il2CppName: BindSetIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Dynamic::DynamicMetaObject* (System::Dynamic::DynamicMetaObject::*)(::System::Dynamic::SetIndexBinder*, ::ArrayW<::System::Dynamic::DynamicMetaObject*>, ::System::Dynamic::DynamicMetaObject*)>(&System::Dynamic::DynamicMetaObject::BindSetIndex)> {
  static const MethodInfo* get() {
    static auto* binder = &::il2cpp_utils::GetClassFromName("System.Dynamic", "SetIndexBinder")->byval_arg;
    static auto* indexes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System.Dynamic", "DynamicMetaObject"), 1)->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Dynamic", "DynamicMetaObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::DynamicMetaObject*), "BindSetIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{binder, indexes, value});
  }
};
// Writing MetadataGetter for method: System::Dynamic::DynamicMetaObject::BindDeleteIndex
// Il2CppName: BindDeleteIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Dynamic::DynamicMetaObject* (System::Dynamic::DynamicMetaObject::*)(::System::Dynamic::DeleteIndexBinder*, ::ArrayW<::System::Dynamic::DynamicMetaObject*>)>(&System::Dynamic::DynamicMetaObject::BindDeleteIndex)> {
  static const MethodInfo* get() {
    static auto* binder = &::il2cpp_utils::GetClassFromName("System.Dynamic", "DeleteIndexBinder")->byval_arg;
    static auto* indexes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System.Dynamic", "DynamicMetaObject"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::DynamicMetaObject*), "BindDeleteIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{binder, indexes});
  }
};
// Writing MetadataGetter for method: System::Dynamic::DynamicMetaObject::BindInvokeMember
// Il2CppName: BindInvokeMember
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Dynamic::DynamicMetaObject* (System::Dynamic::DynamicMetaObject::*)(::System::Dynamic::InvokeMemberBinder*, ::ArrayW<::System::Dynamic::DynamicMetaObject*>)>(&System::Dynamic::DynamicMetaObject::BindInvokeMember)> {
  static const MethodInfo* get() {
    static auto* binder = &::il2cpp_utils::GetClassFromName("System.Dynamic", "InvokeMemberBinder")->byval_arg;
    static auto* args = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System.Dynamic", "DynamicMetaObject"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::DynamicMetaObject*), "BindInvokeMember", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{binder, args});
  }
};
// Writing MetadataGetter for method: System::Dynamic::DynamicMetaObject::BindInvoke
// Il2CppName: BindInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Dynamic::DynamicMetaObject* (System::Dynamic::DynamicMetaObject::*)(::System::Dynamic::InvokeBinder*, ::ArrayW<::System::Dynamic::DynamicMetaObject*>)>(&System::Dynamic::DynamicMetaObject::BindInvoke)> {
  static const MethodInfo* get() {
    static auto* binder = &::il2cpp_utils::GetClassFromName("System.Dynamic", "InvokeBinder")->byval_arg;
    static auto* args = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System.Dynamic", "DynamicMetaObject"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::DynamicMetaObject*), "BindInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{binder, args});
  }
};
// Writing MetadataGetter for method: System::Dynamic::DynamicMetaObject::BindCreateInstance
// Il2CppName: BindCreateInstance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Dynamic::DynamicMetaObject* (System::Dynamic::DynamicMetaObject::*)(::System::Dynamic::CreateInstanceBinder*, ::ArrayW<::System::Dynamic::DynamicMetaObject*>)>(&System::Dynamic::DynamicMetaObject::BindCreateInstance)> {
  static const MethodInfo* get() {
    static auto* binder = &::il2cpp_utils::GetClassFromName("System.Dynamic", "CreateInstanceBinder")->byval_arg;
    static auto* args = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System.Dynamic", "DynamicMetaObject"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::DynamicMetaObject*), "BindCreateInstance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{binder, args});
  }
};
// Writing MetadataGetter for method: System::Dynamic::DynamicMetaObject::BindUnaryOperation
// Il2CppName: BindUnaryOperation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Dynamic::DynamicMetaObject* (System::Dynamic::DynamicMetaObject::*)(::System::Dynamic::UnaryOperationBinder*)>(&System::Dynamic::DynamicMetaObject::BindUnaryOperation)> {
  static const MethodInfo* get() {
    static auto* binder = &::il2cpp_utils::GetClassFromName("System.Dynamic", "UnaryOperationBinder")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::DynamicMetaObject*), "BindUnaryOperation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{binder});
  }
};
// Writing MetadataGetter for method: System::Dynamic::DynamicMetaObject::BindBinaryOperation
// Il2CppName: BindBinaryOperation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Dynamic::DynamicMetaObject* (System::Dynamic::DynamicMetaObject::*)(::System::Dynamic::BinaryOperationBinder*, ::System::Dynamic::DynamicMetaObject*)>(&System::Dynamic::DynamicMetaObject::BindBinaryOperation)> {
  static const MethodInfo* get() {
    static auto* binder = &::il2cpp_utils::GetClassFromName("System.Dynamic", "BinaryOperationBinder")->byval_arg;
    static auto* arg = &::il2cpp_utils::GetClassFromName("System.Dynamic", "DynamicMetaObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::DynamicMetaObject*), "BindBinaryOperation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{binder, arg});
  }
};
// Writing MetadataGetter for method: System::Dynamic::DynamicMetaObject::GetDynamicMemberNames
// Il2CppName: GetDynamicMemberNames
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<::StringW>* (System::Dynamic::DynamicMetaObject::*)()>(&System::Dynamic::DynamicMetaObject::GetDynamicMemberNames)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::DynamicMetaObject*), "GetDynamicMemberNames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Dynamic::DynamicMetaObject::Create
// Il2CppName: Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Dynamic::DynamicMetaObject* (*)(::Il2CppObject*, ::System::Linq::Expressions::Expression*)>(&System::Dynamic::DynamicMetaObject::Create)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* expression = &::il2cpp_utils::GetClassFromName("System.Linq.Expressions", "Expression")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::DynamicMetaObject*), "Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, expression});
  }
};
// Writing MetadataGetter for method: System::Dynamic::DynamicMetaObject::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::Dynamic::DynamicMetaObject::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::DynamicMetaObject*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
