// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Dynamic.ExpandoObject/MetaExpando
#include "System/Dynamic/ExpandoObject_MetaExpando.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Dynamic
namespace System::Dynamic {
  // Forward declaring type: InvokeMemberBinder
  class InvokeMemberBinder;
  // Forward declaring type: DynamicMetaObject
  class DynamicMetaObject;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Dynamic::ExpandoObject::MetaExpando::$$c__DisplayClass3_0);
DEFINE_IL2CPP_ARG_TYPE(::System::Dynamic::ExpandoObject::MetaExpando::$$c__DisplayClass3_0*, "System.Dynamic", "ExpandoObject/MetaExpando/<>c__DisplayClass3_0");
// Type namespace: System.Dynamic
namespace System::Dynamic {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: System.Dynamic.ExpandoObject/MetaExpando/<>c__DisplayClass3_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class ExpandoObject::MetaExpando::$$c__DisplayClass3_0 : public ::Il2CppObject {
    public:
    public:
    // public System.Dynamic.InvokeMemberBinder binder
    // Size: 0x8
    // Offset: 0x10
    ::System::Dynamic::InvokeMemberBinder* binder;
    // Field size check
    static_assert(sizeof(::System::Dynamic::InvokeMemberBinder*) == 0x8);
    // public System.Dynamic.DynamicMetaObject[] args
    // Size: 0x8
    // Offset: 0x18
    ::ArrayW<::System::Dynamic::DynamicMetaObject*> args;
    // Field size check
    static_assert(sizeof(::ArrayW<::System::Dynamic::DynamicMetaObject*>) == 0x8);
    public:
    // Get instance field reference: public System.Dynamic.InvokeMemberBinder binder
    [[deprecated("Use field access instead!")]] ::System::Dynamic::InvokeMemberBinder*& dyn_binder();
    // Get instance field reference: public System.Dynamic.DynamicMetaObject[] args
    [[deprecated("Use field access instead!")]] ::ArrayW<::System::Dynamic::DynamicMetaObject*>& dyn_args();
    // public System.Void .ctor()
    // Offset: 0x4BE6E58
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ExpandoObject::MetaExpando::$$c__DisplayClass3_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Dynamic::ExpandoObject::MetaExpando::$$c__DisplayClass3_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ExpandoObject::MetaExpando::$$c__DisplayClass3_0*, creationType>()));
    }
    // System.Dynamic.DynamicMetaObject <BindInvokeMember>b__0(System.Dynamic.DynamicMetaObject value)
    // Offset: 0x4BE77C4
    ::System::Dynamic::DynamicMetaObject* $BindInvokeMember$b__0(::System::Dynamic::DynamicMetaObject* value);
  }; // System.Dynamic.ExpandoObject/MetaExpando/<>c__DisplayClass3_0
  #pragma pack(pop)
  static check_size<sizeof(ExpandoObject::MetaExpando::$$c__DisplayClass3_0), 24 + sizeof(::ArrayW<::System::Dynamic::DynamicMetaObject*>)> __System_Dynamic_ExpandoObject_MetaExpando_$$c__DisplayClass3_0SizeCheck;
  static_assert(sizeof(ExpandoObject::MetaExpando::$$c__DisplayClass3_0) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Dynamic::ExpandoObject::MetaExpando::$$c__DisplayClass3_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Dynamic::ExpandoObject::MetaExpando::$$c__DisplayClass3_0::$BindInvokeMember$b__0
// Il2CppName: <BindInvokeMember>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Dynamic::DynamicMetaObject* (System::Dynamic::ExpandoObject::MetaExpando::$$c__DisplayClass3_0::*)(::System::Dynamic::DynamicMetaObject*)>(&System::Dynamic::ExpandoObject::MetaExpando::$$c__DisplayClass3_0::$BindInvokeMember$b__0)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Dynamic", "DynamicMetaObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Dynamic::ExpandoObject::MetaExpando::$$c__DisplayClass3_0*), "<BindInvokeMember>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
