// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.OrdinalComparer
#include "System/OrdinalComparer.hpp"
// Including type: System.Runtime.Serialization.ISerializable
#include "System/Runtime/Serialization/ISerializable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Runtime::Serialization
namespace System::Runtime::Serialization {
  // Forward declaring type: SerializationInfo
  class SerializationInfo;
  // Forward declaring type: StreamingContext
  struct StreamingContext;
}
// Completed forward declares
// Type namespace: System
namespace System {
  // Forward declaring type: OrdinalIgnoreCaseComparer
  class OrdinalIgnoreCaseComparer;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::OrdinalIgnoreCaseComparer);
DEFINE_IL2CPP_ARG_TYPE(::System::OrdinalIgnoreCaseComparer*, "System", "OrdinalIgnoreCaseComparer");
// Type namespace: System
namespace System {
  // Size: 0x11
  #pragma pack(push, 1)
  // Autogenerated type: System.OrdinalIgnoreCaseComparer
  // [TokenAttribute] Offset: FFFFFFFF
  class OrdinalIgnoreCaseComparer : public ::System::OrdinalComparer/*, public ::System::Runtime::Serialization::ISerializable*/ {
    public:
    // Creating interface conversion operator: operator ::System::Runtime::Serialization::ISerializable
    operator ::System::Runtime::Serialization::ISerializable() noexcept {
      return *reinterpret_cast<::System::Runtime::Serialization::ISerializable*>(this);
    }
    // public System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    // Offset: 0x4672BD0
    void GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context);
    // public System.Void .ctor()
    // Offset: 0x4672190
    // Implemented from: System.StringComparer
    // Base method: System.Void StringComparer::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static OrdinalIgnoreCaseComparer* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::OrdinalIgnoreCaseComparer::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<OrdinalIgnoreCaseComparer*, creationType>()));
    }
    // public override System.Int32 Compare(System.String x, System.String y)
    // Offset: 0x4672B3C
    // Implemented from: System.OrdinalComparer
    // Base method: System.Int32 OrdinalComparer::Compare(System.String x, System.String y)
    int Compare(::StringW x, ::StringW y);
    // public override System.Boolean Equals(System.String x, System.String y)
    // Offset: 0x4672B54
    // Implemented from: System.OrdinalComparer
    // Base method: System.Boolean OrdinalComparer::Equals(System.String x, System.String y)
    bool Equals(::StringW x, ::StringW y);
    // public override System.Int32 GetHashCode(System.String obj)
    // Offset: 0x4672B6C
    // Implemented from: System.OrdinalComparer
    // Base method: System.Int32 OrdinalComparer::GetHashCode(System.String obj)
    int GetHashCode(::StringW obj);
  }; // System.OrdinalIgnoreCaseComparer
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::OrdinalIgnoreCaseComparer::GetObjectData
// Il2CppName: GetObjectData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::OrdinalIgnoreCaseComparer::*)(::System::Runtime::Serialization::SerializationInfo*, ::System::Runtime::Serialization::StreamingContext)>(&System::OrdinalIgnoreCaseComparer::GetObjectData)> {
  static const MethodInfo* get() {
    static auto* info = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "SerializationInfo")->byval_arg;
    static auto* context = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "StreamingContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::OrdinalIgnoreCaseComparer*), "GetObjectData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{info, context});
  }
};
// Writing MetadataGetter for method: System::OrdinalIgnoreCaseComparer::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::OrdinalIgnoreCaseComparer::Compare
// Il2CppName: Compare
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::OrdinalIgnoreCaseComparer::*)(::StringW, ::StringW)>(&System::OrdinalIgnoreCaseComparer::Compare)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* y = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::OrdinalIgnoreCaseComparer*), "Compare", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x, y});
  }
};
// Writing MetadataGetter for method: System::OrdinalIgnoreCaseComparer::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::OrdinalIgnoreCaseComparer::*)(::StringW, ::StringW)>(&System::OrdinalIgnoreCaseComparer::Equals)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* y = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::OrdinalIgnoreCaseComparer*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x, y});
  }
};
// Writing MetadataGetter for method: System::OrdinalIgnoreCaseComparer::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::OrdinalIgnoreCaseComparer::*)(::StringW)>(&System::OrdinalIgnoreCaseComparer::GetHashCode)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::OrdinalIgnoreCaseComparer*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
