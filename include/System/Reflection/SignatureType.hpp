// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include <initializer_list>
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Reflection
namespace System::Reflection {
  // Forward declaring type: MemberTypes
  struct MemberTypes;
  // Forward declaring type: Assembly
  class Assembly;
  // Forward declaring type: Module
  class Module;
  // Forward declaring type: MethodBase
  class MethodBase;
  // Forward declaring type: GenericParameterAttributes
  struct GenericParameterAttributes;
  // Forward declaring type: TypeAttributes
  struct TypeAttributes;
  // Forward declaring type: ConstructorInfo
  class ConstructorInfo;
  // Skipping declaration: BindingFlags because it is already included!
  // Forward declaring type: EventInfo
  class EventInfo;
  // Forward declaring type: FieldInfo
  class FieldInfo;
  // Forward declaring type: MethodInfo
  class MethodInfo;
  // Forward declaring type: PropertyInfo
  class PropertyInfo;
  // Forward declaring type: Binder
  class Binder;
  // Forward declaring type: CallingConventions
  struct CallingConventions;
  // Forward declaring type: CustomAttributeData
  class CustomAttributeData;
  // Forward declaring type: TypeFilter
  class TypeFilter;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Array
  class Array;
  // Forward declaring type: Guid
  struct Guid;
  // Forward declaring type: TypeCode
  struct TypeCode;
  // Skipping declaration: RuntimeTypeHandle because it is already included!
}
// Forward declaring namespace: System::Globalization
namespace System::Globalization {
  // Forward declaring type: CultureInfo
  class CultureInfo;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IList`1<T>
  template<typename T>
  class IList_1;
  // Forward declaring type: IEnumerable`1<T>
  template<typename T>
  class IEnumerable_1;
}
// Completed forward declares
// Type namespace: System.Reflection
namespace System::Reflection {
  // Forward declaring type: SignatureType
  class SignatureType;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Reflection::SignatureType);
DEFINE_IL2CPP_ARG_TYPE(::System::Reflection::SignatureType*, "System.Reflection", "SignatureType");
// Type namespace: System.Reflection
namespace System::Reflection {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: System.Reflection.SignatureType
  // [TokenAttribute] Offset: FFFFFFFF
  class SignatureType : public ::System::Type {
    public:
    // System.Reflection.SignatureType get_ElementType()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Reflection::SignatureType* get_ElementType();
    // public override System.Boolean get_IsSignatureType()
    // Offset: 0x458ABC0
    // Implemented from: System.Type
    // Base method: System.Boolean Type::get_IsSignatureType()
    bool get_IsSignatureType();
    // protected override System.Boolean HasElementTypeImpl()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: System.Type
    // Base method: System.Boolean Type::HasElementTypeImpl()
    bool HasElementTypeImpl();
    // protected override System.Boolean IsArrayImpl()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: System.Type
    // Base method: System.Boolean Type::IsArrayImpl()
    bool IsArrayImpl();
    // public override System.Boolean get_IsSZArray()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: System.Type
    // Base method: System.Boolean Type::get_IsSZArray()
    bool get_IsSZArray();
    // public override System.Boolean get_IsVariableBoundArray()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: System.Type
    // Base method: System.Boolean Type::get_IsVariableBoundArray()
    bool get_IsVariableBoundArray();
    // protected override System.Boolean IsByRefImpl()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: System.Type
    // Base method: System.Boolean Type::IsByRefImpl()
    bool IsByRefImpl();
    // protected override System.Boolean IsPointerImpl()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: System.Type
    // Base method: System.Boolean Type::IsPointerImpl()
    bool IsPointerImpl();
    // public override System.Boolean get_IsGenericType()
    // Offset: 0x458ABC8
    // Implemented from: System.Type
    // Base method: System.Boolean Type::get_IsGenericType()
    bool get_IsGenericType();
    // public override System.Boolean get_IsGenericTypeDefinition()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: System.Type
    // Base method: System.Boolean Type::get_IsGenericTypeDefinition()
    bool get_IsGenericTypeDefinition();
    // public override System.Boolean get_IsConstructedGenericType()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: System.Type
    // Base method: System.Boolean Type::get_IsConstructedGenericType()
    bool get_IsConstructedGenericType();
    // public override System.Boolean get_IsGenericParameter()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: System.Type
    // Base method: System.Boolean Type::get_IsGenericParameter()
    bool get_IsGenericParameter();
    // public override System.Boolean get_IsGenericMethodParameter()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: System.Type
    // Base method: System.Boolean Type::get_IsGenericMethodParameter()
    bool get_IsGenericMethodParameter();
    // public override System.Boolean get_ContainsGenericParameters()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: System.Type
    // Base method: System.Boolean Type::get_ContainsGenericParameters()
    bool get_ContainsGenericParameters();
    // public override System.Reflection.MemberTypes get_MemberType()
    // Offset: 0x458AC08
    // Implemented from: System.Type
    // Base method: System.Reflection.MemberTypes Type::get_MemberType()
    ::System::Reflection::MemberTypes get_MemberType();
    // public override System.Type MakeArrayType()
    // Offset: 0x458AC10
    // Implemented from: System.Type
    // Base method: System.Type Type::MakeArrayType()
    ::System::Type* MakeArrayType();
    // public override System.Type MakeArrayType(System.Int32 rank)
    // Offset: 0x458AC80
    // Implemented from: System.Type
    // Base method: System.Type Type::MakeArrayType(System.Int32 rank)
    ::System::Type* MakeArrayType(int rank);
    // public override System.Type MakeByRefType()
    // Offset: 0x458AD30
    // Implemented from: System.Type
    // Base method: System.Type Type::MakeByRefType()
    ::System::Type* MakeByRefType();
    // public override System.Type MakePointerType()
    // Offset: 0x458AD94
    // Implemented from: System.Type
    // Base method: System.Type Type::MakePointerType()
    ::System::Type* MakePointerType();
    // public override System.Type MakeGenericType(params System.Type[] typeArguments)
    // Offset: 0x458ADF8
    // Implemented from: System.Type
    // Base method: System.Type Type::MakeGenericType(params System.Type[] typeArguments)
    ::System::Type* MakeGenericType(::ArrayW<::System::Type*> typeArguments);
    // public override System.Type GetElementType()
    // Offset: 0x458AE44
    // Implemented from: System.Type
    // Base method: System.Type Type::GetElementType()
    ::System::Type* GetElementType();
    // public override System.Int32 GetArrayRank()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: System.Type
    // Base method: System.Int32 Type::GetArrayRank()
    int GetArrayRank();
    // public override System.Type GetGenericTypeDefinition()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: System.Type
    // Base method: System.Type Type::GetGenericTypeDefinition()
    ::System::Type* GetGenericTypeDefinition();
    // public override System.Type[] get_GenericTypeArguments()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: System.Type
    // Base method: System.Type[] Type::get_GenericTypeArguments()
    ::ArrayW<::System::Type*> get_GenericTypeArguments();
    // public override System.Type[] GetGenericArguments()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: System.Type
    // Base method: System.Type[] Type::GetGenericArguments()
    ::ArrayW<::System::Type*> GetGenericArguments();
    // public override System.Int32 get_GenericParameterPosition()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: System.Type
    // Base method: System.Int32 Type::get_GenericParameterPosition()
    int get_GenericParameterPosition();
    // public override System.Type get_UnderlyingSystemType()
    // Offset: 0x458AE54
    // Implemented from: System.Type
    // Base method: System.Type Type::get_UnderlyingSystemType()
    ::System::Type* get_UnderlyingSystemType();
    // public override System.String get_Name()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: System.Reflection.MemberInfo
    // Base method: System.String MemberInfo::get_Name()
    ::StringW get_Name();
    // public override System.String get_Namespace()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: System.Type
    // Base method: System.String Type::get_Namespace()
    ::StringW get_Namespace();
    // public override System.String get_FullName()
    // Offset: 0x458AE58
    // Implemented from: System.Type
    // Base method: System.String Type::get_FullName()
    ::StringW get_FullName();
    // public override System.String get_AssemblyQualifiedName()
    // Offset: 0x458AE60
    // Implemented from: System.Type
    // Base method: System.String Type::get_AssemblyQualifiedName()
    ::StringW get_AssemblyQualifiedName();
    // public override System.String ToString()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: System.Type
    // Base method: System.String Type::ToString()
    ::StringW ToString();
    // public override System.Reflection.Assembly get_Assembly()
    // Offset: 0x458AE68
    // Implemented from: System.Type
    // Base method: System.Reflection.Assembly Type::get_Assembly()
    ::System::Reflection::Assembly* get_Assembly();
    // public override System.Reflection.Module get_Module()
    // Offset: 0x458AEB4
    // Implemented from: System.Type
    // Base method: System.Reflection.Module Type::get_Module()
    ::System::Reflection::Module* get_Module();
    // public override System.Type get_ReflectedType()
    // Offset: 0x458AF00
    // Implemented from: System.Type
    // Base method: System.Type Type::get_ReflectedType()
    ::System::Type* get_ReflectedType();
    // public override System.Type get_BaseType()
    // Offset: 0x458AF4C
    // Implemented from: System.Type
    // Base method: System.Type Type::get_BaseType()
    ::System::Type* get_BaseType();
    // public override System.Type[] GetInterfaces()
    // Offset: 0x458AF98
    // Implemented from: System.Type
    // Base method: System.Type[] Type::GetInterfaces()
    ::ArrayW<::System::Type*> GetInterfaces();
    // public override System.Boolean IsAssignableFrom(System.Type c)
    // Offset: 0x458AFE4
    // Implemented from: System.Type
    // Base method: System.Boolean Type::IsAssignableFrom(System.Type c)
    bool IsAssignableFrom(::System::Type* c);
    // public override System.Int32 get_MetadataToken()
    // Offset: 0x458B030
    // Implemented from: System.Reflection.MemberInfo
    // Base method: System.Int32 MemberInfo::get_MetadataToken()
    int get_MetadataToken();
    // public override System.Type get_DeclaringType()
    // Offset: 0x458B07C
    // Implemented from: System.Type
    // Base method: System.Type Type::get_DeclaringType()
    ::System::Type* get_DeclaringType();
    // public override System.Reflection.MethodBase get_DeclaringMethod()
    // Offset: 0x458B0C8
    // Implemented from: System.Type
    // Base method: System.Reflection.MethodBase Type::get_DeclaringMethod()
    ::System::Reflection::MethodBase* get_DeclaringMethod();
    // public override System.Type[] GetGenericParameterConstraints()
    // Offset: 0x458B114
    // Implemented from: System.Type
    // Base method: System.Type[] Type::GetGenericParameterConstraints()
    ::ArrayW<::System::Type*> GetGenericParameterConstraints();
    // public override System.Reflection.GenericParameterAttributes get_GenericParameterAttributes()
    // Offset: 0x458B160
    // Implemented from: System.Type
    // Base method: System.Reflection.GenericParameterAttributes Type::get_GenericParameterAttributes()
    ::System::Reflection::GenericParameterAttributes get_GenericParameterAttributes();
    // public override System.Boolean IsEnumDefined(System.Object value)
    // Offset: 0x458B1AC
    // Implemented from: System.Type
    // Base method: System.Boolean Type::IsEnumDefined(System.Object value)
    bool IsEnumDefined(::Il2CppObject* value);
    // public override System.String GetEnumName(System.Object value)
    // Offset: 0x458B1F8
    // Implemented from: System.Type
    // Base method: System.String Type::GetEnumName(System.Object value)
    ::StringW GetEnumName(::Il2CppObject* value);
    // public override System.String[] GetEnumNames()
    // Offset: 0x458B244
    // Implemented from: System.Type
    // Base method: System.String[] Type::GetEnumNames()
    ::ArrayW<::StringW> GetEnumNames();
    // public override System.Type GetEnumUnderlyingType()
    // Offset: 0x458B290
    // Implemented from: System.Type
    // Base method: System.Type Type::GetEnumUnderlyingType()
    ::System::Type* GetEnumUnderlyingType();
    // public override System.Array GetEnumValues()
    // Offset: 0x458B2DC
    // Implemented from: System.Type
    // Base method: System.Array Type::GetEnumValues()
    ::System::Array* GetEnumValues();
    // public override System.Guid get_GUID()
    // Offset: 0x458B328
    // Implemented from: System.Type
    // Base method: System.Guid Type::get_GUID()
    ::System::Guid get_GUID();
    // protected override System.TypeCode GetTypeCodeImpl()
    // Offset: 0x458B374
    // Implemented from: System.Type
    // Base method: System.TypeCode Type::GetTypeCodeImpl()
    ::System::TypeCode GetTypeCodeImpl();
    // protected override System.Reflection.TypeAttributes GetAttributeFlagsImpl()
    // Offset: 0x458B3C0
    // Implemented from: System.Type
    // Base method: System.Reflection.TypeAttributes Type::GetAttributeFlagsImpl()
    ::System::Reflection::TypeAttributes GetAttributeFlagsImpl();
    // public override System.Reflection.ConstructorInfo[] GetConstructors(System.Reflection.BindingFlags bindingAttr)
    // Offset: 0x458B40C
    // Implemented from: System.Type
    // Base method: System.Reflection.ConstructorInfo[] Type::GetConstructors(System.Reflection.BindingFlags bindingAttr)
    ::ArrayW<::System::Reflection::ConstructorInfo*> GetConstructors(::System::Reflection::BindingFlags bindingAttr);
    // public override System.Reflection.EventInfo GetEvent(System.String name, System.Reflection.BindingFlags bindingAttr)
    // Offset: 0x458B458
    // Implemented from: System.Type
    // Base method: System.Reflection.EventInfo Type::GetEvent(System.String name, System.Reflection.BindingFlags bindingAttr)
    ::System::Reflection::EventInfo* GetEvent(::StringW name, ::System::Reflection::BindingFlags bindingAttr);
    // public override System.Reflection.EventInfo[] GetEvents(System.Reflection.BindingFlags bindingAttr)
    // Offset: 0x458B4A4
    // Implemented from: System.Type
    // Base method: System.Reflection.EventInfo[] Type::GetEvents(System.Reflection.BindingFlags bindingAttr)
    ::ArrayW<::System::Reflection::EventInfo*> GetEvents(::System::Reflection::BindingFlags bindingAttr);
    // public override System.Reflection.FieldInfo GetField(System.String name, System.Reflection.BindingFlags bindingAttr)
    // Offset: 0x458B4F0
    // Implemented from: System.Type
    // Base method: System.Reflection.FieldInfo Type::GetField(System.String name, System.Reflection.BindingFlags bindingAttr)
    ::System::Reflection::FieldInfo* GetField(::StringW name, ::System::Reflection::BindingFlags bindingAttr);
    // public override System.Reflection.FieldInfo[] GetFields(System.Reflection.BindingFlags bindingAttr)
    // Offset: 0x458B53C
    // Implemented from: System.Type
    // Base method: System.Reflection.FieldInfo[] Type::GetFields(System.Reflection.BindingFlags bindingAttr)
    ::ArrayW<::System::Reflection::FieldInfo*> GetFields(::System::Reflection::BindingFlags bindingAttr);
    // public override System.Reflection.MemberInfo[] GetMembers(System.Reflection.BindingFlags bindingAttr)
    // Offset: 0x458B588
    // Implemented from: System.Type
    // Base method: System.Reflection.MemberInfo[] Type::GetMembers(System.Reflection.BindingFlags bindingAttr)
    ::ArrayW<::System::Reflection::MemberInfo*> GetMembers(::System::Reflection::BindingFlags bindingAttr);
    // public override System.Reflection.MethodInfo[] GetMethods(System.Reflection.BindingFlags bindingAttr)
    // Offset: 0x458B5D4
    // Implemented from: System.Type
    // Base method: System.Reflection.MethodInfo[] Type::GetMethods(System.Reflection.BindingFlags bindingAttr)
    ::ArrayW<::System::Reflection::MethodInfo*> GetMethods(::System::Reflection::BindingFlags bindingAttr);
    // public override System.Type GetNestedType(System.String name, System.Reflection.BindingFlags bindingAttr)
    // Offset: 0x458B620
    // Implemented from: System.Type
    // Base method: System.Type Type::GetNestedType(System.String name, System.Reflection.BindingFlags bindingAttr)
    ::System::Type* GetNestedType(::StringW name, ::System::Reflection::BindingFlags bindingAttr);
    // public override System.Type[] GetNestedTypes(System.Reflection.BindingFlags bindingAttr)
    // Offset: 0x458B66C
    // Implemented from: System.Type
    // Base method: System.Type[] Type::GetNestedTypes(System.Reflection.BindingFlags bindingAttr)
    ::ArrayW<::System::Type*> GetNestedTypes(::System::Reflection::BindingFlags bindingAttr);
    // public override System.Reflection.PropertyInfo[] GetProperties(System.Reflection.BindingFlags bindingAttr)
    // Offset: 0x458B6B8
    // Implemented from: System.Type
    // Base method: System.Reflection.PropertyInfo[] Type::GetProperties(System.Reflection.BindingFlags bindingAttr)
    ::ArrayW<::System::Reflection::PropertyInfo*> GetProperties(::System::Reflection::BindingFlags bindingAttr);
    // public override System.Object InvokeMember(System.String name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object target, System.Object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, System.String[] namedParameters)
    // Offset: 0x458B704
    // Implemented from: System.Type
    // Base method: System.Object Type::InvokeMember(System.String name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object target, System.Object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, System.String[] namedParameters)
    ::Il2CppObject* InvokeMember(::StringW name, ::System::Reflection::BindingFlags invokeAttr, ::System::Reflection::Binder* binder, ::Il2CppObject* target, ::ArrayW<::Il2CppObject*> args, ::ArrayW<::System::Reflection::ParameterModifier> modifiers, ::System::Globalization::CultureInfo* culture, ::ArrayW<::StringW> namedParameters);
    // protected override System.Reflection.MethodInfo GetMethodImpl(System.String name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, System.Type[] types, System.Reflection.ParameterModifier[] modifiers)
    // Offset: 0x458B750
    // Implemented from: System.Type
    // Base method: System.Reflection.MethodInfo Type::GetMethodImpl(System.String name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, System.Type[] types, System.Reflection.ParameterModifier[] modifiers)
    ::System::Reflection::MethodInfo* GetMethodImpl(::StringW name, ::System::Reflection::BindingFlags bindingAttr, ::System::Reflection::Binder* binder, ::System::Reflection::CallingConventions callConvention, ::ArrayW<::System::Type*> types, ::ArrayW<::System::Reflection::ParameterModifier> modifiers);
    // protected override System.Reflection.PropertyInfo GetPropertyImpl(System.String name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Type returnType, System.Type[] types, System.Reflection.ParameterModifier[] modifiers)
    // Offset: 0x458B79C
    // Implemented from: System.Type
    // Base method: System.Reflection.PropertyInfo Type::GetPropertyImpl(System.String name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Type returnType, System.Type[] types, System.Reflection.ParameterModifier[] modifiers)
    ::System::Reflection::PropertyInfo* GetPropertyImpl(::StringW name, ::System::Reflection::BindingFlags bindingAttr, ::System::Reflection::Binder* binder, ::System::Type* returnType, ::ArrayW<::System::Type*> types, ::ArrayW<::System::Reflection::ParameterModifier> modifiers);
    // public override System.Reflection.MemberInfo[] GetMember(System.String name, System.Reflection.BindingFlags bindingAttr)
    // Offset: 0x458B7E8
    // Implemented from: System.Type
    // Base method: System.Reflection.MemberInfo[] Type::GetMember(System.String name, System.Reflection.BindingFlags bindingAttr)
    ::ArrayW<::System::Reflection::MemberInfo*> GetMember(::StringW name, ::System::Reflection::BindingFlags bindingAttr);
    // public override System.Reflection.MemberInfo[] GetMember(System.String name, System.Reflection.MemberTypes type, System.Reflection.BindingFlags bindingAttr)
    // Offset: 0x458B834
    // Implemented from: System.Type
    // Base method: System.Reflection.MemberInfo[] Type::GetMember(System.String name, System.Reflection.MemberTypes type, System.Reflection.BindingFlags bindingAttr)
    ::ArrayW<::System::Reflection::MemberInfo*> GetMember(::StringW name, ::System::Reflection::MemberTypes type, ::System::Reflection::BindingFlags bindingAttr);
    // public override System.Object[] GetCustomAttributes(System.Boolean inherit)
    // Offset: 0x458B880
    // Implemented from: System.Reflection.MemberInfo
    // Base method: System.Object[] MemberInfo::GetCustomAttributes(System.Boolean inherit)
    ::ArrayW<::Il2CppObject*> GetCustomAttributes(bool inherit);
    // public override System.Object[] GetCustomAttributes(System.Type attributeType, System.Boolean inherit)
    // Offset: 0x458B8CC
    // Implemented from: System.Reflection.MemberInfo
    // Base method: System.Object[] MemberInfo::GetCustomAttributes(System.Type attributeType, System.Boolean inherit)
    ::ArrayW<::Il2CppObject*> GetCustomAttributes(::System::Type* attributeType, bool inherit);
    // public override System.Boolean IsDefined(System.Type attributeType, System.Boolean inherit)
    // Offset: 0x458B918
    // Implemented from: System.Reflection.MemberInfo
    // Base method: System.Boolean MemberInfo::IsDefined(System.Type attributeType, System.Boolean inherit)
    bool IsDefined(::System::Type* attributeType, bool inherit);
    // public override System.Collections.Generic.IList`1<System.Reflection.CustomAttributeData> GetCustomAttributesData()
    // Offset: 0x458B964
    // Implemented from: System.Reflection.MemberInfo
    // Base method: System.Collections.Generic.IList`1<System.Reflection.CustomAttributeData> MemberInfo::GetCustomAttributesData()
    ::System::Collections::Generic::IList_1<::System::Reflection::CustomAttributeData*>* GetCustomAttributesData();
    // public override System.Type GetInterface(System.String name, System.Boolean ignoreCase)
    // Offset: 0x458B9B0
    // Implemented from: System.Type
    // Base method: System.Type Type::GetInterface(System.String name, System.Boolean ignoreCase)
    ::System::Type* GetInterface(::StringW name, bool ignoreCase);
    // protected override System.Reflection.ConstructorInfo GetConstructorImpl(System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, System.Type[] types, System.Reflection.ParameterModifier[] modifiers)
    // Offset: 0x458B9FC
    // Implemented from: System.Type
    // Base method: System.Reflection.ConstructorInfo Type::GetConstructorImpl(System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, System.Type[] types, System.Reflection.ParameterModifier[] modifiers)
    ::System::Reflection::ConstructorInfo* GetConstructorImpl(::System::Reflection::BindingFlags bindingAttr, ::System::Reflection::Binder* binder, ::System::Reflection::CallingConventions callConvention, ::ArrayW<::System::Type*> types, ::ArrayW<::System::Reflection::ParameterModifier> modifiers);
    // protected override System.Boolean IsCOMObjectImpl()
    // Offset: 0x458BA48
    // Implemented from: System.Type
    // Base method: System.Boolean Type::IsCOMObjectImpl()
    bool IsCOMObjectImpl();
    // protected override System.Boolean IsPrimitiveImpl()
    // Offset: 0x458BA94
    // Implemented from: System.Type
    // Base method: System.Boolean Type::IsPrimitiveImpl()
    bool IsPrimitiveImpl();
    // public override System.Collections.Generic.IEnumerable`1<System.Reflection.CustomAttributeData> get_CustomAttributes()
    // Offset: 0x458BAE0
    // Implemented from: System.Reflection.MemberInfo
    // Base method: System.Collections.Generic.IEnumerable`1<System.Reflection.CustomAttributeData> MemberInfo::get_CustomAttributes()
    ::System::Collections::Generic::IEnumerable_1<::System::Reflection::CustomAttributeData*>* get_CustomAttributes();
    // public override System.Type[] FindInterfaces(System.Reflection.TypeFilter filter, System.Object filterCriteria)
    // Offset: 0x458BB2C
    // Implemented from: System.Type
    // Base method: System.Type[] Type::FindInterfaces(System.Reflection.TypeFilter filter, System.Object filterCriteria)
    ::ArrayW<::System::Type*> FindInterfaces(::System::Reflection::TypeFilter* filter, ::Il2CppObject* filterCriteria);
    // protected override System.Boolean IsContextfulImpl()
    // Offset: 0x458BB78
    // Implemented from: System.Type
    // Base method: System.Boolean Type::IsContextfulImpl()
    bool IsContextfulImpl();
    // public override System.Boolean get_IsEnum()
    // Offset: 0x458BBC4
    // Implemented from: System.Type
    // Base method: System.Boolean Type::get_IsEnum()
    bool get_IsEnum();
    // public override System.Boolean IsEquivalentTo(System.Type other)
    // Offset: 0x458BC10
    // Implemented from: System.Type
    // Base method: System.Boolean Type::IsEquivalentTo(System.Type other)
    bool IsEquivalentTo(::System::Type* other);
    // public override System.Boolean IsInstanceOfType(System.Object o)
    // Offset: 0x458BC5C
    // Implemented from: System.Type
    // Base method: System.Boolean Type::IsInstanceOfType(System.Object o)
    bool IsInstanceOfType(::Il2CppObject* o);
    // protected override System.Boolean IsMarshalByRefImpl()
    // Offset: 0x458BCA8
    // Implemented from: System.Type
    // Base method: System.Boolean Type::IsMarshalByRefImpl()
    bool IsMarshalByRefImpl();
    // public override System.Boolean get_IsSerializable()
    // Offset: 0x458BCF4
    // Implemented from: System.Type
    // Base method: System.Boolean Type::get_IsSerializable()
    bool get_IsSerializable();
    // public override System.Boolean IsSubclassOf(System.Type c)
    // Offset: 0x458BD40
    // Implemented from: System.Type
    // Base method: System.Boolean Type::IsSubclassOf(System.Type c)
    bool IsSubclassOf(::System::Type* c);
    // protected override System.Boolean IsValueTypeImpl()
    // Offset: 0x458BD8C
    // Implemented from: System.Type
    // Base method: System.Boolean Type::IsValueTypeImpl()
    bool IsValueTypeImpl();
    // public override System.RuntimeTypeHandle get_TypeHandle()
    // Offset: 0x458BDD8
    // Implemented from: System.Type
    // Base method: System.RuntimeTypeHandle Type::get_TypeHandle()
    ::System::RuntimeTypeHandle get_TypeHandle();
    // protected System.Void .ctor()
    // Offset: 0x458A45C
    // Implemented from: System.Type
    // Base method: System.Void Type::.ctor()
    // Base method: System.Void MemberInfo::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SignatureType* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::SignatureType::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SignatureType*, creationType>()));
    }
  }; // System.Reflection.SignatureType
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Reflection::SignatureType::get_ElementType
// Il2CppName: get_ElementType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Reflection::SignatureType* (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::get_ElementType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "get_ElementType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::get_IsSignatureType
// Il2CppName: get_IsSignatureType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::get_IsSignatureType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "get_IsSignatureType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::HasElementTypeImpl
// Il2CppName: HasElementTypeImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::HasElementTypeImpl)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "HasElementTypeImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::IsArrayImpl
// Il2CppName: IsArrayImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::IsArrayImpl)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "IsArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::get_IsSZArray
// Il2CppName: get_IsSZArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::get_IsSZArray)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "get_IsSZArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::get_IsVariableBoundArray
// Il2CppName: get_IsVariableBoundArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::get_IsVariableBoundArray)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "get_IsVariableBoundArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::IsByRefImpl
// Il2CppName: IsByRefImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::IsByRefImpl)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "IsByRefImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::IsPointerImpl
// Il2CppName: IsPointerImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::IsPointerImpl)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "IsPointerImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::get_IsGenericType
// Il2CppName: get_IsGenericType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::get_IsGenericType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "get_IsGenericType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::get_IsGenericTypeDefinition
// Il2CppName: get_IsGenericTypeDefinition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::get_IsGenericTypeDefinition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "get_IsGenericTypeDefinition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::get_IsConstructedGenericType
// Il2CppName: get_IsConstructedGenericType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::get_IsConstructedGenericType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "get_IsConstructedGenericType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::get_IsGenericParameter
// Il2CppName: get_IsGenericParameter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::get_IsGenericParameter)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "get_IsGenericParameter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::get_IsGenericMethodParameter
// Il2CppName: get_IsGenericMethodParameter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::get_IsGenericMethodParameter)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "get_IsGenericMethodParameter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::get_ContainsGenericParameters
// Il2CppName: get_ContainsGenericParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::get_ContainsGenericParameters)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "get_ContainsGenericParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::get_MemberType
// Il2CppName: get_MemberType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Reflection::MemberTypes (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::get_MemberType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "get_MemberType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::MakeArrayType
// Il2CppName: MakeArrayType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Type* (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::MakeArrayType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "MakeArrayType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::MakeArrayType
// Il2CppName: MakeArrayType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Type* (System::Reflection::SignatureType::*)(int)>(&System::Reflection::SignatureType::MakeArrayType)> {
  static const MethodInfo* get() {
    static auto* rank = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "MakeArrayType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rank});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::MakeByRefType
// Il2CppName: MakeByRefType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Type* (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::MakeByRefType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "MakeByRefType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::MakePointerType
// Il2CppName: MakePointerType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Type* (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::MakePointerType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "MakePointerType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::MakeGenericType
// Il2CppName: MakeGenericType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Type* (System::Reflection::SignatureType::*)(::ArrayW<::System::Type*>)>(&System::Reflection::SignatureType::MakeGenericType)> {
  static const MethodInfo* get() {
    static auto* typeArguments = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Type"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "MakeGenericType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{typeArguments});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::GetElementType
// Il2CppName: GetElementType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Type* (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::GetElementType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "GetElementType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::GetArrayRank
// Il2CppName: GetArrayRank
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::GetArrayRank)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "GetArrayRank", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::GetGenericTypeDefinition
// Il2CppName: GetGenericTypeDefinition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Type* (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::GetGenericTypeDefinition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "GetGenericTypeDefinition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::get_GenericTypeArguments
// Il2CppName: get_GenericTypeArguments
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::System::Type*> (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::get_GenericTypeArguments)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "get_GenericTypeArguments", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::GetGenericArguments
// Il2CppName: GetGenericArguments
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::System::Type*> (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::GetGenericArguments)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "GetGenericArguments", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::get_GenericParameterPosition
// Il2CppName: get_GenericParameterPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::get_GenericParameterPosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "get_GenericParameterPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::get_UnderlyingSystemType
// Il2CppName: get_UnderlyingSystemType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Type* (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::get_UnderlyingSystemType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "get_UnderlyingSystemType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::get_Name
// Il2CppName: get_Name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::get_Name)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "get_Name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::get_Namespace
// Il2CppName: get_Namespace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::get_Namespace)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "get_Namespace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::get_FullName
// Il2CppName: get_FullName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::get_FullName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "get_FullName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::get_AssemblyQualifiedName
// Il2CppName: get_AssemblyQualifiedName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::get_AssemblyQualifiedName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "get_AssemblyQualifiedName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::get_Assembly
// Il2CppName: get_Assembly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Reflection::Assembly* (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::get_Assembly)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "get_Assembly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::get_Module
// Il2CppName: get_Module
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Reflection::Module* (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::get_Module)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "get_Module", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::get_ReflectedType
// Il2CppName: get_ReflectedType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Type* (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::get_ReflectedType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "get_ReflectedType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::get_BaseType
// Il2CppName: get_BaseType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Type* (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::get_BaseType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "get_BaseType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::GetInterfaces
// Il2CppName: GetInterfaces
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::System::Type*> (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::GetInterfaces)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "GetInterfaces", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::IsAssignableFrom
// Il2CppName: IsAssignableFrom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Reflection::SignatureType::*)(::System::Type*)>(&System::Reflection::SignatureType::IsAssignableFrom)> {
  static const MethodInfo* get() {
    static auto* c = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "IsAssignableFrom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{c});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::get_MetadataToken
// Il2CppName: get_MetadataToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::get_MetadataToken)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "get_MetadataToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::get_DeclaringType
// Il2CppName: get_DeclaringType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Type* (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::get_DeclaringType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "get_DeclaringType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::get_DeclaringMethod
// Il2CppName: get_DeclaringMethod
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Reflection::MethodBase* (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::get_DeclaringMethod)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "get_DeclaringMethod", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::GetGenericParameterConstraints
// Il2CppName: GetGenericParameterConstraints
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::System::Type*> (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::GetGenericParameterConstraints)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "GetGenericParameterConstraints", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::get_GenericParameterAttributes
// Il2CppName: get_GenericParameterAttributes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Reflection::GenericParameterAttributes (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::get_GenericParameterAttributes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "get_GenericParameterAttributes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::IsEnumDefined
// Il2CppName: IsEnumDefined
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Reflection::SignatureType::*)(::Il2CppObject*)>(&System::Reflection::SignatureType::IsEnumDefined)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "IsEnumDefined", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::GetEnumName
// Il2CppName: GetEnumName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Reflection::SignatureType::*)(::Il2CppObject*)>(&System::Reflection::SignatureType::GetEnumName)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "GetEnumName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::GetEnumNames
// Il2CppName: GetEnumNames
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::GetEnumNames)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "GetEnumNames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::GetEnumUnderlyingType
// Il2CppName: GetEnumUnderlyingType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Type* (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::GetEnumUnderlyingType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "GetEnumUnderlyingType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::GetEnumValues
// Il2CppName: GetEnumValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Array* (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::GetEnumValues)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "GetEnumValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::get_GUID
// Il2CppName: get_GUID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Guid (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::get_GUID)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "get_GUID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::GetTypeCodeImpl
// Il2CppName: GetTypeCodeImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::TypeCode (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::GetTypeCodeImpl)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "GetTypeCodeImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::GetAttributeFlagsImpl
// Il2CppName: GetAttributeFlagsImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Reflection::TypeAttributes (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::GetAttributeFlagsImpl)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "GetAttributeFlagsImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::GetConstructors
// Il2CppName: GetConstructors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::System::Reflection::ConstructorInfo*> (System::Reflection::SignatureType::*)(::System::Reflection::BindingFlags)>(&System::Reflection::SignatureType::GetConstructors)> {
  static const MethodInfo* get() {
    static auto* bindingAttr = &::il2cpp_utils::GetClassFromName("System.Reflection", "BindingFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "GetConstructors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bindingAttr});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::GetEvent
// Il2CppName: GetEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Reflection::EventInfo* (System::Reflection::SignatureType::*)(::StringW, ::System::Reflection::BindingFlags)>(&System::Reflection::SignatureType::GetEvent)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* bindingAttr = &::il2cpp_utils::GetClassFromName("System.Reflection", "BindingFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "GetEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, bindingAttr});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::GetEvents
// Il2CppName: GetEvents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::System::Reflection::EventInfo*> (System::Reflection::SignatureType::*)(::System::Reflection::BindingFlags)>(&System::Reflection::SignatureType::GetEvents)> {
  static const MethodInfo* get() {
    static auto* bindingAttr = &::il2cpp_utils::GetClassFromName("System.Reflection", "BindingFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "GetEvents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bindingAttr});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::GetField
// Il2CppName: GetField
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Reflection::FieldInfo* (System::Reflection::SignatureType::*)(::StringW, ::System::Reflection::BindingFlags)>(&System::Reflection::SignatureType::GetField)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* bindingAttr = &::il2cpp_utils::GetClassFromName("System.Reflection", "BindingFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "GetField", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, bindingAttr});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::GetFields
// Il2CppName: GetFields
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::System::Reflection::FieldInfo*> (System::Reflection::SignatureType::*)(::System::Reflection::BindingFlags)>(&System::Reflection::SignatureType::GetFields)> {
  static const MethodInfo* get() {
    static auto* bindingAttr = &::il2cpp_utils::GetClassFromName("System.Reflection", "BindingFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "GetFields", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bindingAttr});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::GetMembers
// Il2CppName: GetMembers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::System::Reflection::MemberInfo*> (System::Reflection::SignatureType::*)(::System::Reflection::BindingFlags)>(&System::Reflection::SignatureType::GetMembers)> {
  static const MethodInfo* get() {
    static auto* bindingAttr = &::il2cpp_utils::GetClassFromName("System.Reflection", "BindingFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "GetMembers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bindingAttr});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::GetMethods
// Il2CppName: GetMethods
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::System::Reflection::MethodInfo*> (System::Reflection::SignatureType::*)(::System::Reflection::BindingFlags)>(&System::Reflection::SignatureType::GetMethods)> {
  static const MethodInfo* get() {
    static auto* bindingAttr = &::il2cpp_utils::GetClassFromName("System.Reflection", "BindingFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "GetMethods", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bindingAttr});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::GetNestedType
// Il2CppName: GetNestedType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Type* (System::Reflection::SignatureType::*)(::StringW, ::System::Reflection::BindingFlags)>(&System::Reflection::SignatureType::GetNestedType)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* bindingAttr = &::il2cpp_utils::GetClassFromName("System.Reflection", "BindingFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "GetNestedType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, bindingAttr});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::GetNestedTypes
// Il2CppName: GetNestedTypes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::System::Type*> (System::Reflection::SignatureType::*)(::System::Reflection::BindingFlags)>(&System::Reflection::SignatureType::GetNestedTypes)> {
  static const MethodInfo* get() {
    static auto* bindingAttr = &::il2cpp_utils::GetClassFromName("System.Reflection", "BindingFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "GetNestedTypes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bindingAttr});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::GetProperties
// Il2CppName: GetProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::System::Reflection::PropertyInfo*> (System::Reflection::SignatureType::*)(::System::Reflection::BindingFlags)>(&System::Reflection::SignatureType::GetProperties)> {
  static const MethodInfo* get() {
    static auto* bindingAttr = &::il2cpp_utils::GetClassFromName("System.Reflection", "BindingFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "GetProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bindingAttr});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::InvokeMember
// Il2CppName: InvokeMember
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Reflection::SignatureType::*)(::StringW, ::System::Reflection::BindingFlags, ::System::Reflection::Binder*, ::Il2CppObject*, ::ArrayW<::Il2CppObject*>, ::ArrayW<::System::Reflection::ParameterModifier>, ::System::Globalization::CultureInfo*, ::ArrayW<::StringW>)>(&System::Reflection::SignatureType::InvokeMember)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* invokeAttr = &::il2cpp_utils::GetClassFromName("System.Reflection", "BindingFlags")->byval_arg;
    static auto* binder = &::il2cpp_utils::GetClassFromName("System.Reflection", "Binder")->byval_arg;
    static auto* target = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* args = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Object"), 1)->byval_arg;
    static auto* modifiers = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System.Reflection", "ParameterModifier"), 1)->byval_arg;
    static auto* culture = &::il2cpp_utils::GetClassFromName("System.Globalization", "CultureInfo")->byval_arg;
    static auto* namedParameters = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "InvokeMember", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, invokeAttr, binder, target, args, modifiers, culture, namedParameters});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::GetMethodImpl
// Il2CppName: GetMethodImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Reflection::MethodInfo* (System::Reflection::SignatureType::*)(::StringW, ::System::Reflection::BindingFlags, ::System::Reflection::Binder*, ::System::Reflection::CallingConventions, ::ArrayW<::System::Type*>, ::ArrayW<::System::Reflection::ParameterModifier>)>(&System::Reflection::SignatureType::GetMethodImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* bindingAttr = &::il2cpp_utils::GetClassFromName("System.Reflection", "BindingFlags")->byval_arg;
    static auto* binder = &::il2cpp_utils::GetClassFromName("System.Reflection", "Binder")->byval_arg;
    static auto* callConvention = &::il2cpp_utils::GetClassFromName("System.Reflection", "CallingConventions")->byval_arg;
    static auto* types = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Type"), 1)->byval_arg;
    static auto* modifiers = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System.Reflection", "ParameterModifier"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "GetMethodImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, bindingAttr, binder, callConvention, types, modifiers});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::GetPropertyImpl
// Il2CppName: GetPropertyImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Reflection::PropertyInfo* (System::Reflection::SignatureType::*)(::StringW, ::System::Reflection::BindingFlags, ::System::Reflection::Binder*, ::System::Type*, ::ArrayW<::System::Type*>, ::ArrayW<::System::Reflection::ParameterModifier>)>(&System::Reflection::SignatureType::GetPropertyImpl)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* bindingAttr = &::il2cpp_utils::GetClassFromName("System.Reflection", "BindingFlags")->byval_arg;
    static auto* binder = &::il2cpp_utils::GetClassFromName("System.Reflection", "Binder")->byval_arg;
    static auto* returnType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* types = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Type"), 1)->byval_arg;
    static auto* modifiers = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System.Reflection", "ParameterModifier"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "GetPropertyImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, bindingAttr, binder, returnType, types, modifiers});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::GetMember
// Il2CppName: GetMember
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::System::Reflection::MemberInfo*> (System::Reflection::SignatureType::*)(::StringW, ::System::Reflection::BindingFlags)>(&System::Reflection::SignatureType::GetMember)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* bindingAttr = &::il2cpp_utils::GetClassFromName("System.Reflection", "BindingFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "GetMember", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, bindingAttr});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::GetMember
// Il2CppName: GetMember
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::System::Reflection::MemberInfo*> (System::Reflection::SignatureType::*)(::StringW, ::System::Reflection::MemberTypes, ::System::Reflection::BindingFlags)>(&System::Reflection::SignatureType::GetMember)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* type = &::il2cpp_utils::GetClassFromName("System.Reflection", "MemberTypes")->byval_arg;
    static auto* bindingAttr = &::il2cpp_utils::GetClassFromName("System.Reflection", "BindingFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "GetMember", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, type, bindingAttr});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::GetCustomAttributes
// Il2CppName: GetCustomAttributes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Il2CppObject*> (System::Reflection::SignatureType::*)(bool)>(&System::Reflection::SignatureType::GetCustomAttributes)> {
  static const MethodInfo* get() {
    static auto* inherit = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "GetCustomAttributes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{inherit});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::GetCustomAttributes
// Il2CppName: GetCustomAttributes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Il2CppObject*> (System::Reflection::SignatureType::*)(::System::Type*, bool)>(&System::Reflection::SignatureType::GetCustomAttributes)> {
  static const MethodInfo* get() {
    static auto* attributeType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* inherit = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "GetCustomAttributes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{attributeType, inherit});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::IsDefined
// Il2CppName: IsDefined
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Reflection::SignatureType::*)(::System::Type*, bool)>(&System::Reflection::SignatureType::IsDefined)> {
  static const MethodInfo* get() {
    static auto* attributeType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* inherit = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "IsDefined", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{attributeType, inherit});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::GetCustomAttributesData
// Il2CppName: GetCustomAttributesData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IList_1<::System::Reflection::CustomAttributeData*>* (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::GetCustomAttributesData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "GetCustomAttributesData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::GetInterface
// Il2CppName: GetInterface
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Type* (System::Reflection::SignatureType::*)(::StringW, bool)>(&System::Reflection::SignatureType::GetInterface)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* ignoreCase = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "GetInterface", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, ignoreCase});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::GetConstructorImpl
// Il2CppName: GetConstructorImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Reflection::ConstructorInfo* (System::Reflection::SignatureType::*)(::System::Reflection::BindingFlags, ::System::Reflection::Binder*, ::System::Reflection::CallingConventions, ::ArrayW<::System::Type*>, ::ArrayW<::System::Reflection::ParameterModifier>)>(&System::Reflection::SignatureType::GetConstructorImpl)> {
  static const MethodInfo* get() {
    static auto* bindingAttr = &::il2cpp_utils::GetClassFromName("System.Reflection", "BindingFlags")->byval_arg;
    static auto* binder = &::il2cpp_utils::GetClassFromName("System.Reflection", "Binder")->byval_arg;
    static auto* callConvention = &::il2cpp_utils::GetClassFromName("System.Reflection", "CallingConventions")->byval_arg;
    static auto* types = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Type"), 1)->byval_arg;
    static auto* modifiers = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System.Reflection", "ParameterModifier"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "GetConstructorImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bindingAttr, binder, callConvention, types, modifiers});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::IsCOMObjectImpl
// Il2CppName: IsCOMObjectImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::IsCOMObjectImpl)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "IsCOMObjectImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::IsPrimitiveImpl
// Il2CppName: IsPrimitiveImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::IsPrimitiveImpl)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "IsPrimitiveImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::get_CustomAttributes
// Il2CppName: get_CustomAttributes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<::System::Reflection::CustomAttributeData*>* (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::get_CustomAttributes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "get_CustomAttributes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::FindInterfaces
// Il2CppName: FindInterfaces
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::System::Type*> (System::Reflection::SignatureType::*)(::System::Reflection::TypeFilter*, ::Il2CppObject*)>(&System::Reflection::SignatureType::FindInterfaces)> {
  static const MethodInfo* get() {
    static auto* filter = &::il2cpp_utils::GetClassFromName("System.Reflection", "TypeFilter")->byval_arg;
    static auto* filterCriteria = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "FindInterfaces", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{filter, filterCriteria});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::IsContextfulImpl
// Il2CppName: IsContextfulImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::IsContextfulImpl)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "IsContextfulImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::get_IsEnum
// Il2CppName: get_IsEnum
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::get_IsEnum)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "get_IsEnum", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::IsEquivalentTo
// Il2CppName: IsEquivalentTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Reflection::SignatureType::*)(::System::Type*)>(&System::Reflection::SignatureType::IsEquivalentTo)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "IsEquivalentTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::IsInstanceOfType
// Il2CppName: IsInstanceOfType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Reflection::SignatureType::*)(::Il2CppObject*)>(&System::Reflection::SignatureType::IsInstanceOfType)> {
  static const MethodInfo* get() {
    static auto* o = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "IsInstanceOfType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{o});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::IsMarshalByRefImpl
// Il2CppName: IsMarshalByRefImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::IsMarshalByRefImpl)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "IsMarshalByRefImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::get_IsSerializable
// Il2CppName: get_IsSerializable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::get_IsSerializable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "get_IsSerializable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::IsSubclassOf
// Il2CppName: IsSubclassOf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Reflection::SignatureType::*)(::System::Type*)>(&System::Reflection::SignatureType::IsSubclassOf)> {
  static const MethodInfo* get() {
    static auto* c = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "IsSubclassOf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{c});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::IsValueTypeImpl
// Il2CppName: IsValueTypeImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::IsValueTypeImpl)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "IsValueTypeImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::get_TypeHandle
// Il2CppName: get_TypeHandle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::RuntimeTypeHandle (System::Reflection::SignatureType::*)()>(&System::Reflection::SignatureType::get_TypeHandle)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::SignatureType*), "get_TypeHandle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Reflection::SignatureType::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
