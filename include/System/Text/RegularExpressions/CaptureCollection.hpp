// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Text::RegularExpressions
namespace System::Text::RegularExpressions {
  // Forward declaring type: Group
  class Group;
  // Forward declaring type: Capture
  class Capture;
}
// Completed forward declares
// Type namespace: System.Text.RegularExpressions
namespace System::Text::RegularExpressions {
  // Forward declaring type: CaptureCollection
  class CaptureCollection;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Text::RegularExpressions::CaptureCollection);
DEFINE_IL2CPP_ARG_TYPE(::System::Text::RegularExpressions::CaptureCollection*, "System.Text.RegularExpressions", "CaptureCollection");
// Type namespace: System.Text.RegularExpressions
namespace System::Text::RegularExpressions {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: System.Text.RegularExpressions.CaptureCollection
  // [TokenAttribute] Offset: FFFFFFFF
  // [DefaultMemberAttribute] Offset: FFFFFFFF
  // [DebuggerTypeProxyAttribute] Offset: FFFFFFFF
  // [DebuggerDisplayAttribute] Offset: FFFFFFFF
  class CaptureCollection : public ::Il2CppObject {
    public:
    public:
    // private readonly System.Text.RegularExpressions.Group _group
    // Size: 0x8
    // Offset: 0x10
    ::System::Text::RegularExpressions::Group* group;
    // Field size check
    static_assert(sizeof(::System::Text::RegularExpressions::Group*) == 0x8);
    // private readonly System.Int32 _capcount
    // Size: 0x4
    // Offset: 0x18
    int capcount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: capcount and: captures
    char __padding1[0x4] = {};
    // private System.Text.RegularExpressions.Capture[] _captures
    // Size: 0x8
    // Offset: 0x20
    ::ArrayW<::System::Text::RegularExpressions::Capture*> captures;
    // Field size check
    static_assert(sizeof(::ArrayW<::System::Text::RegularExpressions::Capture*>) == 0x8);
    public:
    // Get instance field reference: private readonly System.Text.RegularExpressions.Group _group
    [[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::Group*& dyn__group();
    // Get instance field reference: private readonly System.Int32 _capcount
    [[deprecated("Use field access instead!")]] int& dyn__capcount();
    // Get instance field reference: private System.Text.RegularExpressions.Capture[] _captures
    [[deprecated("Use field access instead!")]] ::ArrayW<::System::Text::RegularExpressions::Capture*>& dyn__captures();
  }; // System.Text.RegularExpressions.CaptureCollection
  #pragma pack(pop)
  static check_size<sizeof(CaptureCollection), 32 + sizeof(::ArrayW<::System::Text::RegularExpressions::Capture*>)> __System_Text_RegularExpressions_CaptureCollectionSizeCheck;
  static_assert(sizeof(CaptureCollection) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
