// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GorillaTagScripts
namespace GorillaTagScripts {
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Material
  class Material;
  // Forward declaring type: Texture2D
  class Texture2D;
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: System::Reflection
namespace System::Reflection {
  // Forward declaring type: FieldInfo
  class FieldInfo;
}
// Completed forward declares
// Type namespace: GorillaTagScripts
namespace GorillaTagScripts {
  // Forward declaring type: GorillaCaveCrystalSetup
  class GorillaCaveCrystalSetup;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GorillaTagScripts::GorillaCaveCrystalSetup);
DEFINE_IL2CPP_ARG_TYPE(::GorillaTagScripts::GorillaCaveCrystalSetup*, "GorillaTagScripts", "GorillaCaveCrystalSetup");
// Type namespace: GorillaTagScripts
namespace GorillaTagScripts {
  // Size: 0x90
  #pragma pack(push, 1)
  // Autogenerated type: GorillaTagScripts.GorillaCaveCrystalSetup
  // [TokenAttribute] Offset: FFFFFFFF
  // [CreateAssetMenuAttribute] Offset: FFFFFFFF
  class GorillaCaveCrystalSetup : public ::UnityEngine::ScriptableObject {
    public:
    // Nested type: ::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef
    class CrystalDef;
    // Nested type: ::GorillaTagScripts::GorillaCaveCrystalSetup::$$c
    class $$c;
    public:
    // public UnityEngine.Material SharedBase
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::Material* SharedBase;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    // public UnityEngine.Texture2D CrystalAlbedo
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::Texture2D* CrystalAlbedo;
    // Field size check
    static_assert(sizeof(::UnityEngine::Texture2D*) == 0x8);
    // public UnityEngine.Texture2D CrystalDarkAlbedo
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::Texture2D* CrystalDarkAlbedo;
    // Field size check
    static_assert(sizeof(::UnityEngine::Texture2D*) == 0x8);
    // public GorillaTagScripts.GorillaCaveCrystalSetup/CrystalDef Red
    // Size: 0x8
    // Offset: 0x30
    ::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef* Red;
    // Field size check
    static_assert(sizeof(::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef*) == 0x8);
    // public GorillaTagScripts.GorillaCaveCrystalSetup/CrystalDef Orange
    // Size: 0x8
    // Offset: 0x38
    ::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef* Orange;
    // Field size check
    static_assert(sizeof(::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef*) == 0x8);
    // public GorillaTagScripts.GorillaCaveCrystalSetup/CrystalDef Yellow
    // Size: 0x8
    // Offset: 0x40
    ::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef* Yellow;
    // Field size check
    static_assert(sizeof(::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef*) == 0x8);
    // public GorillaTagScripts.GorillaCaveCrystalSetup/CrystalDef Green
    // Size: 0x8
    // Offset: 0x48
    ::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef* Green;
    // Field size check
    static_assert(sizeof(::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef*) == 0x8);
    // public GorillaTagScripts.GorillaCaveCrystalSetup/CrystalDef Teal
    // Size: 0x8
    // Offset: 0x50
    ::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef* Teal;
    // Field size check
    static_assert(sizeof(::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef*) == 0x8);
    // public GorillaTagScripts.GorillaCaveCrystalSetup/CrystalDef DarkBlue
    // Size: 0x8
    // Offset: 0x58
    ::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef* DarkBlue;
    // Field size check
    static_assert(sizeof(::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef*) == 0x8);
    // public GorillaTagScripts.GorillaCaveCrystalSetup/CrystalDef Pink
    // Size: 0x8
    // Offset: 0x60
    ::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef* Pink;
    // Field size check
    static_assert(sizeof(::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef*) == 0x8);
    // public GorillaTagScripts.GorillaCaveCrystalSetup/CrystalDef Dark
    // Size: 0x8
    // Offset: 0x68
    ::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef* Dark;
    // Field size check
    static_assert(sizeof(::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef*) == 0x8);
    // public GorillaTagScripts.GorillaCaveCrystalSetup/CrystalDef DarkLight
    // Size: 0x8
    // Offset: 0x70
    ::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef* DarkLight;
    // Field size check
    static_assert(sizeof(::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef*) == 0x8);
    // public GorillaTagScripts.GorillaCaveCrystalSetup/CrystalDef DarkLightUnderWater
    // Size: 0x8
    // Offset: 0x78
    ::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef* DarkLightUnderWater;
    // Field size check
    static_assert(sizeof(::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef*) == 0x8);
    // private System.String _notes
    // Size: 0x8
    // Offset: 0x80
    ::StringW notes;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private UnityEngine.GameObject _target
    // Size: 0x8
    // Offset: 0x88
    ::UnityEngine::GameObject* target;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get static field: static private GorillaTagScripts.GorillaCaveCrystalSetup gInstance
    static ::GorillaTagScripts::GorillaCaveCrystalSetup* _get_gInstance();
    // Set static field: static private GorillaTagScripts.GorillaCaveCrystalSetup gInstance
    static void _set_gInstance(::GorillaTagScripts::GorillaCaveCrystalSetup* value);
    // Get static field: static private GorillaTagScripts.GorillaCaveCrystalSetup/CrystalDef[] gCrystalDefs
    static ::ArrayW<::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef*> _get_gCrystalDefs();
    // Set static field: static private GorillaTagScripts.GorillaCaveCrystalSetup/CrystalDef[] gCrystalDefs
    static void _set_gCrystalDefs(::ArrayW<::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef*> value);
    // Get instance field reference: public UnityEngine.Material SharedBase
    [[deprecated("Use field access instead!")]] ::UnityEngine::Material*& dyn_SharedBase();
    // Get instance field reference: public UnityEngine.Texture2D CrystalAlbedo
    [[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& dyn_CrystalAlbedo();
    // Get instance field reference: public UnityEngine.Texture2D CrystalDarkAlbedo
    [[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& dyn_CrystalDarkAlbedo();
    // Get instance field reference: public GorillaTagScripts.GorillaCaveCrystalSetup/CrystalDef Red
    [[deprecated("Use field access instead!")]] ::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef*& dyn_Red();
    // Get instance field reference: public GorillaTagScripts.GorillaCaveCrystalSetup/CrystalDef Orange
    [[deprecated("Use field access instead!")]] ::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef*& dyn_Orange();
    // Get instance field reference: public GorillaTagScripts.GorillaCaveCrystalSetup/CrystalDef Yellow
    [[deprecated("Use field access instead!")]] ::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef*& dyn_Yellow();
    // Get instance field reference: public GorillaTagScripts.GorillaCaveCrystalSetup/CrystalDef Green
    [[deprecated("Use field access instead!")]] ::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef*& dyn_Green();
    // Get instance field reference: public GorillaTagScripts.GorillaCaveCrystalSetup/CrystalDef Teal
    [[deprecated("Use field access instead!")]] ::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef*& dyn_Teal();
    // Get instance field reference: public GorillaTagScripts.GorillaCaveCrystalSetup/CrystalDef DarkBlue
    [[deprecated("Use field access instead!")]] ::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef*& dyn_DarkBlue();
    // Get instance field reference: public GorillaTagScripts.GorillaCaveCrystalSetup/CrystalDef Pink
    [[deprecated("Use field access instead!")]] ::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef*& dyn_Pink();
    // Get instance field reference: public GorillaTagScripts.GorillaCaveCrystalSetup/CrystalDef Dark
    [[deprecated("Use field access instead!")]] ::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef*& dyn_Dark();
    // Get instance field reference: public GorillaTagScripts.GorillaCaveCrystalSetup/CrystalDef DarkLight
    [[deprecated("Use field access instead!")]] ::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef*& dyn_DarkLight();
    // Get instance field reference: public GorillaTagScripts.GorillaCaveCrystalSetup/CrystalDef DarkLightUnderWater
    [[deprecated("Use field access instead!")]] ::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef*& dyn_DarkLightUnderWater();
    // Get instance field reference: private System.String _notes
    [[deprecated("Use field access instead!")]] ::StringW& dyn__notes();
    // Get instance field reference: private UnityEngine.GameObject _target
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn__target();
    // static public GorillaTagScripts.GorillaCaveCrystalSetup get_Instance()
    // Offset: 0x280CDF8
    static ::GorillaTagScripts::GorillaCaveCrystalSetup* get_Instance();
    // private System.Void OnEnable()
    // Offset: 0x280CE40
    void OnEnable();
    // public GorillaTagScripts.GorillaCaveCrystalSetup/CrystalDef[] GetCrystalDefs()
    // Offset: 0x280CEF4
    ::ArrayW<::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef*> GetCrystalDefs();
    // private System.Void ProcessTarget()
    // Offset: 0x280D0EC
    void ProcessTarget();
    // public System.Void .ctor()
    // Offset: 0x280D294
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GorillaCaveCrystalSetup* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaCaveCrystalSetup::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GorillaCaveCrystalSetup*, creationType>()));
    }
    // private GorillaTagScripts.GorillaCaveCrystalSetup/CrystalDef <GetCrystalDefs>b__19_1(System.Reflection.FieldInfo f)
    // Offset: 0x280D29C
    ::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef* $GetCrystalDefs$b__19_1(::System::Reflection::FieldInfo* f);
  }; // GorillaTagScripts.GorillaCaveCrystalSetup
  #pragma pack(pop)
  static check_size<sizeof(GorillaCaveCrystalSetup), 136 + sizeof(::UnityEngine::GameObject*)> __GorillaTagScripts_GorillaCaveCrystalSetupSizeCheck;
  static_assert(sizeof(GorillaCaveCrystalSetup) == 0x90);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GorillaTagScripts::GorillaCaveCrystalSetup::get_Instance
// Il2CppName: get_Instance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GorillaTagScripts::GorillaCaveCrystalSetup* (*)()>(&GorillaTagScripts::GorillaCaveCrystalSetup::get_Instance)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTagScripts::GorillaCaveCrystalSetup*), "get_Instance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaTagScripts::GorillaCaveCrystalSetup::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaTagScripts::GorillaCaveCrystalSetup::*)()>(&GorillaTagScripts::GorillaCaveCrystalSetup::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTagScripts::GorillaCaveCrystalSetup*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaTagScripts::GorillaCaveCrystalSetup::GetCrystalDefs
// Il2CppName: GetCrystalDefs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef*> (GorillaTagScripts::GorillaCaveCrystalSetup::*)()>(&GorillaTagScripts::GorillaCaveCrystalSetup::GetCrystalDefs)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTagScripts::GorillaCaveCrystalSetup*), "GetCrystalDefs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaTagScripts::GorillaCaveCrystalSetup::ProcessTarget
// Il2CppName: ProcessTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaTagScripts::GorillaCaveCrystalSetup::*)()>(&GorillaTagScripts::GorillaCaveCrystalSetup::ProcessTarget)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTagScripts::GorillaCaveCrystalSetup*), "ProcessTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaTagScripts::GorillaCaveCrystalSetup::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GorillaTagScripts::GorillaCaveCrystalSetup::$GetCrystalDefs$b__19_1
// Il2CppName: <GetCrystalDefs>b__19_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef* (GorillaTagScripts::GorillaCaveCrystalSetup::*)(::System::Reflection::FieldInfo*)>(&GorillaTagScripts::GorillaCaveCrystalSetup::$GetCrystalDefs$b__19_1)> {
  static const MethodInfo* get() {
    static auto* f = &::il2cpp_utils::GetClassFromName("System.Reflection", "FieldInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaTagScripts::GorillaCaveCrystalSetup*), "<GetCrystalDefs>b__19_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{f});
  }
};
