// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: GorillaPressableButton
#include "GlobalNamespace/GorillaPressableButton.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
}
// Completed forward declares
// Type namespace: GorillaTagScripts
namespace GorillaTagScripts {
  // Forward declaring type: BuilderOptionButton
  class BuilderOptionButton;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GorillaTagScripts::BuilderOptionButton);
DEFINE_IL2CPP_ARG_TYPE(::GorillaTagScripts::BuilderOptionButton*, "GorillaTagScripts", "BuilderOptionButton");
// Type namespace: GorillaTagScripts
namespace GorillaTagScripts {
  // Size: 0x78
  #pragma pack(push, 1)
  // Autogenerated type: GorillaTagScripts.BuilderOptionButton
  // [TokenAttribute] Offset: FFFFFFFF
  class BuilderOptionButton : public ::GlobalNamespace::GorillaPressableButton {
    public:
    public:
    // private System.Action`2<GorillaTagScripts.BuilderOptionButton,System.Boolean> onPressed
    // Size: 0x8
    // Offset: 0x70
    ::System::Action_2<::GorillaTagScripts::BuilderOptionButton*, bool>* onPressed;
    // Field size check
    static_assert(sizeof(::System::Action_2<::GorillaTagScripts::BuilderOptionButton*, bool>*) == 0x8);
    public:
    // Get instance field reference: private System.Action`2<GorillaTagScripts.BuilderOptionButton,System.Boolean> onPressed
    [[deprecated("Use field access instead!")]] ::System::Action_2<::GorillaTagScripts::BuilderOptionButton*, bool>*& dyn_onPressed();
    // private System.Void OnDestroy()
    // Offset: 0x27F3DE4
    void OnDestroy();
    // public System.Void Setup(System.Action`2<GorillaTagScripts.BuilderOptionButton,System.Boolean> onPressed)
    // Offset: 0x27F3DE8
    void Setup(::System::Action_2<::GorillaTagScripts::BuilderOptionButton*, bool>* onPressed);
    // public System.Void SetPressed(System.Boolean pressed)
    // Offset: 0x27F3E18
    void SetPressed(bool pressed);
    // public override System.Void Start()
    // Offset: 0x27F3DDC
    // Implemented from: GorillaPressableButton
    // Base method: System.Void GorillaPressableButton::Start()
    void Start();
    // public override System.Void ButtonActivationWithHand(System.Boolean isLeftHand)
    // Offset: 0x27F3DF0
    // Implemented from: GorillaPressableButton
    // Base method: System.Void GorillaPressableButton::ButtonActivationWithHand(System.Boolean isLeftHand)
    void ButtonActivationWithHand(bool isLeftHand);
    // public System.Void .ctor()
    // Offset: 0x27F3E4C
    // Implemented from: GorillaPressableButton
    // Base method: System.Void GorillaPressableButton::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BuilderOptionButton* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderOptionButton::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BuilderOptionButton*, creationType>()));
    }
  }; // GorillaTagScripts.BuilderOptionButton
  #pragma pack(pop)
  static check_size<sizeof(BuilderOptionButton), 112 + sizeof(::System::Action_2<::GorillaTagScripts::BuilderOptionButton*, bool>*)> __GorillaTagScripts_BuilderOptionButtonSizeCheck;
  static_assert(sizeof(BuilderOptionButton) == 0x78);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GorillaTagScripts::BuilderOptionButton::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaTagScripts::BuilderOptionButton::*)()>(&GorillaTagScripts::BuilderOptionButton::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTagScripts::BuilderOptionButton*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaTagScripts::BuilderOptionButton::Setup
// Il2CppName: Setup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaTagScripts::BuilderOptionButton::*)(::System::Action_2<::GorillaTagScripts::BuilderOptionButton*, bool>*)>(&GorillaTagScripts::BuilderOptionButton::Setup)> {
  static const MethodInfo* get() {
    static auto* onPressed = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("GorillaTagScripts", "BuilderOptionButton"), ::il2cpp_utils::GetClassFromName("System", "Boolean")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaTagScripts::BuilderOptionButton*), "Setup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{onPressed});
  }
};
// Writing MetadataGetter for method: GorillaTagScripts::BuilderOptionButton::SetPressed
// Il2CppName: SetPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaTagScripts::BuilderOptionButton::*)(bool)>(&GorillaTagScripts::BuilderOptionButton::SetPressed)> {
  static const MethodInfo* get() {
    static auto* pressed = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaTagScripts::BuilderOptionButton*), "SetPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pressed});
  }
};
// Writing MetadataGetter for method: GorillaTagScripts::BuilderOptionButton::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaTagScripts::BuilderOptionButton::*)()>(&GorillaTagScripts::BuilderOptionButton::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTagScripts::BuilderOptionButton*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaTagScripts::BuilderOptionButton::ButtonActivationWithHand
// Il2CppName: ButtonActivationWithHand
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaTagScripts::BuilderOptionButton::*)(bool)>(&GorillaTagScripts::BuilderOptionButton::ButtonActivationWithHand)> {
  static const MethodInfo* get() {
    static auto* isLeftHand = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaTagScripts::BuilderOptionButton*), "ButtonActivationWithHand", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{isLeftHand});
  }
};
// Writing MetadataGetter for method: GorillaTagScripts::BuilderOptionButton::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
