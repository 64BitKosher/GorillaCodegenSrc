// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: GorillaTagScripts.FlowersManager
#include "GorillaTagScripts/FlowersManager.hpp"
// Including type: GTZone
#include "GlobalNamespace/GTZone.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GorillaTagScripts::FlowersManager::FlowersInZone);
DEFINE_IL2CPP_ARG_TYPE(::GorillaTagScripts::FlowersManager::FlowersInZone*, "GorillaTagScripts", "FlowersManager/FlowersInZone");
// Type namespace: GorillaTagScripts
namespace GorillaTagScripts {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: GorillaTagScripts.FlowersManager/FlowersInZone
  // [TokenAttribute] Offset: FFFFFFFF
  class FlowersManager::FlowersInZone : public ::Il2CppObject {
    public:
    public:
    // public GTZone zone
    // Size: 0x4
    // Offset: 0x10
    ::GlobalNamespace::GTZone zone;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::GTZone) == 0x4);
    // Padding between fields: zone and: sections
    char __padding0[0x4] = {};
    // public System.Collections.Generic.List`1<UnityEngine.GameObject> sections
    // Size: 0x8
    // Offset: 0x18
    ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* sections;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*) == 0x8);
    public:
    // Get instance field reference: public GTZone zone
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::GTZone& dyn_zone();
    // Get instance field reference: public System.Collections.Generic.List`1<UnityEngine.GameObject> sections
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& dyn_sections();
    // public System.Void .ctor()
    // Offset: 0x28085B4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static FlowersManager::FlowersInZone* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FlowersManager::FlowersInZone::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<FlowersManager::FlowersInZone*, creationType>()));
    }
  }; // GorillaTagScripts.FlowersManager/FlowersInZone
  #pragma pack(pop)
  static check_size<sizeof(FlowersManager::FlowersInZone), 24 + sizeof(::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*)> __GorillaTagScripts_FlowersManager_FlowersInZoneSizeCheck;
  static_assert(sizeof(FlowersManager::FlowersInZone) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GorillaTagScripts::FlowersManager::FlowersInZone::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
