// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: GorillaTagScripts
namespace GorillaTagScripts {
  // Forward declaring type: GorillaTimer
  class GorillaTimer;
}
// Completed forward declares
// Type namespace: GorillaTagScripts
namespace GorillaTagScripts {
  // Forward declaring type: GorillaTimerManager
  class GorillaTimerManager;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GorillaTagScripts::GorillaTimerManager);
DEFINE_IL2CPP_ARG_TYPE(::GorillaTagScripts::GorillaTimerManager*, "GorillaTagScripts", "GorillaTimerManager");
// Type namespace: GorillaTagScripts
namespace GorillaTagScripts {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: GorillaTagScripts.GorillaTimerManager
  // [TokenAttribute] Offset: FFFFFFFF
  class GorillaTimerManager : public ::UnityEngine::MonoBehaviour {
    public:
    // Get static field: static public GorillaTagScripts.GorillaTimerManager instance
    static ::GorillaTagScripts::GorillaTimerManager* _get_instance();
    // Set static field: static public GorillaTagScripts.GorillaTimerManager instance
    static void _set_instance(::GorillaTagScripts::GorillaTimerManager* value);
    // Get static field: static public System.Boolean hasInstance
    static bool _get_hasInstance();
    // Set static field: static public System.Boolean hasInstance
    static void _set_hasInstance(bool value);
    // Get static field: static public System.Collections.Generic.List`1<GorillaTagScripts.GorillaTimer> allTimers
    static ::System::Collections::Generic::List_1<::GorillaTagScripts::GorillaTimer*>* _get_allTimers();
    // Set static field: static public System.Collections.Generic.List`1<GorillaTagScripts.GorillaTimer> allTimers
    static void _set_allTimers(::System::Collections::Generic::List_1<::GorillaTagScripts::GorillaTimer*>* value);
    // protected System.Void Awake()
    // Offset: 0x280DAA4
    void Awake();
    // static public System.Void CreateManager()
    // Offset: 0x280DCC4
    static void CreateManager();
    // static private System.Void SetInstance(GorillaTagScripts.GorillaTimerManager manager)
    // Offset: 0x280DBE0
    static void SetInstance(::GorillaTagScripts::GorillaTimerManager* manager);
    // static public System.Void RegisterGorillaTimer(GorillaTagScripts.GorillaTimer gTimer)
    // Offset: 0x280D6F4
    static void RegisterGorillaTimer(::GorillaTagScripts::GorillaTimer* gTimer);
    // static public System.Void UnregisterGorillaTimer(GorillaTagScripts.GorillaTimer gTimer)
    // Offset: 0x280D89C
    static void UnregisterGorillaTimer(::GorillaTagScripts::GorillaTimer* gTimer);
    // public System.Void Update()
    // Offset: 0x280DD84
    void Update();
    // public System.Void .ctor()
    // Offset: 0x280DE50
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GorillaTimerManager* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaTimerManager::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GorillaTimerManager*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x280DE58
    static void _cctor();
  }; // GorillaTagScripts.GorillaTimerManager
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GorillaTagScripts::GorillaTimerManager::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaTagScripts::GorillaTimerManager::*)()>(&GorillaTagScripts::GorillaTimerManager::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTagScripts::GorillaTimerManager*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaTagScripts::GorillaTimerManager::CreateManager
// Il2CppName: CreateManager
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GorillaTagScripts::GorillaTimerManager::CreateManager)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTagScripts::GorillaTimerManager*), "CreateManager", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaTagScripts::GorillaTimerManager::SetInstance
// Il2CppName: SetInstance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::GorillaTagScripts::GorillaTimerManager*)>(&GorillaTagScripts::GorillaTimerManager::SetInstance)> {
  static const MethodInfo* get() {
    static auto* manager = &::il2cpp_utils::GetClassFromName("GorillaTagScripts", "GorillaTimerManager")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaTagScripts::GorillaTimerManager*), "SetInstance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{manager});
  }
};
// Writing MetadataGetter for method: GorillaTagScripts::GorillaTimerManager::RegisterGorillaTimer
// Il2CppName: RegisterGorillaTimer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::GorillaTagScripts::GorillaTimer*)>(&GorillaTagScripts::GorillaTimerManager::RegisterGorillaTimer)> {
  static const MethodInfo* get() {
    static auto* gTimer = &::il2cpp_utils::GetClassFromName("GorillaTagScripts", "GorillaTimer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaTagScripts::GorillaTimerManager*), "RegisterGorillaTimer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gTimer});
  }
};
// Writing MetadataGetter for method: GorillaTagScripts::GorillaTimerManager::UnregisterGorillaTimer
// Il2CppName: UnregisterGorillaTimer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::GorillaTagScripts::GorillaTimer*)>(&GorillaTagScripts::GorillaTimerManager::UnregisterGorillaTimer)> {
  static const MethodInfo* get() {
    static auto* gTimer = &::il2cpp_utils::GetClassFromName("GorillaTagScripts", "GorillaTimer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaTagScripts::GorillaTimerManager*), "UnregisterGorillaTimer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gTimer});
  }
};
// Writing MetadataGetter for method: GorillaTagScripts::GorillaTimerManager::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaTagScripts::GorillaTimerManager::*)()>(&GorillaTagScripts::GorillaTimerManager::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTagScripts::GorillaTimerManager*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaTagScripts::GorillaTimerManager::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GorillaTagScripts::GorillaTimerManager::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GorillaTagScripts::GorillaTimerManager::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTagScripts::GorillaTimerManager*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
