// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: GorillaTagScripts.LurkerGhost
#include "GorillaTagScripts/LurkerGhost.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Photon::Realtime
namespace Photon::Realtime {
  // Forward declaring type: Player
  class Player;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: VRRig
  class VRRig;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GorillaTagScripts::LurkerGhost::$$c__DisplayClass59_0);
DEFINE_IL2CPP_ARG_TYPE(::GorillaTagScripts::LurkerGhost::$$c__DisplayClass59_0*, "GorillaTagScripts", "LurkerGhost/<>c__DisplayClass59_0");
// Type namespace: GorillaTagScripts
namespace GorillaTagScripts {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: GorillaTagScripts.LurkerGhost/<>c__DisplayClass59_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class LurkerGhost::$$c__DisplayClass59_0 : public ::Il2CppObject {
    public:
    public:
    // public Photon.Realtime.Player player
    // Size: 0x8
    // Offset: 0x10
    ::Photon::Realtime::Player* player;
    // Field size check
    static_assert(sizeof(::Photon::Realtime::Player*) == 0x8);
    public:
    // Creating conversion operator: operator ::Photon::Realtime::Player*
    constexpr operator ::Photon::Realtime::Player*() const noexcept {
      return player;
    }
    // Get instance field reference: public Photon.Realtime.Player player
    [[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& dyn_player();
    // public System.Void .ctor()
    // Offset: 0x280FA80
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LurkerGhost::$$c__DisplayClass59_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::$$c__DisplayClass59_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LurkerGhost::$$c__DisplayClass59_0*, creationType>()));
    }
    // System.Boolean <PickPlayer>b__0(VRRig x)
    // Offset: 0x28108B0
    bool $PickPlayer$b__0(::GlobalNamespace::VRRig* x);
  }; // GorillaTagScripts.LurkerGhost/<>c__DisplayClass59_0
  #pragma pack(pop)
  static check_size<sizeof(LurkerGhost::$$c__DisplayClass59_0), 16 + sizeof(::Photon::Realtime::Player*)> __GorillaTagScripts_LurkerGhost_$$c__DisplayClass59_0SizeCheck;
  static_assert(sizeof(LurkerGhost::$$c__DisplayClass59_0) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GorillaTagScripts::LurkerGhost::$$c__DisplayClass59_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GorillaTagScripts::LurkerGhost::$$c__DisplayClass59_0::$PickPlayer$b__0
// Il2CppName: <PickPlayer>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GorillaTagScripts::LurkerGhost::$$c__DisplayClass59_0::*)(::GlobalNamespace::VRRig*)>(&GorillaTagScripts::LurkerGhost::$$c__DisplayClass59_0::$PickPlayer$b__0)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("", "VRRig")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaTagScripts::LurkerGhost::$$c__DisplayClass59_0*), "<PickPlayer>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x});
  }
};
