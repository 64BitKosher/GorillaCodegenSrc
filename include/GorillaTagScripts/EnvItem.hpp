// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: Photon.Pun.IPunInstantiateMagicCallback
#include "Photon/Pun/IPunInstantiateMagicCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Photon::Pun
namespace Photon::Pun {
  // Forward declaring type: PhotonMessageInfo
  struct PhotonMessageInfo;
}
// Completed forward declares
// Type namespace: GorillaTagScripts
namespace GorillaTagScripts {
  // Forward declaring type: EnvItem
  class EnvItem;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GorillaTagScripts::EnvItem);
DEFINE_IL2CPP_ARG_TYPE(::GorillaTagScripts::EnvItem*, "GorillaTagScripts", "EnvItem");
// Type namespace: GorillaTagScripts
namespace GorillaTagScripts {
  // Size: 0x24
  #pragma pack(push, 1)
  // Autogenerated type: GorillaTagScripts.EnvItem
  // [TokenAttribute] Offset: FFFFFFFF
  class EnvItem : public ::UnityEngine::MonoBehaviour/*, public ::Photon::Pun::IPunInstantiateMagicCallback*/ {
    public:
    public:
    // public System.Int32 spawnedByPhotonViewId
    // Size: 0x4
    // Offset: 0x20
    int spawnedByPhotonViewId;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating interface conversion operator: operator ::Photon::Pun::IPunInstantiateMagicCallback
    operator ::Photon::Pun::IPunInstantiateMagicCallback() noexcept {
      return *reinterpret_cast<::Photon::Pun::IPunInstantiateMagicCallback*>(this);
    }
    // Get instance field reference: public System.Int32 spawnedByPhotonViewId
    [[deprecated("Use field access instead!")]] int& dyn_spawnedByPhotonViewId();
    // public System.Void OnEnable()
    // Offset: 0x2806348
    void OnEnable();
    // public System.Void OnDisable()
    // Offset: 0x280634C
    void OnDisable();
    // public System.Void OnPhotonInstantiate(Photon.Pun.PhotonMessageInfo info)
    // Offset: 0x2806350
    void OnPhotonInstantiate(::Photon::Pun::PhotonMessageInfo info);
    // public System.Void .ctor()
    // Offset: 0x28063E4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static EnvItem* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::EnvItem::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<EnvItem*, creationType>()));
    }
  }; // GorillaTagScripts.EnvItem
  #pragma pack(pop)
  static check_size<sizeof(EnvItem), 32 + sizeof(int)> __GorillaTagScripts_EnvItemSizeCheck;
  static_assert(sizeof(EnvItem) == 0x24);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GorillaTagScripts::EnvItem::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaTagScripts::EnvItem::*)()>(&GorillaTagScripts::EnvItem::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTagScripts::EnvItem*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaTagScripts::EnvItem::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaTagScripts::EnvItem::*)()>(&GorillaTagScripts::EnvItem::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTagScripts::EnvItem*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaTagScripts::EnvItem::OnPhotonInstantiate
// Il2CppName: OnPhotonInstantiate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaTagScripts::EnvItem::*)(::Photon::Pun::PhotonMessageInfo)>(&GorillaTagScripts::EnvItem::OnPhotonInstantiate)> {
  static const MethodInfo* get() {
    static auto* info = &::il2cpp_utils::GetClassFromName("Photon.Pun", "PhotonMessageInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaTagScripts::EnvItem*), "OnPhotonInstantiate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{info});
  }
};
// Writing MetadataGetter for method: GorillaTagScripts::EnvItem::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
