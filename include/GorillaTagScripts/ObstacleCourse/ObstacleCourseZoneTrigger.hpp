// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.LayerMask
#include "UnityEngine/LayerMask.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GorillaTagScripts::ObstacleCourse
namespace GorillaTagScripts::ObstacleCourse {
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Collider
  class Collider;
}
// Completed forward declares
// Type namespace: GorillaTagScripts.ObstacleCourse
namespace GorillaTagScripts::ObstacleCourse {
  // Forward declaring type: ObstacleCourseZoneTrigger
  class ObstacleCourseZoneTrigger;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger);
DEFINE_IL2CPP_ARG_TYPE(::GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger*, "GorillaTagScripts.ObstacleCourse", "ObstacleCourseZoneTrigger");
// Type namespace: GorillaTagScripts.ObstacleCourse
namespace GorillaTagScripts::ObstacleCourse {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: GorillaTagScripts.ObstacleCourse.ObstacleCourseZoneTrigger
  // [TokenAttribute] Offset: FFFFFFFF
  class ObstacleCourseZoneTrigger : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::ObstacleCourseTriggerEvent
    class ObstacleCourseTriggerEvent;
    public:
    // public UnityEngine.LayerMask bodyLayer
    // Size: 0x4
    // Offset: 0x20
    ::UnityEngine::LayerMask bodyLayer;
    // Field size check
    static_assert(sizeof(::UnityEngine::LayerMask) == 0x4);
    // Padding between fields: bodyLayer and: OnPlayerTriggerEnter
    char __padding0[0x4] = {};
    // private GorillaTagScripts.ObstacleCourse.ObstacleCourseZoneTrigger/ObstacleCourseTriggerEvent OnPlayerTriggerEnter
    // Size: 0x8
    // Offset: 0x28
    ::GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::ObstacleCourseTriggerEvent* OnPlayerTriggerEnter;
    // Field size check
    static_assert(sizeof(::GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::ObstacleCourseTriggerEvent*) == 0x8);
    // private GorillaTagScripts.ObstacleCourse.ObstacleCourseZoneTrigger/ObstacleCourseTriggerEvent OnPlayerTriggerExit
    // Size: 0x8
    // Offset: 0x30
    ::GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::ObstacleCourseTriggerEvent* OnPlayerTriggerExit;
    // Field size check
    static_assert(sizeof(::GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::ObstacleCourseTriggerEvent*) == 0x8);
    public:
    // Get instance field reference: public UnityEngine.LayerMask bodyLayer
    [[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& dyn_bodyLayer();
    // Get instance field reference: private GorillaTagScripts.ObstacleCourse.ObstacleCourseZoneTrigger/ObstacleCourseTriggerEvent OnPlayerTriggerEnter
    [[deprecated("Use field access instead!")]] ::GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::ObstacleCourseTriggerEvent*& dyn_OnPlayerTriggerEnter();
    // Get instance field reference: private GorillaTagScripts.ObstacleCourse.ObstacleCourseZoneTrigger/ObstacleCourseTriggerEvent OnPlayerTriggerExit
    [[deprecated("Use field access instead!")]] ::GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::ObstacleCourseTriggerEvent*& dyn_OnPlayerTriggerExit();
    // public System.Void add_OnPlayerTriggerEnter(GorillaTagScripts.ObstacleCourse.ObstacleCourseZoneTrigger/ObstacleCourseTriggerEvent value)
    // Offset: 0x2811110
    void add_OnPlayerTriggerEnter(::GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::ObstacleCourseTriggerEvent* value);
    // public System.Void remove_OnPlayerTriggerEnter(GorillaTagScripts.ObstacleCourse.ObstacleCourseZoneTrigger/ObstacleCourseTriggerEvent value)
    // Offset: 0x2811548
    void remove_OnPlayerTriggerEnter(::GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::ObstacleCourseTriggerEvent* value);
    // public System.Void add_OnPlayerTriggerExit(GorillaTagScripts.ObstacleCourse.ObstacleCourseZoneTrigger/ObstacleCourseTriggerEvent value)
    // Offset: 0x28111AC
    void add_OnPlayerTriggerExit(::GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::ObstacleCourseTriggerEvent* value);
    // public System.Void remove_OnPlayerTriggerExit(GorillaTagScripts.ObstacleCourse.ObstacleCourseZoneTrigger/ObstacleCourseTriggerEvent value)
    // Offset: 0x28115E4
    void remove_OnPlayerTriggerExit(::GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::ObstacleCourseTriggerEvent* value);
    // private System.Void OnTriggerEnter(UnityEngine.Collider other)
    // Offset: 0x281297C
    void OnTriggerEnter(::UnityEngine::Collider* other);
    // private System.Void OnTriggerExit(UnityEngine.Collider other)
    // Offset: 0x2812A74
    void OnTriggerExit(::UnityEngine::Collider* other);
    // public System.Void .ctor()
    // Offset: 0x2812B6C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ObstacleCourseZoneTrigger* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ObstacleCourseZoneTrigger*, creationType>()));
    }
  }; // GorillaTagScripts.ObstacleCourse.ObstacleCourseZoneTrigger
  #pragma pack(pop)
  static check_size<sizeof(ObstacleCourseZoneTrigger), 48 + sizeof(::GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::ObstacleCourseTriggerEvent*)> __GorillaTagScripts_ObstacleCourse_ObstacleCourseZoneTriggerSizeCheck;
  static_assert(sizeof(ObstacleCourseZoneTrigger) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::add_OnPlayerTriggerEnter
// Il2CppName: add_OnPlayerTriggerEnter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::*)(::GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::ObstacleCourseTriggerEvent*)>(&GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::add_OnPlayerTriggerEnter)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("GorillaTagScripts.ObstacleCourse", "ObstacleCourseZoneTrigger/ObstacleCourseTriggerEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger*), "add_OnPlayerTriggerEnter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::remove_OnPlayerTriggerEnter
// Il2CppName: remove_OnPlayerTriggerEnter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::*)(::GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::ObstacleCourseTriggerEvent*)>(&GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::remove_OnPlayerTriggerEnter)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("GorillaTagScripts.ObstacleCourse", "ObstacleCourseZoneTrigger/ObstacleCourseTriggerEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger*), "remove_OnPlayerTriggerEnter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::add_OnPlayerTriggerExit
// Il2CppName: add_OnPlayerTriggerExit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::*)(::GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::ObstacleCourseTriggerEvent*)>(&GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::add_OnPlayerTriggerExit)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("GorillaTagScripts.ObstacleCourse", "ObstacleCourseZoneTrigger/ObstacleCourseTriggerEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger*), "add_OnPlayerTriggerExit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::remove_OnPlayerTriggerExit
// Il2CppName: remove_OnPlayerTriggerExit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::*)(::GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::ObstacleCourseTriggerEvent*)>(&GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::remove_OnPlayerTriggerExit)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("GorillaTagScripts.ObstacleCourse", "ObstacleCourseZoneTrigger/ObstacleCourseTriggerEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger*), "remove_OnPlayerTriggerExit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::OnTriggerEnter
// Il2CppName: OnTriggerEnter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::*)(::UnityEngine::Collider*)>(&GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::OnTriggerEnter)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger*), "OnTriggerEnter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::OnTriggerExit
// Il2CppName: OnTriggerExit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::*)(::UnityEngine::Collider*)>(&GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::OnTriggerExit)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger*), "OnTriggerExit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
