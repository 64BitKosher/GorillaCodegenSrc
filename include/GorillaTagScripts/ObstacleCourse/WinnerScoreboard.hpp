// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: GorillaTagScripts.ObstacleCourse.ObstacleCourse
#include "GorillaTagScripts/ObstacleCourse/ObstacleCourse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: TMPro
namespace TMPro {
  // Forward declaring type: TextMeshPro
  class TextMeshPro;
}
// Completed forward declares
// Type namespace: GorillaTagScripts.ObstacleCourse
namespace GorillaTagScripts::ObstacleCourse {
  // Forward declaring type: WinnerScoreboard
  class WinnerScoreboard;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GorillaTagScripts::ObstacleCourse::WinnerScoreboard);
DEFINE_IL2CPP_ARG_TYPE(::GorillaTagScripts::ObstacleCourse::WinnerScoreboard*, "GorillaTagScripts.ObstacleCourse", "WinnerScoreboard");
// Type namespace: GorillaTagScripts.ObstacleCourse
namespace GorillaTagScripts::ObstacleCourse {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: GorillaTagScripts.ObstacleCourse.WinnerScoreboard
  // [TokenAttribute] Offset: FFFFFFFF
  class WinnerScoreboard : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public System.String raceStarted
    // Size: 0x8
    // Offset: 0x20
    ::StringW raceStarted;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String raceLoading
    // Size: 0x8
    // Offset: 0x28
    ::StringW raceLoading;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private TMPro.TextMeshPro output
    // Size: 0x8
    // Offset: 0x30
    ::TMPro::TextMeshPro* output;
    // Field size check
    static_assert(sizeof(::TMPro::TextMeshPro*) == 0x8);
    public:
    // Get instance field reference: public System.String raceStarted
    [[deprecated("Use field access instead!")]] ::StringW& dyn_raceStarted();
    // Get instance field reference: public System.String raceLoading
    [[deprecated("Use field access instead!")]] ::StringW& dyn_raceLoading();
    // Get instance field reference: private TMPro.TextMeshPro output
    [[deprecated("Use field access instead!")]] ::TMPro::TextMeshPro*& dyn_output();
    // public System.Void UpdateBoard(System.String winner, GorillaTagScripts.ObstacleCourse.ObstacleCourse/RaceState _currentState)
    // Offset: 0x2811E7C
    void UpdateBoard(::StringW winner, ::GorillaTagScripts::ObstacleCourse::ObstacleCourse::RaceState _currentState);
    // public System.Void .ctor()
    // Offset: 0x281300C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WinnerScoreboard* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::WinnerScoreboard::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WinnerScoreboard*, creationType>()));
    }
  }; // GorillaTagScripts.ObstacleCourse.WinnerScoreboard
  #pragma pack(pop)
  static check_size<sizeof(WinnerScoreboard), 48 + sizeof(::TMPro::TextMeshPro*)> __GorillaTagScripts_ObstacleCourse_WinnerScoreboardSizeCheck;
  static_assert(sizeof(WinnerScoreboard) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GorillaTagScripts::ObstacleCourse::WinnerScoreboard::UpdateBoard
// Il2CppName: UpdateBoard
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaTagScripts::ObstacleCourse::WinnerScoreboard::*)(::StringW, ::GorillaTagScripts::ObstacleCourse::ObstacleCourse::RaceState)>(&GorillaTagScripts::ObstacleCourse::WinnerScoreboard::UpdateBoard)> {
  static const MethodInfo* get() {
    static auto* winner = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* _currentState = &::il2cpp_utils::GetClassFromName("GorillaTagScripts.ObstacleCourse", "ObstacleCourse/RaceState")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaTagScripts::ObstacleCourse::WinnerScoreboard*), "UpdateBoard", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{winner, _currentState});
  }
};
// Writing MetadataGetter for method: GorillaTagScripts::ObstacleCourse::WinnerScoreboard::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
