// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: GameObjectScheduling.CountdownText
#include "GameObjectScheduling/CountdownText.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GameObjectScheduling::CountdownText::TimeChunk, "GameObjectScheduling", "CountdownText/TimeChunk");
// Type namespace: GameObjectScheduling
namespace GameObjectScheduling {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: GameObjectScheduling.CountdownText/TimeChunk
  // [TokenAttribute] Offset: FFFFFFFF
  struct CountdownText::TimeChunk/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: TimeChunk
    constexpr TimeChunk(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public GameObjectScheduling.CountdownText/TimeChunk DAY
    static constexpr const int DAY = 0;
    // Get static field: static public GameObjectScheduling.CountdownText/TimeChunk DAY
    static ::GameObjectScheduling::CountdownText::TimeChunk _get_DAY();
    // Set static field: static public GameObjectScheduling.CountdownText/TimeChunk DAY
    static void _set_DAY(::GameObjectScheduling::CountdownText::TimeChunk value);
    // static field const value: static public GameObjectScheduling.CountdownText/TimeChunk HOUR
    static constexpr const int HOUR = 1;
    // Get static field: static public GameObjectScheduling.CountdownText/TimeChunk HOUR
    static ::GameObjectScheduling::CountdownText::TimeChunk _get_HOUR();
    // Set static field: static public GameObjectScheduling.CountdownText/TimeChunk HOUR
    static void _set_HOUR(::GameObjectScheduling::CountdownText::TimeChunk value);
    // static field const value: static public GameObjectScheduling.CountdownText/TimeChunk MINUTE
    static constexpr const int MINUTE = 2;
    // Get static field: static public GameObjectScheduling.CountdownText/TimeChunk MINUTE
    static ::GameObjectScheduling::CountdownText::TimeChunk _get_MINUTE();
    // Set static field: static public GameObjectScheduling.CountdownText/TimeChunk MINUTE
    static void _set_MINUTE(::GameObjectScheduling::CountdownText::TimeChunk value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // GameObjectScheduling.CountdownText/TimeChunk
  #pragma pack(pop)
  static check_size<sizeof(CountdownText::TimeChunk), 0 + sizeof(int)> __GameObjectScheduling_CountdownText_TimeChunkSizeCheck;
  static_assert(sizeof(CountdownText::TimeChunk) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
