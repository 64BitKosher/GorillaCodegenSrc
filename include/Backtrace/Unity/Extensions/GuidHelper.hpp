// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Guid
  struct Guid;
}
// Completed forward declares
// Type namespace: Backtrace.Unity.Extensions
namespace Backtrace::Unity::Extensions {
  // Forward declaring type: GuidHelper
  class GuidHelper;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Backtrace::Unity::Extensions::GuidHelper);
DEFINE_IL2CPP_ARG_TYPE(::Backtrace::Unity::Extensions::GuidHelper*, "Backtrace.Unity.Extensions", "GuidHelper");
// Type namespace: Backtrace.Unity.Extensions
namespace Backtrace::Unity::Extensions {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Backtrace.Unity.Extensions.GuidHelper
  // [TokenAttribute] Offset: FFFFFFFF
  class GuidHelper : public ::Il2CppObject {
    public:
    // static public System.Guid FromLong(System.Int64 source)
    // Offset: 0x2A76D70
    static ::System::Guid FromLong(int64_t source);
    // static public System.Boolean IsNullOrEmpty(System.String guid)
    // Offset: 0x2A76DFC
    static bool IsNullOrEmpty(::StringW guid);
  }; // Backtrace.Unity.Extensions.GuidHelper
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Backtrace::Unity::Extensions::GuidHelper::FromLong
// Il2CppName: FromLong
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Guid (*)(int64_t)>(&Backtrace::Unity::Extensions::GuidHelper::FromLong)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Extensions::GuidHelper*), "FromLong", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Extensions::GuidHelper::IsNullOrEmpty
// Il2CppName: IsNullOrEmpty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW)>(&Backtrace::Unity::Extensions::GuidHelper::IsNullOrEmpty)> {
  static const MethodInfo* get() {
    static auto* guid = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Extensions::GuidHelper*), "IsNullOrEmpty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{guid});
  }
};
