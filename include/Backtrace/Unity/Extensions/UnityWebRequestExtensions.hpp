// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
}
// Forward declaring namespace: UnityEngine::Networking
namespace UnityEngine::Networking {
  // Forward declaring type: UnityWebRequest
  class UnityWebRequest;
}
// Completed forward declares
// Type namespace: Backtrace.Unity.Extensions
namespace Backtrace::Unity::Extensions {
  // Forward declaring type: UnityWebRequestExtensions
  class UnityWebRequestExtensions;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Backtrace::Unity::Extensions::UnityWebRequestExtensions);
DEFINE_IL2CPP_ARG_TYPE(::Backtrace::Unity::Extensions::UnityWebRequestExtensions*, "Backtrace.Unity.Extensions", "UnityWebRequestExtensions");
// Type namespace: Backtrace.Unity.Extensions
namespace Backtrace::Unity::Extensions {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Backtrace.Unity.Extensions.UnityWebRequestExtensions
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class UnityWebRequestExtensions : public ::Il2CppObject {
    public:
    // static field const value: static System.String ContentTypeHeader
    static constexpr const char* ContentTypeHeader = "Content-Type";
    // Get static field: static System.String ContentTypeHeader
    static ::StringW _get_ContentTypeHeader();
    // Set static field: static System.String ContentTypeHeader
    static void _set_ContentTypeHeader(::StringW value);
    // static UnityEngine.Networking.UnityWebRequest SetMultipartFormData(UnityEngine.Networking.UnityWebRequest source, System.Byte[] boundaryId)
    // Offset: 0x2A7778C
    static ::UnityEngine::Networking::UnityWebRequest* SetMultipartFormData(::UnityEngine::Networking::UnityWebRequest* source, ::ArrayW<uint8_t> boundaryId);
    // static public System.Boolean ReceivedNetworkError(UnityEngine.Networking.UnityWebRequest request)
    // Offset: 0x2A77858
    static bool ReceivedNetworkError(::UnityEngine::Networking::UnityWebRequest* request);
    // static UnityEngine.Networking.UnityWebRequest SetJsonContentType(UnityEngine.Networking.UnityWebRequest source)
    // Offset: 0x2A7789C
    static ::UnityEngine::Networking::UnityWebRequest* SetJsonContentType(::UnityEngine::Networking::UnityWebRequest* source);
    // static UnityEngine.Networking.UnityWebRequest IgnoreSsl(UnityEngine.Networking.UnityWebRequest source, System.Boolean shouldIgnore)
    // Offset: 0x2A77910
    static ::UnityEngine::Networking::UnityWebRequest* IgnoreSsl(::UnityEngine::Networking::UnityWebRequest* source, bool shouldIgnore);
  }; // Backtrace.Unity.Extensions.UnityWebRequestExtensions
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Backtrace::Unity::Extensions::UnityWebRequestExtensions::SetMultipartFormData
// Il2CppName: SetMultipartFormData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Networking::UnityWebRequest* (*)(::UnityEngine::Networking::UnityWebRequest*, ::ArrayW<uint8_t>)>(&Backtrace::Unity::Extensions::UnityWebRequestExtensions::SetMultipartFormData)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("UnityEngine.Networking", "UnityWebRequest")->byval_arg;
    static auto* boundaryId = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Extensions::UnityWebRequestExtensions*), "SetMultipartFormData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, boundaryId});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Extensions::UnityWebRequestExtensions::ReceivedNetworkError
// Il2CppName: ReceivedNetworkError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::Networking::UnityWebRequest*)>(&Backtrace::Unity::Extensions::UnityWebRequestExtensions::ReceivedNetworkError)> {
  static const MethodInfo* get() {
    static auto* request = &::il2cpp_utils::GetClassFromName("UnityEngine.Networking", "UnityWebRequest")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Extensions::UnityWebRequestExtensions*), "ReceivedNetworkError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{request});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Extensions::UnityWebRequestExtensions::SetJsonContentType
// Il2CppName: SetJsonContentType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Networking::UnityWebRequest* (*)(::UnityEngine::Networking::UnityWebRequest*)>(&Backtrace::Unity::Extensions::UnityWebRequestExtensions::SetJsonContentType)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("UnityEngine.Networking", "UnityWebRequest")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Extensions::UnityWebRequestExtensions*), "SetJsonContentType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Extensions::UnityWebRequestExtensions::IgnoreSsl
// Il2CppName: IgnoreSsl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Networking::UnityWebRequest* (*)(::UnityEngine::Networking::UnityWebRequest*, bool)>(&Backtrace::Unity::Extensions::UnityWebRequestExtensions::IgnoreSsl)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("UnityEngine.Networking", "UnityWebRequest")->byval_arg;
    static auto* shouldIgnore = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Extensions::UnityWebRequestExtensions*), "IgnoreSsl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, shouldIgnore});
  }
};
