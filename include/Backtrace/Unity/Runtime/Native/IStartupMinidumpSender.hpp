// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: ICollection`1<T>
  template<typename T>
  class ICollection_1;
}
// Forward declaring namespace: Backtrace::Unity::Interfaces
namespace Backtrace::Unity::Interfaces {
  // Forward declaring type: IBacktraceApi
  class IBacktraceApi;
}
// Completed forward declares
// Type namespace: Backtrace.Unity.Runtime.Native
namespace Backtrace::Unity::Runtime::Native {
  // Forward declaring type: IStartupMinidumpSender
  class IStartupMinidumpSender;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Backtrace::Unity::Runtime::Native::IStartupMinidumpSender);
DEFINE_IL2CPP_ARG_TYPE(::Backtrace::Unity::Runtime::Native::IStartupMinidumpSender*, "Backtrace.Unity.Runtime.Native", "IStartupMinidumpSender");
// Type namespace: Backtrace.Unity.Runtime.Native
namespace Backtrace::Unity::Runtime::Native {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: Backtrace.Unity.Runtime.Native.IStartupMinidumpSender
  // [TokenAttribute] Offset: FFFFFFFF
  class IStartupMinidumpSender {
    public:
    // public System.Collections.IEnumerator SendMinidumpOnStartup(System.Collections.Generic.ICollection`1<System.String> clientAttachments, Backtrace.Unity.Interfaces.IBacktraceApi backtraceApi)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Collections::IEnumerator* SendMinidumpOnStartup(::System::Collections::Generic::ICollection_1<::StringW>* clientAttachments, ::Backtrace::Unity::Interfaces::IBacktraceApi* backtraceApi);
  }; // Backtrace.Unity.Runtime.Native.IStartupMinidumpSender
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Backtrace::Unity::Runtime::Native::IStartupMinidumpSender::SendMinidumpOnStartup
// Il2CppName: SendMinidumpOnStartup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (Backtrace::Unity::Runtime::Native::IStartupMinidumpSender::*)(::System::Collections::Generic::ICollection_1<::StringW>*, ::Backtrace::Unity::Interfaces::IBacktraceApi*)>(&Backtrace::Unity::Runtime::Native::IStartupMinidumpSender::SendMinidumpOnStartup)> {
  static const MethodInfo* get() {
    static auto* clientAttachments = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "ICollection`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    static auto* backtraceApi = &::il2cpp_utils::GetClassFromName("Backtrace.Unity.Interfaces", "IBacktraceApi")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Runtime::Native::IStartupMinidumpSender*), "SendMinidumpOnStartup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clientAttachments, backtraceApi});
  }
};
