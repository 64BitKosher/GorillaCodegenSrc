// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: TimeSpan
  struct TimeSpan;
}
// Completed forward declares
// Type namespace: Backtrace.Unity.Common
namespace Backtrace::Unity::Common {
  // Forward declaring type: DateTimeHelper
  class DateTimeHelper;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Backtrace::Unity::Common::DateTimeHelper);
DEFINE_IL2CPP_ARG_TYPE(::Backtrace::Unity::Common::DateTimeHelper*, "Backtrace.Unity.Common", "DateTimeHelper");
// Type namespace: Backtrace.Unity.Common
namespace Backtrace::Unity::Common {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Backtrace.Unity.Common.DateTimeHelper
  // [TokenAttribute] Offset: FFFFFFFF
  class DateTimeHelper : public ::Il2CppObject {
    public:
    // static private System.TimeSpan Now()
    // Offset: 0x2A77E24
    static ::System::TimeSpan Now();
    // static public System.Int32 Timestamp()
    // Offset: 0x2A67650
    static int Timestamp();
    // static public System.Double TimestampMs()
    // Offset: 0x2A6FF70
    static double TimestampMs();
  }; // Backtrace.Unity.Common.DateTimeHelper
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Backtrace::Unity::Common::DateTimeHelper::Now
// Il2CppName: Now
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::TimeSpan (*)()>(&Backtrace::Unity::Common::DateTimeHelper::Now)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Common::DateTimeHelper*), "Now", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Common::DateTimeHelper::Timestamp
// Il2CppName: Timestamp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&Backtrace::Unity::Common::DateTimeHelper::Timestamp)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Common::DateTimeHelper*), "Timestamp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Common::DateTimeHelper::TimestampMs
// Il2CppName: TimestampMs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (*)()>(&Backtrace::Unity::Common::DateTimeHelper::TimestampMs)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Common::DateTimeHelper*), "TimestampMs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
