// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Diagnostics
namespace System::Diagnostics {
  // Forward declaring type: Stopwatch
  class Stopwatch;
}
// Completed forward declares
// Type namespace: Backtrace.Unity.Common
namespace Backtrace::Unity::Common {
  // Forward declaring type: MetricsHelper
  class MetricsHelper;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Backtrace::Unity::Common::MetricsHelper);
DEFINE_IL2CPP_ARG_TYPE(::Backtrace::Unity::Common::MetricsHelper*, "Backtrace.Unity.Common", "MetricsHelper");
// Type namespace: Backtrace.Unity.Common
namespace Backtrace::Unity::Common {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Backtrace.Unity.Common.MetricsHelper
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class MetricsHelper : public ::Il2CppObject {
    public:
    // static public System.String GetMicroseconds(System.Diagnostics.Stopwatch stopwatch)
    // Offset: 0x2A77FB8
    static ::StringW GetMicroseconds(::System::Diagnostics::Stopwatch* stopwatch);
    // static public System.Void Restart(System.Diagnostics.Stopwatch stopwatch)
    // Offset: 0x2A780C0
    static void Restart(::System::Diagnostics::Stopwatch* stopwatch);
  }; // Backtrace.Unity.Common.MetricsHelper
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Backtrace::Unity::Common::MetricsHelper::GetMicroseconds
// Il2CppName: GetMicroseconds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::Diagnostics::Stopwatch*)>(&Backtrace::Unity::Common::MetricsHelper::GetMicroseconds)> {
  static const MethodInfo* get() {
    static auto* stopwatch = &::il2cpp_utils::GetClassFromName("System.Diagnostics", "Stopwatch")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Common::MetricsHelper*), "GetMicroseconds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stopwatch});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Common::MetricsHelper::Restart
// Il2CppName: Restart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Diagnostics::Stopwatch*)>(&Backtrace::Unity::Common::MetricsHelper::Restart)> {
  static const MethodInfo* get() {
    static auto* stopwatch = &::il2cpp_utils::GetClassFromName("System.Diagnostics", "Stopwatch")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Common::MetricsHelper*), "Restart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stopwatch});
  }
};
