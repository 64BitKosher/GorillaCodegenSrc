// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IEnumerable`1<T>
  template<typename T>
  class IEnumerable_1;
}
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: FileInfo
  class FileInfo;
}
// Forward declaring namespace: Backtrace::Unity::Model::Database
namespace Backtrace::Unity::Model::Database {
  // Forward declaring type: BacktraceDatabaseRecord
  class BacktraceDatabaseRecord;
}
// Forward declaring namespace: Backtrace::Unity::Model
namespace Backtrace::Unity::Model {
  // Forward declaring type: BacktraceData
  class BacktraceData;
}
// Completed forward declares
// Type namespace: Backtrace.Unity.Interfaces
namespace Backtrace::Unity::Interfaces {
  // Forward declaring type: IBacktraceDatabaseFileContext
  class IBacktraceDatabaseFileContext;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext);
DEFINE_IL2CPP_ARG_TYPE(::Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext*, "Backtrace.Unity.Interfaces", "IBacktraceDatabaseFileContext");
// Type namespace: Backtrace.Unity.Interfaces
namespace Backtrace::Unity::Interfaces {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: Backtrace.Unity.Interfaces.IBacktraceDatabaseFileContext
  // [TokenAttribute] Offset: FFFFFFFF
  class IBacktraceDatabaseFileContext {
    public:
    // public System.Int32 get_ScreenshotQuality()
    // Offset: 0xFFFFFFFFFFFFFFFF
    int get_ScreenshotQuality();
    // public System.Void set_ScreenshotQuality(System.Int32 value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_ScreenshotQuality(int value);
    // public System.Int32 get_ScreenshotMaxHeight()
    // Offset: 0xFFFFFFFFFFFFFFFF
    int get_ScreenshotMaxHeight();
    // public System.Void set_ScreenshotMaxHeight(System.Int32 value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_ScreenshotMaxHeight(int value);
    // public System.Collections.Generic.IEnumerable`1<System.IO.FileInfo> GetRecords()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Collections::Generic::IEnumerable_1<::System::IO::FileInfo*>* GetRecords();
    // public System.Collections.Generic.IEnumerable`1<System.IO.FileInfo> GetAll()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Collections::Generic::IEnumerable_1<::System::IO::FileInfo*>* GetAll();
    // public System.Boolean ValidFileConsistency()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool ValidFileConsistency();
    // public System.Void RemoveOrphaned(System.Collections.Generic.IEnumerable`1<Backtrace.Unity.Model.Database.BacktraceDatabaseRecord> existingRecords)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void RemoveOrphaned(::System::Collections::Generic::IEnumerable_1<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*>* existingRecords);
    // public System.Void Clear()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Clear();
    // public System.Void Delete(Backtrace.Unity.Model.Database.BacktraceDatabaseRecord record)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Delete(::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord* record);
    // public System.Collections.Generic.IEnumerable`1<System.String> GenerateRecordAttachments(Backtrace.Unity.Model.BacktraceData data)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Collections::Generic::IEnumerable_1<::StringW>* GenerateRecordAttachments(::Backtrace::Unity::Model::BacktraceData* data);
    // public System.Boolean Save(Backtrace.Unity.Model.Database.BacktraceDatabaseRecord record)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool Save(::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord* record);
    // public System.Boolean IsValidRecord(Backtrace.Unity.Model.Database.BacktraceDatabaseRecord record)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool IsValidRecord(::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord* record);
  }; // Backtrace.Unity.Interfaces.IBacktraceDatabaseFileContext
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::get_ScreenshotQuality
// Il2CppName: get_ScreenshotQuality
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::*)()>(&Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::get_ScreenshotQuality)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext*), "get_ScreenshotQuality", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::set_ScreenshotQuality
// Il2CppName: set_ScreenshotQuality
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::*)(int)>(&Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::set_ScreenshotQuality)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext*), "set_ScreenshotQuality", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::get_ScreenshotMaxHeight
// Il2CppName: get_ScreenshotMaxHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::*)()>(&Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::get_ScreenshotMaxHeight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext*), "get_ScreenshotMaxHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::set_ScreenshotMaxHeight
// Il2CppName: set_ScreenshotMaxHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::*)(int)>(&Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::set_ScreenshotMaxHeight)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext*), "set_ScreenshotMaxHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::GetRecords
// Il2CppName: GetRecords
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<::System::IO::FileInfo*>* (Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::*)()>(&Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::GetRecords)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext*), "GetRecords", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::GetAll
// Il2CppName: GetAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<::System::IO::FileInfo*>* (Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::*)()>(&Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::GetAll)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext*), "GetAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::ValidFileConsistency
// Il2CppName: ValidFileConsistency
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::*)()>(&Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::ValidFileConsistency)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext*), "ValidFileConsistency", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::RemoveOrphaned
// Il2CppName: RemoveOrphaned
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::*)(::System::Collections::Generic::IEnumerable_1<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*>*)>(&Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::RemoveOrphaned)> {
  static const MethodInfo* get() {
    static auto* existingRecords = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IEnumerable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Backtrace.Unity.Model.Database", "BacktraceDatabaseRecord")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext*), "RemoveOrphaned", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{existingRecords});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::Clear
// Il2CppName: Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::*)()>(&Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::Clear)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext*), "Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::Delete
// Il2CppName: Delete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::*)(::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*)>(&Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::Delete)> {
  static const MethodInfo* get() {
    static auto* record = &::il2cpp_utils::GetClassFromName("Backtrace.Unity.Model.Database", "BacktraceDatabaseRecord")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext*), "Delete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{record});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::GenerateRecordAttachments
// Il2CppName: GenerateRecordAttachments
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<::StringW>* (Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::*)(::Backtrace::Unity::Model::BacktraceData*)>(&Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::GenerateRecordAttachments)> {
  static const MethodInfo* get() {
    static auto* data = &::il2cpp_utils::GetClassFromName("Backtrace.Unity.Model", "BacktraceData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext*), "GenerateRecordAttachments", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::Save
// Il2CppName: Save
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::*)(::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*)>(&Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::Save)> {
  static const MethodInfo* get() {
    static auto* record = &::il2cpp_utils::GetClassFromName("Backtrace.Unity.Model.Database", "BacktraceDatabaseRecord")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext*), "Save", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{record});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::IsValidRecord
// Il2CppName: IsValidRecord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::*)(::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*)>(&Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::IsValidRecord)> {
  static const MethodInfo* get() {
    static auto* record = &::il2cpp_utils::GetClassFromName("Backtrace.Unity.Model.Database", "BacktraceDatabaseRecord")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext*), "IsValidRecord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{record});
  }
};
