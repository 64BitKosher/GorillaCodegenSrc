// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Backtrace.Unity.Model.BacktraceResult
#include "Backtrace/Unity/Model/BacktraceResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Backtrace::Unity::Model::BacktraceResult::BacktraceRawResult);
DEFINE_IL2CPP_ARG_TYPE(::Backtrace::Unity::Model::BacktraceResult::BacktraceRawResult*, "Backtrace.Unity.Model", "BacktraceResult/BacktraceRawResult");
// Type namespace: Backtrace.Unity.Model
namespace Backtrace::Unity::Model {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: Backtrace.Unity.Model.BacktraceResult/BacktraceRawResult
  // [TokenAttribute] Offset: FFFFFFFF
  class BacktraceResult::BacktraceRawResult : public ::Il2CppObject {
    public:
    public:
    // public System.String response
    // Size: 0x8
    // Offset: 0x10
    ::StringW response;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String _rxid
    // Size: 0x8
    // Offset: 0x18
    ::StringW rxid;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: public System.String response
    [[deprecated("Use field access instead!")]] ::StringW& dyn_response();
    // Get instance field reference: public System.String _rxid
    [[deprecated("Use field access instead!")]] ::StringW& dyn__rxid();
    // public System.Void .ctor()
    // Offset: 0x2A63E24
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BacktraceResult::BacktraceRawResult* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceResult::BacktraceRawResult::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BacktraceResult::BacktraceRawResult*, creationType>()));
    }
  }; // Backtrace.Unity.Model.BacktraceResult/BacktraceRawResult
  #pragma pack(pop)
  static check_size<sizeof(BacktraceResult::BacktraceRawResult), 24 + sizeof(::StringW)> __Backtrace_Unity_Model_BacktraceResult_BacktraceRawResultSizeCheck;
  static_assert(sizeof(BacktraceResult::BacktraceRawResult) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Backtrace::Unity::Model::BacktraceResult::BacktraceRawResult::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
