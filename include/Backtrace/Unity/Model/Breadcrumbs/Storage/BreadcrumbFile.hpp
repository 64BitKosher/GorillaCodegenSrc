// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Backtrace.Unity.Model.Breadcrumbs.Storage.IBreadcrumbFile
#include "Backtrace/Unity/Model/Breadcrumbs/Storage/IBreadcrumbFile.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: Stream
  class Stream;
}
// Completed forward declares
// Type namespace: Backtrace.Unity.Model.Breadcrumbs.Storage
namespace Backtrace::Unity::Model::Breadcrumbs::Storage {
  // Forward declaring type: BreadcrumbFile
  class BreadcrumbFile;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Backtrace::Unity::Model::Breadcrumbs::Storage::BreadcrumbFile);
DEFINE_IL2CPP_ARG_TYPE(::Backtrace::Unity::Model::Breadcrumbs::Storage::BreadcrumbFile*, "Backtrace.Unity.Model.Breadcrumbs.Storage", "BreadcrumbFile");
// Type namespace: Backtrace.Unity.Model.Breadcrumbs.Storage
namespace Backtrace::Unity::Model::Breadcrumbs::Storage {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: Backtrace.Unity.Model.Breadcrumbs.Storage.BreadcrumbFile
  // [TokenAttribute] Offset: FFFFFFFF
  class BreadcrumbFile : public ::Il2CppObject/*, public ::Backtrace::Unity::Model::Breadcrumbs::Storage::IBreadcrumbFile*/ {
    public:
    public:
    // private readonly System.String _path
    // Size: 0x8
    // Offset: 0x10
    ::StringW path;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Creating interface conversion operator: operator ::Backtrace::Unity::Model::Breadcrumbs::Storage::IBreadcrumbFile
    operator ::Backtrace::Unity::Model::Breadcrumbs::Storage::IBreadcrumbFile() noexcept {
      return *reinterpret_cast<::Backtrace::Unity::Model::Breadcrumbs::Storage::IBreadcrumbFile*>(this);
    }
    // Creating conversion operator: operator ::StringW
    constexpr operator ::StringW() const noexcept {
      return path;
    }
    // Get instance field reference: private readonly System.String _path
    [[deprecated("Use field access instead!")]] ::StringW& dyn__path();
    // public System.Void .ctor(System.String path)
    // Offset: 0x2A6FF90
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BreadcrumbFile* New_ctor(::StringW path) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::Storage::BreadcrumbFile::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BreadcrumbFile*, creationType>(path)));
    }
    // public System.Void Delete()
    // Offset: 0x2A71868
    void Delete();
    // public System.Boolean Exists()
    // Offset: 0x2A71874
    bool Exists();
    // public System.IO.Stream GetCreateStream()
    // Offset: 0x2A71880
    ::System::IO::Stream* GetCreateStream();
    // public System.IO.Stream GetIOStream()
    // Offset: 0x2A718E8
    ::System::IO::Stream* GetIOStream();
    // public System.IO.Stream GetWriteStream()
    // Offset: 0x2A71950
    ::System::IO::Stream* GetWriteStream();
  }; // Backtrace.Unity.Model.Breadcrumbs.Storage.BreadcrumbFile
  #pragma pack(pop)
  static check_size<sizeof(BreadcrumbFile), 16 + sizeof(::StringW)> __Backtrace_Unity_Model_Breadcrumbs_Storage_BreadcrumbFileSizeCheck;
  static_assert(sizeof(BreadcrumbFile) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::Storage::BreadcrumbFile::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::Storage::BreadcrumbFile::Delete
// Il2CppName: Delete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Backtrace::Unity::Model::Breadcrumbs::Storage::BreadcrumbFile::*)()>(&Backtrace::Unity::Model::Breadcrumbs::Storage::BreadcrumbFile::Delete)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::Storage::BreadcrumbFile*), "Delete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::Storage::BreadcrumbFile::Exists
// Il2CppName: Exists
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Backtrace::Unity::Model::Breadcrumbs::Storage::BreadcrumbFile::*)()>(&Backtrace::Unity::Model::Breadcrumbs::Storage::BreadcrumbFile::Exists)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::Storage::BreadcrumbFile*), "Exists", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::Storage::BreadcrumbFile::GetCreateStream
// Il2CppName: GetCreateStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IO::Stream* (Backtrace::Unity::Model::Breadcrumbs::Storage::BreadcrumbFile::*)()>(&Backtrace::Unity::Model::Breadcrumbs::Storage::BreadcrumbFile::GetCreateStream)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::Storage::BreadcrumbFile*), "GetCreateStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::Storage::BreadcrumbFile::GetIOStream
// Il2CppName: GetIOStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IO::Stream* (Backtrace::Unity::Model::Breadcrumbs::Storage::BreadcrumbFile::*)()>(&Backtrace::Unity::Model::Breadcrumbs::Storage::BreadcrumbFile::GetIOStream)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::Storage::BreadcrumbFile*), "GetIOStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::Storage::BreadcrumbFile::GetWriteStream
// Il2CppName: GetWriteStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IO::Stream* (Backtrace::Unity::Model::Breadcrumbs::Storage::BreadcrumbFile::*)()>(&Backtrace::Unity::Model::Breadcrumbs::Storage::BreadcrumbFile::GetWriteStream)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::Storage::BreadcrumbFile*), "GetWriteStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
