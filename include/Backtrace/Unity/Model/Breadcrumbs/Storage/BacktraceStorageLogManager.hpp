// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Backtrace.Unity.Model.Breadcrumbs.IBacktraceLogManager
#include "Backtrace/Unity/Model/Breadcrumbs/IBacktraceLogManager.hpp"
// Including type: Backtrace.Unity.Model.Breadcrumbs.IArchiveableBreadcrumbManager
#include "Backtrace/Unity/Model/Breadcrumbs/IArchiveableBreadcrumbManager.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Queue`1<T>
  template<typename T>
  class Queue_1;
  // Forward declaring type: IDictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class IDictionary_2;
}
// Forward declaring namespace: Backtrace::Unity::Model::Breadcrumbs::Storage
namespace Backtrace::Unity::Model::Breadcrumbs::Storage {
  // Forward declaring type: IBreadcrumbFile
  class IBreadcrumbFile;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
}
// Forward declaring namespace: Backtrace::Unity::Model::Breadcrumbs
namespace Backtrace::Unity::Model::Breadcrumbs {
  // Forward declaring type: BreadcrumbLevel
  struct BreadcrumbLevel;
  // Forward declaring type: UnityEngineLogLevel
  struct UnityEngineLogLevel;
}
// Forward declaring namespace: Backtrace::Unity::Json
namespace Backtrace::Unity::Json {
  // Forward declaring type: BacktraceJObject
  class BacktraceJObject;
}
// Completed forward declares
// Type namespace: Backtrace.Unity.Model.Breadcrumbs.Storage
namespace Backtrace::Unity::Model::Breadcrumbs::Storage {
  // Forward declaring type: BacktraceStorageLogManager
  class BacktraceStorageLogManager;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager);
DEFINE_IL2CPP_ARG_TYPE(::Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager*, "Backtrace.Unity.Model.Breadcrumbs.Storage", "BacktraceStorageLogManager");
// Type namespace: Backtrace.Unity.Model.Breadcrumbs.Storage
namespace Backtrace::Unity::Model::Breadcrumbs::Storage {
  // Size: 0x58
  #pragma pack(push, 1)
  // Autogenerated type: Backtrace.Unity.Model.Breadcrumbs.Storage.BacktraceStorageLogManager
  // [TokenAttribute] Offset: FFFFFFFF
  class BacktraceStorageLogManager : public ::Il2CppObject/*, public ::Backtrace::Unity::Model::Breadcrumbs::IBacktraceLogManager, public ::Backtrace::Unity::Model::Breadcrumbs::IArchiveableBreadcrumbManager*/ {
    public:
    public:
    // private System.String <BreadcrumbsFilePath>k__BackingField
    // Size: 0x8
    // Offset: 0x10
    ::StringW BreadcrumbsFilePath;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Int64 _breadcrumbsSize
    // Size: 0x8
    // Offset: 0x18
    int64_t breadcrumbsSize;
    // Field size check
    static_assert(sizeof(int64_t) == 0x8);
    // private System.Boolean _emptyFile
    // Size: 0x1
    // Offset: 0x20
    bool emptyFile;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: emptyFile and: breadcrumbId
    char __padding2[0x7] = {};
    // private System.Double _breadcrumbId
    // Size: 0x8
    // Offset: 0x28
    double breadcrumbId;
    // Field size check
    static_assert(sizeof(double) == 0x8);
    // private System.Object _lockObject
    // Size: 0x8
    // Offset: 0x30
    ::Il2CppObject* lockObject;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    // private System.Int64 currentSize
    // Size: 0x8
    // Offset: 0x38
    int64_t currentSize;
    // Field size check
    static_assert(sizeof(int64_t) == 0x8);
    // private readonly System.Collections.Generic.Queue`1<System.Int64> _logSize
    // Size: 0x8
    // Offset: 0x40
    ::System::Collections::Generic::Queue_1<int64_t>* logSize;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Queue_1<int64_t>*) == 0x8);
    // private readonly System.String _storagePath
    // Size: 0x8
    // Offset: 0x48
    ::StringW storagePath;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private Backtrace.Unity.Model.Breadcrumbs.Storage.IBreadcrumbFile <BreadcrumbFile>k__BackingField
    // Size: 0x8
    // Offset: 0x50
    ::Backtrace::Unity::Model::Breadcrumbs::Storage::IBreadcrumbFile* BreadcrumbFile;
    // Field size check
    static_assert(sizeof(::Backtrace::Unity::Model::Breadcrumbs::Storage::IBreadcrumbFile*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::Backtrace::Unity::Model::Breadcrumbs::IBacktraceLogManager
    operator ::Backtrace::Unity::Model::Breadcrumbs::IBacktraceLogManager() noexcept {
      return *reinterpret_cast<::Backtrace::Unity::Model::Breadcrumbs::IBacktraceLogManager*>(this);
    }
    // Creating interface conversion operator: operator ::Backtrace::Unity::Model::Breadcrumbs::IArchiveableBreadcrumbManager
    operator ::Backtrace::Unity::Model::Breadcrumbs::IArchiveableBreadcrumbManager() noexcept {
      return *reinterpret_cast<::Backtrace::Unity::Model::Breadcrumbs::IArchiveableBreadcrumbManager*>(this);
    }
    // static field const value: static public System.Int32 MinimumBreadcrumbsFileSize
    static constexpr const int MinimumBreadcrumbsFileSize = 10000;
    // Get static field: static public System.Int32 MinimumBreadcrumbsFileSize
    static int _get_MinimumBreadcrumbsFileSize();
    // Set static field: static public System.Int32 MinimumBreadcrumbsFileSize
    static void _set_MinimumBreadcrumbsFileSize(int value);
    // static field const value: static System.String BreadcrumbLogFilePrefix
    static constexpr const char* BreadcrumbLogFilePrefix = "bt-breadcrumbs";
    // Get static field: static System.String BreadcrumbLogFilePrefix
    static ::StringW _get_BreadcrumbLogFilePrefix();
    // Set static field: static System.String BreadcrumbLogFilePrefix
    static void _set_BreadcrumbLogFilePrefix(::StringW value);
    // static field const value: static System.String BreadcrumbLogFileName
    static constexpr const char* BreadcrumbLogFileName = "bt-breadcrumbs-0";
    // Get static field: static System.String BreadcrumbLogFileName
    static ::StringW _get_BreadcrumbLogFileName();
    // Set static field: static System.String BreadcrumbLogFileName
    static void _set_BreadcrumbLogFileName(::StringW value);
    // Get static field: static System.Byte[] NewRow
    static ::ArrayW<uint8_t> _get_NewRow();
    // Set static field: static System.Byte[] NewRow
    static void _set_NewRow(::ArrayW<uint8_t> value);
    // Get static field: static System.Byte[] EndOfDocument
    static ::ArrayW<uint8_t> _get_EndOfDocument();
    // Set static field: static System.Byte[] EndOfDocument
    static void _set_EndOfDocument(::ArrayW<uint8_t> value);
    // Get static field: static System.Byte[] StartOfDocument
    static ::ArrayW<uint8_t> _get_StartOfDocument();
    // Set static field: static System.Byte[] StartOfDocument
    static void _set_StartOfDocument(::ArrayW<uint8_t> value);
    // Get instance field reference: private System.String <BreadcrumbsFilePath>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$BreadcrumbsFilePath$k__BackingField();
    // Get instance field reference: private System.Int64 _breadcrumbsSize
    [[deprecated("Use field access instead!")]] int64_t& dyn__breadcrumbsSize();
    // Get instance field reference: private System.Boolean _emptyFile
    [[deprecated("Use field access instead!")]] bool& dyn__emptyFile();
    // Get instance field reference: private System.Double _breadcrumbId
    [[deprecated("Use field access instead!")]] double& dyn__breadcrumbId();
    // Get instance field reference: private System.Object _lockObject
    [[deprecated("Use field access instead!")]] ::Il2CppObject*& dyn__lockObject();
    // Get instance field reference: private System.Int64 currentSize
    [[deprecated("Use field access instead!")]] int64_t& dyn_currentSize();
    // Get instance field reference: private readonly System.Collections.Generic.Queue`1<System.Int64> _logSize
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<int64_t>*& dyn__logSize();
    // Get instance field reference: private readonly System.String _storagePath
    [[deprecated("Use field access instead!")]] ::StringW& dyn__storagePath();
    // Get instance field reference: private Backtrace.Unity.Model.Breadcrumbs.Storage.IBreadcrumbFile <BreadcrumbFile>k__BackingField
    [[deprecated("Use field access instead!")]] ::Backtrace::Unity::Model::Breadcrumbs::Storage::IBreadcrumbFile*& dyn_$BreadcrumbFile$k__BackingField();
    // public System.String get_BreadcrumbsFilePath()
    // Offset: 0x2A6FCD4
    ::StringW get_BreadcrumbsFilePath();
    // private System.Void set_BreadcrumbsFilePath(System.String value)
    // Offset: 0x2A6FCDC
    void set_BreadcrumbsFilePath(::StringW value);
    // public System.Int64 get_BreadcrumbsSize()
    // Offset: 0x2A6FCE4
    int64_t get_BreadcrumbsSize();
    // public System.Void set_BreadcrumbsSize(System.Int64 value)
    // Offset: 0x2A6FCEC
    void set_BreadcrumbsSize(int64_t value);
    // Backtrace.Unity.Model.Breadcrumbs.Storage.IBreadcrumbFile get_BreadcrumbFile()
    // Offset: 0x2A6FD50
    ::Backtrace::Unity::Model::Breadcrumbs::Storage::IBreadcrumbFile* get_BreadcrumbFile();
    // System.Void set_BreadcrumbFile(Backtrace.Unity.Model.Breadcrumbs.Storage.IBreadcrumbFile value)
    // Offset: 0x2A6FD58
    void set_BreadcrumbFile(::Backtrace::Unity::Model::Breadcrumbs::Storage::IBreadcrumbFile* value);
    // public System.Void .ctor(System.String storagePath)
    // Offset: 0x2A6FD60
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BacktraceStorageLogManager* New_ctor(::StringW storagePath) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BacktraceStorageLogManager*, creationType>(storagePath)));
    }
    // public System.Boolean Enable()
    // Offset: 0x2A6FFC0
    bool Enable();
    // public System.Boolean Add(System.String message, Backtrace.Unity.Model.Breadcrumbs.BreadcrumbLevel level, Backtrace.Unity.Model.Breadcrumbs.UnityEngineLogLevel type, System.Collections.Generic.IDictionary`2<System.String,System.String> attributes)
    // Offset: 0x2A70404
    bool Add(::StringW message, ::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel level, ::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel type, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes);
    // private Backtrace.Unity.Json.BacktraceJObject CreateBreadcrumbJson(System.Double id, System.String message, Backtrace.Unity.Model.Breadcrumbs.BreadcrumbLevel level, Backtrace.Unity.Model.Breadcrumbs.UnityEngineLogLevel type, System.Collections.Generic.IDictionary`2<System.String,System.String> attributes)
    // Offset: 0x2A706B0
    ::Backtrace::Unity::Json::BacktraceJObject* CreateBreadcrumbJson(double id, ::StringW message, ::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel level, ::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel type, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes);
    // private System.Boolean AppendBreadcrumb(System.Byte[] bytes)
    // Offset: 0x2A70F40
    bool AppendBreadcrumb(::ArrayW<uint8_t> bytes);
    // private System.Void ClearOldLogs()
    // Offset: 0x2A70A78
    void ClearOldLogs();
    // private System.Int64 GetNextStartPosition()
    // Offset: 0x2A713D0
    int64_t GetNextStartPosition();
    // public System.Boolean Clear()
    // Offset: 0x2A714B4
    bool Clear();
    // public System.Int32 Length()
    // Offset: 0x2A71604
    int Length();
    // public System.Double BreadcrumbId()
    // Offset: 0x2A7164C
    double BreadcrumbId();
    // public System.String Archive()
    // Offset: 0x2A71654
    ::StringW Archive();
    // static private System.Void .cctor()
    // Offset: 0x2A7174C
    static void _cctor();
  }; // Backtrace.Unity.Model.Breadcrumbs.Storage.BacktraceStorageLogManager
  #pragma pack(pop)
  static check_size<sizeof(BacktraceStorageLogManager), 80 + sizeof(::Backtrace::Unity::Model::Breadcrumbs::Storage::IBreadcrumbFile*)> __Backtrace_Unity_Model_Breadcrumbs_Storage_BacktraceStorageLogManagerSizeCheck;
  static_assert(sizeof(BacktraceStorageLogManager) == 0x58);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::get_BreadcrumbsFilePath
// Il2CppName: get_BreadcrumbsFilePath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::*)()>(&Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::get_BreadcrumbsFilePath)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager*), "get_BreadcrumbsFilePath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::set_BreadcrumbsFilePath
// Il2CppName: set_BreadcrumbsFilePath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::*)(::StringW)>(&Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::set_BreadcrumbsFilePath)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager*), "set_BreadcrumbsFilePath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::get_BreadcrumbsSize
// Il2CppName: get_BreadcrumbsSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::*)()>(&Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::get_BreadcrumbsSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager*), "get_BreadcrumbsSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::set_BreadcrumbsSize
// Il2CppName: set_BreadcrumbsSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::*)(int64_t)>(&Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::set_BreadcrumbsSize)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager*), "set_BreadcrumbsSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::get_BreadcrumbFile
// Il2CppName: get_BreadcrumbFile
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Backtrace::Unity::Model::Breadcrumbs::Storage::IBreadcrumbFile* (Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::*)()>(&Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::get_BreadcrumbFile)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager*), "get_BreadcrumbFile", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::set_BreadcrumbFile
// Il2CppName: set_BreadcrumbFile
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::*)(::Backtrace::Unity::Model::Breadcrumbs::Storage::IBreadcrumbFile*)>(&Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::set_BreadcrumbFile)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Backtrace.Unity.Model.Breadcrumbs.Storage", "IBreadcrumbFile")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager*), "set_BreadcrumbFile", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::Enable
// Il2CppName: Enable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::*)()>(&Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::Enable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager*), "Enable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::*)(::StringW, ::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel, ::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>*)>(&Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::Add)> {
  static const MethodInfo* get() {
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* level = &::il2cpp_utils::GetClassFromName("Backtrace.Unity.Model.Breadcrumbs", "BreadcrumbLevel")->byval_arg;
    static auto* type = &::il2cpp_utils::GetClassFromName("Backtrace.Unity.Model.Breadcrumbs", "UnityEngineLogLevel")->byval_arg;
    static auto* attributes = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IDictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{message, level, type, attributes});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::CreateBreadcrumbJson
// Il2CppName: CreateBreadcrumbJson
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Backtrace::Unity::Json::BacktraceJObject* (Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::*)(double, ::StringW, ::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel, ::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>*)>(&Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::CreateBreadcrumbJson)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* level = &::il2cpp_utils::GetClassFromName("Backtrace.Unity.Model.Breadcrumbs", "BreadcrumbLevel")->byval_arg;
    static auto* type = &::il2cpp_utils::GetClassFromName("Backtrace.Unity.Model.Breadcrumbs", "UnityEngineLogLevel")->byval_arg;
    static auto* attributes = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IDictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager*), "CreateBreadcrumbJson", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, message, level, type, attributes});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::AppendBreadcrumb
// Il2CppName: AppendBreadcrumb
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::*)(::ArrayW<uint8_t>)>(&Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::AppendBreadcrumb)> {
  static const MethodInfo* get() {
    static auto* bytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager*), "AppendBreadcrumb", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bytes});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::ClearOldLogs
// Il2CppName: ClearOldLogs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::*)()>(&Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::ClearOldLogs)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager*), "ClearOldLogs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::GetNextStartPosition
// Il2CppName: GetNextStartPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::*)()>(&Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::GetNextStartPosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager*), "GetNextStartPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::Clear
// Il2CppName: Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::*)()>(&Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::Clear)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager*), "Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::Length
// Il2CppName: Length
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::*)()>(&Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::Length)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager*), "Length", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::BreadcrumbId
// Il2CppName: BreadcrumbId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::*)()>(&Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::BreadcrumbId)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager*), "BreadcrumbId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::Archive
// Il2CppName: Archive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::*)()>(&Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::Archive)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager*), "Archive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
