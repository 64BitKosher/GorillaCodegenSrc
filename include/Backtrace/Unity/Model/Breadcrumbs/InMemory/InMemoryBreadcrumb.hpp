// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IDictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class IDictionary_2;
}
// Forward declaring namespace: Backtrace::Unity::Model::Breadcrumbs
namespace Backtrace::Unity::Model::Breadcrumbs {
  // Forward declaring type: BreadcrumbLevel
  struct BreadcrumbLevel;
  // Forward declaring type: UnityEngineLogLevel
  struct UnityEngineLogLevel;
}
// Completed forward declares
// Type namespace: Backtrace.Unity.Model.Breadcrumbs.InMemory
namespace Backtrace::Unity::Model::Breadcrumbs::InMemory {
  // Forward declaring type: InMemoryBreadcrumb
  class InMemoryBreadcrumb;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb);
DEFINE_IL2CPP_ARG_TYPE(::Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb*, "Backtrace.Unity.Model.Breadcrumbs.InMemory", "InMemoryBreadcrumb");
// Type namespace: Backtrace.Unity.Model.Breadcrumbs.InMemory
namespace Backtrace::Unity::Model::Breadcrumbs::InMemory {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: Backtrace.Unity.Model.Breadcrumbs.InMemory.InMemoryBreadcrumb
  // [TokenAttribute] Offset: FFFFFFFF
  class InMemoryBreadcrumb : public ::Il2CppObject {
    public:
    public:
    // public System.String message
    // Size: 0x8
    // Offset: 0x10
    ::StringW message;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String timestamp
    // Size: 0x8
    // Offset: 0x18
    ::StringW timestamp;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String type
    // Size: 0x8
    // Offset: 0x20
    ::StringW type;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String level
    // Size: 0x8
    // Offset: 0x28
    ::StringW level;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Collections.Generic.IDictionary`2<System.String,System.String> Attributes
    // Size: 0x8
    // Offset: 0x30
    ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* Attributes;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>*) == 0x8);
    public:
    // Get instance field reference: public System.String message
    [[deprecated("Use field access instead!")]] ::StringW& dyn_message();
    // Get instance field reference: public System.String timestamp
    [[deprecated("Use field access instead!")]] ::StringW& dyn_timestamp();
    // Get instance field reference: public System.String type
    [[deprecated("Use field access instead!")]] ::StringW& dyn_type();
    // Get instance field reference: public System.String level
    [[deprecated("Use field access instead!")]] ::StringW& dyn_level();
    // Get instance field reference: public System.Collections.Generic.IDictionary`2<System.String,System.String> Attributes
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>*& dyn_Attributes();
    // public System.String get_Message()
    // Offset: 0x2A720AC
    ::StringW get_Message();
    // public System.Void set_Message(System.String value)
    // Offset: 0x2A720B4
    void set_Message(::StringW value);
    // public System.Double get_Timestamp()
    // Offset: 0x2A720BC
    double get_Timestamp();
    // public System.Void set_Timestamp(System.Double value)
    // Offset: 0x2A71D48
    void set_Timestamp(double value);
    // public Backtrace.Unity.Model.Breadcrumbs.BreadcrumbLevel get_Type()
    // Offset: 0x2A72118
    ::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel get_Type();
    // public System.Void set_Type(Backtrace.Unity.Model.Breadcrumbs.BreadcrumbLevel value)
    // Offset: 0x2A71EF0
    void set_Type(::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel value);
    // public Backtrace.Unity.Model.Breadcrumbs.UnityEngineLogLevel get_Level()
    // Offset: 0x2A72218
    ::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel get_Level();
    // public System.Void set_Level(Backtrace.Unity.Model.Breadcrumbs.UnityEngineLogLevel value)
    // Offset: 0x2A71DE4
    void set_Level(::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel value);
    // public System.Void .ctor()
    // Offset: 0x2A71D40
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static InMemoryBreadcrumb* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<InMemoryBreadcrumb*, creationType>()));
    }
  }; // Backtrace.Unity.Model.Breadcrumbs.InMemory.InMemoryBreadcrumb
  #pragma pack(pop)
  static check_size<sizeof(InMemoryBreadcrumb), 48 + sizeof(::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>*)> __Backtrace_Unity_Model_Breadcrumbs_InMemory_InMemoryBreadcrumbSizeCheck;
  static_assert(sizeof(InMemoryBreadcrumb) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb::get_Message
// Il2CppName: get_Message
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb::*)()>(&Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb::get_Message)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb*), "get_Message", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb::set_Message
// Il2CppName: set_Message
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb::*)(::StringW)>(&Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb::set_Message)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb*), "set_Message", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb::get_Timestamp
// Il2CppName: get_Timestamp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb::*)()>(&Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb::get_Timestamp)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb*), "get_Timestamp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb::set_Timestamp
// Il2CppName: set_Timestamp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb::*)(double)>(&Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb::set_Timestamp)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb*), "set_Timestamp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb::get_Type
// Il2CppName: get_Type
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel (Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb::*)()>(&Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb::get_Type)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb*), "get_Type", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb::set_Type
// Il2CppName: set_Type
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb::*)(::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel)>(&Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb::set_Type)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Backtrace.Unity.Model.Breadcrumbs", "BreadcrumbLevel")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb*), "set_Type", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb::get_Level
// Il2CppName: get_Level
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel (Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb::*)()>(&Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb::get_Level)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb*), "get_Level", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb::set_Level
// Il2CppName: set_Level
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb::*)(::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel)>(&Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb::set_Level)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Backtrace.Unity.Model.Breadcrumbs", "UnityEngineLogLevel")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb*), "set_Level", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
