// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Backtrace.Unity.Model.Breadcrumbs.IBacktraceBreadcrumbs
#include "Backtrace/Unity/Model/Breadcrumbs/IBacktraceBreadcrumbs.hpp"
// Including type: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbType
#include "Backtrace/Unity/Model/Breadcrumbs/BacktraceBreadcrumbType.hpp"
// Including type: Backtrace.Unity.Model.Breadcrumbs.UnityEngineLogLevel
#include "Backtrace/Unity/Model/Breadcrumbs/UnityEngineLogLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Backtrace::Unity::Model::Breadcrumbs
namespace Backtrace::Unity::Model::Breadcrumbs {
  // Forward declaring type: IBacktraceLogManager
  class IBacktraceLogManager;
  // Forward declaring type: BacktraceBreadcrumbsEventHandler
  class BacktraceBreadcrumbsEventHandler;
  // Forward declaring type: BreadcrumbLevel
  struct BreadcrumbLevel;
}
// Forward declaring namespace: Backtrace::Unity::Model
namespace Backtrace::Unity::Model {
  // Forward declaring type: BacktraceReport
  class BacktraceReport;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: LogType
  struct LogType;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IDictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class IDictionary_2;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Exception
  class Exception;
}
// Completed forward declares
// Type namespace: Backtrace.Unity.Model.Breadcrumbs
namespace Backtrace::Unity::Model::Breadcrumbs {
  // Forward declaring type: BacktraceBreadcrumbs
  class BacktraceBreadcrumbs;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs);
DEFINE_IL2CPP_ARG_TYPE(::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*, "Backtrace.Unity.Model.Breadcrumbs", "BacktraceBreadcrumbs");
// Type namespace: Backtrace.Unity.Model.Breadcrumbs
namespace Backtrace::Unity::Model::Breadcrumbs {
  // Size: 0x29
  #pragma pack(push, 1)
  // Autogenerated type: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbs
  // [TokenAttribute] Offset: FFFFFFFF
  class BacktraceBreadcrumbs : public ::Il2CppObject/*, public ::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs*/ {
    public:
    public:
    // private Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbType <BreadcrumbsLevel>k__BackingField
    // Size: 0x4
    // Offset: 0x10
    ::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType BreadcrumbsLevel;
    // Field size check
    static_assert(sizeof(::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType) == 0x4);
    // private Backtrace.Unity.Model.Breadcrumbs.UnityEngineLogLevel <UnityLogLevel>k__BackingField
    // Size: 0x4
    // Offset: 0x14
    ::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel UnityLogLevel;
    // Field size check
    static_assert(sizeof(::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel) == 0x4);
    // readonly Backtrace.Unity.Model.Breadcrumbs.IBacktraceLogManager LogManager
    // Size: 0x8
    // Offset: 0x18
    ::Backtrace::Unity::Model::Breadcrumbs::IBacktraceLogManager* LogManager;
    // Field size check
    static_assert(sizeof(::Backtrace::Unity::Model::Breadcrumbs::IBacktraceLogManager*) == 0x8);
    // readonly Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbsEventHandler EventHandler
    // Size: 0x8
    // Offset: 0x20
    ::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbsEventHandler* EventHandler;
    // Field size check
    static_assert(sizeof(::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbsEventHandler*) == 0x8);
    // private System.Boolean _enabled
    // Size: 0x1
    // Offset: 0x28
    bool enabled;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating interface conversion operator: operator ::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs
    operator ::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs() noexcept {
      return *reinterpret_cast<::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs*>(this);
    }
    // Get instance field reference: private Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbType <BreadcrumbsLevel>k__BackingField
    [[deprecated("Use field access instead!")]] ::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType& dyn_$BreadcrumbsLevel$k__BackingField();
    // Get instance field reference: private Backtrace.Unity.Model.Breadcrumbs.UnityEngineLogLevel <UnityLogLevel>k__BackingField
    [[deprecated("Use field access instead!")]] ::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel& dyn_$UnityLogLevel$k__BackingField();
    // Get instance field reference: readonly Backtrace.Unity.Model.Breadcrumbs.IBacktraceLogManager LogManager
    [[deprecated("Use field access instead!")]] ::Backtrace::Unity::Model::Breadcrumbs::IBacktraceLogManager*& dyn_LogManager();
    // Get instance field reference: readonly Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbsEventHandler EventHandler
    [[deprecated("Use field access instead!")]] ::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbsEventHandler*& dyn_EventHandler();
    // Get instance field reference: private System.Boolean _enabled
    [[deprecated("Use field access instead!")]] bool& dyn__enabled();
    // public Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbType get_BreadcrumbsLevel()
    // Offset: 0x2A6E570
    ::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType get_BreadcrumbsLevel();
    // System.Void set_BreadcrumbsLevel(Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbType value)
    // Offset: 0x2A6E578
    void set_BreadcrumbsLevel(::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType value);
    // public Backtrace.Unity.Model.Breadcrumbs.UnityEngineLogLevel get_UnityLogLevel()
    // Offset: 0x2A6E580
    ::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel get_UnityLogLevel();
    // public System.Void set_UnityLogLevel(Backtrace.Unity.Model.Breadcrumbs.UnityEngineLogLevel value)
    // Offset: 0x2A6E588
    void set_UnityLogLevel(::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel value);
    // public System.Void .ctor(Backtrace.Unity.Model.Breadcrumbs.IBacktraceLogManager logManager, Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbType level, Backtrace.Unity.Model.Breadcrumbs.UnityEngineLogLevel unityLogLevel)
    // Offset: 0x2A6E590
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BacktraceBreadcrumbs* New_ctor(::Backtrace::Unity::Model::Breadcrumbs::IBacktraceLogManager* logManager, ::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType level, ::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel unityLogLevel) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BacktraceBreadcrumbs*, creationType>(logManager, level, unityLogLevel)));
    }
    // public System.Void UnregisterEvents()
    // Offset: 0x2A6E67C
    void UnregisterEvents();
    // public System.Boolean ClearBreadcrumbs()
    // Offset: 0x2A6E9BC
    bool ClearBreadcrumbs();
    // public System.Boolean EnableBreadcrumbs(Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbType level, Backtrace.Unity.Model.Breadcrumbs.UnityEngineLogLevel unityLogLevel)
    // Offset: 0x2A6EA60
    bool EnableBreadcrumbs(::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType level, ::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel unityLogLevel);
    // public System.Boolean EnableBreadcrumbs()
    // Offset: 0x2A6EA68
    bool EnableBreadcrumbs();
    // public System.Boolean FromBacktrace(Backtrace.Unity.Model.BacktraceReport report)
    // Offset: 0x2A6EE80
    bool FromBacktrace(::Backtrace::Unity::Model::BacktraceReport* report);
    // public System.Boolean FromMonoBehavior(System.String message, UnityEngine.LogType type, System.Collections.Generic.IDictionary`2<System.String,System.String> attributes)
    // Offset: 0x2A6EFEC
    bool FromMonoBehavior(::StringW message, ::UnityEngine::LogType type, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes);
    // public System.String GetBreadcrumbLogPath()
    // Offset: 0x2A6F034
    ::StringW GetBreadcrumbLogPath();
    // public System.Boolean Info(System.String message)
    // Offset: 0x2A6F0D4
    bool Info(::StringW message);
    // public System.Boolean Info(System.String message, System.Collections.Generic.IDictionary`2<System.String,System.String> attributes)
    // Offset: 0x2A6F140
    bool Info(::StringW message, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes);
    // public System.Boolean Warning(System.String message)
    // Offset: 0x2A6F168
    bool Warning(::StringW message);
    // public System.Boolean Warning(System.String message, System.Collections.Generic.IDictionary`2<System.String,System.String> attributes)
    // Offset: 0x2A6F190
    bool Warning(::StringW message, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes);
    // public System.Boolean Debug(System.String message, System.Collections.Generic.IDictionary`2<System.String,System.String> attributes)
    // Offset: 0x2A6F1B8
    bool Debug(::StringW message, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes);
    // public System.Boolean Debug(System.String message)
    // Offset: 0x2A6F1E0
    bool Debug(::StringW message);
    // public System.Boolean Exception(System.String message)
    // Offset: 0x2A6F210
    bool Exception(::StringW message);
    // public System.Boolean Exception(System.Exception exception, System.Collections.Generic.IDictionary`2<System.String,System.String> attributes)
    // Offset: 0x2A6F238
    bool Exception(::System::Exception* exception, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes);
    // public System.Boolean Exception(System.Exception exception)
    // Offset: 0x2A6F2A4
    bool Exception(::System::Exception* exception);
    // public System.Boolean Exception(System.String message, System.Collections.Generic.IDictionary`2<System.String,System.String> attributes)
    // Offset: 0x2A6F300
    bool Exception(::StringW message, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes);
    // public System.Boolean Log(System.String message, UnityEngine.LogType type)
    // Offset: 0x2A6F208
    bool Log(::StringW message, ::UnityEngine::LogType type);
    // public System.Boolean Log(System.String message, UnityEngine.LogType logType, System.Collections.Generic.IDictionary`2<System.String,System.String> attributes)
    // Offset: 0x2A6F0FC
    bool Log(::StringW message, ::UnityEngine::LogType logType, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes);
    // System.Boolean AddBreadcrumbs(System.String message, Backtrace.Unity.Model.Breadcrumbs.BreadcrumbLevel level, Backtrace.Unity.Model.Breadcrumbs.UnityEngineLogLevel type, System.Collections.Generic.IDictionary`2<System.String,System.String> attributes)
    // Offset: 0x2A6EEF4
    bool AddBreadcrumbs(::StringW message, ::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel level, ::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel type, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes);
    // System.Boolean ShouldLog(Backtrace.Unity.Model.Breadcrumbs.UnityEngineLogLevel type)
    // Offset: 0x2A6EED4
    bool ShouldLog(::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel type);
    // static Backtrace.Unity.Model.Breadcrumbs.UnityEngineLogLevel ConvertLogTypeToLogLevel(UnityEngine.LogType type)
    // Offset: 0x2A6F014
    static ::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel ConvertLogTypeToLogLevel(::UnityEngine::LogType type);
    // public System.Double BreadcrumbId()
    // Offset: 0x2A6F328
    double BreadcrumbId();
    // public System.Void Update()
    // Offset: 0x2A6F3CC
    void Update();
    // static public System.Boolean CanStoreBreadcrumbs(Backtrace.Unity.Model.Breadcrumbs.UnityEngineLogLevel logLevel, Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbType backtraceBreadcrumbsLevel)
    // Offset: 0x2A6F47C
    static bool CanStoreBreadcrumbs(::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel logLevel, ::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType backtraceBreadcrumbsLevel);
    // public System.String Archive()
    // Offset: 0x2A6F494
    ::StringW Archive();
  }; // Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbs
  #pragma pack(pop)
  static check_size<sizeof(BacktraceBreadcrumbs), 40 + sizeof(bool)> __Backtrace_Unity_Model_Breadcrumbs_BacktraceBreadcrumbsSizeCheck;
  static_assert(sizeof(BacktraceBreadcrumbs) == 0x29);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::get_BreadcrumbsLevel
// Il2CppName: get_BreadcrumbsLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType (Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::*)()>(&Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::get_BreadcrumbsLevel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*), "get_BreadcrumbsLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::set_BreadcrumbsLevel
// Il2CppName: set_BreadcrumbsLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::*)(::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType)>(&Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::set_BreadcrumbsLevel)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Backtrace.Unity.Model.Breadcrumbs", "BacktraceBreadcrumbType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*), "set_BreadcrumbsLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::get_UnityLogLevel
// Il2CppName: get_UnityLogLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel (Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::*)()>(&Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::get_UnityLogLevel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*), "get_UnityLogLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::set_UnityLogLevel
// Il2CppName: set_UnityLogLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::*)(::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel)>(&Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::set_UnityLogLevel)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Backtrace.Unity.Model.Breadcrumbs", "UnityEngineLogLevel")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*), "set_UnityLogLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::UnregisterEvents
// Il2CppName: UnregisterEvents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::*)()>(&Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::UnregisterEvents)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*), "UnregisterEvents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::ClearBreadcrumbs
// Il2CppName: ClearBreadcrumbs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::*)()>(&Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::ClearBreadcrumbs)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*), "ClearBreadcrumbs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::EnableBreadcrumbs
// Il2CppName: EnableBreadcrumbs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::*)(::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType, ::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel)>(&Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::EnableBreadcrumbs)> {
  static const MethodInfo* get() {
    static auto* level = &::il2cpp_utils::GetClassFromName("Backtrace.Unity.Model.Breadcrumbs", "BacktraceBreadcrumbType")->byval_arg;
    static auto* unityLogLevel = &::il2cpp_utils::GetClassFromName("Backtrace.Unity.Model.Breadcrumbs", "UnityEngineLogLevel")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*), "EnableBreadcrumbs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{level, unityLogLevel});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::EnableBreadcrumbs
// Il2CppName: EnableBreadcrumbs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::*)()>(&Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::EnableBreadcrumbs)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*), "EnableBreadcrumbs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::FromBacktrace
// Il2CppName: FromBacktrace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::*)(::Backtrace::Unity::Model::BacktraceReport*)>(&Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::FromBacktrace)> {
  static const MethodInfo* get() {
    static auto* report = &::il2cpp_utils::GetClassFromName("Backtrace.Unity.Model", "BacktraceReport")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*), "FromBacktrace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{report});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::FromMonoBehavior
// Il2CppName: FromMonoBehavior
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::*)(::StringW, ::UnityEngine::LogType, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>*)>(&Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::FromMonoBehavior)> {
  static const MethodInfo* get() {
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* type = &::il2cpp_utils::GetClassFromName("UnityEngine", "LogType")->byval_arg;
    static auto* attributes = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IDictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*), "FromMonoBehavior", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{message, type, attributes});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::GetBreadcrumbLogPath
// Il2CppName: GetBreadcrumbLogPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::*)()>(&Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::GetBreadcrumbLogPath)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*), "GetBreadcrumbLogPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Info
// Il2CppName: Info
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::*)(::StringW)>(&Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Info)> {
  static const MethodInfo* get() {
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*), "Info", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{message});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Info
// Il2CppName: Info
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::*)(::StringW, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>*)>(&Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Info)> {
  static const MethodInfo* get() {
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* attributes = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IDictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*), "Info", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{message, attributes});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Warning
// Il2CppName: Warning
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::*)(::StringW)>(&Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Warning)> {
  static const MethodInfo* get() {
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*), "Warning", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{message});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Warning
// Il2CppName: Warning
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::*)(::StringW, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>*)>(&Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Warning)> {
  static const MethodInfo* get() {
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* attributes = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IDictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*), "Warning", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{message, attributes});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Debug
// Il2CppName: Debug
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::*)(::StringW, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>*)>(&Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Debug)> {
  static const MethodInfo* get() {
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* attributes = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IDictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*), "Debug", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{message, attributes});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Debug
// Il2CppName: Debug
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::*)(::StringW)>(&Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Debug)> {
  static const MethodInfo* get() {
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*), "Debug", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{message});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Exception
// Il2CppName: Exception
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::*)(::StringW)>(&Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Exception)> {
  static const MethodInfo* get() {
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*), "Exception", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{message});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Exception
// Il2CppName: Exception
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::*)(::System::Exception*, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>*)>(&Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Exception)> {
  static const MethodInfo* get() {
    static auto* exception = &::il2cpp_utils::GetClassFromName("System", "Exception")->byval_arg;
    static auto* attributes = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IDictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*), "Exception", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{exception, attributes});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Exception
// Il2CppName: Exception
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::*)(::System::Exception*)>(&Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Exception)> {
  static const MethodInfo* get() {
    static auto* exception = &::il2cpp_utils::GetClassFromName("System", "Exception")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*), "Exception", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{exception});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Exception
// Il2CppName: Exception
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::*)(::StringW, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>*)>(&Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Exception)> {
  static const MethodInfo* get() {
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* attributes = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IDictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*), "Exception", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{message, attributes});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Log
// Il2CppName: Log
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::*)(::StringW, ::UnityEngine::LogType)>(&Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Log)> {
  static const MethodInfo* get() {
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* type = &::il2cpp_utils::GetClassFromName("UnityEngine", "LogType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*), "Log", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{message, type});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Log
// Il2CppName: Log
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::*)(::StringW, ::UnityEngine::LogType, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>*)>(&Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Log)> {
  static const MethodInfo* get() {
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* logType = &::il2cpp_utils::GetClassFromName("UnityEngine", "LogType")->byval_arg;
    static auto* attributes = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IDictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*), "Log", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{message, logType, attributes});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::AddBreadcrumbs
// Il2CppName: AddBreadcrumbs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::*)(::StringW, ::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel, ::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>*)>(&Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::AddBreadcrumbs)> {
  static const MethodInfo* get() {
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* level = &::il2cpp_utils::GetClassFromName("Backtrace.Unity.Model.Breadcrumbs", "BreadcrumbLevel")->byval_arg;
    static auto* type = &::il2cpp_utils::GetClassFromName("Backtrace.Unity.Model.Breadcrumbs", "UnityEngineLogLevel")->byval_arg;
    static auto* attributes = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IDictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*), "AddBreadcrumbs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{message, level, type, attributes});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::ShouldLog
// Il2CppName: ShouldLog
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::*)(::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel)>(&Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::ShouldLog)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("Backtrace.Unity.Model.Breadcrumbs", "UnityEngineLogLevel")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*), "ShouldLog", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::ConvertLogTypeToLogLevel
// Il2CppName: ConvertLogTypeToLogLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel (*)(::UnityEngine::LogType)>(&Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::ConvertLogTypeToLogLevel)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("UnityEngine", "LogType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*), "ConvertLogTypeToLogLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::BreadcrumbId
// Il2CppName: BreadcrumbId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::*)()>(&Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::BreadcrumbId)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*), "BreadcrumbId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::*)()>(&Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::CanStoreBreadcrumbs
// Il2CppName: CanStoreBreadcrumbs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel, ::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType)>(&Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::CanStoreBreadcrumbs)> {
  static const MethodInfo* get() {
    static auto* logLevel = &::il2cpp_utils::GetClassFromName("Backtrace.Unity.Model.Breadcrumbs", "UnityEngineLogLevel")->byval_arg;
    static auto* backtraceBreadcrumbsLevel = &::il2cpp_utils::GetClassFromName("Backtrace.Unity.Model.Breadcrumbs", "BacktraceBreadcrumbType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*), "CanStoreBreadcrumbs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{logLevel, backtraceBreadcrumbsLevel});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Archive
// Il2CppName: Archive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::*)()>(&Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Archive)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*), "Archive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
