// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Networking.CertificateHandler
#include "UnityEngine/Networking/CertificateHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: Backtrace.Unity.Model
namespace Backtrace::Unity::Model {
  // Forward declaring type: BacktraceSelfSSLCertificateHandler
  class BacktraceSelfSSLCertificateHandler;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Backtrace::Unity::Model::BacktraceSelfSSLCertificateHandler);
DEFINE_IL2CPP_ARG_TYPE(::Backtrace::Unity::Model::BacktraceSelfSSLCertificateHandler*, "Backtrace.Unity.Model", "BacktraceSelfSSLCertificateHandler");
// Type namespace: Backtrace.Unity.Model
namespace Backtrace::Unity::Model {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: Backtrace.Unity.Model.BacktraceSelfSSLCertificateHandler
  // [TokenAttribute] Offset: FFFFFFFF
  class BacktraceSelfSSLCertificateHandler : public ::UnityEngine::Networking::CertificateHandler {
    public:
    // Get static field: static private readonly System.String PUB_KEY
    static ::StringW _get_PUB_KEY();
    // Set static field: static private readonly System.String PUB_KEY
    static void _set_PUB_KEY(::StringW value);
    // public System.Void .ctor()
    // Offset: 0x2A63E34
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BacktraceSelfSSLCertificateHandler* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceSelfSSLCertificateHandler::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BacktraceSelfSSLCertificateHandler*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x2A63E3C
    static void _cctor();
    // protected override System.Boolean ValidateCertificate(System.Byte[] certificateData)
    // Offset: 0x2A63E2C
    // Implemented from: UnityEngine.Networking.CertificateHandler
    // Base method: System.Boolean CertificateHandler::ValidateCertificate(System.Byte[] certificateData)
    bool ValidateCertificate(::ArrayW<uint8_t> certificateData);
  }; // Backtrace.Unity.Model.BacktraceSelfSSLCertificateHandler
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Backtrace::Unity::Model::BacktraceSelfSSLCertificateHandler::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Backtrace::Unity::Model::BacktraceSelfSSLCertificateHandler::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Backtrace::Unity::Model::BacktraceSelfSSLCertificateHandler::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::BacktraceSelfSSLCertificateHandler*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::BacktraceSelfSSLCertificateHandler::ValidateCertificate
// Il2CppName: ValidateCertificate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Backtrace::Unity::Model::BacktraceSelfSSLCertificateHandler::*)(::ArrayW<uint8_t>)>(&Backtrace::Unity::Model::BacktraceSelfSSLCertificateHandler::ValidateCertificate)> {
  static const MethodInfo* get() {
    static auto* certificateData = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::BacktraceSelfSSLCertificateHandler*), "ValidateCertificate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{certificateData});
  }
};
