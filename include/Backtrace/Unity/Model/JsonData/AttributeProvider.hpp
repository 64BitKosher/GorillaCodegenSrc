// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IDictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class IDictionary_2;
  // Forward declaring type: IList`1<T>
  template<typename T>
  class IList_1;
  // Forward declaring type: IEnumerable`1<T>
  template<typename T>
  class IEnumerable_1;
}
// Forward declaring namespace: Backtrace::Unity::Model::Attributes
namespace Backtrace::Unity::Model::Attributes {
  // Forward declaring type: IDynamicAttributeProvider
  class IDynamicAttributeProvider;
  // Forward declaring type: IScopeAttributeProvider
  class IScopeAttributeProvider;
}
// Completed forward declares
// Type namespace: Backtrace.Unity.Model.JsonData
namespace Backtrace::Unity::Model::JsonData {
  // Forward declaring type: AttributeProvider
  class AttributeProvider;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Backtrace::Unity::Model::JsonData::AttributeProvider);
DEFINE_IL2CPP_ARG_TYPE(::Backtrace::Unity::Model::JsonData::AttributeProvider*, "Backtrace.Unity.Model.JsonData", "AttributeProvider");
// Type namespace: Backtrace.Unity.Model.JsonData
namespace Backtrace::Unity::Model::JsonData {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: Backtrace.Unity.Model.JsonData.AttributeProvider
  // [TokenAttribute] Offset: FFFFFFFF
  // [DefaultMemberAttribute] Offset: FFFFFFFF
  class AttributeProvider : public ::Il2CppObject {
    public:
    public:
    // private readonly System.Collections.Generic.IDictionary`2<System.String,System.String> _attributes
    // Size: 0x8
    // Offset: 0x10
    ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>*) == 0x8);
    // private readonly System.Collections.Generic.IList`1<Backtrace.Unity.Model.Attributes.IDynamicAttributeProvider> _dynamicAttributeProvider
    // Size: 0x8
    // Offset: 0x18
    ::System::Collections::Generic::IList_1<::Backtrace::Unity::Model::Attributes::IDynamicAttributeProvider*>* dynamicAttributeProvider;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::IList_1<::Backtrace::Unity::Model::Attributes::IDynamicAttributeProvider*>*) == 0x8);
    public:
    // Get instance field reference: private readonly System.Collections.Generic.IDictionary`2<System.String,System.String> _attributes
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>*& dyn__attributes();
    // Get instance field reference: private readonly System.Collections.Generic.IList`1<Backtrace.Unity.Model.Attributes.IDynamicAttributeProvider> _dynamicAttributeProvider
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::IList_1<::Backtrace::Unity::Model::Attributes::IDynamicAttributeProvider*>*& dyn__dynamicAttributeProvider();
    // public System.String get_ApplicationVersion()
    // Offset: 0x2A6AAD8
    ::StringW get_ApplicationVersion();
    // public System.String get_ApplicationSessionKey()
    // Offset: 0x2A6ABC8
    ::StringW get_ApplicationSessionKey();
    // public System.String get_ApplicationGuid()
    // Offset: 0x2A6ACA0
    ::StringW get_ApplicationGuid();
    // System.Void .ctor()
    // Offset: 0x2A6ACE8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AttributeProvider* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::AttributeProvider::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AttributeProvider*, creationType>()));
    }
    // System.Void .ctor(System.Collections.Generic.IEnumerable`1<Backtrace.Unity.Model.Attributes.IScopeAttributeProvider> scopeAttributeProvider, System.Collections.Generic.IList`1<Backtrace.Unity.Model.Attributes.IDynamicAttributeProvider> dynamicAttributeProvider)
    // Offset: 0x2A6B184
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AttributeProvider* New_ctor(::System::Collections::Generic::IEnumerable_1<::Backtrace::Unity::Model::Attributes::IScopeAttributeProvider*>* scopeAttributeProvider, ::System::Collections::Generic::IList_1<::Backtrace::Unity::Model::Attributes::IDynamicAttributeProvider*>* dynamicAttributeProvider) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::AttributeProvider::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AttributeProvider*, creationType>(scopeAttributeProvider, dynamicAttributeProvider)));
    }
    // public System.String get_Item(System.String index)
    // Offset: 0x2A6AB20
    ::StringW get_Item(::StringW index);
    // public System.Void set_Item(System.String index, System.String value)
    // Offset: 0x2A6B5E8
    void set_Item(::StringW index, ::StringW value);
    // public System.Int32 Count()
    // Offset: 0x2A6B6A4
    int Count();
    // public System.Void AddDynamicAttributeProvider(Backtrace.Unity.Model.Attributes.IDynamicAttributeProvider attributeProvider)
    // Offset: 0x2A6B744
    void AddDynamicAttributeProvider(::Backtrace::Unity::Model::Attributes::IDynamicAttributeProvider* attributeProvider);
    // System.Void AddScopedAttributeProvider(Backtrace.Unity.Model.Attributes.IScopeAttributeProvider attributeProvider)
    // Offset: 0x2A6B800
    void AddScopedAttributeProvider(::Backtrace::Unity::Model::Attributes::IScopeAttributeProvider* attributeProvider);
    // System.Void AddAttributes(System.Collections.Generic.IDictionary`2<System.String,System.String> source, System.Boolean includeDynamic)
    // Offset: 0x2A6B8B0
    void AddAttributes(::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* source, bool includeDynamic);
    // System.Collections.Generic.IDictionary`2<System.String,System.String> GenerateAttributes(System.Boolean includeDynamic)
    // Offset: 0x2A6811C
    ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* GenerateAttributes(bool includeDynamic);
  }; // Backtrace.Unity.Model.JsonData.AttributeProvider
  #pragma pack(pop)
  static check_size<sizeof(AttributeProvider), 24 + sizeof(::System::Collections::Generic::IList_1<::Backtrace::Unity::Model::Attributes::IDynamicAttributeProvider*>*)> __Backtrace_Unity_Model_JsonData_AttributeProviderSizeCheck;
  static_assert(sizeof(AttributeProvider) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Backtrace::Unity::Model::JsonData::AttributeProvider::get_ApplicationVersion
// Il2CppName: get_ApplicationVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Backtrace::Unity::Model::JsonData::AttributeProvider::*)()>(&Backtrace::Unity::Model::JsonData::AttributeProvider::get_ApplicationVersion)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::JsonData::AttributeProvider*), "get_ApplicationVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::JsonData::AttributeProvider::get_ApplicationSessionKey
// Il2CppName: get_ApplicationSessionKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Backtrace::Unity::Model::JsonData::AttributeProvider::*)()>(&Backtrace::Unity::Model::JsonData::AttributeProvider::get_ApplicationSessionKey)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::JsonData::AttributeProvider*), "get_ApplicationSessionKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::JsonData::AttributeProvider::get_ApplicationGuid
// Il2CppName: get_ApplicationGuid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Backtrace::Unity::Model::JsonData::AttributeProvider::*)()>(&Backtrace::Unity::Model::JsonData::AttributeProvider::get_ApplicationGuid)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::JsonData::AttributeProvider*), "get_ApplicationGuid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::JsonData::AttributeProvider::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Backtrace::Unity::Model::JsonData::AttributeProvider::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Backtrace::Unity::Model::JsonData::AttributeProvider::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Backtrace::Unity::Model::JsonData::AttributeProvider::*)(::StringW)>(&Backtrace::Unity::Model::JsonData::AttributeProvider::get_Item)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::JsonData::AttributeProvider*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::JsonData::AttributeProvider::set_Item
// Il2CppName: set_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Backtrace::Unity::Model::JsonData::AttributeProvider::*)(::StringW, ::StringW)>(&Backtrace::Unity::Model::JsonData::AttributeProvider::set_Item)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::JsonData::AttributeProvider*), "set_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, value});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::JsonData::AttributeProvider::Count
// Il2CppName: Count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Backtrace::Unity::Model::JsonData::AttributeProvider::*)()>(&Backtrace::Unity::Model::JsonData::AttributeProvider::Count)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::JsonData::AttributeProvider*), "Count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::JsonData::AttributeProvider::AddDynamicAttributeProvider
// Il2CppName: AddDynamicAttributeProvider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Backtrace::Unity::Model::JsonData::AttributeProvider::*)(::Backtrace::Unity::Model::Attributes::IDynamicAttributeProvider*)>(&Backtrace::Unity::Model::JsonData::AttributeProvider::AddDynamicAttributeProvider)> {
  static const MethodInfo* get() {
    static auto* attributeProvider = &::il2cpp_utils::GetClassFromName("Backtrace.Unity.Model.Attributes", "IDynamicAttributeProvider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::JsonData::AttributeProvider*), "AddDynamicAttributeProvider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{attributeProvider});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::JsonData::AttributeProvider::AddScopedAttributeProvider
// Il2CppName: AddScopedAttributeProvider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Backtrace::Unity::Model::JsonData::AttributeProvider::*)(::Backtrace::Unity::Model::Attributes::IScopeAttributeProvider*)>(&Backtrace::Unity::Model::JsonData::AttributeProvider::AddScopedAttributeProvider)> {
  static const MethodInfo* get() {
    static auto* attributeProvider = &::il2cpp_utils::GetClassFromName("Backtrace.Unity.Model.Attributes", "IScopeAttributeProvider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::JsonData::AttributeProvider*), "AddScopedAttributeProvider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{attributeProvider});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::JsonData::AttributeProvider::AddAttributes
// Il2CppName: AddAttributes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Backtrace::Unity::Model::JsonData::AttributeProvider::*)(::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>*, bool)>(&Backtrace::Unity::Model::JsonData::AttributeProvider::AddAttributes)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IDictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    static auto* includeDynamic = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::JsonData::AttributeProvider*), "AddAttributes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, includeDynamic});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::JsonData::AttributeProvider::GenerateAttributes
// Il2CppName: GenerateAttributes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* (Backtrace::Unity::Model::JsonData::AttributeProvider::*)(bool)>(&Backtrace::Unity::Model::JsonData::AttributeProvider::GenerateAttributes)> {
  static const MethodInfo* get() {
    static auto* includeDynamic = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::JsonData::AttributeProvider*), "GenerateAttributes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{includeDynamic});
  }
};
