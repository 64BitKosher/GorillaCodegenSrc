// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Exception
  class Exception;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: Backtrace::Unity::Json
namespace Backtrace::Unity::Json {
  // Forward declaring type: BacktraceJObject
  class BacktraceJObject;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: Component
  class Component;
}
// Completed forward declares
// Type namespace: Backtrace.Unity.Model.JsonData
namespace Backtrace::Unity::Model::JsonData {
  // Forward declaring type: Annotations
  class Annotations;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Backtrace::Unity::Model::JsonData::Annotations);
DEFINE_IL2CPP_ARG_TYPE(::Backtrace::Unity::Model::JsonData::Annotations*, "Backtrace.Unity.Model.JsonData", "Annotations");
// Type namespace: Backtrace.Unity.Model.JsonData
namespace Backtrace::Unity::Model::JsonData {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: Backtrace.Unity.Model.JsonData.Annotations
  // [TokenAttribute] Offset: FFFFFFFF
  class Annotations : public ::Il2CppObject {
    public:
    public:
    // private readonly System.Int32 _gameObjectDepth
    // Size: 0x4
    // Offset: 0x10
    int gameObjectDepth;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: gameObjectDepth and: Exception
    char __padding0[0x4] = {};
    // private System.Exception <Exception>k__BackingField
    // Size: 0x8
    // Offset: 0x18
    ::System::Exception* Exception;
    // Field size check
    static_assert(sizeof(::System::Exception*) == 0x8);
    public:
    // Get static field: static System.Collections.Generic.Dictionary`2<System.String,System.String> _environmentVariablesCache
    static ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* _get__environmentVariablesCache();
    // Set static field: static System.Collections.Generic.Dictionary`2<System.String,System.String> _environmentVariablesCache
    static void _set__environmentVariablesCache(::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* value);
    // Get static field: static System.Boolean VariablesLoaded
    static bool _get_VariablesLoaded();
    // Set static field: static System.Boolean VariablesLoaded
    static void _set_VariablesLoaded(bool value);
    // Get instance field reference: private readonly System.Int32 _gameObjectDepth
    [[deprecated("Use field access instead!")]] int& dyn__gameObjectDepth();
    // Get instance field reference: private System.Exception <Exception>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Exception*& dyn_$Exception$k__BackingField();
    // static public System.Collections.Generic.Dictionary`2<System.String,System.String> get_EnvironmentVariablesCache()
    // Offset: 0x2A68DEC
    static ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* get_EnvironmentVariablesCache();
    // static public System.Void set_EnvironmentVariablesCache(System.Collections.Generic.Dictionary`2<System.String,System.String> value)
    // Offset: 0x2A6929C
    static void set_EnvironmentVariablesCache(::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* value);
    // public System.Collections.Generic.Dictionary`2<System.String,System.String> get_EnvironmentVariables()
    // Offset: 0x2A692F4
    ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* get_EnvironmentVariables();
    // public System.Void set_EnvironmentVariables(System.Collections.Generic.Dictionary`2<System.String,System.String> value)
    // Offset: 0x2A692F8
    void set_EnvironmentVariables(::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* value);
    // public System.Exception get_Exception()
    // Offset: 0x2A69350
    ::System::Exception* get_Exception();
    // public System.Void set_Exception(System.Exception value)
    // Offset: 0x2A69358
    void set_Exception(::System::Exception* value);
    // public System.Void .ctor(System.Exception exception, System.Int32 gameObjectDepth)
    // Offset: 0x2A69360
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Annotations* New_ctor(::System::Exception* exception, int gameObjectDepth) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::Annotations::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Annotations*, creationType>(exception, gameObjectDepth)));
    }
    // static private System.Collections.Generic.Dictionary`2<System.String,System.String> SetEnvironmentVariables()
    // Offset: 0x2A68E70
    static ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* SetEnvironmentVariables();
    // public Backtrace.Unity.Json.BacktraceJObject ToJson()
    // Offset: 0x2A69398
    ::Backtrace::Unity::Json::BacktraceJObject* ToJson();
    // private Backtrace.Unity.Json.BacktraceJObject ConvertGameObject(UnityEngine.GameObject gameObject, System.Int32 depth)
    // Offset: 0x2A69A48
    ::Backtrace::Unity::Json::BacktraceJObject* ConvertGameObject(::UnityEngine::GameObject* gameObject, int depth);
    // private Backtrace.Unity.Json.BacktraceJObject ConvertGameObject(UnityEngine.Component gameObject, System.String parentName, System.Int32 depth)
    // Offset: 0x2A6A350
    ::Backtrace::Unity::Json::BacktraceJObject* ConvertGameObject(::UnityEngine::Component* gameObject, ::StringW parentName, int depth);
    // private Backtrace.Unity.Json.BacktraceJObject GetJObject(UnityEngine.GameObject gameObject, System.String parentName)
    // Offset: 0x2A69F10
    ::Backtrace::Unity::Json::BacktraceJObject* GetJObject(::UnityEngine::GameObject* gameObject, ::StringW parentName);
    // private Backtrace.Unity.Json.BacktraceJObject GetJObject(UnityEngine.Component gameObject, System.String parentName)
    // Offset: 0x2A6A808
    ::Backtrace::Unity::Json::BacktraceJObject* GetJObject(::UnityEngine::Component* gameObject, ::StringW parentName);
  }; // Backtrace.Unity.Model.JsonData.Annotations
  #pragma pack(pop)
  static check_size<sizeof(Annotations), 24 + sizeof(::System::Exception*)> __Backtrace_Unity_Model_JsonData_AnnotationsSizeCheck;
  static_assert(sizeof(Annotations) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Backtrace::Unity::Model::JsonData::Annotations::get_EnvironmentVariablesCache
// Il2CppName: get_EnvironmentVariablesCache
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* (*)()>(&Backtrace::Unity::Model::JsonData::Annotations::get_EnvironmentVariablesCache)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::JsonData::Annotations*), "get_EnvironmentVariablesCache", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::JsonData::Annotations::set_EnvironmentVariablesCache
// Il2CppName: set_EnvironmentVariablesCache
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*)>(&Backtrace::Unity::Model::JsonData::Annotations::set_EnvironmentVariablesCache)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::JsonData::Annotations*), "set_EnvironmentVariablesCache", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::JsonData::Annotations::get_EnvironmentVariables
// Il2CppName: get_EnvironmentVariables
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* (Backtrace::Unity::Model::JsonData::Annotations::*)()>(&Backtrace::Unity::Model::JsonData::Annotations::get_EnvironmentVariables)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::JsonData::Annotations*), "get_EnvironmentVariables", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::JsonData::Annotations::set_EnvironmentVariables
// Il2CppName: set_EnvironmentVariables
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Backtrace::Unity::Model::JsonData::Annotations::*)(::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*)>(&Backtrace::Unity::Model::JsonData::Annotations::set_EnvironmentVariables)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::JsonData::Annotations*), "set_EnvironmentVariables", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::JsonData::Annotations::get_Exception
// Il2CppName: get_Exception
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Exception* (Backtrace::Unity::Model::JsonData::Annotations::*)()>(&Backtrace::Unity::Model::JsonData::Annotations::get_Exception)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::JsonData::Annotations*), "get_Exception", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::JsonData::Annotations::set_Exception
// Il2CppName: set_Exception
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Backtrace::Unity::Model::JsonData::Annotations::*)(::System::Exception*)>(&Backtrace::Unity::Model::JsonData::Annotations::set_Exception)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Exception")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::JsonData::Annotations*), "set_Exception", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::JsonData::Annotations::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Backtrace::Unity::Model::JsonData::Annotations::SetEnvironmentVariables
// Il2CppName: SetEnvironmentVariables
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* (*)()>(&Backtrace::Unity::Model::JsonData::Annotations::SetEnvironmentVariables)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::JsonData::Annotations*), "SetEnvironmentVariables", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::JsonData::Annotations::ToJson
// Il2CppName: ToJson
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Backtrace::Unity::Json::BacktraceJObject* (Backtrace::Unity::Model::JsonData::Annotations::*)()>(&Backtrace::Unity::Model::JsonData::Annotations::ToJson)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::JsonData::Annotations*), "ToJson", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::JsonData::Annotations::ConvertGameObject
// Il2CppName: ConvertGameObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Backtrace::Unity::Json::BacktraceJObject* (Backtrace::Unity::Model::JsonData::Annotations::*)(::UnityEngine::GameObject*, int)>(&Backtrace::Unity::Model::JsonData::Annotations::ConvertGameObject)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* depth = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::JsonData::Annotations*), "ConvertGameObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, depth});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::JsonData::Annotations::ConvertGameObject
// Il2CppName: ConvertGameObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Backtrace::Unity::Json::BacktraceJObject* (Backtrace::Unity::Model::JsonData::Annotations::*)(::UnityEngine::Component*, ::StringW, int)>(&Backtrace::Unity::Model::JsonData::Annotations::ConvertGameObject)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "Component")->byval_arg;
    static auto* parentName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* depth = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::JsonData::Annotations*), "ConvertGameObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, parentName, depth});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::JsonData::Annotations::GetJObject
// Il2CppName: GetJObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Backtrace::Unity::Json::BacktraceJObject* (Backtrace::Unity::Model::JsonData::Annotations::*)(::UnityEngine::GameObject*, ::StringW)>(&Backtrace::Unity::Model::JsonData::Annotations::GetJObject)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* parentName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::JsonData::Annotations*), "GetJObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, parentName});
  }
};
// Writing MetadataGetter for method: Backtrace::Unity::Model::JsonData::Annotations::GetJObject
// Il2CppName: GetJObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Backtrace::Unity::Json::BacktraceJObject* (Backtrace::Unity::Model::JsonData::Annotations::*)(::UnityEngine::Component*, ::StringW)>(&Backtrace::Unity::Model::JsonData::Annotations::GetJObject)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "Component")->byval_arg;
    static auto* parentName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Backtrace::Unity::Model::JsonData::Annotations*), "GetJObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, parentName});
  }
};
