// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Cinemachine
namespace Cinemachine {
}
// Completed forward declares
// Type namespace: Cinemachine
namespace Cinemachine {
  // Forward declaring type: ClipperLib
  class ClipperLib;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Cinemachine::ClipperLib);
DEFINE_IL2CPP_ARG_TYPE(::Cinemachine::ClipperLib*, "Cinemachine", "ClipperLib");
// Type namespace: Cinemachine
namespace Cinemachine {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Cinemachine.ClipperLib
  // [TokenAttribute] Offset: FFFFFFFF
  class ClipperLib : public ::Il2CppObject {
    public:
    // Nested type: ::Cinemachine::ClipperLib::DoublePoint
    struct DoublePoint;
    // Nested type: ::Cinemachine::ClipperLib::PolyTree
    class PolyTree;
    // Nested type: ::Cinemachine::ClipperLib::PolyNode
    class PolyNode;
    // Nested type: ::Cinemachine::ClipperLib::Int128
    struct Int128;
    // Nested type: ::Cinemachine::ClipperLib::IntPoint
    struct IntPoint;
    // Nested type: ::Cinemachine::ClipperLib::IntRect
    struct IntRect;
    // Nested type: ::Cinemachine::ClipperLib::ClipType
    struct ClipType;
    // Nested type: ::Cinemachine::ClipperLib::PolyType
    struct PolyType;
    // Nested type: ::Cinemachine::ClipperLib::PolyFillType
    struct PolyFillType;
    // Nested type: ::Cinemachine::ClipperLib::JoinType
    struct JoinType;
    // Nested type: ::Cinemachine::ClipperLib::EndType
    struct EndType;
    // Nested type: ::Cinemachine::ClipperLib::EdgeSide
    struct EdgeSide;
    // Nested type: ::Cinemachine::ClipperLib::Direction
    struct Direction;
    // Nested type: ::Cinemachine::ClipperLib::TEdge
    class TEdge;
    // Nested type: ::Cinemachine::ClipperLib::IntersectNode
    class IntersectNode;
    // Nested type: ::Cinemachine::ClipperLib::MyIntersectNodeSort
    class MyIntersectNodeSort;
    // Nested type: ::Cinemachine::ClipperLib::LocalMinima
    class LocalMinima;
    // Nested type: ::Cinemachine::ClipperLib::Scanbeam
    class Scanbeam;
    // Nested type: ::Cinemachine::ClipperLib::Maxima
    class Maxima;
    // Nested type: ::Cinemachine::ClipperLib::OutRec
    class OutRec;
    // Nested type: ::Cinemachine::ClipperLib::OutPt
    class OutPt;
    // Nested type: ::Cinemachine::ClipperLib::Join
    class Join;
    // Nested type: ::Cinemachine::ClipperLib::ClipperBase
    class ClipperBase;
    // Nested type: ::Cinemachine::ClipperLib::Clipper
    class Clipper;
    // Nested type: ::Cinemachine::ClipperLib::ClipperOffset
    class ClipperOffset;
    // Nested type: ::Cinemachine::ClipperLib::ClipperException
    class ClipperException;
  }; // Cinemachine.ClipperLib
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
