// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Cinemachine.CinemachineCore
#include "Cinemachine/CinemachineCore.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Comparison`1<T>
  template<typename T>
  class Comparison_1;
}
// Forward declaring namespace: Cinemachine
namespace Cinemachine {
  // Forward declaring type: CinemachineVirtualCameraBase
  class CinemachineVirtualCameraBase;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Cinemachine::CinemachineCore::$$c);
DEFINE_IL2CPP_ARG_TYPE(::Cinemachine::CinemachineCore::$$c*, "Cinemachine", "CinemachineCore/<>c");
// Type namespace: Cinemachine
namespace Cinemachine {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Cinemachine.CinemachineCore/<>c
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class CinemachineCore::$$c : public ::Il2CppObject {
    public:
    // Get static field: static public readonly Cinemachine.CinemachineCore/<>c <>9
    static ::Cinemachine::CinemachineCore::$$c* _get_$$9();
    // Set static field: static public readonly Cinemachine.CinemachineCore/<>c <>9
    static void _set_$$9(::Cinemachine::CinemachineCore::$$c* value);
    // Get static field: static public System.Comparison`1<Cinemachine.CinemachineVirtualCameraBase> <>9__30_0
    static ::System::Comparison_1<::Cinemachine::CinemachineVirtualCameraBase*>* _get_$$9__30_0();
    // Set static field: static public System.Comparison`1<Cinemachine.CinemachineVirtualCameraBase> <>9__30_0
    static void _set_$$9__30_0(::System::Comparison_1<::Cinemachine::CinemachineVirtualCameraBase*>* value);
    // static private System.Void .cctor()
    // Offset: 0x2AADBA8
    static void _cctor();
    // public System.Void .ctor()
    // Offset: 0x2AADC10
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CinemachineCore::$$c* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineCore::$$c::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CinemachineCore::$$c*, creationType>()));
    }
    // System.Int32 <GetVirtualCamera>b__30_0(Cinemachine.CinemachineVirtualCameraBase x, Cinemachine.CinemachineVirtualCameraBase y)
    // Offset: 0x2AADC18
    int $GetVirtualCamera$b__30_0(::Cinemachine::CinemachineVirtualCameraBase* x, ::Cinemachine::CinemachineVirtualCameraBase* y);
    // System.Single <.cctor>b__56_0(System.String <p0>)
    // Offset: 0x2AADC60
    float $_cctor$b__56_0(::StringW $p0$);
  }; // Cinemachine.CinemachineCore/<>c
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Cinemachine::CinemachineCore::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Cinemachine::CinemachineCore::$$c::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cinemachine::CinemachineCore::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Cinemachine::CinemachineCore::$$c::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Cinemachine::CinemachineCore::$$c::$GetVirtualCamera$b__30_0
// Il2CppName: <GetVirtualCamera>b__30_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Cinemachine::CinemachineCore::$$c::*)(::Cinemachine::CinemachineVirtualCameraBase*, ::Cinemachine::CinemachineVirtualCameraBase*)>(&Cinemachine::CinemachineCore::$$c::$GetVirtualCamera$b__30_0)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("Cinemachine", "CinemachineVirtualCameraBase")->byval_arg;
    static auto* y = &::il2cpp_utils::GetClassFromName("Cinemachine", "CinemachineVirtualCameraBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Cinemachine::CinemachineCore::$$c*), "<GetVirtualCamera>b__30_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x, y});
  }
};
// Writing MetadataGetter for method: Cinemachine::CinemachineCore::$$c::$_cctor$b__56_0
// Il2CppName: <.cctor>b__56_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Cinemachine::CinemachineCore::$$c::*)(::StringW)>(&Cinemachine::CinemachineCore::$$c::$_cctor$b__56_0)> {
  static const MethodInfo* get() {
    static auto* $p0$ = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Cinemachine::CinemachineCore::$$c*), "<.cctor>b__56_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{$p0$});
  }
};
