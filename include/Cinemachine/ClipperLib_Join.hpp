// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Cinemachine.ClipperLib
#include "Cinemachine/ClipperLib.hpp"
// Including type: Cinemachine.ClipperLib/IntPoint
#include "Cinemachine/ClipperLib_IntPoint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Cinemachine::ClipperLib::Join);
DEFINE_IL2CPP_ARG_TYPE(::Cinemachine::ClipperLib::Join*, "Cinemachine", "ClipperLib/Join");
// Type namespace: Cinemachine
namespace Cinemachine {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: Cinemachine.ClipperLib/Join
  // [TokenAttribute] Offset: FFFFFFFF
  class ClipperLib::Join : public ::Il2CppObject {
    public:
    public:
    // Cinemachine.ClipperLib/OutPt OutPt1
    // Size: 0x8
    // Offset: 0x10
    ::Cinemachine::ClipperLib::OutPt* OutPt1;
    // Field size check
    static_assert(sizeof(::Cinemachine::ClipperLib::OutPt*) == 0x8);
    // Cinemachine.ClipperLib/OutPt OutPt2
    // Size: 0x8
    // Offset: 0x18
    ::Cinemachine::ClipperLib::OutPt* OutPt2;
    // Field size check
    static_assert(sizeof(::Cinemachine::ClipperLib::OutPt*) == 0x8);
    // Cinemachine.ClipperLib/IntPoint OffPt
    // Size: 0x10
    // Offset: 0x20
    ::Cinemachine::ClipperLib::IntPoint OffPt;
    // Field size check
    static_assert(sizeof(::Cinemachine::ClipperLib::IntPoint) == 0x10);
    public:
    // Get instance field reference: Cinemachine.ClipperLib/OutPt OutPt1
    [[deprecated("Use field access instead!")]] ::Cinemachine::ClipperLib::OutPt*& dyn_OutPt1();
    // Get instance field reference: Cinemachine.ClipperLib/OutPt OutPt2
    [[deprecated("Use field access instead!")]] ::Cinemachine::ClipperLib::OutPt*& dyn_OutPt2();
    // Get instance field reference: Cinemachine.ClipperLib/IntPoint OffPt
    [[deprecated("Use field access instead!")]] ::Cinemachine::ClipperLib::IntPoint& dyn_OffPt();
    // public System.Void .ctor()
    // Offset: 0x2ABCC14
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ClipperLib::Join* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::ClipperLib::Join::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ClipperLib::Join*, creationType>()));
    }
  }; // Cinemachine.ClipperLib/Join
  #pragma pack(pop)
  static check_size<sizeof(ClipperLib::Join), 32 + sizeof(::Cinemachine::ClipperLib::IntPoint)> __Cinemachine_ClipperLib_JoinSizeCheck;
  static_assert(sizeof(ClipperLib::Join) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Cinemachine::ClipperLib::Join::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
