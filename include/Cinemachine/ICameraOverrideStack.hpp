// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Cinemachine
namespace Cinemachine {
  // Forward declaring type: ICinemachineCamera
  class ICinemachineCamera;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Vector3
  struct Vector3;
}
// Completed forward declares
// Type namespace: Cinemachine
namespace Cinemachine {
  // Forward declaring type: ICameraOverrideStack
  class ICameraOverrideStack;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Cinemachine::ICameraOverrideStack);
DEFINE_IL2CPP_ARG_TYPE(::Cinemachine::ICameraOverrideStack*, "Cinemachine", "ICameraOverrideStack");
// Type namespace: Cinemachine
namespace Cinemachine {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: Cinemachine.ICameraOverrideStack
  // [TokenAttribute] Offset: FFFFFFFF
  class ICameraOverrideStack {
    public:
    // public System.Int32 SetCameraOverride(System.Int32 overrideId, Cinemachine.ICinemachineCamera camA, Cinemachine.ICinemachineCamera camB, System.Single weightB, System.Single deltaTime)
    // Offset: 0xFFFFFFFFFFFFFFFF
    int SetCameraOverride(int overrideId, ::Cinemachine::ICinemachineCamera* camA, ::Cinemachine::ICinemachineCamera* camB, float weightB, float deltaTime);
    // public System.Void ReleaseCameraOverride(System.Int32 overrideId)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ReleaseCameraOverride(int overrideId);
    // public UnityEngine.Vector3 get_DefaultWorldUp()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::Vector3 get_DefaultWorldUp();
  }; // Cinemachine.ICameraOverrideStack
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Cinemachine::ICameraOverrideStack::SetCameraOverride
// Il2CppName: SetCameraOverride
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Cinemachine::ICameraOverrideStack::*)(int, ::Cinemachine::ICinemachineCamera*, ::Cinemachine::ICinemachineCamera*, float, float)>(&Cinemachine::ICameraOverrideStack::SetCameraOverride)> {
  static const MethodInfo* get() {
    static auto* overrideId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* camA = &::il2cpp_utils::GetClassFromName("Cinemachine", "ICinemachineCamera")->byval_arg;
    static auto* camB = &::il2cpp_utils::GetClassFromName("Cinemachine", "ICinemachineCamera")->byval_arg;
    static auto* weightB = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* deltaTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Cinemachine::ICameraOverrideStack*), "SetCameraOverride", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{overrideId, camA, camB, weightB, deltaTime});
  }
};
// Writing MetadataGetter for method: Cinemachine::ICameraOverrideStack::ReleaseCameraOverride
// Il2CppName: ReleaseCameraOverride
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Cinemachine::ICameraOverrideStack::*)(int)>(&Cinemachine::ICameraOverrideStack::ReleaseCameraOverride)> {
  static const MethodInfo* get() {
    static auto* overrideId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Cinemachine::ICameraOverrideStack*), "ReleaseCameraOverride", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{overrideId});
  }
};
// Writing MetadataGetter for method: Cinemachine::ICameraOverrideStack::get_DefaultWorldUp
// Il2CppName: get_DefaultWorldUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (Cinemachine::ICameraOverrideStack::*)()>(&Cinemachine::ICameraOverrideStack::get_DefaultWorldUp)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cinemachine::ICameraOverrideStack*), "get_DefaultWorldUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
