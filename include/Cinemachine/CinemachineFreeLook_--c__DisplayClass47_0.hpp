// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Cinemachine.CinemachineFreeLook
#include "Cinemachine/CinemachineFreeLook.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Cinemachine::CinemachineFreeLook::$$c__DisplayClass47_0, "Cinemachine", "CinemachineFreeLook/<>c__DisplayClass47_0");
// Type namespace: Cinemachine
namespace Cinemachine {
  // Size: 0x14
  #pragma pack(push, 1)
  // Autogenerated type: Cinemachine.CinemachineFreeLook/<>c__DisplayClass47_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  struct CinemachineFreeLook::$$c__DisplayClass47_0/*, public ::System::ValueType*/ {
    public:
    public:
    // public Cinemachine.CinemachineFreeLook <>4__this
    // Size: 0x8
    // Offset: 0x0
    ::Cinemachine::CinemachineFreeLook* $$4__this;
    // Field size check
    static_assert(sizeof(::Cinemachine::CinemachineFreeLook*) == 0x8);
    // public UnityEngine.Vector3 cameraOffset
    // Size: 0xC
    // Offset: 0x8
    ::UnityEngine::Vector3 cameraOffset;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    public:
    // Creating value type constructor for type: $$c__DisplayClass47_0
    constexpr $$c__DisplayClass47_0(::Cinemachine::CinemachineFreeLook* $$4__this_ = {}, ::UnityEngine::Vector3 cameraOffset_ = {}) noexcept : $$4__this{$$4__this_}, cameraOffset{cameraOffset_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public Cinemachine.CinemachineFreeLook <>4__this
    [[deprecated("Use field access instead!")]] ::Cinemachine::CinemachineFreeLook*& dyn_$$4__this();
    // Get instance field reference: public UnityEngine.Vector3 cameraOffset
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_cameraOffset();
  }; // Cinemachine.CinemachineFreeLook/<>c__DisplayClass47_0
  #pragma pack(pop)
  static check_size<sizeof(CinemachineFreeLook::$$c__DisplayClass47_0), 8 + sizeof(::UnityEngine::Vector3)> __Cinemachine_CinemachineFreeLook_$$c__DisplayClass47_0SizeCheck;
  static_assert(sizeof(CinemachineFreeLook::$$c__DisplayClass47_0) == 0x14);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
