// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Cinemachine.CinemachineVirtualCameraBase
#include "Cinemachine/CinemachineVirtualCameraBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
}
// Forward declaring namespace: Cinemachine
namespace Cinemachine {
  // Forward declaring type: CinemachineExtension
  class CinemachineExtension;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Cinemachine::CinemachineVirtualCameraBase::$$c);
DEFINE_IL2CPP_ARG_TYPE(::Cinemachine::CinemachineVirtualCameraBase::$$c*, "Cinemachine", "CinemachineVirtualCameraBase/<>c");
// Type namespace: Cinemachine
namespace Cinemachine {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Cinemachine.CinemachineVirtualCameraBase/<>c
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class CinemachineVirtualCameraBase::$$c : public ::Il2CppObject {
    public:
    // Get static field: static public readonly Cinemachine.CinemachineVirtualCameraBase/<>c <>9
    static ::Cinemachine::CinemachineVirtualCameraBase::$$c* _get_$$9();
    // Set static field: static public readonly Cinemachine.CinemachineVirtualCameraBase/<>c <>9
    static void _set_$$9(::Cinemachine::CinemachineVirtualCameraBase::$$c* value);
    // Get static field: static public System.Func`2<Cinemachine.CinemachineExtension,System.Boolean> <>9__66_0
    static ::System::Func_2<::Cinemachine::CinemachineExtension*, bool>* _get_$$9__66_0();
    // Set static field: static public System.Func`2<Cinemachine.CinemachineExtension,System.Boolean> <>9__66_0
    static void _set_$$9__66_0(::System::Func_2<::Cinemachine::CinemachineExtension*, bool>* value);
    // static private System.Void .cctor()
    // Offset: 0x2AB13CC
    static void _cctor();
    // public System.Void .ctor()
    // Offset: 0x2AB1434
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CinemachineVirtualCameraBase::$$c* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineVirtualCameraBase::$$c::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CinemachineVirtualCameraBase::$$c*, creationType>()));
    }
    // System.Boolean <RequiresUserInput>b__66_0(Cinemachine.CinemachineExtension extension)
    // Offset: 0x2AB143C
    bool $RequiresUserInput$b__66_0(::Cinemachine::CinemachineExtension* extension);
  }; // Cinemachine.CinemachineVirtualCameraBase/<>c
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Cinemachine::CinemachineVirtualCameraBase::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Cinemachine::CinemachineVirtualCameraBase::$$c::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cinemachine::CinemachineVirtualCameraBase::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Cinemachine::CinemachineVirtualCameraBase::$$c::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Cinemachine::CinemachineVirtualCameraBase::$$c::$RequiresUserInput$b__66_0
// Il2CppName: <RequiresUserInput>b__66_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Cinemachine::CinemachineVirtualCameraBase::$$c::*)(::Cinemachine::CinemachineExtension*)>(&Cinemachine::CinemachineVirtualCameraBase::$$c::$RequiresUserInput$b__66_0)> {
  static const MethodInfo* get() {
    static auto* extension = &::il2cpp_utils::GetClassFromName("Cinemachine", "CinemachineExtension")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Cinemachine::CinemachineVirtualCameraBase::$$c*), "<RequiresUserInput>b__66_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{extension});
  }
};
