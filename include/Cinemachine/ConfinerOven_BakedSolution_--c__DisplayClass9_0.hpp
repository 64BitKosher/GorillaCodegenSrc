// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Cinemachine.ConfinerOven/BakedSolution
#include "Cinemachine/ConfinerOven_BakedSolution.hpp"
// Including type: Cinemachine.ClipperLib/IntPoint
#include "Cinemachine/ClipperLib_IntPoint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Cinemachine::ConfinerOven::BakedSolution::$$c__DisplayClass9_0);
DEFINE_IL2CPP_ARG_TYPE(::Cinemachine::ConfinerOven::BakedSolution::$$c__DisplayClass9_0*, "Cinemachine", "ConfinerOven/BakedSolution/<>c__DisplayClass9_0");
// Type namespace: Cinemachine
namespace Cinemachine {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: Cinemachine.ConfinerOven/BakedSolution/<>c__DisplayClass9_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class ConfinerOven::BakedSolution::$$c__DisplayClass9_0 : public ::Il2CppObject {
    public:
    public:
    // public Cinemachine.ClipperLib/IntPoint point
    // Size: 0x10
    // Offset: 0x10
    ::Cinemachine::ClipperLib::IntPoint point;
    // Field size check
    static_assert(sizeof(::Cinemachine::ClipperLib::IntPoint) == 0x10);
    public:
    // Creating conversion operator: operator ::Cinemachine::ClipperLib::IntPoint
    constexpr operator ::Cinemachine::ClipperLib::IntPoint() const noexcept {
      return point;
    }
    // Get instance field reference: public Cinemachine.ClipperLib/IntPoint point
    [[deprecated("Use field access instead!")]] ::Cinemachine::ClipperLib::IntPoint& dyn_point();
    // public System.Void .ctor()
    // Offset: 0x2AB34E4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ConfinerOven::BakedSolution::$$c__DisplayClass9_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::ConfinerOven::BakedSolution::$$c__DisplayClass9_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ConfinerOven::BakedSolution::$$c__DisplayClass9_0*, creationType>()));
    }
    // System.Boolean <ConfinePoint>b__4(System.Collections.Generic.List`1<Cinemachine.ClipperLib/IntPoint> t)
    // Offset: 0x2AB34EC
    bool $ConfinePoint$b__4(::System::Collections::Generic::List_1<::Cinemachine::ClipperLib::IntPoint>* t);
  }; // Cinemachine.ConfinerOven/BakedSolution/<>c__DisplayClass9_0
  #pragma pack(pop)
  static check_size<sizeof(ConfinerOven::BakedSolution::$$c__DisplayClass9_0), 16 + sizeof(::Cinemachine::ClipperLib::IntPoint)> __Cinemachine_ConfinerOven_BakedSolution_$$c__DisplayClass9_0SizeCheck;
  static_assert(sizeof(ConfinerOven::BakedSolution::$$c__DisplayClass9_0) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Cinemachine::ConfinerOven::BakedSolution::$$c__DisplayClass9_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Cinemachine::ConfinerOven::BakedSolution::$$c__DisplayClass9_0::$ConfinePoint$b__4
// Il2CppName: <ConfinePoint>b__4
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Cinemachine::ConfinerOven::BakedSolution::$$c__DisplayClass9_0::*)(::System::Collections::Generic::List_1<::Cinemachine::ClipperLib::IntPoint>*)>(&Cinemachine::ConfinerOven::BakedSolution::$$c__DisplayClass9_0::$ConfinePoint$b__4)> {
  static const MethodInfo* get() {
    static auto* t = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Cinemachine", "ClipperLib/IntPoint")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Cinemachine::ConfinerOven::BakedSolution::$$c__DisplayClass9_0*), "<ConfinePoint>b__4", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{t});
  }
};
