// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: DigitalOpus.MB.Core.MB3_MeshBakerGrouperCluster
#include "DigitalOpus/MB/Core/MB3_MeshBakerGrouperCluster.hpp"
// Including type: DigitalOpus.MB.Core.MB3_AgglomerativeClustering
#include "DigitalOpus/MB/Core/MB3_AgglomerativeClustering.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Predicate`1<T>
  template<typename T>
  class Predicate_1;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::DigitalOpus::MB::Core::MB3_MeshBakerGrouperCluster::$$c__DisplayClass8_0);
DEFINE_IL2CPP_ARG_TYPE(::DigitalOpus::MB::Core::MB3_MeshBakerGrouperCluster::$$c__DisplayClass8_0*, "DigitalOpus.MB.Core", "MB3_MeshBakerGrouperCluster/<>c__DisplayClass8_0");
// Type namespace: DigitalOpus.MB.Core
namespace DigitalOpus::MB::Core {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: DigitalOpus.MB.Core.MB3_MeshBakerGrouperCluster/<>c__DisplayClass8_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class MB3_MeshBakerGrouperCluster::$$c__DisplayClass8_0 : public ::Il2CppObject {
    public:
    public:
    // public System.Collections.Generic.List`1<UnityEngine.GameObject> gos
    // Size: 0x8
    // Offset: 0x10
    ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* gos;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*) == 0x8);
    // public System.Int32 i
    // Size: 0x4
    // Offset: 0x18
    int i;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: i and: $$9__0
    char __padding1[0x4] = {};
    // public System.Predicate`1<DigitalOpus.MB.Core.MB3_AgglomerativeClustering/item_s> <>9__0
    // Size: 0x8
    // Offset: 0x20
    ::System::Predicate_1<::DigitalOpus::MB::Core::MB3_AgglomerativeClustering::item_s*>* $$9__0;
    // Field size check
    static_assert(sizeof(::System::Predicate_1<::DigitalOpus::MB::Core::MB3_AgglomerativeClustering::item_s*>*) == 0x8);
    public:
    // Get instance field reference: public System.Collections.Generic.List`1<UnityEngine.GameObject> gos
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& dyn_gos();
    // Get instance field reference: public System.Int32 i
    [[deprecated("Use field access instead!")]] int& dyn_i();
    // Get instance field reference: public System.Predicate`1<DigitalOpus.MB.Core.MB3_AgglomerativeClustering/item_s> <>9__0
    [[deprecated("Use field access instead!")]] ::System::Predicate_1<::DigitalOpus::MB::Core::MB3_AgglomerativeClustering::item_s*>*& dyn_$$9__0();
    // public System.Void .ctor()
    // Offset: 0x4405C2C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MB3_MeshBakerGrouperCluster::$$c__DisplayClass8_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::MB3_MeshBakerGrouperCluster::$$c__DisplayClass8_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MB3_MeshBakerGrouperCluster::$$c__DisplayClass8_0*, creationType>()));
    }
    // System.Boolean <BuildClusters>b__0(DigitalOpus.MB.Core.MB3_AgglomerativeClustering/item_s x)
    // Offset: 0x44065D8
    bool $BuildClusters$b__0(::DigitalOpus::MB::Core::MB3_AgglomerativeClustering::item_s* x);
  }; // DigitalOpus.MB.Core.MB3_MeshBakerGrouperCluster/<>c__DisplayClass8_0
  #pragma pack(pop)
  static check_size<sizeof(MB3_MeshBakerGrouperCluster::$$c__DisplayClass8_0), 32 + sizeof(::System::Predicate_1<::DigitalOpus::MB::Core::MB3_AgglomerativeClustering::item_s*>*)> __DigitalOpus_MB_Core_MB3_MeshBakerGrouperCluster_$$c__DisplayClass8_0SizeCheck;
  static_assert(sizeof(MB3_MeshBakerGrouperCluster::$$c__DisplayClass8_0) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshBakerGrouperCluster::$$c__DisplayClass8_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshBakerGrouperCluster::$$c__DisplayClass8_0::$BuildClusters$b__0
// Il2CppName: <BuildClusters>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB3_MeshBakerGrouperCluster::$$c__DisplayClass8_0::*)(::DigitalOpus::MB::Core::MB3_AgglomerativeClustering::item_s*)>(&DigitalOpus::MB::Core::MB3_MeshBakerGrouperCluster::$$c__DisplayClass8_0::$BuildClusters$b__0)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB3_AgglomerativeClustering/item_s")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshBakerGrouperCluster::$$c__DisplayClass8_0*), "<BuildClusters>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x});
  }
};
