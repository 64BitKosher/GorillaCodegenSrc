// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Photon.Voice.Unity.Speaker
#include "Photon/Voice/Unity/Speaker.hpp"
// Including type: Photon.Voice.AudioOutDelayControl
#include "Photon/Voice/AudioOutDelayControl.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Photon::Voice
namespace Photon::Voice {
  // Forward declaring type: IAudioOut`1<T>
  template<typename T>
  class IAudioOut_1;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Photon::Voice::Unity::Speaker::$$c__DisplayClass44_0);
DEFINE_IL2CPP_ARG_TYPE(::Photon::Voice::Unity::Speaker::$$c__DisplayClass44_0*, "Photon.Voice.Unity", "Speaker/<>c__DisplayClass44_0");
// Type namespace: Photon.Voice.Unity
namespace Photon::Voice::Unity {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: Photon.Voice.Unity.Speaker/<>c__DisplayClass44_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class Speaker::$$c__DisplayClass44_0 : public ::Il2CppObject {
    public:
    public:
    // public Photon.Voice.Unity.Speaker <>4__this
    // Size: 0x8
    // Offset: 0x10
    ::Photon::Voice::Unity::Speaker* $$4__this;
    // Field size check
    static_assert(sizeof(::Photon::Voice::Unity::Speaker*) == 0x8);
    // public Photon.Voice.AudioOutDelayControl/PlayDelayConfig pdc
    // Size: 0x8
    // Offset: 0x18
    ::Photon::Voice::AudioOutDelayControl::PlayDelayConfig* pdc;
    // Field size check
    static_assert(sizeof(::Photon::Voice::AudioOutDelayControl::PlayDelayConfig*) == 0x8);
    public:
    // Get instance field reference: public Photon.Voice.Unity.Speaker <>4__this
    [[deprecated("Use field access instead!")]] ::Photon::Voice::Unity::Speaker*& dyn_$$4__this();
    // Get instance field reference: public Photon.Voice.AudioOutDelayControl/PlayDelayConfig pdc
    [[deprecated("Use field access instead!")]] ::Photon::Voice::AudioOutDelayControl::PlayDelayConfig*& dyn_pdc();
    // public System.Void .ctor()
    // Offset: 0x4A90380
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Speaker::$$c__DisplayClass44_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Speaker::$$c__DisplayClass44_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Speaker::$$c__DisplayClass44_0*, creationType>()));
    }
    // Photon.Voice.IAudioOut`1<System.Single> <GetDefaultAudioOutFactory>b__0()
    // Offset: 0x4A910C8
    ::Photon::Voice::IAudioOut_1<float>* $GetDefaultAudioOutFactory$b__0();
  }; // Photon.Voice.Unity.Speaker/<>c__DisplayClass44_0
  #pragma pack(pop)
  static check_size<sizeof(Speaker::$$c__DisplayClass44_0), 24 + sizeof(::Photon::Voice::AudioOutDelayControl::PlayDelayConfig*)> __Photon_Voice_Unity_Speaker_$$c__DisplayClass44_0SizeCheck;
  static_assert(sizeof(Speaker::$$c__DisplayClass44_0) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Photon::Voice::Unity::Speaker::$$c__DisplayClass44_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Photon::Voice::Unity::Speaker::$$c__DisplayClass44_0::$GetDefaultAudioOutFactory$b__0
// Il2CppName: <GetDefaultAudioOutFactory>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Photon::Voice::IAudioOut_1<float>* (Photon::Voice::Unity::Speaker::$$c__DisplayClass44_0::*)()>(&Photon::Voice::Unity::Speaker::$$c__DisplayClass44_0::$GetDefaultAudioOutFactory$b__0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Voice::Unity::Speaker::$$c__DisplayClass44_0*), "<GetDefaultAudioOutFactory>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
