// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Unity.Properties.TypeUtility
#include "Unity/Properties/TypeUtility.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_STRUCT(::Unity::Properties::TypeUtility::Cache_1, "Unity.Properties", "TypeUtility/Cache`1");
// Type namespace: Unity.Properties
namespace Unity::Properties {
  // WARNING Size may be invalid!
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: Unity.Properties.TypeUtility/Cache`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename T>
  struct TypeUtility::Cache_1/*, public ::System::ValueType*/ {
    public:
    // Creating value type constructor for type: Cache_1
    constexpr Cache_1() noexcept {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Autogenerated static field getter
    // Get static field: static public Unity.Properties.TypeUtility/ITypeConstructor`1<T> TypeConstructor
    static ::Unity::Properties::TypeUtility::ITypeConstructor_1<T>* _get_TypeConstructor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeUtility::Cache_1::_get_TypeConstructor");
      return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Properties::TypeUtility::ITypeConstructor_1<T>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TypeUtility::Cache_1<T>>::get(), "TypeConstructor"));
    }
    // Autogenerated static field setter
    // Set static field: static public Unity.Properties.TypeUtility/ITypeConstructor`1<T> TypeConstructor
    static void _set_TypeConstructor(::Unity::Properties::TypeUtility::ITypeConstructor_1<T>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeUtility::Cache_1::_set_TypeConstructor");
      THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TypeUtility::Cache_1<T>>::get(), "TypeConstructor", value));
    }
  }; // Unity.Properties.TypeUtility/Cache`1
  // Could not write size check! Type: Unity.Properties.TypeUtility/Cache`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
