// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Unity.Properties.TypeUtility
#include "Unity/Properties/TypeUtility.hpp"
// Including type: Unity.Properties.TypeUtility/ITypeConstructor`1
#include "Unity/Properties/TypeUtility_ITypeConstructor_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`1<TResult>
  template<typename TResult>
  class Func_1;
}
// Forward declaring namespace: Unity::Properties
namespace Unity::Properties {
  // Forward declaring type: IConstructor`1<T>
  template<typename T>
  class IConstructor_1;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::Unity::Properties::TypeUtility::TypeConstructor_1, "Unity.Properties", "TypeUtility/TypeConstructor`1");
// Type namespace: Unity.Properties
namespace Unity::Properties {
  // WARNING Size may be invalid!
  // Autogenerated type: Unity.Properties.TypeUtility/TypeConstructor`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename T>
  class TypeUtility::TypeConstructor_1 : public ::Il2CppObject/*, public ::Unity::Properties::TypeUtility::ITypeConstructor_1<T>*/ {
    public:
    public:
    // private System.Func`1<T> m_ExplicitConstructor
    // Size: 0x8
    // Offset: 0x0
    ::System::Func_1<T>* m_ExplicitConstructor;
    // Field size check
    static_assert(sizeof(::System::Func_1<T>*) == 0x8);
    // private System.Func`1<T> m_ImplicitConstructor
    // Size: 0x8
    // Offset: 0x0
    ::System::Func_1<T>* m_ImplicitConstructor;
    // Field size check
    static_assert(sizeof(::System::Func_1<T>*) == 0x8);
    // private Unity.Properties.IConstructor`1<T> m_OverrideConstructor
    // Size: 0x8
    // Offset: 0x0
    ::Unity::Properties::IConstructor_1<T>* m_OverrideConstructor;
    // Field size check
    static_assert(sizeof(::Unity::Properties::IConstructor_1<T>*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::Unity::Properties::TypeUtility::ITypeConstructor_1<T>
    operator ::Unity::Properties::TypeUtility::ITypeConstructor_1<T>() noexcept {
      return *reinterpret_cast<::Unity::Properties::TypeUtility::ITypeConstructor_1<T>*>(this);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Func`1<T> m_ExplicitConstructor
    [[deprecated("Use field access instead!")]] ::System::Func_1<T>*& dyn_m_ExplicitConstructor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeUtility::TypeConstructor_1::dyn_m_ExplicitConstructor");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ExplicitConstructor"))->offset;
      return *reinterpret_cast<::System::Func_1<T>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Func`1<T> m_ImplicitConstructor
    [[deprecated("Use field access instead!")]] ::System::Func_1<T>*& dyn_m_ImplicitConstructor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeUtility::TypeConstructor_1::dyn_m_ImplicitConstructor");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ImplicitConstructor"))->offset;
      return *reinterpret_cast<::System::Func_1<T>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private Unity.Properties.IConstructor`1<T> m_OverrideConstructor
    [[deprecated("Use field access instead!")]] ::Unity::Properties::IConstructor_1<T>*& dyn_m_OverrideConstructor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeUtility::TypeConstructor_1::dyn_m_OverrideConstructor");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OverrideConstructor"))->offset;
      return *reinterpret_cast<::Unity::Properties::IConstructor_1<T>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // private System.Boolean Unity.Properties.TypeUtility.ITypeConstructor.get_CanBeInstantiated()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool Unity_Properties_TypeUtility_ITypeConstructor_get_CanBeInstantiated() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeUtility::TypeConstructor_1::Unity.Properties.TypeUtility.ITypeConstructor.get_CanBeInstantiated");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Unity::Properties::TypeUtility::TypeConstructor_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // public System.Void .ctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TypeUtility::TypeConstructor_1<T>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeUtility::TypeConstructor_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TypeUtility::TypeConstructor_1<T>*, creationType>()));
    }
    // private System.Void SetImplicitConstructor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void SetImplicitConstructor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeUtility::TypeConstructor_1::SetImplicitConstructor");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetImplicitConstructor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // static private T CreateValueTypeInstance()
    // Offset: 0xFFFFFFFFFFFFFFFF
    static T CreateValueTypeInstance() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeUtility::TypeConstructor_1::CreateValueTypeInstance");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TypeUtility::TypeConstructor_1<T>*>::get(), "CreateValueTypeInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
    // static private T CreateScriptableObjectInstance()
    // Offset: 0xFFFFFFFFFFFFFFFF
    static T CreateScriptableObjectInstance() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeUtility::TypeConstructor_1::CreateScriptableObjectInstance");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TypeUtility::TypeConstructor_1<T>*>::get(), "CreateScriptableObjectInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
    // static private T CreateClassInstance()
    // Offset: 0xFFFFFFFFFFFFFFFF
    static T CreateClassInstance() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeUtility::TypeConstructor_1::CreateClassInstance");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TypeUtility::TypeConstructor_1<T>*>::get(), "CreateClassInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
    // public System.Void SetExplicitConstructor(System.Func`1<T> constructor)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void SetExplicitConstructor(::System::Func_1<T>* constructor) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeUtility::TypeConstructor_1::SetExplicitConstructor");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Unity::Properties::TypeUtility::TypeConstructor_1<T>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, constructor);
    }
    // private T Unity.Properties.TypeUtility.ITypeConstructor<T>.Instantiate()
    // Offset: 0xFFFFFFFFFFFFFFFF
    T Unity_Properties_TypeUtility_ITypeConstructor$T$_Instantiate() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeUtility::TypeConstructor_1::Unity.Properties.TypeUtility.ITypeConstructor<T>.Instantiate");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Unity::Properties::TypeUtility::TypeConstructor_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(this, ___internal__method);
    }
    // private System.Object Unity.Properties.TypeUtility.ITypeConstructor.Instantiate()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Il2CppObject* Unity_Properties_TypeUtility_ITypeConstructor_Instantiate() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeUtility::TypeConstructor_1::Unity.Properties.TypeUtility.ITypeConstructor.Instantiate");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Unity::Properties::TypeUtility::TypeConstructor_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
    }
  }; // Unity.Properties.TypeUtility/TypeConstructor`1
  // Could not write size check! Type: Unity.Properties.TypeUtility/TypeConstructor`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
