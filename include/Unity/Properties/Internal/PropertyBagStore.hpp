// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Unity::Properties::Internal
namespace Unity::Properties::Internal {
  // Forward declaring type: ReflectedPropertyBagProvider
  class ReflectedPropertyBagProvider;
}
// Forward declaring namespace: System::Collections::Concurrent
namespace System::Collections::Concurrent {
  // Forward declaring type: ConcurrentDictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class ConcurrentDictionary_2;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
}
// Forward declaring namespace: Unity::Properties
namespace Unity::Properties {
  // Forward declaring type: IPropertyBag
  class IPropertyBag;
  // Forward declaring type: IPropertyBag`1<TContainer>
  template<typename TContainer>
  class IPropertyBag_1;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: Unity.Properties.Internal
namespace Unity::Properties::Internal {
  // Forward declaring type: PropertyBagStore
  class PropertyBagStore;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Unity::Properties::Internal::PropertyBagStore);
DEFINE_IL2CPP_ARG_TYPE(::Unity::Properties::Internal::PropertyBagStore*, "Unity.Properties.Internal", "PropertyBagStore");
// Type namespace: Unity.Properties.Internal
namespace Unity::Properties::Internal {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Unity.Properties.Internal.PropertyBagStore
  // [TokenAttribute] Offset: FFFFFFFF
  class PropertyBagStore : public ::Il2CppObject {
    public:
    // Nested type: ::Unity::Properties::Internal::PropertyBagStore::TypedStore_1<TContainer>
    template<typename TContainer>
    struct TypedStore_1;
    // Get static field: static private readonly System.Collections.Concurrent.ConcurrentDictionary`2<System.Type,Unity.Properties.IPropertyBag> s_PropertyBags
    static ::System::Collections::Concurrent::ConcurrentDictionary_2<::System::Type*, ::Unity::Properties::IPropertyBag*>* _get_s_PropertyBags();
    // Set static field: static private readonly System.Collections.Concurrent.ConcurrentDictionary`2<System.Type,Unity.Properties.IPropertyBag> s_PropertyBags
    static void _set_s_PropertyBags(::System::Collections::Concurrent::ConcurrentDictionary_2<::System::Type*, ::Unity::Properties::IPropertyBag*>* value);
    // Get static field: static private readonly System.Collections.Generic.List`1<System.Type> s_RegisteredTypes
    static ::System::Collections::Generic::List_1<::System::Type*>* _get_s_RegisteredTypes();
    // Set static field: static private readonly System.Collections.Generic.List`1<System.Type> s_RegisteredTypes
    static void _set_s_RegisteredTypes(::System::Collections::Generic::List_1<::System::Type*>* value);
    // Get static field: static private System.Action`2<System.Type,Unity.Properties.IPropertyBag> NewTypeRegistered
    static ::System::Action_2<::System::Type*, ::Unity::Properties::IPropertyBag*>* _get_NewTypeRegistered();
    // Set static field: static private System.Action`2<System.Type,Unity.Properties.IPropertyBag> NewTypeRegistered
    static void _set_NewTypeRegistered(::System::Action_2<::System::Type*, ::Unity::Properties::IPropertyBag*>* value);
    // Get static field: static private Unity.Properties.Internal.ReflectedPropertyBagProvider s_PropertyBagProvider
    static ::Unity::Properties::Internal::ReflectedPropertyBagProvider* _get_s_PropertyBagProvider();
    // Set static field: static private Unity.Properties.Internal.ReflectedPropertyBagProvider s_PropertyBagProvider
    static void _set_s_PropertyBagProvider(::Unity::Properties::Internal::ReflectedPropertyBagProvider* value);
    // static private System.Void .cctor()
    // Offset: 0x55396E4
    static void _cctor();
    // static System.Void AddPropertyBag(Unity.Properties.IPropertyBag`1<TContainer> propertyBag)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class TContainer>
    static void AddPropertyBag(::Unity::Properties::IPropertyBag_1<TContainer>* propertyBag) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::Internal::PropertyBagStore::AddPropertyBag");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.Properties.Internal", "PropertyBagStore", "AddPropertyBag", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TContainer>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyBag)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TContainer>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, propertyBag);
    }
    // static Unity.Properties.IPropertyBag`1<TContainer> GetPropertyBag()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class TContainer>
    static ::Unity::Properties::IPropertyBag_1<TContainer>* GetPropertyBag() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::Internal::PropertyBagStore::GetPropertyBag");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.Properties.Internal", "PropertyBagStore", "GetPropertyBag", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TContainer>::get()}, ::std::vector<const Il2CppType*>{})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TContainer>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::Unity::Properties::IPropertyBag_1<TContainer>*, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method);
    }
    // static Unity.Properties.IPropertyBag GetPropertyBag(System.Type type)
    // Offset: 0x55377F8
    static ::Unity::Properties::IPropertyBag* GetPropertyBag(::System::Type* type);
  }; // Unity.Properties.Internal.PropertyBagStore
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Unity::Properties::Internal::PropertyBagStore::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Unity::Properties::Internal::PropertyBagStore::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::Properties::Internal::PropertyBagStore*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::Properties::Internal::PropertyBagStore::AddPropertyBag
// Il2CppName: AddPropertyBag
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Unity::Properties::Internal::PropertyBagStore::GetPropertyBag
// Il2CppName: GetPropertyBag
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Unity::Properties::Internal::PropertyBagStore::GetPropertyBag
// Il2CppName: GetPropertyBag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Unity::Properties::IPropertyBag* (*)(::System::Type*)>(&Unity::Properties::Internal::PropertyBagStore::GetPropertyBag)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Properties::Internal::PropertyBagStore*), "GetPropertyBag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
