// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Unity.Properties.ContainerPropertyBag`1
#include "Unity/Properties/ContainerPropertyBag_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Unity::Properties
namespace Unity::Properties {
  // Forward declaring type: Property`2<TContainer, TValue>
  template<typename TContainer, typename TValue>
  class Property_2;
}
// Completed forward declares
// Type namespace: Unity.Properties.Internal
namespace Unity::Properties::Internal {
  // Forward declaring type: ReflectedPropertyBag`1<TContainer>
  template<typename TContainer>
  class ReflectedPropertyBag_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::Unity::Properties::Internal::ReflectedPropertyBag_1, "Unity.Properties.Internal", "ReflectedPropertyBag`1");
// Type namespace: Unity.Properties.Internal
namespace Unity::Properties::Internal {
  // WARNING Size may be invalid!
  // Autogenerated type: Unity.Properties.Internal.ReflectedPropertyBag`1
  // [TokenAttribute] Offset: FFFFFFFF
  // [ReflectedPropertyBagAttribute] Offset: FFFFFFFF
  template<typename TContainer>
  class ReflectedPropertyBag_1 : public ::Unity::Properties::ContainerPropertyBag_1<TContainer> {
    public:
    // System.Void AddProperty(Unity.Properties.Property`2<TContainer,TValue> property)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: Unity.Properties.ContainerPropertyBag`1
    // Base method: System.Void ContainerPropertyBag_1::AddProperty(Unity.Properties.Property`2<TContainer,TValue> property)
    template<class TValue>
    void AddProperty(::Unity::Properties::Property_2<TContainer, TValue>* property) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::Internal::ReflectedPropertyBag_1::AddProperty");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddProperty", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TValue>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TValue>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___generic__method, property);
    }
    // public System.Void .ctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: Unity.Properties.ContainerPropertyBag`1
    // Base method: System.Void ContainerPropertyBag_1::.ctor()
    // Base method: System.Void PropertyBag_1::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ReflectedPropertyBag_1<TContainer>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::Internal::ReflectedPropertyBag_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ReflectedPropertyBag_1<TContainer>*, creationType>()));
    }
  }; // Unity.Properties.Internal.ReflectedPropertyBag`1
  // Could not write size check! Type: Unity.Properties.Internal.ReflectedPropertyBag`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
