// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: Unity.Properties
namespace Unity::Properties {
  // Forward declaring type: ITypeVisitor
  class ITypeVisitor;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Unity::Properties::ITypeVisitor);
DEFINE_IL2CPP_ARG_TYPE(::Unity::Properties::ITypeVisitor*, "Unity.Properties", "ITypeVisitor");
// Type namespace: Unity.Properties
namespace Unity::Properties {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: Unity.Properties.ITypeVisitor
  // [TokenAttribute] Offset: FFFFFFFF
  class ITypeVisitor {
    public:
    // public System.Void Visit()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class TContainer>
    void Visit() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::ITypeVisitor::Visit");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Unity::Properties::ITypeVisitor*), -1));
      auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TContainer>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___generic__method);
    }
  }; // Unity.Properties.ITypeVisitor
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Unity::Properties::ITypeVisitor::Visit
// Il2CppName: Visit
// Cannot write MetadataGetter for generic methods!
