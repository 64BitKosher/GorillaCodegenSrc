// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Unity.Properties.Property`2
#include "Unity/Properties/Property_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Unity::Properties
namespace Unity::Properties {
  // Forward declaring type: PropertyGetter`2<TContainer, TValue>
  template<typename TContainer, typename TValue>
  class PropertyGetter_2;
  // Forward declaring type: PropertySetter`2<TContainer, TValue>
  template<typename TContainer, typename TValue>
  class PropertySetter_2;
}
// Completed forward declares
// Type namespace: Unity.Properties
namespace Unity::Properties {
  // Forward declaring type: DelegateProperty`2<TContainer, TValue>
  template<typename TContainer, typename TValue>
  class DelegateProperty_2;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::Unity::Properties::DelegateProperty_2, "Unity.Properties", "DelegateProperty`2");
// Type namespace: Unity.Properties
namespace Unity::Properties {
  // WARNING Size may be invalid!
  // Autogenerated type: Unity.Properties.DelegateProperty`2
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename TContainer, typename TValue>
  class DelegateProperty_2 : public ::Unity::Properties::Property_2<TContainer, TValue> {
    public:
    public:
    // private readonly Unity.Properties.PropertyGetter`2<TContainer,TValue> m_Getter
    // Size: 0x8
    // Offset: 0x0
    ::Unity::Properties::PropertyGetter_2<TContainer, TValue>* m_Getter;
    // Field size check
    static_assert(sizeof(::Unity::Properties::PropertyGetter_2<TContainer, TValue>*) == 0x8);
    // private readonly Unity.Properties.PropertySetter`2<TContainer,TValue> m_Setter
    // Size: 0x8
    // Offset: 0x0
    ::Unity::Properties::PropertySetter_2<TContainer, TValue>* m_Setter;
    // Field size check
    static_assert(sizeof(::Unity::Properties::PropertySetter_2<TContainer, TValue>*) == 0x8);
    // private readonly System.String <Name>k__BackingField
    // Size: 0x8
    // Offset: 0x0
    ::StringW Name;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::Collections::Generic::List_1<::System::Attribute*>*
    constexpr operator ::System::Collections::Generic::List_1<::System::Attribute*>*() const noexcept = delete;
    // Autogenerated instance field getter
    // Get instance field: private readonly Unity.Properties.PropertyGetter`2<TContainer,TValue> m_Getter
    [[deprecated("Use field access instead!")]] ::Unity::Properties::PropertyGetter_2<TContainer, TValue>*& dyn_m_Getter() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::DelegateProperty_2::dyn_m_Getter");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Getter"))->offset;
      return *reinterpret_cast<::Unity::Properties::PropertyGetter_2<TContainer, TValue>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private readonly Unity.Properties.PropertySetter`2<TContainer,TValue> m_Setter
    [[deprecated("Use field access instead!")]] ::Unity::Properties::PropertySetter_2<TContainer, TValue>*& dyn_m_Setter() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::DelegateProperty_2::dyn_m_Setter");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Setter"))->offset;
      return *reinterpret_cast<::Unity::Properties::PropertySetter_2<TContainer, TValue>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private readonly System.String <Name>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$Name$k__BackingField() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::DelegateProperty_2::dyn_$Name$k__BackingField");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
      return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // public System.Void .ctor(System.String name, Unity.Properties.PropertyGetter`2<TContainer,TValue> getter, Unity.Properties.PropertySetter`2<TContainer,TValue> setter)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DelegateProperty_2<TContainer, TValue>* New_ctor(::StringW name, ::Unity::Properties::PropertyGetter_2<TContainer, TValue>* getter, ::Unity::Properties::PropertySetter_2<TContainer, TValue>* setter) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::DelegateProperty_2::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DelegateProperty_2<TContainer, TValue>*, creationType>(name, getter, setter)));
    }
    // public override System.String get_Name()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: Unity.Properties.Property`2
    // Base method: System.String Property_2::get_Name()
    ::StringW get_Name() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::DelegateProperty_2::get_Name");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Unity::Properties::Property_2<TContainer, TValue>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
    }
  }; // Unity.Properties.DelegateProperty`2
  // Could not write size check! Type: Unity.Properties.DelegateProperty`2 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
