// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Unity::Properties
namespace Unity::Properties {
  // Forward declaring type: ITypeVisitor
  class ITypeVisitor;
}
// Completed forward declares
// Type namespace: Unity.Properties
namespace Unity::Properties {
  // Forward declaring type: IPropertyBag
  class IPropertyBag;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Unity::Properties::IPropertyBag);
DEFINE_IL2CPP_ARG_TYPE(::Unity::Properties::IPropertyBag*, "Unity.Properties", "IPropertyBag");
// Type namespace: Unity.Properties
namespace Unity::Properties {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: Unity.Properties.IPropertyBag
  // [TokenAttribute] Offset: FFFFFFFF
  class IPropertyBag {
    public:
    // public System.Void Accept(Unity.Properties.ITypeVisitor visitor)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Accept(::Unity::Properties::ITypeVisitor* visitor);
  }; // Unity.Properties.IPropertyBag
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Unity::Properties::IPropertyBag::Accept
// Il2CppName: Accept
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::Properties::IPropertyBag::*)(::Unity::Properties::ITypeVisitor*)>(&Unity::Properties::IPropertyBag::Accept)> {
  static const MethodInfo* get() {
    static auto* visitor = &::il2cpp_utils::GetClassFromName("Unity.Properties", "ITypeVisitor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Properties::IPropertyBag*), "Accept", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{visitor});
  }
};
