// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Unity.Properties.Property`2
#include "Unity/Properties/Property_2.hpp"
// Including type: System.MulticastDelegate
#include "System/MulticastDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Unity::Properties
namespace Unity::Properties {
  // Skipping declaration: GetStructValueAction because it is already included!
  // Skipping declaration: SetStructValueAction because it is already included!
  // Skipping declaration: GetClassValueAction because it is already included!
  // Skipping declaration: SetClassValueAction because it is already included!
  // Forward declaring type: IMemberInfo
  class IMemberInfo;
}
// Completed forward declares
// Type namespace: Unity.Properties
namespace Unity::Properties {
  // Forward declaring type: ReflectedMemberProperty`2<TContainer, TValue>
  template<typename TContainer, typename TValue>
  class ReflectedMemberProperty_2;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::Unity::Properties::ReflectedMemberProperty_2, "Unity.Properties", "ReflectedMemberProperty`2");
// Type namespace: Unity.Properties
namespace Unity::Properties {
  // WARNING Size may be invalid!
  // Autogenerated type: Unity.Properties.ReflectedMemberProperty`2
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename TContainer, typename TValue>
  class ReflectedMemberProperty_2 : public ::Unity::Properties::Property_2<TContainer, TValue> {
    public:
    // Nested type: ::Unity::Properties::ReflectedMemberProperty_2::GetStructValueAction<TContainer, TValue>
    class GetStructValueAction;
    // Nested type: ::Unity::Properties::ReflectedMemberProperty_2::SetStructValueAction<TContainer, TValue>
    class SetStructValueAction;
    // Nested type: ::Unity::Properties::ReflectedMemberProperty_2::GetClassValueAction<TContainer, TValue>
    class GetClassValueAction;
    // Nested type: ::Unity::Properties::ReflectedMemberProperty_2::SetClassValueAction<TContainer, TValue>
    class SetClassValueAction;
    // WARNING Size may be invalid!
    // Autogenerated type: Unity.Properties.ReflectedMemberProperty`2/GetStructValueAction
    // [TokenAttribute] Offset: FFFFFFFF
    class GetStructValueAction : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::System::MulticastDelegate {
      public:
      using declaring_type = ReflectedMemberProperty_2<TContainer, TValue>*;
      static constexpr std::string_view NESTED_NAME = "GetStructValueAction";
      static constexpr bool IS_VALUE_TYPE = false;
      // public System.Void .ctor(System.Object object, System.IntPtr method)
      // Offset: 0xFFFFFFFFFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename ReflectedMemberProperty_2<TContainer, TValue>::GetStructValueAction* New_ctor(::Il2CppObject* object, ::System::IntPtr method) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::ReflectedMemberProperty_2::GetStructValueAction::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename ReflectedMemberProperty_2<TContainer, TValue>::GetStructValueAction*, creationType>(object, method)));
      }
      // public TValue Invoke(ref TContainer container)
      // Offset: 0xFFFFFFFFFFFFFFFF
      TValue Invoke(ByRef<TContainer> container) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::ReflectedMemberProperty_2::GetStructValueAction::Invoke");
        auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::Unity::Properties::ReflectedMemberProperty_2<TContainer, TValue>::GetStructValueAction*), -1)));
        return ::il2cpp_utils::RunMethodRethrow<TValue, false>(this, ___internal__method, byref(container));
      }
    }; // Unity.Properties.ReflectedMemberProperty`2/GetStructValueAction
    // Could not write size check! Type: Unity.Properties.ReflectedMemberProperty`2/GetStructValueAction is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: Unity.Properties.ReflectedMemberProperty`2/SetStructValueAction
    // [TokenAttribute] Offset: FFFFFFFF
    class SetStructValueAction : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::System::MulticastDelegate {
      public:
      using declaring_type = ReflectedMemberProperty_2<TContainer, TValue>*;
      static constexpr std::string_view NESTED_NAME = "SetStructValueAction";
      static constexpr bool IS_VALUE_TYPE = false;
      // public System.Void .ctor(System.Object object, System.IntPtr method)
      // Offset: 0xFFFFFFFFFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename ReflectedMemberProperty_2<TContainer, TValue>::SetStructValueAction* New_ctor(::Il2CppObject* object, ::System::IntPtr method) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::ReflectedMemberProperty_2::SetStructValueAction::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename ReflectedMemberProperty_2<TContainer, TValue>::SetStructValueAction*, creationType>(object, method)));
      }
      // public System.Void Invoke(ref TContainer container, TValue value)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void Invoke(ByRef<TContainer> container, TValue value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::ReflectedMemberProperty_2::SetStructValueAction::Invoke");
        auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::Unity::Properties::ReflectedMemberProperty_2<TContainer, TValue>::SetStructValueAction*), -1)));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(container), value);
      }
    }; // Unity.Properties.ReflectedMemberProperty`2/SetStructValueAction
    // Could not write size check! Type: Unity.Properties.ReflectedMemberProperty`2/SetStructValueAction is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: Unity.Properties.ReflectedMemberProperty`2/GetClassValueAction
    // [TokenAttribute] Offset: FFFFFFFF
    class GetClassValueAction : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::System::MulticastDelegate {
      public:
      using declaring_type = ReflectedMemberProperty_2<TContainer, TValue>*;
      static constexpr std::string_view NESTED_NAME = "GetClassValueAction";
      static constexpr bool IS_VALUE_TYPE = false;
      // public System.Void .ctor(System.Object object, System.IntPtr method)
      // Offset: 0xFFFFFFFFFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename ReflectedMemberProperty_2<TContainer, TValue>::GetClassValueAction* New_ctor(::Il2CppObject* object, ::System::IntPtr method) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::ReflectedMemberProperty_2::GetClassValueAction::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename ReflectedMemberProperty_2<TContainer, TValue>::GetClassValueAction*, creationType>(object, method)));
      }
      // public TValue Invoke(TContainer container)
      // Offset: 0xFFFFFFFFFFFFFFFF
      TValue Invoke(TContainer container) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::ReflectedMemberProperty_2::GetClassValueAction::Invoke");
        auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::Unity::Properties::ReflectedMemberProperty_2<TContainer, TValue>::GetClassValueAction*), -1)));
        return ::il2cpp_utils::RunMethodRethrow<TValue, false>(this, ___internal__method, container);
      }
    }; // Unity.Properties.ReflectedMemberProperty`2/GetClassValueAction
    // Could not write size check! Type: Unity.Properties.ReflectedMemberProperty`2/GetClassValueAction is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: Unity.Properties.ReflectedMemberProperty`2/SetClassValueAction
    // [TokenAttribute] Offset: FFFFFFFF
    class SetClassValueAction : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::System::MulticastDelegate {
      public:
      using declaring_type = ReflectedMemberProperty_2<TContainer, TValue>*;
      static constexpr std::string_view NESTED_NAME = "SetClassValueAction";
      static constexpr bool IS_VALUE_TYPE = false;
      // public System.Void .ctor(System.Object object, System.IntPtr method)
      // Offset: 0xFFFFFFFFFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename ReflectedMemberProperty_2<TContainer, TValue>::SetClassValueAction* New_ctor(::Il2CppObject* object, ::System::IntPtr method) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::ReflectedMemberProperty_2::SetClassValueAction::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename ReflectedMemberProperty_2<TContainer, TValue>::SetClassValueAction*, creationType>(object, method)));
      }
      // public System.Void Invoke(TContainer container, TValue value)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void Invoke(TContainer container, TValue value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::ReflectedMemberProperty_2::SetClassValueAction::Invoke");
        auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::Unity::Properties::ReflectedMemberProperty_2<TContainer, TValue>::SetClassValueAction*), -1)));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container, value);
      }
    }; // Unity.Properties.ReflectedMemberProperty`2/SetClassValueAction
    // Could not write size check! Type: Unity.Properties.ReflectedMemberProperty`2/SetClassValueAction is generic, or has no fields that are valid for size checks!
    public:
    // private readonly Unity.Properties.IMemberInfo m_Info
    // Size: 0x8
    // Offset: 0x0
    ::Unity::Properties::IMemberInfo* m_Info;
    // Field size check
    static_assert(sizeof(::Unity::Properties::IMemberInfo*) == 0x8);
    // private readonly System.Boolean m_IsStructContainerType
    // Size: 0x1
    // Offset: 0x0
    bool m_IsStructContainerType;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private Unity.Properties.ReflectedMemberProperty`2/GetStructValueAction<TContainer,TValue> m_GetStructValueAction
    // Size: 0x8
    // Offset: 0x0
    typename ::Unity::Properties::ReflectedMemberProperty_2<TContainer, TValue>::GetStructValueAction* m_GetStructValueAction;
    // Field size check
    static_assert(sizeof(typename ::Unity::Properties::ReflectedMemberProperty_2<TContainer, TValue>::GetStructValueAction*) == 0x8);
    // private Unity.Properties.ReflectedMemberProperty`2/SetStructValueAction<TContainer,TValue> m_SetStructValueAction
    // Size: 0x8
    // Offset: 0x0
    typename ::Unity::Properties::ReflectedMemberProperty_2<TContainer, TValue>::SetStructValueAction* m_SetStructValueAction;
    // Field size check
    static_assert(sizeof(typename ::Unity::Properties::ReflectedMemberProperty_2<TContainer, TValue>::SetStructValueAction*) == 0x8);
    // private Unity.Properties.ReflectedMemberProperty`2/GetClassValueAction<TContainer,TValue> m_GetClassValueAction
    // Size: 0x8
    // Offset: 0x0
    typename ::Unity::Properties::ReflectedMemberProperty_2<TContainer, TValue>::GetClassValueAction* m_GetClassValueAction;
    // Field size check
    static_assert(sizeof(typename ::Unity::Properties::ReflectedMemberProperty_2<TContainer, TValue>::GetClassValueAction*) == 0x8);
    // private Unity.Properties.ReflectedMemberProperty`2/SetClassValueAction<TContainer,TValue> m_SetClassValueAction
    // Size: 0x8
    // Offset: 0x0
    typename ::Unity::Properties::ReflectedMemberProperty_2<TContainer, TValue>::SetClassValueAction* m_SetClassValueAction;
    // Field size check
    static_assert(sizeof(typename ::Unity::Properties::ReflectedMemberProperty_2<TContainer, TValue>::SetClassValueAction*) == 0x8);
    // private readonly System.String <Name>k__BackingField
    // Size: 0x8
    // Offset: 0x0
    ::StringW Name;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private readonly System.Boolean <IsReadOnly>k__BackingField
    // Size: 0x1
    // Offset: 0x0
    bool IsReadOnly;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::Collections::Generic::List_1<::System::Attribute*>*
    constexpr operator ::System::Collections::Generic::List_1<::System::Attribute*>*() const noexcept = delete;
    // Autogenerated instance field getter
    // Get instance field: private readonly Unity.Properties.IMemberInfo m_Info
    [[deprecated("Use field access instead!")]] ::Unity::Properties::IMemberInfo*& dyn_m_Info() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::ReflectedMemberProperty_2::dyn_m_Info");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Info"))->offset;
      return *reinterpret_cast<::Unity::Properties::IMemberInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private readonly System.Boolean m_IsStructContainerType
    [[deprecated("Use field access instead!")]] bool& dyn_m_IsStructContainerType() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::ReflectedMemberProperty_2::dyn_m_IsStructContainerType");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IsStructContainerType"))->offset;
      return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private Unity.Properties.ReflectedMemberProperty`2/GetStructValueAction<TContainer,TValue> m_GetStructValueAction
    [[deprecated("Use field access instead!")]] typename ::Unity::Properties::ReflectedMemberProperty_2<TContainer, TValue>::GetStructValueAction*& dyn_m_GetStructValueAction() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::ReflectedMemberProperty_2::dyn_m_GetStructValueAction");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GetStructValueAction"))->offset;
      return *reinterpret_cast<typename ::Unity::Properties::ReflectedMemberProperty_2<TContainer, TValue>::GetStructValueAction**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private Unity.Properties.ReflectedMemberProperty`2/SetStructValueAction<TContainer,TValue> m_SetStructValueAction
    [[deprecated("Use field access instead!")]] typename ::Unity::Properties::ReflectedMemberProperty_2<TContainer, TValue>::SetStructValueAction*& dyn_m_SetStructValueAction() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::ReflectedMemberProperty_2::dyn_m_SetStructValueAction");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SetStructValueAction"))->offset;
      return *reinterpret_cast<typename ::Unity::Properties::ReflectedMemberProperty_2<TContainer, TValue>::SetStructValueAction**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private Unity.Properties.ReflectedMemberProperty`2/GetClassValueAction<TContainer,TValue> m_GetClassValueAction
    [[deprecated("Use field access instead!")]] typename ::Unity::Properties::ReflectedMemberProperty_2<TContainer, TValue>::GetClassValueAction*& dyn_m_GetClassValueAction() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::ReflectedMemberProperty_2::dyn_m_GetClassValueAction");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GetClassValueAction"))->offset;
      return *reinterpret_cast<typename ::Unity::Properties::ReflectedMemberProperty_2<TContainer, TValue>::GetClassValueAction**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private Unity.Properties.ReflectedMemberProperty`2/SetClassValueAction<TContainer,TValue> m_SetClassValueAction
    [[deprecated("Use field access instead!")]] typename ::Unity::Properties::ReflectedMemberProperty_2<TContainer, TValue>::SetClassValueAction*& dyn_m_SetClassValueAction() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::ReflectedMemberProperty_2::dyn_m_SetClassValueAction");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SetClassValueAction"))->offset;
      return *reinterpret_cast<typename ::Unity::Properties::ReflectedMemberProperty_2<TContainer, TValue>::SetClassValueAction**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private readonly System.String <Name>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$Name$k__BackingField() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::ReflectedMemberProperty_2::dyn_$Name$k__BackingField");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
      return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private readonly System.Boolean <IsReadOnly>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$IsReadOnly$k__BackingField() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::ReflectedMemberProperty_2::dyn_$IsReadOnly$k__BackingField");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsReadOnly>k__BackingField"))->offset;
      return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // System.Void .ctor(Unity.Properties.IMemberInfo info, System.String name)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ReflectedMemberProperty_2<TContainer, TValue>* New_ctor(::Unity::Properties::IMemberInfo* info, ::StringW name) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::ReflectedMemberProperty_2::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ReflectedMemberProperty_2<TContainer, TValue>*, creationType>(info, name)));
    }
    // public override System.String get_Name()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: Unity.Properties.Property`2
    // Base method: System.String Property_2::get_Name()
    ::StringW get_Name() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::ReflectedMemberProperty_2::get_Name");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Unity::Properties::Property_2<TContainer, TValue>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
    }
  }; // Unity.Properties.ReflectedMemberProperty`2
  // Could not write size check! Type: Unity.Properties.ReflectedMemberProperty`2 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
