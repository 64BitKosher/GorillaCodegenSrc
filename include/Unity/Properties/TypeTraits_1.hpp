// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: Unity.Properties
namespace Unity::Properties {
  // Forward declaring type: TypeTraits`1<T>
  template<typename T>
  class TypeTraits_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::Unity::Properties::TypeTraits_1, "Unity.Properties", "TypeTraits`1");
// Type namespace: Unity.Properties
namespace Unity::Properties {
  // WARNING Size may be invalid!
  // Autogenerated type: Unity.Properties.TypeTraits`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename T>
  class TypeTraits_1 : public ::Il2CppObject {
    public:
    // Autogenerated static field getter
    // Get static field: static private readonly System.Boolean <IsValueType>k__BackingField
    static bool _get_$IsValueType$k__BackingField() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeTraits_1::_get_$IsValueType$k__BackingField");
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TypeTraits_1<T>*>::get(), "<IsValueType>k__BackingField")));
    }
    // Autogenerated static field setter
    // Set static field: static private readonly System.Boolean <IsValueType>k__BackingField
    static void _set_$IsValueType$k__BackingField(bool value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeTraits_1::_set_$IsValueType$k__BackingField");
      THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TypeTraits_1<T>*>::get(), "<IsValueType>k__BackingField", value)));
    }
    // Autogenerated static field getter
    // Get static field: static private readonly System.Boolean <IsPrimitive>k__BackingField
    static bool _get_$IsPrimitive$k__BackingField() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeTraits_1::_get_$IsPrimitive$k__BackingField");
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TypeTraits_1<T>*>::get(), "<IsPrimitive>k__BackingField")));
    }
    // Autogenerated static field setter
    // Set static field: static private readonly System.Boolean <IsPrimitive>k__BackingField
    static void _set_$IsPrimitive$k__BackingField(bool value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeTraits_1::_set_$IsPrimitive$k__BackingField");
      THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TypeTraits_1<T>*>::get(), "<IsPrimitive>k__BackingField", value)));
    }
    // Autogenerated static field getter
    // Get static field: static private readonly System.Boolean <IsInterface>k__BackingField
    static bool _get_$IsInterface$k__BackingField() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeTraits_1::_get_$IsInterface$k__BackingField");
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TypeTraits_1<T>*>::get(), "<IsInterface>k__BackingField")));
    }
    // Autogenerated static field setter
    // Set static field: static private readonly System.Boolean <IsInterface>k__BackingField
    static void _set_$IsInterface$k__BackingField(bool value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeTraits_1::_set_$IsInterface$k__BackingField");
      THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TypeTraits_1<T>*>::get(), "<IsInterface>k__BackingField", value)));
    }
    // Autogenerated static field getter
    // Get static field: static private readonly System.Boolean <IsAbstract>k__BackingField
    static bool _get_$IsAbstract$k__BackingField() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeTraits_1::_get_$IsAbstract$k__BackingField");
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TypeTraits_1<T>*>::get(), "<IsAbstract>k__BackingField")));
    }
    // Autogenerated static field setter
    // Set static field: static private readonly System.Boolean <IsAbstract>k__BackingField
    static void _set_$IsAbstract$k__BackingField(bool value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeTraits_1::_set_$IsAbstract$k__BackingField");
      THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TypeTraits_1<T>*>::get(), "<IsAbstract>k__BackingField", value)));
    }
    // Autogenerated static field getter
    // Get static field: static private readonly System.Boolean <IsArray>k__BackingField
    static bool _get_$IsArray$k__BackingField() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeTraits_1::_get_$IsArray$k__BackingField");
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TypeTraits_1<T>*>::get(), "<IsArray>k__BackingField")));
    }
    // Autogenerated static field setter
    // Set static field: static private readonly System.Boolean <IsArray>k__BackingField
    static void _set_$IsArray$k__BackingField(bool value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeTraits_1::_set_$IsArray$k__BackingField");
      THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TypeTraits_1<T>*>::get(), "<IsArray>k__BackingField", value)));
    }
    // Autogenerated static field getter
    // Get static field: static private readonly System.Boolean <IsMultidimensionalArray>k__BackingField
    static bool _get_$IsMultidimensionalArray$k__BackingField() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeTraits_1::_get_$IsMultidimensionalArray$k__BackingField");
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TypeTraits_1<T>*>::get(), "<IsMultidimensionalArray>k__BackingField")));
    }
    // Autogenerated static field setter
    // Set static field: static private readonly System.Boolean <IsMultidimensionalArray>k__BackingField
    static void _set_$IsMultidimensionalArray$k__BackingField(bool value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeTraits_1::_set_$IsMultidimensionalArray$k__BackingField");
      THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TypeTraits_1<T>*>::get(), "<IsMultidimensionalArray>k__BackingField", value)));
    }
    // Autogenerated static field getter
    // Get static field: static private readonly System.Boolean <IsEnum>k__BackingField
    static bool _get_$IsEnum$k__BackingField() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeTraits_1::_get_$IsEnum$k__BackingField");
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TypeTraits_1<T>*>::get(), "<IsEnum>k__BackingField")));
    }
    // Autogenerated static field setter
    // Set static field: static private readonly System.Boolean <IsEnum>k__BackingField
    static void _set_$IsEnum$k__BackingField(bool value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeTraits_1::_set_$IsEnum$k__BackingField");
      THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TypeTraits_1<T>*>::get(), "<IsEnum>k__BackingField", value)));
    }
    // Autogenerated static field getter
    // Get static field: static private readonly System.Boolean <IsEnumFlags>k__BackingField
    static bool _get_$IsEnumFlags$k__BackingField() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeTraits_1::_get_$IsEnumFlags$k__BackingField");
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TypeTraits_1<T>*>::get(), "<IsEnumFlags>k__BackingField")));
    }
    // Autogenerated static field setter
    // Set static field: static private readonly System.Boolean <IsEnumFlags>k__BackingField
    static void _set_$IsEnumFlags$k__BackingField(bool value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeTraits_1::_set_$IsEnumFlags$k__BackingField");
      THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TypeTraits_1<T>*>::get(), "<IsEnumFlags>k__BackingField", value)));
    }
    // Autogenerated static field getter
    // Get static field: static private readonly System.Boolean <IsNullable>k__BackingField
    static bool _get_$IsNullable$k__BackingField() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeTraits_1::_get_$IsNullable$k__BackingField");
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TypeTraits_1<T>*>::get(), "<IsNullable>k__BackingField")));
    }
    // Autogenerated static field setter
    // Set static field: static private readonly System.Boolean <IsNullable>k__BackingField
    static void _set_$IsNullable$k__BackingField(bool value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeTraits_1::_set_$IsNullable$k__BackingField");
      THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TypeTraits_1<T>*>::get(), "<IsNullable>k__BackingField", value)));
    }
    // Autogenerated static field getter
    // Get static field: static private readonly System.Boolean <IsObject>k__BackingField
    static bool _get_$IsObject$k__BackingField() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeTraits_1::_get_$IsObject$k__BackingField");
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TypeTraits_1<T>*>::get(), "<IsObject>k__BackingField")));
    }
    // Autogenerated static field setter
    // Set static field: static private readonly System.Boolean <IsObject>k__BackingField
    static void _set_$IsObject$k__BackingField(bool value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeTraits_1::_set_$IsObject$k__BackingField");
      THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TypeTraits_1<T>*>::get(), "<IsObject>k__BackingField", value)));
    }
    // Autogenerated static field getter
    // Get static field: static private readonly System.Boolean <IsString>k__BackingField
    static bool _get_$IsString$k__BackingField() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeTraits_1::_get_$IsString$k__BackingField");
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TypeTraits_1<T>*>::get(), "<IsString>k__BackingField")));
    }
    // Autogenerated static field setter
    // Set static field: static private readonly System.Boolean <IsString>k__BackingField
    static void _set_$IsString$k__BackingField(bool value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeTraits_1::_set_$IsString$k__BackingField");
      THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TypeTraits_1<T>*>::get(), "<IsString>k__BackingField", value)));
    }
    // Autogenerated static field getter
    // Get static field: static private readonly System.Boolean <IsContainer>k__BackingField
    static bool _get_$IsContainer$k__BackingField() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeTraits_1::_get_$IsContainer$k__BackingField");
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TypeTraits_1<T>*>::get(), "<IsContainer>k__BackingField")));
    }
    // Autogenerated static field setter
    // Set static field: static private readonly System.Boolean <IsContainer>k__BackingField
    static void _set_$IsContainer$k__BackingField(bool value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeTraits_1::_set_$IsContainer$k__BackingField");
      THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TypeTraits_1<T>*>::get(), "<IsContainer>k__BackingField", value)));
    }
    // Autogenerated static field getter
    // Get static field: static private readonly System.Boolean <CanBeNull>k__BackingField
    static bool _get_$CanBeNull$k__BackingField() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeTraits_1::_get_$CanBeNull$k__BackingField");
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TypeTraits_1<T>*>::get(), "<CanBeNull>k__BackingField")));
    }
    // Autogenerated static field setter
    // Set static field: static private readonly System.Boolean <CanBeNull>k__BackingField
    static void _set_$CanBeNull$k__BackingField(bool value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeTraits_1::_set_$CanBeNull$k__BackingField");
      THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TypeTraits_1<T>*>::get(), "<CanBeNull>k__BackingField", value)));
    }
    // Autogenerated static field getter
    // Get static field: static private readonly System.Boolean <IsPrimitiveOrString>k__BackingField
    static bool _get_$IsPrimitiveOrString$k__BackingField() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeTraits_1::_get_$IsPrimitiveOrString$k__BackingField");
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TypeTraits_1<T>*>::get(), "<IsPrimitiveOrString>k__BackingField")));
    }
    // Autogenerated static field setter
    // Set static field: static private readonly System.Boolean <IsPrimitiveOrString>k__BackingField
    static void _set_$IsPrimitiveOrString$k__BackingField(bool value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeTraits_1::_set_$IsPrimitiveOrString$k__BackingField");
      THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TypeTraits_1<T>*>::get(), "<IsPrimitiveOrString>k__BackingField", value)));
    }
    // Autogenerated static field getter
    // Get static field: static private readonly System.Boolean <IsAbstractOrInterface>k__BackingField
    static bool _get_$IsAbstractOrInterface$k__BackingField() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeTraits_1::_get_$IsAbstractOrInterface$k__BackingField");
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TypeTraits_1<T>*>::get(), "<IsAbstractOrInterface>k__BackingField")));
    }
    // Autogenerated static field setter
    // Set static field: static private readonly System.Boolean <IsAbstractOrInterface>k__BackingField
    static void _set_$IsAbstractOrInterface$k__BackingField(bool value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeTraits_1::_set_$IsAbstractOrInterface$k__BackingField");
      THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TypeTraits_1<T>*>::get(), "<IsAbstractOrInterface>k__BackingField", value)));
    }
    // Autogenerated static field getter
    // Get static field: static private readonly System.Boolean <IsUnityObject>k__BackingField
    static bool _get_$IsUnityObject$k__BackingField() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeTraits_1::_get_$IsUnityObject$k__BackingField");
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TypeTraits_1<T>*>::get(), "<IsUnityObject>k__BackingField")));
    }
    // Autogenerated static field setter
    // Set static field: static private readonly System.Boolean <IsUnityObject>k__BackingField
    static void _set_$IsUnityObject$k__BackingField(bool value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeTraits_1::_set_$IsUnityObject$k__BackingField");
      THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TypeTraits_1<T>*>::get(), "<IsUnityObject>k__BackingField", value)));
    }
    // Autogenerated static field getter
    // Get static field: static private readonly System.Boolean <IsLazyLoadReference>k__BackingField
    static bool _get_$IsLazyLoadReference$k__BackingField() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeTraits_1::_get_$IsLazyLoadReference$k__BackingField");
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TypeTraits_1<T>*>::get(), "<IsLazyLoadReference>k__BackingField")));
    }
    // Autogenerated static field setter
    // Set static field: static private readonly System.Boolean <IsLazyLoadReference>k__BackingField
    static void _set_$IsLazyLoadReference$k__BackingField(bool value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeTraits_1::_set_$IsLazyLoadReference$k__BackingField");
      THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TypeTraits_1<T>*>::get(), "<IsLazyLoadReference>k__BackingField", value)));
    }
    // static public System.Boolean get_IsValueType()
    // Offset: 0xFFFFFFFFFFFFFFFF
    static bool get_IsValueType() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeTraits_1::get_IsValueType");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TypeTraits_1<T>*>::get(), "get_IsValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
    // static public System.Boolean get_IsPrimitive()
    // Offset: 0xFFFFFFFFFFFFFFFF
    static bool get_IsPrimitive() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeTraits_1::get_IsPrimitive");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TypeTraits_1<T>*>::get(), "get_IsPrimitive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
    // static public System.Boolean get_IsInterface()
    // Offset: 0xFFFFFFFFFFFFFFFF
    static bool get_IsInterface() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeTraits_1::get_IsInterface");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TypeTraits_1<T>*>::get(), "get_IsInterface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
    // static public System.Boolean get_IsAbstract()
    // Offset: 0xFFFFFFFFFFFFFFFF
    static bool get_IsAbstract() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeTraits_1::get_IsAbstract");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TypeTraits_1<T>*>::get(), "get_IsAbstract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
    // static public System.Boolean get_IsArray()
    // Offset: 0xFFFFFFFFFFFFFFFF
    static bool get_IsArray() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeTraits_1::get_IsArray");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TypeTraits_1<T>*>::get(), "get_IsArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
    // static public System.Boolean get_IsEnum()
    // Offset: 0xFFFFFFFFFFFFFFFF
    static bool get_IsEnum() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeTraits_1::get_IsEnum");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TypeTraits_1<T>*>::get(), "get_IsEnum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
    // static public System.Boolean get_IsNullable()
    // Offset: 0xFFFFFFFFFFFFFFFF
    static bool get_IsNullable() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeTraits_1::get_IsNullable");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TypeTraits_1<T>*>::get(), "get_IsNullable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
    // static public System.Boolean get_IsObject()
    // Offset: 0xFFFFFFFFFFFFFFFF
    static bool get_IsObject() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeTraits_1::get_IsObject");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TypeTraits_1<T>*>::get(), "get_IsObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
    // static public System.Boolean get_IsString()
    // Offset: 0xFFFFFFFFFFFFFFFF
    static bool get_IsString() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeTraits_1::get_IsString");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TypeTraits_1<T>*>::get(), "get_IsString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
    // static public System.Boolean get_IsContainer()
    // Offset: 0xFFFFFFFFFFFFFFFF
    static bool get_IsContainer() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeTraits_1::get_IsContainer");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TypeTraits_1<T>*>::get(), "get_IsContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
    // static public System.Boolean get_CanBeNull()
    // Offset: 0xFFFFFFFFFFFFFFFF
    static bool get_CanBeNull() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeTraits_1::get_CanBeNull");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TypeTraits_1<T>*>::get(), "get_CanBeNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
    // static public System.Boolean get_IsAbstractOrInterface()
    // Offset: 0xFFFFFFFFFFFFFFFF
    static bool get_IsAbstractOrInterface() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeTraits_1::get_IsAbstractOrInterface");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TypeTraits_1<T>*>::get(), "get_IsAbstractOrInterface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
    // static private System.Void .cctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    static void _cctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeTraits_1::.cctor");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TypeTraits_1<T>*>::get(), ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
  }; // Unity.Properties.TypeTraits`1
  // Could not write size check! Type: Unity.Properties.TypeTraits`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
