// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Unity.Properties.TypeUtility
#include "Unity/Properties/TypeUtility.hpp"
// Including type: Unity.Properties.TypeUtility/ITypeConstructor
#include "Unity/Properties/TypeUtility_ITypeConstructor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`1<TResult>
  template<typename TResult>
  class Func_1;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::Unity::Properties::TypeUtility::ITypeConstructor_1, "Unity.Properties", "TypeUtility/ITypeConstructor`1");
// Type namespace: Unity.Properties
namespace Unity::Properties {
  // WARNING Size may be invalid!
  // Autogenerated type: Unity.Properties.TypeUtility/ITypeConstructor`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename T>
  class TypeUtility::ITypeConstructor_1/*, public ::Unity::Properties::TypeUtility::ITypeConstructor*/ {
    public:
    // Creating interface conversion operator: operator ::Unity::Properties::TypeUtility::ITypeConstructor
    operator ::Unity::Properties::TypeUtility::ITypeConstructor() noexcept {
      return *reinterpret_cast<::Unity::Properties::TypeUtility::ITypeConstructor*>(this);
    }
    // public T Instantiate()
    // Offset: 0xFFFFFFFFFFFFFFFF
    T Instantiate() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeUtility::ITypeConstructor_1::Instantiate");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Unity::Properties::TypeUtility::ITypeConstructor_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(this, ___internal__method);
    }
    // public System.Void SetExplicitConstructor(System.Func`1<T> constructor)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void SetExplicitConstructor(::System::Func_1<T>* constructor) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Properties::TypeUtility::ITypeConstructor_1::SetExplicitConstructor");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Unity::Properties::TypeUtility::ITypeConstructor_1<T>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, constructor);
    }
  }; // Unity.Properties.TypeUtility/ITypeConstructor`1
  // Could not write size check! Type: Unity.Properties.TypeUtility/ITypeConstructor`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
