// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: Unity.Collections.NativeArray`1
#include "Unity/Collections/NativeArray_1.hpp"
// Including type: UnityEngine.TextureFormat
#include "UnityEngine/TextureFormat.hpp"
// Completed includes
// Type namespace: Unity.Profiling
namespace Unity::Profiling {
  // Forward declaring type: DebugScreenCapture
  struct DebugScreenCapture;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Unity::Profiling::DebugScreenCapture, "Unity.Profiling", "DebugScreenCapture");
// Type namespace: Unity.Profiling
namespace Unity::Profiling {
  // WARNING Size may be invalid!
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: Unity.Profiling.DebugScreenCapture
  // [TokenAttribute] Offset: FFFFFFFF
  struct DebugScreenCapture/*, public ::System::ValueType*/ {
    public:
    public:
    // private Unity.Collections.NativeArray`1<System.Byte> <RawImageDataReference>k__BackingField
    // Size: 0xFFFFFFFF
    // Offset: 0x0
    ::Unity::Collections::NativeArray_1<uint8_t> RawImageDataReference;
    // private UnityEngine.TextureFormat <ImageFormat>k__BackingField
    // Size: 0x4
    // Offset: 0x10
    ::UnityEngine::TextureFormat ImageFormat;
    // Field size check
    static_assert(sizeof(::UnityEngine::TextureFormat) == 0x4);
    // private System.Int32 <Width>k__BackingField
    // Size: 0x4
    // Offset: 0x14
    int Width;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 <Height>k__BackingField
    // Size: 0x4
    // Offset: 0x18
    int Height;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: DebugScreenCapture
    constexpr DebugScreenCapture(::Unity::Collections::NativeArray_1<uint8_t> RawImageDataReference_ = {}, ::UnityEngine::TextureFormat ImageFormat_ = {}, int Width_ = {}, int Height_ = {}) noexcept : RawImageDataReference{RawImageDataReference_}, ImageFormat{ImageFormat_}, Width{Width_}, Height{Height_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: private Unity.Collections.NativeArray`1<System.Byte> <RawImageDataReference>k__BackingField
    [[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<uint8_t>& dyn_$RawImageDataReference$k__BackingField();
    // Get instance field reference: private UnityEngine.TextureFormat <ImageFormat>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::TextureFormat& dyn_$ImageFormat$k__BackingField();
    // Get instance field reference: private System.Int32 <Width>k__BackingField
    [[deprecated("Use field access instead!")]] int& dyn_$Width$k__BackingField();
    // Get instance field reference: private System.Int32 <Height>k__BackingField
    [[deprecated("Use field access instead!")]] int& dyn_$Height$k__BackingField();
    // public System.Void set_RawImageDataReference(Unity.Collections.NativeArray`1<System.Byte> value)
    // Offset: 0x54789A0
    void set_RawImageDataReference(::Unity::Collections::NativeArray_1<uint8_t> value);
    // public System.Void set_ImageFormat(UnityEngine.TextureFormat value)
    // Offset: 0x54789A8
    void set_ImageFormat(::UnityEngine::TextureFormat value);
    // public System.Void set_Width(System.Int32 value)
    // Offset: 0x54789B0
    void set_Width(int value);
    // public System.Void set_Height(System.Int32 value)
    // Offset: 0x54789B8
    void set_Height(int value);
  }; // Unity.Profiling.DebugScreenCapture
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Unity::Profiling::DebugScreenCapture::set_RawImageDataReference
// Il2CppName: set_RawImageDataReference
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::Profiling::DebugScreenCapture::*)(::Unity::Collections::NativeArray_1<uint8_t>)>(&Unity::Profiling::DebugScreenCapture::set_RawImageDataReference)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("Unity.Collections", "NativeArray`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Byte")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Profiling::DebugScreenCapture), "set_RawImageDataReference", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Unity::Profiling::DebugScreenCapture::set_ImageFormat
// Il2CppName: set_ImageFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::Profiling::DebugScreenCapture::*)(::UnityEngine::TextureFormat)>(&Unity::Profiling::DebugScreenCapture::set_ImageFormat)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "TextureFormat")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Profiling::DebugScreenCapture), "set_ImageFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Unity::Profiling::DebugScreenCapture::set_Width
// Il2CppName: set_Width
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::Profiling::DebugScreenCapture::*)(int)>(&Unity::Profiling::DebugScreenCapture::set_Width)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Profiling::DebugScreenCapture), "set_Width", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Unity::Profiling::DebugScreenCapture::set_Height
// Il2CppName: set_Height
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::Profiling::DebugScreenCapture::*)(int)>(&Unity::Profiling::DebugScreenCapture::set_Height)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Profiling::DebugScreenCapture), "set_Height", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
