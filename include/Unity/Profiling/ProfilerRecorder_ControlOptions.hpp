// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Unity.Profiling.ProfilerRecorder
#include "Unity/Profiling/ProfilerRecorder.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Unity::Profiling::ProfilerRecorder::ControlOptions, "Unity.Profiling", "ProfilerRecorder/ControlOptions");
// Type namespace: Unity.Profiling
namespace Unity::Profiling {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: Unity.Profiling.ProfilerRecorder/ControlOptions
  // [TokenAttribute] Offset: FFFFFFFF
  struct ProfilerRecorder::ControlOptions/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: ControlOptions
    constexpr ControlOptions(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public Unity.Profiling.ProfilerRecorder/ControlOptions Start
    static constexpr const int Start = 0;
    // Get static field: static public Unity.Profiling.ProfilerRecorder/ControlOptions Start
    static ::Unity::Profiling::ProfilerRecorder::ControlOptions _get_Start();
    // Set static field: static public Unity.Profiling.ProfilerRecorder/ControlOptions Start
    static void _set_Start(::Unity::Profiling::ProfilerRecorder::ControlOptions value);
    // static field const value: static public Unity.Profiling.ProfilerRecorder/ControlOptions Stop
    static constexpr const int Stop = 1;
    // Get static field: static public Unity.Profiling.ProfilerRecorder/ControlOptions Stop
    static ::Unity::Profiling::ProfilerRecorder::ControlOptions _get_Stop();
    // Set static field: static public Unity.Profiling.ProfilerRecorder/ControlOptions Stop
    static void _set_Stop(::Unity::Profiling::ProfilerRecorder::ControlOptions value);
    // static field const value: static public Unity.Profiling.ProfilerRecorder/ControlOptions Reset
    static constexpr const int Reset = 2;
    // Get static field: static public Unity.Profiling.ProfilerRecorder/ControlOptions Reset
    static ::Unity::Profiling::ProfilerRecorder::ControlOptions _get_Reset();
    // Set static field: static public Unity.Profiling.ProfilerRecorder/ControlOptions Reset
    static void _set_Reset(::Unity::Profiling::ProfilerRecorder::ControlOptions value);
    // static field const value: static public Unity.Profiling.ProfilerRecorder/ControlOptions Release
    static constexpr const int Release = 4;
    // Get static field: static public Unity.Profiling.ProfilerRecorder/ControlOptions Release
    static ::Unity::Profiling::ProfilerRecorder::ControlOptions _get_Release();
    // Set static field: static public Unity.Profiling.ProfilerRecorder/ControlOptions Release
    static void _set_Release(::Unity::Profiling::ProfilerRecorder::ControlOptions value);
    // static field const value: static public Unity.Profiling.ProfilerRecorder/ControlOptions SetFilterToCurrentThread
    static constexpr const int SetFilterToCurrentThread = 5;
    // Get static field: static public Unity.Profiling.ProfilerRecorder/ControlOptions SetFilterToCurrentThread
    static ::Unity::Profiling::ProfilerRecorder::ControlOptions _get_SetFilterToCurrentThread();
    // Set static field: static public Unity.Profiling.ProfilerRecorder/ControlOptions SetFilterToCurrentThread
    static void _set_SetFilterToCurrentThread(::Unity::Profiling::ProfilerRecorder::ControlOptions value);
    // static field const value: static public Unity.Profiling.ProfilerRecorder/ControlOptions SetToCollectFromAllThreads
    static constexpr const int SetToCollectFromAllThreads = 6;
    // Get static field: static public Unity.Profiling.ProfilerRecorder/ControlOptions SetToCollectFromAllThreads
    static ::Unity::Profiling::ProfilerRecorder::ControlOptions _get_SetToCollectFromAllThreads();
    // Set static field: static public Unity.Profiling.ProfilerRecorder/ControlOptions SetToCollectFromAllThreads
    static void _set_SetToCollectFromAllThreads(::Unity::Profiling::ProfilerRecorder::ControlOptions value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // Unity.Profiling.ProfilerRecorder/ControlOptions
  #pragma pack(pop)
  static check_size<sizeof(ProfilerRecorder::ControlOptions), 0 + sizeof(int)> __Unity_Profiling_ProfilerRecorder_ControlOptionsSizeCheck;
  static_assert(sizeof(ProfilerRecorder::ControlOptions) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
