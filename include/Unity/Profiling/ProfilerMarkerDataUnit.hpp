// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: Unity.Profiling
namespace Unity::Profiling {
  // Forward declaring type: ProfilerMarkerDataUnit
  struct ProfilerMarkerDataUnit;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Unity::Profiling::ProfilerMarkerDataUnit, "Unity.Profiling", "ProfilerMarkerDataUnit");
// Type namespace: Unity.Profiling
namespace Unity::Profiling {
  // Size: 0x1
  #pragma pack(push, 1)
  // Autogenerated type: Unity.Profiling.ProfilerMarkerDataUnit
  // [TokenAttribute] Offset: FFFFFFFF
  struct ProfilerMarkerDataUnit/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Byte value__
    // Size: 0x1
    // Offset: 0x0
    uint8_t value;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    public:
    // Creating value type constructor for type: ProfilerMarkerDataUnit
    constexpr ProfilerMarkerDataUnit(uint8_t value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator uint8_t
    constexpr operator uint8_t() const noexcept {
      return value;
    }
    // static field const value: static public Unity.Profiling.ProfilerMarkerDataUnit Undefined
    static constexpr const uint8_t Undefined = 0u;
    // Get static field: static public Unity.Profiling.ProfilerMarkerDataUnit Undefined
    static ::Unity::Profiling::ProfilerMarkerDataUnit _get_Undefined();
    // Set static field: static public Unity.Profiling.ProfilerMarkerDataUnit Undefined
    static void _set_Undefined(::Unity::Profiling::ProfilerMarkerDataUnit value);
    // static field const value: static public Unity.Profiling.ProfilerMarkerDataUnit TimeNanoseconds
    static constexpr const uint8_t TimeNanoseconds = 1u;
    // Get static field: static public Unity.Profiling.ProfilerMarkerDataUnit TimeNanoseconds
    static ::Unity::Profiling::ProfilerMarkerDataUnit _get_TimeNanoseconds();
    // Set static field: static public Unity.Profiling.ProfilerMarkerDataUnit TimeNanoseconds
    static void _set_TimeNanoseconds(::Unity::Profiling::ProfilerMarkerDataUnit value);
    // static field const value: static public Unity.Profiling.ProfilerMarkerDataUnit Bytes
    static constexpr const uint8_t Bytes = 2u;
    // Get static field: static public Unity.Profiling.ProfilerMarkerDataUnit Bytes
    static ::Unity::Profiling::ProfilerMarkerDataUnit _get_Bytes();
    // Set static field: static public Unity.Profiling.ProfilerMarkerDataUnit Bytes
    static void _set_Bytes(::Unity::Profiling::ProfilerMarkerDataUnit value);
    // static field const value: static public Unity.Profiling.ProfilerMarkerDataUnit Count
    static constexpr const uint8_t Count = 3u;
    // Get static field: static public Unity.Profiling.ProfilerMarkerDataUnit Count
    static ::Unity::Profiling::ProfilerMarkerDataUnit _get_Count();
    // Set static field: static public Unity.Profiling.ProfilerMarkerDataUnit Count
    static void _set_Count(::Unity::Profiling::ProfilerMarkerDataUnit value);
    // static field const value: static public Unity.Profiling.ProfilerMarkerDataUnit Percent
    static constexpr const uint8_t Percent = 4u;
    // Get static field: static public Unity.Profiling.ProfilerMarkerDataUnit Percent
    static ::Unity::Profiling::ProfilerMarkerDataUnit _get_Percent();
    // Set static field: static public Unity.Profiling.ProfilerMarkerDataUnit Percent
    static void _set_Percent(::Unity::Profiling::ProfilerMarkerDataUnit value);
    // static field const value: static public Unity.Profiling.ProfilerMarkerDataUnit FrequencyHz
    static constexpr const uint8_t FrequencyHz = 5u;
    // Get static field: static public Unity.Profiling.ProfilerMarkerDataUnit FrequencyHz
    static ::Unity::Profiling::ProfilerMarkerDataUnit _get_FrequencyHz();
    // Set static field: static public Unity.Profiling.ProfilerMarkerDataUnit FrequencyHz
    static void _set_FrequencyHz(::Unity::Profiling::ProfilerMarkerDataUnit value);
    // Get instance field reference: public System.Byte value__
    [[deprecated("Use field access instead!")]] uint8_t& dyn_value__();
  }; // Unity.Profiling.ProfilerMarkerDataUnit
  #pragma pack(pop)
  static check_size<sizeof(ProfilerMarkerDataUnit), 0 + sizeof(uint8_t)> __Unity_Profiling_ProfilerMarkerDataUnitSizeCheck;
  static_assert(sizeof(ProfilerMarkerDataUnit) == 0x1);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
