// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: Unity.XR.CoreUtils.ARTrackablesParentTransformChangedEventArgs
#include "Unity/XR/CoreUtils/ARTrackablesParentTransformChangedEventArgs.hpp"
// Including type: UnityEngine.XR.TrackingOriginModeFlags
#include "UnityEngine/XR/TrackingOriginModeFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: Unity::XR::CoreUtils
namespace Unity::XR::CoreUtils {
  // Skipping declaration: TrackingOriginMode because it is already included!
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Camera
  class Camera;
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: GameObject
  class GameObject;
  // Skipping declaration: Vector3 because it is already included!
  // Forward declaring type: Pose
  struct Pose;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Forward declaring namespace: UnityEngine::XR
namespace UnityEngine::XR {
  // Forward declaring type: XRInputSubsystem
  class XRInputSubsystem;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: Unity.XR.CoreUtils
namespace Unity::XR::CoreUtils {
  // Forward declaring type: XROrigin
  class XROrigin;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Unity::XR::CoreUtils::XROrigin);
DEFINE_IL2CPP_ARG_TYPE(::Unity::XR::CoreUtils::XROrigin*, "Unity.XR.CoreUtils", "XROrigin");
// Type namespace: Unity.XR.CoreUtils
namespace Unity::XR::CoreUtils {
  // Size: 0x56
  #pragma pack(push, 1)
  // Autogenerated type: Unity.XR.CoreUtils.XROrigin
  // [TokenAttribute] Offset: FFFFFFFF
  // [HelpURLAttribute] Offset: FFFFFFFF
  // [DisallowMultipleComponent] Offset: FFFFFFFF
  // [AddComponentMenu] Offset: FFFFFFFF
  class XROrigin : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::Unity::XR::CoreUtils::XROrigin::TrackingOriginMode
    struct TrackingOriginMode;
    // Nested type: ::Unity::XR::CoreUtils::XROrigin::$RepeatInitializeCamera$d__48
    class $RepeatInitializeCamera$d__48;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: Unity.XR.CoreUtils.XROrigin/TrackingOriginMode
    // [TokenAttribute] Offset: FFFFFFFF
    struct TrackingOriginMode/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: TrackingOriginMode
      constexpr TrackingOriginMode(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public Unity.XR.CoreUtils.XROrigin/TrackingOriginMode NotSpecified
      static constexpr const int NotSpecified = 0;
      // Get static field: static public Unity.XR.CoreUtils.XROrigin/TrackingOriginMode NotSpecified
      static ::Unity::XR::CoreUtils::XROrigin::TrackingOriginMode _get_NotSpecified();
      // Set static field: static public Unity.XR.CoreUtils.XROrigin/TrackingOriginMode NotSpecified
      static void _set_NotSpecified(::Unity::XR::CoreUtils::XROrigin::TrackingOriginMode value);
      // static field const value: static public Unity.XR.CoreUtils.XROrigin/TrackingOriginMode Device
      static constexpr const int Device = 1;
      // Get static field: static public Unity.XR.CoreUtils.XROrigin/TrackingOriginMode Device
      static ::Unity::XR::CoreUtils::XROrigin::TrackingOriginMode _get_Device();
      // Set static field: static public Unity.XR.CoreUtils.XROrigin/TrackingOriginMode Device
      static void _set_Device(::Unity::XR::CoreUtils::XROrigin::TrackingOriginMode value);
      // static field const value: static public Unity.XR.CoreUtils.XROrigin/TrackingOriginMode Floor
      static constexpr const int Floor = 2;
      // Get static field: static public Unity.XR.CoreUtils.XROrigin/TrackingOriginMode Floor
      static ::Unity::XR::CoreUtils::XROrigin::TrackingOriginMode _get_Floor();
      // Set static field: static public Unity.XR.CoreUtils.XROrigin/TrackingOriginMode Floor
      static void _set_Floor(::Unity::XR::CoreUtils::XROrigin::TrackingOriginMode value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // Unity.XR.CoreUtils.XROrigin/TrackingOriginMode
    #pragma pack(pop)
    static check_size<sizeof(XROrigin::TrackingOriginMode), 0 + sizeof(int)> __Unity_XR_CoreUtils_XROrigin_TrackingOriginModeSizeCheck;
    static_assert(sizeof(XROrigin::TrackingOriginMode) == 0x4);
    public:
    // private UnityEngine.Camera m_Camera
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::Camera* m_Camera;
    // Field size check
    static_assert(sizeof(::UnityEngine::Camera*) == 0x8);
    // private UnityEngine.Transform <TrackablesParent>k__BackingField
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::Transform* TrackablesParent;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private System.Action`1<Unity.XR.CoreUtils.ARTrackablesParentTransformChangedEventArgs> TrackablesParentTransformChanged
    // Size: 0x8
    // Offset: 0x30
    ::System::Action_1<::Unity::XR::CoreUtils::ARTrackablesParentTransformChangedEventArgs>* TrackablesParentTransformChanged;
    // Field size check
    static_assert(sizeof(::System::Action_1<::Unity::XR::CoreUtils::ARTrackablesParentTransformChangedEventArgs>*) == 0x8);
    // private UnityEngine.GameObject m_OriginBaseGameObject
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::GameObject* m_OriginBaseGameObject;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject m_CameraFloorOffsetObject
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::GameObject* m_CameraFloorOffsetObject;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private Unity.XR.CoreUtils.XROrigin/TrackingOriginMode m_RequestedTrackingOriginMode
    // Size: 0x4
    // Offset: 0x48
    ::Unity::XR::CoreUtils::XROrigin::TrackingOriginMode m_RequestedTrackingOriginMode;
    // Field size check
    static_assert(sizeof(::Unity::XR::CoreUtils::XROrigin::TrackingOriginMode) == 0x4);
    // private System.Single m_CameraYOffset
    // Size: 0x4
    // Offset: 0x4C
    float m_CameraYOffset;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.XR.TrackingOriginModeFlags <CurrentTrackingOriginMode>k__BackingField
    // Size: 0x4
    // Offset: 0x50
    ::UnityEngine::XR::TrackingOriginModeFlags CurrentTrackingOriginMode;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::TrackingOriginModeFlags) == 0x4);
    // private System.Boolean m_CameraInitialized
    // Size: 0x1
    // Offset: 0x54
    bool m_CameraInitialized;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_CameraInitializing
    // Size: 0x1
    // Offset: 0x55
    bool m_CameraInitializing;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // static field const value: static private System.Single k_DefaultCameraYOffset
    static constexpr const float k_DefaultCameraYOffset = 1.1176;
    // Get static field: static private System.Single k_DefaultCameraYOffset
    static float _get_k_DefaultCameraYOffset();
    // Set static field: static private System.Single k_DefaultCameraYOffset
    static void _set_k_DefaultCameraYOffset(float value);
    // Get static field: static private readonly System.Collections.Generic.List`1<UnityEngine.XR.XRInputSubsystem> s_InputSubsystems
    static ::System::Collections::Generic::List_1<::UnityEngine::XR::XRInputSubsystem*>* _get_s_InputSubsystems();
    // Set static field: static private readonly System.Collections.Generic.List`1<UnityEngine.XR.XRInputSubsystem> s_InputSubsystems
    static void _set_s_InputSubsystems(::System::Collections::Generic::List_1<::UnityEngine::XR::XRInputSubsystem*>* value);
    // Get instance field reference: private UnityEngine.Camera m_Camera
    [[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& dyn_m_Camera();
    // Get instance field reference: private UnityEngine.Transform <TrackablesParent>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_$TrackablesParent$k__BackingField();
    // Get instance field reference: private System.Action`1<Unity.XR.CoreUtils.ARTrackablesParentTransformChangedEventArgs> TrackablesParentTransformChanged
    [[deprecated("Use field access instead!")]] ::System::Action_1<::Unity::XR::CoreUtils::ARTrackablesParentTransformChangedEventArgs>*& dyn_TrackablesParentTransformChanged();
    // Get instance field reference: private UnityEngine.GameObject m_OriginBaseGameObject
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_m_OriginBaseGameObject();
    // Get instance field reference: private UnityEngine.GameObject m_CameraFloorOffsetObject
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_m_CameraFloorOffsetObject();
    // Get instance field reference: private Unity.XR.CoreUtils.XROrigin/TrackingOriginMode m_RequestedTrackingOriginMode
    [[deprecated("Use field access instead!")]] ::Unity::XR::CoreUtils::XROrigin::TrackingOriginMode& dyn_m_RequestedTrackingOriginMode();
    // Get instance field reference: private System.Single m_CameraYOffset
    [[deprecated("Use field access instead!")]] float& dyn_m_CameraYOffset();
    // Get instance field reference: private UnityEngine.XR.TrackingOriginModeFlags <CurrentTrackingOriginMode>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::TrackingOriginModeFlags& dyn_$CurrentTrackingOriginMode$k__BackingField();
    // Get instance field reference: private System.Boolean m_CameraInitialized
    [[deprecated("Use field access instead!")]] bool& dyn_m_CameraInitialized();
    // Get instance field reference: private System.Boolean m_CameraInitializing
    [[deprecated("Use field access instead!")]] bool& dyn_m_CameraInitializing();
    // public UnityEngine.Camera get_Camera()
    // Offset: 0x53D079C
    ::UnityEngine::Camera* get_Camera();
    // public System.Void set_Camera(UnityEngine.Camera value)
    // Offset: 0x53D07A4
    void set_Camera(::UnityEngine::Camera* value);
    // public UnityEngine.Transform get_TrackablesParent()
    // Offset: 0x53D07AC
    ::UnityEngine::Transform* get_TrackablesParent();
    // private System.Void set_TrackablesParent(UnityEngine.Transform value)
    // Offset: 0x53D07B4
    void set_TrackablesParent(::UnityEngine::Transform* value);
    // public System.Void add_TrackablesParentTransformChanged(System.Action`1<Unity.XR.CoreUtils.ARTrackablesParentTransformChangedEventArgs> value)
    // Offset: 0x53D07BC
    void add_TrackablesParentTransformChanged(::System::Action_1<::Unity::XR::CoreUtils::ARTrackablesParentTransformChangedEventArgs>* value);
    // public System.Void remove_TrackablesParentTransformChanged(System.Action`1<Unity.XR.CoreUtils.ARTrackablesParentTransformChangedEventArgs> value)
    // Offset: 0x53D086C
    void remove_TrackablesParentTransformChanged(::System::Action_1<::Unity::XR::CoreUtils::ARTrackablesParentTransformChangedEventArgs>* value);
    // public UnityEngine.GameObject get_Origin()
    // Offset: 0x53D091C
    ::UnityEngine::GameObject* get_Origin();
    // public System.Void set_Origin(UnityEngine.GameObject value)
    // Offset: 0x53D0924
    void set_Origin(::UnityEngine::GameObject* value);
    // public UnityEngine.GameObject get_CameraFloorOffsetObject()
    // Offset: 0x53D092C
    ::UnityEngine::GameObject* get_CameraFloorOffsetObject();
    // public System.Void set_CameraFloorOffsetObject(UnityEngine.GameObject value)
    // Offset: 0x53D0934
    void set_CameraFloorOffsetObject(::UnityEngine::GameObject* value);
    // public Unity.XR.CoreUtils.XROrigin/TrackingOriginMode get_RequestedTrackingOriginMode()
    // Offset: 0x53D09DC
    ::Unity::XR::CoreUtils::XROrigin::TrackingOriginMode get_RequestedTrackingOriginMode();
    // public System.Void set_RequestedTrackingOriginMode(Unity.XR.CoreUtils.XROrigin/TrackingOriginMode value)
    // Offset: 0x53D09E4
    void set_RequestedTrackingOriginMode(::Unity::XR::CoreUtils::XROrigin::TrackingOriginMode value);
    // public System.Single get_CameraYOffset()
    // Offset: 0x53D0A88
    float get_CameraYOffset();
    // public System.Void set_CameraYOffset(System.Single value)
    // Offset: 0x53D0A90
    void set_CameraYOffset(float value);
    // public UnityEngine.XR.TrackingOriginModeFlags get_CurrentTrackingOriginMode()
    // Offset: 0x53D0A98
    ::UnityEngine::XR::TrackingOriginModeFlags get_CurrentTrackingOriginMode();
    // private System.Void set_CurrentTrackingOriginMode(UnityEngine.XR.TrackingOriginModeFlags value)
    // Offset: 0x53D0AA0
    void set_CurrentTrackingOriginMode(::UnityEngine::XR::TrackingOriginModeFlags value);
    // public UnityEngine.Vector3 get_OriginInCameraSpacePos()
    // Offset: 0x53D0AA8
    ::UnityEngine::Vector3 get_OriginInCameraSpacePos();
    // public UnityEngine.Vector3 get_CameraInOriginSpacePos()
    // Offset: 0x53D0AFC
    ::UnityEngine::Vector3 get_CameraInOriginSpacePos();
    // public System.Single get_CameraInOriginSpaceHeight()
    // Offset: 0x53D0B50
    float get_CameraInOriginSpaceHeight();
    // private System.Void MoveOffsetHeight()
    // Offset: 0x53D0950
    void MoveOffsetHeight();
    // private System.Void MoveOffsetHeight(System.Single y)
    // Offset: 0x53D0B64
    void MoveOffsetHeight(float y);
    // private System.Void TryInitializeCamera()
    // Offset: 0x53D09EC
    void TryInitializeCamera();
    // private System.Boolean SetupCamera()
    // Offset: 0x53D0C18
    bool SetupCamera();
    // private System.Boolean SetupCamera(UnityEngine.XR.XRInputSubsystem inputSubsystem)
    // Offset: 0x53D0F48
    bool SetupCamera(::UnityEngine::XR::XRInputSubsystem* inputSubsystem);
    // private System.Void OnInputSubsystemTrackingOriginUpdated(UnityEngine.XR.XRInputSubsystem inputSubsystem)
    // Offset: 0x53D113C
    void OnInputSubsystemTrackingOriginUpdated(::UnityEngine::XR::XRInputSubsystem* inputSubsystem);
    // private System.Collections.IEnumerator RepeatInitializeCamera()
    // Offset: 0x53D0EDC
    ::System::Collections::IEnumerator* RepeatInitializeCamera();
    // public System.Boolean RotateAroundCameraUsingOriginUp(System.Single angleDegrees)
    // Offset: 0x53D1190
    bool RotateAroundCameraUsingOriginUp(float angleDegrees);
    // public System.Boolean RotateAroundCameraPosition(UnityEngine.Vector3 vector, System.Single angleDegrees)
    // Offset: 0x53D11D4
    bool RotateAroundCameraPosition(::UnityEngine::Vector3 vector, float angleDegrees);
    // public System.Boolean MatchOriginUp(UnityEngine.Vector3 destinationUp)
    // Offset: 0x53D12E8
    bool MatchOriginUp(::UnityEngine::Vector3 destinationUp);
    // public System.Boolean MatchOriginUpCameraForward(UnityEngine.Vector3 destinationUp, UnityEngine.Vector3 destinationForward)
    // Offset: 0x53D14B4
    bool MatchOriginUpCameraForward(::UnityEngine::Vector3 destinationUp, ::UnityEngine::Vector3 destinationForward);
    // public System.Boolean MatchOriginUpOriginForward(UnityEngine.Vector3 destinationUp, UnityEngine.Vector3 destinationForward)
    // Offset: 0x53D1714
    bool MatchOriginUpOriginForward(::UnityEngine::Vector3 destinationUp, ::UnityEngine::Vector3 destinationForward);
    // public System.Boolean MoveCameraToWorldLocation(UnityEngine.Vector3 desiredWorldLocation)
    // Offset: 0x53D182C
    bool MoveCameraToWorldLocation(::UnityEngine::Vector3 desiredWorldLocation);
    // protected System.Void Awake()
    // Offset: 0x53D195C
    void Awake();
    // private UnityEngine.Pose GetCameraOriginPose()
    // Offset: 0x53D1DA8
    ::UnityEngine::Pose GetCameraOriginPose();
    // protected System.Void OnEnable()
    // Offset: 0x53D1EC4
    void OnEnable();
    // protected System.Void OnDisable()
    // Offset: 0x53D1F68
    void OnDisable();
    // private System.Void OnBeforeRender()
    // Offset: 0x53D200C
    void OnBeforeRender();
    // protected System.Void OnValidate()
    // Offset: 0x53D2130
    void OnValidate();
    // protected System.Void Start()
    // Offset: 0x53D2424
    void Start();
    // protected System.Void OnDestroy()
    // Offset: 0x53D2428
    void OnDestroy();
    // public System.Void .ctor()
    // Offset: 0x53D25E4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XROrigin* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XROrigin*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x53D25F8
    static void _cctor();
    // private System.Boolean <OnValidate>g__IsModeStale|60_0()
    // Offset: 0x53D2234
    bool $OnValidate$g__IsModeStale_60_0();
  }; // Unity.XR.CoreUtils.XROrigin
  #pragma pack(pop)
  static check_size<sizeof(XROrigin), 85 + sizeof(bool)> __Unity_XR_CoreUtils_XROriginSizeCheck;
  static_assert(sizeof(XROrigin) == 0x56);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Unity::XR::CoreUtils::XROrigin::TrackingOriginMode, "Unity.XR.CoreUtils", "XROrigin/TrackingOriginMode");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Unity::XR::CoreUtils::XROrigin::get_Camera
// Il2CppName: get_Camera
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Camera* (Unity::XR::CoreUtils::XROrigin::*)()>(&Unity::XR::CoreUtils::XROrigin::get_Camera)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::CoreUtils::XROrigin*), "get_Camera", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::CoreUtils::XROrigin::set_Camera
// Il2CppName: set_Camera
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::XR::CoreUtils::XROrigin::*)(::UnityEngine::Camera*)>(&Unity::XR::CoreUtils::XROrigin::set_Camera)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::CoreUtils::XROrigin*), "set_Camera", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Unity::XR::CoreUtils::XROrigin::get_TrackablesParent
// Il2CppName: get_TrackablesParent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (Unity::XR::CoreUtils::XROrigin::*)()>(&Unity::XR::CoreUtils::XROrigin::get_TrackablesParent)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::CoreUtils::XROrigin*), "get_TrackablesParent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::CoreUtils::XROrigin::set_TrackablesParent
// Il2CppName: set_TrackablesParent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::XR::CoreUtils::XROrigin::*)(::UnityEngine::Transform*)>(&Unity::XR::CoreUtils::XROrigin::set_TrackablesParent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::CoreUtils::XROrigin*), "set_TrackablesParent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Unity::XR::CoreUtils::XROrigin::add_TrackablesParentTransformChanged
// Il2CppName: add_TrackablesParentTransformChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::XR::CoreUtils::XROrigin::*)(::System::Action_1<::Unity::XR::CoreUtils::ARTrackablesParentTransformChangedEventArgs>*)>(&Unity::XR::CoreUtils::XROrigin::add_TrackablesParentTransformChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Unity.XR.CoreUtils", "ARTrackablesParentTransformChangedEventArgs")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::CoreUtils::XROrigin*), "add_TrackablesParentTransformChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Unity::XR::CoreUtils::XROrigin::remove_TrackablesParentTransformChanged
// Il2CppName: remove_TrackablesParentTransformChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::XR::CoreUtils::XROrigin::*)(::System::Action_1<::Unity::XR::CoreUtils::ARTrackablesParentTransformChangedEventArgs>*)>(&Unity::XR::CoreUtils::XROrigin::remove_TrackablesParentTransformChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Unity.XR.CoreUtils", "ARTrackablesParentTransformChangedEventArgs")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::CoreUtils::XROrigin*), "remove_TrackablesParentTransformChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Unity::XR::CoreUtils::XROrigin::get_Origin
// Il2CppName: get_Origin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (Unity::XR::CoreUtils::XROrigin::*)()>(&Unity::XR::CoreUtils::XROrigin::get_Origin)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::CoreUtils::XROrigin*), "get_Origin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::CoreUtils::XROrigin::set_Origin
// Il2CppName: set_Origin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::XR::CoreUtils::XROrigin::*)(::UnityEngine::GameObject*)>(&Unity::XR::CoreUtils::XROrigin::set_Origin)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::CoreUtils::XROrigin*), "set_Origin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Unity::XR::CoreUtils::XROrigin::get_CameraFloorOffsetObject
// Il2CppName: get_CameraFloorOffsetObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (Unity::XR::CoreUtils::XROrigin::*)()>(&Unity::XR::CoreUtils::XROrigin::get_CameraFloorOffsetObject)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::CoreUtils::XROrigin*), "get_CameraFloorOffsetObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::CoreUtils::XROrigin::set_CameraFloorOffsetObject
// Il2CppName: set_CameraFloorOffsetObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::XR::CoreUtils::XROrigin::*)(::UnityEngine::GameObject*)>(&Unity::XR::CoreUtils::XROrigin::set_CameraFloorOffsetObject)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::CoreUtils::XROrigin*), "set_CameraFloorOffsetObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Unity::XR::CoreUtils::XROrigin::get_RequestedTrackingOriginMode
// Il2CppName: get_RequestedTrackingOriginMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Unity::XR::CoreUtils::XROrigin::TrackingOriginMode (Unity::XR::CoreUtils::XROrigin::*)()>(&Unity::XR::CoreUtils::XROrigin::get_RequestedTrackingOriginMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::CoreUtils::XROrigin*), "get_RequestedTrackingOriginMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::CoreUtils::XROrigin::set_RequestedTrackingOriginMode
// Il2CppName: set_RequestedTrackingOriginMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::XR::CoreUtils::XROrigin::*)(::Unity::XR::CoreUtils::XROrigin::TrackingOriginMode)>(&Unity::XR::CoreUtils::XROrigin::set_RequestedTrackingOriginMode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Unity.XR.CoreUtils", "XROrigin/TrackingOriginMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::CoreUtils::XROrigin*), "set_RequestedTrackingOriginMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Unity::XR::CoreUtils::XROrigin::get_CameraYOffset
// Il2CppName: get_CameraYOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Unity::XR::CoreUtils::XROrigin::*)()>(&Unity::XR::CoreUtils::XROrigin::get_CameraYOffset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::CoreUtils::XROrigin*), "get_CameraYOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::CoreUtils::XROrigin::set_CameraYOffset
// Il2CppName: set_CameraYOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::XR::CoreUtils::XROrigin::*)(float)>(&Unity::XR::CoreUtils::XROrigin::set_CameraYOffset)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::CoreUtils::XROrigin*), "set_CameraYOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Unity::XR::CoreUtils::XROrigin::get_CurrentTrackingOriginMode
// Il2CppName: get_CurrentTrackingOriginMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::TrackingOriginModeFlags (Unity::XR::CoreUtils::XROrigin::*)()>(&Unity::XR::CoreUtils::XROrigin::get_CurrentTrackingOriginMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::CoreUtils::XROrigin*), "get_CurrentTrackingOriginMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::CoreUtils::XROrigin::set_CurrentTrackingOriginMode
// Il2CppName: set_CurrentTrackingOriginMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::XR::CoreUtils::XROrigin::*)(::UnityEngine::XR::TrackingOriginModeFlags)>(&Unity::XR::CoreUtils::XROrigin::set_CurrentTrackingOriginMode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR", "TrackingOriginModeFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::CoreUtils::XROrigin*), "set_CurrentTrackingOriginMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Unity::XR::CoreUtils::XROrigin::get_OriginInCameraSpacePos
// Il2CppName: get_OriginInCameraSpacePos
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (Unity::XR::CoreUtils::XROrigin::*)()>(&Unity::XR::CoreUtils::XROrigin::get_OriginInCameraSpacePos)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::CoreUtils::XROrigin*), "get_OriginInCameraSpacePos", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::CoreUtils::XROrigin::get_CameraInOriginSpacePos
// Il2CppName: get_CameraInOriginSpacePos
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (Unity::XR::CoreUtils::XROrigin::*)()>(&Unity::XR::CoreUtils::XROrigin::get_CameraInOriginSpacePos)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::CoreUtils::XROrigin*), "get_CameraInOriginSpacePos", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::CoreUtils::XROrigin::get_CameraInOriginSpaceHeight
// Il2CppName: get_CameraInOriginSpaceHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Unity::XR::CoreUtils::XROrigin::*)()>(&Unity::XR::CoreUtils::XROrigin::get_CameraInOriginSpaceHeight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::CoreUtils::XROrigin*), "get_CameraInOriginSpaceHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::CoreUtils::XROrigin::MoveOffsetHeight
// Il2CppName: MoveOffsetHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::XR::CoreUtils::XROrigin::*)()>(&Unity::XR::CoreUtils::XROrigin::MoveOffsetHeight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::CoreUtils::XROrigin*), "MoveOffsetHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::CoreUtils::XROrigin::MoveOffsetHeight
// Il2CppName: MoveOffsetHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::XR::CoreUtils::XROrigin::*)(float)>(&Unity::XR::CoreUtils::XROrigin::MoveOffsetHeight)> {
  static const MethodInfo* get() {
    static auto* y = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::CoreUtils::XROrigin*), "MoveOffsetHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{y});
  }
};
// Writing MetadataGetter for method: Unity::XR::CoreUtils::XROrigin::TryInitializeCamera
// Il2CppName: TryInitializeCamera
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::XR::CoreUtils::XROrigin::*)()>(&Unity::XR::CoreUtils::XROrigin::TryInitializeCamera)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::CoreUtils::XROrigin*), "TryInitializeCamera", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::CoreUtils::XROrigin::SetupCamera
// Il2CppName: SetupCamera
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Unity::XR::CoreUtils::XROrigin::*)()>(&Unity::XR::CoreUtils::XROrigin::SetupCamera)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::CoreUtils::XROrigin*), "SetupCamera", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::CoreUtils::XROrigin::SetupCamera
// Il2CppName: SetupCamera
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Unity::XR::CoreUtils::XROrigin::*)(::UnityEngine::XR::XRInputSubsystem*)>(&Unity::XR::CoreUtils::XROrigin::SetupCamera)> {
  static const MethodInfo* get() {
    static auto* inputSubsystem = &::il2cpp_utils::GetClassFromName("UnityEngine.XR", "XRInputSubsystem")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::CoreUtils::XROrigin*), "SetupCamera", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{inputSubsystem});
  }
};
// Writing MetadataGetter for method: Unity::XR::CoreUtils::XROrigin::OnInputSubsystemTrackingOriginUpdated
// Il2CppName: OnInputSubsystemTrackingOriginUpdated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::XR::CoreUtils::XROrigin::*)(::UnityEngine::XR::XRInputSubsystem*)>(&Unity::XR::CoreUtils::XROrigin::OnInputSubsystemTrackingOriginUpdated)> {
  static const MethodInfo* get() {
    static auto* inputSubsystem = &::il2cpp_utils::GetClassFromName("UnityEngine.XR", "XRInputSubsystem")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::CoreUtils::XROrigin*), "OnInputSubsystemTrackingOriginUpdated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{inputSubsystem});
  }
};
// Writing MetadataGetter for method: Unity::XR::CoreUtils::XROrigin::RepeatInitializeCamera
// Il2CppName: RepeatInitializeCamera
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (Unity::XR::CoreUtils::XROrigin::*)()>(&Unity::XR::CoreUtils::XROrigin::RepeatInitializeCamera)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::CoreUtils::XROrigin*), "RepeatInitializeCamera", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::CoreUtils::XROrigin::RotateAroundCameraUsingOriginUp
// Il2CppName: RotateAroundCameraUsingOriginUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Unity::XR::CoreUtils::XROrigin::*)(float)>(&Unity::XR::CoreUtils::XROrigin::RotateAroundCameraUsingOriginUp)> {
  static const MethodInfo* get() {
    static auto* angleDegrees = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::CoreUtils::XROrigin*), "RotateAroundCameraUsingOriginUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{angleDegrees});
  }
};
// Writing MetadataGetter for method: Unity::XR::CoreUtils::XROrigin::RotateAroundCameraPosition
// Il2CppName: RotateAroundCameraPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Unity::XR::CoreUtils::XROrigin::*)(::UnityEngine::Vector3, float)>(&Unity::XR::CoreUtils::XROrigin::RotateAroundCameraPosition)> {
  static const MethodInfo* get() {
    static auto* vector = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* angleDegrees = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::CoreUtils::XROrigin*), "RotateAroundCameraPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{vector, angleDegrees});
  }
};
// Writing MetadataGetter for method: Unity::XR::CoreUtils::XROrigin::MatchOriginUp
// Il2CppName: MatchOriginUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Unity::XR::CoreUtils::XROrigin::*)(::UnityEngine::Vector3)>(&Unity::XR::CoreUtils::XROrigin::MatchOriginUp)> {
  static const MethodInfo* get() {
    static auto* destinationUp = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::CoreUtils::XROrigin*), "MatchOriginUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{destinationUp});
  }
};
// Writing MetadataGetter for method: Unity::XR::CoreUtils::XROrigin::MatchOriginUpCameraForward
// Il2CppName: MatchOriginUpCameraForward
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Unity::XR::CoreUtils::XROrigin::*)(::UnityEngine::Vector3, ::UnityEngine::Vector3)>(&Unity::XR::CoreUtils::XROrigin::MatchOriginUpCameraForward)> {
  static const MethodInfo* get() {
    static auto* destinationUp = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* destinationForward = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::CoreUtils::XROrigin*), "MatchOriginUpCameraForward", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{destinationUp, destinationForward});
  }
};
// Writing MetadataGetter for method: Unity::XR::CoreUtils::XROrigin::MatchOriginUpOriginForward
// Il2CppName: MatchOriginUpOriginForward
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Unity::XR::CoreUtils::XROrigin::*)(::UnityEngine::Vector3, ::UnityEngine::Vector3)>(&Unity::XR::CoreUtils::XROrigin::MatchOriginUpOriginForward)> {
  static const MethodInfo* get() {
    static auto* destinationUp = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* destinationForward = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::CoreUtils::XROrigin*), "MatchOriginUpOriginForward", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{destinationUp, destinationForward});
  }
};
// Writing MetadataGetter for method: Unity::XR::CoreUtils::XROrigin::MoveCameraToWorldLocation
// Il2CppName: MoveCameraToWorldLocation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Unity::XR::CoreUtils::XROrigin::*)(::UnityEngine::Vector3)>(&Unity::XR::CoreUtils::XROrigin::MoveCameraToWorldLocation)> {
  static const MethodInfo* get() {
    static auto* desiredWorldLocation = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::CoreUtils::XROrigin*), "MoveCameraToWorldLocation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{desiredWorldLocation});
  }
};
// Writing MetadataGetter for method: Unity::XR::CoreUtils::XROrigin::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::XR::CoreUtils::XROrigin::*)()>(&Unity::XR::CoreUtils::XROrigin::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::CoreUtils::XROrigin*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::CoreUtils::XROrigin::GetCameraOriginPose
// Il2CppName: GetCameraOriginPose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Pose (Unity::XR::CoreUtils::XROrigin::*)()>(&Unity::XR::CoreUtils::XROrigin::GetCameraOriginPose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::CoreUtils::XROrigin*), "GetCameraOriginPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::CoreUtils::XROrigin::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::XR::CoreUtils::XROrigin::*)()>(&Unity::XR::CoreUtils::XROrigin::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::CoreUtils::XROrigin*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::CoreUtils::XROrigin::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::XR::CoreUtils::XROrigin::*)()>(&Unity::XR::CoreUtils::XROrigin::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::CoreUtils::XROrigin*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::CoreUtils::XROrigin::OnBeforeRender
// Il2CppName: OnBeforeRender
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::XR::CoreUtils::XROrigin::*)()>(&Unity::XR::CoreUtils::XROrigin::OnBeforeRender)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::CoreUtils::XROrigin*), "OnBeforeRender", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::CoreUtils::XROrigin::OnValidate
// Il2CppName: OnValidate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::XR::CoreUtils::XROrigin::*)()>(&Unity::XR::CoreUtils::XROrigin::OnValidate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::CoreUtils::XROrigin*), "OnValidate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::CoreUtils::XROrigin::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::XR::CoreUtils::XROrigin::*)()>(&Unity::XR::CoreUtils::XROrigin::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::CoreUtils::XROrigin*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::CoreUtils::XROrigin::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::XR::CoreUtils::XROrigin::*)()>(&Unity::XR::CoreUtils::XROrigin::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::CoreUtils::XROrigin*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::CoreUtils::XROrigin::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Unity::XR::CoreUtils::XROrigin::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Unity::XR::CoreUtils::XROrigin::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::CoreUtils::XROrigin*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::CoreUtils::XROrigin::$OnValidate$g__IsModeStale_60_0
// Il2CppName: <OnValidate>g__IsModeStale|60_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Unity::XR::CoreUtils::XROrigin::*)()>(&Unity::XR::CoreUtils::XROrigin::$OnValidate$g__IsModeStale_60_0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::CoreUtils::XROrigin*), "<OnValidate>g__IsModeStale|60_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
