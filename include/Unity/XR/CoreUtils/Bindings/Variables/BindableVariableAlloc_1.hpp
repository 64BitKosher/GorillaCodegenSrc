// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Unity.XR.CoreUtils.Bindings.Variables.BindableVariableBase`1
#include "Unity/XR/CoreUtils/Bindings/Variables/BindableVariableBase_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`3<T1, T2, TResult>
  template<typename T1, typename T2, typename TResult>
  class Func_3;
}
// Completed forward declares
// Type namespace: Unity.XR.CoreUtils.Bindings.Variables
namespace Unity::XR::CoreUtils::Bindings::Variables {
  // Forward declaring type: BindableVariableAlloc`1<T>
  template<typename T>
  class BindableVariableAlloc_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::Unity::XR::CoreUtils::Bindings::Variables::BindableVariableAlloc_1, "Unity.XR.CoreUtils.Bindings.Variables", "BindableVariableAlloc`1");
// Type namespace: Unity.XR.CoreUtils.Bindings.Variables
namespace Unity::XR::CoreUtils::Bindings::Variables {
  // WARNING Size may be invalid!
  // Autogenerated type: Unity.XR.CoreUtils.Bindings.Variables.BindableVariableAlloc`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename T>
  class BindableVariableAlloc_1 : public ::Unity::XR::CoreUtils::Bindings::Variables::BindableVariableBase_1<T> {
    public:
    // public System.Void .ctor(T initialValue, System.Boolean checkEquality, System.Func`3<T,T,System.Boolean> equalityMethod, System.Boolean startInitialized)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: Unity.XR.CoreUtils.Bindings.Variables.BindableVariableBase`1
    // Base method: System.Void BindableVariableBase_1::.ctor(T initialValue, System.Boolean checkEquality, System.Func`3<T,T,System.Boolean> equalityMethod, System.Boolean startInitialized)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BindableVariableAlloc_1<T>* New_ctor(T initialValue, bool checkEquality, ::System::Func_3<T, T, bool>* equalityMethod, bool startInitialized) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::Bindings::Variables::BindableVariableAlloc_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BindableVariableAlloc_1<T>*, creationType>(initialValue, checkEquality, equalityMethod, startInitialized)));
    }
  }; // Unity.XR.CoreUtils.Bindings.Variables.BindableVariableAlloc`1
  // Could not write size check! Type: Unity.XR.CoreUtils.Bindings.Variables.BindableVariableAlloc`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
