// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Unity::XR::CoreUtils::Datums
namespace Unity::XR::CoreUtils::Datums {
  // Forward declaring type: Datum`1<T>
  template<typename T>
  class Datum_1;
}
// Completed forward declares
// Type namespace: Unity.XR.CoreUtils.Datums
namespace Unity::XR::CoreUtils::Datums {
  // Forward declaring type: DatumProperty`2<TValue, TDatum>
  template<typename TValue, typename TDatum>
  class DatumProperty_2;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::Unity::XR::CoreUtils::Datums::DatumProperty_2, "Unity.XR.CoreUtils.Datums", "DatumProperty`2");
// Type namespace: Unity.XR.CoreUtils.Datums
namespace Unity::XR::CoreUtils::Datums {
  // WARNING Size may be invalid!
  // Autogenerated type: Unity.XR.CoreUtils.Datums.DatumProperty`2
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename TValue, typename TDatum>
  class DatumProperty_2 : public ::Il2CppObject {
    public:
    public:
    // private System.Boolean m_UseConstant
    // Size: 0x1
    // Offset: 0x0
    bool m_UseConstant;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private TValue m_ConstantValue
    // Size: 0xFFFFFFFF
    // Offset: 0x0
    TValue m_ConstantValue;
    // private TDatum m_Variable
    // Size: 0xFFFFFFFF
    // Offset: 0x0
    TDatum m_Variable;
    public:
    // Autogenerated instance field getter
    // Get instance field: private System.Boolean m_UseConstant
    [[deprecated("Use field access instead!")]] bool& dyn_m_UseConstant() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::Datums::DatumProperty_2::dyn_m_UseConstant");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UseConstant"))->offset;
      return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private TValue m_ConstantValue
    [[deprecated("Use field access instead!")]] TValue& dyn_m_ConstantValue() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::Datums::DatumProperty_2::dyn_m_ConstantValue");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ConstantValue"))->offset;
      return *reinterpret_cast<TValue*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private TDatum m_Variable
    [[deprecated("Use field access instead!")]] TDatum& dyn_m_Variable() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::Datums::DatumProperty_2::dyn_m_Variable");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Variable"))->offset;
      return *reinterpret_cast<TDatum*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // protected System.Void .ctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DatumProperty_2<TValue, TDatum>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::Datums::DatumProperty_2::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DatumProperty_2<TValue, TDatum>*, creationType>()));
    }
    // protected System.Void .ctor(TValue value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DatumProperty_2<TValue, TDatum>* New_ctor(TValue value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::Datums::DatumProperty_2::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DatumProperty_2<TValue, TDatum>*, creationType>(value)));
    }
    // protected System.Void .ctor(TDatum datum)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DatumProperty_2<TValue, TDatum>* New_ctor(TDatum datum) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::Datums::DatumProperty_2::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DatumProperty_2<TValue, TDatum>*, creationType>(datum)));
    }
    // public TValue get_Value()
    // Offset: 0xFFFFFFFFFFFFFFFF
    TValue get_Value() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::Datums::DatumProperty_2::get_Value");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<TValue, false>(this, ___internal__method);
    }
    // public System.Void set_Value(TValue value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_Value(TValue value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::Datums::DatumProperty_2::set_Value");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // protected Unity.XR.CoreUtils.Datums.Datum`1<TValue> get_Datum()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Unity::XR::CoreUtils::Datums::Datum_1<TValue>* get_Datum() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::Datums::DatumProperty_2::get_Datum");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Datum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::Unity::XR::CoreUtils::Datums::Datum_1<TValue>*, false>(this, ___internal__method);
    }
  }; // Unity.XR.CoreUtils.Datums.DatumProperty`2
  // Could not write size check! Type: Unity.XR.CoreUtils.Datums.DatumProperty`2 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
