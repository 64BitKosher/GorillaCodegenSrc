// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Unity.Burst.BurstString
#include "Unity/Burst/BurstString.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Unity::Burst::BurstString::NumberFormatKind, "Unity.Burst", "BurstString/NumberFormatKind");
// Type namespace: Unity.Burst
namespace Unity::Burst {
  // Size: 0x1
  #pragma pack(push, 1)
  // Autogenerated type: Unity.Burst.BurstString/NumberFormatKind
  // [TokenAttribute] Offset: FFFFFFFF
  struct BurstString::NumberFormatKind/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Byte value__
    // Size: 0x1
    // Offset: 0x0
    uint8_t value;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    public:
    // Creating value type constructor for type: NumberFormatKind
    constexpr NumberFormatKind(uint8_t value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator uint8_t
    constexpr operator uint8_t() const noexcept {
      return value;
    }
    // static field const value: static public Unity.Burst.BurstString/NumberFormatKind General
    static constexpr const uint8_t General = 0u;
    // Get static field: static public Unity.Burst.BurstString/NumberFormatKind General
    static ::Unity::Burst::BurstString::NumberFormatKind _get_General();
    // Set static field: static public Unity.Burst.BurstString/NumberFormatKind General
    static void _set_General(::Unity::Burst::BurstString::NumberFormatKind value);
    // static field const value: static public Unity.Burst.BurstString/NumberFormatKind Decimal
    static constexpr const uint8_t Decimal = 1u;
    // Get static field: static public Unity.Burst.BurstString/NumberFormatKind Decimal
    static ::Unity::Burst::BurstString::NumberFormatKind _get_Decimal();
    // Set static field: static public Unity.Burst.BurstString/NumberFormatKind Decimal
    static void _set_Decimal(::Unity::Burst::BurstString::NumberFormatKind value);
    // static field const value: static public Unity.Burst.BurstString/NumberFormatKind DecimalForceSigned
    static constexpr const uint8_t DecimalForceSigned = 2u;
    // Get static field: static public Unity.Burst.BurstString/NumberFormatKind DecimalForceSigned
    static ::Unity::Burst::BurstString::NumberFormatKind _get_DecimalForceSigned();
    // Set static field: static public Unity.Burst.BurstString/NumberFormatKind DecimalForceSigned
    static void _set_DecimalForceSigned(::Unity::Burst::BurstString::NumberFormatKind value);
    // static field const value: static public Unity.Burst.BurstString/NumberFormatKind Hexadecimal
    static constexpr const uint8_t Hexadecimal = 3u;
    // Get static field: static public Unity.Burst.BurstString/NumberFormatKind Hexadecimal
    static ::Unity::Burst::BurstString::NumberFormatKind _get_Hexadecimal();
    // Set static field: static public Unity.Burst.BurstString/NumberFormatKind Hexadecimal
    static void _set_Hexadecimal(::Unity::Burst::BurstString::NumberFormatKind value);
    // Get instance field reference: public System.Byte value__
    [[deprecated("Use field access instead!")]] uint8_t& dyn_value__();
  }; // Unity.Burst.BurstString/NumberFormatKind
  #pragma pack(pop)
  static check_size<sizeof(BurstString::NumberFormatKind), 0 + sizeof(uint8_t)> __Unity_Burst_BurstString_NumberFormatKindSizeCheck;
  static_assert(sizeof(BurstString::NumberFormatKind) == 0x1);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
