// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include <stdint.h>
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: Unity.Burst
namespace Unity::Burst {
  // Forward declaring type: SharedStatic`1<T>
  template<typename T>
  struct SharedStatic_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_STRUCT(::Unity::Burst::SharedStatic_1, "Unity.Burst", "SharedStatic`1");
// Type namespace: Unity.Burst
namespace Unity::Burst {
  // WARNING Size may be invalid!
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: Unity.Burst.SharedStatic`1
  // [TokenAttribute] Offset: FFFFFFFF
  // [IsReadOnlyAttribute] Offset: FFFFFFFF
  template<typename T>
  struct SharedStatic_1/*, public ::System::ValueType*/ {
    public:
    public:
    // private readonly System.Void* _buffer
    // Size: 0x8
    // Offset: 0x0
    void* buffer;
    // Field size check
    static_assert(sizeof(void*) == 0x8);
    public:
    // Creating value type constructor for type: SharedStatic_1
    constexpr SharedStatic_1(void* buffer_ = {}) noexcept : buffer{buffer_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating conversion operator: operator void*
    constexpr operator void*() const noexcept {
      return buffer;
    }
    // Autogenerated instance field getter
    // Get instance field: private readonly System.Void* _buffer
    [[deprecated("Use field access instead!")]] void*& dyn__buffer() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Burst::SharedStatic_1::dyn__buffer");
      auto ___internal__instance = *this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buffer"))->offset;
      return *reinterpret_cast<void**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // private System.Void .ctor(System.Void* buffer)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // ABORTED: conflicts with another method.  SharedStatic_1(void* buffer)
    // public T get_Data()
    // Offset: 0xFFFFFFFFFFFFFFFF
    T get_Data() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Burst::SharedStatic_1::get_Data");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(this, ___internal__method);
    }
    // static public Unity.Burst.SharedStatic`1<T> GetOrCreateUnsafe(System.UInt32 alignment, System.Int64 hashCode, System.Int64 subHashCode)
    // Offset: 0xFFFFFFFFFFFFFFFF
    static ::Unity::Burst::SharedStatic_1<T> GetOrCreateUnsafe(uint alignment, int64_t hashCode, int64_t subHashCode) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Burst::SharedStatic_1::GetOrCreateUnsafe");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<SharedStatic_1<T>>::get(), "GetOrCreateUnsafe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alignment), ::il2cpp_utils::ExtractType(hashCode), ::il2cpp_utils::ExtractType(subHashCode)})));
      return ::il2cpp_utils::RunMethodRethrow<::Unity::Burst::SharedStatic_1<T>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, alignment, hashCode, subHashCode);
    }
  }; // Unity.Burst.SharedStatic`1
  // Could not write size check! Type: Unity.Burst.SharedStatic`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
