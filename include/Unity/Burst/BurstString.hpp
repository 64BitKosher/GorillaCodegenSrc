// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Unity::Burst
namespace Unity::Burst {
}
// Completed forward declares
// Type namespace: Unity.Burst
namespace Unity::Burst {
  // Forward declaring type: BurstString
  class BurstString;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Unity::Burst::BurstString);
DEFINE_IL2CPP_ARG_TYPE(::Unity::Burst::BurstString*, "Unity.Burst", "BurstString");
// Type namespace: Unity.Burst
namespace Unity::Burst {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Unity.Burst.BurstString
  // [TokenAttribute] Offset: FFFFFFFF
  class BurstString : public ::Il2CppObject {
    public:
    // Nested type: ::Unity::Burst::BurstString::PreserveAttribute
    class PreserveAttribute;
    // Nested type: ::Unity::Burst::BurstString::NumberBufferKind
    struct NumberBufferKind;
    // Nested type: ::Unity::Burst::BurstString::NumberBuffer
    struct NumberBuffer;
    // Nested type: ::Unity::Burst::BurstString::NumberFormatKind
    struct NumberFormatKind;
    // Nested type: ::Unity::Burst::BurstString::FormatOptions
    struct FormatOptions;
    // Nested type: ::Unity::Burst::BurstString::tBigInt
    struct tBigInt;
    // Nested type: ::Unity::Burst::BurstString::CutoffMode
    struct CutoffMode;
    // Nested type: ::Unity::Burst::BurstString::tFloatUnion32
    struct tFloatUnion32;
    // Nested type: ::Unity::Burst::BurstString::tFloatUnion64
    struct tFloatUnion64;
    // Get static field: static private readonly System.Char[] SplitByColon
    static ::ArrayW<::Il2CppChar> _get_SplitByColon();
    // Set static field: static private readonly System.Char[] SplitByColon
    static void _set_SplitByColon(::ArrayW<::Il2CppChar> value);
    // Get static field: static private readonly System.Byte[] logTable
    static ::ArrayW<uint8_t> _get_logTable();
    // Set static field: static private readonly System.Byte[] logTable
    static void _set_logTable(::ArrayW<uint8_t> value);
    // Get static field: static private readonly System.UInt32[] g_PowerOf10_U32
    static ::ArrayW<uint> _get_g_PowerOf10_U32();
    // Set static field: static private readonly System.UInt32[] g_PowerOf10_U32
    static void _set_g_PowerOf10_U32(::ArrayW<uint> value);
    // Get static field: static private readonly System.Byte[] InfinityString
    static ::ArrayW<uint8_t> _get_InfinityString();
    // Set static field: static private readonly System.Byte[] InfinityString
    static void _set_InfinityString(::ArrayW<uint8_t> value);
    // Get static field: static private readonly System.Byte[] NanString
    static ::ArrayW<uint8_t> _get_NanString();
    // Set static field: static private readonly System.Byte[] NanString
    static void _set_NanString(::ArrayW<uint8_t> value);
    // static public System.Void CopyFixedString(System.Byte* dest, System.Int32 destLength, System.Byte* src, System.Int32 srcLength)
    // Offset: 0x5081BA8
    static void CopyFixedString(uint8_t* dest, int destLength, uint8_t* src, int srcLength);
    // static public System.Void Format(System.Byte* dest, ref System.Int32 destIndex, System.Int32 destLength, System.Byte* src, System.Int32 srcLength, System.Int32 formatOptionsRaw)
    // Offset: 0x5081BCC
    static void Format(uint8_t* dest, ByRef<int> destIndex, int destLength, uint8_t* src, int srcLength, int formatOptionsRaw);
    // static public System.Void Format(System.Byte* dest, ref System.Int32 destIndex, System.Int32 destLength, System.Single value, System.Int32 formatOptionsRaw)
    // Offset: 0x5081E10
    static void Format(uint8_t* dest, ByRef<int> destIndex, int destLength, float value, int formatOptionsRaw);
    // static public System.Void Format(System.Byte* dest, ref System.Int32 destIndex, System.Int32 destLength, System.Double value, System.Int32 formatOptionsRaw)
    // Offset: 0x508211C
    static void Format(uint8_t* dest, ByRef<int> destIndex, int destLength, double value, int formatOptionsRaw);
    // static public System.Void Format(System.Byte* dest, ref System.Int32 destIndex, System.Int32 destLength, System.Boolean value, System.Int32 formatOptionsRaw)
    // Offset: 0x5082424
    static void Format(uint8_t* dest, ByRef<int> destIndex, int destLength, bool value, int formatOptionsRaw);
    // static public System.Void Format(System.Byte* dest, ref System.Int32 destIndex, System.Int32 destLength, System.Char value, System.Int32 formatOptionsRaw)
    // Offset: 0x50825F4
    static void Format(uint8_t* dest, ByRef<int> destIndex, int destLength, ::Il2CppChar value, int formatOptionsRaw);
    // static public System.Void Format(System.Byte* dest, ref System.Int32 destIndex, System.Int32 destLength, System.Byte value, System.Int32 formatOptionsRaw)
    // Offset: 0x50827EC
    static void Format(uint8_t* dest, ByRef<int> destIndex, int destLength, uint8_t value, int formatOptionsRaw);
    // static public System.Void Format(System.Byte* dest, ref System.Int32 destIndex, System.Int32 destLength, System.UInt16 value, System.Int32 formatOptionsRaw)
    // Offset: 0x50828F4
    static void Format(uint8_t* dest, ByRef<int> destIndex, int destLength, uint16_t value, int formatOptionsRaw);
    // static public System.Void Format(System.Byte* dest, ref System.Int32 destIndex, System.Int32 destLength, System.UInt32 value, System.Int32 formatOptionsRaw)
    // Offset: 0x5082978
    static void Format(uint8_t* dest, ByRef<int> destIndex, int destLength, uint value, int formatOptionsRaw);
    // static public System.Void Format(System.Byte* dest, ref System.Int32 destIndex, System.Int32 destLength, System.UInt64 value, System.Int32 formatOptionsRaw)
    // Offset: 0x5082870
    static void Format(uint8_t* dest, ByRef<int> destIndex, int destLength, uint64_t value, int formatOptionsRaw);
    // static public System.Void Format(System.Byte* dest, ref System.Int32 destIndex, System.Int32 destLength, System.SByte value, System.Int32 formatOptionsRaw)
    // Offset: 0x5082BA0
    static void Format(uint8_t* dest, ByRef<int> destIndex, int destLength, int8_t value, int formatOptionsRaw);
    // static public System.Void Format(System.Byte* dest, ref System.Int32 destIndex, System.Int32 destLength, System.Int16 value, System.Int32 formatOptionsRaw)
    // Offset: 0x5082E0C
    static void Format(uint8_t* dest, ByRef<int> destIndex, int destLength, int16_t value, int formatOptionsRaw);
    // static public System.Void Format(System.Byte* dest, ref System.Int32 destIndex, System.Int32 destLength, System.Int32 value, System.Int32 formatOptionsRaw)
    // Offset: 0x5082EC4
    static void Format(uint8_t* dest, ByRef<int> destIndex, int destLength, int value, int formatOptionsRaw);
    // static public System.Void Format(System.Byte* dest, ref System.Int32 destIndex, System.Int32 destLength, System.Int64 value, System.Int32 formatOptionsRaw)
    // Offset: 0x5082F7C
    static void Format(uint8_t* dest, ByRef<int> destIndex, int destLength, int64_t value, int formatOptionsRaw);
    // static private System.Void ConvertUnsignedIntegerToString(System.Byte* dest, ref System.Int32 destIndex, System.Int32 destLength, System.UInt64 value, Unity.Burst.BurstString/FormatOptions options)
    // Offset: 0x50829FC
    static void ConvertUnsignedIntegerToString(uint8_t* dest, ByRef<int> destIndex, int destLength, uint64_t value, ::Unity::Burst::BurstString::FormatOptions options);
    // static private System.Int32 GetLengthIntegerToString(System.Int64 value, System.Int32 basis, System.Int32 zeroPadding)
    // Offset: 0x5083318
    static int GetLengthIntegerToString(int64_t value, int basis, int zeroPadding);
    // static private System.Void ConvertIntegerToString(System.Byte* dest, ref System.Int32 destIndex, System.Int32 destLength, System.Int64 value, Unity.Burst.BurstString/FormatOptions options)
    // Offset: 0x5082C58
    static void ConvertIntegerToString(uint8_t* dest, ByRef<int> destIndex, int destLength, int64_t value, ::Unity::Burst::BurstString::FormatOptions options);
    // static private System.Void FormatNumber(System.Byte* dest, ref System.Int32 destIndex, System.Int32 destLength, ref Unity.Burst.BurstString/NumberBuffer number, System.Int32 nMaxDigits, Unity.Burst.BurstString/FormatOptions options)
    // Offset: 0x50830A4
    static void FormatNumber(uint8_t* dest, ByRef<int> destIndex, int destLength, ByRef<::Unity::Burst::BurstString::NumberBuffer> number, int nMaxDigits, ::Unity::Burst::BurstString::FormatOptions options);
    // static private System.Void FormatDecimalOrHexadecimal(System.Byte* dest, ref System.Int32 destIndex, System.Int32 destLength, ref Unity.Burst.BurstString/NumberBuffer number, System.Int32 zeroPadding, System.Boolean outputPositiveSign)
    // Offset: 0x5083344
    static void FormatDecimalOrHexadecimal(uint8_t* dest, ByRef<int> destIndex, int destLength, ByRef<::Unity::Burst::BurstString::NumberBuffer> number, int zeroPadding, bool outputPositiveSign);
    // static private System.Byte ValueToIntegerChar(System.Int32 value, System.Boolean uppercase)
    // Offset: 0x5083048
    static uint8_t ValueToIntegerChar(int value, bool uppercase);
    // static private System.Boolean AlignRight(System.Byte* dest, ref System.Int32 destIndex, System.Int32 destLength, System.Int32 align, System.Int32 length)
    // Offset: 0x5081D48
    static bool AlignRight(uint8_t* dest, ByRef<int> destIndex, int destLength, int align, int length);
    // static private System.Boolean AlignLeft(System.Byte* dest, ref System.Int32 destIndex, System.Int32 destLength, System.Int32 align, System.Int32 length)
    // Offset: 0x5081CFC
    static bool AlignLeft(uint8_t* dest, ByRef<int> destIndex, int destLength, int align, int length);
    // static private System.Int32 GetLengthForFormatGeneral(ref Unity.Burst.BurstString/NumberBuffer number, System.Int32 nMaxDigits)
    // Offset: 0x508351C
    static int GetLengthForFormatGeneral(ByRef<::Unity::Burst::BurstString::NumberBuffer> number, int nMaxDigits);
    // static private System.Void FormatGeneral(System.Byte* dest, ref System.Int32 destIndex, System.Int32 destLength, ref Unity.Burst.BurstString/NumberBuffer number, System.Int32 nMaxDigits, System.Byte expChar)
    // Offset: 0x5083664
    static void FormatGeneral(uint8_t* dest, ByRef<int> destIndex, int destLength, ByRef<::Unity::Burst::BurstString::NumberBuffer> number, int nMaxDigits, uint8_t expChar);
    // static private System.Void RoundNumber(ref Unity.Burst.BurstString/NumberBuffer number, System.Int32 pos, System.Boolean isCorrectlyRounded)
    // Offset: 0x50833E4
    static void RoundNumber(ByRef<::Unity::Burst::BurstString::NumberBuffer> number, int pos, bool isCorrectlyRounded);
    // static private System.Boolean ShouldRoundUp(System.Byte* dig, System.Int32 i, System.Boolean isCorrectlyRounded)
    // Offset: 0x5083870
    static bool ShouldRoundUp(uint8_t* dig, int i, bool isCorrectlyRounded);
    // static private System.UInt32 LogBase2(System.UInt32 val)
    // Offset: 0x5083894
    static uint LogBase2(uint val);
    // static private System.Int32 BigInt_Compare(in Unity.Burst.BurstString/tBigInt lhs, in Unity.Burst.BurstString/tBigInt rhs)
    // Offset: 0x50839B8
    static int BigInt_Compare(ByRef<::Unity::Burst::BurstString::tBigInt> lhs, ByRef<::Unity::Burst::BurstString::tBigInt> rhs);
    // static private System.Void BigInt_Add(out Unity.Burst.BurstString/tBigInt pResult, in Unity.Burst.BurstString/tBigInt lhs, in Unity.Burst.BurstString/tBigInt rhs)
    // Offset: 0x5083A08
    static void BigInt_Add(ByRef<::Unity::Burst::BurstString::tBigInt> pResult, ByRef<::Unity::Burst::BurstString::tBigInt> lhs, ByRef<::Unity::Burst::BurstString::tBigInt> rhs);
    // static private System.Void BigInt_Add_internal(out Unity.Burst.BurstString/tBigInt pResult, in Unity.Burst.BurstString/tBigInt pLarge, in Unity.Burst.BurstString/tBigInt pSmall)
    // Offset: 0x5083A90
    static void BigInt_Add_internal(ByRef<::Unity::Burst::BurstString::tBigInt> pResult, ByRef<::Unity::Burst::BurstString::tBigInt> pLarge, ByRef<::Unity::Burst::BurstString::tBigInt> pSmall);
    // static private System.Void BigInt_Multiply(out Unity.Burst.BurstString/tBigInt pResult, in Unity.Burst.BurstString/tBigInt lhs, in Unity.Burst.BurstString/tBigInt rhs)
    // Offset: 0x5083B38
    static void BigInt_Multiply(ByRef<::Unity::Burst::BurstString::tBigInt> pResult, ByRef<::Unity::Burst::BurstString::tBigInt> lhs, ByRef<::Unity::Burst::BurstString::tBigInt> rhs);
    // static private System.Void BigInt_Multiply_internal(out Unity.Burst.BurstString/tBigInt pResult, in Unity.Burst.BurstString/tBigInt pLarge, in Unity.Burst.BurstString/tBigInt pSmall)
    // Offset: 0x5083BC0
    static void BigInt_Multiply_internal(ByRef<::Unity::Burst::BurstString::tBigInt> pResult, ByRef<::Unity::Burst::BurstString::tBigInt> pLarge, ByRef<::Unity::Burst::BurstString::tBigInt> pSmall);
    // static private System.Void BigInt_Multiply(out Unity.Burst.BurstString/tBigInt pResult, in Unity.Burst.BurstString/tBigInt lhs, System.UInt32 rhs)
    // Offset: 0x5083CB4
    static void BigInt_Multiply(ByRef<::Unity::Burst::BurstString::tBigInt> pResult, ByRef<::Unity::Burst::BurstString::tBigInt> lhs, uint rhs);
    // static private System.Void BigInt_Multiply2(out Unity.Burst.BurstString/tBigInt pResult, in Unity.Burst.BurstString/tBigInt input)
    // Offset: 0x5083D14
    static void BigInt_Multiply2(ByRef<::Unity::Burst::BurstString::tBigInt> pResult, ByRef<::Unity::Burst::BurstString::tBigInt> input);
    // static private System.Void BigInt_Multiply2(ref Unity.Burst.BurstString/tBigInt pResult)
    // Offset: 0x5083D70
    static void BigInt_Multiply2(ByRef<::Unity::Burst::BurstString::tBigInt> pResult);
    // static private System.Void BigInt_Multiply10(ref Unity.Burst.BurstString/tBigInt pResult)
    // Offset: 0x5083DCC
    static void BigInt_Multiply10(ByRef<::Unity::Burst::BurstString::tBigInt> pResult);
    // static private Unity.Burst.BurstString/tBigInt g_PowerOf10_Big(System.Int32 i)
    // Offset: 0x5083E28
    static ::Unity::Burst::BurstString::tBigInt g_PowerOf10_Big(int i);
    // static private System.Void BigInt_Pow10(out Unity.Burst.BurstString/tBigInt pResult, System.UInt32 exponent)
    // Offset: 0x5084070
    static void BigInt_Pow10(ByRef<::Unity::Burst::BurstString::tBigInt> pResult, uint exponent);
    // static private System.Void BigInt_MultiplyPow10(out Unity.Burst.BurstString/tBigInt pResult, in Unity.Burst.BurstString/tBigInt input, System.UInt32 exponent)
    // Offset: 0x5084200
    static void BigInt_MultiplyPow10(ByRef<::Unity::Burst::BurstString::tBigInt> pResult, ByRef<::Unity::Burst::BurstString::tBigInt> input, uint exponent);
    // static private System.Void BigInt_Pow2(out Unity.Burst.BurstString/tBigInt pResult, System.UInt32 exponent)
    // Offset: 0x508438C
    static void BigInt_Pow2(ByRef<::Unity::Burst::BurstString::tBigInt> pResult, uint exponent);
    // static private System.UInt32 BigInt_DivideWithRemainder_MaxQuotient9(ref Unity.Burst.BurstString/tBigInt pDividend, in Unity.Burst.BurstString/tBigInt divisor)
    // Offset: 0x50843E8
    static uint BigInt_DivideWithRemainder_MaxQuotient9(ByRef<::Unity::Burst::BurstString::tBigInt> pDividend, ByRef<::Unity::Burst::BurstString::tBigInt> divisor);
    // static private System.Void BigInt_ShiftLeft(ref Unity.Burst.BurstString/tBigInt pResult, System.UInt32 shift)
    // Offset: 0x50845B0
    static void BigInt_ShiftLeft(ByRef<::Unity::Burst::BurstString::tBigInt> pResult, uint shift);
    // static private System.UInt32 Dragon4(System.UInt64 mantissa, System.Int32 exponent, System.UInt32 mantissaHighBitIdx, System.Boolean hasUnequalMargins, Unity.Burst.BurstString/CutoffMode cutoffMode, System.UInt32 cutoffNumber, System.Byte* pOutBuffer, System.UInt32 bufferSize, out System.Int32 pOutExponent)
    // Offset: 0x50846C4
    static uint Dragon4(uint64_t mantissa, int exponent, uint mantissaHighBitIdx, bool hasUnequalMargins, ::Unity::Burst::BurstString::CutoffMode cutoffMode, uint cutoffNumber, uint8_t* pOutBuffer, uint bufferSize, ByRef<int> pOutExponent);
    // static private System.Void FormatInfinityNaN(System.Byte* dest, ref System.Int32 destIndex, System.Int32 destLength, System.UInt64 mantissa, System.Boolean isNegative, Unity.Burst.BurstString/FormatOptions formatOptions)
    // Offset: 0x5084EE8
    static void FormatInfinityNaN(uint8_t* dest, ByRef<int> destIndex, int destLength, uint64_t mantissa, bool isNegative, ::Unity::Burst::BurstString::FormatOptions formatOptions);
    // static private System.Void ConvertFloatToString(System.Byte* dest, ref System.Int32 destIndex, System.Int32 destLength, System.Single value, Unity.Burst.BurstString/FormatOptions formatOptions)
    // Offset: 0x5081E9C
    static void ConvertFloatToString(uint8_t* dest, ByRef<int> destIndex, int destLength, float value, ::Unity::Burst::BurstString::FormatOptions formatOptions);
    // static private System.Void ConvertDoubleToString(System.Byte* dest, ref System.Int32 destIndex, System.Int32 destLength, System.Double value, Unity.Burst.BurstString/FormatOptions formatOptions)
    // Offset: 0x50821A8
    static void ConvertDoubleToString(uint8_t* dest, ByRef<int> destIndex, int destLength, double value, ::Unity::Burst::BurstString::FormatOptions formatOptions);
    // static private System.Void .cctor()
    // Offset: 0x508512C
    static void _cctor();
  }; // Unity.Burst.BurstString
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Unity::Burst::BurstString::CopyFixedString
// Il2CppName: CopyFixedString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint8_t*, int, uint8_t*, int)>(&Unity::Burst::BurstString::CopyFixedString)> {
  static const MethodInfo* get() {
    static auto* dest = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* destLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* src = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* srcLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::BurstString*), "CopyFixedString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dest, destLength, src, srcLength});
  }
};
// Writing MetadataGetter for method: Unity::Burst::BurstString::Format
// Il2CppName: Format
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint8_t*, ByRef<int>, int, uint8_t*, int, int)>(&Unity::Burst::BurstString::Format)> {
  static const MethodInfo* get() {
    static auto* dest = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* destIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* destLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* src = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* srcLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* formatOptionsRaw = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::BurstString*), "Format", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dest, destIndex, destLength, src, srcLength, formatOptionsRaw});
  }
};
// Writing MetadataGetter for method: Unity::Burst::BurstString::Format
// Il2CppName: Format
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint8_t*, ByRef<int>, int, float, int)>(&Unity::Burst::BurstString::Format)> {
  static const MethodInfo* get() {
    static auto* dest = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* destIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* destLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* formatOptionsRaw = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::BurstString*), "Format", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dest, destIndex, destLength, value, formatOptionsRaw});
  }
};
// Writing MetadataGetter for method: Unity::Burst::BurstString::Format
// Il2CppName: Format
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint8_t*, ByRef<int>, int, double, int)>(&Unity::Burst::BurstString::Format)> {
  static const MethodInfo* get() {
    static auto* dest = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* destIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* destLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    static auto* formatOptionsRaw = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::BurstString*), "Format", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dest, destIndex, destLength, value, formatOptionsRaw});
  }
};
// Writing MetadataGetter for method: Unity::Burst::BurstString::Format
// Il2CppName: Format
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint8_t*, ByRef<int>, int, bool, int)>(&Unity::Burst::BurstString::Format)> {
  static const MethodInfo* get() {
    static auto* dest = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* destIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* destLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* formatOptionsRaw = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::BurstString*), "Format", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dest, destIndex, destLength, value, formatOptionsRaw});
  }
};
// Writing MetadataGetter for method: Unity::Burst::BurstString::Format
// Il2CppName: Format
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint8_t*, ByRef<int>, int, ::Il2CppChar, int)>(&Unity::Burst::BurstString::Format)> {
  static const MethodInfo* get() {
    static auto* dest = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* destIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* destLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    static auto* formatOptionsRaw = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::BurstString*), "Format", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dest, destIndex, destLength, value, formatOptionsRaw});
  }
};
// Writing MetadataGetter for method: Unity::Burst::BurstString::Format
// Il2CppName: Format
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint8_t*, ByRef<int>, int, uint8_t, int)>(&Unity::Burst::BurstString::Format)> {
  static const MethodInfo* get() {
    static auto* dest = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* destIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* destLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* formatOptionsRaw = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::BurstString*), "Format", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dest, destIndex, destLength, value, formatOptionsRaw});
  }
};
// Writing MetadataGetter for method: Unity::Burst::BurstString::Format
// Il2CppName: Format
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint8_t*, ByRef<int>, int, uint16_t, int)>(&Unity::Burst::BurstString::Format)> {
  static const MethodInfo* get() {
    static auto* dest = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* destIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* destLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt16")->byval_arg;
    static auto* formatOptionsRaw = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::BurstString*), "Format", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dest, destIndex, destLength, value, formatOptionsRaw});
  }
};
// Writing MetadataGetter for method: Unity::Burst::BurstString::Format
// Il2CppName: Format
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint8_t*, ByRef<int>, int, uint, int)>(&Unity::Burst::BurstString::Format)> {
  static const MethodInfo* get() {
    static auto* dest = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* destIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* destLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* formatOptionsRaw = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::BurstString*), "Format", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dest, destIndex, destLength, value, formatOptionsRaw});
  }
};
// Writing MetadataGetter for method: Unity::Burst::BurstString::Format
// Il2CppName: Format
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint8_t*, ByRef<int>, int, uint64_t, int)>(&Unity::Burst::BurstString::Format)> {
  static const MethodInfo* get() {
    static auto* dest = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* destIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* destLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* formatOptionsRaw = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::BurstString*), "Format", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dest, destIndex, destLength, value, formatOptionsRaw});
  }
};
// Writing MetadataGetter for method: Unity::Burst::BurstString::Format
// Il2CppName: Format
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint8_t*, ByRef<int>, int, int8_t, int)>(&Unity::Burst::BurstString::Format)> {
  static const MethodInfo* get() {
    static auto* dest = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* destIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* destLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "SByte")->byval_arg;
    static auto* formatOptionsRaw = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::BurstString*), "Format", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dest, destIndex, destLength, value, formatOptionsRaw});
  }
};
// Writing MetadataGetter for method: Unity::Burst::BurstString::Format
// Il2CppName: Format
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint8_t*, ByRef<int>, int, int16_t, int)>(&Unity::Burst::BurstString::Format)> {
  static const MethodInfo* get() {
    static auto* dest = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* destIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* destLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int16")->byval_arg;
    static auto* formatOptionsRaw = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::BurstString*), "Format", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dest, destIndex, destLength, value, formatOptionsRaw});
  }
};
// Writing MetadataGetter for method: Unity::Burst::BurstString::Format
// Il2CppName: Format
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint8_t*, ByRef<int>, int, int, int)>(&Unity::Burst::BurstString::Format)> {
  static const MethodInfo* get() {
    static auto* dest = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* destIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* destLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* formatOptionsRaw = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::BurstString*), "Format", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dest, destIndex, destLength, value, formatOptionsRaw});
  }
};
// Writing MetadataGetter for method: Unity::Burst::BurstString::Format
// Il2CppName: Format
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint8_t*, ByRef<int>, int, int64_t, int)>(&Unity::Burst::BurstString::Format)> {
  static const MethodInfo* get() {
    static auto* dest = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* destIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* destLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* formatOptionsRaw = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::BurstString*), "Format", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dest, destIndex, destLength, value, formatOptionsRaw});
  }
};
// Writing MetadataGetter for method: Unity::Burst::BurstString::ConvertUnsignedIntegerToString
// Il2CppName: ConvertUnsignedIntegerToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint8_t*, ByRef<int>, int, uint64_t, ::Unity::Burst::BurstString::FormatOptions)>(&Unity::Burst::BurstString::ConvertUnsignedIntegerToString)> {
  static const MethodInfo* get() {
    static auto* dest = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* destIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* destLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("Unity.Burst", "BurstString/FormatOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::BurstString*), "ConvertUnsignedIntegerToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dest, destIndex, destLength, value, options});
  }
};
// Writing MetadataGetter for method: Unity::Burst::BurstString::GetLengthIntegerToString
// Il2CppName: GetLengthIntegerToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int64_t, int, int)>(&Unity::Burst::BurstString::GetLengthIntegerToString)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* basis = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* zeroPadding = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::BurstString*), "GetLengthIntegerToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, basis, zeroPadding});
  }
};
// Writing MetadataGetter for method: Unity::Burst::BurstString::ConvertIntegerToString
// Il2CppName: ConvertIntegerToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint8_t*, ByRef<int>, int, int64_t, ::Unity::Burst::BurstString::FormatOptions)>(&Unity::Burst::BurstString::ConvertIntegerToString)> {
  static const MethodInfo* get() {
    static auto* dest = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* destIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* destLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("Unity.Burst", "BurstString/FormatOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::BurstString*), "ConvertIntegerToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dest, destIndex, destLength, value, options});
  }
};
// Writing MetadataGetter for method: Unity::Burst::BurstString::FormatNumber
// Il2CppName: FormatNumber
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint8_t*, ByRef<int>, int, ByRef<::Unity::Burst::BurstString::NumberBuffer>, int, ::Unity::Burst::BurstString::FormatOptions)>(&Unity::Burst::BurstString::FormatNumber)> {
  static const MethodInfo* get() {
    static auto* dest = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* destIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* destLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* number = &::il2cpp_utils::GetClassFromName("Unity.Burst", "BurstString/NumberBuffer")->this_arg;
    static auto* nMaxDigits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("Unity.Burst", "BurstString/FormatOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::BurstString*), "FormatNumber", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dest, destIndex, destLength, number, nMaxDigits, options});
  }
};
// Writing MetadataGetter for method: Unity::Burst::BurstString::FormatDecimalOrHexadecimal
// Il2CppName: FormatDecimalOrHexadecimal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint8_t*, ByRef<int>, int, ByRef<::Unity::Burst::BurstString::NumberBuffer>, int, bool)>(&Unity::Burst::BurstString::FormatDecimalOrHexadecimal)> {
  static const MethodInfo* get() {
    static auto* dest = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* destIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* destLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* number = &::il2cpp_utils::GetClassFromName("Unity.Burst", "BurstString/NumberBuffer")->this_arg;
    static auto* zeroPadding = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* outputPositiveSign = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::BurstString*), "FormatDecimalOrHexadecimal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dest, destIndex, destLength, number, zeroPadding, outputPositiveSign});
  }
};
// Writing MetadataGetter for method: Unity::Burst::BurstString::ValueToIntegerChar
// Il2CppName: ValueToIntegerChar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (*)(int, bool)>(&Unity::Burst::BurstString::ValueToIntegerChar)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* uppercase = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::BurstString*), "ValueToIntegerChar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, uppercase});
  }
};
// Writing MetadataGetter for method: Unity::Burst::BurstString::AlignRight
// Il2CppName: AlignRight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint8_t*, ByRef<int>, int, int, int)>(&Unity::Burst::BurstString::AlignRight)> {
  static const MethodInfo* get() {
    static auto* dest = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* destIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* destLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* align = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::BurstString*), "AlignRight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dest, destIndex, destLength, align, length});
  }
};
// Writing MetadataGetter for method: Unity::Burst::BurstString::AlignLeft
// Il2CppName: AlignLeft
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint8_t*, ByRef<int>, int, int, int)>(&Unity::Burst::BurstString::AlignLeft)> {
  static const MethodInfo* get() {
    static auto* dest = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* destIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* destLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* align = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::BurstString*), "AlignLeft", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dest, destIndex, destLength, align, length});
  }
};
// Writing MetadataGetter for method: Unity::Burst::BurstString::GetLengthForFormatGeneral
// Il2CppName: GetLengthForFormatGeneral
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(ByRef<::Unity::Burst::BurstString::NumberBuffer>, int)>(&Unity::Burst::BurstString::GetLengthForFormatGeneral)> {
  static const MethodInfo* get() {
    static auto* number = &::il2cpp_utils::GetClassFromName("Unity.Burst", "BurstString/NumberBuffer")->this_arg;
    static auto* nMaxDigits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::BurstString*), "GetLengthForFormatGeneral", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{number, nMaxDigits});
  }
};
// Writing MetadataGetter for method: Unity::Burst::BurstString::FormatGeneral
// Il2CppName: FormatGeneral
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint8_t*, ByRef<int>, int, ByRef<::Unity::Burst::BurstString::NumberBuffer>, int, uint8_t)>(&Unity::Burst::BurstString::FormatGeneral)> {
  static const MethodInfo* get() {
    static auto* dest = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* destIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* destLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* number = &::il2cpp_utils::GetClassFromName("Unity.Burst", "BurstString/NumberBuffer")->this_arg;
    static auto* nMaxDigits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* expChar = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::BurstString*), "FormatGeneral", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dest, destIndex, destLength, number, nMaxDigits, expChar});
  }
};
// Writing MetadataGetter for method: Unity::Burst::BurstString::RoundNumber
// Il2CppName: RoundNumber
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::Unity::Burst::BurstString::NumberBuffer>, int, bool)>(&Unity::Burst::BurstString::RoundNumber)> {
  static const MethodInfo* get() {
    static auto* number = &::il2cpp_utils::GetClassFromName("Unity.Burst", "BurstString/NumberBuffer")->this_arg;
    static auto* pos = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* isCorrectlyRounded = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::BurstString*), "RoundNumber", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{number, pos, isCorrectlyRounded});
  }
};
// Writing MetadataGetter for method: Unity::Burst::BurstString::ShouldRoundUp
// Il2CppName: ShouldRoundUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint8_t*, int, bool)>(&Unity::Burst::BurstString::ShouldRoundUp)> {
  static const MethodInfo* get() {
    static auto* dig = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* i = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* isCorrectlyRounded = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::BurstString*), "ShouldRoundUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dig, i, isCorrectlyRounded});
  }
};
// Writing MetadataGetter for method: Unity::Burst::BurstString::LogBase2
// Il2CppName: LogBase2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint)>(&Unity::Burst::BurstString::LogBase2)> {
  static const MethodInfo* get() {
    static auto* val = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::BurstString*), "LogBase2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{val});
  }
};
// Writing MetadataGetter for method: Unity::Burst::BurstString::BigInt_Compare
// Il2CppName: BigInt_Compare
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(ByRef<::Unity::Burst::BurstString::tBigInt>, ByRef<::Unity::Burst::BurstString::tBigInt>)>(&Unity::Burst::BurstString::BigInt_Compare)> {
  static const MethodInfo* get() {
    static auto* lhs = &::il2cpp_utils::GetClassFromName("Unity.Burst", "BurstString/tBigInt")->this_arg;
    static auto* rhs = &::il2cpp_utils::GetClassFromName("Unity.Burst", "BurstString/tBigInt")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::BurstString*), "BigInt_Compare", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{lhs, rhs});
  }
};
// Writing MetadataGetter for method: Unity::Burst::BurstString::BigInt_Add
// Il2CppName: BigInt_Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::Unity::Burst::BurstString::tBigInt>, ByRef<::Unity::Burst::BurstString::tBigInt>, ByRef<::Unity::Burst::BurstString::tBigInt>)>(&Unity::Burst::BurstString::BigInt_Add)> {
  static const MethodInfo* get() {
    static auto* pResult = &::il2cpp_utils::GetClassFromName("Unity.Burst", "BurstString/tBigInt")->this_arg;
    static auto* lhs = &::il2cpp_utils::GetClassFromName("Unity.Burst", "BurstString/tBigInt")->this_arg;
    static auto* rhs = &::il2cpp_utils::GetClassFromName("Unity.Burst", "BurstString/tBigInt")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::BurstString*), "BigInt_Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pResult, lhs, rhs});
  }
};
// Writing MetadataGetter for method: Unity::Burst::BurstString::BigInt_Add_internal
// Il2CppName: BigInt_Add_internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::Unity::Burst::BurstString::tBigInt>, ByRef<::Unity::Burst::BurstString::tBigInt>, ByRef<::Unity::Burst::BurstString::tBigInt>)>(&Unity::Burst::BurstString::BigInt_Add_internal)> {
  static const MethodInfo* get() {
    static auto* pResult = &::il2cpp_utils::GetClassFromName("Unity.Burst", "BurstString/tBigInt")->this_arg;
    static auto* pLarge = &::il2cpp_utils::GetClassFromName("Unity.Burst", "BurstString/tBigInt")->this_arg;
    static auto* pSmall = &::il2cpp_utils::GetClassFromName("Unity.Burst", "BurstString/tBigInt")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::BurstString*), "BigInt_Add_internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pResult, pLarge, pSmall});
  }
};
// Writing MetadataGetter for method: Unity::Burst::BurstString::BigInt_Multiply
// Il2CppName: BigInt_Multiply
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::Unity::Burst::BurstString::tBigInt>, ByRef<::Unity::Burst::BurstString::tBigInt>, ByRef<::Unity::Burst::BurstString::tBigInt>)>(&Unity::Burst::BurstString::BigInt_Multiply)> {
  static const MethodInfo* get() {
    static auto* pResult = &::il2cpp_utils::GetClassFromName("Unity.Burst", "BurstString/tBigInt")->this_arg;
    static auto* lhs = &::il2cpp_utils::GetClassFromName("Unity.Burst", "BurstString/tBigInt")->this_arg;
    static auto* rhs = &::il2cpp_utils::GetClassFromName("Unity.Burst", "BurstString/tBigInt")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::BurstString*), "BigInt_Multiply", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pResult, lhs, rhs});
  }
};
// Writing MetadataGetter for method: Unity::Burst::BurstString::BigInt_Multiply_internal
// Il2CppName: BigInt_Multiply_internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::Unity::Burst::BurstString::tBigInt>, ByRef<::Unity::Burst::BurstString::tBigInt>, ByRef<::Unity::Burst::BurstString::tBigInt>)>(&Unity::Burst::BurstString::BigInt_Multiply_internal)> {
  static const MethodInfo* get() {
    static auto* pResult = &::il2cpp_utils::GetClassFromName("Unity.Burst", "BurstString/tBigInt")->this_arg;
    static auto* pLarge = &::il2cpp_utils::GetClassFromName("Unity.Burst", "BurstString/tBigInt")->this_arg;
    static auto* pSmall = &::il2cpp_utils::GetClassFromName("Unity.Burst", "BurstString/tBigInt")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::BurstString*), "BigInt_Multiply_internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pResult, pLarge, pSmall});
  }
};
// Writing MetadataGetter for method: Unity::Burst::BurstString::BigInt_Multiply
// Il2CppName: BigInt_Multiply
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::Unity::Burst::BurstString::tBigInt>, ByRef<::Unity::Burst::BurstString::tBigInt>, uint)>(&Unity::Burst::BurstString::BigInt_Multiply)> {
  static const MethodInfo* get() {
    static auto* pResult = &::il2cpp_utils::GetClassFromName("Unity.Burst", "BurstString/tBigInt")->this_arg;
    static auto* lhs = &::il2cpp_utils::GetClassFromName("Unity.Burst", "BurstString/tBigInt")->this_arg;
    static auto* rhs = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::BurstString*), "BigInt_Multiply", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pResult, lhs, rhs});
  }
};
// Writing MetadataGetter for method: Unity::Burst::BurstString::BigInt_Multiply2
// Il2CppName: BigInt_Multiply2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::Unity::Burst::BurstString::tBigInt>, ByRef<::Unity::Burst::BurstString::tBigInt>)>(&Unity::Burst::BurstString::BigInt_Multiply2)> {
  static const MethodInfo* get() {
    static auto* pResult = &::il2cpp_utils::GetClassFromName("Unity.Burst", "BurstString/tBigInt")->this_arg;
    static auto* input = &::il2cpp_utils::GetClassFromName("Unity.Burst", "BurstString/tBigInt")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::BurstString*), "BigInt_Multiply2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pResult, input});
  }
};
// Writing MetadataGetter for method: Unity::Burst::BurstString::BigInt_Multiply2
// Il2CppName: BigInt_Multiply2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::Unity::Burst::BurstString::tBigInt>)>(&Unity::Burst::BurstString::BigInt_Multiply2)> {
  static const MethodInfo* get() {
    static auto* pResult = &::il2cpp_utils::GetClassFromName("Unity.Burst", "BurstString/tBigInt")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::BurstString*), "BigInt_Multiply2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pResult});
  }
};
// Writing MetadataGetter for method: Unity::Burst::BurstString::BigInt_Multiply10
// Il2CppName: BigInt_Multiply10
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::Unity::Burst::BurstString::tBigInt>)>(&Unity::Burst::BurstString::BigInt_Multiply10)> {
  static const MethodInfo* get() {
    static auto* pResult = &::il2cpp_utils::GetClassFromName("Unity.Burst", "BurstString/tBigInt")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::BurstString*), "BigInt_Multiply10", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pResult});
  }
};
// Writing MetadataGetter for method: Unity::Burst::BurstString::g_PowerOf10_Big
// Il2CppName: g_PowerOf10_Big
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Unity::Burst::BurstString::tBigInt (*)(int)>(&Unity::Burst::BurstString::g_PowerOf10_Big)> {
  static const MethodInfo* get() {
    static auto* i = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::BurstString*), "g_PowerOf10_Big", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{i});
  }
};
// Writing MetadataGetter for method: Unity::Burst::BurstString::BigInt_Pow10
// Il2CppName: BigInt_Pow10
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::Unity::Burst::BurstString::tBigInt>, uint)>(&Unity::Burst::BurstString::BigInt_Pow10)> {
  static const MethodInfo* get() {
    static auto* pResult = &::il2cpp_utils::GetClassFromName("Unity.Burst", "BurstString/tBigInt")->this_arg;
    static auto* exponent = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::BurstString*), "BigInt_Pow10", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pResult, exponent});
  }
};
// Writing MetadataGetter for method: Unity::Burst::BurstString::BigInt_MultiplyPow10
// Il2CppName: BigInt_MultiplyPow10
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::Unity::Burst::BurstString::tBigInt>, ByRef<::Unity::Burst::BurstString::tBigInt>, uint)>(&Unity::Burst::BurstString::BigInt_MultiplyPow10)> {
  static const MethodInfo* get() {
    static auto* pResult = &::il2cpp_utils::GetClassFromName("Unity.Burst", "BurstString/tBigInt")->this_arg;
    static auto* input = &::il2cpp_utils::GetClassFromName("Unity.Burst", "BurstString/tBigInt")->this_arg;
    static auto* exponent = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::BurstString*), "BigInt_MultiplyPow10", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pResult, input, exponent});
  }
};
// Writing MetadataGetter for method: Unity::Burst::BurstString::BigInt_Pow2
// Il2CppName: BigInt_Pow2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::Unity::Burst::BurstString::tBigInt>, uint)>(&Unity::Burst::BurstString::BigInt_Pow2)> {
  static const MethodInfo* get() {
    static auto* pResult = &::il2cpp_utils::GetClassFromName("Unity.Burst", "BurstString/tBigInt")->this_arg;
    static auto* exponent = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::BurstString*), "BigInt_Pow2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pResult, exponent});
  }
};
// Writing MetadataGetter for method: Unity::Burst::BurstString::BigInt_DivideWithRemainder_MaxQuotient9
// Il2CppName: BigInt_DivideWithRemainder_MaxQuotient9
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(ByRef<::Unity::Burst::BurstString::tBigInt>, ByRef<::Unity::Burst::BurstString::tBigInt>)>(&Unity::Burst::BurstString::BigInt_DivideWithRemainder_MaxQuotient9)> {
  static const MethodInfo* get() {
    static auto* pDividend = &::il2cpp_utils::GetClassFromName("Unity.Burst", "BurstString/tBigInt")->this_arg;
    static auto* divisor = &::il2cpp_utils::GetClassFromName("Unity.Burst", "BurstString/tBigInt")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::BurstString*), "BigInt_DivideWithRemainder_MaxQuotient9", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pDividend, divisor});
  }
};
// Writing MetadataGetter for method: Unity::Burst::BurstString::BigInt_ShiftLeft
// Il2CppName: BigInt_ShiftLeft
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::Unity::Burst::BurstString::tBigInt>, uint)>(&Unity::Burst::BurstString::BigInt_ShiftLeft)> {
  static const MethodInfo* get() {
    static auto* pResult = &::il2cpp_utils::GetClassFromName("Unity.Burst", "BurstString/tBigInt")->this_arg;
    static auto* shift = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::BurstString*), "BigInt_ShiftLeft", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pResult, shift});
  }
};
// Writing MetadataGetter for method: Unity::Burst::BurstString::Dragon4
// Il2CppName: Dragon4
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint64_t, int, uint, bool, ::Unity::Burst::BurstString::CutoffMode, uint, uint8_t*, uint, ByRef<int>)>(&Unity::Burst::BurstString::Dragon4)> {
  static const MethodInfo* get() {
    static auto* mantissa = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* exponent = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* mantissaHighBitIdx = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* hasUnequalMargins = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* cutoffMode = &::il2cpp_utils::GetClassFromName("Unity.Burst", "BurstString/CutoffMode")->byval_arg;
    static auto* cutoffNumber = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* pOutBuffer = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* bufferSize = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* pOutExponent = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::BurstString*), "Dragon4", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mantissa, exponent, mantissaHighBitIdx, hasUnequalMargins, cutoffMode, cutoffNumber, pOutBuffer, bufferSize, pOutExponent});
  }
};
// Writing MetadataGetter for method: Unity::Burst::BurstString::FormatInfinityNaN
// Il2CppName: FormatInfinityNaN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint8_t*, ByRef<int>, int, uint64_t, bool, ::Unity::Burst::BurstString::FormatOptions)>(&Unity::Burst::BurstString::FormatInfinityNaN)> {
  static const MethodInfo* get() {
    static auto* dest = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* destIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* destLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* mantissa = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* isNegative = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* formatOptions = &::il2cpp_utils::GetClassFromName("Unity.Burst", "BurstString/FormatOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::BurstString*), "FormatInfinityNaN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dest, destIndex, destLength, mantissa, isNegative, formatOptions});
  }
};
// Writing MetadataGetter for method: Unity::Burst::BurstString::ConvertFloatToString
// Il2CppName: ConvertFloatToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint8_t*, ByRef<int>, int, float, ::Unity::Burst::BurstString::FormatOptions)>(&Unity::Burst::BurstString::ConvertFloatToString)> {
  static const MethodInfo* get() {
    static auto* dest = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* destIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* destLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* formatOptions = &::il2cpp_utils::GetClassFromName("Unity.Burst", "BurstString/FormatOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::BurstString*), "ConvertFloatToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dest, destIndex, destLength, value, formatOptions});
  }
};
// Writing MetadataGetter for method: Unity::Burst::BurstString::ConvertDoubleToString
// Il2CppName: ConvertDoubleToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint8_t*, ByRef<int>, int, double, ::Unity::Burst::BurstString::FormatOptions)>(&Unity::Burst::BurstString::ConvertDoubleToString)> {
  static const MethodInfo* get() {
    static auto* dest = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* destIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* destLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    static auto* formatOptions = &::il2cpp_utils::GetClassFromName("Unity.Burst", "BurstString/FormatOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::BurstString*), "ConvertDoubleToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dest, destIndex, destLength, value, formatOptions});
  }
};
// Writing MetadataGetter for method: Unity::Burst::BurstString::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Unity::Burst::BurstString::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::BurstString*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
