// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
// Including type: Unity.Burst.FloatMode
#include "Unity/Burst/FloatMode.hpp"
// Including type: Unity.Burst.FloatPrecision
#include "Unity/Burst/FloatPrecision.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: Unity.Burst.OptimizeFor
#include "Unity/Burst/OptimizeFor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: Unity.Burst
namespace Unity::Burst {
  // Forward declaring type: BurstCompileAttribute
  class BurstCompileAttribute;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Unity::Burst::BurstCompileAttribute);
DEFINE_IL2CPP_ARG_TYPE(::Unity::Burst::BurstCompileAttribute*, "Unity.Burst", "BurstCompileAttribute");
// Type namespace: Unity.Burst
namespace Unity::Burst {
  // WARNING Size may be invalid!
  // Autogenerated type: Unity.Burst.BurstCompileAttribute
  // [TokenAttribute] Offset: FFFFFFFF
  // [AttributeUsageAttribute] Offset: FFFFFFFF
  class BurstCompileAttribute : public ::System::Attribute {
    public:
    public:
    // private Unity.Burst.FloatMode <FloatMode>k__BackingField
    // Size: 0x4
    // Offset: 0x10
    ::Unity::Burst::FloatMode FloatMode;
    // Field size check
    static_assert(sizeof(::Unity::Burst::FloatMode) == 0x4);
    // private Unity.Burst.FloatPrecision <FloatPrecision>k__BackingField
    // Size: 0x4
    // Offset: 0x14
    ::Unity::Burst::FloatPrecision FloatPrecision;
    // Field size check
    static_assert(sizeof(::Unity::Burst::FloatPrecision) == 0x4);
    // System.Nullable`1<System.Boolean> _compileSynchronously
    // Size: 0xFFFFFFFF
    // Offset: 0x18
    ::System::Nullable_1<bool> compileSynchronously;
    // System.Nullable`1<System.Boolean> _disableSafetyChecks
    // Size: 0xFFFFFFFF
    // Offset: 0x1A
    ::System::Nullable_1<bool> disableSafetyChecks;
    // private Unity.Burst.OptimizeFor <OptimizeFor>k__BackingField
    // Size: 0x4
    // Offset: 0x1C
    ::Unity::Burst::OptimizeFor OptimizeFor;
    // Field size check
    static_assert(sizeof(::Unity::Burst::OptimizeFor) == 0x4);
    // private System.String[] <Options>k__BackingField
    // Size: 0x8
    // Offset: 0x20
    ::ArrayW<::StringW> Options;
    // Field size check
    static_assert(sizeof(::ArrayW<::StringW>) == 0x8);
    public:
    // Get instance field reference: private Unity.Burst.FloatMode <FloatMode>k__BackingField
    [[deprecated("Use field access instead!")]] ::Unity::Burst::FloatMode& dyn_$FloatMode$k__BackingField();
    // Get instance field reference: private Unity.Burst.FloatPrecision <FloatPrecision>k__BackingField
    [[deprecated("Use field access instead!")]] ::Unity::Burst::FloatPrecision& dyn_$FloatPrecision$k__BackingField();
    // Get instance field reference: System.Nullable`1<System.Boolean> _compileSynchronously
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<bool>& dyn__compileSynchronously();
    // Get instance field reference: System.Nullable`1<System.Boolean> _disableSafetyChecks
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<bool>& dyn__disableSafetyChecks();
    // Get instance field reference: private Unity.Burst.OptimizeFor <OptimizeFor>k__BackingField
    [[deprecated("Use field access instead!")]] ::Unity::Burst::OptimizeFor& dyn_$OptimizeFor$k__BackingField();
    // Get instance field reference: private System.String[] <Options>k__BackingField
    [[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& dyn_$Options$k__BackingField();
    // public System.Void set_FloatMode(Unity.Burst.FloatMode value)
    // Offset: 0x5080550
    void set_FloatMode(::Unity::Burst::FloatMode value);
    // public System.Void set_FloatPrecision(Unity.Burst.FloatPrecision value)
    // Offset: 0x5080558
    void set_FloatPrecision(::Unity::Burst::FloatPrecision value);
    // public System.Void set_CompileSynchronously(System.Boolean value)
    // Offset: 0x5080560
    void set_CompileSynchronously(bool value);
    // public System.Void set_DisableSafetyChecks(System.Boolean value)
    // Offset: 0x50805C8
    void set_DisableSafetyChecks(bool value);
    // public System.Void set_OptimizeFor(Unity.Burst.OptimizeFor value)
    // Offset: 0x5080630
    void set_OptimizeFor(::Unity::Burst::OptimizeFor value);
    // System.Void set_Options(System.String[] value)
    // Offset: 0x5080638
    void set_Options(::ArrayW<::StringW> value);
    // public System.Void .ctor()
    // Offset: 0x5080640
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BurstCompileAttribute* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Burst::BurstCompileAttribute::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BurstCompileAttribute*, creationType>()));
    }
    // public System.Void .ctor(Unity.Burst.FloatPrecision floatPrecision, Unity.Burst.FloatMode floatMode)
    // Offset: 0x5080648
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BurstCompileAttribute* New_ctor(::Unity::Burst::FloatPrecision floatPrecision, ::Unity::Burst::FloatMode floatMode) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Burst::BurstCompileAttribute::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BurstCompileAttribute*, creationType>(floatPrecision, floatMode)));
    }
  }; // Unity.Burst.BurstCompileAttribute
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Unity::Burst::BurstCompileAttribute::set_FloatMode
// Il2CppName: set_FloatMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::Burst::BurstCompileAttribute::*)(::Unity::Burst::FloatMode)>(&Unity::Burst::BurstCompileAttribute::set_FloatMode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Unity.Burst", "FloatMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::BurstCompileAttribute*), "set_FloatMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Unity::Burst::BurstCompileAttribute::set_FloatPrecision
// Il2CppName: set_FloatPrecision
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::Burst::BurstCompileAttribute::*)(::Unity::Burst::FloatPrecision)>(&Unity::Burst::BurstCompileAttribute::set_FloatPrecision)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Unity.Burst", "FloatPrecision")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::BurstCompileAttribute*), "set_FloatPrecision", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Unity::Burst::BurstCompileAttribute::set_CompileSynchronously
// Il2CppName: set_CompileSynchronously
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::Burst::BurstCompileAttribute::*)(bool)>(&Unity::Burst::BurstCompileAttribute::set_CompileSynchronously)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::BurstCompileAttribute*), "set_CompileSynchronously", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Unity::Burst::BurstCompileAttribute::set_DisableSafetyChecks
// Il2CppName: set_DisableSafetyChecks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::Burst::BurstCompileAttribute::*)(bool)>(&Unity::Burst::BurstCompileAttribute::set_DisableSafetyChecks)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::BurstCompileAttribute*), "set_DisableSafetyChecks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Unity::Burst::BurstCompileAttribute::set_OptimizeFor
// Il2CppName: set_OptimizeFor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::Burst::BurstCompileAttribute::*)(::Unity::Burst::OptimizeFor)>(&Unity::Burst::BurstCompileAttribute::set_OptimizeFor)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Unity.Burst", "OptimizeFor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::BurstCompileAttribute*), "set_OptimizeFor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Unity::Burst::BurstCompileAttribute::set_Options
// Il2CppName: set_Options
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::Burst::BurstCompileAttribute::*)(::ArrayW<::StringW>)>(&Unity::Burst::BurstCompileAttribute::set_Options)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::BurstCompileAttribute*), "set_Options", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Unity::Burst::BurstCompileAttribute::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Unity::Burst::BurstCompileAttribute::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
