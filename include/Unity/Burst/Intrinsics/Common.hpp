// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Type namespace: Unity.Burst.Intrinsics
namespace Unity::Burst::Intrinsics {
  // Forward declaring type: Common
  class Common;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Unity::Burst::Intrinsics::Common);
DEFINE_IL2CPP_ARG_TYPE(::Unity::Burst::Intrinsics::Common*, "Unity.Burst.Intrinsics", "Common");
// Type namespace: Unity.Burst.Intrinsics
namespace Unity::Burst::Intrinsics {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Unity.Burst.Intrinsics.Common
  // [TokenAttribute] Offset: FFFFFFFF
  class Common : public ::Il2CppObject {
    public:
    // static public System.UInt64 umul128(System.UInt64 x, System.UInt64 y, out System.UInt64 high)
    // Offset: 0x50856D0
    static uint64_t umul128(uint64_t x, uint64_t y, ByRef<uint64_t> high);
  }; // Unity.Burst.Intrinsics.Common
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Unity::Burst::Intrinsics::Common::umul128
// Il2CppName: umul128
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, uint64_t, ByRef<uint64_t>)>(&Unity::Burst::Intrinsics::Common::umul128)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* y = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* high = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Burst::Intrinsics::Common*), "umul128", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x, y, high});
  }
};
