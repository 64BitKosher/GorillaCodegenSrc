// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Unity::Collections
namespace Unity::Collections {
}
// Forward declaring namespace: Unity::Mathematics
namespace Unity::Mathematics {
  // Forward declaring type: uint4
  struct uint4;
}
// Completed forward declares
// Type namespace: Unity.Collections
namespace Unity::Collections {
  // Forward declaring type: xxHash3
  class xxHash3;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Unity::Collections::xxHash3);
DEFINE_IL2CPP_ARG_TYPE(::Unity::Collections::xxHash3*, "Unity.Collections", "xxHash3");
// Type namespace: Unity.Collections
namespace Unity::Collections {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Unity.Collections.xxHash3
  // [TokenAttribute] Offset: FFFFFFFF
  // [GenerateTestsForBurstCompatibilityAttribute] Offset: FFFFFFFF
  // [BurstCompileAttribute] Offset: FFFFFFFF
  // [GenerateTestsForBurstCompatibilityAttribute] Offset: FFFFFFFF
  // [GenerateTestsForBurstCompatibilityAttribute] Offset: FFFFFFFF
  class xxHash3 : public ::Il2CppObject {
    public:
    // Nested type: ::Unity::Collections::xxHash3::Hash64Long_00000A66$PostfixBurstDelegate
    class Hash64Long_00000A66$PostfixBurstDelegate;
    // Nested type: ::Unity::Collections::xxHash3::Hash64Long_00000A66$BurstDirectCall
    class Hash64Long_00000A66$BurstDirectCall;
    // Nested type: ::Unity::Collections::xxHash3::Hash128Long_00000A6D$PostfixBurstDelegate
    class Hash128Long_00000A6D$PostfixBurstDelegate;
    // Nested type: ::Unity::Collections::xxHash3::Hash128Long_00000A6D$BurstDirectCall
    class Hash128Long_00000A6D$BurstDirectCall;
    // static System.Void Avx2HashLongInternalLoop(System.UInt64* acc, System.Byte* input, System.Byte* dest, System.Int64 length, System.Byte* secret, System.Int32 isHash64)
    // Offset: 0x508944C
    static void Avx2HashLongInternalLoop(uint64_t* acc, uint8_t* input, uint8_t* dest, int64_t length, uint8_t* secret, int isHash64);
    // static System.Void Avx2ScrambleAcc(System.UInt64* acc, System.Byte* secret)
    // Offset: 0x5089628
    static void Avx2ScrambleAcc(uint64_t* acc, uint8_t* secret);
    // static System.Void Avx2Accumulate(System.UInt64* acc, System.Byte* input, System.Byte* dest, System.Byte* secret, System.Int64 nbStripes, System.Int32 isHash64)
    // Offset: 0x5089594
    static void Avx2Accumulate(uint64_t* acc, uint8_t* input, uint8_t* dest, uint8_t* secret, int64_t nbStripes, int isHash64);
    // static System.Void Avx2Accumulate512(System.UInt64* acc, System.Byte* input, System.Byte* dest, System.Byte* secret)
    // Offset: 0x5089A04
    static void Avx2Accumulate512(uint64_t* acc, uint8_t* input, uint8_t* dest, uint8_t* secret);
    // static private System.UInt64 Hash64Long(System.Byte* input, System.Byte* dest, System.Int64 length, System.Byte* secret)
    // Offset: 0x5089DE8
    static uint64_t Hash64Long(uint8_t* input, uint8_t* dest, int64_t length, uint8_t* secret);
    // static private System.Void Hash128Long(System.Byte* input, System.Byte* dest, System.Int64 length, System.Byte* secret, out Unity.Mathematics.uint4 result)
    // Offset: 0x508A038
    static void Hash128Long(uint8_t* input, uint8_t* dest, int64_t length, uint8_t* secret, ByRef<::Unity::Mathematics::uint4> result);
    // static Unity.Mathematics.uint4 ToUint4(System.UInt64 ul0, System.UInt64 ul1)
    // Offset: 0x508A1A8
    static ::Unity::Mathematics::uint4 ToUint4(uint64_t ul0, uint64_t ul1);
    // static private System.UInt64 Read64LE(System.Void* addr)
    // Offset: 0x508A1AC
    static uint64_t Read64LE(void* addr);
    // static private System.Void Write64LE(System.Void* addr, System.UInt64 value)
    // Offset: 0x508A1B4
    static void Write64LE(void* addr, uint64_t value);
    // static private System.UInt64 Mul32To64(System.UInt32 x, System.UInt32 y)
    // Offset: 0x508A1BC
    static uint64_t Mul32To64(uint x, uint y);
    // static private System.UInt64 XorShift64(System.UInt64 v64, System.Int32 shift)
    // Offset: 0x508A1C4
    static uint64_t XorShift64(uint64_t v64, int shift);
    // static private System.UInt64 Mul128Fold64(System.UInt64 lhs, System.UInt64 rhs)
    // Offset: 0x508A1D0
    static uint64_t Mul128Fold64(uint64_t lhs, uint64_t rhs);
    // static private System.UInt64 Avalanche(System.UInt64 h64)
    // Offset: 0x508A1F4
    static uint64_t Avalanche(uint64_t h64);
    // static private System.UInt64 Mix2Acc(System.UInt64 acc0, System.UInt64 acc1, System.Byte* secret)
    // Offset: 0x508A214
    static uint64_t Mix2Acc(uint64_t acc0, uint64_t acc1, uint8_t* secret);
    // static System.UInt64 MergeAcc(System.UInt64* acc, System.Byte* secret, System.UInt64 start)
    // Offset: 0x508A244
    static uint64_t MergeAcc(uint64_t* acc, uint8_t* secret, uint64_t start);
    // static private System.Void DefaultHashLongInternalLoop(System.UInt64* acc, System.Byte* input, System.Byte* dest, System.Int64 length, System.Byte* secret, System.Int32 isHash64)
    // Offset: 0x508A340
    static void DefaultHashLongInternalLoop(uint64_t* acc, uint8_t* input, uint8_t* dest, int64_t length, uint8_t* secret, int isHash64);
    // static System.Void DefaultAccumulate(System.UInt64* acc, System.Byte* input, System.Byte* dest, System.Byte* secret, System.Int64 nbStripes, System.Int32 isHash64)
    // Offset: 0x508A4A8
    static void DefaultAccumulate(uint64_t* acc, uint8_t* input, uint8_t* dest, uint8_t* secret, int64_t nbStripes, int isHash64);
    // static System.Void DefaultAccumulate512(System.UInt64* acc, System.Byte* input, System.Byte* dest, System.Byte* secret, System.Int32 isHash64)
    // Offset: 0x508A564
    static void DefaultAccumulate512(uint64_t* acc, uint8_t* input, uint8_t* dest, uint8_t* secret, int isHash64);
    // static System.Void DefaultScrambleAcc(System.UInt64* acc, System.Byte* secret)
    // Offset: 0x508A530
    static void DefaultScrambleAcc(uint64_t* acc, uint8_t* secret);
    // static public System.UInt64 Hash64Long$BurstManaged(System.Byte* input, System.Byte* dest, System.Int64 length, System.Byte* secret)
    // Offset: 0x508A5B0
    static uint64_t Hash64Long$BurstManaged(uint8_t* input, uint8_t* dest, int64_t length, uint8_t* secret);
    // static public System.Void Hash128Long$BurstManaged(System.Byte* input, System.Byte* dest, System.Int64 length, System.Byte* secret, out Unity.Mathematics.uint4 result)
    // Offset: 0x508A6F8
    static void Hash128Long$BurstManaged(uint8_t* input, uint8_t* dest, int64_t length, uint8_t* secret, ByRef<::Unity::Mathematics::uint4> result);
  }; // Unity.Collections.xxHash3
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Unity::Collections::xxHash3::Avx2HashLongInternalLoop
// Il2CppName: Avx2HashLongInternalLoop
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t*, uint8_t*, uint8_t*, int64_t, uint8_t*, int)>(&Unity::Collections::xxHash3::Avx2HashLongInternalLoop)> {
  static const MethodInfo* get() {
    static auto* acc = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "UInt64"))->byval_arg;
    static auto* input = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* dest = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* secret = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* isHash64 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Collections::xxHash3*), "Avx2HashLongInternalLoop", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{acc, input, dest, length, secret, isHash64});
  }
};
// Writing MetadataGetter for method: Unity::Collections::xxHash3::Avx2ScrambleAcc
// Il2CppName: Avx2ScrambleAcc
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t*, uint8_t*)>(&Unity::Collections::xxHash3::Avx2ScrambleAcc)> {
  static const MethodInfo* get() {
    static auto* acc = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "UInt64"))->byval_arg;
    static auto* secret = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Collections::xxHash3*), "Avx2ScrambleAcc", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{acc, secret});
  }
};
// Writing MetadataGetter for method: Unity::Collections::xxHash3::Avx2Accumulate
// Il2CppName: Avx2Accumulate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t*, uint8_t*, uint8_t*, uint8_t*, int64_t, int)>(&Unity::Collections::xxHash3::Avx2Accumulate)> {
  static const MethodInfo* get() {
    static auto* acc = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "UInt64"))->byval_arg;
    static auto* input = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* dest = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* secret = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* nbStripes = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* isHash64 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Collections::xxHash3*), "Avx2Accumulate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{acc, input, dest, secret, nbStripes, isHash64});
  }
};
// Writing MetadataGetter for method: Unity::Collections::xxHash3::Avx2Accumulate512
// Il2CppName: Avx2Accumulate512
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t*, uint8_t*, uint8_t*, uint8_t*)>(&Unity::Collections::xxHash3::Avx2Accumulate512)> {
  static const MethodInfo* get() {
    static auto* acc = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "UInt64"))->byval_arg;
    static auto* input = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* dest = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* secret = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Collections::xxHash3*), "Avx2Accumulate512", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{acc, input, dest, secret});
  }
};
// Writing MetadataGetter for method: Unity::Collections::xxHash3::Hash64Long
// Il2CppName: Hash64Long
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint8_t*, uint8_t*, int64_t, uint8_t*)>(&Unity::Collections::xxHash3::Hash64Long)> {
  static const MethodInfo* get() {
    static auto* input = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* dest = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* secret = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Collections::xxHash3*), "Hash64Long", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{input, dest, length, secret});
  }
};
// Writing MetadataGetter for method: Unity::Collections::xxHash3::Hash128Long
// Il2CppName: Hash128Long
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint8_t*, uint8_t*, int64_t, uint8_t*, ByRef<::Unity::Mathematics::uint4>)>(&Unity::Collections::xxHash3::Hash128Long)> {
  static const MethodInfo* get() {
    static auto* input = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* dest = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* secret = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("Unity.Mathematics", "uint4")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Collections::xxHash3*), "Hash128Long", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{input, dest, length, secret, result});
  }
};
// Writing MetadataGetter for method: Unity::Collections::xxHash3::ToUint4
// Il2CppName: ToUint4
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Unity::Mathematics::uint4 (*)(uint64_t, uint64_t)>(&Unity::Collections::xxHash3::ToUint4)> {
  static const MethodInfo* get() {
    static auto* ul0 = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* ul1 = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Collections::xxHash3*), "ToUint4", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ul0, ul1});
  }
};
// Writing MetadataGetter for method: Unity::Collections::xxHash3::Read64LE
// Il2CppName: Read64LE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(void*)>(&Unity::Collections::xxHash3::Read64LE)> {
  static const MethodInfo* get() {
    static auto* addr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Void"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Collections::xxHash3*), "Read64LE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{addr});
  }
};
// Writing MetadataGetter for method: Unity::Collections::xxHash3::Write64LE
// Il2CppName: Write64LE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(void*, uint64_t)>(&Unity::Collections::xxHash3::Write64LE)> {
  static const MethodInfo* get() {
    static auto* addr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Void"))->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Collections::xxHash3*), "Write64LE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{addr, value});
  }
};
// Writing MetadataGetter for method: Unity::Collections::xxHash3::Mul32To64
// Il2CppName: Mul32To64
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint, uint)>(&Unity::Collections::xxHash3::Mul32To64)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* y = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Collections::xxHash3*), "Mul32To64", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x, y});
  }
};
// Writing MetadataGetter for method: Unity::Collections::xxHash3::XorShift64
// Il2CppName: XorShift64
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, int)>(&Unity::Collections::xxHash3::XorShift64)> {
  static const MethodInfo* get() {
    static auto* v64 = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* shift = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Collections::xxHash3*), "XorShift64", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{v64, shift});
  }
};
// Writing MetadataGetter for method: Unity::Collections::xxHash3::Mul128Fold64
// Il2CppName: Mul128Fold64
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, uint64_t)>(&Unity::Collections::xxHash3::Mul128Fold64)> {
  static const MethodInfo* get() {
    static auto* lhs = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* rhs = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Collections::xxHash3*), "Mul128Fold64", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{lhs, rhs});
  }
};
// Writing MetadataGetter for method: Unity::Collections::xxHash3::Avalanche
// Il2CppName: Avalanche
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Unity::Collections::xxHash3::Avalanche)> {
  static const MethodInfo* get() {
    static auto* h64 = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Collections::xxHash3*), "Avalanche", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{h64});
  }
};
// Writing MetadataGetter for method: Unity::Collections::xxHash3::Mix2Acc
// Il2CppName: Mix2Acc
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, uint64_t, uint8_t*)>(&Unity::Collections::xxHash3::Mix2Acc)> {
  static const MethodInfo* get() {
    static auto* acc0 = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* acc1 = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* secret = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Collections::xxHash3*), "Mix2Acc", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{acc0, acc1, secret});
  }
};
// Writing MetadataGetter for method: Unity::Collections::xxHash3::MergeAcc
// Il2CppName: MergeAcc
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t*, uint8_t*, uint64_t)>(&Unity::Collections::xxHash3::MergeAcc)> {
  static const MethodInfo* get() {
    static auto* acc = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "UInt64"))->byval_arg;
    static auto* secret = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* start = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Collections::xxHash3*), "MergeAcc", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{acc, secret, start});
  }
};
// Writing MetadataGetter for method: Unity::Collections::xxHash3::DefaultHashLongInternalLoop
// Il2CppName: DefaultHashLongInternalLoop
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t*, uint8_t*, uint8_t*, int64_t, uint8_t*, int)>(&Unity::Collections::xxHash3::DefaultHashLongInternalLoop)> {
  static const MethodInfo* get() {
    static auto* acc = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "UInt64"))->byval_arg;
    static auto* input = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* dest = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* secret = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* isHash64 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Collections::xxHash3*), "DefaultHashLongInternalLoop", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{acc, input, dest, length, secret, isHash64});
  }
};
// Writing MetadataGetter for method: Unity::Collections::xxHash3::DefaultAccumulate
// Il2CppName: DefaultAccumulate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t*, uint8_t*, uint8_t*, uint8_t*, int64_t, int)>(&Unity::Collections::xxHash3::DefaultAccumulate)> {
  static const MethodInfo* get() {
    static auto* acc = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "UInt64"))->byval_arg;
    static auto* input = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* dest = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* secret = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* nbStripes = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* isHash64 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Collections::xxHash3*), "DefaultAccumulate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{acc, input, dest, secret, nbStripes, isHash64});
  }
};
// Writing MetadataGetter for method: Unity::Collections::xxHash3::DefaultAccumulate512
// Il2CppName: DefaultAccumulate512
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t*, uint8_t*, uint8_t*, uint8_t*, int)>(&Unity::Collections::xxHash3::DefaultAccumulate512)> {
  static const MethodInfo* get() {
    static auto* acc = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "UInt64"))->byval_arg;
    static auto* input = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* dest = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* secret = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* isHash64 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Collections::xxHash3*), "DefaultAccumulate512", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{acc, input, dest, secret, isHash64});
  }
};
// Writing MetadataGetter for method: Unity::Collections::xxHash3::DefaultScrambleAcc
// Il2CppName: DefaultScrambleAcc
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t*, uint8_t*)>(&Unity::Collections::xxHash3::DefaultScrambleAcc)> {
  static const MethodInfo* get() {
    static auto* acc = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "UInt64"))->byval_arg;
    static auto* secret = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Collections::xxHash3*), "DefaultScrambleAcc", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{acc, secret});
  }
};
// Writing MetadataGetter for method: Unity::Collections::xxHash3::Hash64Long$BurstManaged
// Il2CppName: Hash64Long$BurstManaged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint8_t*, uint8_t*, int64_t, uint8_t*)>(&Unity::Collections::xxHash3::Hash64Long$BurstManaged)> {
  static const MethodInfo* get() {
    static auto* input = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* dest = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* secret = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Collections::xxHash3*), "Hash64Long$BurstManaged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{input, dest, length, secret});
  }
};
// Writing MetadataGetter for method: Unity::Collections::xxHash3::Hash128Long$BurstManaged
// Il2CppName: Hash128Long$BurstManaged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint8_t*, uint8_t*, int64_t, uint8_t*, ByRef<::Unity::Mathematics::uint4>)>(&Unity::Collections::xxHash3::Hash128Long$BurstManaged)> {
  static const MethodInfo* get() {
    static auto* input = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* dest = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* secret = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("Unity.Mathematics", "uint4")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Collections::xxHash3*), "Hash128Long$BurstManaged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{input, dest, length, secret, result});
  }
};
