// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: Unity.Jobs.IJob
#include "Unity/Jobs/IJob.hpp"
// Including type: Unity.Collections.NativeArrayDispose
#include "Unity/Collections/NativeArrayDispose.hpp"
// Completed includes
// Type namespace: Unity.Collections
namespace Unity::Collections {
  // Forward declaring type: NativeArrayDisposeJob
  struct NativeArrayDisposeJob;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Unity::Collections::NativeArrayDisposeJob, "Unity.Collections", "NativeArrayDisposeJob");
// Type namespace: Unity.Collections
namespace Unity::Collections {
  // Size: 0xC
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: Unity.Collections.NativeArrayDisposeJob
  // [TokenAttribute] Offset: FFFFFFFF
  // [NativeClassAttribute] Offset: FFFFFFFF
  struct NativeArrayDisposeJob/*, public ::System::ValueType, public ::Unity::Jobs::IJob*/ {
    public:
    public:
    // Unity.Collections.NativeArrayDispose Data
    // Size: 0xC
    // Offset: 0x0
    ::Unity::Collections::NativeArrayDispose Data;
    // Field size check
    static_assert(sizeof(::Unity::Collections::NativeArrayDispose) == 0xC);
    public:
    // Creating value type constructor for type: NativeArrayDisposeJob
    constexpr NativeArrayDisposeJob(::Unity::Collections::NativeArrayDispose Data_ = {}) noexcept : Data{Data_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::Unity::Jobs::IJob
    operator ::Unity::Jobs::IJob() noexcept {
      return *reinterpret_cast<::Unity::Jobs::IJob*>(this);
    }
    // Creating conversion operator: operator ::Unity::Collections::NativeArrayDispose
    constexpr operator ::Unity::Collections::NativeArrayDispose() const noexcept {
      return Data;
    }
    // Get instance field reference: Unity.Collections.NativeArrayDispose Data
    [[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArrayDispose& dyn_Data();
    // public System.Void Execute()
    // Offset: 0x5479554
    void Execute();
    // static System.Void RegisterNativeArrayDisposeJobReflectionData()
    // Offset: 0x5479598
    static void RegisterNativeArrayDisposeJobReflectionData();
  }; // Unity.Collections.NativeArrayDisposeJob
  #pragma pack(pop)
  static check_size<sizeof(NativeArrayDisposeJob), 0 + sizeof(::Unity::Collections::NativeArrayDispose)> __Unity_Collections_NativeArrayDisposeJobSizeCheck;
  static_assert(sizeof(NativeArrayDisposeJob) == 0xC);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Unity::Collections::NativeArrayDisposeJob::Execute
// Il2CppName: Execute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::Collections::NativeArrayDisposeJob::*)()>(&Unity::Collections::NativeArrayDisposeJob::Execute)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::Collections::NativeArrayDisposeJob), "Execute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::Collections::NativeArrayDisposeJob::RegisterNativeArrayDisposeJobReflectionData
// Il2CppName: RegisterNativeArrayDisposeJobReflectionData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Unity::Collections::NativeArrayDisposeJob::RegisterNativeArrayDisposeJobReflectionData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::Collections::NativeArrayDisposeJob), "RegisterNativeArrayDisposeJobReflectionData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
