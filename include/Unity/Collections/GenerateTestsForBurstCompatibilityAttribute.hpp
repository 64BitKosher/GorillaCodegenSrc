// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: Unity.Collections
namespace Unity::Collections {
  // Forward declaring type: GenerateTestsForBurstCompatibilityAttribute
  class GenerateTestsForBurstCompatibilityAttribute;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Unity::Collections::GenerateTestsForBurstCompatibilityAttribute);
DEFINE_IL2CPP_ARG_TYPE(::Unity::Collections::GenerateTestsForBurstCompatibilityAttribute*, "Unity.Collections", "GenerateTestsForBurstCompatibilityAttribute");
// Type namespace: Unity.Collections
namespace Unity::Collections {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: Unity.Collections.GenerateTestsForBurstCompatibilityAttribute
  // [TokenAttribute] Offset: FFFFFFFF
  // [AttributeUsageAttribute] Offset: FFFFFFFF
  class GenerateTestsForBurstCompatibilityAttribute : public ::System::Attribute {
    public:
    public:
    // private System.Type[] <GenericTypeArguments>k__BackingField
    // Size: 0x8
    // Offset: 0x10
    ::ArrayW<::System::Type*> GenericTypeArguments;
    // Field size check
    static_assert(sizeof(::ArrayW<::System::Type*>) == 0x8);
    public:
    // Creating conversion operator: operator ::ArrayW<::System::Type*>
    constexpr operator ::ArrayW<::System::Type*>() const noexcept {
      return GenericTypeArguments;
    }
    // Get instance field reference: private System.Type[] <GenericTypeArguments>k__BackingField
    [[deprecated("Use field access instead!")]] ::ArrayW<::System::Type*>& dyn_$GenericTypeArguments$k__BackingField();
    // public System.Void set_GenericTypeArguments(System.Type[] value)
    // Offset: 0x5087C7C
    void set_GenericTypeArguments(::ArrayW<::System::Type*> value);
    // public System.Void .ctor()
    // Offset: 0x5087C84
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GenerateTestsForBurstCompatibilityAttribute* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Collections::GenerateTestsForBurstCompatibilityAttribute::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GenerateTestsForBurstCompatibilityAttribute*, creationType>()));
    }
  }; // Unity.Collections.GenerateTestsForBurstCompatibilityAttribute
  #pragma pack(pop)
  static check_size<sizeof(GenerateTestsForBurstCompatibilityAttribute), 16 + sizeof(::ArrayW<::System::Type*>)> __Unity_Collections_GenerateTestsForBurstCompatibilityAttributeSizeCheck;
  static_assert(sizeof(GenerateTestsForBurstCompatibilityAttribute) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Unity::Collections::GenerateTestsForBurstCompatibilityAttribute::set_GenericTypeArguments
// Il2CppName: set_GenericTypeArguments
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::Collections::GenerateTestsForBurstCompatibilityAttribute::*)(::ArrayW<::System::Type*>)>(&Unity::Collections::GenerateTestsForBurstCompatibilityAttribute::set_GenericTypeArguments)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Type"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Collections::GenerateTestsForBurstCompatibilityAttribute*), "set_GenericTypeArguments", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Unity::Collections::GenerateTestsForBurstCompatibilityAttribute::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
