// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: Unity.Collections.FixedBytes16Align8
#include "Unity/Collections/FixedBytes16Align8.hpp"
// Completed includes
// Type namespace: Unity.Collections
namespace Unity::Collections {
  // Forward declaring type: FixedBytes64Align8
  struct FixedBytes64Align8;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Unity::Collections::FixedBytes64Align8, "Unity.Collections", "FixedBytes64Align8");
// Type namespace: Unity.Collections
namespace Unity::Collections {
  // Size: 0x40
  #pragma pack(push, 1)
  // WARNING Layout: Explicit may not be correctly taken into account!
  // Autogenerated type: Unity.Collections.FixedBytes64Align8
  // [TokenAttribute] Offset: FFFFFFFF
  // [GenerateTestsForBurstCompatibilityAttribute] Offset: FFFFFFFF
  struct FixedBytes64Align8/*, public ::System::ValueType*/ {
    public:
    public:
    // Unity.Collections.FixedBytes16Align8 offset0000
    // Size: 0x10
    // Offset: 0x0
    ::Unity::Collections::FixedBytes16Align8 offset0000;
    // Field size check
    static_assert(sizeof(::Unity::Collections::FixedBytes16Align8) == 0x10);
    // Unity.Collections.FixedBytes16Align8 offset0016
    // Size: 0x10
    // Offset: 0x10
    ::Unity::Collections::FixedBytes16Align8 offset0016;
    // Field size check
    static_assert(sizeof(::Unity::Collections::FixedBytes16Align8) == 0x10);
    // Unity.Collections.FixedBytes16Align8 offset0032
    // Size: 0x10
    // Offset: 0x20
    ::Unity::Collections::FixedBytes16Align8 offset0032;
    // Field size check
    static_assert(sizeof(::Unity::Collections::FixedBytes16Align8) == 0x10);
    // Unity.Collections.FixedBytes16Align8 offset0048
    // Size: 0x10
    // Offset: 0x30
    ::Unity::Collections::FixedBytes16Align8 offset0048;
    // Field size check
    static_assert(sizeof(::Unity::Collections::FixedBytes16Align8) == 0x10);
    public:
    // Creating value type constructor for type: FixedBytes64Align8
    constexpr FixedBytes64Align8(::Unity::Collections::FixedBytes16Align8 offset0000_ = {}, ::Unity::Collections::FixedBytes16Align8 offset0016_ = {}, ::Unity::Collections::FixedBytes16Align8 offset0032_ = {}, ::Unity::Collections::FixedBytes16Align8 offset0048_ = {}) noexcept : offset0000{offset0000_}, offset0016{offset0016_}, offset0032{offset0032_}, offset0048{offset0048_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: Unity.Collections.FixedBytes16Align8 offset0000
    [[deprecated("Use field access instead!")]] ::Unity::Collections::FixedBytes16Align8& dyn_offset0000();
    // Get instance field reference: Unity.Collections.FixedBytes16Align8 offset0016
    [[deprecated("Use field access instead!")]] ::Unity::Collections::FixedBytes16Align8& dyn_offset0016();
    // Get instance field reference: Unity.Collections.FixedBytes16Align8 offset0032
    [[deprecated("Use field access instead!")]] ::Unity::Collections::FixedBytes16Align8& dyn_offset0032();
    // Get instance field reference: Unity.Collections.FixedBytes16Align8 offset0048
    [[deprecated("Use field access instead!")]] ::Unity::Collections::FixedBytes16Align8& dyn_offset0048();
  }; // Unity.Collections.FixedBytes64Align8
  #pragma pack(pop)
  static check_size<sizeof(FixedBytes64Align8), 48 + sizeof(::Unity::Collections::FixedBytes16Align8)> __Unity_Collections_FixedBytes64Align8SizeCheck;
  static_assert(sizeof(FixedBytes64Align8) == 0x40);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
