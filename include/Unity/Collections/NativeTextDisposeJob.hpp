// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: Unity.Jobs.IJob
#include "Unity/Jobs/IJob.hpp"
// Including type: Unity.Collections.NativeTextDispose
#include "Unity/Collections/NativeTextDispose.hpp"
// Completed includes
// Type namespace: Unity.Collections
namespace Unity::Collections {
  // Forward declaring type: NativeTextDisposeJob
  struct NativeTextDisposeJob;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Unity::Collections::NativeTextDisposeJob, "Unity.Collections", "NativeTextDisposeJob");
// Type namespace: Unity.Collections
namespace Unity::Collections {
  // Size: 0x8
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: Unity.Collections.NativeTextDisposeJob
  // [TokenAttribute] Offset: FFFFFFFF
  // [BurstCompileAttribute] Offset: FFFFFFFF
  struct NativeTextDisposeJob/*, public ::System::ValueType, public ::Unity::Jobs::IJob*/ {
    public:
    public:
    // public Unity.Collections.NativeTextDispose Data
    // Size: 0x8
    // Offset: 0x0
    ::Unity::Collections::NativeTextDispose Data;
    // Field size check
    static_assert(sizeof(::Unity::Collections::NativeTextDispose) == 0x8);
    public:
    // Creating value type constructor for type: NativeTextDisposeJob
    constexpr NativeTextDisposeJob(::Unity::Collections::NativeTextDispose Data_ = {}) noexcept : Data{Data_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::Unity::Jobs::IJob
    operator ::Unity::Jobs::IJob() noexcept {
      return *reinterpret_cast<::Unity::Jobs::IJob*>(this);
    }
    // Creating conversion operator: operator ::Unity::Collections::NativeTextDispose
    constexpr operator ::Unity::Collections::NativeTextDispose() const noexcept {
      return Data;
    }
    // Get instance field reference: public Unity.Collections.NativeTextDispose Data
    [[deprecated("Use field access instead!")]] ::Unity::Collections::NativeTextDispose& dyn_Data();
    // public System.Void Execute()
    // Offset: 0x5088308
    void Execute();
  }; // Unity.Collections.NativeTextDisposeJob
  #pragma pack(pop)
  static check_size<sizeof(NativeTextDisposeJob), 0 + sizeof(::Unity::Collections::NativeTextDispose)> __Unity_Collections_NativeTextDisposeJobSizeCheck;
  static_assert(sizeof(NativeTextDisposeJob) == 0x8);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Unity::Collections::NativeTextDisposeJob::Execute
// Il2CppName: Execute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::Collections::NativeTextDisposeJob::*)()>(&Unity::Collections::NativeTextDisposeJob::Execute)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::Collections::NativeTextDisposeJob), "Execute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
