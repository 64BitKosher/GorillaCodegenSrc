// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include <stdint.h>
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Type namespace: Unity.Collections
namespace Unity::Collections {
  // Forward declaring type: FixedBytes16Align8
  struct FixedBytes16Align8;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Unity::Collections::FixedBytes16Align8, "Unity.Collections", "FixedBytes16Align8");
// Type namespace: Unity.Collections
namespace Unity::Collections {
  // Size: 0x10
  #pragma pack(push, 1)
  // WARNING Layout: Explicit may not be correctly taken into account!
  // Autogenerated type: Unity.Collections.FixedBytes16Align8
  // [TokenAttribute] Offset: FFFFFFFF
  // [GenerateTestsForBurstCompatibilityAttribute] Offset: FFFFFFFF
  struct FixedBytes16Align8/*, public ::System::ValueType*/ {
    public:
    public:
    // public System.UInt64 byte0000
    // Size: 0x8
    // Offset: 0x0
    uint64_t byte0000;
    // Field size check
    static_assert(sizeof(uint64_t) == 0x8);
    // public System.UInt64 byte0008
    // Size: 0x8
    // Offset: 0x8
    uint64_t byte0008;
    // Field size check
    static_assert(sizeof(uint64_t) == 0x8);
    public:
    // Creating value type constructor for type: FixedBytes16Align8
    constexpr FixedBytes16Align8(uint64_t byte0000_ = {}, uint64_t byte0008_ = {}) noexcept : byte0000{byte0000_}, byte0008{byte0008_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public System.UInt64 byte0000
    [[deprecated("Use field access instead!")]] uint64_t& dyn_byte0000();
    // Get instance field reference: public System.UInt64 byte0008
    [[deprecated("Use field access instead!")]] uint64_t& dyn_byte0008();
  }; // Unity.Collections.FixedBytes16Align8
  #pragma pack(pop)
  static check_size<sizeof(FixedBytes16Align8), 8 + sizeof(uint64_t)> __Unity_Collections_FixedBytes16Align8SizeCheck;
  static_assert(sizeof(FixedBytes16Align8) == 0x10);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
