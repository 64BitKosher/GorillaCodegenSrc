// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: Unity.Jobs.LowLevel.Unsafe
namespace Unity::Jobs::LowLevel::Unsafe {
  // Forward declaring type: ScheduleMode
  struct ScheduleMode;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Unity::Jobs::LowLevel::Unsafe::ScheduleMode, "Unity.Jobs.LowLevel.Unsafe", "ScheduleMode");
// Type namespace: Unity.Jobs.LowLevel.Unsafe
namespace Unity::Jobs::LowLevel::Unsafe {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: Unity.Jobs.LowLevel.Unsafe.ScheduleMode
  // [TokenAttribute] Offset: FFFFFFFF
  struct ScheduleMode/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: ScheduleMode
    constexpr ScheduleMode(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public Unity.Jobs.LowLevel.Unsafe.ScheduleMode Run
    static constexpr const int Run = 0;
    // Get static field: static public Unity.Jobs.LowLevel.Unsafe.ScheduleMode Run
    static ::Unity::Jobs::LowLevel::Unsafe::ScheduleMode _get_Run();
    // Set static field: static public Unity.Jobs.LowLevel.Unsafe.ScheduleMode Run
    static void _set_Run(::Unity::Jobs::LowLevel::Unsafe::ScheduleMode value);
    // static field const value: static public Unity.Jobs.LowLevel.Unsafe.ScheduleMode Batched
    static constexpr const int Batched = 1;
    // Get static field: static public Unity.Jobs.LowLevel.Unsafe.ScheduleMode Batched
    static ::Unity::Jobs::LowLevel::Unsafe::ScheduleMode _get_Batched();
    // Set static field: static public Unity.Jobs.LowLevel.Unsafe.ScheduleMode Batched
    static void _set_Batched(::Unity::Jobs::LowLevel::Unsafe::ScheduleMode value);
    // static field const value: static public Unity.Jobs.LowLevel.Unsafe.ScheduleMode Parallel
    static constexpr const int Parallel = 1;
    // Get static field: static public Unity.Jobs.LowLevel.Unsafe.ScheduleMode Parallel
    static ::Unity::Jobs::LowLevel::Unsafe::ScheduleMode _get_Parallel();
    // Set static field: static public Unity.Jobs.LowLevel.Unsafe.ScheduleMode Parallel
    static void _set_Parallel(::Unity::Jobs::LowLevel::Unsafe::ScheduleMode value);
    // static field const value: static public Unity.Jobs.LowLevel.Unsafe.ScheduleMode Single
    static constexpr const int Single = 2;
    // Get static field: static public Unity.Jobs.LowLevel.Unsafe.ScheduleMode Single
    static ::Unity::Jobs::LowLevel::Unsafe::ScheduleMode _get_Single();
    // Set static field: static public Unity.Jobs.LowLevel.Unsafe.ScheduleMode Single
    static void _set_Single(::Unity::Jobs::LowLevel::Unsafe::ScheduleMode value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // Unity.Jobs.LowLevel.Unsafe.ScheduleMode
  #pragma pack(pop)
  static check_size<sizeof(ScheduleMode), 0 + sizeof(int)> __Unity_Jobs_LowLevel_Unsafe_ScheduleModeSizeCheck;
  static_assert(sizeof(ScheduleMode) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
