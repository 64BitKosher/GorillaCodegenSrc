// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Unity::Jobs::LowLevel::Unsafe
namespace Unity::Jobs::LowLevel::Unsafe {
  // Forward declaring type: JobRanges
  struct JobRanges;
}
// Forward declaring namespace: Unity::Jobs
namespace Unity::Jobs {
  // Forward declaring type: JobHandle
  struct JobHandle;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IntPtr
  struct IntPtr;
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: Unity.Jobs.LowLevel.Unsafe
namespace Unity::Jobs::LowLevel::Unsafe {
  // Forward declaring type: JobsUtility
  class JobsUtility;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Unity::Jobs::LowLevel::Unsafe::JobsUtility);
DEFINE_IL2CPP_ARG_TYPE(::Unity::Jobs::LowLevel::Unsafe::JobsUtility*, "Unity.Jobs.LowLevel.Unsafe", "JobsUtility");
// Type namespace: Unity.Jobs.LowLevel.Unsafe
namespace Unity::Jobs::LowLevel::Unsafe {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Unity.Jobs.LowLevel.Unsafe.JobsUtility
  // [TokenAttribute] Offset: FFFFFFFF
  // [NativeTypeAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: FFFFFFFF
  class JobsUtility : public ::Il2CppObject {
    public:
    // Nested type: ::Unity::Jobs::LowLevel::Unsafe::JobsUtility::JobScheduleParameters
    struct JobScheduleParameters;
    // Nested type: ::Unity::Jobs::LowLevel::Unsafe::JobsUtility::PanicFunction_
    class PanicFunction_;
    // Get static field: static Unity.Jobs.LowLevel.Unsafe.JobsUtility/PanicFunction_ PanicFunction
    static ::Unity::Jobs::LowLevel::Unsafe::JobsUtility::PanicFunction_* _get_PanicFunction();
    // Set static field: static Unity.Jobs.LowLevel.Unsafe.JobsUtility/PanicFunction_ PanicFunction
    static void _set_PanicFunction(::Unity::Jobs::LowLevel::Unsafe::JobsUtility::PanicFunction_* value);
    // static public System.Void GetJobRange(ref Unity.Jobs.LowLevel.Unsafe.JobRanges ranges, System.Int32 jobIndex, out System.Int32 beginIndex, out System.Int32 endIndex)
    // Offset: 0x5477A84
    static void GetJobRange(ByRef<::Unity::Jobs::LowLevel::Unsafe::JobRanges> ranges, int jobIndex, ByRef<int> beginIndex, ByRef<int> endIndex);
    // static public System.Boolean GetWorkStealingRange(ref Unity.Jobs.LowLevel.Unsafe.JobRanges ranges, System.Int32 jobIndex, out System.Int32 beginIndex, out System.Int32 endIndex)
    // Offset: 0x5477ACC
    static bool GetWorkStealingRange(ByRef<::Unity::Jobs::LowLevel::Unsafe::JobRanges> ranges, int jobIndex, ByRef<int> beginIndex, ByRef<int> endIndex);
    // static public Unity.Jobs.JobHandle Schedule(ref Unity.Jobs.LowLevel.Unsafe.JobsUtility/JobScheduleParameters parameters)
    // Offset: 0x5477B28
    static ::Unity::Jobs::JobHandle Schedule(ByRef<::Unity::Jobs::LowLevel::Unsafe::JobsUtility::JobScheduleParameters> parameters);
    // static public Unity.Jobs.JobHandle ScheduleParallelFor(ref Unity.Jobs.LowLevel.Unsafe.JobsUtility/JobScheduleParameters parameters, System.Int32 arrayLength, System.Int32 innerloopBatchCount)
    // Offset: 0x5477BC0
    static ::Unity::Jobs::JobHandle ScheduleParallelFor(ByRef<::Unity::Jobs::LowLevel::Unsafe::JobsUtility::JobScheduleParameters> parameters, int arrayLength, int innerloopBatchCount);
    // static public Unity.Jobs.JobHandle ScheduleParallelForTransform(ref Unity.Jobs.LowLevel.Unsafe.JobsUtility/JobScheduleParameters parameters, System.IntPtr transfromAccesssArray)
    // Offset: 0x5477C88
    static ::Unity::Jobs::JobHandle ScheduleParallelForTransform(ByRef<::Unity::Jobs::LowLevel::Unsafe::JobsUtility::JobScheduleParameters> parameters, ::System::IntPtr transfromAccesssArray);
    // static private System.IntPtr CreateJobReflectionData(System.Type wrapperJobType, System.Type userJobType, System.Object managedJobFunction0, System.Object managedJobFunction1, System.Object managedJobFunction2)
    // Offset: 0x5477D38
    static ::System::IntPtr CreateJobReflectionData(::System::Type* wrapperJobType, ::System::Type* userJobType, ::Il2CppObject* managedJobFunction0, ::Il2CppObject* managedJobFunction1, ::Il2CppObject* managedJobFunction2);
    // static public System.IntPtr CreateJobReflectionData(System.Type type, System.Object managedJobFunction0, System.Object managedJobFunction1, System.Object managedJobFunction2)
    // Offset: 0x5477DA4
    static ::System::IntPtr CreateJobReflectionData(::System::Type* type, ::Il2CppObject* managedJobFunction0, ::Il2CppObject* managedJobFunction1, ::Il2CppObject* managedJobFunction2);
    // static public System.Boolean get_IsExecutingJob()
    // Offset: 0x5477E04
    static bool get_IsExecutingJob();
    // static public System.Void set_JobCompilerEnabled(System.Boolean value)
    // Offset: 0x5477E2C
    static void set_JobCompilerEnabled(bool value);
    // static public System.Int32 get_ThreadIndexCount()
    // Offset: 0x5477E68
    static int get_ThreadIndexCount();
    // static private System.Void InvokePanicFunction()
    // Offset: 0x5477E90
    static void InvokePanicFunction();
    // static private System.Void Schedule_Injected(ref Unity.Jobs.LowLevel.Unsafe.JobsUtility/JobScheduleParameters parameters, out Unity.Jobs.JobHandle ret)
    // Offset: 0x5477B7C
    static void Schedule_Injected(ByRef<::Unity::Jobs::LowLevel::Unsafe::JobsUtility::JobScheduleParameters> parameters, ByRef<::Unity::Jobs::JobHandle> ret);
    // static private System.Void ScheduleParallelFor_Injected(ref Unity.Jobs.LowLevel.Unsafe.JobsUtility/JobScheduleParameters parameters, System.Int32 arrayLength, System.Int32 innerloopBatchCount, out Unity.Jobs.JobHandle ret)
    // Offset: 0x5477C2C
    static void ScheduleParallelFor_Injected(ByRef<::Unity::Jobs::LowLevel::Unsafe::JobsUtility::JobScheduleParameters> parameters, int arrayLength, int innerloopBatchCount, ByRef<::Unity::Jobs::JobHandle> ret);
    // static private System.Void ScheduleParallelForTransform_Injected(ref Unity.Jobs.LowLevel.Unsafe.JobsUtility/JobScheduleParameters parameters, System.IntPtr transfromAccesssArray, out Unity.Jobs.JobHandle ret)
    // Offset: 0x5477CE4
    static void ScheduleParallelForTransform_Injected(ByRef<::Unity::Jobs::LowLevel::Unsafe::JobsUtility::JobScheduleParameters> parameters, ::System::IntPtr transfromAccesssArray, ByRef<::Unity::Jobs::JobHandle> ret);
  }; // Unity.Jobs.LowLevel.Unsafe.JobsUtility
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Unity::Jobs::LowLevel::Unsafe::JobsUtility::GetJobRange
// Il2CppName: GetJobRange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::Unity::Jobs::LowLevel::Unsafe::JobRanges>, int, ByRef<int>, ByRef<int>)>(&Unity::Jobs::LowLevel::Unsafe::JobsUtility::GetJobRange)> {
  static const MethodInfo* get() {
    static auto* ranges = &::il2cpp_utils::GetClassFromName("Unity.Jobs.LowLevel.Unsafe", "JobRanges")->this_arg;
    static auto* jobIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* beginIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* endIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Jobs::LowLevel::Unsafe::JobsUtility*), "GetJobRange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ranges, jobIndex, beginIndex, endIndex});
  }
};
// Writing MetadataGetter for method: Unity::Jobs::LowLevel::Unsafe::JobsUtility::GetWorkStealingRange
// Il2CppName: GetWorkStealingRange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::Unity::Jobs::LowLevel::Unsafe::JobRanges>, int, ByRef<int>, ByRef<int>)>(&Unity::Jobs::LowLevel::Unsafe::JobsUtility::GetWorkStealingRange)> {
  static const MethodInfo* get() {
    static auto* ranges = &::il2cpp_utils::GetClassFromName("Unity.Jobs.LowLevel.Unsafe", "JobRanges")->this_arg;
    static auto* jobIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* beginIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* endIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Jobs::LowLevel::Unsafe::JobsUtility*), "GetWorkStealingRange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ranges, jobIndex, beginIndex, endIndex});
  }
};
// Writing MetadataGetter for method: Unity::Jobs::LowLevel::Unsafe::JobsUtility::Schedule
// Il2CppName: Schedule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Unity::Jobs::JobHandle (*)(ByRef<::Unity::Jobs::LowLevel::Unsafe::JobsUtility::JobScheduleParameters>)>(&Unity::Jobs::LowLevel::Unsafe::JobsUtility::Schedule)> {
  static const MethodInfo* get() {
    static auto* parameters = &::il2cpp_utils::GetClassFromName("Unity.Jobs.LowLevel.Unsafe", "JobsUtility/JobScheduleParameters")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Jobs::LowLevel::Unsafe::JobsUtility*), "Schedule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parameters});
  }
};
// Writing MetadataGetter for method: Unity::Jobs::LowLevel::Unsafe::JobsUtility::ScheduleParallelFor
// Il2CppName: ScheduleParallelFor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Unity::Jobs::JobHandle (*)(ByRef<::Unity::Jobs::LowLevel::Unsafe::JobsUtility::JobScheduleParameters>, int, int)>(&Unity::Jobs::LowLevel::Unsafe::JobsUtility::ScheduleParallelFor)> {
  static const MethodInfo* get() {
    static auto* parameters = &::il2cpp_utils::GetClassFromName("Unity.Jobs.LowLevel.Unsafe", "JobsUtility/JobScheduleParameters")->this_arg;
    static auto* arrayLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* innerloopBatchCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Jobs::LowLevel::Unsafe::JobsUtility*), "ScheduleParallelFor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parameters, arrayLength, innerloopBatchCount});
  }
};
// Writing MetadataGetter for method: Unity::Jobs::LowLevel::Unsafe::JobsUtility::ScheduleParallelForTransform
// Il2CppName: ScheduleParallelForTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Unity::Jobs::JobHandle (*)(ByRef<::Unity::Jobs::LowLevel::Unsafe::JobsUtility::JobScheduleParameters>, ::System::IntPtr)>(&Unity::Jobs::LowLevel::Unsafe::JobsUtility::ScheduleParallelForTransform)> {
  static const MethodInfo* get() {
    static auto* parameters = &::il2cpp_utils::GetClassFromName("Unity.Jobs.LowLevel.Unsafe", "JobsUtility/JobScheduleParameters")->this_arg;
    static auto* transfromAccesssArray = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Jobs::LowLevel::Unsafe::JobsUtility*), "ScheduleParallelForTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parameters, transfromAccesssArray});
  }
};
// Writing MetadataGetter for method: Unity::Jobs::LowLevel::Unsafe::JobsUtility::CreateJobReflectionData
// Il2CppName: CreateJobReflectionData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::Type*, ::System::Type*, ::Il2CppObject*, ::Il2CppObject*, ::Il2CppObject*)>(&Unity::Jobs::LowLevel::Unsafe::JobsUtility::CreateJobReflectionData)> {
  static const MethodInfo* get() {
    static auto* wrapperJobType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* userJobType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* managedJobFunction0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* managedJobFunction1 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* managedJobFunction2 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Jobs::LowLevel::Unsafe::JobsUtility*), "CreateJobReflectionData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{wrapperJobType, userJobType, managedJobFunction0, managedJobFunction1, managedJobFunction2});
  }
};
// Writing MetadataGetter for method: Unity::Jobs::LowLevel::Unsafe::JobsUtility::CreateJobReflectionData
// Il2CppName: CreateJobReflectionData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::Type*, ::Il2CppObject*, ::Il2CppObject*, ::Il2CppObject*)>(&Unity::Jobs::LowLevel::Unsafe::JobsUtility::CreateJobReflectionData)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* managedJobFunction0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* managedJobFunction1 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* managedJobFunction2 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Jobs::LowLevel::Unsafe::JobsUtility*), "CreateJobReflectionData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type, managedJobFunction0, managedJobFunction1, managedJobFunction2});
  }
};
// Writing MetadataGetter for method: Unity::Jobs::LowLevel::Unsafe::JobsUtility::get_IsExecutingJob
// Il2CppName: get_IsExecutingJob
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&Unity::Jobs::LowLevel::Unsafe::JobsUtility::get_IsExecutingJob)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::Jobs::LowLevel::Unsafe::JobsUtility*), "get_IsExecutingJob", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::Jobs::LowLevel::Unsafe::JobsUtility::set_JobCompilerEnabled
// Il2CppName: set_JobCompilerEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&Unity::Jobs::LowLevel::Unsafe::JobsUtility::set_JobCompilerEnabled)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Jobs::LowLevel::Unsafe::JobsUtility*), "set_JobCompilerEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Unity::Jobs::LowLevel::Unsafe::JobsUtility::get_ThreadIndexCount
// Il2CppName: get_ThreadIndexCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&Unity::Jobs::LowLevel::Unsafe::JobsUtility::get_ThreadIndexCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::Jobs::LowLevel::Unsafe::JobsUtility*), "get_ThreadIndexCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::Jobs::LowLevel::Unsafe::JobsUtility::InvokePanicFunction
// Il2CppName: InvokePanicFunction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Unity::Jobs::LowLevel::Unsafe::JobsUtility::InvokePanicFunction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::Jobs::LowLevel::Unsafe::JobsUtility*), "InvokePanicFunction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::Jobs::LowLevel::Unsafe::JobsUtility::Schedule_Injected
// Il2CppName: Schedule_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::Unity::Jobs::LowLevel::Unsafe::JobsUtility::JobScheduleParameters>, ByRef<::Unity::Jobs::JobHandle>)>(&Unity::Jobs::LowLevel::Unsafe::JobsUtility::Schedule_Injected)> {
  static const MethodInfo* get() {
    static auto* parameters = &::il2cpp_utils::GetClassFromName("Unity.Jobs.LowLevel.Unsafe", "JobsUtility/JobScheduleParameters")->this_arg;
    static auto* ret = &::il2cpp_utils::GetClassFromName("Unity.Jobs", "JobHandle")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Jobs::LowLevel::Unsafe::JobsUtility*), "Schedule_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parameters, ret});
  }
};
// Writing MetadataGetter for method: Unity::Jobs::LowLevel::Unsafe::JobsUtility::ScheduleParallelFor_Injected
// Il2CppName: ScheduleParallelFor_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::Unity::Jobs::LowLevel::Unsafe::JobsUtility::JobScheduleParameters>, int, int, ByRef<::Unity::Jobs::JobHandle>)>(&Unity::Jobs::LowLevel::Unsafe::JobsUtility::ScheduleParallelFor_Injected)> {
  static const MethodInfo* get() {
    static auto* parameters = &::il2cpp_utils::GetClassFromName("Unity.Jobs.LowLevel.Unsafe", "JobsUtility/JobScheduleParameters")->this_arg;
    static auto* arrayLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* innerloopBatchCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* ret = &::il2cpp_utils::GetClassFromName("Unity.Jobs", "JobHandle")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Jobs::LowLevel::Unsafe::JobsUtility*), "ScheduleParallelFor_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parameters, arrayLength, innerloopBatchCount, ret});
  }
};
// Writing MetadataGetter for method: Unity::Jobs::LowLevel::Unsafe::JobsUtility::ScheduleParallelForTransform_Injected
// Il2CppName: ScheduleParallelForTransform_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::Unity::Jobs::LowLevel::Unsafe::JobsUtility::JobScheduleParameters>, ::System::IntPtr, ByRef<::Unity::Jobs::JobHandle>)>(&Unity::Jobs::LowLevel::Unsafe::JobsUtility::ScheduleParallelForTransform_Injected)> {
  static const MethodInfo* get() {
    static auto* parameters = &::il2cpp_utils::GetClassFromName("Unity.Jobs.LowLevel.Unsafe", "JobsUtility/JobScheduleParameters")->this_arg;
    static auto* transfromAccesssArray = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* ret = &::il2cpp_utils::GetClassFromName("Unity.Jobs", "JobHandle")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::Jobs::LowLevel::Unsafe::JobsUtility*), "ScheduleParallelForTransform_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parameters, transfromAccesssArray, ret});
  }
};
