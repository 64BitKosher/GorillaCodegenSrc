// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: Unity.Jobs.LowLevel.Unsafe
namespace Unity::Jobs::LowLevel::Unsafe {
  // Forward declaring type: BatchQueryJobStruct`1<T>
  template<typename T>
  struct BatchQueryJobStruct_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_STRUCT(::Unity::Jobs::LowLevel::Unsafe::BatchQueryJobStruct_1, "Unity.Jobs.LowLevel.Unsafe", "BatchQueryJobStruct`1");
// Type namespace: Unity.Jobs.LowLevel.Unsafe
namespace Unity::Jobs::LowLevel::Unsafe {
  // WARNING Size may be invalid!
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: Unity.Jobs.LowLevel.Unsafe.BatchQueryJobStruct`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename T>
  struct BatchQueryJobStruct_1/*, public ::System::ValueType*/ {
    public:
    // Creating value type constructor for type: BatchQueryJobStruct_1
    constexpr BatchQueryJobStruct_1() noexcept {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Autogenerated static field getter
    // Get static field: static System.IntPtr jobReflectionData
    static ::System::IntPtr _get_jobReflectionData() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Jobs::LowLevel::Unsafe::BatchQueryJobStruct_1::_get_jobReflectionData");
      return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<BatchQueryJobStruct_1<T>>::get(), "jobReflectionData"));
    }
    // Autogenerated static field setter
    // Set static field: static System.IntPtr jobReflectionData
    static void _set_jobReflectionData(::System::IntPtr value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Jobs::LowLevel::Unsafe::BatchQueryJobStruct_1::_set_jobReflectionData");
      THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<BatchQueryJobStruct_1<T>>::get(), "jobReflectionData", value));
    }
    // static public System.IntPtr Initialize()
    // Offset: 0xFFFFFFFFFFFFFFFF
    static ::System::IntPtr Initialize() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Jobs::LowLevel::Unsafe::BatchQueryJobStruct_1::Initialize");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<BatchQueryJobStruct_1<T>>::get(), "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
  }; // Unity.Jobs.LowLevel.Unsafe.BatchQueryJobStruct`1
  // Could not write size check! Type: Unity.Jobs.LowLevel.Unsafe.BatchQueryJobStruct`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
