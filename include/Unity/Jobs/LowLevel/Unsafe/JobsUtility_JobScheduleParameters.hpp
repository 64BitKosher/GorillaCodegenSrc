// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Unity.Jobs.LowLevel.Unsafe.JobsUtility
#include "Unity/Jobs/LowLevel/Unsafe/JobsUtility.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: Unity.Jobs.JobHandle
#include "Unity/Jobs/JobHandle.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Unity::Jobs::LowLevel::Unsafe
namespace Unity::Jobs::LowLevel::Unsafe {
  // Forward declaring type: ScheduleMode
  struct ScheduleMode;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Unity::Jobs::LowLevel::Unsafe::JobsUtility::JobScheduleParameters, "Unity.Jobs.LowLevel.Unsafe", "JobsUtility/JobScheduleParameters");
// Type namespace: Unity.Jobs.LowLevel.Unsafe
namespace Unity::Jobs::LowLevel::Unsafe {
  // Size: 0x28
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: Unity.Jobs.LowLevel.Unsafe.JobsUtility/JobScheduleParameters
  // [TokenAttribute] Offset: FFFFFFFF
  struct JobsUtility::JobScheduleParameters/*, public ::System::ValueType*/ {
    public:
    public:
    // public Unity.Jobs.JobHandle Dependency
    // Size: 0xC
    // Offset: 0x0
    ::Unity::Jobs::JobHandle Dependency;
    // Field size check
    static_assert(sizeof(::Unity::Jobs::JobHandle) == 0xC);
    // Padding between fields: Dependency and: ScheduleMode
    char __padding0[0x4] = {};
    // public System.Int32 ScheduleMode
    // Size: 0x4
    // Offset: 0x10
    int ScheduleMode;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: ScheduleMode and: ReflectionData
    char __padding1[0x4] = {};
    // public System.IntPtr ReflectionData
    // Size: 0x8
    // Offset: 0x18
    ::System::IntPtr ReflectionData;
    // Field size check
    static_assert(sizeof(::System::IntPtr) == 0x8);
    // public System.IntPtr JobDataPtr
    // Size: 0x8
    // Offset: 0x20
    ::System::IntPtr JobDataPtr;
    // Field size check
    static_assert(sizeof(::System::IntPtr) == 0x8);
    public:
    // Creating value type constructor for type: JobScheduleParameters
    constexpr JobScheduleParameters(::Unity::Jobs::JobHandle Dependency_ = {}, int ScheduleMode_ = {}, ::System::IntPtr ReflectionData_ = {}, ::System::IntPtr JobDataPtr_ = {}) noexcept : Dependency{Dependency_}, ScheduleMode{ScheduleMode_}, ReflectionData{ReflectionData_}, JobDataPtr{JobDataPtr_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public Unity.Jobs.JobHandle Dependency
    [[deprecated("Use field access instead!")]] ::Unity::Jobs::JobHandle& dyn_Dependency();
    // Get instance field reference: public System.Int32 ScheduleMode
    [[deprecated("Use field access instead!")]] int& dyn_ScheduleMode();
    // Get instance field reference: public System.IntPtr ReflectionData
    [[deprecated("Use field access instead!")]] ::System::IntPtr& dyn_ReflectionData();
    // Get instance field reference: public System.IntPtr JobDataPtr
    [[deprecated("Use field access instead!")]] ::System::IntPtr& dyn_JobDataPtr();
    // public System.Void .ctor(System.Void* i_jobData, System.IntPtr i_reflectionData, Unity.Jobs.JobHandle i_dependency, Unity.Jobs.LowLevel.Unsafe.ScheduleMode i_scheduleMode)
    // Offset: 0x5477EF4
    JobScheduleParameters(void* i_jobData, ::System::IntPtr i_reflectionData, ::Unity::Jobs::JobHandle i_dependency, ::Unity::Jobs::LowLevel::Unsafe::ScheduleMode i_scheduleMode);
  }; // Unity.Jobs.LowLevel.Unsafe.JobsUtility/JobScheduleParameters
  #pragma pack(pop)
  static check_size<sizeof(JobsUtility::JobScheduleParameters), 32 + sizeof(::System::IntPtr)> __Unity_Jobs_LowLevel_Unsafe_JobsUtility_JobScheduleParametersSizeCheck;
  static_assert(sizeof(JobsUtility::JobScheduleParameters) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Unity::Jobs::LowLevel::Unsafe::JobsUtility::JobScheduleParameters::JobScheduleParameters
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
