// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
}
// Completed forward declares
// Type namespace: emotitron.Compression
namespace emotitron::Compression {
  // Forward declaring type: ArraySerializeExt
  class ArraySerializeExt;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::emotitron::Compression::ArraySerializeExt);
DEFINE_IL2CPP_ARG_TYPE(::emotitron::Compression::ArraySerializeExt*, "emotitron.Compression", "ArraySerializeExt");
// Type namespace: emotitron.Compression
namespace emotitron::Compression {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: emotitron.Compression.ArraySerializeExt
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class ArraySerializeExt : public ::Il2CppObject {
    public:
    // static field const value: static private System.String bufferOverrunMsg
    static constexpr const char* bufferOverrunMsg = "Byte buffer length exceeded by write or read. Dataloss will occur. Likely due to a Read/Write mismatch.";
    // Get static field: static private System.String bufferOverrunMsg
    static ::StringW _get_bufferOverrunMsg();
    // Set static field: static private System.String bufferOverrunMsg
    static void _set_bufferOverrunMsg(::StringW value);
    // static public System.Void Zero(System.Byte[] buffer, System.Int32 startByte, System.Int32 endByte)
    // Offset: 0x28C57B0
    static void Zero(::ArrayW<uint8_t> buffer, int startByte, int endByte);
    // static public System.Void Zero(System.Byte[] buffer, System.Int32 startByte)
    // Offset: 0x28C57F0
    static void Zero(::ArrayW<uint8_t> buffer, int startByte);
    // static public System.Void Zero(System.Byte[] buffer)
    // Offset: 0x28C5850
    static void Zero(::ArrayW<uint8_t> buffer);
    // static public System.Void Zero(System.UInt16[] buffer, System.Int32 startByte, System.Int32 endByte)
    // Offset: 0x28C5898
    static void Zero(::ArrayW<uint16_t> buffer, int startByte, int endByte);
    // static public System.Void Zero(System.UInt16[] buffer, System.Int32 startByte)
    // Offset: 0x28C58D8
    static void Zero(::ArrayW<uint16_t> buffer, int startByte);
    // static public System.Void Zero(System.UInt16[] buffer)
    // Offset: 0x28C5924
    static void Zero(::ArrayW<uint16_t> buffer);
    // static public System.Void Zero(System.UInt32[] buffer, System.Int32 startByte, System.Int32 endByte)
    // Offset: 0x28C599C
    static void Zero(::ArrayW<uint> buffer, int startByte, int endByte);
    // static public System.Void Zero(System.UInt32[] buffer, System.Int32 startByte)
    // Offset: 0x28C59DC
    static void Zero(::ArrayW<uint> buffer, int startByte);
    // static public System.Void Zero(System.UInt32[] buffer)
    // Offset: 0x28C5A28
    static void Zero(::ArrayW<uint> buffer);
    // static public System.Void Zero(System.UInt64[] buffer, System.Int32 startByte, System.Int32 endByte)
    // Offset: 0x28C5AA0
    static void Zero(::ArrayW<uint64_t> buffer, int startByte, int endByte);
    // static public System.Void Zero(System.UInt64[] buffer, System.Int32 startByte)
    // Offset: 0x28C5AE0
    static void Zero(::ArrayW<uint64_t> buffer, int startByte);
    // static public System.Void Zero(System.UInt64[] buffer)
    // Offset: 0x28C5B40
    static void Zero(::ArrayW<uint64_t> buffer);
    // static public System.Void WriteSigned(System.Byte[] buffer, System.Int32 value, ref System.Int32 bitposition, System.Int32 bits)
    // Offset: 0x28C5B88
    static void WriteSigned(::ArrayW<uint8_t> buffer, int value, ByRef<int> bitposition, int bits);
    // static public System.Void WriteSigned(System.UInt32[] buffer, System.Int32 value, ref System.Int32 bitposition, System.Int32 bits)
    // Offset: 0x28C5B94
    static void WriteSigned(::ArrayW<uint> buffer, int value, ByRef<int> bitposition, int bits);
    // static public System.Void WriteSigned(System.UInt64[] buffer, System.Int32 value, ref System.Int32 bitposition, System.Int32 bits)
    // Offset: 0x28C5BA0
    static void WriteSigned(::ArrayW<uint64_t> buffer, int value, ByRef<int> bitposition, int bits);
    // static public System.Void WriteSigned(System.Byte[] buffer, System.Int64 value, ref System.Int32 bitposition, System.Int32 bits)
    // Offset: 0x28C5BAC
    static void WriteSigned(::ArrayW<uint8_t> buffer, int64_t value, ByRef<int> bitposition, int bits);
    // static public System.Void WriteSigned(System.UInt32[] buffer, System.Int64 value, ref System.Int32 bitposition, System.Int32 bits)
    // Offset: 0x28C5BB8
    static void WriteSigned(::ArrayW<uint> buffer, int64_t value, ByRef<int> bitposition, int bits);
    // static public System.Void WriteSigned(System.UInt64[] buffer, System.Int64 value, ref System.Int32 bitposition, System.Int32 bits)
    // Offset: 0x28C5BC4
    static void WriteSigned(::ArrayW<uint64_t> buffer, int64_t value, ByRef<int> bitposition, int bits);
    // static public System.Int32 ReadSigned(System.Byte[] buffer, ref System.Int32 bitposition, System.Int32 bits)
    // Offset: 0x28C5BD0
    static int ReadSigned(::ArrayW<uint8_t> buffer, ByRef<int> bitposition, int bits);
    // static public System.Int32 ReadSigned(System.UInt32[] buffer, ref System.Int32 bitposition, System.Int32 bits)
    // Offset: 0x28C5BEC
    static int ReadSigned(::ArrayW<uint> buffer, ByRef<int> bitposition, int bits);
    // static public System.Int32 ReadSigned(System.UInt64[] buffer, ref System.Int32 bitposition, System.Int32 bits)
    // Offset: 0x28C5C08
    static int ReadSigned(::ArrayW<uint64_t> buffer, ByRef<int> bitposition, int bits);
    // static public System.Int64 ReadSigned64(System.Byte[] buffer, ref System.Int32 bitposition, System.Int32 bits)
    // Offset: 0x28C5C24
    static int64_t ReadSigned64(::ArrayW<uint8_t> buffer, ByRef<int> bitposition, int bits);
    // static public System.Int64 ReadSigned64(System.UInt32[] buffer, ref System.Int32 bitposition, System.Int32 bits)
    // Offset: 0x28C5C40
    static int64_t ReadSigned64(::ArrayW<uint> buffer, ByRef<int> bitposition, int bits);
    // static public System.Int64 ReadSigned64(System.UInt64[] buffer, ref System.Int32 bitposition, System.Int32 bits)
    // Offset: 0x28C5C5C
    static int64_t ReadSigned64(::ArrayW<uint64_t> buffer, ByRef<int> bitposition, int bits);
    // static public System.Void WriteFloat(System.Byte[] buffer, System.Single value, ref System.Int32 bitposition)
    // Offset: 0x28C5C78
    static void WriteFloat(::ArrayW<uint8_t> buffer, float value, ByRef<int> bitposition);
    // static public System.Single ReadFloat(System.Byte[] buffer, ref System.Int32 bitposition)
    // Offset: 0x28C5C90
    static float ReadFloat(::ArrayW<uint8_t> buffer, ByRef<int> bitposition);
    // static public System.Void Append(System.Byte[] buffer, System.UInt64 value, ref System.Int32 bitposition, System.Int32 bits)
    // Offset: 0x28C4D98
    static void Append(::ArrayW<uint8_t> buffer, uint64_t value, ByRef<int> bitposition, int bits);
    // static public System.Void Append(System.UInt32[] buffer, System.UInt64 value, ref System.Int32 bitposition, System.Int32 bits)
    // Offset: 0x28C4EC8
    static void Append(::ArrayW<uint> buffer, uint64_t value, ByRef<int> bitposition, int bits);
    // static public System.Void Append(System.UInt32[] buffer, System.UInt32 value, ref System.Int32 bitposition, System.Int32 bits)
    // Offset: 0x28C5CAC
    static void Append(::ArrayW<uint> buffer, uint value, ByRef<int> bitposition, int bits);
    // static public System.Void Append(System.UInt64[] buffer, System.UInt64 value, ref System.Int32 bitposition, System.Int32 bits)
    // Offset: 0x28C4FF4
    static void Append(::ArrayW<uint64_t> buffer, uint64_t value, ByRef<int> bitposition, int bits);
    // static public System.Void Write(System.Byte[] buffer, System.UInt64 value, ref System.Int32 bitposition, System.Int32 bits)
    // Offset: 0x28C3E1C
    static void Write(::ArrayW<uint8_t> buffer, uint64_t value, ByRef<int> bitposition, int bits);
    // static public System.Void Write(System.UInt32[] buffer, System.UInt64 value, ref System.Int32 bitposition, System.Int32 bits)
    // Offset: 0x28C3CA8
    static void Write(::ArrayW<uint> buffer, uint64_t value, ByRef<int> bitposition, int bits);
    // static public System.Void Write(System.UInt64[] buffer, System.UInt64 value, ref System.Int32 bitposition, System.Int32 bits)
    // Offset: 0x28C3B30
    static void Write(::ArrayW<uint64_t> buffer, uint64_t value, ByRef<int> bitposition, int bits);
    // static public System.Void WriteBool(System.UInt64[] buffer, System.Boolean b, ref System.Int32 bitposition)
    // Offset: 0x28C5D30
    static void WriteBool(::ArrayW<uint64_t> buffer, bool b, ByRef<int> bitposition);
    // static public System.Void WriteBool(System.UInt32[] buffer, System.Boolean b, ref System.Int32 bitposition)
    // Offset: 0x28C5D3C
    static void WriteBool(::ArrayW<uint> buffer, bool b, ByRef<int> bitposition);
    // static public System.Void WriteBool(System.Byte[] buffer, System.Boolean b, ref System.Int32 bitposition)
    // Offset: 0x28C5D48
    static void WriteBool(::ArrayW<uint8_t> buffer, bool b, ByRef<int> bitposition);
    // static public System.UInt64 Read(System.Byte[] buffer, ref System.Int32 bitposition, System.Int32 bits)
    // Offset: 0x28C4334
    static uint64_t Read(::ArrayW<uint8_t> buffer, ByRef<int> bitposition, int bits);
    // static public System.UInt64 Read(System.UInt32[] buffer, ref System.Int32 bitposition, System.Int32 bits)
    // Offset: 0x28C41FC
    static uint64_t Read(::ArrayW<uint> buffer, ByRef<int> bitposition, int bits);
    // static public System.UInt64 Read(System.UInt64[] buffer, ref System.Int32 bitposition, System.Int32 bits)
    // Offset: 0x28C40BC
    static uint64_t Read(::ArrayW<uint64_t> buffer, ByRef<int> bitposition, int bits);
    // static public System.UInt64 ReadUInt64(System.Byte[] buffer, ref System.Int32 bitposition, System.Int32 bits)
    // Offset: 0x28C5D54
    static uint64_t ReadUInt64(::ArrayW<uint8_t> buffer, ByRef<int> bitposition, int bits);
    // static public System.UInt64 ReadUInt64(System.UInt32[] buffer, ref System.Int32 bitposition, System.Int32 bits)
    // Offset: 0x28C5D58
    static uint64_t ReadUInt64(::ArrayW<uint> buffer, ByRef<int> bitposition, int bits);
    // static public System.UInt64 ReadUInt64(System.UInt64[] buffer, ref System.Int32 bitposition, System.Int32 bits)
    // Offset: 0x28C5D5C
    static uint64_t ReadUInt64(::ArrayW<uint64_t> buffer, ByRef<int> bitposition, int bits);
    // static public System.UInt32 ReadUInt32(System.Byte[] buffer, ref System.Int32 bitposition, System.Int32 bits)
    // Offset: 0x28C5D60
    static uint ReadUInt32(::ArrayW<uint8_t> buffer, ByRef<int> bitposition, int bits);
    // static public System.UInt32 ReadUInt32(System.UInt32[] buffer, ref System.Int32 bitposition, System.Int32 bits)
    // Offset: 0x28C5D70
    static uint ReadUInt32(::ArrayW<uint> buffer, ByRef<int> bitposition, int bits);
    // static public System.UInt32 ReadUInt32(System.UInt64[] buffer, ref System.Int32 bitposition, System.Int32 bits)
    // Offset: 0x28C5D80
    static uint ReadUInt32(::ArrayW<uint64_t> buffer, ByRef<int> bitposition, int bits);
    // static public System.UInt16 ReadUInt16(System.Byte[] buffer, ref System.Int32 bitposition, System.Int32 bits)
    // Offset: 0x28C5D90
    static uint16_t ReadUInt16(::ArrayW<uint8_t> buffer, ByRef<int> bitposition, int bits);
    // static public System.UInt16 ReadUInt16(System.UInt32[] buffer, ref System.Int32 bitposition, System.Int32 bits)
    // Offset: 0x28C5DA0
    static uint16_t ReadUInt16(::ArrayW<uint> buffer, ByRef<int> bitposition, int bits);
    // static public System.UInt16 ReadUInt16(System.UInt64[] buffer, ref System.Int32 bitposition, System.Int32 bits)
    // Offset: 0x28C5DB0
    static uint16_t ReadUInt16(::ArrayW<uint64_t> buffer, ByRef<int> bitposition, int bits);
    // static public System.Byte ReadByte(System.Byte[] buffer, ref System.Int32 bitposition, System.Int32 bits)
    // Offset: 0x28C5DC0
    static uint8_t ReadByte(::ArrayW<uint8_t> buffer, ByRef<int> bitposition, int bits);
    // static public System.Byte ReadByte(System.UInt32[] buffer, ref System.Int32 bitposition, System.Int32 bits)
    // Offset: 0x28C5DD0
    static uint8_t ReadByte(::ArrayW<uint> buffer, ByRef<int> bitposition, int bits);
    // static public System.Byte ReadByte(System.UInt64[] buffer, ref System.Int32 bitposition, System.Int32 bits)
    // Offset: 0x28C5DE0
    static uint8_t ReadByte(::ArrayW<uint64_t> buffer, ByRef<int> bitposition, int bits);
    // static public System.Boolean ReadBool(System.UInt64[] buffer, ref System.Int32 bitposition)
    // Offset: 0x28C5DF0
    static bool ReadBool(::ArrayW<uint64_t> buffer, ByRef<int> bitposition);
    // static public System.Boolean ReadBool(System.UInt32[] buffer, ref System.Int32 bitposition)
    // Offset: 0x28C5E0C
    static bool ReadBool(::ArrayW<uint> buffer, ByRef<int> bitposition);
    // static public System.Boolean ReadBool(System.Byte[] buffer, ref System.Int32 bitposition)
    // Offset: 0x28C5E28
    static bool ReadBool(::ArrayW<uint8_t> buffer, ByRef<int> bitposition);
    // static public System.Char ReadChar(System.UInt64[] buffer, ref System.Int32 bitposition)
    // Offset: 0x28C5E44
    static ::Il2CppChar ReadChar(::ArrayW<uint64_t> buffer, ByRef<int> bitposition);
    // static public System.Char ReadChar(System.UInt32[] buffer, ref System.Int32 bitposition)
    // Offset: 0x28C5E58
    static ::Il2CppChar ReadChar(::ArrayW<uint> buffer, ByRef<int> bitposition);
    // static public System.Char ReadChar(System.Byte[] buffer, ref System.Int32 bitposition)
    // Offset: 0x28C5E6C
    static ::Il2CppChar ReadChar(::ArrayW<uint8_t> buffer, ByRef<int> bitposition);
    // static public System.Void ReadOutSafe(System.UInt64[] source, System.Int32 srcStartPos, System.Byte[] target, ref System.Int32 bitposition, System.Int32 bits)
    // Offset: 0x28C561C
    static void ReadOutSafe(::ArrayW<uint64_t> source, int srcStartPos, ::ArrayW<uint8_t> target, ByRef<int> bitposition, int bits);
    // static public System.Void ReadOutSafe(System.UInt64[] source, System.Int32 srcStartPos, System.UInt64[] target, ref System.Int32 bitposition, System.Int32 bits)
    // Offset: 0x28C5730
    static void ReadOutSafe(::ArrayW<uint64_t> source, int srcStartPos, ::ArrayW<uint64_t> target, ByRef<int> bitposition, int bits);
    // static public System.Void ReadOutSafe(System.Byte[] source, System.Int32 srcStartPos, System.UInt64[] target, ref System.Int32 bitposition, System.Int32 bits)
    // Offset: 0x28C5520
    static void ReadOutSafe(::ArrayW<uint8_t> source, int srcStartPos, ::ArrayW<uint64_t> target, ByRef<int> bitposition, int bits);
    // static public System.Void ReadOutSafe(System.Byte[] source, System.Int32 srcStartPos, System.Byte[] target, ref System.Int32 bitposition, System.Int32 bits)
    // Offset: 0x28C5424
    static void ReadOutSafe(::ArrayW<uint8_t> source, int srcStartPos, ::ArrayW<uint8_t> target, ByRef<int> bitposition, int bits);
    // static public System.UInt64 IndexAsUInt64(System.Byte[] buffer, System.Int32 index)
    // Offset: 0x28C5E80
    static uint64_t IndexAsUInt64(::ArrayW<uint8_t> buffer, int index);
    // static public System.UInt64 IndexAsUInt64(System.UInt32[] buffer, System.Int32 index)
    // Offset: 0x28C5F5C
    static uint64_t IndexAsUInt64(::ArrayW<uint> buffer, int index);
    // static public System.UInt32 IndexAsUInt32(System.Byte[] buffer, System.Int32 index)
    // Offset: 0x28C5FA4
    static uint IndexAsUInt32(::ArrayW<uint8_t> buffer, int index);
    // static public System.UInt32 IndexAsUInt32(System.UInt64[] buffer, System.Int32 index)
    // Offset: 0x28C6020
    static uint IndexAsUInt32(::ArrayW<uint64_t> buffer, int index);
    // static public System.Byte IndexAsUInt8(System.UInt64[] buffer, System.Int32 index)
    // Offset: 0x28C605C
    static uint8_t IndexAsUInt8(::ArrayW<uint64_t> buffer, int index);
    // static public System.Byte IndexAsUInt8(System.UInt32[] buffer, System.Int32 index)
    // Offset: 0x28C6094
    static uint8_t IndexAsUInt8(::ArrayW<uint> buffer, int index);
  }; // emotitron.Compression.ArraySerializeExt
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::Zero
// Il2CppName: Zero
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<uint8_t>, int, int)>(&emotitron::Compression::ArraySerializeExt::Zero)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* startByte = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* endByte = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "Zero", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, startByte, endByte});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::Zero
// Il2CppName: Zero
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<uint8_t>, int)>(&emotitron::Compression::ArraySerializeExt::Zero)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* startByte = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "Zero", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, startByte});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::Zero
// Il2CppName: Zero
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<uint8_t>)>(&emotitron::Compression::ArraySerializeExt::Zero)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "Zero", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::Zero
// Il2CppName: Zero
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<uint16_t>, int, int)>(&emotitron::Compression::ArraySerializeExt::Zero)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt16"), 1)->byval_arg;
    static auto* startByte = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* endByte = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "Zero", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, startByte, endByte});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::Zero
// Il2CppName: Zero
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<uint16_t>, int)>(&emotitron::Compression::ArraySerializeExt::Zero)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt16"), 1)->byval_arg;
    static auto* startByte = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "Zero", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, startByte});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::Zero
// Il2CppName: Zero
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<uint16_t>)>(&emotitron::Compression::ArraySerializeExt::Zero)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt16"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "Zero", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::Zero
// Il2CppName: Zero
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<uint>, int, int)>(&emotitron::Compression::ArraySerializeExt::Zero)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt32"), 1)->byval_arg;
    static auto* startByte = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* endByte = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "Zero", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, startByte, endByte});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::Zero
// Il2CppName: Zero
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<uint>, int)>(&emotitron::Compression::ArraySerializeExt::Zero)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt32"), 1)->byval_arg;
    static auto* startByte = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "Zero", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, startByte});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::Zero
// Il2CppName: Zero
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<uint>)>(&emotitron::Compression::ArraySerializeExt::Zero)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt32"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "Zero", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::Zero
// Il2CppName: Zero
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<uint64_t>, int, int)>(&emotitron::Compression::ArraySerializeExt::Zero)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt64"), 1)->byval_arg;
    static auto* startByte = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* endByte = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "Zero", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, startByte, endByte});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::Zero
// Il2CppName: Zero
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<uint64_t>, int)>(&emotitron::Compression::ArraySerializeExt::Zero)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt64"), 1)->byval_arg;
    static auto* startByte = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "Zero", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, startByte});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::Zero
// Il2CppName: Zero
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<uint64_t>)>(&emotitron::Compression::ArraySerializeExt::Zero)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt64"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "Zero", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::WriteSigned
// Il2CppName: WriteSigned
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<uint8_t>, int, ByRef<int>, int)>(&emotitron::Compression::ArraySerializeExt::WriteSigned)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* bitposition = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "WriteSigned", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, value, bitposition, bits});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::WriteSigned
// Il2CppName: WriteSigned
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<uint>, int, ByRef<int>, int)>(&emotitron::Compression::ArraySerializeExt::WriteSigned)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt32"), 1)->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* bitposition = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "WriteSigned", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, value, bitposition, bits});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::WriteSigned
// Il2CppName: WriteSigned
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<uint64_t>, int, ByRef<int>, int)>(&emotitron::Compression::ArraySerializeExt::WriteSigned)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt64"), 1)->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* bitposition = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "WriteSigned", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, value, bitposition, bits});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::WriteSigned
// Il2CppName: WriteSigned
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<uint8_t>, int64_t, ByRef<int>, int)>(&emotitron::Compression::ArraySerializeExt::WriteSigned)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* bitposition = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "WriteSigned", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, value, bitposition, bits});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::WriteSigned
// Il2CppName: WriteSigned
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<uint>, int64_t, ByRef<int>, int)>(&emotitron::Compression::ArraySerializeExt::WriteSigned)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt32"), 1)->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* bitposition = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "WriteSigned", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, value, bitposition, bits});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::WriteSigned
// Il2CppName: WriteSigned
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<uint64_t>, int64_t, ByRef<int>, int)>(&emotitron::Compression::ArraySerializeExt::WriteSigned)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt64"), 1)->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* bitposition = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "WriteSigned", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, value, bitposition, bits});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::ReadSigned
// Il2CppName: ReadSigned
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::ArrayW<uint8_t>, ByRef<int>, int)>(&emotitron::Compression::ArraySerializeExt::ReadSigned)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* bitposition = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "ReadSigned", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, bitposition, bits});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::ReadSigned
// Il2CppName: ReadSigned
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::ArrayW<uint>, ByRef<int>, int)>(&emotitron::Compression::ArraySerializeExt::ReadSigned)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt32"), 1)->byval_arg;
    static auto* bitposition = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "ReadSigned", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, bitposition, bits});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::ReadSigned
// Il2CppName: ReadSigned
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::ArrayW<uint64_t>, ByRef<int>, int)>(&emotitron::Compression::ArraySerializeExt::ReadSigned)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt64"), 1)->byval_arg;
    static auto* bitposition = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "ReadSigned", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, bitposition, bits});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::ReadSigned64
// Il2CppName: ReadSigned64
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (*)(::ArrayW<uint8_t>, ByRef<int>, int)>(&emotitron::Compression::ArraySerializeExt::ReadSigned64)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* bitposition = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "ReadSigned64", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, bitposition, bits});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::ReadSigned64
// Il2CppName: ReadSigned64
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (*)(::ArrayW<uint>, ByRef<int>, int)>(&emotitron::Compression::ArraySerializeExt::ReadSigned64)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt32"), 1)->byval_arg;
    static auto* bitposition = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "ReadSigned64", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, bitposition, bits});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::ReadSigned64
// Il2CppName: ReadSigned64
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (*)(::ArrayW<uint64_t>, ByRef<int>, int)>(&emotitron::Compression::ArraySerializeExt::ReadSigned64)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt64"), 1)->byval_arg;
    static auto* bitposition = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "ReadSigned64", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, bitposition, bits});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::WriteFloat
// Il2CppName: WriteFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<uint8_t>, float, ByRef<int>)>(&emotitron::Compression::ArraySerializeExt::WriteFloat)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* bitposition = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "WriteFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, value, bitposition});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::ReadFloat
// Il2CppName: ReadFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(::ArrayW<uint8_t>, ByRef<int>)>(&emotitron::Compression::ArraySerializeExt::ReadFloat)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* bitposition = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "ReadFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, bitposition});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::Append
// Il2CppName: Append
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<uint8_t>, uint64_t, ByRef<int>, int)>(&emotitron::Compression::ArraySerializeExt::Append)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* bitposition = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "Append", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, value, bitposition, bits});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::Append
// Il2CppName: Append
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<uint>, uint64_t, ByRef<int>, int)>(&emotitron::Compression::ArraySerializeExt::Append)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt32"), 1)->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* bitposition = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "Append", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, value, bitposition, bits});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::Append
// Il2CppName: Append
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<uint>, uint, ByRef<int>, int)>(&emotitron::Compression::ArraySerializeExt::Append)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt32"), 1)->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* bitposition = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "Append", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, value, bitposition, bits});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::Append
// Il2CppName: Append
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<uint64_t>, uint64_t, ByRef<int>, int)>(&emotitron::Compression::ArraySerializeExt::Append)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt64"), 1)->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* bitposition = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "Append", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, value, bitposition, bits});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::Write
// Il2CppName: Write
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<uint8_t>, uint64_t, ByRef<int>, int)>(&emotitron::Compression::ArraySerializeExt::Write)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* bitposition = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "Write", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, value, bitposition, bits});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::Write
// Il2CppName: Write
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<uint>, uint64_t, ByRef<int>, int)>(&emotitron::Compression::ArraySerializeExt::Write)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt32"), 1)->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* bitposition = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "Write", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, value, bitposition, bits});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::Write
// Il2CppName: Write
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<uint64_t>, uint64_t, ByRef<int>, int)>(&emotitron::Compression::ArraySerializeExt::Write)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt64"), 1)->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* bitposition = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "Write", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, value, bitposition, bits});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::WriteBool
// Il2CppName: WriteBool
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<uint64_t>, bool, ByRef<int>)>(&emotitron::Compression::ArraySerializeExt::WriteBool)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt64"), 1)->byval_arg;
    static auto* b = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* bitposition = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "WriteBool", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, b, bitposition});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::WriteBool
// Il2CppName: WriteBool
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<uint>, bool, ByRef<int>)>(&emotitron::Compression::ArraySerializeExt::WriteBool)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt32"), 1)->byval_arg;
    static auto* b = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* bitposition = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "WriteBool", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, b, bitposition});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::WriteBool
// Il2CppName: WriteBool
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<uint8_t>, bool, ByRef<int>)>(&emotitron::Compression::ArraySerializeExt::WriteBool)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* b = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* bitposition = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "WriteBool", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, b, bitposition});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::Read
// Il2CppName: Read
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::ArrayW<uint8_t>, ByRef<int>, int)>(&emotitron::Compression::ArraySerializeExt::Read)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* bitposition = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "Read", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, bitposition, bits});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::Read
// Il2CppName: Read
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::ArrayW<uint>, ByRef<int>, int)>(&emotitron::Compression::ArraySerializeExt::Read)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt32"), 1)->byval_arg;
    static auto* bitposition = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "Read", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, bitposition, bits});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::Read
// Il2CppName: Read
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::ArrayW<uint64_t>, ByRef<int>, int)>(&emotitron::Compression::ArraySerializeExt::Read)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt64"), 1)->byval_arg;
    static auto* bitposition = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "Read", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, bitposition, bits});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::ReadUInt64
// Il2CppName: ReadUInt64
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::ArrayW<uint8_t>, ByRef<int>, int)>(&emotitron::Compression::ArraySerializeExt::ReadUInt64)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* bitposition = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "ReadUInt64", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, bitposition, bits});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::ReadUInt64
// Il2CppName: ReadUInt64
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::ArrayW<uint>, ByRef<int>, int)>(&emotitron::Compression::ArraySerializeExt::ReadUInt64)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt32"), 1)->byval_arg;
    static auto* bitposition = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "ReadUInt64", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, bitposition, bits});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::ReadUInt64
// Il2CppName: ReadUInt64
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::ArrayW<uint64_t>, ByRef<int>, int)>(&emotitron::Compression::ArraySerializeExt::ReadUInt64)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt64"), 1)->byval_arg;
    static auto* bitposition = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "ReadUInt64", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, bitposition, bits});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::ReadUInt32
// Il2CppName: ReadUInt32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(::ArrayW<uint8_t>, ByRef<int>, int)>(&emotitron::Compression::ArraySerializeExt::ReadUInt32)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* bitposition = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "ReadUInt32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, bitposition, bits});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::ReadUInt32
// Il2CppName: ReadUInt32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(::ArrayW<uint>, ByRef<int>, int)>(&emotitron::Compression::ArraySerializeExt::ReadUInt32)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt32"), 1)->byval_arg;
    static auto* bitposition = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "ReadUInt32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, bitposition, bits});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::ReadUInt32
// Il2CppName: ReadUInt32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(::ArrayW<uint64_t>, ByRef<int>, int)>(&emotitron::Compression::ArraySerializeExt::ReadUInt32)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt64"), 1)->byval_arg;
    static auto* bitposition = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "ReadUInt32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, bitposition, bits});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::ReadUInt16
// Il2CppName: ReadUInt16
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint16_t (*)(::ArrayW<uint8_t>, ByRef<int>, int)>(&emotitron::Compression::ArraySerializeExt::ReadUInt16)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* bitposition = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "ReadUInt16", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, bitposition, bits});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::ReadUInt16
// Il2CppName: ReadUInt16
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint16_t (*)(::ArrayW<uint>, ByRef<int>, int)>(&emotitron::Compression::ArraySerializeExt::ReadUInt16)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt32"), 1)->byval_arg;
    static auto* bitposition = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "ReadUInt16", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, bitposition, bits});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::ReadUInt16
// Il2CppName: ReadUInt16
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint16_t (*)(::ArrayW<uint64_t>, ByRef<int>, int)>(&emotitron::Compression::ArraySerializeExt::ReadUInt16)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt64"), 1)->byval_arg;
    static auto* bitposition = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "ReadUInt16", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, bitposition, bits});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::ReadByte
// Il2CppName: ReadByte
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (*)(::ArrayW<uint8_t>, ByRef<int>, int)>(&emotitron::Compression::ArraySerializeExt::ReadByte)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* bitposition = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "ReadByte", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, bitposition, bits});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::ReadByte
// Il2CppName: ReadByte
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (*)(::ArrayW<uint>, ByRef<int>, int)>(&emotitron::Compression::ArraySerializeExt::ReadByte)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt32"), 1)->byval_arg;
    static auto* bitposition = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "ReadByte", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, bitposition, bits});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::ReadByte
// Il2CppName: ReadByte
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (*)(::ArrayW<uint64_t>, ByRef<int>, int)>(&emotitron::Compression::ArraySerializeExt::ReadByte)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt64"), 1)->byval_arg;
    static auto* bitposition = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "ReadByte", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, bitposition, bits});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::ReadBool
// Il2CppName: ReadBool
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::ArrayW<uint64_t>, ByRef<int>)>(&emotitron::Compression::ArraySerializeExt::ReadBool)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt64"), 1)->byval_arg;
    static auto* bitposition = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "ReadBool", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, bitposition});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::ReadBool
// Il2CppName: ReadBool
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::ArrayW<uint>, ByRef<int>)>(&emotitron::Compression::ArraySerializeExt::ReadBool)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt32"), 1)->byval_arg;
    static auto* bitposition = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "ReadBool", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, bitposition});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::ReadBool
// Il2CppName: ReadBool
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::ArrayW<uint8_t>, ByRef<int>)>(&emotitron::Compression::ArraySerializeExt::ReadBool)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* bitposition = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "ReadBool", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, bitposition});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::ReadChar
// Il2CppName: ReadChar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppChar (*)(::ArrayW<uint64_t>, ByRef<int>)>(&emotitron::Compression::ArraySerializeExt::ReadChar)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt64"), 1)->byval_arg;
    static auto* bitposition = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "ReadChar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, bitposition});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::ReadChar
// Il2CppName: ReadChar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppChar (*)(::ArrayW<uint>, ByRef<int>)>(&emotitron::Compression::ArraySerializeExt::ReadChar)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt32"), 1)->byval_arg;
    static auto* bitposition = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "ReadChar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, bitposition});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::ReadChar
// Il2CppName: ReadChar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppChar (*)(::ArrayW<uint8_t>, ByRef<int>)>(&emotitron::Compression::ArraySerializeExt::ReadChar)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* bitposition = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "ReadChar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, bitposition});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::ReadOutSafe
// Il2CppName: ReadOutSafe
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<uint64_t>, int, ::ArrayW<uint8_t>, ByRef<int>, int)>(&emotitron::Compression::ArraySerializeExt::ReadOutSafe)> {
  static const MethodInfo* get() {
    static auto* source = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt64"), 1)->byval_arg;
    static auto* srcStartPos = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* target = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* bitposition = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "ReadOutSafe", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, srcStartPos, target, bitposition, bits});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::ReadOutSafe
// Il2CppName: ReadOutSafe
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<uint64_t>, int, ::ArrayW<uint64_t>, ByRef<int>, int)>(&emotitron::Compression::ArraySerializeExt::ReadOutSafe)> {
  static const MethodInfo* get() {
    static auto* source = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt64"), 1)->byval_arg;
    static auto* srcStartPos = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* target = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt64"), 1)->byval_arg;
    static auto* bitposition = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "ReadOutSafe", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, srcStartPos, target, bitposition, bits});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::ReadOutSafe
// Il2CppName: ReadOutSafe
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<uint8_t>, int, ::ArrayW<uint64_t>, ByRef<int>, int)>(&emotitron::Compression::ArraySerializeExt::ReadOutSafe)> {
  static const MethodInfo* get() {
    static auto* source = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* srcStartPos = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* target = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt64"), 1)->byval_arg;
    static auto* bitposition = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "ReadOutSafe", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, srcStartPos, target, bitposition, bits});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::ReadOutSafe
// Il2CppName: ReadOutSafe
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<uint8_t>, int, ::ArrayW<uint8_t>, ByRef<int>, int)>(&emotitron::Compression::ArraySerializeExt::ReadOutSafe)> {
  static const MethodInfo* get() {
    static auto* source = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* srcStartPos = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* target = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* bitposition = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "ReadOutSafe", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, srcStartPos, target, bitposition, bits});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::IndexAsUInt64
// Il2CppName: IndexAsUInt64
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::ArrayW<uint8_t>, int)>(&emotitron::Compression::ArraySerializeExt::IndexAsUInt64)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "IndexAsUInt64", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, index});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::IndexAsUInt64
// Il2CppName: IndexAsUInt64
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::ArrayW<uint>, int)>(&emotitron::Compression::ArraySerializeExt::IndexAsUInt64)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt32"), 1)->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "IndexAsUInt64", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, index});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::IndexAsUInt32
// Il2CppName: IndexAsUInt32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(::ArrayW<uint8_t>, int)>(&emotitron::Compression::ArraySerializeExt::IndexAsUInt32)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "IndexAsUInt32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, index});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::IndexAsUInt32
// Il2CppName: IndexAsUInt32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(::ArrayW<uint64_t>, int)>(&emotitron::Compression::ArraySerializeExt::IndexAsUInt32)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt64"), 1)->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "IndexAsUInt32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, index});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::IndexAsUInt8
// Il2CppName: IndexAsUInt8
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (*)(::ArrayW<uint64_t>, int)>(&emotitron::Compression::ArraySerializeExt::IndexAsUInt8)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt64"), 1)->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "IndexAsUInt8", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, index});
  }
};
// Writing MetadataGetter for method: emotitron::Compression::ArraySerializeExt::IndexAsUInt8
// Il2CppName: IndexAsUInt8
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (*)(::ArrayW<uint>, int)>(&emotitron::Compression::ArraySerializeExt::IndexAsUInt8)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt32"), 1)->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(emotitron::Compression::ArraySerializeExt*), "IndexAsUInt8", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, index});
  }
};
