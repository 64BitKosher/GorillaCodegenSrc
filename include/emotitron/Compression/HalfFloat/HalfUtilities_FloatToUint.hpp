// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: emotitron.Compression.HalfFloat.HalfUtilities
#include "emotitron/Compression/HalfFloat/HalfUtilities.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::emotitron::Compression::HalfFloat::HalfUtilities::FloatToUint, "emotitron.Compression.HalfFloat", "HalfUtilities/FloatToUint");
// Type namespace: emotitron.Compression.HalfFloat
namespace emotitron::Compression::HalfFloat {
  // WARNING Size may be invalid!
  // WARNING Layout: Explicit may not be correctly taken into account!
  // Autogenerated type: emotitron.Compression.HalfFloat.HalfUtilities/FloatToUint
  // [TokenAttribute] Offset: FFFFFFFF
  struct HalfUtilities::FloatToUint/*, public ::System::ValueType*/ {
    public:
    public:
    // public System.UInt32 uintValue
    // Size: 0x4
    // Offset: 0x0
    uint uintValue;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // public System.Single floatValue
    // Size: 0x4
    // Offset: 0x0
    float floatValue;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Creating value type constructor for type: FloatToUint
    constexpr FloatToUint(uint uintValue_ = {}, float floatValue_ = {}) noexcept : uintValue{uintValue_}, floatValue{floatValue_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public System.UInt32 uintValue
    [[deprecated("Use field access instead!")]] uint& dyn_uintValue();
    // Get instance field reference: public System.Single floatValue
    [[deprecated("Use field access instead!")]] float& dyn_floatValue();
  }; // emotitron.Compression.HalfFloat.HalfUtilities/FloatToUint
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
