// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: BoingKit.Version
#include "BoingKit/Version.hpp"
// Completed includes
// Type namespace: BoingKit
namespace BoingKit {
  // Forward declaring type: BoingKit
  class BoingKit;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::BoingKit::BoingKit);
DEFINE_IL2CPP_ARG_TYPE(::BoingKit::BoingKit*, "BoingKit", "BoingKit");
// Type namespace: BoingKit
namespace BoingKit {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: BoingKit.BoingKit
  // [TokenAttribute] Offset: FFFFFFFF
  class BoingKit : public ::Il2CppObject {
    public:
    // Get static field: static public readonly BoingKit.Version Version
    static ::BoingKit::Version _get_Version();
    // Set static field: static public readonly BoingKit.Version Version
    static void _set_Version(::BoingKit::Version value);
    // static private System.Void .cctor()
    // Offset: 0x28ED758
    static void _cctor();
  }; // BoingKit.BoingKit
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: BoingKit::BoingKit::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&BoingKit::BoingKit::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingKit*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
