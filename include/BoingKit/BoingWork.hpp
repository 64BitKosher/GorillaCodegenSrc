// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: BoingKit
namespace BoingKit {
  // Forward declaring type: BoingBehavior
  class BoingBehavior;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Vector3
  struct Vector3;
  // Forward declaring type: Transform
  class Transform;
}
// Completed forward declares
// Type namespace: BoingKit
namespace BoingKit {
  // Forward declaring type: BoingWork
  class BoingWork;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::BoingKit::BoingWork);
DEFINE_IL2CPP_ARG_TYPE(::BoingKit::BoingWork*, "BoingKit", "BoingWork");
// Type namespace: BoingKit
namespace BoingKit {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: BoingKit.BoingWork
  // [TokenAttribute] Offset: FFFFFFFF
  class BoingWork : public ::Il2CppObject {
    public:
    // Nested type: ::BoingKit::BoingWork::EffectorFlags
    struct EffectorFlags;
    // Nested type: ::BoingKit::BoingWork::ReactorFlags
    struct ReactorFlags;
    // Nested type: ::BoingKit::BoingWork::Params
    struct Params;
    // Nested type: ::BoingKit::BoingWork::Output
    struct Output;
    // static UnityEngine.Vector3 ComputeTranslationalResults(UnityEngine.Transform t, UnityEngine.Vector3 src, UnityEngine.Vector3 dst, BoingKit.BoingBehavior b)
    // Offset: 0x28F8500
    static ::UnityEngine::Vector3 ComputeTranslationalResults(::UnityEngine::Transform* t, ::UnityEngine::Vector3 src, ::UnityEngine::Vector3 dst, ::BoingKit::BoingBehavior* b);
  }; // BoingKit.BoingWork
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: BoingKit::BoingWork::ComputeTranslationalResults
// Il2CppName: ComputeTranslationalResults
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (*)(::UnityEngine::Transform*, ::UnityEngine::Vector3, ::UnityEngine::Vector3, ::BoingKit::BoingBehavior*)>(&BoingKit::BoingWork::ComputeTranslationalResults)> {
  static const MethodInfo* get() {
    static auto* t = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* src = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* dst = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* b = &::il2cpp_utils::GetClassFromName("BoingKit", "BoingBehavior")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingWork*), "ComputeTranslationalResults", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{t, src, dst, b});
  }
};
