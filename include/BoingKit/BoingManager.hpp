// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: BoingKit.BoingEffector/Params
#include "BoingKit/BoingEffector_Params.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: BoingKit
namespace BoingKit {
  // Forward declaring type: BoingBehavior
  class BoingBehavior;
  // Skipping declaration: BoingEffector because it is already included!
  // Forward declaring type: BoingReactor
  class BoingReactor;
  // Forward declaring type: BoingReactorField
  class BoingReactorField;
  // Forward declaring type: BoingReactorFieldCPUSampler
  class BoingReactorFieldCPUSampler;
  // Forward declaring type: BoingReactorFieldGPUSampler
  class BoingReactorFieldGPUSampler;
  // Forward declaring type: BoingBones
  class BoingBones;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: IEnumerable`1<T>
  template<typename T>
  class IEnumerable_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: ComputeBuffer
  class ComputeBuffer;
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: SphereCollider
  class SphereCollider;
}
// Completed forward declares
// Type namespace: BoingKit
namespace BoingKit {
  // Forward declaring type: BoingManager
  class BoingManager;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::BoingKit::BoingManager);
DEFINE_IL2CPP_ARG_TYPE(::BoingKit::BoingManager*, "BoingKit", "BoingManager");
// Type namespace: BoingKit
namespace BoingKit {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: BoingKit.BoingManager
  // [TokenAttribute] Offset: FFFFFFFF
  class BoingManager : public ::Il2CppObject {
    public:
    // Nested type: ::BoingKit::BoingManager::UpdateMode
    struct UpdateMode;
    // Nested type: ::BoingKit::BoingManager::TranslationLockSpace
    struct TranslationLockSpace;
    // Nested type: ::BoingKit::BoingManager::BehaviorRegisterDelegate
    class BehaviorRegisterDelegate;
    // Nested type: ::BoingKit::BoingManager::BehaviorUnregisterDelegate
    class BehaviorUnregisterDelegate;
    // Nested type: ::BoingKit::BoingManager::EffectorRegisterDelegate
    class EffectorRegisterDelegate;
    // Nested type: ::BoingKit::BoingManager::EffectorUnregisterDelegate
    class EffectorUnregisterDelegate;
    // Nested type: ::BoingKit::BoingManager::ReactorRegisterDelegate
    class ReactorRegisterDelegate;
    // Nested type: ::BoingKit::BoingManager::ReactorUnregisterDelegate
    class ReactorUnregisterDelegate;
    // Nested type: ::BoingKit::BoingManager::ReactorFieldRegisterDelegate
    class ReactorFieldRegisterDelegate;
    // Nested type: ::BoingKit::BoingManager::ReactorFieldUnregisterDelegate
    class ReactorFieldUnregisterDelegate;
    // Nested type: ::BoingKit::BoingManager::ReactorFieldCPUSamplerRegisterDelegate
    class ReactorFieldCPUSamplerRegisterDelegate;
    // Nested type: ::BoingKit::BoingManager::ReactorFieldCPUSamplerUnregisterDelegate
    class ReactorFieldCPUSamplerUnregisterDelegate;
    // Nested type: ::BoingKit::BoingManager::ReactorFieldGPUSamplerRegisterDelegate
    class ReactorFieldGPUSamplerRegisterDelegate;
    // Nested type: ::BoingKit::BoingManager::ReactorFieldGPUSamplerUnregisterDelegate
    class ReactorFieldGPUSamplerUnregisterDelegate;
    // Nested type: ::BoingKit::BoingManager::BonesRegisterDelegate
    class BonesRegisterDelegate;
    // Nested type: ::BoingKit::BoingManager::BonesUnregisterDelegate
    class BonesUnregisterDelegate;
    // Get static field: static public BoingKit.BoingManager/BehaviorRegisterDelegate OnBehaviorRegister
    static ::BoingKit::BoingManager::BehaviorRegisterDelegate* _get_OnBehaviorRegister();
    // Set static field: static public BoingKit.BoingManager/BehaviorRegisterDelegate OnBehaviorRegister
    static void _set_OnBehaviorRegister(::BoingKit::BoingManager::BehaviorRegisterDelegate* value);
    // Get static field: static public BoingKit.BoingManager/BehaviorUnregisterDelegate OnBehaviorUnregister
    static ::BoingKit::BoingManager::BehaviorUnregisterDelegate* _get_OnBehaviorUnregister();
    // Set static field: static public BoingKit.BoingManager/BehaviorUnregisterDelegate OnBehaviorUnregister
    static void _set_OnBehaviorUnregister(::BoingKit::BoingManager::BehaviorUnregisterDelegate* value);
    // Get static field: static public BoingKit.BoingManager/EffectorRegisterDelegate OnEffectorRegister
    static ::BoingKit::BoingManager::EffectorRegisterDelegate* _get_OnEffectorRegister();
    // Set static field: static public BoingKit.BoingManager/EffectorRegisterDelegate OnEffectorRegister
    static void _set_OnEffectorRegister(::BoingKit::BoingManager::EffectorRegisterDelegate* value);
    // Get static field: static public BoingKit.BoingManager/EffectorUnregisterDelegate OnEffectorUnregister
    static ::BoingKit::BoingManager::EffectorUnregisterDelegate* _get_OnEffectorUnregister();
    // Set static field: static public BoingKit.BoingManager/EffectorUnregisterDelegate OnEffectorUnregister
    static void _set_OnEffectorUnregister(::BoingKit::BoingManager::EffectorUnregisterDelegate* value);
    // Get static field: static public BoingKit.BoingManager/ReactorRegisterDelegate OnReactorRegister
    static ::BoingKit::BoingManager::ReactorRegisterDelegate* _get_OnReactorRegister();
    // Set static field: static public BoingKit.BoingManager/ReactorRegisterDelegate OnReactorRegister
    static void _set_OnReactorRegister(::BoingKit::BoingManager::ReactorRegisterDelegate* value);
    // Get static field: static public BoingKit.BoingManager/ReactorUnregisterDelegate OnReactorUnregister
    static ::BoingKit::BoingManager::ReactorUnregisterDelegate* _get_OnReactorUnregister();
    // Set static field: static public BoingKit.BoingManager/ReactorUnregisterDelegate OnReactorUnregister
    static void _set_OnReactorUnregister(::BoingKit::BoingManager::ReactorUnregisterDelegate* value);
    // Get static field: static public BoingKit.BoingManager/ReactorFieldRegisterDelegate OnReactorFieldRegister
    static ::BoingKit::BoingManager::ReactorFieldRegisterDelegate* _get_OnReactorFieldRegister();
    // Set static field: static public BoingKit.BoingManager/ReactorFieldRegisterDelegate OnReactorFieldRegister
    static void _set_OnReactorFieldRegister(::BoingKit::BoingManager::ReactorFieldRegisterDelegate* value);
    // Get static field: static public BoingKit.BoingManager/ReactorFieldUnregisterDelegate OnReactorFieldUnregister
    static ::BoingKit::BoingManager::ReactorFieldUnregisterDelegate* _get_OnReactorFieldUnregister();
    // Set static field: static public BoingKit.BoingManager/ReactorFieldUnregisterDelegate OnReactorFieldUnregister
    static void _set_OnReactorFieldUnregister(::BoingKit::BoingManager::ReactorFieldUnregisterDelegate* value);
    // Get static field: static public BoingKit.BoingManager/ReactorFieldCPUSamplerRegisterDelegate OnReactorFieldCPUSamplerRegister
    static ::BoingKit::BoingManager::ReactorFieldCPUSamplerRegisterDelegate* _get_OnReactorFieldCPUSamplerRegister();
    // Set static field: static public BoingKit.BoingManager/ReactorFieldCPUSamplerRegisterDelegate OnReactorFieldCPUSamplerRegister
    static void _set_OnReactorFieldCPUSamplerRegister(::BoingKit::BoingManager::ReactorFieldCPUSamplerRegisterDelegate* value);
    // Get static field: static public BoingKit.BoingManager/ReactorFieldCPUSamplerUnregisterDelegate OnReactorFieldCPUSamplerUnregister
    static ::BoingKit::BoingManager::ReactorFieldCPUSamplerUnregisterDelegate* _get_OnReactorFieldCPUSamplerUnregister();
    // Set static field: static public BoingKit.BoingManager/ReactorFieldCPUSamplerUnregisterDelegate OnReactorFieldCPUSamplerUnregister
    static void _set_OnReactorFieldCPUSamplerUnregister(::BoingKit::BoingManager::ReactorFieldCPUSamplerUnregisterDelegate* value);
    // Get static field: static public BoingKit.BoingManager/ReactorFieldGPUSamplerRegisterDelegate OnReactorFieldGPUSamplerRegister
    static ::BoingKit::BoingManager::ReactorFieldGPUSamplerRegisterDelegate* _get_OnReactorFieldGPUSamplerRegister();
    // Set static field: static public BoingKit.BoingManager/ReactorFieldGPUSamplerRegisterDelegate OnReactorFieldGPUSamplerRegister
    static void _set_OnReactorFieldGPUSamplerRegister(::BoingKit::BoingManager::ReactorFieldGPUSamplerRegisterDelegate* value);
    // Get static field: static public BoingKit.BoingManager/ReactorFieldGPUSamplerUnregisterDelegate OnFieldGPUSamplerUnregister
    static ::BoingKit::BoingManager::ReactorFieldGPUSamplerUnregisterDelegate* _get_OnFieldGPUSamplerUnregister();
    // Set static field: static public BoingKit.BoingManager/ReactorFieldGPUSamplerUnregisterDelegate OnFieldGPUSamplerUnregister
    static void _set_OnFieldGPUSamplerUnregister(::BoingKit::BoingManager::ReactorFieldGPUSamplerUnregisterDelegate* value);
    // Get static field: static public BoingKit.BoingManager/BonesRegisterDelegate OnBonesRegister
    static ::BoingKit::BoingManager::BonesRegisterDelegate* _get_OnBonesRegister();
    // Set static field: static public BoingKit.BoingManager/BonesRegisterDelegate OnBonesRegister
    static void _set_OnBonesRegister(::BoingKit::BoingManager::BonesRegisterDelegate* value);
    // Get static field: static public BoingKit.BoingManager/BonesUnregisterDelegate OnBonesUnregister
    static ::BoingKit::BoingManager::BonesUnregisterDelegate* _get_OnBonesUnregister();
    // Set static field: static public BoingKit.BoingManager/BonesUnregisterDelegate OnBonesUnregister
    static void _set_OnBonesUnregister(::BoingKit::BoingManager::BonesUnregisterDelegate* value);
    // Get static field: static private System.Single s_deltaTime
    static float _get_s_deltaTime();
    // Set static field: static private System.Single s_deltaTime
    static void _set_s_deltaTime(float value);
    // Get static field: static private System.Collections.Generic.Dictionary`2<System.Int32,BoingKit.BoingBehavior> s_behaviorMap
    static ::System::Collections::Generic::Dictionary_2<int, ::BoingKit::BoingBehavior*>* _get_s_behaviorMap();
    // Set static field: static private System.Collections.Generic.Dictionary`2<System.Int32,BoingKit.BoingBehavior> s_behaviorMap
    static void _set_s_behaviorMap(::System::Collections::Generic::Dictionary_2<int, ::BoingKit::BoingBehavior*>* value);
    // Get static field: static private System.Collections.Generic.Dictionary`2<System.Int32,BoingKit.BoingEffector> s_effectorMap
    static ::System::Collections::Generic::Dictionary_2<int, ::BoingKit::BoingEffector*>* _get_s_effectorMap();
    // Set static field: static private System.Collections.Generic.Dictionary`2<System.Int32,BoingKit.BoingEffector> s_effectorMap
    static void _set_s_effectorMap(::System::Collections::Generic::Dictionary_2<int, ::BoingKit::BoingEffector*>* value);
    // Get static field: static private System.Collections.Generic.Dictionary`2<System.Int32,BoingKit.BoingReactor> s_reactorMap
    static ::System::Collections::Generic::Dictionary_2<int, ::BoingKit::BoingReactor*>* _get_s_reactorMap();
    // Set static field: static private System.Collections.Generic.Dictionary`2<System.Int32,BoingKit.BoingReactor> s_reactorMap
    static void _set_s_reactorMap(::System::Collections::Generic::Dictionary_2<int, ::BoingKit::BoingReactor*>* value);
    // Get static field: static private System.Collections.Generic.Dictionary`2<System.Int32,BoingKit.BoingReactorField> s_fieldMap
    static ::System::Collections::Generic::Dictionary_2<int, ::BoingKit::BoingReactorField*>* _get_s_fieldMap();
    // Set static field: static private System.Collections.Generic.Dictionary`2<System.Int32,BoingKit.BoingReactorField> s_fieldMap
    static void _set_s_fieldMap(::System::Collections::Generic::Dictionary_2<int, ::BoingKit::BoingReactorField*>* value);
    // Get static field: static private System.Collections.Generic.Dictionary`2<System.Int32,BoingKit.BoingReactorFieldCPUSampler> s_cpuSamplerMap
    static ::System::Collections::Generic::Dictionary_2<int, ::BoingKit::BoingReactorFieldCPUSampler*>* _get_s_cpuSamplerMap();
    // Set static field: static private System.Collections.Generic.Dictionary`2<System.Int32,BoingKit.BoingReactorFieldCPUSampler> s_cpuSamplerMap
    static void _set_s_cpuSamplerMap(::System::Collections::Generic::Dictionary_2<int, ::BoingKit::BoingReactorFieldCPUSampler*>* value);
    // Get static field: static private System.Collections.Generic.Dictionary`2<System.Int32,BoingKit.BoingReactorFieldGPUSampler> s_gpuSamplerMap
    static ::System::Collections::Generic::Dictionary_2<int, ::BoingKit::BoingReactorFieldGPUSampler*>* _get_s_gpuSamplerMap();
    // Set static field: static private System.Collections.Generic.Dictionary`2<System.Int32,BoingKit.BoingReactorFieldGPUSampler> s_gpuSamplerMap
    static void _set_s_gpuSamplerMap(::System::Collections::Generic::Dictionary_2<int, ::BoingKit::BoingReactorFieldGPUSampler*>* value);
    // Get static field: static private System.Collections.Generic.Dictionary`2<System.Int32,BoingKit.BoingBones> s_bonesMap
    static ::System::Collections::Generic::Dictionary_2<int, ::BoingKit::BoingBones*>* _get_s_bonesMap();
    // Set static field: static private System.Collections.Generic.Dictionary`2<System.Int32,BoingKit.BoingBones> s_bonesMap
    static void _set_s_bonesMap(::System::Collections::Generic::Dictionary_2<int, ::BoingKit::BoingBones*>* value);
    // Get static field: static private readonly System.Int32 kEffectorParamsIncrement
    static int _get_kEffectorParamsIncrement();
    // Set static field: static private readonly System.Int32 kEffectorParamsIncrement
    static void _set_kEffectorParamsIncrement(int value);
    // Get static field: static private System.Collections.Generic.List`1<BoingKit.BoingEffector/Params> s_effectorParamsList
    static ::System::Collections::Generic::List_1<::BoingKit::BoingEffector::Params>* _get_s_effectorParamsList();
    // Set static field: static private System.Collections.Generic.List`1<BoingKit.BoingEffector/Params> s_effectorParamsList
    static void _set_s_effectorParamsList(::System::Collections::Generic::List_1<::BoingKit::BoingEffector::Params>* value);
    // Get static field: static private BoingKit.BoingEffector/Params[] s_aEffectorParams
    static ::ArrayW<::BoingKit::BoingEffector::Params> _get_s_aEffectorParams();
    // Set static field: static private BoingKit.BoingEffector/Params[] s_aEffectorParams
    static void _set_s_aEffectorParams(::ArrayW<::BoingKit::BoingEffector::Params> value);
    // Get static field: static private UnityEngine.ComputeBuffer s_effectorParamsBuffer
    static ::UnityEngine::ComputeBuffer* _get_s_effectorParamsBuffer();
    // Set static field: static private UnityEngine.ComputeBuffer s_effectorParamsBuffer
    static void _set_s_effectorParamsBuffer(::UnityEngine::ComputeBuffer* value);
    // Get static field: static private System.Collections.Generic.Dictionary`2<System.Int32,System.Int32> s_effectorParamsIndexMap
    static ::System::Collections::Generic::Dictionary_2<int, int>* _get_s_effectorParamsIndexMap();
    // Set static field: static private System.Collections.Generic.Dictionary`2<System.Int32,System.Int32> s_effectorParamsIndexMap
    static void _set_s_effectorParamsIndexMap(::System::Collections::Generic::Dictionary_2<int, int>* value);
    // Get static field: static readonly System.Boolean UseAsynchronousJobs
    static bool _get_UseAsynchronousJobs();
    // Set static field: static readonly System.Boolean UseAsynchronousJobs
    static void _set_UseAsynchronousJobs(bool value);
    // Get static field: static UnityEngine.GameObject s_managerGo
    static ::UnityEngine::GameObject* _get_s_managerGo();
    // Set static field: static UnityEngine.GameObject s_managerGo
    static void _set_s_managerGo(::UnityEngine::GameObject* value);
    // static public System.Collections.Generic.IEnumerable`1<BoingKit.BoingBehavior> get_Behaviors()
    // Offset: 0x28EDC24
    static ::System::Collections::Generic::IEnumerable_1<::BoingKit::BoingBehavior*>* get_Behaviors();
    // static public System.Collections.Generic.IEnumerable`1<BoingKit.BoingReactor> get_Reactors()
    // Offset: 0x28EDC9C
    static ::System::Collections::Generic::IEnumerable_1<::BoingKit::BoingReactor*>* get_Reactors();
    // static public System.Collections.Generic.IEnumerable`1<BoingKit.BoingEffector> get_Effectors()
    // Offset: 0x28EDD14
    static ::System::Collections::Generic::IEnumerable_1<::BoingKit::BoingEffector*>* get_Effectors();
    // static public System.Collections.Generic.IEnumerable`1<BoingKit.BoingReactorField> get_ReactorFields()
    // Offset: 0x28EDD8C
    static ::System::Collections::Generic::IEnumerable_1<::BoingKit::BoingReactorField*>* get_ReactorFields();
    // static public System.Collections.Generic.IEnumerable`1<BoingKit.BoingReactorFieldCPUSampler> get_ReactorFieldCPUSamlers()
    // Offset: 0x28EDE04
    static ::System::Collections::Generic::IEnumerable_1<::BoingKit::BoingReactorFieldCPUSampler*>* get_ReactorFieldCPUSamlers();
    // static public System.Collections.Generic.IEnumerable`1<BoingKit.BoingReactorFieldGPUSampler> get_ReactorFieldGPUSampler()
    // Offset: 0x28EDE7C
    static ::System::Collections::Generic::IEnumerable_1<::BoingKit::BoingReactorFieldGPUSampler*>* get_ReactorFieldGPUSampler();
    // static public System.Single get_DeltaTime()
    // Offset: 0x28EDEF4
    static float get_DeltaTime();
    // static public System.Single get_FixedDeltaTime()
    // Offset: 0x28EDF4C
    static float get_FixedDeltaTime();
    // static System.Int32 get_NumBehaviors()
    // Offset: 0x28EDF54
    static int get_NumBehaviors();
    // static System.Int32 get_NumEffectors()
    // Offset: 0x28EDFCC
    static int get_NumEffectors();
    // static System.Int32 get_NumReactors()
    // Offset: 0x28EE044
    static int get_NumReactors();
    // static System.Int32 get_NumFields()
    // Offset: 0x28EE0BC
    static int get_NumFields();
    // static System.Int32 get_NumCPUFieldSamplers()
    // Offset: 0x28EE134
    static int get_NumCPUFieldSamplers();
    // static System.Int32 get_NumGPUFieldSamplers()
    // Offset: 0x28EE1AC
    static int get_NumGPUFieldSamplers();
    // static private System.Void ValidateManager()
    // Offset: 0x28EE224
    static void ValidateManager();
    // static UnityEngine.SphereCollider get_SharedSphereCollider()
    // Offset: 0x28EE3E4
    static ::UnityEngine::SphereCollider* get_SharedSphereCollider();
    // static System.Void Register(BoingKit.BoingBehavior behavior)
    // Offset: 0x28E8ED4
    static void Register(::BoingKit::BoingBehavior* behavior);
    // static System.Void Unregister(BoingKit.BoingBehavior behavior)
    // Offset: 0x28E9010
    static void Unregister(::BoingKit::BoingBehavior* behavior);
    // static System.Void Register(BoingKit.BoingEffector effector)
    // Offset: 0x28ED0C0
    static void Register(::BoingKit::BoingEffector* effector);
    // static System.Void Unregister(BoingKit.BoingEffector effector)
    // Offset: 0x28ED1FC
    static void Unregister(::BoingKit::BoingEffector* effector);
    // static System.Void Register(BoingKit.BoingReactor reactor)
    // Offset: 0x28EEA78
    static void Register(::BoingKit::BoingReactor* reactor);
    // static System.Void Unregister(BoingKit.BoingReactor reactor)
    // Offset: 0x28EEB60
    static void Unregister(::BoingKit::BoingReactor* reactor);
    // static System.Void Register(BoingKit.BoingReactorField field)
    // Offset: 0x28EEC48
    static void Register(::BoingKit::BoingReactorField* field);
    // static System.Void Unregister(BoingKit.BoingReactorField field)
    // Offset: 0x28EED30
    static void Unregister(::BoingKit::BoingReactorField* field);
    // static System.Void Register(BoingKit.BoingReactorFieldCPUSampler sampler)
    // Offset: 0x28EEE18
    static void Register(::BoingKit::BoingReactorFieldCPUSampler* sampler);
    // static System.Void Unregister(BoingKit.BoingReactorFieldCPUSampler sampler)
    // Offset: 0x28EEF00
    static void Unregister(::BoingKit::BoingReactorFieldCPUSampler* sampler);
    // static System.Void Register(BoingKit.BoingReactorFieldGPUSampler sampler)
    // Offset: 0x28EEFE8
    static void Register(::BoingKit::BoingReactorFieldGPUSampler* sampler);
    // static System.Void Unregister(BoingKit.BoingReactorFieldGPUSampler sampler)
    // Offset: 0x28EF0D0
    static void Unregister(::BoingKit::BoingReactorFieldGPUSampler* sampler);
    // static System.Void Register(BoingKit.BoingBones bones)
    // Offset: 0x28EA9A0
    static void Register(::BoingKit::BoingBones* bones);
    // static System.Void Unregister(BoingKit.BoingBones bones)
    // Offset: 0x28EAADC
    static void Unregister(::BoingKit::BoingBones* bones);
    // static private System.Void PreRegisterBehavior()
    // Offset: 0x28EE4C4
    static void PreRegisterBehavior();
    // static private System.Void PostUnregisterBehavior()
    // Offset: 0x28EE510
    static void PostUnregisterBehavior();
    // static private System.Void PreRegisterEffectorReactor()
    // Offset: 0x28EE5A4
    static void PreRegisterEffectorReactor();
    // static private System.Void PostUnregisterEffectorReactor()
    // Offset: 0x28EE884
    static void PostUnregisterEffectorReactor();
    // static private System.Void PreRegisterBones()
    // Offset: 0x28EF1B8
    static void PreRegisterBones();
    // static private System.Void PostUnregisterBones()
    // Offset: 0x28EF204
    static void PostUnregisterBones();
    // static System.Void Execute(BoingKit.BoingManager/UpdateMode updateMode)
    // Offset: 0x28EF208
    static void Execute(::BoingKit::BoingManager::UpdateMode updateMode);
    // static System.Void ExecuteBehaviors(BoingKit.BoingManager/UpdateMode updateMode)
    // Offset: 0x28EF95C
    static void ExecuteBehaviors(::BoingKit::BoingManager::UpdateMode updateMode);
    // static System.Void PullBehaviorResults(BoingKit.BoingManager/UpdateMode updateMode)
    // Offset: 0x28EFF00
    static void PullBehaviorResults(::BoingKit::BoingManager::UpdateMode updateMode);
    // static System.Void RestoreBehaviors()
    // Offset: 0x28F0098
    static void RestoreBehaviors();
    // static System.Void RefreshEffectorParams()
    // Offset: 0x28EF2AC
    static void RefreshEffectorParams();
    // static System.Void ExecuteReactors(BoingKit.BoingManager/UpdateMode updateMode)
    // Offset: 0x28EFBC4
    static void ExecuteReactors(::BoingKit::BoingManager::UpdateMode updateMode);
    // static System.Void PullReactorResults(BoingKit.BoingManager/UpdateMode updateMode)
    // Offset: 0x28F0220
    static void PullReactorResults(::BoingKit::BoingManager::UpdateMode updateMode);
    // static System.Void RestoreReactors()
    // Offset: 0x28F0508
    static void RestoreReactors();
    // static System.Void DispatchReactorFieldCompute()
    // Offset: 0x28F07CC
    static void DispatchReactorFieldCompute();
    // static System.Void ExecuteBones(BoingKit.BoingManager/UpdateMode updateMode)
    // Offset: 0x28EF6EC
    static void ExecuteBones(::BoingKit::BoingManager::UpdateMode updateMode);
    // static System.Void PullBonesResults(BoingKit.BoingManager/UpdateMode updateMode)
    // Offset: 0x28F0CD4
    static void PullBonesResults(::BoingKit::BoingManager::UpdateMode updateMode);
    // static System.Void RestoreBones()
    // Offset: 0x28F0DD0
    static void RestoreBones();
    // static private System.Void .cctor()
    // Offset: 0x28F0F58
    static void _cctor();
  }; // BoingKit.BoingManager
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: BoingKit::BoingManager::get_Behaviors
// Il2CppName: get_Behaviors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<::BoingKit::BoingBehavior*>* (*)()>(&BoingKit::BoingManager::get_Behaviors)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingManager*), "get_Behaviors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BoingKit::BoingManager::get_Reactors
// Il2CppName: get_Reactors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<::BoingKit::BoingReactor*>* (*)()>(&BoingKit::BoingManager::get_Reactors)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingManager*), "get_Reactors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BoingKit::BoingManager::get_Effectors
// Il2CppName: get_Effectors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<::BoingKit::BoingEffector*>* (*)()>(&BoingKit::BoingManager::get_Effectors)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingManager*), "get_Effectors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BoingKit::BoingManager::get_ReactorFields
// Il2CppName: get_ReactorFields
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<::BoingKit::BoingReactorField*>* (*)()>(&BoingKit::BoingManager::get_ReactorFields)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingManager*), "get_ReactorFields", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BoingKit::BoingManager::get_ReactorFieldCPUSamlers
// Il2CppName: get_ReactorFieldCPUSamlers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<::BoingKit::BoingReactorFieldCPUSampler*>* (*)()>(&BoingKit::BoingManager::get_ReactorFieldCPUSamlers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingManager*), "get_ReactorFieldCPUSamlers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BoingKit::BoingManager::get_ReactorFieldGPUSampler
// Il2CppName: get_ReactorFieldGPUSampler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<::BoingKit::BoingReactorFieldGPUSampler*>* (*)()>(&BoingKit::BoingManager::get_ReactorFieldGPUSampler)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingManager*), "get_ReactorFieldGPUSampler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BoingKit::BoingManager::get_DeltaTime
// Il2CppName: get_DeltaTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)()>(&BoingKit::BoingManager::get_DeltaTime)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingManager*), "get_DeltaTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BoingKit::BoingManager::get_FixedDeltaTime
// Il2CppName: get_FixedDeltaTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)()>(&BoingKit::BoingManager::get_FixedDeltaTime)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingManager*), "get_FixedDeltaTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BoingKit::BoingManager::get_NumBehaviors
// Il2CppName: get_NumBehaviors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&BoingKit::BoingManager::get_NumBehaviors)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingManager*), "get_NumBehaviors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BoingKit::BoingManager::get_NumEffectors
// Il2CppName: get_NumEffectors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&BoingKit::BoingManager::get_NumEffectors)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingManager*), "get_NumEffectors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BoingKit::BoingManager::get_NumReactors
// Il2CppName: get_NumReactors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&BoingKit::BoingManager::get_NumReactors)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingManager*), "get_NumReactors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BoingKit::BoingManager::get_NumFields
// Il2CppName: get_NumFields
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&BoingKit::BoingManager::get_NumFields)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingManager*), "get_NumFields", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BoingKit::BoingManager::get_NumCPUFieldSamplers
// Il2CppName: get_NumCPUFieldSamplers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&BoingKit::BoingManager::get_NumCPUFieldSamplers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingManager*), "get_NumCPUFieldSamplers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BoingKit::BoingManager::get_NumGPUFieldSamplers
// Il2CppName: get_NumGPUFieldSamplers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&BoingKit::BoingManager::get_NumGPUFieldSamplers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingManager*), "get_NumGPUFieldSamplers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BoingKit::BoingManager::ValidateManager
// Il2CppName: ValidateManager
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&BoingKit::BoingManager::ValidateManager)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingManager*), "ValidateManager", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BoingKit::BoingManager::get_SharedSphereCollider
// Il2CppName: get_SharedSphereCollider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::SphereCollider* (*)()>(&BoingKit::BoingManager::get_SharedSphereCollider)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingManager*), "get_SharedSphereCollider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BoingKit::BoingManager::Register
// Il2CppName: Register
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::BoingKit::BoingBehavior*)>(&BoingKit::BoingManager::Register)> {
  static const MethodInfo* get() {
    static auto* behavior = &::il2cpp_utils::GetClassFromName("BoingKit", "BoingBehavior")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingManager*), "Register", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{behavior});
  }
};
// Writing MetadataGetter for method: BoingKit::BoingManager::Unregister
// Il2CppName: Unregister
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::BoingKit::BoingBehavior*)>(&BoingKit::BoingManager::Unregister)> {
  static const MethodInfo* get() {
    static auto* behavior = &::il2cpp_utils::GetClassFromName("BoingKit", "BoingBehavior")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingManager*), "Unregister", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{behavior});
  }
};
// Writing MetadataGetter for method: BoingKit::BoingManager::Register
// Il2CppName: Register
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::BoingKit::BoingEffector*)>(&BoingKit::BoingManager::Register)> {
  static const MethodInfo* get() {
    static auto* effector = &::il2cpp_utils::GetClassFromName("BoingKit", "BoingEffector")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingManager*), "Register", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{effector});
  }
};
// Writing MetadataGetter for method: BoingKit::BoingManager::Unregister
// Il2CppName: Unregister
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::BoingKit::BoingEffector*)>(&BoingKit::BoingManager::Unregister)> {
  static const MethodInfo* get() {
    static auto* effector = &::il2cpp_utils::GetClassFromName("BoingKit", "BoingEffector")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingManager*), "Unregister", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{effector});
  }
};
// Writing MetadataGetter for method: BoingKit::BoingManager::Register
// Il2CppName: Register
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::BoingKit::BoingReactor*)>(&BoingKit::BoingManager::Register)> {
  static const MethodInfo* get() {
    static auto* reactor = &::il2cpp_utils::GetClassFromName("BoingKit", "BoingReactor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingManager*), "Register", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{reactor});
  }
};
// Writing MetadataGetter for method: BoingKit::BoingManager::Unregister
// Il2CppName: Unregister
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::BoingKit::BoingReactor*)>(&BoingKit::BoingManager::Unregister)> {
  static const MethodInfo* get() {
    static auto* reactor = &::il2cpp_utils::GetClassFromName("BoingKit", "BoingReactor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingManager*), "Unregister", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{reactor});
  }
};
// Writing MetadataGetter for method: BoingKit::BoingManager::Register
// Il2CppName: Register
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::BoingKit::BoingReactorField*)>(&BoingKit::BoingManager::Register)> {
  static const MethodInfo* get() {
    static auto* field = &::il2cpp_utils::GetClassFromName("BoingKit", "BoingReactorField")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingManager*), "Register", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{field});
  }
};
// Writing MetadataGetter for method: BoingKit::BoingManager::Unregister
// Il2CppName: Unregister
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::BoingKit::BoingReactorField*)>(&BoingKit::BoingManager::Unregister)> {
  static const MethodInfo* get() {
    static auto* field = &::il2cpp_utils::GetClassFromName("BoingKit", "BoingReactorField")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingManager*), "Unregister", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{field});
  }
};
// Writing MetadataGetter for method: BoingKit::BoingManager::Register
// Il2CppName: Register
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::BoingKit::BoingReactorFieldCPUSampler*)>(&BoingKit::BoingManager::Register)> {
  static const MethodInfo* get() {
    static auto* sampler = &::il2cpp_utils::GetClassFromName("BoingKit", "BoingReactorFieldCPUSampler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingManager*), "Register", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sampler});
  }
};
// Writing MetadataGetter for method: BoingKit::BoingManager::Unregister
// Il2CppName: Unregister
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::BoingKit::BoingReactorFieldCPUSampler*)>(&BoingKit::BoingManager::Unregister)> {
  static const MethodInfo* get() {
    static auto* sampler = &::il2cpp_utils::GetClassFromName("BoingKit", "BoingReactorFieldCPUSampler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingManager*), "Unregister", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sampler});
  }
};
// Writing MetadataGetter for method: BoingKit::BoingManager::Register
// Il2CppName: Register
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::BoingKit::BoingReactorFieldGPUSampler*)>(&BoingKit::BoingManager::Register)> {
  static const MethodInfo* get() {
    static auto* sampler = &::il2cpp_utils::GetClassFromName("BoingKit", "BoingReactorFieldGPUSampler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingManager*), "Register", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sampler});
  }
};
// Writing MetadataGetter for method: BoingKit::BoingManager::Unregister
// Il2CppName: Unregister
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::BoingKit::BoingReactorFieldGPUSampler*)>(&BoingKit::BoingManager::Unregister)> {
  static const MethodInfo* get() {
    static auto* sampler = &::il2cpp_utils::GetClassFromName("BoingKit", "BoingReactorFieldGPUSampler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingManager*), "Unregister", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sampler});
  }
};
// Writing MetadataGetter for method: BoingKit::BoingManager::Register
// Il2CppName: Register
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::BoingKit::BoingBones*)>(&BoingKit::BoingManager::Register)> {
  static const MethodInfo* get() {
    static auto* bones = &::il2cpp_utils::GetClassFromName("BoingKit", "BoingBones")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingManager*), "Register", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bones});
  }
};
// Writing MetadataGetter for method: BoingKit::BoingManager::Unregister
// Il2CppName: Unregister
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::BoingKit::BoingBones*)>(&BoingKit::BoingManager::Unregister)> {
  static const MethodInfo* get() {
    static auto* bones = &::il2cpp_utils::GetClassFromName("BoingKit", "BoingBones")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingManager*), "Unregister", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bones});
  }
};
// Writing MetadataGetter for method: BoingKit::BoingManager::PreRegisterBehavior
// Il2CppName: PreRegisterBehavior
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&BoingKit::BoingManager::PreRegisterBehavior)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingManager*), "PreRegisterBehavior", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BoingKit::BoingManager::PostUnregisterBehavior
// Il2CppName: PostUnregisterBehavior
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&BoingKit::BoingManager::PostUnregisterBehavior)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingManager*), "PostUnregisterBehavior", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BoingKit::BoingManager::PreRegisterEffectorReactor
// Il2CppName: PreRegisterEffectorReactor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&BoingKit::BoingManager::PreRegisterEffectorReactor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingManager*), "PreRegisterEffectorReactor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BoingKit::BoingManager::PostUnregisterEffectorReactor
// Il2CppName: PostUnregisterEffectorReactor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&BoingKit::BoingManager::PostUnregisterEffectorReactor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingManager*), "PostUnregisterEffectorReactor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BoingKit::BoingManager::PreRegisterBones
// Il2CppName: PreRegisterBones
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&BoingKit::BoingManager::PreRegisterBones)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingManager*), "PreRegisterBones", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BoingKit::BoingManager::PostUnregisterBones
// Il2CppName: PostUnregisterBones
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&BoingKit::BoingManager::PostUnregisterBones)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingManager*), "PostUnregisterBones", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BoingKit::BoingManager::Execute
// Il2CppName: Execute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::BoingKit::BoingManager::UpdateMode)>(&BoingKit::BoingManager::Execute)> {
  static const MethodInfo* get() {
    static auto* updateMode = &::il2cpp_utils::GetClassFromName("BoingKit", "BoingManager/UpdateMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingManager*), "Execute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{updateMode});
  }
};
// Writing MetadataGetter for method: BoingKit::BoingManager::ExecuteBehaviors
// Il2CppName: ExecuteBehaviors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::BoingKit::BoingManager::UpdateMode)>(&BoingKit::BoingManager::ExecuteBehaviors)> {
  static const MethodInfo* get() {
    static auto* updateMode = &::il2cpp_utils::GetClassFromName("BoingKit", "BoingManager/UpdateMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingManager*), "ExecuteBehaviors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{updateMode});
  }
};
// Writing MetadataGetter for method: BoingKit::BoingManager::PullBehaviorResults
// Il2CppName: PullBehaviorResults
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::BoingKit::BoingManager::UpdateMode)>(&BoingKit::BoingManager::PullBehaviorResults)> {
  static const MethodInfo* get() {
    static auto* updateMode = &::il2cpp_utils::GetClassFromName("BoingKit", "BoingManager/UpdateMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingManager*), "PullBehaviorResults", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{updateMode});
  }
};
// Writing MetadataGetter for method: BoingKit::BoingManager::RestoreBehaviors
// Il2CppName: RestoreBehaviors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&BoingKit::BoingManager::RestoreBehaviors)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingManager*), "RestoreBehaviors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BoingKit::BoingManager::RefreshEffectorParams
// Il2CppName: RefreshEffectorParams
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&BoingKit::BoingManager::RefreshEffectorParams)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingManager*), "RefreshEffectorParams", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BoingKit::BoingManager::ExecuteReactors
// Il2CppName: ExecuteReactors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::BoingKit::BoingManager::UpdateMode)>(&BoingKit::BoingManager::ExecuteReactors)> {
  static const MethodInfo* get() {
    static auto* updateMode = &::il2cpp_utils::GetClassFromName("BoingKit", "BoingManager/UpdateMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingManager*), "ExecuteReactors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{updateMode});
  }
};
// Writing MetadataGetter for method: BoingKit::BoingManager::PullReactorResults
// Il2CppName: PullReactorResults
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::BoingKit::BoingManager::UpdateMode)>(&BoingKit::BoingManager::PullReactorResults)> {
  static const MethodInfo* get() {
    static auto* updateMode = &::il2cpp_utils::GetClassFromName("BoingKit", "BoingManager/UpdateMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingManager*), "PullReactorResults", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{updateMode});
  }
};
// Writing MetadataGetter for method: BoingKit::BoingManager::RestoreReactors
// Il2CppName: RestoreReactors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&BoingKit::BoingManager::RestoreReactors)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingManager*), "RestoreReactors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BoingKit::BoingManager::DispatchReactorFieldCompute
// Il2CppName: DispatchReactorFieldCompute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&BoingKit::BoingManager::DispatchReactorFieldCompute)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingManager*), "DispatchReactorFieldCompute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BoingKit::BoingManager::ExecuteBones
// Il2CppName: ExecuteBones
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::BoingKit::BoingManager::UpdateMode)>(&BoingKit::BoingManager::ExecuteBones)> {
  static const MethodInfo* get() {
    static auto* updateMode = &::il2cpp_utils::GetClassFromName("BoingKit", "BoingManager/UpdateMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingManager*), "ExecuteBones", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{updateMode});
  }
};
// Writing MetadataGetter for method: BoingKit::BoingManager::PullBonesResults
// Il2CppName: PullBonesResults
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::BoingKit::BoingManager::UpdateMode)>(&BoingKit::BoingManager::PullBonesResults)> {
  static const MethodInfo* get() {
    static auto* updateMode = &::il2cpp_utils::GetClassFromName("BoingKit", "BoingManager/UpdateMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingManager*), "PullBonesResults", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{updateMode});
  }
};
// Writing MetadataGetter for method: BoingKit::BoingManager::RestoreBones
// Il2CppName: RestoreBones
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&BoingKit::BoingManager::RestoreBones)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingManager*), "RestoreBones", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BoingKit::BoingManager::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&BoingKit::BoingManager::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingManager*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
