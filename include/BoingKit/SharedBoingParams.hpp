// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
// Including type: BoingKit.BoingWork/Params
#include "BoingKit/BoingWork_Params.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: BoingKit
namespace BoingKit {
  // Forward declaring type: SharedBoingParams
  class SharedBoingParams;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::BoingKit::SharedBoingParams);
DEFINE_IL2CPP_ARG_TYPE(::BoingKit::SharedBoingParams*, "BoingKit", "SharedBoingParams");
// Type namespace: BoingKit
namespace BoingKit {
  // Size: 0x178
  #pragma pack(push, 1)
  // Autogenerated type: BoingKit.SharedBoingParams
  // [TokenAttribute] Offset: FFFFFFFF
  // [CreateAssetMenuAttribute] Offset: FFFFFFFF
  class SharedBoingParams : public ::UnityEngine::ScriptableObject {
    public:
    public:
    // public BoingKit.BoingWork/Params Params
    // Size: 0x160
    // Offset: 0x18
    ::BoingKit::BoingWork::Params Params;
    // Field size check
    static_assert(sizeof(::BoingKit::BoingWork::Params) == 0x160);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public BoingKit.BoingWork/Params Params
    [[deprecated("Use field access instead!")]] ::BoingKit::BoingWork::Params& dyn_Params();
    // public System.Void .ctor()
    // Offset: 0x290119C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SharedBoingParams* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::SharedBoingParams::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SharedBoingParams*, creationType>()));
    }
  }; // BoingKit.SharedBoingParams
  #pragma pack(pop)
  static check_size<sizeof(SharedBoingParams), 24 + sizeof(::BoingKit::BoingWork::Params)> __BoingKit_SharedBoingParamsSizeCheck;
  static_assert(sizeof(SharedBoingParams) == 0x178);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: BoingKit::SharedBoingParams::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
