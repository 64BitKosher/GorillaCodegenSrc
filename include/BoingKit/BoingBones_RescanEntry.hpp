// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: BoingKit.BoingBones
#include "BoingKit/BoingBones.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::BoingKit::BoingBones::RescanEntry);
DEFINE_IL2CPP_ARG_TYPE(::BoingKit::BoingBones::RescanEntry*, "BoingKit", "BoingBones/RescanEntry");
// Type namespace: BoingKit
namespace BoingKit {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: BoingKit.BoingBones/RescanEntry
  // [TokenAttribute] Offset: FFFFFFFF
  class BoingBones::RescanEntry : public ::Il2CppObject {
    public:
    public:
    // UnityEngine.Transform Transform
    // Size: 0x8
    // Offset: 0x10
    ::UnityEngine::Transform* Transform;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // System.Int32 ParentIndex
    // Size: 0x4
    // Offset: 0x18
    int ParentIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // System.Single LengthFromRoot
    // Size: 0x4
    // Offset: 0x1C
    float LengthFromRoot;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Get instance field reference: UnityEngine.Transform Transform
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_Transform();
    // Get instance field reference: System.Int32 ParentIndex
    [[deprecated("Use field access instead!")]] int& dyn_ParentIndex();
    // Get instance field reference: System.Single LengthFromRoot
    [[deprecated("Use field access instead!")]] float& dyn_LengthFromRoot();
    // System.Void .ctor(UnityEngine.Transform transform, System.Int32 iParent, System.Single lengthFromRoot)
    // Offset: 0x28EB84C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BoingBones::RescanEntry* New_ctor(::UnityEngine::Transform* transform, int iParent, float lengthFromRoot) {
      static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingBones::RescanEntry::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BoingBones::RescanEntry*, creationType>(transform, iParent, lengthFromRoot)));
    }
  }; // BoingKit.BoingBones/RescanEntry
  #pragma pack(pop)
  static check_size<sizeof(BoingBones::RescanEntry), 28 + sizeof(float)> __BoingKit_BoingBones_RescanEntrySizeCheck;
  static_assert(sizeof(BoingBones::RescanEntry) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: BoingKit::BoingBones::RescanEntry::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
