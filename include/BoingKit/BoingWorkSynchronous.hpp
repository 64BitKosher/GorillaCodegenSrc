// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: BoingKit.BoingManager
#include "BoingKit/BoingManager.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: BoingKit
namespace BoingKit {
  // Forward declaring type: BoingBehavior
  class BoingBehavior;
  // Forward declaring type: BoingReactor
  class BoingReactor;
  // Forward declaring type: BoingReactorField
  class BoingReactorField;
  // Forward declaring type: BoingReactorFieldCPUSampler
  class BoingReactorFieldCPUSampler;
  // Forward declaring type: BoingBones
  class BoingBones;
}
// Completed forward declares
// Type namespace: BoingKit
namespace BoingKit {
  // Forward declaring type: BoingWorkSynchronous
  class BoingWorkSynchronous;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::BoingKit::BoingWorkSynchronous);
DEFINE_IL2CPP_ARG_TYPE(::BoingKit::BoingWorkSynchronous*, "BoingKit", "BoingWorkSynchronous");
// Type namespace: BoingKit
namespace BoingKit {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: BoingKit.BoingWorkSynchronous
  // [TokenAttribute] Offset: FFFFFFFF
  class BoingWorkSynchronous : public ::Il2CppObject {
    public:
    // static System.Void ExecuteBehaviors(System.Collections.Generic.Dictionary`2<System.Int32,BoingKit.BoingBehavior> behaviorMap, BoingKit.BoingManager/UpdateMode updateMode)
    // Offset: 0x28FF258
    static void ExecuteBehaviors(::System::Collections::Generic::Dictionary_2<int, ::BoingKit::BoingBehavior*>* behaviorMap, ::BoingKit::BoingManager::UpdateMode updateMode);
    // static System.Void ExecuteReactors(BoingKit.BoingEffector/Params[] aEffectorParams, System.Collections.Generic.Dictionary`2<System.Int32,BoingKit.BoingReactor> reactorMap, System.Collections.Generic.Dictionary`2<System.Int32,BoingKit.BoingReactorField> fieldMap, System.Collections.Generic.Dictionary`2<System.Int32,BoingKit.BoingReactorFieldCPUSampler> cpuSamplerMap, BoingKit.BoingManager/UpdateMode updateMode)
    // Offset: 0x28FF458
    static void ExecuteReactors(::ArrayW<::BoingKit::BoingEffector::Params> aEffectorParams, ::System::Collections::Generic::Dictionary_2<int, ::BoingKit::BoingReactor*>* reactorMap, ::System::Collections::Generic::Dictionary_2<int, ::BoingKit::BoingReactorField*>* fieldMap, ::System::Collections::Generic::Dictionary_2<int, ::BoingKit::BoingReactorFieldCPUSampler*>* cpuSamplerMap, ::BoingKit::BoingManager::UpdateMode updateMode);
    // static System.Void ExecuteBones(BoingKit.BoingEffector/Params[] aEffectorParams, System.Collections.Generic.Dictionary`2<System.Int32,BoingKit.BoingBones> bonesMap, BoingKit.BoingManager/UpdateMode updateMode)
    // Offset: 0x28FF974
    static void ExecuteBones(::ArrayW<::BoingKit::BoingEffector::Params> aEffectorParams, ::System::Collections::Generic::Dictionary_2<int, ::BoingKit::BoingBones*>* bonesMap, ::BoingKit::BoingManager::UpdateMode updateMode);
    // static System.Void PullBonesResults(BoingKit.BoingEffector/Params[] aEffectorParams, System.Collections.Generic.Dictionary`2<System.Int32,BoingKit.BoingBones> bonesMap, BoingKit.BoingManager/UpdateMode updateMode)
    // Offset: 0x28FFC78
    static void PullBonesResults(::ArrayW<::BoingKit::BoingEffector::Params> aEffectorParams, ::System::Collections::Generic::Dictionary_2<int, ::BoingKit::BoingBones*>* bonesMap, ::BoingKit::BoingManager::UpdateMode updateMode);
  }; // BoingKit.BoingWorkSynchronous
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: BoingKit::BoingWorkSynchronous::ExecuteBehaviors
// Il2CppName: ExecuteBehaviors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Collections::Generic::Dictionary_2<int, ::BoingKit::BoingBehavior*>*, ::BoingKit::BoingManager::UpdateMode)>(&BoingKit::BoingWorkSynchronous::ExecuteBehaviors)> {
  static const MethodInfo* get() {
    static auto* behaviorMap = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32"), ::il2cpp_utils::GetClassFromName("BoingKit", "BoingBehavior")})->byval_arg;
    static auto* updateMode = &::il2cpp_utils::GetClassFromName("BoingKit", "BoingManager/UpdateMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingWorkSynchronous*), "ExecuteBehaviors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{behaviorMap, updateMode});
  }
};
// Writing MetadataGetter for method: BoingKit::BoingWorkSynchronous::ExecuteReactors
// Il2CppName: ExecuteReactors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<::BoingKit::BoingEffector::Params>, ::System::Collections::Generic::Dictionary_2<int, ::BoingKit::BoingReactor*>*, ::System::Collections::Generic::Dictionary_2<int, ::BoingKit::BoingReactorField*>*, ::System::Collections::Generic::Dictionary_2<int, ::BoingKit::BoingReactorFieldCPUSampler*>*, ::BoingKit::BoingManager::UpdateMode)>(&BoingKit::BoingWorkSynchronous::ExecuteReactors)> {
  static const MethodInfo* get() {
    static auto* aEffectorParams = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("BoingKit", "BoingEffector/Params"), 1)->byval_arg;
    static auto* reactorMap = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32"), ::il2cpp_utils::GetClassFromName("BoingKit", "BoingReactor")})->byval_arg;
    static auto* fieldMap = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32"), ::il2cpp_utils::GetClassFromName("BoingKit", "BoingReactorField")})->byval_arg;
    static auto* cpuSamplerMap = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32"), ::il2cpp_utils::GetClassFromName("BoingKit", "BoingReactorFieldCPUSampler")})->byval_arg;
    static auto* updateMode = &::il2cpp_utils::GetClassFromName("BoingKit", "BoingManager/UpdateMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingWorkSynchronous*), "ExecuteReactors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{aEffectorParams, reactorMap, fieldMap, cpuSamplerMap, updateMode});
  }
};
// Writing MetadataGetter for method: BoingKit::BoingWorkSynchronous::ExecuteBones
// Il2CppName: ExecuteBones
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<::BoingKit::BoingEffector::Params>, ::System::Collections::Generic::Dictionary_2<int, ::BoingKit::BoingBones*>*, ::BoingKit::BoingManager::UpdateMode)>(&BoingKit::BoingWorkSynchronous::ExecuteBones)> {
  static const MethodInfo* get() {
    static auto* aEffectorParams = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("BoingKit", "BoingEffector/Params"), 1)->byval_arg;
    static auto* bonesMap = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32"), ::il2cpp_utils::GetClassFromName("BoingKit", "BoingBones")})->byval_arg;
    static auto* updateMode = &::il2cpp_utils::GetClassFromName("BoingKit", "BoingManager/UpdateMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingWorkSynchronous*), "ExecuteBones", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{aEffectorParams, bonesMap, updateMode});
  }
};
// Writing MetadataGetter for method: BoingKit::BoingWorkSynchronous::PullBonesResults
// Il2CppName: PullBonesResults
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<::BoingKit::BoingEffector::Params>, ::System::Collections::Generic::Dictionary_2<int, ::BoingKit::BoingBones*>*, ::BoingKit::BoingManager::UpdateMode)>(&BoingKit::BoingWorkSynchronous::PullBonesResults)> {
  static const MethodInfo* get() {
    static auto* aEffectorParams = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("BoingKit", "BoingEffector/Params"), 1)->byval_arg;
    static auto* bonesMap = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32"), ::il2cpp_utils::GetClassFromName("BoingKit", "BoingBones")})->byval_arg;
    static auto* updateMode = &::il2cpp_utils::GetClassFromName("BoingKit", "BoingManager/UpdateMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BoingKit::BoingWorkSynchronous*), "PullBonesResults", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{aEffectorParams, bonesMap, updateMode});
  }
};
