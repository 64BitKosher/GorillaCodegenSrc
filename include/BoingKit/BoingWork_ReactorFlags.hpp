// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: BoingKit.BoingWork
#include "BoingKit/BoingWork.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::BoingKit::BoingWork::ReactorFlags, "BoingKit", "BoingWork/ReactorFlags");
// Type namespace: BoingKit
namespace BoingKit {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: BoingKit.BoingWork/ReactorFlags
  // [TokenAttribute] Offset: FFFFFFFF
  struct BoingWork::ReactorFlags/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: ReactorFlags
    constexpr ReactorFlags(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public BoingKit.BoingWork/ReactorFlags TwoDDistanceCheck
    static constexpr const int TwoDDistanceCheck = 0;
    // Get static field: static public BoingKit.BoingWork/ReactorFlags TwoDDistanceCheck
    static ::BoingKit::BoingWork::ReactorFlags _get_TwoDDistanceCheck();
    // Set static field: static public BoingKit.BoingWork/ReactorFlags TwoDDistanceCheck
    static void _set_TwoDDistanceCheck(::BoingKit::BoingWork::ReactorFlags value);
    // static field const value: static public BoingKit.BoingWork/ReactorFlags TwoDPositionInfluence
    static constexpr const int TwoDPositionInfluence = 1;
    // Get static field: static public BoingKit.BoingWork/ReactorFlags TwoDPositionInfluence
    static ::BoingKit::BoingWork::ReactorFlags _get_TwoDPositionInfluence();
    // Set static field: static public BoingKit.BoingWork/ReactorFlags TwoDPositionInfluence
    static void _set_TwoDPositionInfluence(::BoingKit::BoingWork::ReactorFlags value);
    // static field const value: static public BoingKit.BoingWork/ReactorFlags TwoDRotationInfluence
    static constexpr const int TwoDRotationInfluence = 2;
    // Get static field: static public BoingKit.BoingWork/ReactorFlags TwoDRotationInfluence
    static ::BoingKit::BoingWork::ReactorFlags _get_TwoDRotationInfluence();
    // Set static field: static public BoingKit.BoingWork/ReactorFlags TwoDRotationInfluence
    static void _set_TwoDRotationInfluence(::BoingKit::BoingWork::ReactorFlags value);
    // static field const value: static public BoingKit.BoingWork/ReactorFlags EnablePositionEffect
    static constexpr const int EnablePositionEffect = 3;
    // Get static field: static public BoingKit.BoingWork/ReactorFlags EnablePositionEffect
    static ::BoingKit::BoingWork::ReactorFlags _get_EnablePositionEffect();
    // Set static field: static public BoingKit.BoingWork/ReactorFlags EnablePositionEffect
    static void _set_EnablePositionEffect(::BoingKit::BoingWork::ReactorFlags value);
    // static field const value: static public BoingKit.BoingWork/ReactorFlags EnableRotationEffect
    static constexpr const int EnableRotationEffect = 4;
    // Get static field: static public BoingKit.BoingWork/ReactorFlags EnableRotationEffect
    static ::BoingKit::BoingWork::ReactorFlags _get_EnableRotationEffect();
    // Set static field: static public BoingKit.BoingWork/ReactorFlags EnableRotationEffect
    static void _set_EnableRotationEffect(::BoingKit::BoingWork::ReactorFlags value);
    // static field const value: static public BoingKit.BoingWork/ReactorFlags EnableScaleEffect
    static constexpr const int EnableScaleEffect = 5;
    // Get static field: static public BoingKit.BoingWork/ReactorFlags EnableScaleEffect
    static ::BoingKit::BoingWork::ReactorFlags _get_EnableScaleEffect();
    // Set static field: static public BoingKit.BoingWork/ReactorFlags EnableScaleEffect
    static void _set_EnableScaleEffect(::BoingKit::BoingWork::ReactorFlags value);
    // static field const value: static public BoingKit.BoingWork/ReactorFlags GlobalReactionUpVector
    static constexpr const int GlobalReactionUpVector = 6;
    // Get static field: static public BoingKit.BoingWork/ReactorFlags GlobalReactionUpVector
    static ::BoingKit::BoingWork::ReactorFlags _get_GlobalReactionUpVector();
    // Set static field: static public BoingKit.BoingWork/ReactorFlags GlobalReactionUpVector
    static void _set_GlobalReactionUpVector(::BoingKit::BoingWork::ReactorFlags value);
    // static field const value: static public BoingKit.BoingWork/ReactorFlags EnablePropagation
    static constexpr const int EnablePropagation = 7;
    // Get static field: static public BoingKit.BoingWork/ReactorFlags EnablePropagation
    static ::BoingKit::BoingWork::ReactorFlags _get_EnablePropagation();
    // Set static field: static public BoingKit.BoingWork/ReactorFlags EnablePropagation
    static void _set_EnablePropagation(::BoingKit::BoingWork::ReactorFlags value);
    // static field const value: static public BoingKit.BoingWork/ReactorFlags AnchorPropagationAtBorder
    static constexpr const int AnchorPropagationAtBorder = 8;
    // Get static field: static public BoingKit.BoingWork/ReactorFlags AnchorPropagationAtBorder
    static ::BoingKit::BoingWork::ReactorFlags _get_AnchorPropagationAtBorder();
    // Set static field: static public BoingKit.BoingWork/ReactorFlags AnchorPropagationAtBorder
    static void _set_AnchorPropagationAtBorder(::BoingKit::BoingWork::ReactorFlags value);
    // static field const value: static public BoingKit.BoingWork/ReactorFlags FixedUpdate
    static constexpr const int FixedUpdate = 9;
    // Get static field: static public BoingKit.BoingWork/ReactorFlags FixedUpdate
    static ::BoingKit::BoingWork::ReactorFlags _get_FixedUpdate();
    // Set static field: static public BoingKit.BoingWork/ReactorFlags FixedUpdate
    static void _set_FixedUpdate(::BoingKit::BoingWork::ReactorFlags value);
    // static field const value: static public BoingKit.BoingWork/ReactorFlags EarlyUpdate
    static constexpr const int EarlyUpdate = 10;
    // Get static field: static public BoingKit.BoingWork/ReactorFlags EarlyUpdate
    static ::BoingKit::BoingWork::ReactorFlags _get_EarlyUpdate();
    // Set static field: static public BoingKit.BoingWork/ReactorFlags EarlyUpdate
    static void _set_EarlyUpdate(::BoingKit::BoingWork::ReactorFlags value);
    // static field const value: static public BoingKit.BoingWork/ReactorFlags LateUpdate
    static constexpr const int LateUpdate = 11;
    // Get static field: static public BoingKit.BoingWork/ReactorFlags LateUpdate
    static ::BoingKit::BoingWork::ReactorFlags _get_LateUpdate();
    // Set static field: static public BoingKit.BoingWork/ReactorFlags LateUpdate
    static void _set_LateUpdate(::BoingKit::BoingWork::ReactorFlags value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // BoingKit.BoingWork/ReactorFlags
  #pragma pack(pop)
  static check_size<sizeof(BoingWork::ReactorFlags), 0 + sizeof(int)> __BoingKit_BoingWork_ReactorFlagsSizeCheck;
  static_assert(sizeof(BoingWork::ReactorFlags) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
