// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ReadOnlyMemory`1
#include "System/ReadOnlyMemory_1.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Skipping declaration: IEnumerable`1 because it is already included!
}
// Forward declaring namespace: Cysharp::Text
namespace Cysharp::Text {
  // Forward declaring type: Utf16ValueStringBuilder
  struct Utf16ValueStringBuilder;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: Transform
  class Transform;
}
// Completed forward declares
// Type namespace: GorillaExtensions
namespace GorillaExtensions {
  // Forward declaring type: GTStringBuilderExtensions
  class GTStringBuilderExtensions;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GorillaExtensions::GTStringBuilderExtensions);
DEFINE_IL2CPP_ARG_TYPE(::GorillaExtensions::GTStringBuilderExtensions*, "GorillaExtensions", "GTStringBuilderExtensions");
// Type namespace: GorillaExtensions
namespace GorillaExtensions {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: GorillaExtensions.GTStringBuilderExtensions
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class GTStringBuilderExtensions : public ::Il2CppObject {
    public:
    // static public System.Collections.Generic.IEnumerable`1<System.ReadOnlyMemory`1<System.Char>> GetSegmentsOfMem(Cysharp.Text.Utf16ValueStringBuilder sb, System.Int32 maxCharsPerSegment)
    // Offset: 0x286BCE4
    static ::System::Collections::Generic::IEnumerable_1<::System::ReadOnlyMemory_1<::Il2CppChar>>* GetSegmentsOfMem(::Cysharp::Text::Utf16ValueStringBuilder sb, int maxCharsPerSegment);
    // static public System.Void GTAddPath(Cysharp.Text.Utf16ValueStringBuilder stringBuilderToAddTo, UnityEngine.GameObject gameObject)
    // Offset: 0x286BF50
    static void GTAddPath(::Cysharp::Text::Utf16ValueStringBuilder stringBuilderToAddTo, ::UnityEngine::GameObject* gameObject);
    // static public System.Void GTAddPath(Cysharp.Text.Utf16ValueStringBuilder stringBuilderToAddTo, UnityEngine.Transform transform)
    // Offset: 0x286C134
    static void GTAddPath(::Cysharp::Text::Utf16ValueStringBuilder stringBuilderToAddTo, ::UnityEngine::Transform* transform);
    // static public System.Void Q(Cysharp.Text.Utf16ValueStringBuilder sb, System.String value)
    // Offset: 0x286C158
    static void Q(::Cysharp::Text::Utf16ValueStringBuilder sb, ::StringW value);
    // static public System.Void GTMany(Cysharp.Text.Utf16ValueStringBuilder sb, System.String a, System.String b)
    // Offset: 0x286C298
    static void GTMany(::Cysharp::Text::Utf16ValueStringBuilder sb, ::StringW a, ::StringW b);
    // static public System.Void GTMany(Cysharp.Text.Utf16ValueStringBuilder sb, System.String a, System.String b, System.String c)
    // Offset: 0x286C364
    static void GTMany(::Cysharp::Text::Utf16ValueStringBuilder sb, ::StringW a, ::StringW b, ::StringW c);
    // static public System.Void GTMany(Cysharp.Text.Utf16ValueStringBuilder sb, System.String a, System.String b, System.String c, System.String d)
    // Offset: 0x286C48C
    static void GTMany(::Cysharp::Text::Utf16ValueStringBuilder sb, ::StringW a, ::StringW b, ::StringW c, ::StringW d);
    // static public System.Void GTMany(Cysharp.Text.Utf16ValueStringBuilder sb, System.String a, System.String b, System.String c, System.String d, System.String e)
    // Offset: 0x286C608
    static void GTMany(::Cysharp::Text::Utf16ValueStringBuilder sb, ::StringW a, ::StringW b, ::StringW c, ::StringW d, ::StringW e);
    // static public System.Void GTMany(Cysharp.Text.Utf16ValueStringBuilder sb, System.String a, System.String b, System.String c, System.String d, System.String e, System.String f)
    // Offset: 0x286C7E0
    static void GTMany(::Cysharp::Text::Utf16ValueStringBuilder sb, ::StringW a, ::StringW b, ::StringW c, ::StringW d, ::StringW e, ::StringW f);
    // static public System.Void GTMany(Cysharp.Text.Utf16ValueStringBuilder sb, System.String a, System.String b, System.String c, System.String d, System.String e, System.String f, System.String g)
    // Offset: 0x286CA0C
    static void GTMany(::Cysharp::Text::Utf16ValueStringBuilder sb, ::StringW a, ::StringW b, ::StringW c, ::StringW d, ::StringW e, ::StringW f, ::StringW g);
    // static public System.Void GTMany(Cysharp.Text.Utf16ValueStringBuilder sb, System.String a, System.String b, System.String c, System.String d, System.String e, System.String f, System.String g, System.String h)
    // Offset: 0x286CC88
    static void GTMany(::Cysharp::Text::Utf16ValueStringBuilder sb, ::StringW a, ::StringW b, ::StringW c, ::StringW d, ::StringW e, ::StringW f, ::StringW g, ::StringW h);
    // static public System.Void GTMany(Cysharp.Text.Utf16ValueStringBuilder sb, System.String a, System.String b, System.String c, System.String d, System.String e, System.String f, System.String g, System.String h, System.String i)
    // Offset: 0x286CF54
    static void GTMany(::Cysharp::Text::Utf16ValueStringBuilder sb, ::StringW a, ::StringW b, ::StringW c, ::StringW d, ::StringW e, ::StringW f, ::StringW g, ::StringW h, ::StringW i);
    // static public System.Void GTMany(Cysharp.Text.Utf16ValueStringBuilder sb, System.String a, System.String b, System.String c, System.String d, System.String e, System.String f, System.String g, System.String h, System.String i, System.String j)
    // Offset: 0x286D270
    static void GTMany(::Cysharp::Text::Utf16ValueStringBuilder sb, ::StringW a, ::StringW b, ::StringW c, ::StringW d, ::StringW e, ::StringW f, ::StringW g, ::StringW h, ::StringW i, ::StringW j);
  }; // GorillaExtensions.GTStringBuilderExtensions
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GorillaExtensions::GTStringBuilderExtensions::GetSegmentsOfMem
// Il2CppName: GetSegmentsOfMem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<::System::ReadOnlyMemory_1<::Il2CppChar>>* (*)(::Cysharp::Text::Utf16ValueStringBuilder, int)>(&GorillaExtensions::GTStringBuilderExtensions::GetSegmentsOfMem)> {
  static const MethodInfo* get() {
    static auto* sb = &::il2cpp_utils::GetClassFromName("Cysharp.Text", "Utf16ValueStringBuilder")->byval_arg;
    static auto* maxCharsPerSegment = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaExtensions::GTStringBuilderExtensions*), "GetSegmentsOfMem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sb, maxCharsPerSegment});
  }
};
// Writing MetadataGetter for method: GorillaExtensions::GTStringBuilderExtensions::GTAddPath
// Il2CppName: GTAddPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Cysharp::Text::Utf16ValueStringBuilder, ::UnityEngine::GameObject*)>(&GorillaExtensions::GTStringBuilderExtensions::GTAddPath)> {
  static const MethodInfo* get() {
    static auto* stringBuilderToAddTo = &::il2cpp_utils::GetClassFromName("Cysharp.Text", "Utf16ValueStringBuilder")->byval_arg;
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaExtensions::GTStringBuilderExtensions*), "GTAddPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stringBuilderToAddTo, gameObject});
  }
};
// Writing MetadataGetter for method: GorillaExtensions::GTStringBuilderExtensions::GTAddPath
// Il2CppName: GTAddPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Cysharp::Text::Utf16ValueStringBuilder, ::UnityEngine::Transform*)>(&GorillaExtensions::GTStringBuilderExtensions::GTAddPath)> {
  static const MethodInfo* get() {
    static auto* stringBuilderToAddTo = &::il2cpp_utils::GetClassFromName("Cysharp.Text", "Utf16ValueStringBuilder")->byval_arg;
    static auto* transform = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaExtensions::GTStringBuilderExtensions*), "GTAddPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stringBuilderToAddTo, transform});
  }
};
// Writing MetadataGetter for method: GorillaExtensions::GTStringBuilderExtensions::Q
// Il2CppName: Q
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Cysharp::Text::Utf16ValueStringBuilder, ::StringW)>(&GorillaExtensions::GTStringBuilderExtensions::Q)> {
  static const MethodInfo* get() {
    static auto* sb = &::il2cpp_utils::GetClassFromName("Cysharp.Text", "Utf16ValueStringBuilder")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaExtensions::GTStringBuilderExtensions*), "Q", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sb, value});
  }
};
// Writing MetadataGetter for method: GorillaExtensions::GTStringBuilderExtensions::GTMany
// Il2CppName: GTMany
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Cysharp::Text::Utf16ValueStringBuilder, ::StringW, ::StringW)>(&GorillaExtensions::GTStringBuilderExtensions::GTMany)> {
  static const MethodInfo* get() {
    static auto* sb = &::il2cpp_utils::GetClassFromName("Cysharp.Text", "Utf16ValueStringBuilder")->byval_arg;
    static auto* a = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* b = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaExtensions::GTStringBuilderExtensions*), "GTMany", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sb, a, b});
  }
};
// Writing MetadataGetter for method: GorillaExtensions::GTStringBuilderExtensions::GTMany
// Il2CppName: GTMany
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Cysharp::Text::Utf16ValueStringBuilder, ::StringW, ::StringW, ::StringW)>(&GorillaExtensions::GTStringBuilderExtensions::GTMany)> {
  static const MethodInfo* get() {
    static auto* sb = &::il2cpp_utils::GetClassFromName("Cysharp.Text", "Utf16ValueStringBuilder")->byval_arg;
    static auto* a = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* b = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* c = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaExtensions::GTStringBuilderExtensions*), "GTMany", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sb, a, b, c});
  }
};
// Writing MetadataGetter for method: GorillaExtensions::GTStringBuilderExtensions::GTMany
// Il2CppName: GTMany
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Cysharp::Text::Utf16ValueStringBuilder, ::StringW, ::StringW, ::StringW, ::StringW)>(&GorillaExtensions::GTStringBuilderExtensions::GTMany)> {
  static const MethodInfo* get() {
    static auto* sb = &::il2cpp_utils::GetClassFromName("Cysharp.Text", "Utf16ValueStringBuilder")->byval_arg;
    static auto* a = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* b = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* c = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* d = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaExtensions::GTStringBuilderExtensions*), "GTMany", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sb, a, b, c, d});
  }
};
// Writing MetadataGetter for method: GorillaExtensions::GTStringBuilderExtensions::GTMany
// Il2CppName: GTMany
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Cysharp::Text::Utf16ValueStringBuilder, ::StringW, ::StringW, ::StringW, ::StringW, ::StringW)>(&GorillaExtensions::GTStringBuilderExtensions::GTMany)> {
  static const MethodInfo* get() {
    static auto* sb = &::il2cpp_utils::GetClassFromName("Cysharp.Text", "Utf16ValueStringBuilder")->byval_arg;
    static auto* a = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* b = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* c = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* d = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* e = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaExtensions::GTStringBuilderExtensions*), "GTMany", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sb, a, b, c, d, e});
  }
};
// Writing MetadataGetter for method: GorillaExtensions::GTStringBuilderExtensions::GTMany
// Il2CppName: GTMany
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Cysharp::Text::Utf16ValueStringBuilder, ::StringW, ::StringW, ::StringW, ::StringW, ::StringW, ::StringW)>(&GorillaExtensions::GTStringBuilderExtensions::GTMany)> {
  static const MethodInfo* get() {
    static auto* sb = &::il2cpp_utils::GetClassFromName("Cysharp.Text", "Utf16ValueStringBuilder")->byval_arg;
    static auto* a = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* b = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* c = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* d = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* e = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* f = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaExtensions::GTStringBuilderExtensions*), "GTMany", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sb, a, b, c, d, e, f});
  }
};
// Writing MetadataGetter for method: GorillaExtensions::GTStringBuilderExtensions::GTMany
// Il2CppName: GTMany
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Cysharp::Text::Utf16ValueStringBuilder, ::StringW, ::StringW, ::StringW, ::StringW, ::StringW, ::StringW, ::StringW)>(&GorillaExtensions::GTStringBuilderExtensions::GTMany)> {
  static const MethodInfo* get() {
    static auto* sb = &::il2cpp_utils::GetClassFromName("Cysharp.Text", "Utf16ValueStringBuilder")->byval_arg;
    static auto* a = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* b = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* c = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* d = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* e = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* f = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* g = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaExtensions::GTStringBuilderExtensions*), "GTMany", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sb, a, b, c, d, e, f, g});
  }
};
// Writing MetadataGetter for method: GorillaExtensions::GTStringBuilderExtensions::GTMany
// Il2CppName: GTMany
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Cysharp::Text::Utf16ValueStringBuilder, ::StringW, ::StringW, ::StringW, ::StringW, ::StringW, ::StringW, ::StringW, ::StringW)>(&GorillaExtensions::GTStringBuilderExtensions::GTMany)> {
  static const MethodInfo* get() {
    static auto* sb = &::il2cpp_utils::GetClassFromName("Cysharp.Text", "Utf16ValueStringBuilder")->byval_arg;
    static auto* a = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* b = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* c = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* d = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* e = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* f = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* g = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* h = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaExtensions::GTStringBuilderExtensions*), "GTMany", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sb, a, b, c, d, e, f, g, h});
  }
};
// Writing MetadataGetter for method: GorillaExtensions::GTStringBuilderExtensions::GTMany
// Il2CppName: GTMany
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Cysharp::Text::Utf16ValueStringBuilder, ::StringW, ::StringW, ::StringW, ::StringW, ::StringW, ::StringW, ::StringW, ::StringW, ::StringW)>(&GorillaExtensions::GTStringBuilderExtensions::GTMany)> {
  static const MethodInfo* get() {
    static auto* sb = &::il2cpp_utils::GetClassFromName("Cysharp.Text", "Utf16ValueStringBuilder")->byval_arg;
    static auto* a = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* b = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* c = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* d = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* e = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* f = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* g = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* h = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* i = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaExtensions::GTStringBuilderExtensions*), "GTMany", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sb, a, b, c, d, e, f, g, h, i});
  }
};
// Writing MetadataGetter for method: GorillaExtensions::GTStringBuilderExtensions::GTMany
// Il2CppName: GTMany
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Cysharp::Text::Utf16ValueStringBuilder, ::StringW, ::StringW, ::StringW, ::StringW, ::StringW, ::StringW, ::StringW, ::StringW, ::StringW, ::StringW)>(&GorillaExtensions::GTStringBuilderExtensions::GTMany)> {
  static const MethodInfo* get() {
    static auto* sb = &::il2cpp_utils::GetClassFromName("Cysharp.Text", "Utf16ValueStringBuilder")->byval_arg;
    static auto* a = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* b = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* c = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* d = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* e = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* f = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* g = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* h = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* i = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* j = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaExtensions::GTStringBuilderExtensions*), "GTMany", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sb, a, b, c, d, e, f, g, h, i, j});
  }
};
