// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: Oculus.Voice.Dictation.Configuration
namespace Oculus::Voice::Dictation::Configuration {
  // Forward declaring type: DictationConfiguration
  class DictationConfiguration;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Voice::Dictation::Configuration::DictationConfiguration);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Voice::Dictation::Configuration::DictationConfiguration*, "Oculus.Voice.Dictation.Configuration", "DictationConfiguration");
// Type namespace: Oculus.Voice.Dictation.Configuration
namespace Oculus::Voice::Dictation::Configuration {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Voice.Dictation.Configuration.DictationConfiguration
  // [TokenAttribute] Offset: FFFFFFFF
  class DictationConfiguration : public ::Il2CppObject {
    public:
    public:
    // public System.Boolean multiPhrase
    // Size: 0x1
    // Offset: 0x10
    bool multiPhrase;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: multiPhrase and: scenario
    char __padding0[0x7] = {};
    // public System.String scenario
    // Size: 0x8
    // Offset: 0x18
    ::StringW scenario;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String inputType
    // Size: 0x8
    // Offset: 0x20
    ::StringW inputType;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: public System.Boolean multiPhrase
    [[deprecated("Use field access instead!")]] bool& dyn_multiPhrase();
    // Get instance field reference: public System.String scenario
    [[deprecated("Use field access instead!")]] ::StringW& dyn_scenario();
    // Get instance field reference: public System.String inputType
    [[deprecated("Use field access instead!")]] ::StringW& dyn_inputType();
    // public System.Void .ctor()
    // Offset: 0x571996C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DictationConfiguration* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Configuration::DictationConfiguration::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DictationConfiguration*, creationType>()));
    }
  }; // Oculus.Voice.Dictation.Configuration.DictationConfiguration
  #pragma pack(pop)
  static check_size<sizeof(DictationConfiguration), 32 + sizeof(::StringW)> __Oculus_Voice_Dictation_Configuration_DictationConfigurationSizeCheck;
  static_assert(sizeof(DictationConfiguration) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Voice::Dictation::Configuration::DictationConfiguration::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
