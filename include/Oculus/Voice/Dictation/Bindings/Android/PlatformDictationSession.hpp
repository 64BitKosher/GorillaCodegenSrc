// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Meta.WitAi.Dictation.Data.DictationSession
#include "Meta/WitAi/Dictation/Data/DictationSession.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: Oculus.Voice.Dictation.Bindings.Android
namespace Oculus::Voice::Dictation::Bindings::Android {
  // Forward declaring type: PlatformDictationSession
  class PlatformDictationSession;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Voice::Dictation::Bindings::Android::PlatformDictationSession);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Voice::Dictation::Bindings::Android::PlatformDictationSession*, "Oculus.Voice.Dictation.Bindings.Android", "PlatformDictationSession");
// Type namespace: Oculus.Voice.Dictation.Bindings.Android
namespace Oculus::Voice::Dictation::Bindings::Android {
  // Size: 0x48
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Voice.Dictation.Bindings.Android.PlatformDictationSession
  // [TokenAttribute] Offset: FFFFFFFF
  class PlatformDictationSession : public ::Meta::WitAi::Dictation::Data::DictationSession {
    public:
    public:
    // public System.String platformSessionId
    // Size: 0x8
    // Offset: 0x40
    ::StringW platformSessionId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Creating conversion operator: operator ::StringW
    constexpr operator ::StringW() const noexcept {
      return platformSessionId;
    }
    // Get instance field reference: public System.String platformSessionId
    [[deprecated("Use field access instead!")]] ::StringW& dyn_platformSessionId();
    // public System.Void .ctor()
    // Offset: 0x5719DD0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PlatformDictationSession* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Bindings::Android::PlatformDictationSession::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PlatformDictationSession*, creationType>()));
    }
  }; // Oculus.Voice.Dictation.Bindings.Android.PlatformDictationSession
  #pragma pack(pop)
  static check_size<sizeof(PlatformDictationSession), 64 + sizeof(::StringW)> __Oculus_Voice_Dictation_Bindings_Android_PlatformDictationSessionSizeCheck;
  static_assert(sizeof(PlatformDictationSession) == 0x48);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Voice::Dictation::Bindings::Android::PlatformDictationSession::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
