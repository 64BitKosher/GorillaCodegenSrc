// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Meta::WitAi::Configuration
namespace Meta::WitAi::Configuration {
  // Forward declaring type: WitDictationRuntimeConfiguration
  class WitDictationRuntimeConfiguration;
}
// Forward declaring namespace: Oculus::Voice::Dictation::Configuration
namespace Oculus::Voice::Dictation::Configuration {
  // Forward declaring type: DictationConfiguration
  class DictationConfiguration;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: AndroidJavaObject
  class AndroidJavaObject;
}
// Completed forward declares
// Type namespace: Oculus.Voice.Dictation.Bindings.Android
namespace Oculus::Voice::Dictation::Bindings::Android {
  // Forward declaring type: DictationConfigurationBinding
  class DictationConfigurationBinding;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Voice::Dictation::Bindings::Android::DictationConfigurationBinding);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Voice::Dictation::Bindings::Android::DictationConfigurationBinding*, "Oculus.Voice.Dictation.Bindings.Android", "DictationConfigurationBinding");
// Type namespace: Oculus.Voice.Dictation.Bindings.Android
namespace Oculus::Voice::Dictation::Bindings::Android {
  // Size: 0x24
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Voice.Dictation.Bindings.Android.DictationConfigurationBinding
  // [TokenAttribute] Offset: FFFFFFFF
  class DictationConfigurationBinding : public ::Il2CppObject {
    public:
    public:
    // private readonly Meta.WitAi.Configuration.WitDictationRuntimeConfiguration _runtimeConfiguration
    // Size: 0x8
    // Offset: 0x10
    ::Meta::WitAi::Configuration::WitDictationRuntimeConfiguration* runtimeConfiguration;
    // Field size check
    static_assert(sizeof(::Meta::WitAi::Configuration::WitDictationRuntimeConfiguration*) == 0x8);
    // private readonly Oculus.Voice.Dictation.Configuration.DictationConfiguration _dictationConfiguration
    // Size: 0x8
    // Offset: 0x18
    ::Oculus::Voice::Dictation::Configuration::DictationConfiguration* dictationConfiguration;
    // Field size check
    static_assert(sizeof(::Oculus::Voice::Dictation::Configuration::DictationConfiguration*) == 0x8);
    // private readonly System.Int32 MAX_PLATFORM_SUPPORTED_RECORDING_TIME_SECONDS
    // Size: 0x4
    // Offset: 0x20
    int MAX_PLATFORM_SUPPORTED_RECORDING_TIME_SECONDS;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Get instance field reference: private readonly Meta.WitAi.Configuration.WitDictationRuntimeConfiguration _runtimeConfiguration
    [[deprecated("Use field access instead!")]] ::Meta::WitAi::Configuration::WitDictationRuntimeConfiguration*& dyn__runtimeConfiguration();
    // Get instance field reference: private readonly Oculus.Voice.Dictation.Configuration.DictationConfiguration _dictationConfiguration
    [[deprecated("Use field access instead!")]] ::Oculus::Voice::Dictation::Configuration::DictationConfiguration*& dyn__dictationConfiguration();
    // Get instance field reference: private readonly System.Int32 MAX_PLATFORM_SUPPORTED_RECORDING_TIME_SECONDS
    [[deprecated("Use field access instead!")]] int& dyn_MAX_PLATFORM_SUPPORTED_RECORDING_TIME_SECONDS();
    // public System.Void .ctor(Meta.WitAi.Configuration.WitDictationRuntimeConfiguration runtimeConfiguration)
    // Offset: 0x57198BC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DictationConfigurationBinding* New_ctor(::Meta::WitAi::Configuration::WitDictationRuntimeConfiguration* runtimeConfiguration) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Bindings::Android::DictationConfigurationBinding::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DictationConfigurationBinding*, creationType>(runtimeConfiguration)));
    }
    // public UnityEngine.AndroidJavaObject ToJavaObject()
    // Offset: 0x57199F0
    ::UnityEngine::AndroidJavaObject* ToJavaObject();
  }; // Oculus.Voice.Dictation.Bindings.Android.DictationConfigurationBinding
  #pragma pack(pop)
  static check_size<sizeof(DictationConfigurationBinding), 32 + sizeof(int)> __Oculus_Voice_Dictation_Bindings_Android_DictationConfigurationBindingSizeCheck;
  static_assert(sizeof(DictationConfigurationBinding) == 0x24);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Voice::Dictation::Bindings::Android::DictationConfigurationBinding::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Oculus::Voice::Dictation::Bindings::Android::DictationConfigurationBinding::ToJavaObject
// Il2CppName: ToJavaObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::AndroidJavaObject* (Oculus::Voice::Dictation::Bindings::Android::DictationConfigurationBinding::*)()>(&Oculus::Voice::Dictation::Bindings::Android::DictationConfigurationBinding::ToJavaObject)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::Dictation::Bindings::Android::DictationConfigurationBinding*), "ToJavaObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
