// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Voice.Core.Bindings.Android.BaseServiceBinding
#include "Oculus/Voice/Core/Bindings/Android/BaseServiceBinding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: AndroidJavaObject
  class AndroidJavaObject;
}
// Forward declaring namespace: Oculus::Voice::Dictation::Bindings::Android
namespace Oculus::Voice::Dictation::Bindings::Android {
  // Forward declaring type: DictationConfigurationBinding
  class DictationConfigurationBinding;
  // Forward declaring type: DictationListenerBinding
  class DictationListenerBinding;
}
// Completed forward declares
// Type namespace: Oculus.Voice.Dictation.Bindings.Android
namespace Oculus::Voice::Dictation::Bindings::Android {
  // Forward declaring type: PlatformDictationSDKBinding
  class PlatformDictationSDKBinding;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Voice::Dictation::Bindings::Android::PlatformDictationSDKBinding);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Voice::Dictation::Bindings::Android::PlatformDictationSDKBinding*, "Oculus.Voice.Dictation.Bindings.Android", "PlatformDictationSDKBinding");
// Type namespace: Oculus.Voice.Dictation.Bindings.Android
namespace Oculus::Voice::Dictation::Bindings::Android {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Voice.Dictation.Bindings.Android.PlatformDictationSDKBinding
  // [TokenAttribute] Offset: FFFFFFFF
  class PlatformDictationSDKBinding : public ::Oculus::Voice::Core::Bindings::Android::BaseServiceBinding {
    public:
    // public System.Boolean get_Active()
    // Offset: 0x571A214
    bool get_Active();
    // public System.Boolean get_IsRequestActive()
    // Offset: 0x571A2FC
    bool get_IsRequestActive();
    // public System.Boolean get_IsSupported()
    // Offset: 0x571A12C
    bool get_IsSupported();
    // public System.Void .ctor(UnityEngine.AndroidJavaObject sdkInstance)
    // Offset: 0x571AAE4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PlatformDictationSDKBinding* New_ctor(::UnityEngine::AndroidJavaObject* sdkInstance) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Dictation::Bindings::Android::PlatformDictationSDKBinding::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PlatformDictationSDKBinding*, creationType>(sdkInstance)));
    }
    // public System.Void StartDictation(Oculus.Voice.Dictation.Bindings.Android.DictationConfigurationBinding configuration)
    // Offset: 0x571A8D0
    void StartDictation(::Oculus::Voice::Dictation::Bindings::Android::DictationConfigurationBinding* configuration);
    // public System.Void StopDictation()
    // Offset: 0x571A9F0
    void StopDictation();
    // public System.Void SetListener(Oculus.Voice.Dictation.Bindings.Android.DictationListenerBinding listenerBinding)
    // Offset: 0x571A73C
    void SetListener(::Oculus::Voice::Dictation::Bindings::Android::DictationListenerBinding* listenerBinding);
  }; // Oculus.Voice.Dictation.Bindings.Android.PlatformDictationSDKBinding
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Voice::Dictation::Bindings::Android::PlatformDictationSDKBinding::get_Active
// Il2CppName: get_Active
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Voice::Dictation::Bindings::Android::PlatformDictationSDKBinding::*)()>(&Oculus::Voice::Dictation::Bindings::Android::PlatformDictationSDKBinding::get_Active)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::Dictation::Bindings::Android::PlatformDictationSDKBinding*), "get_Active", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::Dictation::Bindings::Android::PlatformDictationSDKBinding::get_IsRequestActive
// Il2CppName: get_IsRequestActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Voice::Dictation::Bindings::Android::PlatformDictationSDKBinding::*)()>(&Oculus::Voice::Dictation::Bindings::Android::PlatformDictationSDKBinding::get_IsRequestActive)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::Dictation::Bindings::Android::PlatformDictationSDKBinding*), "get_IsRequestActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::Dictation::Bindings::Android::PlatformDictationSDKBinding::get_IsSupported
// Il2CppName: get_IsSupported
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Voice::Dictation::Bindings::Android::PlatformDictationSDKBinding::*)()>(&Oculus::Voice::Dictation::Bindings::Android::PlatformDictationSDKBinding::get_IsSupported)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::Dictation::Bindings::Android::PlatformDictationSDKBinding*), "get_IsSupported", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::Dictation::Bindings::Android::PlatformDictationSDKBinding::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Oculus::Voice::Dictation::Bindings::Android::PlatformDictationSDKBinding::StartDictation
// Il2CppName: StartDictation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Voice::Dictation::Bindings::Android::PlatformDictationSDKBinding::*)(::Oculus::Voice::Dictation::Bindings::Android::DictationConfigurationBinding*)>(&Oculus::Voice::Dictation::Bindings::Android::PlatformDictationSDKBinding::StartDictation)> {
  static const MethodInfo* get() {
    static auto* configuration = &::il2cpp_utils::GetClassFromName("Oculus.Voice.Dictation.Bindings.Android", "DictationConfigurationBinding")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::Dictation::Bindings::Android::PlatformDictationSDKBinding*), "StartDictation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{configuration});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::Dictation::Bindings::Android::PlatformDictationSDKBinding::StopDictation
// Il2CppName: StopDictation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Voice::Dictation::Bindings::Android::PlatformDictationSDKBinding::*)()>(&Oculus::Voice::Dictation::Bindings::Android::PlatformDictationSDKBinding::StopDictation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::Dictation::Bindings::Android::PlatformDictationSDKBinding*), "StopDictation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::Dictation::Bindings::Android::PlatformDictationSDKBinding::SetListener
// Il2CppName: SetListener
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Voice::Dictation::Bindings::Android::PlatformDictationSDKBinding::*)(::Oculus::Voice::Dictation::Bindings::Android::DictationListenerBinding*)>(&Oculus::Voice::Dictation::Bindings::Android::PlatformDictationSDKBinding::SetListener)> {
  static const MethodInfo* get() {
    static auto* listenerBinding = &::il2cpp_utils::GetClassFromName("Oculus.Voice.Dictation.Bindings.Android", "DictationListenerBinding")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::Dictation::Bindings::Android::PlatformDictationSDKBinding*), "SetListener", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{listenerBinding});
  }
};
