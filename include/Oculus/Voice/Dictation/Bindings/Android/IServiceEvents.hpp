// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: Oculus.Voice.Dictation.Bindings.Android
namespace Oculus::Voice::Dictation::Bindings::Android {
  // Forward declaring type: IServiceEvents
  class IServiceEvents;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Voice::Dictation::Bindings::Android::IServiceEvents);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Voice::Dictation::Bindings::Android::IServiceEvents*, "Oculus.Voice.Dictation.Bindings.Android", "IServiceEvents");
// Type namespace: Oculus.Voice.Dictation.Bindings.Android
namespace Oculus::Voice::Dictation::Bindings::Android {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Voice.Dictation.Bindings.Android.IServiceEvents
  // [TokenAttribute] Offset: FFFFFFFF
  class IServiceEvents {
    public:
    // public System.Void OnServiceNotAvailable(System.String error, System.String message)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void OnServiceNotAvailable(::StringW error, ::StringW message);
  }; // Oculus.Voice.Dictation.Bindings.Android.IServiceEvents
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Voice::Dictation::Bindings::Android::IServiceEvents::OnServiceNotAvailable
// Il2CppName: OnServiceNotAvailable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Voice::Dictation::Bindings::Android::IServiceEvents::*)(::StringW, ::StringW)>(&Oculus::Voice::Dictation::Bindings::Android::IServiceEvents::OnServiceNotAvailable)> {
  static const MethodInfo* get() {
    static auto* error = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::Dictation::Bindings::Android::IServiceEvents*), "OnServiceNotAvailable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{error, message});
  }
};
