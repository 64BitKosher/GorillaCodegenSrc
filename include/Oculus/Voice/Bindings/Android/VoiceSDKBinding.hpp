// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Voice.Core.Bindings.Android.BaseServiceBinding
#include "Oculus/Voice/Core/Bindings/Android/BaseServiceBinding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: AndroidJavaObject
  class AndroidJavaObject;
}
// Forward declaring namespace: Meta::WitAi::Configuration
namespace Meta::WitAi::Configuration {
  // Forward declaring type: WitRequestOptions
  class WitRequestOptions;
  // Forward declaring type: WitRuntimeConfiguration
  class WitRuntimeConfiguration;
}
// Forward declaring namespace: Oculus::Voice::Bindings::Android
namespace Oculus::Voice::Bindings::Android {
  // Forward declaring type: VoiceSDKListenerBinding
  class VoiceSDKListenerBinding;
}
// Completed forward declares
// Type namespace: Oculus.Voice.Bindings.Android
namespace Oculus::Voice::Bindings::Android {
  // Forward declaring type: VoiceSDKBinding
  class VoiceSDKBinding;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Voice::Bindings::Android::VoiceSDKBinding);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Voice::Bindings::Android::VoiceSDKBinding*, "Oculus.Voice.Bindings.Android", "VoiceSDKBinding");
// Type namespace: Oculus.Voice.Bindings.Android
namespace Oculus::Voice::Bindings::Android {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Voice.Bindings.Android.VoiceSDKBinding
  // [TokenAttribute] Offset: FFFFFFFF
  class VoiceSDKBinding : public ::Oculus::Voice::Core::Bindings::Android::BaseServiceBinding {
    public:
    // public System.Void .ctor(UnityEngine.AndroidJavaObject sdkInstance)
    // Offset: 0x5723424
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static VoiceSDKBinding* New_ctor(::UnityEngine::AndroidJavaObject* sdkInstance) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKBinding::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<VoiceSDKBinding*, creationType>(sdkInstance)));
    }
    // public System.Boolean get_Active()
    // Offset: 0x572342C
    bool get_Active();
    // public System.Boolean get_IsRequestActive()
    // Offset: 0x57234FC
    bool get_IsRequestActive();
    // public System.Boolean get_MicActive()
    // Offset: 0x57235CC
    bool get_MicActive();
    // public System.Boolean get_PlatformSupportsWit()
    // Offset: 0x572369C
    bool get_PlatformSupportsWit();
    // public System.Void Activate(System.String text, Meta.WitAi.Configuration.WitRequestOptions options)
    // Offset: 0x572376C
    void Activate(::StringW text, ::Meta::WitAi::Configuration::WitRequestOptions* options);
    // public System.Void Activate(Meta.WitAi.Configuration.WitRequestOptions options)
    // Offset: 0x5723888
    void Activate(::Meta::WitAi::Configuration::WitRequestOptions* options);
    // public System.Void ActivateImmediately(Meta.WitAi.Configuration.WitRequestOptions options)
    // Offset: 0x572396C
    void ActivateImmediately(::Meta::WitAi::Configuration::WitRequestOptions* options);
    // public System.Void Deactivate()
    // Offset: 0x5723A50
    void Deactivate();
    // public System.Void DeactivateAndAbortRequest()
    // Offset: 0x5723B0C
    void DeactivateAndAbortRequest();
    // public System.Void SetRuntimeConfiguration(Meta.WitAi.Configuration.WitRuntimeConfiguration configuration)
    // Offset: 0x5723BC8
    void SetRuntimeConfiguration(::Meta::WitAi::Configuration::WitRuntimeConfiguration* configuration);
    // public System.Void SetListener(Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding listener)
    // Offset: 0x5724170
    void SetListener(::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding* listener);
    // public System.Void Connect()
    // Offset: 0x5724240
    void Connect();
  }; // Oculus.Voice.Bindings.Android.VoiceSDKBinding
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Voice::Bindings::Android::VoiceSDKBinding::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Oculus::Voice::Bindings::Android::VoiceSDKBinding::get_Active
// Il2CppName: get_Active
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Voice::Bindings::Android::VoiceSDKBinding::*)()>(&Oculus::Voice::Bindings::Android::VoiceSDKBinding::get_Active)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::Bindings::Android::VoiceSDKBinding*), "get_Active", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::Bindings::Android::VoiceSDKBinding::get_IsRequestActive
// Il2CppName: get_IsRequestActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Voice::Bindings::Android::VoiceSDKBinding::*)()>(&Oculus::Voice::Bindings::Android::VoiceSDKBinding::get_IsRequestActive)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::Bindings::Android::VoiceSDKBinding*), "get_IsRequestActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::Bindings::Android::VoiceSDKBinding::get_MicActive
// Il2CppName: get_MicActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Voice::Bindings::Android::VoiceSDKBinding::*)()>(&Oculus::Voice::Bindings::Android::VoiceSDKBinding::get_MicActive)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::Bindings::Android::VoiceSDKBinding*), "get_MicActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::Bindings::Android::VoiceSDKBinding::get_PlatformSupportsWit
// Il2CppName: get_PlatformSupportsWit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Voice::Bindings::Android::VoiceSDKBinding::*)()>(&Oculus::Voice::Bindings::Android::VoiceSDKBinding::get_PlatformSupportsWit)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::Bindings::Android::VoiceSDKBinding*), "get_PlatformSupportsWit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::Bindings::Android::VoiceSDKBinding::Activate
// Il2CppName: Activate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Voice::Bindings::Android::VoiceSDKBinding::*)(::StringW, ::Meta::WitAi::Configuration::WitRequestOptions*)>(&Oculus::Voice::Bindings::Android::VoiceSDKBinding::Activate)> {
  static const MethodInfo* get() {
    static auto* text = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Configuration", "WitRequestOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::Bindings::Android::VoiceSDKBinding*), "Activate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{text, options});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::Bindings::Android::VoiceSDKBinding::Activate
// Il2CppName: Activate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Voice::Bindings::Android::VoiceSDKBinding::*)(::Meta::WitAi::Configuration::WitRequestOptions*)>(&Oculus::Voice::Bindings::Android::VoiceSDKBinding::Activate)> {
  static const MethodInfo* get() {
    static auto* options = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Configuration", "WitRequestOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::Bindings::Android::VoiceSDKBinding*), "Activate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{options});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::Bindings::Android::VoiceSDKBinding::ActivateImmediately
// Il2CppName: ActivateImmediately
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Voice::Bindings::Android::VoiceSDKBinding::*)(::Meta::WitAi::Configuration::WitRequestOptions*)>(&Oculus::Voice::Bindings::Android::VoiceSDKBinding::ActivateImmediately)> {
  static const MethodInfo* get() {
    static auto* options = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Configuration", "WitRequestOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::Bindings::Android::VoiceSDKBinding*), "ActivateImmediately", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{options});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::Bindings::Android::VoiceSDKBinding::Deactivate
// Il2CppName: Deactivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Voice::Bindings::Android::VoiceSDKBinding::*)()>(&Oculus::Voice::Bindings::Android::VoiceSDKBinding::Deactivate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::Bindings::Android::VoiceSDKBinding*), "Deactivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::Bindings::Android::VoiceSDKBinding::DeactivateAndAbortRequest
// Il2CppName: DeactivateAndAbortRequest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Voice::Bindings::Android::VoiceSDKBinding::*)()>(&Oculus::Voice::Bindings::Android::VoiceSDKBinding::DeactivateAndAbortRequest)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::Bindings::Android::VoiceSDKBinding*), "DeactivateAndAbortRequest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::Bindings::Android::VoiceSDKBinding::SetRuntimeConfiguration
// Il2CppName: SetRuntimeConfiguration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Voice::Bindings::Android::VoiceSDKBinding::*)(::Meta::WitAi::Configuration::WitRuntimeConfiguration*)>(&Oculus::Voice::Bindings::Android::VoiceSDKBinding::SetRuntimeConfiguration)> {
  static const MethodInfo* get() {
    static auto* configuration = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Configuration", "WitRuntimeConfiguration")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::Bindings::Android::VoiceSDKBinding*), "SetRuntimeConfiguration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{configuration});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::Bindings::Android::VoiceSDKBinding::SetListener
// Il2CppName: SetListener
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Voice::Bindings::Android::VoiceSDKBinding::*)(::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding*)>(&Oculus::Voice::Bindings::Android::VoiceSDKBinding::SetListener)> {
  static const MethodInfo* get() {
    static auto* listener = &::il2cpp_utils::GetClassFromName("Oculus.Voice.Bindings.Android", "VoiceSDKListenerBinding")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::Bindings::Android::VoiceSDKBinding*), "SetListener", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{listener});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::Bindings::Android::VoiceSDKBinding::Connect
// Il2CppName: Connect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Voice::Bindings::Android::VoiceSDKBinding::*)()>(&Oculus::Voice::Bindings::Android::VoiceSDKBinding::Connect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::Bindings::Android::VoiceSDKBinding*), "Connect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
