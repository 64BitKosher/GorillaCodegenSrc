// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
}
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: StringBuilder
  class StringBuilder;
}
// Completed forward declares
// Type namespace: Oculus.Voice
namespace Oculus::Voice {
  // Forward declaring type: VoiceSDKConstants
  class VoiceSDKConstants;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Voice::VoiceSDKConstants);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Voice::VoiceSDKConstants*, "Oculus.Voice", "VoiceSDKConstants");
// Type namespace: Oculus.Voice
namespace Oculus::Voice {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Voice.VoiceSDKConstants
  // [TokenAttribute] Offset: FFFFFFFF
  class VoiceSDKConstants : public ::Il2CppObject {
    public:
    // Get static field: static private System.Boolean _isInitialized
    static bool _get__isInitialized();
    // Set static field: static private System.Boolean _isInitialized
    static void _set__isInitialized(bool value);
    // Get static field: static private System.String _sdkVersion
    static ::StringW _get__sdkVersion();
    // Set static field: static private System.String _sdkVersion
    static void _set__sdkVersion(::StringW value);
    // static field const value: static private System.String _userAgentPrefix
    static constexpr const char* _userAgentPrefix = "voice-sdk-";
    // Get static field: static private System.String _userAgentPrefix
    static ::StringW _get__userAgentPrefix();
    // Set static field: static private System.String _userAgentPrefix
    static void _set__userAgentPrefix(::StringW value);
    // static private System.Void .cctor()
    // Offset: 0x5721D84
    static void _cctor();
    // static private System.Void Init()
    // Offset: 0x5721DEC
    static void Init();
    // static public System.String get_SdkVersion()
    // Offset: 0x571CE98
    static ::StringW get_SdkVersion();
    // static private System.Void OnCustomUserAgent(System.Text.StringBuilder sb)
    // Offset: 0x5721EBC
    static void OnCustomUserAgent(::System::Text::StringBuilder* sb);
  }; // Oculus.Voice.VoiceSDKConstants
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Voice::VoiceSDKConstants::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Oculus::Voice::VoiceSDKConstants::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::VoiceSDKConstants*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::VoiceSDKConstants::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Oculus::Voice::VoiceSDKConstants::Init)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::VoiceSDKConstants*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::VoiceSDKConstants::get_SdkVersion
// Il2CppName: get_SdkVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&Oculus::Voice::VoiceSDKConstants::get_SdkVersion)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::VoiceSDKConstants*), "get_SdkVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::VoiceSDKConstants::OnCustomUserAgent
// Il2CppName: OnCustomUserAgent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Text::StringBuilder*)>(&Oculus::Voice::VoiceSDKConstants::OnCustomUserAgent)> {
  static const MethodInfo* get() {
    static auto* sb = &::il2cpp_utils::GetClassFromName("System.Text", "StringBuilder")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::VoiceSDKConstants*), "OnCustomUserAgent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sb});
  }
};
