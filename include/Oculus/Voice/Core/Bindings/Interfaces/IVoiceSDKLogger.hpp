// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: Oculus.Voice.Core.Bindings.Interfaces
namespace Oculus::Voice::Core::Bindings::Interfaces {
  // Forward declaring type: IVoiceSDKLogger
  class IVoiceSDKLogger;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger*, "Oculus.Voice.Core.Bindings.Interfaces", "IVoiceSDKLogger");
// Type namespace: Oculus.Voice.Core.Bindings.Interfaces
namespace Oculus::Voice::Core::Bindings::Interfaces {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Voice.Core.Bindings.Interfaces.IVoiceSDKLogger
  // [TokenAttribute] Offset: FFFFFFFF
  class IVoiceSDKLogger {
    public:
    // public System.Boolean get_IsUsingPlatformIntegration()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_IsUsingPlatformIntegration();
    // public System.Void set_IsUsingPlatformIntegration(System.Boolean value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_IsUsingPlatformIntegration(bool value);
    // public System.Boolean get_ShouldLogToConsole()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_ShouldLogToConsole();
    // public System.Void set_ShouldLogToConsole(System.Boolean value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_ShouldLogToConsole(bool value);
    // public System.String get_WitApplication()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::StringW get_WitApplication();
    // public System.Void set_WitApplication(System.String value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_WitApplication(::StringW value);
    // public System.Void LogInteractionStart(System.String requestId, System.String witApi)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void LogInteractionStart(::StringW requestId, ::StringW witApi);
    // public System.Void LogInteractionEndSuccess()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void LogInteractionEndSuccess();
    // public System.Void LogInteractionEndFailure(System.String errorMessage)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void LogInteractionEndFailure(::StringW errorMessage);
    // public System.Void LogInteractionPoint(System.String interactionPoint)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void LogInteractionPoint(::StringW interactionPoint);
    // public System.Void LogAnnotation(System.String annotationKey, System.String annotationValue)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void LogAnnotation(::StringW annotationKey, ::StringW annotationValue);
    // public System.Void LogFirstTranscriptionTime()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void LogFirstTranscriptionTime();
  }; // Oculus.Voice.Core.Bindings.Interfaces.IVoiceSDKLogger
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::get_IsUsingPlatformIntegration
// Il2CppName: get_IsUsingPlatformIntegration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::*)()>(&Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::get_IsUsingPlatformIntegration)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger*), "get_IsUsingPlatformIntegration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::set_IsUsingPlatformIntegration
// Il2CppName: set_IsUsingPlatformIntegration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::*)(bool)>(&Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::set_IsUsingPlatformIntegration)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger*), "set_IsUsingPlatformIntegration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::get_ShouldLogToConsole
// Il2CppName: get_ShouldLogToConsole
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::*)()>(&Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::get_ShouldLogToConsole)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger*), "get_ShouldLogToConsole", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::set_ShouldLogToConsole
// Il2CppName: set_ShouldLogToConsole
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::*)(bool)>(&Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::set_ShouldLogToConsole)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger*), "set_ShouldLogToConsole", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::get_WitApplication
// Il2CppName: get_WitApplication
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::*)()>(&Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::get_WitApplication)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger*), "get_WitApplication", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::set_WitApplication
// Il2CppName: set_WitApplication
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::*)(::StringW)>(&Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::set_WitApplication)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger*), "set_WitApplication", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::LogInteractionStart
// Il2CppName: LogInteractionStart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::*)(::StringW, ::StringW)>(&Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::LogInteractionStart)> {
  static const MethodInfo* get() {
    static auto* requestId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* witApi = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger*), "LogInteractionStart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{requestId, witApi});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::LogInteractionEndSuccess
// Il2CppName: LogInteractionEndSuccess
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::*)()>(&Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::LogInteractionEndSuccess)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger*), "LogInteractionEndSuccess", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::LogInteractionEndFailure
// Il2CppName: LogInteractionEndFailure
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::*)(::StringW)>(&Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::LogInteractionEndFailure)> {
  static const MethodInfo* get() {
    static auto* errorMessage = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger*), "LogInteractionEndFailure", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{errorMessage});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::LogInteractionPoint
// Il2CppName: LogInteractionPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::*)(::StringW)>(&Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::LogInteractionPoint)> {
  static const MethodInfo* get() {
    static auto* interactionPoint = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger*), "LogInteractionPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactionPoint});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::LogAnnotation
// Il2CppName: LogAnnotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::*)(::StringW, ::StringW)>(&Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::LogAnnotation)> {
  static const MethodInfo* get() {
    static auto* annotationKey = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* annotationValue = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger*), "LogAnnotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{annotationKey, annotationValue});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::LogFirstTranscriptionTime
// Il2CppName: LogFirstTranscriptionTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::*)()>(&Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::LogFirstTranscriptionTime)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger*), "LogFirstTranscriptionTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
