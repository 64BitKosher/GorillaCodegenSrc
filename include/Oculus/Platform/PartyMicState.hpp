// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: Oculus.Platform
namespace Oculus::Platform {
  // Forward declaring type: PartyMicState
  struct PartyMicState;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Platform::PartyMicState, "Oculus.Platform", "PartyMicState");
// Type namespace: Oculus.Platform
namespace Oculus::Platform {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Platform.PartyMicState
  // [TokenAttribute] Offset: FFFFFFFF
  struct PartyMicState/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: PartyMicState
    constexpr PartyMicState(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public Oculus.Platform.PartyMicState Unknown
    static constexpr const int Unknown = 0;
    // Get static field: static public Oculus.Platform.PartyMicState Unknown
    static ::Oculus::Platform::PartyMicState _get_Unknown();
    // Set static field: static public Oculus.Platform.PartyMicState Unknown
    static void _set_Unknown(::Oculus::Platform::PartyMicState value);
    // static field const value: static public Oculus.Platform.PartyMicState Party
    static constexpr const int Party = 1;
    // Get static field: static public Oculus.Platform.PartyMicState Party
    static ::Oculus::Platform::PartyMicState _get_Party();
    // Set static field: static public Oculus.Platform.PartyMicState Party
    static void _set_Party(::Oculus::Platform::PartyMicState value);
    // static field const value: static public Oculus.Platform.PartyMicState App
    static constexpr const int App = 2;
    // Get static field: static public Oculus.Platform.PartyMicState App
    static ::Oculus::Platform::PartyMicState _get_App();
    // Set static field: static public Oculus.Platform.PartyMicState App
    static void _set_App(::Oculus::Platform::PartyMicState value);
    // static field const value: static public Oculus.Platform.PartyMicState Mute
    static constexpr const int Mute = 3;
    // Get static field: static public Oculus.Platform.PartyMicState Mute
    static ::Oculus::Platform::PartyMicState _get_Mute();
    // Set static field: static public Oculus.Platform.PartyMicState Mute
    static void _set_Mute(::Oculus::Platform::PartyMicState value);
    // static field const value: static public Oculus.Platform.PartyMicState Inactive
    static constexpr const int Inactive = 4;
    // Get static field: static public Oculus.Platform.PartyMicState Inactive
    static ::Oculus::Platform::PartyMicState _get_Inactive();
    // Set static field: static public Oculus.Platform.PartyMicState Inactive
    static void _set_Inactive(::Oculus::Platform::PartyMicState value);
    // static field const value: static public Oculus.Platform.PartyMicState InputShared
    static constexpr const int InputShared = 5;
    // Get static field: static public Oculus.Platform.PartyMicState InputShared
    static ::Oculus::Platform::PartyMicState _get_InputShared();
    // Set static field: static public Oculus.Platform.PartyMicState InputShared
    static void _set_InputShared(::Oculus::Platform::PartyMicState value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // Oculus.Platform.PartyMicState
  #pragma pack(pop)
  static check_size<sizeof(PartyMicState), 0 + sizeof(int)> __Oculus_Platform_PartyMicStateSizeCheck;
  static_assert(sizeof(PartyMicState) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
