// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Platform
namespace Oculus::Platform {
  // Forward declaring type: Request
  class Request;
  // Forward declaring type: ReportRequestResponse
  struct ReportRequestResponse;
}
// Completed forward declares
// Type namespace: Oculus.Platform
namespace Oculus::Platform {
  // Forward declaring type: AbuseReport
  class AbuseReport;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Platform::AbuseReport);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Platform::AbuseReport*, "Oculus.Platform", "AbuseReport");
// Type namespace: Oculus.Platform
namespace Oculus::Platform {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Platform.AbuseReport
  // [TokenAttribute] Offset: FFFFFFFF
  class AbuseReport : public ::Il2CppObject {
    public:
    // static public Oculus.Platform.Request ReportRequestHandled(Oculus.Platform.ReportRequestResponse response)
    // Offset: 0x48505E8
    static ::Oculus::Platform::Request* ReportRequestHandled(::Oculus::Platform::ReportRequestResponse response);
    // static public System.Void SetReportButtonPressedNotificationCallback(Oculus.Platform.Message`1/Callback<System.String> callback)
    // Offset: 0x4850818
    static void SetReportButtonPressedNotificationCallback(typename ::Oculus::Platform::Message_1<::StringW>::Callback* callback);
  }; // Oculus.Platform.AbuseReport
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Platform::AbuseReport::ReportRequestHandled
// Il2CppName: ReportRequestHandled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::Request* (*)(::Oculus::Platform::ReportRequestResponse)>(&Oculus::Platform::AbuseReport::ReportRequestHandled)> {
  static const MethodInfo* get() {
    static auto* response = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "ReportRequestResponse")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::AbuseReport*), "ReportRequestHandled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{response});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::AbuseReport::SetReportButtonPressedNotificationCallback
// Il2CppName: SetReportButtonPressedNotificationCallback
// Cannot write MetadataGetter for a method that has a nested type with a declaring generic type anywhere within it!
// Talk to sc2ad if this is something you want
