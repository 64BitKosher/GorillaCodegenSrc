// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
// Including type: Oculus.Platform.InitConfigOptions
#include "Oculus/Platform/InitConfigOptions.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: Oculus.Platform.Message
#include "Oculus/Platform/Message.hpp"
// Including type: Oculus.Platform.KeyValuePairType
#include "Oculus/Platform/KeyValuePairType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: Oculus::Platform
namespace Oculus::Platform {
  // Forward declaring type: LaunchResult
  struct LaunchResult;
  // Forward declaring type: VoipMuteState
  struct VoipMuteState;
  // Forward declaring type: LogEventName
  struct LogEventName;
  // Forward declaring type: SystemVoipStatus
  struct SystemVoipStatus;
  // Forward declaring type: VoipDtxState
  struct VoipDtxState;
  // Forward declaring type: VoipBitrate
  struct VoipBitrate;
  // Forward declaring type: VoipSampleRate
  struct VoipSampleRate;
  // Forward declaring type: ReportRequestResponse
  struct ReportRequestResponse;
  // Forward declaring type: LeaderboardFilterType
  struct LeaderboardFilterType;
  // Forward declaring type: LeaderboardStartAt
  struct LeaderboardStartAt;
  // Forward declaring type: LivestreamingAudience
  struct LivestreamingAudience;
  // Forward declaring type: LivestreamingMicrophoneStatus
  struct LivestreamingMicrophoneStatus;
  // Forward declaring type: MediaContentType
  struct MediaContentType;
  // Forward declaring type: NetSyncVoipMicSource
  struct NetSyncVoipMicSource;
  // Forward declaring type: NetSyncVoipStreamMode
  struct NetSyncVoipStreamMode;
  // Forward declaring type: AppAgeCategory
  struct AppAgeCategory;
  // Forward declaring type: AchievementType
  struct AchievementType;
  // Forward declaring type: AppStatus
  struct AppStatus;
  // Forward declaring type: ChallengeCreationType
  struct ChallengeCreationType;
  // Forward declaring type: ChallengeVisibility
  struct ChallengeVisibility;
  // Forward declaring type: LaunchType
  struct LaunchType;
  // Forward declaring type: ServiceProvider
  struct ServiceProvider;
  // Forward declaring type: LivestreamingStartStatus
  struct LivestreamingStartStatus;
  // Forward declaring type: NetSyncDisconnectReason
  struct NetSyncDisconnectReason;
  // Forward declaring type: NetSyncConnectionStatus
  struct NetSyncConnectionStatus;
  // Forward declaring type: PartyUpdateAction
  struct PartyUpdateAction;
  // Forward declaring type: PlatformInitializeResult
  struct PlatformInitializeResult;
  // Forward declaring type: SdkAccountType
  struct SdkAccountType;
  // Forward declaring type: ShareMediaStatus
  struct ShareMediaStatus;
  // Forward declaring type: UserPresenceStatus
  struct UserPresenceStatus;
  // Forward declaring type: AccountAgeCategory
  struct AccountAgeCategory;
  // Forward declaring type: AbuseReportType
  struct AbuseReportType;
  // Forward declaring type: AbuseReportVideoMode
  struct AbuseReportVideoMode;
  // Forward declaring type: ChallengeViewerFilter
  struct ChallengeViewerFilter;
  // Forward declaring type: MultiplayerErrorErrorKey
  struct MultiplayerErrorErrorKey;
  // Forward declaring type: TimeWindow
  struct TimeWindow;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
  // Forward declaring type: Array
  class Array;
  // Forward declaring type: DateTime
  struct DateTime;
  // Forward declaring type: UIntPtr
  struct UIntPtr;
}
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: UTF8Encoding
  class UTF8Encoding;
}
// Completed forward declares
// Type namespace: Oculus.Platform
namespace Oculus::Platform {
  // Forward declaring type: CAPI
  class CAPI;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Platform::CAPI);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Platform::CAPI*, "Oculus.Platform", "CAPI");
// Type namespace: Oculus.Platform
namespace Oculus::Platform {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Platform.CAPI
  // [TokenAttribute] Offset: FFFFFFFF
  class CAPI : public ::Il2CppObject {
    public:
    // Nested type: ::Oculus::Platform::CAPI::ovrKeyValuePair
    struct ovrKeyValuePair;
    // Nested type: ::Oculus::Platform::CAPI::ovrNetSyncVec3
    struct ovrNetSyncVec3;
    // Nested type: ::Oculus::Platform::CAPI::OculusInitParams
    struct OculusInitParams;
    // Nested type: ::Oculus::Platform::CAPI::FilterCallback
    class FilterCallback;
    // Size: 0x28
    #pragma pack(push, 1)
    // WARNING Layout: Sequential may not be correctly taken into account!
    // Autogenerated type: Oculus.Platform.CAPI/ovrKeyValuePair
    // [TokenAttribute] Offset: FFFFFFFF
    struct ovrKeyValuePair/*, public ::System::ValueType*/ {
      public:
      public:
      // public System.String key_
      // Size: 0x8
      // Offset: 0x0
      ::StringW key;
      // Field size check
      static_assert(sizeof(::StringW) == 0x8);
      // private Oculus.Platform.KeyValuePairType valueType_
      // Size: 0x4
      // Offset: 0x8
      ::Oculus::Platform::KeyValuePairType valueType;
      // Field size check
      static_assert(sizeof(::Oculus::Platform::KeyValuePairType) == 0x4);
      // Padding between fields: valueType and: stringValue
      char __padding1[0x4] = {};
      // public System.String stringValue_
      // Size: 0x8
      // Offset: 0x10
      ::StringW stringValue;
      // Field size check
      static_assert(sizeof(::StringW) == 0x8);
      // public System.Int32 intValue_
      // Size: 0x4
      // Offset: 0x18
      int intValue;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // Padding between fields: intValue and: doubleValue
      char __padding3[0x4] = {};
      // public System.Double doubleValue_
      // Size: 0x8
      // Offset: 0x20
      double doubleValue;
      // Field size check
      static_assert(sizeof(double) == 0x8);
      public:
      // Creating value type constructor for type: ovrKeyValuePair
      constexpr ovrKeyValuePair(::StringW key_ = {}, ::Oculus::Platform::KeyValuePairType valueType_ = {}, ::StringW stringValue_ = {}, int intValue_ = {}, double doubleValue_ = {}) noexcept : key{key_}, valueType{valueType_}, stringValue{stringValue_}, intValue{intValue_}, doubleValue{doubleValue_} {}
      // Creating interface conversion operator: operator ::System::ValueType
      operator ::System::ValueType() noexcept {
        return *reinterpret_cast<::System::ValueType*>(this);
      }
      // Get instance field reference: public System.String key_
      [[deprecated("Use field access instead!")]] ::StringW& dyn_key_();
      // Get instance field reference: private Oculus.Platform.KeyValuePairType valueType_
      [[deprecated("Use field access instead!")]] ::Oculus::Platform::KeyValuePairType& dyn_valueType_();
      // Get instance field reference: public System.String stringValue_
      [[deprecated("Use field access instead!")]] ::StringW& dyn_stringValue_();
      // Get instance field reference: public System.Int32 intValue_
      [[deprecated("Use field access instead!")]] int& dyn_intValue_();
      // Get instance field reference: public System.Double doubleValue_
      [[deprecated("Use field access instead!")]] double& dyn_doubleValue_();
      // public System.Void .ctor(System.String key, System.String value)
      // Offset: 0x4853D24
      ovrKeyValuePair(::StringW key, ::StringW value);
      // public System.Void .ctor(System.String key, System.Int32 value)
      // Offset: 0x48536D4
      ovrKeyValuePair(::StringW key, int value);
      // public System.Void .ctor(System.String key, System.Double value)
      // Offset: 0x4853D64
      ovrKeyValuePair(::StringW key, double value);
    }; // Oculus.Platform.CAPI/ovrKeyValuePair
    #pragma pack(pop)
    static check_size<sizeof(CAPI::ovrKeyValuePair), 32 + sizeof(double)> __Oculus_Platform_CAPI_ovrKeyValuePairSizeCheck;
    static_assert(sizeof(CAPI::ovrKeyValuePair) == 0x28);
    // static field const value: static public System.String DLL_NAME
    static constexpr const char* DLL_NAME = "ovrplatformloader";
    // Get static field: static public System.String DLL_NAME
    static ::StringW _get_DLL_NAME();
    // Set static field: static public System.String DLL_NAME
    static void _set_DLL_NAME(::StringW value);
    // Get static field: static private System.Text.UTF8Encoding nativeStringEncoding
    static ::System::Text::UTF8Encoding* _get_nativeStringEncoding();
    // Set static field: static private System.Text.UTF8Encoding nativeStringEncoding
    static void _set_nativeStringEncoding(::System::Text::UTF8Encoding* value);
    // static field const value: static public System.Int32 VoipFilterBufferSize
    static constexpr const int VoipFilterBufferSize = 480;
    // Get static field: static public System.Int32 VoipFilterBufferSize
    static int _get_VoipFilterBufferSize();
    // Set static field: static public System.Int32 VoipFilterBufferSize
    static void _set_VoipFilterBufferSize(int value);
    // static public System.IntPtr ArrayOfStructsToIntPtr(System.Array ar)
    // Offset: 0x485328C
    static ::System::IntPtr ArrayOfStructsToIntPtr(::System::Array* ar);
    // static public Oculus.Platform.CAPI/ovrKeyValuePair[] DictionaryToOVRKeyValuePairs(System.Collections.Generic.Dictionary`2<Oculus.Platform.InitConfigOptions,System.Boolean> dict)
    // Offset: 0x4853424
    static ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair> DictionaryToOVRKeyValuePairs(::System::Collections::Generic::Dictionary_2<::Oculus::Platform::InitConfigOptions, bool>* dict);
    // static public Oculus.Platform.CAPI/ovrKeyValuePair[] DictionaryToOVRKeyValuePairs(System.Collections.Generic.Dictionary`2<System.String,System.Object> dict)
    // Offset: 0x4853718
    static ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair> DictionaryToOVRKeyValuePairs(::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* dict);
    // static public System.Byte[] IntPtrToByteArray(System.IntPtr data, System.UInt64 size)
    // Offset: 0x4853DA8
    static ::ArrayW<uint8_t> IntPtrToByteArray(::System::IntPtr data, uint64_t size);
    // static public System.Collections.Generic.Dictionary`2<System.String,System.String> DataStoreFromNative(System.IntPtr pointer)
    // Offset: 0x4853E64
    static ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* DataStoreFromNative(::System::IntPtr pointer);
    // static public System.String StringFromNative(System.IntPtr pointer)
    // Offset: 0x4854124
    static ::StringW StringFromNative(::System::IntPtr pointer);
    // static public System.Int32 GetNativeStringLengthNotIncludingNullTerminator(System.IntPtr pointer)
    // Offset: 0x485423C
    static int GetNativeStringLengthNotIncludingNullTerminator(::System::IntPtr pointer);
    // static public System.DateTime DateTimeFromNative(System.UInt64 seconds_since_the_one_true_epoch)
    // Offset: 0x48542B0
    static ::System::DateTime DateTimeFromNative(uint64_t seconds_since_the_one_true_epoch);
    // static public System.UInt64 DateTimeToNative(System.DateTime dt)
    // Offset: 0x4854314
    static uint64_t DateTimeToNative(::System::DateTime dt);
    // static public System.Byte[] BlobFromNative(System.UInt32 size, System.IntPtr pointer)
    // Offset: 0x48543FC
    static ::ArrayW<uint8_t> BlobFromNative(uint size, ::System::IntPtr pointer);
    // static public System.Byte[] FiledataFromNative(System.UInt32 size, System.IntPtr pointer)
    // Offset: 0x48544D4
    static ::ArrayW<uint8_t> FiledataFromNative(uint size, ::System::IntPtr pointer);
    // static public System.IntPtr StringToNative(System.String s)
    // Offset: 0x4854574
    static ::System::IntPtr StringToNative(::StringW s);
    // static public System.Boolean ovr_UnityInitWrapper(System.String appId)
    // Offset: 0x4851B18
    static bool ovr_UnityInitWrapper(::StringW appId);
    // static public System.Void ovr_UnityInitGlobals(System.IntPtr loggingCB)
    // Offset: 0x48546F0
    static void ovr_UnityInitGlobals(::System::IntPtr loggingCB);
    // static public System.UInt64 ovr_UnityInitWrapperAsynchronous(System.String appId)
    // Offset: 0x4851CAC
    static uint64_t ovr_UnityInitWrapperAsynchronous(::StringW appId);
    // static public System.Boolean ovr_UnityInitWrapperStandalone(System.String accessToken, System.IntPtr loggingCB)
    // Offset: 0x485476C
    static bool ovr_UnityInitWrapperStandalone(::StringW accessToken, ::System::IntPtr loggingCB);
    // static public System.UInt64 ovr_Platform_InitializeStandaloneOculus(ref Oculus.Platform.CAPI/OculusInitParams init)
    // Offset: 0x485480C
    static uint64_t ovr_Platform_InitializeStandaloneOculus(ByRef<::Oculus::Platform::CAPI::OculusInitParams> init);
    // static public System.UInt64 ovr_PlatformInitializeWithAccessToken(System.UInt64 appId, System.String accessToken)
    // Offset: 0x4854900
    static uint64_t ovr_PlatformInitializeWithAccessToken(uint64_t appId, ::StringW accessToken);
    // static public System.UInt64 ovr_PlatformInitializeWithAccessTokenAndOptions(System.UInt64 appId, System.String accessToken, Oculus.Platform.CAPI/ovrKeyValuePair[] configOptions, System.UIntPtr numOptions)
    // Offset: 0x48549A0
    static uint64_t ovr_PlatformInitializeWithAccessTokenAndOptions(uint64_t appId, ::StringW accessToken, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair> configOptions, ::System::UIntPtr numOptions);
    // static public System.Boolean ovr_UnityInitWrapperWindows(System.String appId, System.IntPtr loggingCB)
    // Offset: 0x4854B44
    static bool ovr_UnityInitWrapperWindows(::StringW appId, ::System::IntPtr loggingCB);
    // static public System.UInt64 ovr_UnityInitWrapperWindowsAsynchronous(System.String appId, System.IntPtr loggingCB)
    // Offset: 0x4854BE4
    static uint64_t ovr_UnityInitWrapperWindowsAsynchronous(::StringW appId, ::System::IntPtr loggingCB);
    // static public System.Boolean ovr_SetDeveloperAccessToken(System.String accessToken)
    // Offset: 0x4854C80
    static bool ovr_SetDeveloperAccessToken(::StringW accessToken);
    // static public System.String ovr_GetLoggedInUserLocale()
    // Offset: 0x4854D18
    static ::StringW ovr_GetLoggedInUserLocale();
    // static private System.IntPtr ovr_GetLoggedInUserLocale_Native()
    // Offset: 0x4854D68
    static ::System::IntPtr ovr_GetLoggedInUserLocale_Native();
    // static public System.IntPtr ovr_PopMessage()
    // Offset: 0x4854DD0
    static ::System::IntPtr ovr_PopMessage();
    // static public System.Void ovr_FreeMessage(System.IntPtr message)
    // Offset: 0x4854E38
    static void ovr_FreeMessage(::System::IntPtr message);
    // static public System.IntPtr ovr_Voip_CreateEncoder()
    // Offset: 0x4854EB4
    static ::System::IntPtr ovr_Voip_CreateEncoder();
    // static public System.Void ovr_Voip_DestroyEncoder(System.IntPtr encoder)
    // Offset: 0x4854F1C
    static void ovr_Voip_DestroyEncoder(::System::IntPtr encoder);
    // static public System.IntPtr ovr_Voip_CreateDecoder()
    // Offset: 0x4854F98
    static ::System::IntPtr ovr_Voip_CreateDecoder();
    // static public System.Void ovr_Voip_DestroyDecoder(System.IntPtr decoder)
    // Offset: 0x4855000
    static void ovr_Voip_DestroyDecoder(::System::IntPtr decoder);
    // static public System.Void ovr_VoipDecoder_Decode(System.IntPtr obj, System.Byte[] compressedData, System.UInt64 compressedSize)
    // Offset: 0x485507C
    static void ovr_VoipDecoder_Decode(::System::IntPtr obj, ::ArrayW<uint8_t> compressedData, uint64_t compressedSize);
    // static public System.IntPtr ovr_Microphone_Create()
    // Offset: 0x4855118
    static ::System::IntPtr ovr_Microphone_Create();
    // static public System.Void ovr_Microphone_Destroy(System.IntPtr obj)
    // Offset: 0x4855180
    static void ovr_Microphone_Destroy(::System::IntPtr obj);
    // static public System.Void ovr_Voip_SetSystemVoipPassthrough(System.Boolean passthrough)
    // Offset: 0x48551FC
    static void ovr_Voip_SetSystemVoipPassthrough(bool passthrough);
    // static public System.Void ovr_Voip_SetSystemVoipMicrophoneMuted(Oculus.Platform.VoipMuteState muted)
    // Offset: 0x4855278
    static void ovr_Voip_SetSystemVoipMicrophoneMuted(::Oculus::Platform::VoipMuteState muted);
    // static public System.Void ovr_UnityResetTestPlatform()
    // Offset: 0x48552F4
    static void ovr_UnityResetTestPlatform();
    // static public System.UInt64 ovr_HTTP_GetWithMessageType(System.String url, System.Int32 messageType)
    // Offset: 0x4855358
    static uint64_t ovr_HTTP_GetWithMessageType(::StringW url, int messageType);
    // static public System.Void ovr_CrashApplication()
    // Offset: 0x48553F4
    static void ovr_CrashApplication();
    // static public System.Void ovr_Voip_SetMicrophoneFilterCallback(Oculus.Platform.CAPI/FilterCallback cb)
    // Offset: 0x4855458
    static void ovr_Voip_SetMicrophoneFilterCallback(::Oculus::Platform::CAPI::FilterCallback* cb);
    // static public System.Void ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer(Oculus.Platform.CAPI/FilterCallback cb, System.UIntPtr bufferSizeElements)
    // Offset: 0x48554D8
    static void ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer(::Oculus::Platform::CAPI::FilterCallback* cb, ::System::UIntPtr bufferSizeElements);
    // static public System.Void LogNewUnifiedEvent(Oculus.Platform.LogEventName eventName, System.Collections.Generic.Dictionary`2<System.String,System.String> values)
    // Offset: 0x4855560
    static void LogNewUnifiedEvent(::Oculus::Platform::LogEventName eventName, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* values);
    // static public System.Void LogNewEvent(System.String eventName, System.Collections.Generic.Dictionary`2<System.String,System.String> values)
    // Offset: 0x4855608
    static void LogNewEvent(::StringW eventName, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* values);
    // static public System.Void ovr_Log_NewEvent(System.IntPtr eventName, System.IntPtr[] values, System.UIntPtr length)
    // Offset: 0x4855938
    static void ovr_Log_NewEvent(::System::IntPtr eventName, ::ArrayW<::System::IntPtr> values, ::System::UIntPtr length);
    // static public System.IntPtr ovr_ApplicationLifecycle_GetLaunchDetails()
    // Offset: 0x48559D4
    static ::System::IntPtr ovr_ApplicationLifecycle_GetLaunchDetails();
    // static public System.Void ovr_ApplicationLifecycle_LogDeeplinkResult(System.String trackingID, Oculus.Platform.LaunchResult result)
    // Offset: 0x4855A3C
    static void ovr_ApplicationLifecycle_LogDeeplinkResult(::StringW trackingID, ::Oculus::Platform::LaunchResult result);
    // static private System.Void ovr_ApplicationLifecycle_LogDeeplinkResult_Native(System.IntPtr trackingID, Oculus.Platform.LaunchResult result)
    // Offset: 0x4855AD8
    static void ovr_ApplicationLifecycle_LogDeeplinkResult_Native(::System::IntPtr trackingID, ::Oculus::Platform::LaunchResult result);
    // static public System.UInt64 ovr_HTTP_StartTransfer(System.String url, Oculus.Platform.CAPI/ovrKeyValuePair[] headers)
    // Offset: 0x4855B5C
    static uint64_t ovr_HTTP_StartTransfer(::StringW url, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair> headers);
    // static private System.UInt64 ovr_HTTP_StartTransfer_Native(System.IntPtr url, Oculus.Platform.CAPI/ovrKeyValuePair[] headers, System.UIntPtr numItems)
    // Offset: 0x4855C24
    static uint64_t ovr_HTTP_StartTransfer_Native(::System::IntPtr url, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair> headers, ::System::UIntPtr numItems);
    // static public System.Boolean ovr_HTTP_Write(System.UInt64 transferId, System.Byte[] bytes, System.UIntPtr length)
    // Offset: 0x4855DD8
    static bool ovr_HTTP_Write(uint64_t transferId, ::ArrayW<uint8_t> bytes, ::System::UIntPtr length);
    // static public System.Void ovr_HTTP_WriteEOM(System.UInt64 transferId)
    // Offset: 0x4855E7C
    static void ovr_HTTP_WriteEOM(uint64_t transferId);
    // static public System.String ovr_Message_GetStringForJavascript(System.IntPtr message)
    // Offset: 0x4855EF4
    static ::StringW ovr_Message_GetStringForJavascript(::System::IntPtr message);
    // static private System.IntPtr ovr_Message_GetStringForJavascript_Native(System.IntPtr message)
    // Offset: 0x4855F4C
    static ::System::IntPtr ovr_Message_GetStringForJavascript_Native(::System::IntPtr message);
    // static public System.UIntPtr ovr_NetSync_GetAmbisonicFloatPCM(System.Int64 connection_id, System.Single[] outputBuffer, System.UIntPtr outputBufferNumElements)
    // Offset: 0x4855FC8
    static ::System::UIntPtr ovr_NetSync_GetAmbisonicFloatPCM(int64_t connection_id, ::ArrayW<float> outputBuffer, ::System::UIntPtr outputBufferNumElements);
    // static public System.UIntPtr ovr_NetSync_GetAmbisonicInt16PCM(System.Int64 connection_id, System.Int16[] outputBuffer, System.UIntPtr outputBufferNumElements)
    // Offset: 0x4856064
    static ::System::UIntPtr ovr_NetSync_GetAmbisonicInt16PCM(int64_t connection_id, ::ArrayW<int16_t> outputBuffer, ::System::UIntPtr outputBufferNumElements);
    // static public System.UIntPtr ovr_NetSync_GetAmbisonicInterleavedFloatPCM(System.Int64 connection_id, System.Single[] outputBuffer, System.UIntPtr outputBufferNumElements)
    // Offset: 0x4856100
    static ::System::UIntPtr ovr_NetSync_GetAmbisonicInterleavedFloatPCM(int64_t connection_id, ::ArrayW<float> outputBuffer, ::System::UIntPtr outputBufferNumElements);
    // static public System.UIntPtr ovr_NetSync_GetAmbisonicInterleavedInt16PCM(System.Int64 connection_id, System.Int16[] outputBuffer, System.UIntPtr outputBufferNumElements)
    // Offset: 0x485619C
    static ::System::UIntPtr ovr_NetSync_GetAmbisonicInterleavedInt16PCM(int64_t connection_id, ::ArrayW<int16_t> outputBuffer, ::System::UIntPtr outputBufferNumElements);
    // static public System.Boolean ovr_NetSync_GetListenerPosition(System.Int64 connection_id, System.UInt64 sessionId, ref Oculus.Platform.CAPI/ovrNetSyncVec3 position)
    // Offset: 0x4856238
    static bool ovr_NetSync_GetListenerPosition(int64_t connection_id, uint64_t sessionId, ByRef<::Oculus::Platform::CAPI::ovrNetSyncVec3> position);
    // static public System.UIntPtr ovr_NetSync_GetMonostreamFloatPCM(System.Int64 connection_id, System.UInt64 sessionId, System.Single[] outputBuffer, System.UIntPtr outputBufferNumElements)
    // Offset: 0x48562D4
    static ::System::UIntPtr ovr_NetSync_GetMonostreamFloatPCM(int64_t connection_id, uint64_t sessionId, ::ArrayW<float> outputBuffer, ::System::UIntPtr outputBufferNumElements);
    // static public System.UIntPtr ovr_NetSync_GetMonostreamInt16PCM(System.Int64 connection_id, System.UInt64 session_id, System.Int16[] outputBuffer, System.UIntPtr outputBufferNumElements)
    // Offset: 0x4856378
    static ::System::UIntPtr ovr_NetSync_GetMonostreamInt16PCM(int64_t connection_id, uint64_t session_id, ::ArrayW<int16_t> outputBuffer, ::System::UIntPtr outputBufferNumElements);
    // static public System.UIntPtr ovr_NetSync_GetPcmBufferMaxSamples()
    // Offset: 0x485641C
    static ::System::UIntPtr ovr_NetSync_GetPcmBufferMaxSamples();
    // static public System.Boolean ovr_NetSync_GetVoipAmplitude(System.Int64 connection_id, System.UInt64 sessionId, ref System.Single amplitude)
    // Offset: 0x4856484
    static bool ovr_NetSync_GetVoipAmplitude(int64_t connection_id, uint64_t sessionId, ByRef<float> amplitude);
    // static public System.Void ovr_NetSync_SetListenerPosition(System.Int64 connection_id, ref Oculus.Platform.CAPI/ovrNetSyncVec3 position)
    // Offset: 0x4856520
    static void ovr_NetSync_SetListenerPosition(int64_t connection_id, ByRef<::Oculus::Platform::CAPI::ovrNetSyncVec3> position);
    // static public System.Int32 ovr_Party_PluginGetSharedMemHandle()
    // Offset: 0x48565A4
    static int ovr_Party_PluginGetSharedMemHandle();
    // static public Oculus.Platform.VoipMuteState ovr_Party_PluginGetVoipMicrophoneMuted()
    // Offset: 0x485660C
    static ::Oculus::Platform::VoipMuteState ovr_Party_PluginGetVoipMicrophoneMuted();
    // static public System.Boolean ovr_Party_PluginGetVoipPassthrough()
    // Offset: 0x4856674
    static bool ovr_Party_PluginGetVoipPassthrough();
    // static public Oculus.Platform.SystemVoipStatus ovr_Party_PluginGetVoipStatus()
    // Offset: 0x48566E4
    static ::Oculus::Platform::SystemVoipStatus ovr_Party_PluginGetVoipStatus();
    // static public System.Void ovr_Voip_Accept(System.UInt64 userID)
    // Offset: 0x485674C
    static void ovr_Voip_Accept(uint64_t userID);
    // static public Oculus.Platform.VoipDtxState ovr_Voip_GetIsConnectionUsingDtx(System.UInt64 peerID)
    // Offset: 0x48567C8
    static ::Oculus::Platform::VoipDtxState ovr_Voip_GetIsConnectionUsingDtx(uint64_t peerID);
    // static public Oculus.Platform.VoipBitrate ovr_Voip_GetLocalBitrate(System.UInt64 peerID)
    // Offset: 0x4856844
    static ::Oculus::Platform::VoipBitrate ovr_Voip_GetLocalBitrate(uint64_t peerID);
    // static public System.UIntPtr ovr_Voip_GetOutputBufferMaxSize()
    // Offset: 0x48568C0
    static ::System::UIntPtr ovr_Voip_GetOutputBufferMaxSize();
    // static public System.UIntPtr ovr_Voip_GetPCM(System.UInt64 senderID, System.Int16[] outputBuffer, System.UIntPtr outputBufferNumElements)
    // Offset: 0x4856928
    static ::System::UIntPtr ovr_Voip_GetPCM(uint64_t senderID, ::ArrayW<int16_t> outputBuffer, ::System::UIntPtr outputBufferNumElements);
    // static public System.UIntPtr ovr_Voip_GetPCMFloat(System.UInt64 senderID, System.Single[] outputBuffer, System.UIntPtr outputBufferNumElements)
    // Offset: 0x48569C4
    static ::System::UIntPtr ovr_Voip_GetPCMFloat(uint64_t senderID, ::ArrayW<float> outputBuffer, ::System::UIntPtr outputBufferNumElements);
    // static public System.UIntPtr ovr_Voip_GetPCMSize(System.UInt64 senderID)
    // Offset: 0x4856A60
    static ::System::UIntPtr ovr_Voip_GetPCMSize(uint64_t senderID);
    // static public System.UIntPtr ovr_Voip_GetPCMWithTimestamp(System.UInt64 senderID, System.Int16[] outputBuffer, System.UIntPtr outputBufferNumElements, System.UInt32[] timestamp)
    // Offset: 0x4856ADC
    static ::System::UIntPtr ovr_Voip_GetPCMWithTimestamp(uint64_t senderID, ::ArrayW<int16_t> outputBuffer, ::System::UIntPtr outputBufferNumElements, ::ArrayW<uint> timestamp);
    // static public System.UIntPtr ovr_Voip_GetPCMWithTimestampFloat(System.UInt64 senderID, System.Single[] outputBuffer, System.UIntPtr outputBufferNumElements, System.UInt32[] timestamp)
    // Offset: 0x4856B88
    static ::System::UIntPtr ovr_Voip_GetPCMWithTimestampFloat(uint64_t senderID, ::ArrayW<float> outputBuffer, ::System::UIntPtr outputBufferNumElements, ::ArrayW<uint> timestamp);
    // static public Oculus.Platform.VoipBitrate ovr_Voip_GetRemoteBitrate(System.UInt64 peerID)
    // Offset: 0x4856C34
    static ::Oculus::Platform::VoipBitrate ovr_Voip_GetRemoteBitrate(uint64_t peerID);
    // static public System.UInt32 ovr_Voip_GetSyncTimestamp(System.UInt64 userID)
    // Offset: 0x4856CB0
    static uint ovr_Voip_GetSyncTimestamp(uint64_t userID);
    // static public System.Int64 ovr_Voip_GetSyncTimestampDifference(System.UInt32 lhs, System.UInt32 rhs)
    // Offset: 0x4856D2C
    static int64_t ovr_Voip_GetSyncTimestampDifference(uint lhs, uint rhs);
    // static public Oculus.Platform.VoipMuteState ovr_Voip_GetSystemVoipMicrophoneMuted()
    // Offset: 0x4856DB0
    static ::Oculus::Platform::VoipMuteState ovr_Voip_GetSystemVoipMicrophoneMuted();
    // static public Oculus.Platform.SystemVoipStatus ovr_Voip_GetSystemVoipStatus()
    // Offset: 0x4856E18
    static ::Oculus::Platform::SystemVoipStatus ovr_Voip_GetSystemVoipStatus();
    // static public System.Void ovr_Voip_SetMicrophoneMuted(Oculus.Platform.VoipMuteState state)
    // Offset: 0x4856E80
    static void ovr_Voip_SetMicrophoneMuted(::Oculus::Platform::VoipMuteState state);
    // static public System.Void ovr_Voip_SetNewConnectionOptions(System.IntPtr voipOptions)
    // Offset: 0x4856EFC
    static void ovr_Voip_SetNewConnectionOptions(::System::IntPtr voipOptions);
    // static public System.Void ovr_Voip_SetOutputSampleRate(Oculus.Platform.VoipSampleRate rate)
    // Offset: 0x4856F78
    static void ovr_Voip_SetOutputSampleRate(::Oculus::Platform::VoipSampleRate rate);
    // static public System.Void ovr_Voip_Start(System.UInt64 userID)
    // Offset: 0x4856FF4
    static void ovr_Voip_Start(uint64_t userID);
    // static public System.Void ovr_Voip_Stop(System.UInt64 userID)
    // Offset: 0x4857070
    static void ovr_Voip_Stop(uint64_t userID);
    // static public System.UInt64 ovr_AbuseReport_LaunchAdvancedReportFlow(System.UInt64 content_id, System.IntPtr abuse_report_options)
    // Offset: 0x48570EC
    static uint64_t ovr_AbuseReport_LaunchAdvancedReportFlow(uint64_t content_id, ::System::IntPtr abuse_report_options);
    // static public System.UInt64 ovr_AbuseReport_ReportRequestHandled(Oculus.Platform.ReportRequestResponse response)
    // Offset: 0x4857170
    static uint64_t ovr_AbuseReport_ReportRequestHandled(::Oculus::Platform::ReportRequestResponse response);
    // static public System.UInt64 ovr_Achievements_AddCount(System.String name, System.UInt64 count)
    // Offset: 0x48571EC
    static uint64_t ovr_Achievements_AddCount(::StringW name, uint64_t count);
    // static private System.UInt64 ovr_Achievements_AddCount_Native(System.IntPtr name, System.UInt64 count)
    // Offset: 0x4857298
    static uint64_t ovr_Achievements_AddCount_Native(::System::IntPtr name, uint64_t count);
    // static public System.UInt64 ovr_Achievements_AddFields(System.String name, System.String fields)
    // Offset: 0x485731C
    static uint64_t ovr_Achievements_AddFields(::StringW name, ::StringW fields);
    // static private System.UInt64 ovr_Achievements_AddFields_Native(System.IntPtr name, System.IntPtr fields)
    // Offset: 0x48573E4
    static uint64_t ovr_Achievements_AddFields_Native(::System::IntPtr name, ::System::IntPtr fields);
    // static public System.UInt64 ovr_Achievements_GetAllDefinitions()
    // Offset: 0x4857468
    static uint64_t ovr_Achievements_GetAllDefinitions();
    // static public System.UInt64 ovr_Achievements_GetAllProgress()
    // Offset: 0x48574D0
    static uint64_t ovr_Achievements_GetAllProgress();
    // static public System.UInt64 ovr_Achievements_GetDefinitionsByName(System.String[] names, System.Int32 count)
    // Offset: 0x4857538
    static uint64_t ovr_Achievements_GetDefinitionsByName(::ArrayW<::StringW> names, int count);
    // static public System.UInt64 ovr_Achievements_GetProgressByName(System.String[] names, System.Int32 count)
    // Offset: 0x4857664
    static uint64_t ovr_Achievements_GetProgressByName(::ArrayW<::StringW> names, int count);
    // static public System.UInt64 ovr_Achievements_Unlock(System.String name)
    // Offset: 0x4857790
    static uint64_t ovr_Achievements_Unlock(::StringW name);
    // static private System.UInt64 ovr_Achievements_Unlock_Native(System.IntPtr name)
    // Offset: 0x485782C
    static uint64_t ovr_Achievements_Unlock_Native(::System::IntPtr name);
    // static public System.UInt64 ovr_Application_CancelAppDownload()
    // Offset: 0x48578A8
    static uint64_t ovr_Application_CancelAppDownload();
    // static public System.UInt64 ovr_Application_CheckAppDownloadProgress()
    // Offset: 0x4857910
    static uint64_t ovr_Application_CheckAppDownloadProgress();
    // static public System.UInt64 ovr_Application_GetInstalledApplications()
    // Offset: 0x4857978
    static uint64_t ovr_Application_GetInstalledApplications();
    // static public System.UInt64 ovr_Application_GetVersion()
    // Offset: 0x48579E0
    static uint64_t ovr_Application_GetVersion();
    // static public System.UInt64 ovr_Application_InstallAppUpdateAndRelaunch(System.IntPtr deeplink_options)
    // Offset: 0x4857A48
    static uint64_t ovr_Application_InstallAppUpdateAndRelaunch(::System::IntPtr deeplink_options);
    // static public System.UInt64 ovr_Application_LaunchOtherApp(System.UInt64 appID, System.IntPtr deeplink_options)
    // Offset: 0x4857AC4
    static uint64_t ovr_Application_LaunchOtherApp(uint64_t appID, ::System::IntPtr deeplink_options);
    // static public System.UInt64 ovr_Application_StartAppDownload()
    // Offset: 0x4857B48
    static uint64_t ovr_Application_StartAppDownload();
    // static public System.UInt64 ovr_ApplicationLifecycle_GetRegisteredPIDs()
    // Offset: 0x4857BB0
    static uint64_t ovr_ApplicationLifecycle_GetRegisteredPIDs();
    // static public System.UInt64 ovr_ApplicationLifecycle_GetSessionKey()
    // Offset: 0x4857C18
    static uint64_t ovr_ApplicationLifecycle_GetSessionKey();
    // static public System.UInt64 ovr_ApplicationLifecycle_RegisterSessionKey(System.String sessionKey)
    // Offset: 0x4857C80
    static uint64_t ovr_ApplicationLifecycle_RegisterSessionKey(::StringW sessionKey);
    // static private System.UInt64 ovr_ApplicationLifecycle_RegisterSessionKey_Native(System.IntPtr sessionKey)
    // Offset: 0x4857D1C
    static uint64_t ovr_ApplicationLifecycle_RegisterSessionKey_Native(::System::IntPtr sessionKey);
    // static public System.UInt64 ovr_AssetFile_Delete(System.UInt64 assetFileID)
    // Offset: 0x4857D98
    static uint64_t ovr_AssetFile_Delete(uint64_t assetFileID);
    // static public System.UInt64 ovr_AssetFile_DeleteById(System.UInt64 assetFileID)
    // Offset: 0x4857E14
    static uint64_t ovr_AssetFile_DeleteById(uint64_t assetFileID);
    // static public System.UInt64 ovr_AssetFile_DeleteByName(System.String assetFileName)
    // Offset: 0x4857E90
    static uint64_t ovr_AssetFile_DeleteByName(::StringW assetFileName);
    // static private System.UInt64 ovr_AssetFile_DeleteByName_Native(System.IntPtr assetFileName)
    // Offset: 0x4857F2C
    static uint64_t ovr_AssetFile_DeleteByName_Native(::System::IntPtr assetFileName);
    // static public System.UInt64 ovr_AssetFile_Download(System.UInt64 assetFileID)
    // Offset: 0x4857FA8
    static uint64_t ovr_AssetFile_Download(uint64_t assetFileID);
    // static public System.UInt64 ovr_AssetFile_DownloadById(System.UInt64 assetFileID)
    // Offset: 0x4858024
    static uint64_t ovr_AssetFile_DownloadById(uint64_t assetFileID);
    // static public System.UInt64 ovr_AssetFile_DownloadByName(System.String assetFileName)
    // Offset: 0x48580A0
    static uint64_t ovr_AssetFile_DownloadByName(::StringW assetFileName);
    // static private System.UInt64 ovr_AssetFile_DownloadByName_Native(System.IntPtr assetFileName)
    // Offset: 0x485813C
    static uint64_t ovr_AssetFile_DownloadByName_Native(::System::IntPtr assetFileName);
    // static public System.UInt64 ovr_AssetFile_DownloadCancel(System.UInt64 assetFileID)
    // Offset: 0x48581B8
    static uint64_t ovr_AssetFile_DownloadCancel(uint64_t assetFileID);
    // static public System.UInt64 ovr_AssetFile_DownloadCancelById(System.UInt64 assetFileID)
    // Offset: 0x4858234
    static uint64_t ovr_AssetFile_DownloadCancelById(uint64_t assetFileID);
    // static public System.UInt64 ovr_AssetFile_DownloadCancelByName(System.String assetFileName)
    // Offset: 0x48582B0
    static uint64_t ovr_AssetFile_DownloadCancelByName(::StringW assetFileName);
    // static private System.UInt64 ovr_AssetFile_DownloadCancelByName_Native(System.IntPtr assetFileName)
    // Offset: 0x485834C
    static uint64_t ovr_AssetFile_DownloadCancelByName_Native(::System::IntPtr assetFileName);
    // static public System.UInt64 ovr_AssetFile_GetList()
    // Offset: 0x48583C8
    static uint64_t ovr_AssetFile_GetList();
    // static public System.UInt64 ovr_AssetFile_Status(System.UInt64 assetFileID)
    // Offset: 0x4858430
    static uint64_t ovr_AssetFile_Status(uint64_t assetFileID);
    // static public System.UInt64 ovr_AssetFile_StatusById(System.UInt64 assetFileID)
    // Offset: 0x48584AC
    static uint64_t ovr_AssetFile_StatusById(uint64_t assetFileID);
    // static public System.UInt64 ovr_AssetFile_StatusByName(System.String assetFileName)
    // Offset: 0x4858528
    static uint64_t ovr_AssetFile_StatusByName(::StringW assetFileName);
    // static private System.UInt64 ovr_AssetFile_StatusByName_Native(System.IntPtr assetFileName)
    // Offset: 0x48585C4
    static uint64_t ovr_AssetFile_StatusByName_Native(::System::IntPtr assetFileName);
    // static public System.UInt64 ovr_Avatar_LaunchAvatarEditor(System.IntPtr options)
    // Offset: 0x4858640
    static uint64_t ovr_Avatar_LaunchAvatarEditor(::System::IntPtr options);
    // static public System.UInt64 ovr_Avatar_UpdateMetaData(System.String avatarMetaData, System.String imageFilePath)
    // Offset: 0x48586BC
    static uint64_t ovr_Avatar_UpdateMetaData(::StringW avatarMetaData, ::StringW imageFilePath);
    // static private System.UInt64 ovr_Avatar_UpdateMetaData_Native(System.IntPtr avatarMetaData, System.IntPtr imageFilePath)
    // Offset: 0x4858784
    static uint64_t ovr_Avatar_UpdateMetaData_Native(::System::IntPtr avatarMetaData, ::System::IntPtr imageFilePath);
    // static public System.UInt64 ovr_Challenges_Create(System.String leaderboardName, System.IntPtr challengeOptions)
    // Offset: 0x4858808
    static uint64_t ovr_Challenges_Create(::StringW leaderboardName, ::System::IntPtr challengeOptions);
    // static private System.UInt64 ovr_Challenges_Create_Native(System.IntPtr leaderboardName, System.IntPtr challengeOptions)
    // Offset: 0x48588B4
    static uint64_t ovr_Challenges_Create_Native(::System::IntPtr leaderboardName, ::System::IntPtr challengeOptions);
    // static public System.UInt64 ovr_Challenges_DeclineInvite(System.UInt64 challengeID)
    // Offset: 0x4858938
    static uint64_t ovr_Challenges_DeclineInvite(uint64_t challengeID);
    // static public System.UInt64 ovr_Challenges_Delete(System.UInt64 challengeID)
    // Offset: 0x48589B4
    static uint64_t ovr_Challenges_Delete(uint64_t challengeID);
    // static public System.UInt64 ovr_Challenges_Get(System.UInt64 challengeID)
    // Offset: 0x4858A30
    static uint64_t ovr_Challenges_Get(uint64_t challengeID);
    // static public System.UInt64 ovr_Challenges_GetEntries(System.UInt64 challengeID, System.Int32 limit, Oculus.Platform.LeaderboardFilterType filter, Oculus.Platform.LeaderboardStartAt startAt)
    // Offset: 0x4858AAC
    static uint64_t ovr_Challenges_GetEntries(uint64_t challengeID, int limit, ::Oculus::Platform::LeaderboardFilterType filter, ::Oculus::Platform::LeaderboardStartAt startAt);
    // static public System.UInt64 ovr_Challenges_GetEntriesAfterRank(System.UInt64 challengeID, System.Int32 limit, System.UInt64 afterRank)
    // Offset: 0x4858B48
    static uint64_t ovr_Challenges_GetEntriesAfterRank(uint64_t challengeID, int limit, uint64_t afterRank);
    // static public System.UInt64 ovr_Challenges_GetEntriesByIds(System.UInt64 challengeID, System.Int32 limit, Oculus.Platform.LeaderboardStartAt startAt, System.UInt64[] userIDs, System.UInt32 userIDLength)
    // Offset: 0x4858BDC
    static uint64_t ovr_Challenges_GetEntriesByIds(uint64_t challengeID, int limit, ::Oculus::Platform::LeaderboardStartAt startAt, ::ArrayW<uint64_t> userIDs, uint userIDLength);
    // static public System.UInt64 ovr_Challenges_GetList(System.IntPtr challengeOptions, System.Int32 limit)
    // Offset: 0x4858C90
    static uint64_t ovr_Challenges_GetList(::System::IntPtr challengeOptions, int limit);
    // static public System.UInt64 ovr_Challenges_GetNextChallenges(System.IntPtr handle)
    // Offset: 0x4858D14
    static uint64_t ovr_Challenges_GetNextChallenges(::System::IntPtr handle);
    // static public System.UInt64 ovr_Challenges_GetNextEntries(System.IntPtr handle)
    // Offset: 0x4858D90
    static uint64_t ovr_Challenges_GetNextEntries(::System::IntPtr handle);
    // static public System.UInt64 ovr_Challenges_GetPreviousChallenges(System.IntPtr handle)
    // Offset: 0x4858E0C
    static uint64_t ovr_Challenges_GetPreviousChallenges(::System::IntPtr handle);
    // static public System.UInt64 ovr_Challenges_GetPreviousEntries(System.IntPtr handle)
    // Offset: 0x4858E88
    static uint64_t ovr_Challenges_GetPreviousEntries(::System::IntPtr handle);
    // static public System.UInt64 ovr_Challenges_Join(System.UInt64 challengeID)
    // Offset: 0x4858F04
    static uint64_t ovr_Challenges_Join(uint64_t challengeID);
    // static public System.UInt64 ovr_Challenges_Leave(System.UInt64 challengeID)
    // Offset: 0x4858F80
    static uint64_t ovr_Challenges_Leave(uint64_t challengeID);
    // static public System.UInt64 ovr_Challenges_UpdateInfo(System.UInt64 challengeID, System.IntPtr challengeOptions)
    // Offset: 0x4858FFC
    static uint64_t ovr_Challenges_UpdateInfo(uint64_t challengeID, ::System::IntPtr challengeOptions);
    // static public System.UInt64 ovr_Colocation_GetCurrentMapUuid()
    // Offset: 0x4859080
    static uint64_t ovr_Colocation_GetCurrentMapUuid();
    // static public System.UInt64 ovr_Colocation_RequestMap(System.String uuid)
    // Offset: 0x48590E8
    static uint64_t ovr_Colocation_RequestMap(::StringW uuid);
    // static private System.UInt64 ovr_Colocation_RequestMap_Native(System.IntPtr uuid)
    // Offset: 0x4859184
    static uint64_t ovr_Colocation_RequestMap_Native(::System::IntPtr uuid);
    // static public System.UInt64 ovr_Colocation_ShareMap(System.String uuid)
    // Offset: 0x4859200
    static uint64_t ovr_Colocation_ShareMap(::StringW uuid);
    // static private System.UInt64 ovr_Colocation_ShareMap_Native(System.IntPtr uuid)
    // Offset: 0x485929C
    static uint64_t ovr_Colocation_ShareMap_Native(::System::IntPtr uuid);
    // static public System.UInt64 ovr_DeviceApplicationIntegrity_GetAttestationToken(System.String challenge_nonce)
    // Offset: 0x4859318
    static uint64_t ovr_DeviceApplicationIntegrity_GetAttestationToken(::StringW challenge_nonce);
    // static private System.UInt64 ovr_DeviceApplicationIntegrity_GetAttestationToken_Native(System.IntPtr challenge_nonce)
    // Offset: 0x48593B4
    static uint64_t ovr_DeviceApplicationIntegrity_GetAttestationToken_Native(::System::IntPtr challenge_nonce);
    // static public System.UInt64 ovr_DeviceApplicationIntegrity_GetIntegrityToken(System.String challenge_nonce)
    // Offset: 0x4859430
    static uint64_t ovr_DeviceApplicationIntegrity_GetIntegrityToken(::StringW challenge_nonce);
    // static private System.UInt64 ovr_DeviceApplicationIntegrity_GetIntegrityToken_Native(System.IntPtr challenge_nonce)
    // Offset: 0x48594CC
    static uint64_t ovr_DeviceApplicationIntegrity_GetIntegrityToken_Native(::System::IntPtr challenge_nonce);
    // static public System.UInt64 ovr_Entitlement_GetIsViewerEntitled()
    // Offset: 0x4859548
    static uint64_t ovr_Entitlement_GetIsViewerEntitled();
    // static public System.UInt64 ovr_GraphAPI_Get(System.String url)
    // Offset: 0x48595B0
    static uint64_t ovr_GraphAPI_Get(::StringW url);
    // static private System.UInt64 ovr_GraphAPI_Get_Native(System.IntPtr url)
    // Offset: 0x485964C
    static uint64_t ovr_GraphAPI_Get_Native(::System::IntPtr url);
    // static public System.UInt64 ovr_GraphAPI_Post(System.String url)
    // Offset: 0x48596C8
    static uint64_t ovr_GraphAPI_Post(::StringW url);
    // static private System.UInt64 ovr_GraphAPI_Post_Native(System.IntPtr url)
    // Offset: 0x4859764
    static uint64_t ovr_GraphAPI_Post_Native(::System::IntPtr url);
    // static public System.UInt64 ovr_GroupPresence_Clear()
    // Offset: 0x48597DC
    static uint64_t ovr_GroupPresence_Clear();
    // static public System.UInt64 ovr_GroupPresence_GetInvitableUsers(System.IntPtr options)
    // Offset: 0x4859844
    static uint64_t ovr_GroupPresence_GetInvitableUsers(::System::IntPtr options);
    // static public System.UInt64 ovr_GroupPresence_GetSentInvites()
    // Offset: 0x48598C0
    static uint64_t ovr_GroupPresence_GetSentInvites();
    // static public System.UInt64 ovr_GroupPresence_LaunchInvitePanel(System.IntPtr options)
    // Offset: 0x4859928
    static uint64_t ovr_GroupPresence_LaunchInvitePanel(::System::IntPtr options);
    // static public System.UInt64 ovr_GroupPresence_LaunchMultiplayerErrorDialog(System.IntPtr options)
    // Offset: 0x48599A4
    static uint64_t ovr_GroupPresence_LaunchMultiplayerErrorDialog(::System::IntPtr options);
    // static public System.UInt64 ovr_GroupPresence_LaunchRejoinDialog(System.String lobby_session_id, System.String match_session_id, System.String destination_api_name)
    // Offset: 0x4859A20
    static uint64_t ovr_GroupPresence_LaunchRejoinDialog(::StringW lobby_session_id, ::StringW match_session_id, ::StringW destination_api_name);
    // static private System.UInt64 ovr_GroupPresence_LaunchRejoinDialog_Native(System.IntPtr lobby_session_id, System.IntPtr match_session_id, System.IntPtr destination_api_name)
    // Offset: 0x4859B08
    static uint64_t ovr_GroupPresence_LaunchRejoinDialog_Native(::System::IntPtr lobby_session_id, ::System::IntPtr match_session_id, ::System::IntPtr destination_api_name);
    // static public System.UInt64 ovr_GroupPresence_LaunchRosterPanel(System.IntPtr options)
    // Offset: 0x4859B9C
    static uint64_t ovr_GroupPresence_LaunchRosterPanel(::System::IntPtr options);
    // static public System.UInt64 ovr_GroupPresence_SendInvites(System.UInt64[] userIDs, System.UInt32 userIDLength)
    // Offset: 0x4859C18
    static uint64_t ovr_GroupPresence_SendInvites(::ArrayW<uint64_t> userIDs, uint userIDLength);
    // static public System.UInt64 ovr_GroupPresence_Set(System.IntPtr groupPresenceOptions)
    // Offset: 0x4859CA4
    static uint64_t ovr_GroupPresence_Set(::System::IntPtr groupPresenceOptions);
    // static public System.UInt64 ovr_GroupPresence_SetDeeplinkMessageOverride(System.String deeplink_message)
    // Offset: 0x4859D20
    static uint64_t ovr_GroupPresence_SetDeeplinkMessageOverride(::StringW deeplink_message);
    // static private System.UInt64 ovr_GroupPresence_SetDeeplinkMessageOverride_Native(System.IntPtr deeplink_message)
    // Offset: 0x4859DBC
    static uint64_t ovr_GroupPresence_SetDeeplinkMessageOverride_Native(::System::IntPtr deeplink_message);
    // static public System.UInt64 ovr_GroupPresence_SetDestination(System.String api_name)
    // Offset: 0x4859E38
    static uint64_t ovr_GroupPresence_SetDestination(::StringW api_name);
    // static private System.UInt64 ovr_GroupPresence_SetDestination_Native(System.IntPtr api_name)
    // Offset: 0x4859ED4
    static uint64_t ovr_GroupPresence_SetDestination_Native(::System::IntPtr api_name);
    // static public System.UInt64 ovr_GroupPresence_SetIsJoinable(System.Boolean is_joinable)
    // Offset: 0x4859F50
    static uint64_t ovr_GroupPresence_SetIsJoinable(bool is_joinable);
    // static public System.UInt64 ovr_GroupPresence_SetLobbySession(System.String id)
    // Offset: 0x4859FCC
    static uint64_t ovr_GroupPresence_SetLobbySession(::StringW id);
    // static private System.UInt64 ovr_GroupPresence_SetLobbySession_Native(System.IntPtr id)
    // Offset: 0x485A068
    static uint64_t ovr_GroupPresence_SetLobbySession_Native(::System::IntPtr id);
    // static public System.UInt64 ovr_GroupPresence_SetMatchSession(System.String id)
    // Offset: 0x485A0E4
    static uint64_t ovr_GroupPresence_SetMatchSession(::StringW id);
    // static private System.UInt64 ovr_GroupPresence_SetMatchSession_Native(System.IntPtr id)
    // Offset: 0x485A180
    static uint64_t ovr_GroupPresence_SetMatchSession_Native(::System::IntPtr id);
    // static public System.UInt64 ovr_HTTP_Get(System.String url)
    // Offset: 0x485A1FC
    static uint64_t ovr_HTTP_Get(::StringW url);
    // static private System.UInt64 ovr_HTTP_Get_Native(System.IntPtr url)
    // Offset: 0x485A298
    static uint64_t ovr_HTTP_Get_Native(::System::IntPtr url);
    // static public System.UInt64 ovr_HTTP_GetToFile(System.String url, System.String diskFile)
    // Offset: 0x485A314
    static uint64_t ovr_HTTP_GetToFile(::StringW url, ::StringW diskFile);
    // static private System.UInt64 ovr_HTTP_GetToFile_Native(System.IntPtr url, System.IntPtr diskFile)
    // Offset: 0x485A3DC
    static uint64_t ovr_HTTP_GetToFile_Native(::System::IntPtr url, ::System::IntPtr diskFile);
    // static public System.UInt64 ovr_HTTP_MultiPartPost(System.String url, System.String filepath_param_name, System.String filepath, System.String access_token, Oculus.Platform.CAPI/ovrKeyValuePair[] post_params)
    // Offset: 0x485A460
    static uint64_t ovr_HTTP_MultiPartPost(::StringW url, ::StringW filepath_param_name, ::StringW filepath, ::StringW access_token, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair> post_params);
    // static private System.UInt64 ovr_HTTP_MultiPartPost_Native(System.IntPtr url, System.IntPtr filepath_param_name, System.IntPtr filepath, System.IntPtr access_token, Oculus.Platform.CAPI/ovrKeyValuePair[] post_params, System.UIntPtr numItems)
    // Offset: 0x485A590
    static uint64_t ovr_HTTP_MultiPartPost_Native(::System::IntPtr url, ::System::IntPtr filepath_param_name, ::System::IntPtr filepath, ::System::IntPtr access_token, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair> post_params, ::System::UIntPtr numItems);
    // static public System.UInt64 ovr_HTTP_Post(System.String url)
    // Offset: 0x485A780
    static uint64_t ovr_HTTP_Post(::StringW url);
    // static private System.UInt64 ovr_HTTP_Post_Native(System.IntPtr url)
    // Offset: 0x485A81C
    static uint64_t ovr_HTTP_Post_Native(::System::IntPtr url);
    // static public System.UInt64 ovr_IAP_ConsumePurchase(System.String sku)
    // Offset: 0x485A898
    static uint64_t ovr_IAP_ConsumePurchase(::StringW sku);
    // static private System.UInt64 ovr_IAP_ConsumePurchase_Native(System.IntPtr sku)
    // Offset: 0x485A934
    static uint64_t ovr_IAP_ConsumePurchase_Native(::System::IntPtr sku);
    // static public System.UInt64 ovr_IAP_GetProductsBySKU(System.String[] skus, System.Int32 count)
    // Offset: 0x485A9B0
    static uint64_t ovr_IAP_GetProductsBySKU(::ArrayW<::StringW> skus, int count);
    // static public System.UInt64 ovr_IAP_GetViewerPurchases()
    // Offset: 0x485AADC
    static uint64_t ovr_IAP_GetViewerPurchases();
    // static public System.UInt64 ovr_IAP_GetViewerPurchasesDurableCache()
    // Offset: 0x485AB44
    static uint64_t ovr_IAP_GetViewerPurchasesDurableCache();
    // static public System.UInt64 ovr_IAP_LaunchCheckoutFlow(System.String sku)
    // Offset: 0x485ABAC
    static uint64_t ovr_IAP_LaunchCheckoutFlow(::StringW sku);
    // static private System.UInt64 ovr_IAP_LaunchCheckoutFlow_Native(System.IntPtr sku)
    // Offset: 0x485AC48
    static uint64_t ovr_IAP_LaunchCheckoutFlow_Native(::System::IntPtr sku);
    // static public System.UInt64 ovr_LanguagePack_GetCurrent()
    // Offset: 0x485ACC4
    static uint64_t ovr_LanguagePack_GetCurrent();
    // static public System.UInt64 ovr_LanguagePack_SetCurrent(System.String tag)
    // Offset: 0x485AD2C
    static uint64_t ovr_LanguagePack_SetCurrent(::StringW tag);
    // static private System.UInt64 ovr_LanguagePack_SetCurrent_Native(System.IntPtr tag)
    // Offset: 0x485ADC8
    static uint64_t ovr_LanguagePack_SetCurrent_Native(::System::IntPtr tag);
    // static public System.UInt64 ovr_Leaderboard_Get(System.String leaderboardName)
    // Offset: 0x485AE44
    static uint64_t ovr_Leaderboard_Get(::StringW leaderboardName);
    // static private System.UInt64 ovr_Leaderboard_Get_Native(System.IntPtr leaderboardName)
    // Offset: 0x485AEE0
    static uint64_t ovr_Leaderboard_Get_Native(::System::IntPtr leaderboardName);
    // static public System.UInt64 ovr_Leaderboard_GetEntries(System.String leaderboardName, System.Int32 limit, Oculus.Platform.LeaderboardFilterType filter, Oculus.Platform.LeaderboardStartAt startAt)
    // Offset: 0x485AF5C
    static uint64_t ovr_Leaderboard_GetEntries(::StringW leaderboardName, int limit, ::Oculus::Platform::LeaderboardFilterType filter, ::Oculus::Platform::LeaderboardStartAt startAt);
    // static private System.UInt64 ovr_Leaderboard_GetEntries_Native(System.IntPtr leaderboardName, System.Int32 limit, Oculus.Platform.LeaderboardFilterType filter, Oculus.Platform.LeaderboardStartAt startAt)
    // Offset: 0x485B020
    static uint64_t ovr_Leaderboard_GetEntries_Native(::System::IntPtr leaderboardName, int limit, ::Oculus::Platform::LeaderboardFilterType filter, ::Oculus::Platform::LeaderboardStartAt startAt);
    // static public System.UInt64 ovr_Leaderboard_GetEntriesAfterRank(System.String leaderboardName, System.Int32 limit, System.UInt64 afterRank)
    // Offset: 0x485B0BC
    static uint64_t ovr_Leaderboard_GetEntriesAfterRank(::StringW leaderboardName, int limit, uint64_t afterRank);
    // static private System.UInt64 ovr_Leaderboard_GetEntriesAfterRank_Native(System.IntPtr leaderboardName, System.Int32 limit, System.UInt64 afterRank)
    // Offset: 0x485B170
    static uint64_t ovr_Leaderboard_GetEntriesAfterRank_Native(::System::IntPtr leaderboardName, int limit, uint64_t afterRank);
    // static public System.UInt64 ovr_Leaderboard_GetEntriesByIds(System.String leaderboardName, System.Int32 limit, Oculus.Platform.LeaderboardStartAt startAt, System.UInt64[] userIDs, System.UInt32 userIDLength)
    // Offset: 0x485B204
    static uint64_t ovr_Leaderboard_GetEntriesByIds(::StringW leaderboardName, int limit, ::Oculus::Platform::LeaderboardStartAt startAt, ::ArrayW<uint64_t> userIDs, uint userIDLength);
    // static private System.UInt64 ovr_Leaderboard_GetEntriesByIds_Native(System.IntPtr leaderboardName, System.Int32 limit, Oculus.Platform.LeaderboardStartAt startAt, System.UInt64[] userIDs, System.UInt32 userIDLength)
    // Offset: 0x485B2D0
    static uint64_t ovr_Leaderboard_GetEntriesByIds_Native(::System::IntPtr leaderboardName, int limit, ::Oculus::Platform::LeaderboardStartAt startAt, ::ArrayW<uint64_t> userIDs, uint userIDLength);
    // static public System.UInt64 ovr_Leaderboard_GetNextEntries(System.IntPtr handle)
    // Offset: 0x485B384
    static uint64_t ovr_Leaderboard_GetNextEntries(::System::IntPtr handle);
    // static public System.UInt64 ovr_Leaderboard_GetPreviousEntries(System.IntPtr handle)
    // Offset: 0x485B400
    static uint64_t ovr_Leaderboard_GetPreviousEntries(::System::IntPtr handle);
    // static public System.UInt64 ovr_Leaderboard_WriteEntry(System.String leaderboardName, System.Int64 score, System.Byte[] extraData, System.UInt32 extraDataLength, System.Boolean forceUpdate)
    // Offset: 0x485B47C
    static uint64_t ovr_Leaderboard_WriteEntry(::StringW leaderboardName, int64_t score, ::ArrayW<uint8_t> extraData, uint extraDataLength, bool forceUpdate);
    // static private System.UInt64 ovr_Leaderboard_WriteEntry_Native(System.IntPtr leaderboardName, System.Int64 score, System.Byte[] extraData, System.UInt32 extraDataLength, System.Boolean forceUpdate)
    // Offset: 0x485B548
    static uint64_t ovr_Leaderboard_WriteEntry_Native(::System::IntPtr leaderboardName, int64_t score, ::ArrayW<uint8_t> extraData, uint extraDataLength, bool forceUpdate);
    // static public System.UInt64 ovr_Leaderboard_WriteEntryWithSupplementaryMetric(System.String leaderboardName, System.Int64 score, System.Int64 supplementaryMetric, System.Byte[] extraData, System.UInt32 extraDataLength, System.Boolean forceUpdate)
    // Offset: 0x485B5FC
    static uint64_t ovr_Leaderboard_WriteEntryWithSupplementaryMetric(::StringW leaderboardName, int64_t score, int64_t supplementaryMetric, ::ArrayW<uint8_t> extraData, uint extraDataLength, bool forceUpdate);
    // static private System.UInt64 ovr_Leaderboard_WriteEntryWithSupplementaryMetric_Native(System.IntPtr leaderboardName, System.Int64 score, System.Int64 supplementaryMetric, System.Byte[] extraData, System.UInt32 extraDataLength, System.Boolean forceUpdate)
    // Offset: 0x485B6D8
    static uint64_t ovr_Leaderboard_WriteEntryWithSupplementaryMetric_Native(::System::IntPtr leaderboardName, int64_t score, int64_t supplementaryMetric, ::ArrayW<uint8_t> extraData, uint extraDataLength, bool forceUpdate);
    // static public System.UInt64 ovr_Livestreaming_IsAllowedForApplication(System.String packageName)
    // Offset: 0x485B794
    static uint64_t ovr_Livestreaming_IsAllowedForApplication(::StringW packageName);
    // static private System.UInt64 ovr_Livestreaming_IsAllowedForApplication_Native(System.IntPtr packageName)
    // Offset: 0x485B830
    static uint64_t ovr_Livestreaming_IsAllowedForApplication_Native(::System::IntPtr packageName);
    // static public System.UInt64 ovr_Livestreaming_StartPartyStream()
    // Offset: 0x485B8AC
    static uint64_t ovr_Livestreaming_StartPartyStream();
    // static public System.UInt64 ovr_Livestreaming_StartStream(Oculus.Platform.LivestreamingAudience audience, Oculus.Platform.LivestreamingMicrophoneStatus micStatus)
    // Offset: 0x485B914
    static uint64_t ovr_Livestreaming_StartStream(::Oculus::Platform::LivestreamingAudience audience, ::Oculus::Platform::LivestreamingMicrophoneStatus micStatus);
    // static public System.UInt64 ovr_Livestreaming_StopPartyStream()
    // Offset: 0x485B998
    static uint64_t ovr_Livestreaming_StopPartyStream();
    // static public System.UInt64 ovr_Livestreaming_StopStream()
    // Offset: 0x485BA00
    static uint64_t ovr_Livestreaming_StopStream();
    // static public System.UInt64 ovr_Livestreaming_UpdateMicStatus(Oculus.Platform.LivestreamingMicrophoneStatus micStatus)
    // Offset: 0x485BA68
    static uint64_t ovr_Livestreaming_UpdateMicStatus(::Oculus::Platform::LivestreamingMicrophoneStatus micStatus);
    // static public System.UInt64 ovr_Media_ShareToFacebook(System.String postTextSuggestion, System.String filePath, Oculus.Platform.MediaContentType contentType)
    // Offset: 0x485BAE4
    static uint64_t ovr_Media_ShareToFacebook(::StringW postTextSuggestion, ::StringW filePath, ::Oculus::Platform::MediaContentType contentType);
    // static private System.UInt64 ovr_Media_ShareToFacebook_Native(System.IntPtr postTextSuggestion, System.IntPtr filePath, Oculus.Platform.MediaContentType contentType)
    // Offset: 0x485BBB4
    static uint64_t ovr_Media_ShareToFacebook_Native(::System::IntPtr postTextSuggestion, ::System::IntPtr filePath, ::Oculus::Platform::MediaContentType contentType);
    // static public System.UInt64 ovr_NetSync_Connect(System.IntPtr connect_options)
    // Offset: 0x485BC48
    static uint64_t ovr_NetSync_Connect(::System::IntPtr connect_options);
    // static public System.UInt64 ovr_NetSync_Disconnect(System.Int64 connection_id)
    // Offset: 0x485BCC4
    static uint64_t ovr_NetSync_Disconnect(int64_t connection_id);
    // static public System.UInt64 ovr_NetSync_GetSessions(System.Int64 connection_id)
    // Offset: 0x485BD40
    static uint64_t ovr_NetSync_GetSessions(int64_t connection_id);
    // static public System.UInt64 ovr_NetSync_GetVoipAttenuation(System.Int64 connection_id)
    // Offset: 0x485BDBC
    static uint64_t ovr_NetSync_GetVoipAttenuation(int64_t connection_id);
    // static public System.UInt64 ovr_NetSync_GetVoipAttenuationDefault()
    // Offset: 0x485BE38
    static uint64_t ovr_NetSync_GetVoipAttenuationDefault();
    // static public System.UInt64 ovr_NetSync_SetVoipAttenuation(System.Int64 connection_id, System.Single[] distances, System.Single[] decibels, System.UIntPtr count)
    // Offset: 0x485BEA0
    static uint64_t ovr_NetSync_SetVoipAttenuation(int64_t connection_id, ::ArrayW<float> distances, ::ArrayW<float> decibels, ::System::UIntPtr count);
    // static public System.UInt64 ovr_NetSync_SetVoipAttenuationModel(System.Int64 connection_id, System.String name, System.Single[] distances, System.Single[] decibels, System.UIntPtr count)
    // Offset: 0x485BF4C
    static uint64_t ovr_NetSync_SetVoipAttenuationModel(int64_t connection_id, ::StringW name, ::ArrayW<float> distances, ::ArrayW<float> decibels, ::System::UIntPtr count);
    // static private System.UInt64 ovr_NetSync_SetVoipAttenuationModel_Native(System.Int64 connection_id, System.IntPtr name, System.Single[] distances, System.Single[] decibels, System.UIntPtr count)
    // Offset: 0x485C01C
    static uint64_t ovr_NetSync_SetVoipAttenuationModel_Native(int64_t connection_id, ::System::IntPtr name, ::ArrayW<float> distances, ::ArrayW<float> decibels, ::System::UIntPtr count);
    // static public System.UInt64 ovr_NetSync_SetVoipChannelCfg(System.Int64 connection_id, System.String channel_name, System.String attnmodel, System.Boolean disable_spatialization)
    // Offset: 0x485C0D8
    static uint64_t ovr_NetSync_SetVoipChannelCfg(int64_t connection_id, ::StringW channel_name, ::StringW attnmodel, bool disable_spatialization);
    // static private System.UInt64 ovr_NetSync_SetVoipChannelCfg_Native(System.Int64 connection_id, System.IntPtr channel_name, System.IntPtr attnmodel, System.Boolean disable_spatialization)
    // Offset: 0x485C1B8
    static uint64_t ovr_NetSync_SetVoipChannelCfg_Native(int64_t connection_id, ::System::IntPtr channel_name, ::System::IntPtr attnmodel, bool disable_spatialization);
    // static public System.UInt64 ovr_NetSync_SetVoipGroup(System.Int64 connection_id, System.String group_id)
    // Offset: 0x485C254
    static uint64_t ovr_NetSync_SetVoipGroup(int64_t connection_id, ::StringW group_id);
    // static private System.UInt64 ovr_NetSync_SetVoipGroup_Native(System.Int64 connection_id, System.IntPtr group_id)
    // Offset: 0x485C304
    static uint64_t ovr_NetSync_SetVoipGroup_Native(int64_t connection_id, ::System::IntPtr group_id);
    // static public System.UInt64 ovr_NetSync_SetVoipListentoChannels(System.Int64 connection_id, System.String[] listento_channels, System.UIntPtr count)
    // Offset: 0x485C388
    static uint64_t ovr_NetSync_SetVoipListentoChannels(int64_t connection_id, ::ArrayW<::StringW> listento_channels, ::System::UIntPtr count);
    // static public System.UInt64 ovr_NetSync_SetVoipMicSource(System.Int64 connection_id, Oculus.Platform.NetSyncVoipMicSource mic_source)
    // Offset: 0x485C4C8
    static uint64_t ovr_NetSync_SetVoipMicSource(int64_t connection_id, ::Oculus::Platform::NetSyncVoipMicSource mic_source);
    // static public System.UInt64 ovr_NetSync_SetVoipSessionMuted(System.Int64 connection_id, System.UInt64 session_id, System.Boolean muted)
    // Offset: 0x485C54C
    static uint64_t ovr_NetSync_SetVoipSessionMuted(int64_t connection_id, uint64_t session_id, bool muted);
    // static public System.UInt64 ovr_NetSync_SetVoipSpeaktoChannels(System.Int64 connection_id, System.String[] speakto_channels, System.UIntPtr count)
    // Offset: 0x485C5E0
    static uint64_t ovr_NetSync_SetVoipSpeaktoChannels(int64_t connection_id, ::ArrayW<::StringW> speakto_channels, ::System::UIntPtr count);
    // static public System.UInt64 ovr_NetSync_SetVoipStreamMode(System.Int64 connection_id, System.UInt64 sessionId, Oculus.Platform.NetSyncVoipStreamMode streamMode)
    // Offset: 0x485C720
    static uint64_t ovr_NetSync_SetVoipStreamMode(int64_t connection_id, uint64_t sessionId, ::Oculus::Platform::NetSyncVoipStreamMode streamMode);
    // static public System.UInt64 ovr_Notification_MarkAsRead(System.UInt64 notificationID)
    // Offset: 0x485C7B4
    static uint64_t ovr_Notification_MarkAsRead(uint64_t notificationID);
    // static public System.UInt64 ovr_Party_Create()
    // Offset: 0x485C830
    static uint64_t ovr_Party_Create();
    // static public System.UInt64 ovr_Party_GatherInApplication(System.UInt64 partyID, System.UInt64 appID)
    // Offset: 0x485C898
    static uint64_t ovr_Party_GatherInApplication(uint64_t partyID, uint64_t appID);
    // static public System.UInt64 ovr_Party_Get(System.UInt64 partyID)
    // Offset: 0x485C91C
    static uint64_t ovr_Party_Get(uint64_t partyID);
    // static public System.UInt64 ovr_Party_GetCurrent()
    // Offset: 0x485C998
    static uint64_t ovr_Party_GetCurrent();
    // static public System.UInt64 ovr_Party_GetCurrentForUser(System.UInt64 userID)
    // Offset: 0x485CA00
    static uint64_t ovr_Party_GetCurrentForUser(uint64_t userID);
    // static public System.UInt64 ovr_Party_Invite(System.UInt64 partyID, System.UInt64 userID)
    // Offset: 0x485CA7C
    static uint64_t ovr_Party_Invite(uint64_t partyID, uint64_t userID);
    // static public System.UInt64 ovr_Party_Join(System.UInt64 partyID)
    // Offset: 0x485CAFC
    static uint64_t ovr_Party_Join(uint64_t partyID);
    // static public System.UInt64 ovr_Party_Leave(System.UInt64 partyID)
    // Offset: 0x485CB78
    static uint64_t ovr_Party_Leave(uint64_t partyID);
    // static public System.UInt64 ovr_RichPresence_Clear()
    // Offset: 0x485CBF4
    static uint64_t ovr_RichPresence_Clear();
    // static public System.UInt64 ovr_RichPresence_GetDestinations()
    // Offset: 0x485CC5C
    static uint64_t ovr_RichPresence_GetDestinations();
    // static public System.UInt64 ovr_RichPresence_Set(System.IntPtr richPresenceOptions)
    // Offset: 0x485CCC4
    static uint64_t ovr_RichPresence_Set(::System::IntPtr richPresenceOptions);
    // static public System.UInt64 ovr_RichPresence_SetDestination(System.String api_name)
    // Offset: 0x485CD40
    static uint64_t ovr_RichPresence_SetDestination(::StringW api_name);
    // static private System.UInt64 ovr_RichPresence_SetDestination_Native(System.IntPtr api_name)
    // Offset: 0x485CDDC
    static uint64_t ovr_RichPresence_SetDestination_Native(::System::IntPtr api_name);
    // static public System.UInt64 ovr_RichPresence_SetIsJoinable(System.Boolean is_joinable)
    // Offset: 0x485CE58
    static uint64_t ovr_RichPresence_SetIsJoinable(bool is_joinable);
    // static public System.UInt64 ovr_RichPresence_SetLobbySession(System.String id)
    // Offset: 0x485CED4
    static uint64_t ovr_RichPresence_SetLobbySession(::StringW id);
    // static private System.UInt64 ovr_RichPresence_SetLobbySession_Native(System.IntPtr id)
    // Offset: 0x485CF70
    static uint64_t ovr_RichPresence_SetLobbySession_Native(::System::IntPtr id);
    // static public System.UInt64 ovr_RichPresence_SetMatchSession(System.String id)
    // Offset: 0x485CFEC
    static uint64_t ovr_RichPresence_SetMatchSession(::StringW id);
    // static private System.UInt64 ovr_RichPresence_SetMatchSession_Native(System.IntPtr id)
    // Offset: 0x485D088
    static uint64_t ovr_RichPresence_SetMatchSession_Native(::System::IntPtr id);
    // static public System.UInt64 ovr_User_CancelRecordingForReportFlow(System.String recordingUUID)
    // Offset: 0x485D104
    static uint64_t ovr_User_CancelRecordingForReportFlow(::StringW recordingUUID);
    // static private System.UInt64 ovr_User_CancelRecordingForReportFlow_Native(System.IntPtr recordingUUID)
    // Offset: 0x485D1A0
    static uint64_t ovr_User_CancelRecordingForReportFlow_Native(::System::IntPtr recordingUUID);
    // static public System.UInt64 ovr_User_Get(System.UInt64 userID)
    // Offset: 0x485D21C
    static uint64_t ovr_User_Get(uint64_t userID);
    // static public System.UInt64 ovr_User_GetAccessToken()
    // Offset: 0x485D298
    static uint64_t ovr_User_GetAccessToken();
    // static public System.UInt64 ovr_User_GetBlockedUsers()
    // Offset: 0x485D300
    static uint64_t ovr_User_GetBlockedUsers();
    // static public System.UInt64 ovr_User_GetLinkedAccounts(System.IntPtr userOptions)
    // Offset: 0x485D368
    static uint64_t ovr_User_GetLinkedAccounts(::System::IntPtr userOptions);
    // static public System.UInt64 ovr_User_GetLoggedInUser()
    // Offset: 0x485D3E4
    static uint64_t ovr_User_GetLoggedInUser();
    // static public System.UInt64 ovr_User_GetLoggedInUserFriends()
    // Offset: 0x485D44C
    static uint64_t ovr_User_GetLoggedInUserFriends();
    // static public System.UInt64 ovr_User_GetOrgScopedID(System.UInt64 userID)
    // Offset: 0x485D4B4
    static uint64_t ovr_User_GetOrgScopedID(uint64_t userID);
    // static public System.UInt64 ovr_User_GetSdkAccounts()
    // Offset: 0x485D530
    static uint64_t ovr_User_GetSdkAccounts();
    // static public System.UInt64 ovr_User_GetUserCapabilities()
    // Offset: 0x485D598
    static uint64_t ovr_User_GetUserCapabilities();
    // static public System.UInt64 ovr_User_GetUserProof()
    // Offset: 0x485D600
    static uint64_t ovr_User_GetUserProof();
    // static public System.UInt64 ovr_User_LaunchBlockFlow(System.UInt64 userID)
    // Offset: 0x485D668
    static uint64_t ovr_User_LaunchBlockFlow(uint64_t userID);
    // static public System.UInt64 ovr_User_LaunchFriendRequestFlow(System.UInt64 userID)
    // Offset: 0x485D6E4
    static uint64_t ovr_User_LaunchFriendRequestFlow(uint64_t userID);
    // static public System.UInt64 ovr_User_LaunchReportFlow(System.UInt64 userID)
    // Offset: 0x485D760
    static uint64_t ovr_User_LaunchReportFlow(uint64_t userID);
    // static public System.UInt64 ovr_User_LaunchReportFlow2(System.UInt64 optionalUserID, System.IntPtr abuseReportOptions)
    // Offset: 0x485D7DC
    static uint64_t ovr_User_LaunchReportFlow2(uint64_t optionalUserID, ::System::IntPtr abuseReportOptions);
    // static public System.UInt64 ovr_User_LaunchUnblockFlow(System.UInt64 userID)
    // Offset: 0x485D860
    static uint64_t ovr_User_LaunchUnblockFlow(uint64_t userID);
    // static public System.UInt64 ovr_User_NewEntitledTestUser()
    // Offset: 0x485D8DC
    static uint64_t ovr_User_NewEntitledTestUser();
    // static public System.UInt64 ovr_User_NewTestUser()
    // Offset: 0x485D944
    static uint64_t ovr_User_NewTestUser();
    // static public System.UInt64 ovr_User_NewTestUserFriends()
    // Offset: 0x485D9AC
    static uint64_t ovr_User_NewTestUserFriends();
    // static public System.UInt64 ovr_User_StartRecordingForReportFlow()
    // Offset: 0x485DA14
    static uint64_t ovr_User_StartRecordingForReportFlow();
    // static public System.UInt64 ovr_User_StopRecordingAndLaunchReportFlow(System.UInt64 optionalUserID, System.String optionalRecordingUUID)
    // Offset: 0x485DA7C
    static uint64_t ovr_User_StopRecordingAndLaunchReportFlow(uint64_t optionalUserID, ::StringW optionalRecordingUUID);
    // static private System.UInt64 ovr_User_StopRecordingAndLaunchReportFlow_Native(System.UInt64 optionalUserID, System.IntPtr optionalRecordingUUID)
    // Offset: 0x485DB2C
    static uint64_t ovr_User_StopRecordingAndLaunchReportFlow_Native(uint64_t optionalUserID, ::System::IntPtr optionalRecordingUUID);
    // static public System.UInt64 ovr_User_StopRecordingAndLaunchReportFlow2(System.UInt64 optionalUserID, System.String optionalRecordingUUID, System.IntPtr abuseReportOptions)
    // Offset: 0x485DBB0
    static uint64_t ovr_User_StopRecordingAndLaunchReportFlow2(uint64_t optionalUserID, ::StringW optionalRecordingUUID, ::System::IntPtr abuseReportOptions);
    // static private System.UInt64 ovr_User_StopRecordingAndLaunchReportFlow2_Native(System.UInt64 optionalUserID, System.IntPtr optionalRecordingUUID, System.IntPtr abuseReportOptions)
    // Offset: 0x485DC68
    static uint64_t ovr_User_StopRecordingAndLaunchReportFlow2_Native(uint64_t optionalUserID, ::System::IntPtr optionalRecordingUUID, ::System::IntPtr abuseReportOptions);
    // static public System.UInt64 ovr_User_TestUserCreateDeviceManifest(System.String deviceID, System.UInt64[] appIDs, System.Int32 numAppIDs)
    // Offset: 0x485DCFC
    static uint64_t ovr_User_TestUserCreateDeviceManifest(::StringW deviceID, ::ArrayW<uint64_t> appIDs, int numAppIDs);
    // static private System.UInt64 ovr_User_TestUserCreateDeviceManifest_Native(System.IntPtr deviceID, System.UInt64[] appIDs, System.Int32 numAppIDs)
    // Offset: 0x485DDB0
    static uint64_t ovr_User_TestUserCreateDeviceManifest_Native(::System::IntPtr deviceID, ::ArrayW<uint64_t> appIDs, int numAppIDs);
    // static public System.UInt64 ovr_UserAgeCategory_Get()
    // Offset: 0x485DE4C
    static uint64_t ovr_UserAgeCategory_Get();
    // static public System.UInt64 ovr_UserAgeCategory_Report(Oculus.Platform.AppAgeCategory age_category)
    // Offset: 0x485DEB4
    static uint64_t ovr_UserAgeCategory_Report(::Oculus::Platform::AppAgeCategory age_category);
    // static public System.UInt64 ovr_UserDataStore_PrivateDeleteEntryByKey(System.UInt64 userID, System.String key)
    // Offset: 0x485DF30
    static uint64_t ovr_UserDataStore_PrivateDeleteEntryByKey(uint64_t userID, ::StringW key);
    // static private System.UInt64 ovr_UserDataStore_PrivateDeleteEntryByKey_Native(System.UInt64 userID, System.IntPtr key)
    // Offset: 0x485DFE0
    static uint64_t ovr_UserDataStore_PrivateDeleteEntryByKey_Native(uint64_t userID, ::System::IntPtr key);
    // static public System.UInt64 ovr_UserDataStore_PrivateGetEntries(System.UInt64 userID)
    // Offset: 0x485E064
    static uint64_t ovr_UserDataStore_PrivateGetEntries(uint64_t userID);
    // static public System.UInt64 ovr_UserDataStore_PrivateGetEntryByKey(System.UInt64 userID, System.String key)
    // Offset: 0x485E0E0
    static uint64_t ovr_UserDataStore_PrivateGetEntryByKey(uint64_t userID, ::StringW key);
    // static private System.UInt64 ovr_UserDataStore_PrivateGetEntryByKey_Native(System.UInt64 userID, System.IntPtr key)
    // Offset: 0x485E190
    static uint64_t ovr_UserDataStore_PrivateGetEntryByKey_Native(uint64_t userID, ::System::IntPtr key);
    // static public System.UInt64 ovr_UserDataStore_PrivateWriteEntry(System.UInt64 userID, System.String key, System.String value)
    // Offset: 0x485E214
    static uint64_t ovr_UserDataStore_PrivateWriteEntry(uint64_t userID, ::StringW key, ::StringW value);
    // static private System.UInt64 ovr_UserDataStore_PrivateWriteEntry_Native(System.UInt64 userID, System.IntPtr key, System.IntPtr value)
    // Offset: 0x485E2E4
    static uint64_t ovr_UserDataStore_PrivateWriteEntry_Native(uint64_t userID, ::System::IntPtr key, ::System::IntPtr value);
    // static public System.UInt64 ovr_UserDataStore_PublicDeleteEntryByKey(System.UInt64 userID, System.String key)
    // Offset: 0x485E378
    static uint64_t ovr_UserDataStore_PublicDeleteEntryByKey(uint64_t userID, ::StringW key);
    // static private System.UInt64 ovr_UserDataStore_PublicDeleteEntryByKey_Native(System.UInt64 userID, System.IntPtr key)
    // Offset: 0x485E428
    static uint64_t ovr_UserDataStore_PublicDeleteEntryByKey_Native(uint64_t userID, ::System::IntPtr key);
    // static public System.UInt64 ovr_UserDataStore_PublicGetEntries(System.UInt64 userID)
    // Offset: 0x485E4AC
    static uint64_t ovr_UserDataStore_PublicGetEntries(uint64_t userID);
    // static public System.UInt64 ovr_UserDataStore_PublicGetEntryByKey(System.UInt64 userID, System.String key)
    // Offset: 0x485E528
    static uint64_t ovr_UserDataStore_PublicGetEntryByKey(uint64_t userID, ::StringW key);
    // static private System.UInt64 ovr_UserDataStore_PublicGetEntryByKey_Native(System.UInt64 userID, System.IntPtr key)
    // Offset: 0x485E5D8
    static uint64_t ovr_UserDataStore_PublicGetEntryByKey_Native(uint64_t userID, ::System::IntPtr key);
    // static public System.UInt64 ovr_UserDataStore_PublicWriteEntry(System.UInt64 userID, System.String key, System.String value)
    // Offset: 0x485E65C
    static uint64_t ovr_UserDataStore_PublicWriteEntry(uint64_t userID, ::StringW key, ::StringW value);
    // static private System.UInt64 ovr_UserDataStore_PublicWriteEntry_Native(System.UInt64 userID, System.IntPtr key, System.IntPtr value)
    // Offset: 0x485E72C
    static uint64_t ovr_UserDataStore_PublicWriteEntry_Native(uint64_t userID, ::System::IntPtr key, ::System::IntPtr value);
    // static public System.UInt64 ovr_Voip_GetMicrophoneAvailability()
    // Offset: 0x485E7C0
    static uint64_t ovr_Voip_GetMicrophoneAvailability();
    // static public System.UInt64 ovr_Voip_ReportAppVoipSessions(System.UInt64[] sessionIDs)
    // Offset: 0x485E828
    static uint64_t ovr_Voip_ReportAppVoipSessions(::ArrayW<uint64_t> sessionIDs);
    // static public System.UInt64 ovr_Voip_SetSystemVoipSuppressed(System.Boolean suppressed)
    // Offset: 0x485E8AC
    static uint64_t ovr_Voip_SetSystemVoipSuppressed(bool suppressed);
    // static public System.String ovr_AbuseReportRecording_GetRecordingUuid(System.IntPtr obj)
    // Offset: 0x485E928
    static ::StringW ovr_AbuseReportRecording_GetRecordingUuid(::System::IntPtr obj);
    // static private System.IntPtr ovr_AbuseReportRecording_GetRecordingUuid_Native(System.IntPtr obj)
    // Offset: 0x485E980
    static ::System::IntPtr ovr_AbuseReportRecording_GetRecordingUuid_Native(::System::IntPtr obj);
    // static public System.UInt32 ovr_AchievementDefinition_GetBitfieldLength(System.IntPtr obj)
    // Offset: 0x485E9FC
    static uint ovr_AchievementDefinition_GetBitfieldLength(::System::IntPtr obj);
    // static public System.String ovr_AchievementDefinition_GetName(System.IntPtr obj)
    // Offset: 0x485EA78
    static ::StringW ovr_AchievementDefinition_GetName(::System::IntPtr obj);
    // static private System.IntPtr ovr_AchievementDefinition_GetName_Native(System.IntPtr obj)
    // Offset: 0x485EAD0
    static ::System::IntPtr ovr_AchievementDefinition_GetName_Native(::System::IntPtr obj);
    // static public System.UInt64 ovr_AchievementDefinition_GetTarget(System.IntPtr obj)
    // Offset: 0x485EB4C
    static uint64_t ovr_AchievementDefinition_GetTarget(::System::IntPtr obj);
    // static public Oculus.Platform.AchievementType ovr_AchievementDefinition_GetType(System.IntPtr obj)
    // Offset: 0x485EBC8
    static ::Oculus::Platform::AchievementType ovr_AchievementDefinition_GetType(::System::IntPtr obj);
    // static public System.IntPtr ovr_AchievementDefinitionArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x485EC44
    static ::System::IntPtr ovr_AchievementDefinitionArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index);
    // static public System.String ovr_AchievementDefinitionArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x485ECC8
    static ::StringW ovr_AchievementDefinitionArray_GetNextUrl(::System::IntPtr obj);
    // static private System.IntPtr ovr_AchievementDefinitionArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x485ED20
    static ::System::IntPtr ovr_AchievementDefinitionArray_GetNextUrl_Native(::System::IntPtr obj);
    // static public System.UIntPtr ovr_AchievementDefinitionArray_GetSize(System.IntPtr obj)
    // Offset: 0x485ED9C
    static ::System::UIntPtr ovr_AchievementDefinitionArray_GetSize(::System::IntPtr obj);
    // static public System.Boolean ovr_AchievementDefinitionArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x485EE18
    static bool ovr_AchievementDefinitionArray_HasNextPage(::System::IntPtr obj);
    // static public System.String ovr_AchievementProgress_GetBitfield(System.IntPtr obj)
    // Offset: 0x485EE9C
    static ::StringW ovr_AchievementProgress_GetBitfield(::System::IntPtr obj);
    // static private System.IntPtr ovr_AchievementProgress_GetBitfield_Native(System.IntPtr obj)
    // Offset: 0x485EEF4
    static ::System::IntPtr ovr_AchievementProgress_GetBitfield_Native(::System::IntPtr obj);
    // static public System.UInt64 ovr_AchievementProgress_GetCount(System.IntPtr obj)
    // Offset: 0x485EF70
    static uint64_t ovr_AchievementProgress_GetCount(::System::IntPtr obj);
    // static public System.Boolean ovr_AchievementProgress_GetIsUnlocked(System.IntPtr obj)
    // Offset: 0x485EFEC
    static bool ovr_AchievementProgress_GetIsUnlocked(::System::IntPtr obj);
    // static public System.String ovr_AchievementProgress_GetName(System.IntPtr obj)
    // Offset: 0x485F070
    static ::StringW ovr_AchievementProgress_GetName(::System::IntPtr obj);
    // static private System.IntPtr ovr_AchievementProgress_GetName_Native(System.IntPtr obj)
    // Offset: 0x485F0C8
    static ::System::IntPtr ovr_AchievementProgress_GetName_Native(::System::IntPtr obj);
    // static public System.DateTime ovr_AchievementProgress_GetUnlockTime(System.IntPtr obj)
    // Offset: 0x485F144
    static ::System::DateTime ovr_AchievementProgress_GetUnlockTime(::System::IntPtr obj);
    // static private System.UInt64 ovr_AchievementProgress_GetUnlockTime_Native(System.IntPtr obj)
    // Offset: 0x485F19C
    static uint64_t ovr_AchievementProgress_GetUnlockTime_Native(::System::IntPtr obj);
    // static public System.IntPtr ovr_AchievementProgressArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x485F218
    static ::System::IntPtr ovr_AchievementProgressArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index);
    // static public System.String ovr_AchievementProgressArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x485F29C
    static ::StringW ovr_AchievementProgressArray_GetNextUrl(::System::IntPtr obj);
    // static private System.IntPtr ovr_AchievementProgressArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x485F2F4
    static ::System::IntPtr ovr_AchievementProgressArray_GetNextUrl_Native(::System::IntPtr obj);
    // static public System.UIntPtr ovr_AchievementProgressArray_GetSize(System.IntPtr obj)
    // Offset: 0x485F370
    static ::System::UIntPtr ovr_AchievementProgressArray_GetSize(::System::IntPtr obj);
    // static public System.Boolean ovr_AchievementProgressArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x485F3EC
    static bool ovr_AchievementProgressArray_HasNextPage(::System::IntPtr obj);
    // static public System.Boolean ovr_AchievementUpdate_GetJustUnlocked(System.IntPtr obj)
    // Offset: 0x485F470
    static bool ovr_AchievementUpdate_GetJustUnlocked(::System::IntPtr obj);
    // static public System.String ovr_AchievementUpdate_GetName(System.IntPtr obj)
    // Offset: 0x485F4F4
    static ::StringW ovr_AchievementUpdate_GetName(::System::IntPtr obj);
    // static private System.IntPtr ovr_AchievementUpdate_GetName_Native(System.IntPtr obj)
    // Offset: 0x485F54C
    static ::System::IntPtr ovr_AchievementUpdate_GetName_Native(::System::IntPtr obj);
    // static public System.Int64 ovr_AppDownloadProgressResult_GetDownloadBytes(System.IntPtr obj)
    // Offset: 0x485F5C8
    static int64_t ovr_AppDownloadProgressResult_GetDownloadBytes(::System::IntPtr obj);
    // static public System.Int64 ovr_AppDownloadProgressResult_GetDownloadedBytes(System.IntPtr obj)
    // Offset: 0x485F644
    static int64_t ovr_AppDownloadProgressResult_GetDownloadedBytes(::System::IntPtr obj);
    // static public Oculus.Platform.AppStatus ovr_AppDownloadProgressResult_GetStatusCode(System.IntPtr obj)
    // Offset: 0x485F6C0
    static ::Oculus::Platform::AppStatus ovr_AppDownloadProgressResult_GetStatusCode(::System::IntPtr obj);
    // static public System.Int64 ovr_AppDownloadResult_GetTimestamp(System.IntPtr obj)
    // Offset: 0x485F73C
    static int64_t ovr_AppDownloadResult_GetTimestamp(::System::IntPtr obj);
    // static public System.UInt64 ovr_Application_GetID(System.IntPtr obj)
    // Offset: 0x485F7B8
    static uint64_t ovr_Application_GetID(::System::IntPtr obj);
    // static public System.IntPtr ovr_ApplicationInvite_GetDestination(System.IntPtr obj)
    // Offset: 0x485F834
    static ::System::IntPtr ovr_ApplicationInvite_GetDestination(::System::IntPtr obj);
    // static public System.UInt64 ovr_ApplicationInvite_GetID(System.IntPtr obj)
    // Offset: 0x485F8B0
    static uint64_t ovr_ApplicationInvite_GetID(::System::IntPtr obj);
    // static public System.Boolean ovr_ApplicationInvite_GetIsActive(System.IntPtr obj)
    // Offset: 0x485F92C
    static bool ovr_ApplicationInvite_GetIsActive(::System::IntPtr obj);
    // static public System.String ovr_ApplicationInvite_GetLobbySessionId(System.IntPtr obj)
    // Offset: 0x485F9B0
    static ::StringW ovr_ApplicationInvite_GetLobbySessionId(::System::IntPtr obj);
    // static private System.IntPtr ovr_ApplicationInvite_GetLobbySessionId_Native(System.IntPtr obj)
    // Offset: 0x485FA08
    static ::System::IntPtr ovr_ApplicationInvite_GetLobbySessionId_Native(::System::IntPtr obj);
    // static public System.String ovr_ApplicationInvite_GetMatchSessionId(System.IntPtr obj)
    // Offset: 0x485FA84
    static ::StringW ovr_ApplicationInvite_GetMatchSessionId(::System::IntPtr obj);
    // static private System.IntPtr ovr_ApplicationInvite_GetMatchSessionId_Native(System.IntPtr obj)
    // Offset: 0x485FADC
    static ::System::IntPtr ovr_ApplicationInvite_GetMatchSessionId_Native(::System::IntPtr obj);
    // static public System.IntPtr ovr_ApplicationInvite_GetRecipient(System.IntPtr obj)
    // Offset: 0x485FB58
    static ::System::IntPtr ovr_ApplicationInvite_GetRecipient(::System::IntPtr obj);
    // static public System.IntPtr ovr_ApplicationInviteArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x485FBD4
    static ::System::IntPtr ovr_ApplicationInviteArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index);
    // static public System.String ovr_ApplicationInviteArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x485FC58
    static ::StringW ovr_ApplicationInviteArray_GetNextUrl(::System::IntPtr obj);
    // static private System.IntPtr ovr_ApplicationInviteArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x485FCB0
    static ::System::IntPtr ovr_ApplicationInviteArray_GetNextUrl_Native(::System::IntPtr obj);
    // static public System.UIntPtr ovr_ApplicationInviteArray_GetSize(System.IntPtr obj)
    // Offset: 0x485FD2C
    static ::System::UIntPtr ovr_ApplicationInviteArray_GetSize(::System::IntPtr obj);
    // static public System.Boolean ovr_ApplicationInviteArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x485FDA8
    static bool ovr_ApplicationInviteArray_HasNextPage(::System::IntPtr obj);
    // static public System.Int32 ovr_ApplicationVersion_GetCurrentCode(System.IntPtr obj)
    // Offset: 0x485FE2C
    static int ovr_ApplicationVersion_GetCurrentCode(::System::IntPtr obj);
    // static public System.String ovr_ApplicationVersion_GetCurrentName(System.IntPtr obj)
    // Offset: 0x485FEA8
    static ::StringW ovr_ApplicationVersion_GetCurrentName(::System::IntPtr obj);
    // static private System.IntPtr ovr_ApplicationVersion_GetCurrentName_Native(System.IntPtr obj)
    // Offset: 0x485FF00
    static ::System::IntPtr ovr_ApplicationVersion_GetCurrentName_Native(::System::IntPtr obj);
    // static public System.Int32 ovr_ApplicationVersion_GetLatestCode(System.IntPtr obj)
    // Offset: 0x485FF7C
    static int ovr_ApplicationVersion_GetLatestCode(::System::IntPtr obj);
    // static public System.String ovr_ApplicationVersion_GetLatestName(System.IntPtr obj)
    // Offset: 0x485FFF8
    static ::StringW ovr_ApplicationVersion_GetLatestName(::System::IntPtr obj);
    // static private System.IntPtr ovr_ApplicationVersion_GetLatestName_Native(System.IntPtr obj)
    // Offset: 0x4860050
    static ::System::IntPtr ovr_ApplicationVersion_GetLatestName_Native(::System::IntPtr obj);
    // static public System.Int64 ovr_ApplicationVersion_GetReleaseDate(System.IntPtr obj)
    // Offset: 0x48600CC
    static int64_t ovr_ApplicationVersion_GetReleaseDate(::System::IntPtr obj);
    // static public System.String ovr_ApplicationVersion_GetSize(System.IntPtr obj)
    // Offset: 0x4860148
    static ::StringW ovr_ApplicationVersion_GetSize(::System::IntPtr obj);
    // static private System.IntPtr ovr_ApplicationVersion_GetSize_Native(System.IntPtr obj)
    // Offset: 0x48601A0
    static ::System::IntPtr ovr_ApplicationVersion_GetSize_Native(::System::IntPtr obj);
    // static public System.UInt64 ovr_AssetDetails_GetAssetId(System.IntPtr obj)
    // Offset: 0x486021C
    static uint64_t ovr_AssetDetails_GetAssetId(::System::IntPtr obj);
    // static public System.String ovr_AssetDetails_GetAssetType(System.IntPtr obj)
    // Offset: 0x4860298
    static ::StringW ovr_AssetDetails_GetAssetType(::System::IntPtr obj);
    // static private System.IntPtr ovr_AssetDetails_GetAssetType_Native(System.IntPtr obj)
    // Offset: 0x48602F0
    static ::System::IntPtr ovr_AssetDetails_GetAssetType_Native(::System::IntPtr obj);
    // static public System.String ovr_AssetDetails_GetDownloadStatus(System.IntPtr obj)
    // Offset: 0x486036C
    static ::StringW ovr_AssetDetails_GetDownloadStatus(::System::IntPtr obj);
    // static private System.IntPtr ovr_AssetDetails_GetDownloadStatus_Native(System.IntPtr obj)
    // Offset: 0x48603C4
    static ::System::IntPtr ovr_AssetDetails_GetDownloadStatus_Native(::System::IntPtr obj);
    // static public System.String ovr_AssetDetails_GetFilepath(System.IntPtr obj)
    // Offset: 0x4860440
    static ::StringW ovr_AssetDetails_GetFilepath(::System::IntPtr obj);
    // static private System.IntPtr ovr_AssetDetails_GetFilepath_Native(System.IntPtr obj)
    // Offset: 0x4860498
    static ::System::IntPtr ovr_AssetDetails_GetFilepath_Native(::System::IntPtr obj);
    // static public System.String ovr_AssetDetails_GetIapStatus(System.IntPtr obj)
    // Offset: 0x4860514
    static ::StringW ovr_AssetDetails_GetIapStatus(::System::IntPtr obj);
    // static private System.IntPtr ovr_AssetDetails_GetIapStatus_Native(System.IntPtr obj)
    // Offset: 0x486056C
    static ::System::IntPtr ovr_AssetDetails_GetIapStatus_Native(::System::IntPtr obj);
    // static public System.IntPtr ovr_AssetDetails_GetLanguage(System.IntPtr obj)
    // Offset: 0x48605E8
    static ::System::IntPtr ovr_AssetDetails_GetLanguage(::System::IntPtr obj);
    // static public System.String ovr_AssetDetails_GetMetadata(System.IntPtr obj)
    // Offset: 0x4860664
    static ::StringW ovr_AssetDetails_GetMetadata(::System::IntPtr obj);
    // static private System.IntPtr ovr_AssetDetails_GetMetadata_Native(System.IntPtr obj)
    // Offset: 0x48606BC
    static ::System::IntPtr ovr_AssetDetails_GetMetadata_Native(::System::IntPtr obj);
    // static public System.IntPtr ovr_AssetDetailsArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x4860738
    static ::System::IntPtr ovr_AssetDetailsArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index);
    // static public System.UIntPtr ovr_AssetDetailsArray_GetSize(System.IntPtr obj)
    // Offset: 0x48607BC
    static ::System::UIntPtr ovr_AssetDetailsArray_GetSize(::System::IntPtr obj);
    // static public System.UInt64 ovr_AssetFileDeleteResult_GetAssetFileId(System.IntPtr obj)
    // Offset: 0x4860838
    static uint64_t ovr_AssetFileDeleteResult_GetAssetFileId(::System::IntPtr obj);
    // static public System.UInt64 ovr_AssetFileDeleteResult_GetAssetId(System.IntPtr obj)
    // Offset: 0x48608B4
    static uint64_t ovr_AssetFileDeleteResult_GetAssetId(::System::IntPtr obj);
    // static public System.String ovr_AssetFileDeleteResult_GetFilepath(System.IntPtr obj)
    // Offset: 0x4860930
    static ::StringW ovr_AssetFileDeleteResult_GetFilepath(::System::IntPtr obj);
    // static private System.IntPtr ovr_AssetFileDeleteResult_GetFilepath_Native(System.IntPtr obj)
    // Offset: 0x4860988
    static ::System::IntPtr ovr_AssetFileDeleteResult_GetFilepath_Native(::System::IntPtr obj);
    // static public System.Boolean ovr_AssetFileDeleteResult_GetSuccess(System.IntPtr obj)
    // Offset: 0x4860A04
    static bool ovr_AssetFileDeleteResult_GetSuccess(::System::IntPtr obj);
    // static public System.UInt64 ovr_AssetFileDownloadCancelResult_GetAssetFileId(System.IntPtr obj)
    // Offset: 0x4860A88
    static uint64_t ovr_AssetFileDownloadCancelResult_GetAssetFileId(::System::IntPtr obj);
    // static public System.UInt64 ovr_AssetFileDownloadCancelResult_GetAssetId(System.IntPtr obj)
    // Offset: 0x4860B04
    static uint64_t ovr_AssetFileDownloadCancelResult_GetAssetId(::System::IntPtr obj);
    // static public System.String ovr_AssetFileDownloadCancelResult_GetFilepath(System.IntPtr obj)
    // Offset: 0x4860B80
    static ::StringW ovr_AssetFileDownloadCancelResult_GetFilepath(::System::IntPtr obj);
    // static private System.IntPtr ovr_AssetFileDownloadCancelResult_GetFilepath_Native(System.IntPtr obj)
    // Offset: 0x4860BD8
    static ::System::IntPtr ovr_AssetFileDownloadCancelResult_GetFilepath_Native(::System::IntPtr obj);
    // static public System.Boolean ovr_AssetFileDownloadCancelResult_GetSuccess(System.IntPtr obj)
    // Offset: 0x4860C54
    static bool ovr_AssetFileDownloadCancelResult_GetSuccess(::System::IntPtr obj);
    // static public System.UInt64 ovr_AssetFileDownloadResult_GetAssetId(System.IntPtr obj)
    // Offset: 0x4860CD8
    static uint64_t ovr_AssetFileDownloadResult_GetAssetId(::System::IntPtr obj);
    // static public System.String ovr_AssetFileDownloadResult_GetFilepath(System.IntPtr obj)
    // Offset: 0x4860D54
    static ::StringW ovr_AssetFileDownloadResult_GetFilepath(::System::IntPtr obj);
    // static private System.IntPtr ovr_AssetFileDownloadResult_GetFilepath_Native(System.IntPtr obj)
    // Offset: 0x4860DAC
    static ::System::IntPtr ovr_AssetFileDownloadResult_GetFilepath_Native(::System::IntPtr obj);
    // static public System.UInt64 ovr_AssetFileDownloadUpdate_GetAssetFileId(System.IntPtr obj)
    // Offset: 0x4860E28
    static uint64_t ovr_AssetFileDownloadUpdate_GetAssetFileId(::System::IntPtr obj);
    // static public System.UInt64 ovr_AssetFileDownloadUpdate_GetAssetId(System.IntPtr obj)
    // Offset: 0x4860EA4
    static uint64_t ovr_AssetFileDownloadUpdate_GetAssetId(::System::IntPtr obj);
    // static public System.UInt32 ovr_AssetFileDownloadUpdate_GetBytesTotal(System.IntPtr obj)
    // Offset: 0x4860F20
    static uint ovr_AssetFileDownloadUpdate_GetBytesTotal(::System::IntPtr obj);
    // static public System.UInt64 ovr_AssetFileDownloadUpdate_GetBytesTotalLong(System.IntPtr obj)
    // Offset: 0x4860F9C
    static uint64_t ovr_AssetFileDownloadUpdate_GetBytesTotalLong(::System::IntPtr obj);
    // static public System.Int32 ovr_AssetFileDownloadUpdate_GetBytesTransferred(System.IntPtr obj)
    // Offset: 0x4861018
    static int ovr_AssetFileDownloadUpdate_GetBytesTransferred(::System::IntPtr obj);
    // static public System.Int64 ovr_AssetFileDownloadUpdate_GetBytesTransferredLong(System.IntPtr obj)
    // Offset: 0x4861094
    static int64_t ovr_AssetFileDownloadUpdate_GetBytesTransferredLong(::System::IntPtr obj);
    // static public System.Boolean ovr_AssetFileDownloadUpdate_GetCompleted(System.IntPtr obj)
    // Offset: 0x4861110
    static bool ovr_AssetFileDownloadUpdate_GetCompleted(::System::IntPtr obj);
    // static public System.Boolean ovr_AvatarEditorResult_GetRequestSent(System.IntPtr obj)
    // Offset: 0x4861194
    static bool ovr_AvatarEditorResult_GetRequestSent(::System::IntPtr obj);
    // static public System.UInt64 ovr_BlockedUser_GetId(System.IntPtr obj)
    // Offset: 0x4861218
    static uint64_t ovr_BlockedUser_GetId(::System::IntPtr obj);
    // static public System.IntPtr ovr_BlockedUserArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x4861294
    static ::System::IntPtr ovr_BlockedUserArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index);
    // static public System.String ovr_BlockedUserArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x4861318
    static ::StringW ovr_BlockedUserArray_GetNextUrl(::System::IntPtr obj);
    // static private System.IntPtr ovr_BlockedUserArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x4861370
    static ::System::IntPtr ovr_BlockedUserArray_GetNextUrl_Native(::System::IntPtr obj);
    // static public System.UIntPtr ovr_BlockedUserArray_GetSize(System.IntPtr obj)
    // Offset: 0x48613EC
    static ::System::UIntPtr ovr_BlockedUserArray_GetSize(::System::IntPtr obj);
    // static public System.Boolean ovr_BlockedUserArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x4861468
    static bool ovr_BlockedUserArray_HasNextPage(::System::IntPtr obj);
    // static public Oculus.Platform.ChallengeCreationType ovr_Challenge_GetCreationType(System.IntPtr obj)
    // Offset: 0x48614EC
    static ::Oculus::Platform::ChallengeCreationType ovr_Challenge_GetCreationType(::System::IntPtr obj);
    // static public System.String ovr_Challenge_GetDescription(System.IntPtr obj)
    // Offset: 0x4861568
    static ::StringW ovr_Challenge_GetDescription(::System::IntPtr obj);
    // static private System.IntPtr ovr_Challenge_GetDescription_Native(System.IntPtr obj)
    // Offset: 0x48615C0
    static ::System::IntPtr ovr_Challenge_GetDescription_Native(::System::IntPtr obj);
    // static public System.DateTime ovr_Challenge_GetEndDate(System.IntPtr obj)
    // Offset: 0x486163C
    static ::System::DateTime ovr_Challenge_GetEndDate(::System::IntPtr obj);
    // static private System.UInt64 ovr_Challenge_GetEndDate_Native(System.IntPtr obj)
    // Offset: 0x4861694
    static uint64_t ovr_Challenge_GetEndDate_Native(::System::IntPtr obj);
    // static public System.UInt64 ovr_Challenge_GetID(System.IntPtr obj)
    // Offset: 0x4861710
    static uint64_t ovr_Challenge_GetID(::System::IntPtr obj);
    // static public System.IntPtr ovr_Challenge_GetInvitedUsers(System.IntPtr obj)
    // Offset: 0x486178C
    static ::System::IntPtr ovr_Challenge_GetInvitedUsers(::System::IntPtr obj);
    // static public System.IntPtr ovr_Challenge_GetLeaderboard(System.IntPtr obj)
    // Offset: 0x4861808
    static ::System::IntPtr ovr_Challenge_GetLeaderboard(::System::IntPtr obj);
    // static public System.IntPtr ovr_Challenge_GetParticipants(System.IntPtr obj)
    // Offset: 0x4861884
    static ::System::IntPtr ovr_Challenge_GetParticipants(::System::IntPtr obj);
    // static public System.DateTime ovr_Challenge_GetStartDate(System.IntPtr obj)
    // Offset: 0x4861900
    static ::System::DateTime ovr_Challenge_GetStartDate(::System::IntPtr obj);
    // static private System.UInt64 ovr_Challenge_GetStartDate_Native(System.IntPtr obj)
    // Offset: 0x4861958
    static uint64_t ovr_Challenge_GetStartDate_Native(::System::IntPtr obj);
    // static public System.String ovr_Challenge_GetTitle(System.IntPtr obj)
    // Offset: 0x48619D4
    static ::StringW ovr_Challenge_GetTitle(::System::IntPtr obj);
    // static private System.IntPtr ovr_Challenge_GetTitle_Native(System.IntPtr obj)
    // Offset: 0x4861A2C
    static ::System::IntPtr ovr_Challenge_GetTitle_Native(::System::IntPtr obj);
    // static public Oculus.Platform.ChallengeVisibility ovr_Challenge_GetVisibility(System.IntPtr obj)
    // Offset: 0x4861AA8
    static ::Oculus::Platform::ChallengeVisibility ovr_Challenge_GetVisibility(::System::IntPtr obj);
    // static public System.IntPtr ovr_ChallengeArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x4861B24
    static ::System::IntPtr ovr_ChallengeArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index);
    // static public System.String ovr_ChallengeArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x4861BA8
    static ::StringW ovr_ChallengeArray_GetNextUrl(::System::IntPtr obj);
    // static private System.IntPtr ovr_ChallengeArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x4861C00
    static ::System::IntPtr ovr_ChallengeArray_GetNextUrl_Native(::System::IntPtr obj);
    // static public System.String ovr_ChallengeArray_GetPreviousUrl(System.IntPtr obj)
    // Offset: 0x4861C7C
    static ::StringW ovr_ChallengeArray_GetPreviousUrl(::System::IntPtr obj);
    // static private System.IntPtr ovr_ChallengeArray_GetPreviousUrl_Native(System.IntPtr obj)
    // Offset: 0x4861CD4
    static ::System::IntPtr ovr_ChallengeArray_GetPreviousUrl_Native(::System::IntPtr obj);
    // static public System.UIntPtr ovr_ChallengeArray_GetSize(System.IntPtr obj)
    // Offset: 0x4861D50
    static ::System::UIntPtr ovr_ChallengeArray_GetSize(::System::IntPtr obj);
    // static public System.UInt64 ovr_ChallengeArray_GetTotalCount(System.IntPtr obj)
    // Offset: 0x4861DCC
    static uint64_t ovr_ChallengeArray_GetTotalCount(::System::IntPtr obj);
    // static public System.Boolean ovr_ChallengeArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x4861E48
    static bool ovr_ChallengeArray_HasNextPage(::System::IntPtr obj);
    // static public System.Boolean ovr_ChallengeArray_HasPreviousPage(System.IntPtr obj)
    // Offset: 0x4861ECC
    static bool ovr_ChallengeArray_HasPreviousPage(::System::IntPtr obj);
    // static public System.String ovr_ChallengeEntry_GetDisplayScore(System.IntPtr obj)
    // Offset: 0x4861F50
    static ::StringW ovr_ChallengeEntry_GetDisplayScore(::System::IntPtr obj);
    // static private System.IntPtr ovr_ChallengeEntry_GetDisplayScore_Native(System.IntPtr obj)
    // Offset: 0x4861FA8
    static ::System::IntPtr ovr_ChallengeEntry_GetDisplayScore_Native(::System::IntPtr obj);
    // static public System.Byte[] ovr_ChallengeEntry_GetExtraData(System.IntPtr obj)
    // Offset: 0x4862024
    static ::ArrayW<uint8_t> ovr_ChallengeEntry_GetExtraData(::System::IntPtr obj);
    // static private System.IntPtr ovr_ChallengeEntry_GetExtraData_Native(System.IntPtr obj)
    // Offset: 0x486210C
    static ::System::IntPtr ovr_ChallengeEntry_GetExtraData_Native(::System::IntPtr obj);
    // static public System.UInt32 ovr_ChallengeEntry_GetExtraDataLength(System.IntPtr obj)
    // Offset: 0x4862188
    static uint ovr_ChallengeEntry_GetExtraDataLength(::System::IntPtr obj);
    // static public System.UInt64 ovr_ChallengeEntry_GetID(System.IntPtr obj)
    // Offset: 0x4862204
    static uint64_t ovr_ChallengeEntry_GetID(::System::IntPtr obj);
    // static public System.Int32 ovr_ChallengeEntry_GetRank(System.IntPtr obj)
    // Offset: 0x4862280
    static int ovr_ChallengeEntry_GetRank(::System::IntPtr obj);
    // static public System.Int64 ovr_ChallengeEntry_GetScore(System.IntPtr obj)
    // Offset: 0x48622FC
    static int64_t ovr_ChallengeEntry_GetScore(::System::IntPtr obj);
    // static public System.DateTime ovr_ChallengeEntry_GetTimestamp(System.IntPtr obj)
    // Offset: 0x4862378
    static ::System::DateTime ovr_ChallengeEntry_GetTimestamp(::System::IntPtr obj);
    // static private System.UInt64 ovr_ChallengeEntry_GetTimestamp_Native(System.IntPtr obj)
    // Offset: 0x48623D0
    static uint64_t ovr_ChallengeEntry_GetTimestamp_Native(::System::IntPtr obj);
    // static public System.IntPtr ovr_ChallengeEntry_GetUser(System.IntPtr obj)
    // Offset: 0x486244C
    static ::System::IntPtr ovr_ChallengeEntry_GetUser(::System::IntPtr obj);
    // static public System.IntPtr ovr_ChallengeEntryArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x48624C8
    static ::System::IntPtr ovr_ChallengeEntryArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index);
    // static public System.String ovr_ChallengeEntryArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x486254C
    static ::StringW ovr_ChallengeEntryArray_GetNextUrl(::System::IntPtr obj);
    // static private System.IntPtr ovr_ChallengeEntryArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x48625A4
    static ::System::IntPtr ovr_ChallengeEntryArray_GetNextUrl_Native(::System::IntPtr obj);
    // static public System.String ovr_ChallengeEntryArray_GetPreviousUrl(System.IntPtr obj)
    // Offset: 0x4862620
    static ::StringW ovr_ChallengeEntryArray_GetPreviousUrl(::System::IntPtr obj);
    // static private System.IntPtr ovr_ChallengeEntryArray_GetPreviousUrl_Native(System.IntPtr obj)
    // Offset: 0x4862678
    static ::System::IntPtr ovr_ChallengeEntryArray_GetPreviousUrl_Native(::System::IntPtr obj);
    // static public System.UIntPtr ovr_ChallengeEntryArray_GetSize(System.IntPtr obj)
    // Offset: 0x48626F4
    static ::System::UIntPtr ovr_ChallengeEntryArray_GetSize(::System::IntPtr obj);
    // static public System.UInt64 ovr_ChallengeEntryArray_GetTotalCount(System.IntPtr obj)
    // Offset: 0x4862770
    static uint64_t ovr_ChallengeEntryArray_GetTotalCount(::System::IntPtr obj);
    // static public System.Boolean ovr_ChallengeEntryArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x48627EC
    static bool ovr_ChallengeEntryArray_HasNextPage(::System::IntPtr obj);
    // static public System.Boolean ovr_ChallengeEntryArray_HasPreviousPage(System.IntPtr obj)
    // Offset: 0x4862870
    static bool ovr_ChallengeEntryArray_HasPreviousPage(::System::IntPtr obj);
    // static public System.UInt32 ovr_DataStore_Contains(System.IntPtr obj, System.String key)
    // Offset: 0x48628F4
    static uint ovr_DataStore_Contains(::System::IntPtr obj, ::StringW key);
    // static private System.UInt32 ovr_DataStore_Contains_Native(System.IntPtr obj, System.IntPtr key)
    // Offset: 0x48629A4
    static uint ovr_DataStore_Contains_Native(::System::IntPtr obj, ::System::IntPtr key);
    // static public System.String ovr_DataStore_GetKey(System.IntPtr obj, System.Int32 index)
    // Offset: 0x4854008
    static ::StringW ovr_DataStore_GetKey(::System::IntPtr obj, int index);
    // static private System.IntPtr ovr_DataStore_GetKey_Native(System.IntPtr obj, System.Int32 index)
    // Offset: 0x4862A28
    static ::System::IntPtr ovr_DataStore_GetKey_Native(::System::IntPtr obj, int index);
    // static public System.UIntPtr ovr_DataStore_GetNumKeys(System.IntPtr obj)
    // Offset: 0x4853F8C
    static ::System::UIntPtr ovr_DataStore_GetNumKeys(::System::IntPtr obj);
    // static public System.String ovr_DataStore_GetValue(System.IntPtr obj, System.String key)
    // Offset: 0x4854070
    static ::StringW ovr_DataStore_GetValue(::System::IntPtr obj, ::StringW key);
    // static private System.IntPtr ovr_DataStore_GetValue_Native(System.IntPtr obj, System.IntPtr key)
    // Offset: 0x4862AAC
    static ::System::IntPtr ovr_DataStore_GetValue_Native(::System::IntPtr obj, ::System::IntPtr key);
    // static public System.String ovr_Destination_GetApiName(System.IntPtr obj)
    // Offset: 0x4862B30
    static ::StringW ovr_Destination_GetApiName(::System::IntPtr obj);
    // static private System.IntPtr ovr_Destination_GetApiName_Native(System.IntPtr obj)
    // Offset: 0x4862B88
    static ::System::IntPtr ovr_Destination_GetApiName_Native(::System::IntPtr obj);
    // static public System.String ovr_Destination_GetDeeplinkMessage(System.IntPtr obj)
    // Offset: 0x4862C04
    static ::StringW ovr_Destination_GetDeeplinkMessage(::System::IntPtr obj);
    // static private System.IntPtr ovr_Destination_GetDeeplinkMessage_Native(System.IntPtr obj)
    // Offset: 0x4862C5C
    static ::System::IntPtr ovr_Destination_GetDeeplinkMessage_Native(::System::IntPtr obj);
    // static public System.String ovr_Destination_GetDisplayName(System.IntPtr obj)
    // Offset: 0x4862CD8
    static ::StringW ovr_Destination_GetDisplayName(::System::IntPtr obj);
    // static private System.IntPtr ovr_Destination_GetDisplayName_Native(System.IntPtr obj)
    // Offset: 0x4862D30
    static ::System::IntPtr ovr_Destination_GetDisplayName_Native(::System::IntPtr obj);
    // static public System.IntPtr ovr_DestinationArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x4862DAC
    static ::System::IntPtr ovr_DestinationArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index);
    // static public System.String ovr_DestinationArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x4862E30
    static ::StringW ovr_DestinationArray_GetNextUrl(::System::IntPtr obj);
    // static private System.IntPtr ovr_DestinationArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x4862E88
    static ::System::IntPtr ovr_DestinationArray_GetNextUrl_Native(::System::IntPtr obj);
    // static public System.UIntPtr ovr_DestinationArray_GetSize(System.IntPtr obj)
    // Offset: 0x4862F04
    static ::System::UIntPtr ovr_DestinationArray_GetSize(::System::IntPtr obj);
    // static public System.Boolean ovr_DestinationArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x4862F80
    static bool ovr_DestinationArray_HasNextPage(::System::IntPtr obj);
    // static public System.Int32 ovr_Error_GetCode(System.IntPtr obj)
    // Offset: 0x4863004
    static int ovr_Error_GetCode(::System::IntPtr obj);
    // static public System.String ovr_Error_GetDisplayableMessage(System.IntPtr obj)
    // Offset: 0x486307C
    static ::StringW ovr_Error_GetDisplayableMessage(::System::IntPtr obj);
    // static private System.IntPtr ovr_Error_GetDisplayableMessage_Native(System.IntPtr obj)
    // Offset: 0x48630D4
    static ::System::IntPtr ovr_Error_GetDisplayableMessage_Native(::System::IntPtr obj);
    // static public System.Int32 ovr_Error_GetHttpCode(System.IntPtr obj)
    // Offset: 0x4863150
    static int ovr_Error_GetHttpCode(::System::IntPtr obj);
    // static public System.String ovr_Error_GetMessage(System.IntPtr obj)
    // Offset: 0x48631CC
    static ::StringW ovr_Error_GetMessage(::System::IntPtr obj);
    // static private System.IntPtr ovr_Error_GetMessage_Native(System.IntPtr obj)
    // Offset: 0x4863224
    static ::System::IntPtr ovr_Error_GetMessage_Native(::System::IntPtr obj);
    // static public System.String ovr_GroupPresenceJoinIntent_GetDeeplinkMessage(System.IntPtr obj)
    // Offset: 0x48632A0
    static ::StringW ovr_GroupPresenceJoinIntent_GetDeeplinkMessage(::System::IntPtr obj);
    // static private System.IntPtr ovr_GroupPresenceJoinIntent_GetDeeplinkMessage_Native(System.IntPtr obj)
    // Offset: 0x48632F8
    static ::System::IntPtr ovr_GroupPresenceJoinIntent_GetDeeplinkMessage_Native(::System::IntPtr obj);
    // static public System.String ovr_GroupPresenceJoinIntent_GetDestinationApiName(System.IntPtr obj)
    // Offset: 0x4863374
    static ::StringW ovr_GroupPresenceJoinIntent_GetDestinationApiName(::System::IntPtr obj);
    // static private System.IntPtr ovr_GroupPresenceJoinIntent_GetDestinationApiName_Native(System.IntPtr obj)
    // Offset: 0x48633CC
    static ::System::IntPtr ovr_GroupPresenceJoinIntent_GetDestinationApiName_Native(::System::IntPtr obj);
    // static public System.String ovr_GroupPresenceJoinIntent_GetLobbySessionId(System.IntPtr obj)
    // Offset: 0x4863448
    static ::StringW ovr_GroupPresenceJoinIntent_GetLobbySessionId(::System::IntPtr obj);
    // static private System.IntPtr ovr_GroupPresenceJoinIntent_GetLobbySessionId_Native(System.IntPtr obj)
    // Offset: 0x48634A0
    static ::System::IntPtr ovr_GroupPresenceJoinIntent_GetLobbySessionId_Native(::System::IntPtr obj);
    // static public System.String ovr_GroupPresenceJoinIntent_GetMatchSessionId(System.IntPtr obj)
    // Offset: 0x486351C
    static ::StringW ovr_GroupPresenceJoinIntent_GetMatchSessionId(::System::IntPtr obj);
    // static private System.IntPtr ovr_GroupPresenceJoinIntent_GetMatchSessionId_Native(System.IntPtr obj)
    // Offset: 0x4863574
    static ::System::IntPtr ovr_GroupPresenceJoinIntent_GetMatchSessionId_Native(::System::IntPtr obj);
    // static public System.String ovr_GroupPresenceLeaveIntent_GetDestinationApiName(System.IntPtr obj)
    // Offset: 0x48635F0
    static ::StringW ovr_GroupPresenceLeaveIntent_GetDestinationApiName(::System::IntPtr obj);
    // static private System.IntPtr ovr_GroupPresenceLeaveIntent_GetDestinationApiName_Native(System.IntPtr obj)
    // Offset: 0x4863648
    static ::System::IntPtr ovr_GroupPresenceLeaveIntent_GetDestinationApiName_Native(::System::IntPtr obj);
    // static public System.String ovr_GroupPresenceLeaveIntent_GetLobbySessionId(System.IntPtr obj)
    // Offset: 0x48636C4
    static ::StringW ovr_GroupPresenceLeaveIntent_GetLobbySessionId(::System::IntPtr obj);
    // static private System.IntPtr ovr_GroupPresenceLeaveIntent_GetLobbySessionId_Native(System.IntPtr obj)
    // Offset: 0x486371C
    static ::System::IntPtr ovr_GroupPresenceLeaveIntent_GetLobbySessionId_Native(::System::IntPtr obj);
    // static public System.String ovr_GroupPresenceLeaveIntent_GetMatchSessionId(System.IntPtr obj)
    // Offset: 0x4863798
    static ::StringW ovr_GroupPresenceLeaveIntent_GetMatchSessionId(::System::IntPtr obj);
    // static private System.IntPtr ovr_GroupPresenceLeaveIntent_GetMatchSessionId_Native(System.IntPtr obj)
    // Offset: 0x48637F0
    static ::System::IntPtr ovr_GroupPresenceLeaveIntent_GetMatchSessionId_Native(::System::IntPtr obj);
    // static public System.IntPtr ovr_HttpTransferUpdate_GetBytes(System.IntPtr obj)
    // Offset: 0x486386C
    static ::System::IntPtr ovr_HttpTransferUpdate_GetBytes(::System::IntPtr obj);
    // static public System.UInt64 ovr_HttpTransferUpdate_GetID(System.IntPtr obj)
    // Offset: 0x48638E8
    static uint64_t ovr_HttpTransferUpdate_GetID(::System::IntPtr obj);
    // static public System.UIntPtr ovr_HttpTransferUpdate_GetSize(System.IntPtr obj)
    // Offset: 0x4863964
    static ::System::UIntPtr ovr_HttpTransferUpdate_GetSize(::System::IntPtr obj);
    // static public System.Boolean ovr_HttpTransferUpdate_IsCompleted(System.IntPtr obj)
    // Offset: 0x48639E0
    static bool ovr_HttpTransferUpdate_IsCompleted(::System::IntPtr obj);
    // static public System.String ovr_InstalledApplication_GetApplicationId(System.IntPtr obj)
    // Offset: 0x4863A64
    static ::StringW ovr_InstalledApplication_GetApplicationId(::System::IntPtr obj);
    // static private System.IntPtr ovr_InstalledApplication_GetApplicationId_Native(System.IntPtr obj)
    // Offset: 0x4863ABC
    static ::System::IntPtr ovr_InstalledApplication_GetApplicationId_Native(::System::IntPtr obj);
    // static public System.String ovr_InstalledApplication_GetPackageName(System.IntPtr obj)
    // Offset: 0x4863B38
    static ::StringW ovr_InstalledApplication_GetPackageName(::System::IntPtr obj);
    // static private System.IntPtr ovr_InstalledApplication_GetPackageName_Native(System.IntPtr obj)
    // Offset: 0x4863B90
    static ::System::IntPtr ovr_InstalledApplication_GetPackageName_Native(::System::IntPtr obj);
    // static public System.String ovr_InstalledApplication_GetStatus(System.IntPtr obj)
    // Offset: 0x4863C0C
    static ::StringW ovr_InstalledApplication_GetStatus(::System::IntPtr obj);
    // static private System.IntPtr ovr_InstalledApplication_GetStatus_Native(System.IntPtr obj)
    // Offset: 0x4863C64
    static ::System::IntPtr ovr_InstalledApplication_GetStatus_Native(::System::IntPtr obj);
    // static public System.Int32 ovr_InstalledApplication_GetVersionCode(System.IntPtr obj)
    // Offset: 0x4863CE0
    static int ovr_InstalledApplication_GetVersionCode(::System::IntPtr obj);
    // static public System.String ovr_InstalledApplication_GetVersionName(System.IntPtr obj)
    // Offset: 0x4863D5C
    static ::StringW ovr_InstalledApplication_GetVersionName(::System::IntPtr obj);
    // static private System.IntPtr ovr_InstalledApplication_GetVersionName_Native(System.IntPtr obj)
    // Offset: 0x4863DB4
    static ::System::IntPtr ovr_InstalledApplication_GetVersionName_Native(::System::IntPtr obj);
    // static public System.IntPtr ovr_InstalledApplicationArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x4863E30
    static ::System::IntPtr ovr_InstalledApplicationArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index);
    // static public System.UIntPtr ovr_InstalledApplicationArray_GetSize(System.IntPtr obj)
    // Offset: 0x4863EB4
    static ::System::UIntPtr ovr_InstalledApplicationArray_GetSize(::System::IntPtr obj);
    // static public System.Boolean ovr_InvitePanelResultInfo_GetInvitesSent(System.IntPtr obj)
    // Offset: 0x4863F30
    static bool ovr_InvitePanelResultInfo_GetInvitesSent(::System::IntPtr obj);
    // static public System.String ovr_LanguagePackInfo_GetEnglishName(System.IntPtr obj)
    // Offset: 0x4863FB4
    static ::StringW ovr_LanguagePackInfo_GetEnglishName(::System::IntPtr obj);
    // static private System.IntPtr ovr_LanguagePackInfo_GetEnglishName_Native(System.IntPtr obj)
    // Offset: 0x486400C
    static ::System::IntPtr ovr_LanguagePackInfo_GetEnglishName_Native(::System::IntPtr obj);
    // static public System.String ovr_LanguagePackInfo_GetNativeName(System.IntPtr obj)
    // Offset: 0x4864088
    static ::StringW ovr_LanguagePackInfo_GetNativeName(::System::IntPtr obj);
    // static private System.IntPtr ovr_LanguagePackInfo_GetNativeName_Native(System.IntPtr obj)
    // Offset: 0x48640E0
    static ::System::IntPtr ovr_LanguagePackInfo_GetNativeName_Native(::System::IntPtr obj);
    // static public System.String ovr_LanguagePackInfo_GetTag(System.IntPtr obj)
    // Offset: 0x486415C
    static ::StringW ovr_LanguagePackInfo_GetTag(::System::IntPtr obj);
    // static private System.IntPtr ovr_LanguagePackInfo_GetTag_Native(System.IntPtr obj)
    // Offset: 0x48641B4
    static ::System::IntPtr ovr_LanguagePackInfo_GetTag_Native(::System::IntPtr obj);
    // static public System.Boolean ovr_LaunchBlockFlowResult_GetDidBlock(System.IntPtr obj)
    // Offset: 0x4864230
    static bool ovr_LaunchBlockFlowResult_GetDidBlock(::System::IntPtr obj);
    // static public System.Boolean ovr_LaunchBlockFlowResult_GetDidCancel(System.IntPtr obj)
    // Offset: 0x48642B4
    static bool ovr_LaunchBlockFlowResult_GetDidCancel(::System::IntPtr obj);
    // static public System.String ovr_LaunchDetails_GetDeeplinkMessage(System.IntPtr obj)
    // Offset: 0x4864338
    static ::StringW ovr_LaunchDetails_GetDeeplinkMessage(::System::IntPtr obj);
    // static private System.IntPtr ovr_LaunchDetails_GetDeeplinkMessage_Native(System.IntPtr obj)
    // Offset: 0x4864390
    static ::System::IntPtr ovr_LaunchDetails_GetDeeplinkMessage_Native(::System::IntPtr obj);
    // static public System.String ovr_LaunchDetails_GetDestinationApiName(System.IntPtr obj)
    // Offset: 0x486440C
    static ::StringW ovr_LaunchDetails_GetDestinationApiName(::System::IntPtr obj);
    // static private System.IntPtr ovr_LaunchDetails_GetDestinationApiName_Native(System.IntPtr obj)
    // Offset: 0x4864464
    static ::System::IntPtr ovr_LaunchDetails_GetDestinationApiName_Native(::System::IntPtr obj);
    // static public System.String ovr_LaunchDetails_GetLaunchSource(System.IntPtr obj)
    // Offset: 0x48644E0
    static ::StringW ovr_LaunchDetails_GetLaunchSource(::System::IntPtr obj);
    // static private System.IntPtr ovr_LaunchDetails_GetLaunchSource_Native(System.IntPtr obj)
    // Offset: 0x4864538
    static ::System::IntPtr ovr_LaunchDetails_GetLaunchSource_Native(::System::IntPtr obj);
    // static public Oculus.Platform.LaunchType ovr_LaunchDetails_GetLaunchType(System.IntPtr obj)
    // Offset: 0x48645B4
    static ::Oculus::Platform::LaunchType ovr_LaunchDetails_GetLaunchType(::System::IntPtr obj);
    // static public System.String ovr_LaunchDetails_GetTrackingID(System.IntPtr obj)
    // Offset: 0x4864630
    static ::StringW ovr_LaunchDetails_GetTrackingID(::System::IntPtr obj);
    // static private System.IntPtr ovr_LaunchDetails_GetTrackingID_Native(System.IntPtr obj)
    // Offset: 0x4864688
    static ::System::IntPtr ovr_LaunchDetails_GetTrackingID_Native(::System::IntPtr obj);
    // static public System.IntPtr ovr_LaunchDetails_GetUsers(System.IntPtr obj)
    // Offset: 0x4864704
    static ::System::IntPtr ovr_LaunchDetails_GetUsers(::System::IntPtr obj);
    // static public System.Boolean ovr_LaunchFriendRequestFlowResult_GetDidCancel(System.IntPtr obj)
    // Offset: 0x4864780
    static bool ovr_LaunchFriendRequestFlowResult_GetDidCancel(::System::IntPtr obj);
    // static public System.Boolean ovr_LaunchFriendRequestFlowResult_GetDidSendRequest(System.IntPtr obj)
    // Offset: 0x4864804
    static bool ovr_LaunchFriendRequestFlowResult_GetDidSendRequest(::System::IntPtr obj);
    // static public System.IntPtr ovr_LaunchInvitePanelFlowResult_GetInvitedUsers(System.IntPtr obj)
    // Offset: 0x4864888
    static ::System::IntPtr ovr_LaunchInvitePanelFlowResult_GetInvitedUsers(::System::IntPtr obj);
    // static public System.Boolean ovr_LaunchReportFlowResult_GetDidCancel(System.IntPtr obj)
    // Offset: 0x4864904
    static bool ovr_LaunchReportFlowResult_GetDidCancel(::System::IntPtr obj);
    // static public System.UInt64 ovr_LaunchReportFlowResult_GetUserReportId(System.IntPtr obj)
    // Offset: 0x4864988
    static uint64_t ovr_LaunchReportFlowResult_GetUserReportId(::System::IntPtr obj);
    // static public System.Boolean ovr_LaunchUnblockFlowResult_GetDidCancel(System.IntPtr obj)
    // Offset: 0x4864A04
    static bool ovr_LaunchUnblockFlowResult_GetDidCancel(::System::IntPtr obj);
    // static public System.Boolean ovr_LaunchUnblockFlowResult_GetDidUnblock(System.IntPtr obj)
    // Offset: 0x4864A88
    static bool ovr_LaunchUnblockFlowResult_GetDidUnblock(::System::IntPtr obj);
    // static public System.String ovr_Leaderboard_GetApiName(System.IntPtr obj)
    // Offset: 0x4864B0C
    static ::StringW ovr_Leaderboard_GetApiName(::System::IntPtr obj);
    // static private System.IntPtr ovr_Leaderboard_GetApiName_Native(System.IntPtr obj)
    // Offset: 0x4864B64
    static ::System::IntPtr ovr_Leaderboard_GetApiName_Native(::System::IntPtr obj);
    // static public System.IntPtr ovr_Leaderboard_GetDestination(System.IntPtr obj)
    // Offset: 0x4864BE0
    static ::System::IntPtr ovr_Leaderboard_GetDestination(::System::IntPtr obj);
    // static public System.UInt64 ovr_Leaderboard_GetID(System.IntPtr obj)
    // Offset: 0x4864C5C
    static uint64_t ovr_Leaderboard_GetID(::System::IntPtr obj);
    // static public System.IntPtr ovr_LeaderboardArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x4864CD8
    static ::System::IntPtr ovr_LeaderboardArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index);
    // static public System.String ovr_LeaderboardArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x4864D5C
    static ::StringW ovr_LeaderboardArray_GetNextUrl(::System::IntPtr obj);
    // static private System.IntPtr ovr_LeaderboardArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x4864DB4
    static ::System::IntPtr ovr_LeaderboardArray_GetNextUrl_Native(::System::IntPtr obj);
    // static public System.UIntPtr ovr_LeaderboardArray_GetSize(System.IntPtr obj)
    // Offset: 0x4864E30
    static ::System::UIntPtr ovr_LeaderboardArray_GetSize(::System::IntPtr obj);
    // static public System.Boolean ovr_LeaderboardArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x4864EAC
    static bool ovr_LeaderboardArray_HasNextPage(::System::IntPtr obj);
    // static public System.String ovr_LeaderboardEntry_GetDisplayScore(System.IntPtr obj)
    // Offset: 0x4864F30
    static ::StringW ovr_LeaderboardEntry_GetDisplayScore(::System::IntPtr obj);
    // static private System.IntPtr ovr_LeaderboardEntry_GetDisplayScore_Native(System.IntPtr obj)
    // Offset: 0x4864F88
    static ::System::IntPtr ovr_LeaderboardEntry_GetDisplayScore_Native(::System::IntPtr obj);
    // static public System.Byte[] ovr_LeaderboardEntry_GetExtraData(System.IntPtr obj)
    // Offset: 0x4865004
    static ::ArrayW<uint8_t> ovr_LeaderboardEntry_GetExtraData(::System::IntPtr obj);
    // static private System.IntPtr ovr_LeaderboardEntry_GetExtraData_Native(System.IntPtr obj)
    // Offset: 0x4865070
    static ::System::IntPtr ovr_LeaderboardEntry_GetExtraData_Native(::System::IntPtr obj);
    // static public System.UInt32 ovr_LeaderboardEntry_GetExtraDataLength(System.IntPtr obj)
    // Offset: 0x4862090
    static uint ovr_LeaderboardEntry_GetExtraDataLength(::System::IntPtr obj);
    // static public System.UInt64 ovr_LeaderboardEntry_GetID(System.IntPtr obj)
    // Offset: 0x48650EC
    static uint64_t ovr_LeaderboardEntry_GetID(::System::IntPtr obj);
    // static public System.Int32 ovr_LeaderboardEntry_GetRank(System.IntPtr obj)
    // Offset: 0x4865168
    static int ovr_LeaderboardEntry_GetRank(::System::IntPtr obj);
    // static public System.Int64 ovr_LeaderboardEntry_GetScore(System.IntPtr obj)
    // Offset: 0x48651E4
    static int64_t ovr_LeaderboardEntry_GetScore(::System::IntPtr obj);
    // static public System.IntPtr ovr_LeaderboardEntry_GetSupplementaryMetric(System.IntPtr obj)
    // Offset: 0x4865260
    static ::System::IntPtr ovr_LeaderboardEntry_GetSupplementaryMetric(::System::IntPtr obj);
    // static public System.DateTime ovr_LeaderboardEntry_GetTimestamp(System.IntPtr obj)
    // Offset: 0x48652DC
    static ::System::DateTime ovr_LeaderboardEntry_GetTimestamp(::System::IntPtr obj);
    // static private System.UInt64 ovr_LeaderboardEntry_GetTimestamp_Native(System.IntPtr obj)
    // Offset: 0x4865334
    static uint64_t ovr_LeaderboardEntry_GetTimestamp_Native(::System::IntPtr obj);
    // static public System.IntPtr ovr_LeaderboardEntry_GetUser(System.IntPtr obj)
    // Offset: 0x48653B0
    static ::System::IntPtr ovr_LeaderboardEntry_GetUser(::System::IntPtr obj);
    // static public System.IntPtr ovr_LeaderboardEntryArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x486542C
    static ::System::IntPtr ovr_LeaderboardEntryArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index);
    // static public System.String ovr_LeaderboardEntryArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x48654B0
    static ::StringW ovr_LeaderboardEntryArray_GetNextUrl(::System::IntPtr obj);
    // static private System.IntPtr ovr_LeaderboardEntryArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x4865508
    static ::System::IntPtr ovr_LeaderboardEntryArray_GetNextUrl_Native(::System::IntPtr obj);
    // static public System.String ovr_LeaderboardEntryArray_GetPreviousUrl(System.IntPtr obj)
    // Offset: 0x4865584
    static ::StringW ovr_LeaderboardEntryArray_GetPreviousUrl(::System::IntPtr obj);
    // static private System.IntPtr ovr_LeaderboardEntryArray_GetPreviousUrl_Native(System.IntPtr obj)
    // Offset: 0x48655DC
    static ::System::IntPtr ovr_LeaderboardEntryArray_GetPreviousUrl_Native(::System::IntPtr obj);
    // static public System.UIntPtr ovr_LeaderboardEntryArray_GetSize(System.IntPtr obj)
    // Offset: 0x4865658
    static ::System::UIntPtr ovr_LeaderboardEntryArray_GetSize(::System::IntPtr obj);
    // static public System.UInt64 ovr_LeaderboardEntryArray_GetTotalCount(System.IntPtr obj)
    // Offset: 0x48656D4
    static uint64_t ovr_LeaderboardEntryArray_GetTotalCount(::System::IntPtr obj);
    // static public System.Boolean ovr_LeaderboardEntryArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x4865750
    static bool ovr_LeaderboardEntryArray_HasNextPage(::System::IntPtr obj);
    // static public System.Boolean ovr_LeaderboardEntryArray_HasPreviousPage(System.IntPtr obj)
    // Offset: 0x48657D4
    static bool ovr_LeaderboardEntryArray_HasPreviousPage(::System::IntPtr obj);
    // static public System.Boolean ovr_LeaderboardUpdateStatus_GetDidUpdate(System.IntPtr obj)
    // Offset: 0x4865858
    static bool ovr_LeaderboardUpdateStatus_GetDidUpdate(::System::IntPtr obj);
    // static public System.UInt64 ovr_LeaderboardUpdateStatus_GetUpdatedChallengeId(System.IntPtr obj, System.UInt32 index)
    // Offset: 0x48658DC
    static uint64_t ovr_LeaderboardUpdateStatus_GetUpdatedChallengeId(::System::IntPtr obj, uint index);
    // static public System.UInt32 ovr_LeaderboardUpdateStatus_GetUpdatedChallengeIdsSize(System.IntPtr obj)
    // Offset: 0x4865960
    static uint ovr_LeaderboardUpdateStatus_GetUpdatedChallengeIdsSize(::System::IntPtr obj);
    // static public System.String ovr_LinkedAccount_GetAccessToken(System.IntPtr obj)
    // Offset: 0x48659DC
    static ::StringW ovr_LinkedAccount_GetAccessToken(::System::IntPtr obj);
    // static private System.IntPtr ovr_LinkedAccount_GetAccessToken_Native(System.IntPtr obj)
    // Offset: 0x4865A34
    static ::System::IntPtr ovr_LinkedAccount_GetAccessToken_Native(::System::IntPtr obj);
    // static public Oculus.Platform.ServiceProvider ovr_LinkedAccount_GetServiceProvider(System.IntPtr obj)
    // Offset: 0x4865AB0
    static ::Oculus::Platform::ServiceProvider ovr_LinkedAccount_GetServiceProvider(::System::IntPtr obj);
    // static public System.String ovr_LinkedAccount_GetUserId(System.IntPtr obj)
    // Offset: 0x4865B2C
    static ::StringW ovr_LinkedAccount_GetUserId(::System::IntPtr obj);
    // static private System.IntPtr ovr_LinkedAccount_GetUserId_Native(System.IntPtr obj)
    // Offset: 0x4865B84
    static ::System::IntPtr ovr_LinkedAccount_GetUserId_Native(::System::IntPtr obj);
    // static public System.IntPtr ovr_LinkedAccountArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x4865C00
    static ::System::IntPtr ovr_LinkedAccountArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index);
    // static public System.UIntPtr ovr_LinkedAccountArray_GetSize(System.IntPtr obj)
    // Offset: 0x4865C84
    static ::System::UIntPtr ovr_LinkedAccountArray_GetSize(::System::IntPtr obj);
    // static public System.Boolean ovr_LivestreamingApplicationStatus_GetStreamingEnabled(System.IntPtr obj)
    // Offset: 0x4865D00
    static bool ovr_LivestreamingApplicationStatus_GetStreamingEnabled(::System::IntPtr obj);
    // static public Oculus.Platform.LivestreamingStartStatus ovr_LivestreamingStartResult_GetStreamingResult(System.IntPtr obj)
    // Offset: 0x4865D84
    static ::Oculus::Platform::LivestreamingStartStatus ovr_LivestreamingStartResult_GetStreamingResult(::System::IntPtr obj);
    // static public System.Boolean ovr_LivestreamingStatus_GetCommentsVisible(System.IntPtr obj)
    // Offset: 0x4865E00
    static bool ovr_LivestreamingStatus_GetCommentsVisible(::System::IntPtr obj);
    // static public System.Boolean ovr_LivestreamingStatus_GetIsPaused(System.IntPtr obj)
    // Offset: 0x4865E84
    static bool ovr_LivestreamingStatus_GetIsPaused(::System::IntPtr obj);
    // static public System.Boolean ovr_LivestreamingStatus_GetLivestreamingEnabled(System.IntPtr obj)
    // Offset: 0x4865F08
    static bool ovr_LivestreamingStatus_GetLivestreamingEnabled(::System::IntPtr obj);
    // static public System.Int32 ovr_LivestreamingStatus_GetLivestreamingType(System.IntPtr obj)
    // Offset: 0x4865F8C
    static int ovr_LivestreamingStatus_GetLivestreamingType(::System::IntPtr obj);
    // static public System.Boolean ovr_LivestreamingStatus_GetMicEnabled(System.IntPtr obj)
    // Offset: 0x4866008
    static bool ovr_LivestreamingStatus_GetMicEnabled(::System::IntPtr obj);
    // static public System.Int32 ovr_LivestreamingVideoStats_GetCommentCount(System.IntPtr obj)
    // Offset: 0x486608C
    static int ovr_LivestreamingVideoStats_GetCommentCount(::System::IntPtr obj);
    // static public System.Int32 ovr_LivestreamingVideoStats_GetReactionCount(System.IntPtr obj)
    // Offset: 0x4866108
    static int ovr_LivestreamingVideoStats_GetReactionCount(::System::IntPtr obj);
    // static public System.String ovr_LivestreamingVideoStats_GetTotalViews(System.IntPtr obj)
    // Offset: 0x4866184
    static ::StringW ovr_LivestreamingVideoStats_GetTotalViews(::System::IntPtr obj);
    // static private System.IntPtr ovr_LivestreamingVideoStats_GetTotalViews_Native(System.IntPtr obj)
    // Offset: 0x48661DC
    static ::System::IntPtr ovr_LivestreamingVideoStats_GetTotalViews_Native(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetAbuseReportRecording(System.IntPtr obj)
    // Offset: 0x4866258
    static ::System::IntPtr ovr_Message_GetAbuseReportRecording(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetAchievementDefinitionArray(System.IntPtr obj)
    // Offset: 0x48662D4
    static ::System::IntPtr ovr_Message_GetAchievementDefinitionArray(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetAchievementProgressArray(System.IntPtr obj)
    // Offset: 0x4866350
    static ::System::IntPtr ovr_Message_GetAchievementProgressArray(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetAchievementUpdate(System.IntPtr obj)
    // Offset: 0x48663CC
    static ::System::IntPtr ovr_Message_GetAchievementUpdate(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetAppDownloadProgressResult(System.IntPtr obj)
    // Offset: 0x4866448
    static ::System::IntPtr ovr_Message_GetAppDownloadProgressResult(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetAppDownloadResult(System.IntPtr obj)
    // Offset: 0x48664C4
    static ::System::IntPtr ovr_Message_GetAppDownloadResult(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetApplicationInviteArray(System.IntPtr obj)
    // Offset: 0x4866540
    static ::System::IntPtr ovr_Message_GetApplicationInviteArray(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetApplicationVersion(System.IntPtr obj)
    // Offset: 0x48665BC
    static ::System::IntPtr ovr_Message_GetApplicationVersion(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetAssetDetails(System.IntPtr obj)
    // Offset: 0x4866638
    static ::System::IntPtr ovr_Message_GetAssetDetails(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetAssetDetailsArray(System.IntPtr obj)
    // Offset: 0x48666B4
    static ::System::IntPtr ovr_Message_GetAssetDetailsArray(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetAssetFileDeleteResult(System.IntPtr obj)
    // Offset: 0x4866730
    static ::System::IntPtr ovr_Message_GetAssetFileDeleteResult(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetAssetFileDownloadCancelResult(System.IntPtr obj)
    // Offset: 0x48667AC
    static ::System::IntPtr ovr_Message_GetAssetFileDownloadCancelResult(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetAssetFileDownloadResult(System.IntPtr obj)
    // Offset: 0x4866828
    static ::System::IntPtr ovr_Message_GetAssetFileDownloadResult(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetAssetFileDownloadUpdate(System.IntPtr obj)
    // Offset: 0x48668A4
    static ::System::IntPtr ovr_Message_GetAssetFileDownloadUpdate(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetAvatarEditorResult(System.IntPtr obj)
    // Offset: 0x4866920
    static ::System::IntPtr ovr_Message_GetAvatarEditorResult(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetBlockedUserArray(System.IntPtr obj)
    // Offset: 0x486699C
    static ::System::IntPtr ovr_Message_GetBlockedUserArray(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetChallenge(System.IntPtr obj)
    // Offset: 0x4866A18
    static ::System::IntPtr ovr_Message_GetChallenge(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetChallengeArray(System.IntPtr obj)
    // Offset: 0x4866A94
    static ::System::IntPtr ovr_Message_GetChallengeArray(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetChallengeEntryArray(System.IntPtr obj)
    // Offset: 0x4866B10
    static ::System::IntPtr ovr_Message_GetChallengeEntryArray(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetDataStore(System.IntPtr obj)
    // Offset: 0x4866B8C
    static ::System::IntPtr ovr_Message_GetDataStore(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetDestinationArray(System.IntPtr obj)
    // Offset: 0x4866C08
    static ::System::IntPtr ovr_Message_GetDestinationArray(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetError(System.IntPtr obj)
    // Offset: 0x4866C84
    static ::System::IntPtr ovr_Message_GetError(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetGroupPresenceJoinIntent(System.IntPtr obj)
    // Offset: 0x4866D00
    static ::System::IntPtr ovr_Message_GetGroupPresenceJoinIntent(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetGroupPresenceLeaveIntent(System.IntPtr obj)
    // Offset: 0x4866D7C
    static ::System::IntPtr ovr_Message_GetGroupPresenceLeaveIntent(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetHttpTransferUpdate(System.IntPtr obj)
    // Offset: 0x4866DF8
    static ::System::IntPtr ovr_Message_GetHttpTransferUpdate(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetInstalledApplicationArray(System.IntPtr obj)
    // Offset: 0x4866E74
    static ::System::IntPtr ovr_Message_GetInstalledApplicationArray(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetInvitePanelResultInfo(System.IntPtr obj)
    // Offset: 0x4866EF0
    static ::System::IntPtr ovr_Message_GetInvitePanelResultInfo(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetLaunchBlockFlowResult(System.IntPtr obj)
    // Offset: 0x4866F6C
    static ::System::IntPtr ovr_Message_GetLaunchBlockFlowResult(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetLaunchFriendRequestFlowResult(System.IntPtr obj)
    // Offset: 0x4866FE8
    static ::System::IntPtr ovr_Message_GetLaunchFriendRequestFlowResult(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetLaunchInvitePanelFlowResult(System.IntPtr obj)
    // Offset: 0x4867064
    static ::System::IntPtr ovr_Message_GetLaunchInvitePanelFlowResult(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetLaunchReportFlowResult(System.IntPtr obj)
    // Offset: 0x48670E0
    static ::System::IntPtr ovr_Message_GetLaunchReportFlowResult(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetLaunchUnblockFlowResult(System.IntPtr obj)
    // Offset: 0x486715C
    static ::System::IntPtr ovr_Message_GetLaunchUnblockFlowResult(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetLeaderboardArray(System.IntPtr obj)
    // Offset: 0x48671D8
    static ::System::IntPtr ovr_Message_GetLeaderboardArray(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetLeaderboardEntryArray(System.IntPtr obj)
    // Offset: 0x4867254
    static ::System::IntPtr ovr_Message_GetLeaderboardEntryArray(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetLeaderboardUpdateStatus(System.IntPtr obj)
    // Offset: 0x48672D0
    static ::System::IntPtr ovr_Message_GetLeaderboardUpdateStatus(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetLinkedAccountArray(System.IntPtr obj)
    // Offset: 0x486734C
    static ::System::IntPtr ovr_Message_GetLinkedAccountArray(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetLivestreamingApplicationStatus(System.IntPtr obj)
    // Offset: 0x48673C8
    static ::System::IntPtr ovr_Message_GetLivestreamingApplicationStatus(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetLivestreamingStartResult(System.IntPtr obj)
    // Offset: 0x4867444
    static ::System::IntPtr ovr_Message_GetLivestreamingStartResult(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetLivestreamingStatus(System.IntPtr obj)
    // Offset: 0x48674C0
    static ::System::IntPtr ovr_Message_GetLivestreamingStatus(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetLivestreamingVideoStats(System.IntPtr obj)
    // Offset: 0x486753C
    static ::System::IntPtr ovr_Message_GetLivestreamingVideoStats(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetMicrophoneAvailabilityState(System.IntPtr obj)
    // Offset: 0x48675B8
    static ::System::IntPtr ovr_Message_GetMicrophoneAvailabilityState(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetNativeMessage(System.IntPtr obj)
    // Offset: 0x4867634
    static ::System::IntPtr ovr_Message_GetNativeMessage(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetNetSyncConnection(System.IntPtr obj)
    // Offset: 0x48676B0
    static ::System::IntPtr ovr_Message_GetNetSyncConnection(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetNetSyncSessionArray(System.IntPtr obj)
    // Offset: 0x486772C
    static ::System::IntPtr ovr_Message_GetNetSyncSessionArray(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetNetSyncSessionsChangedNotification(System.IntPtr obj)
    // Offset: 0x48677A8
    static ::System::IntPtr ovr_Message_GetNetSyncSessionsChangedNotification(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetNetSyncSetSessionPropertyResult(System.IntPtr obj)
    // Offset: 0x4867824
    static ::System::IntPtr ovr_Message_GetNetSyncSetSessionPropertyResult(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetNetSyncVoipAttenuationValueArray(System.IntPtr obj)
    // Offset: 0x48678A0
    static ::System::IntPtr ovr_Message_GetNetSyncVoipAttenuationValueArray(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetOrgScopedID(System.IntPtr obj)
    // Offset: 0x486791C
    static ::System::IntPtr ovr_Message_GetOrgScopedID(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetParty(System.IntPtr obj)
    // Offset: 0x4867998
    static ::System::IntPtr ovr_Message_GetParty(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetPartyID(System.IntPtr obj)
    // Offset: 0x4867A14
    static ::System::IntPtr ovr_Message_GetPartyID(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetPartyUpdateNotification(System.IntPtr obj)
    // Offset: 0x4867A90
    static ::System::IntPtr ovr_Message_GetPartyUpdateNotification(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetPidArray(System.IntPtr obj)
    // Offset: 0x4867B0C
    static ::System::IntPtr ovr_Message_GetPidArray(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetPlatformInitialize(System.IntPtr obj)
    // Offset: 0x4867B88
    static ::System::IntPtr ovr_Message_GetPlatformInitialize(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetProductArray(System.IntPtr obj)
    // Offset: 0x4867C04
    static ::System::IntPtr ovr_Message_GetProductArray(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetPurchase(System.IntPtr obj)
    // Offset: 0x4867C80
    static ::System::IntPtr ovr_Message_GetPurchase(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetPurchaseArray(System.IntPtr obj)
    // Offset: 0x4867CFC
    static ::System::IntPtr ovr_Message_GetPurchaseArray(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetRejoinDialogResult(System.IntPtr obj)
    // Offset: 0x4867D78
    static ::System::IntPtr ovr_Message_GetRejoinDialogResult(::System::IntPtr obj);
    // static public System.UInt64 ovr_Message_GetRequestID(System.IntPtr obj)
    // Offset: 0x4867DF4
    static uint64_t ovr_Message_GetRequestID(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetSdkAccountArray(System.IntPtr obj)
    // Offset: 0x4867E70
    static ::System::IntPtr ovr_Message_GetSdkAccountArray(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetSendInvitesResult(System.IntPtr obj)
    // Offset: 0x4867EEC
    static ::System::IntPtr ovr_Message_GetSendInvitesResult(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetShareMediaResult(System.IntPtr obj)
    // Offset: 0x4867F68
    static ::System::IntPtr ovr_Message_GetShareMediaResult(::System::IntPtr obj);
    // static public System.String ovr_Message_GetString(System.IntPtr obj)
    // Offset: 0x4867FE4
    static ::StringW ovr_Message_GetString(::System::IntPtr obj);
    // static private System.IntPtr ovr_Message_GetString_Native(System.IntPtr obj)
    // Offset: 0x486803C
    static ::System::IntPtr ovr_Message_GetString_Native(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetSystemVoipState(System.IntPtr obj)
    // Offset: 0x48680B8
    static ::System::IntPtr ovr_Message_GetSystemVoipState(::System::IntPtr obj);
    // static public Oculus.Platform.Message/MessageType ovr_Message_GetType(System.IntPtr obj)
    // Offset: 0x4868134
    static ::Oculus::Platform::Message::MessageType ovr_Message_GetType(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetUser(System.IntPtr obj)
    // Offset: 0x48681B0
    static ::System::IntPtr ovr_Message_GetUser(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetUserAccountAgeCategory(System.IntPtr obj)
    // Offset: 0x486822C
    static ::System::IntPtr ovr_Message_GetUserAccountAgeCategory(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetUserArray(System.IntPtr obj)
    // Offset: 0x48682A8
    static ::System::IntPtr ovr_Message_GetUserArray(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetUserCapabilityArray(System.IntPtr obj)
    // Offset: 0x4868324
    static ::System::IntPtr ovr_Message_GetUserCapabilityArray(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetUserDataStoreUpdateResponse(System.IntPtr obj)
    // Offset: 0x48683A0
    static ::System::IntPtr ovr_Message_GetUserDataStoreUpdateResponse(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetUserProof(System.IntPtr obj)
    // Offset: 0x486841C
    static ::System::IntPtr ovr_Message_GetUserProof(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetUserReportID(System.IntPtr obj)
    // Offset: 0x4868498
    static ::System::IntPtr ovr_Message_GetUserReportID(::System::IntPtr obj);
    // static public System.Boolean ovr_Message_IsError(System.IntPtr obj)
    // Offset: 0x4868514
    static bool ovr_Message_IsError(::System::IntPtr obj);
    // static public System.UIntPtr ovr_Microphone_GetNumSamplesAvailable(System.IntPtr obj)
    // Offset: 0x4868598
    static ::System::UIntPtr ovr_Microphone_GetNumSamplesAvailable(::System::IntPtr obj);
    // static public System.UIntPtr ovr_Microphone_GetOutputBufferMaxSize(System.IntPtr obj)
    // Offset: 0x4868614
    static ::System::UIntPtr ovr_Microphone_GetOutputBufferMaxSize(::System::IntPtr obj);
    // static public System.UIntPtr ovr_Microphone_GetPCM(System.IntPtr obj, System.Int16[] outputBuffer, System.UIntPtr outputBufferNumElements)
    // Offset: 0x4868690
    static ::System::UIntPtr ovr_Microphone_GetPCM(::System::IntPtr obj, ::ArrayW<int16_t> outputBuffer, ::System::UIntPtr outputBufferNumElements);
    // static public System.UIntPtr ovr_Microphone_GetPCMFloat(System.IntPtr obj, System.Single[] outputBuffer, System.UIntPtr outputBufferNumElements)
    // Offset: 0x486872C
    static ::System::UIntPtr ovr_Microphone_GetPCMFloat(::System::IntPtr obj, ::ArrayW<float> outputBuffer, ::System::UIntPtr outputBufferNumElements);
    // static public System.UIntPtr ovr_Microphone_ReadData(System.IntPtr obj, System.Single[] outputBuffer, System.UIntPtr outputBufferSize)
    // Offset: 0x48687C8
    static ::System::UIntPtr ovr_Microphone_ReadData(::System::IntPtr obj, ::ArrayW<float> outputBuffer, ::System::UIntPtr outputBufferSize);
    // static public System.Void ovr_Microphone_SetAcceptableRecordingDelayHint(System.IntPtr obj, System.UIntPtr delayMs)
    // Offset: 0x4868864
    static void ovr_Microphone_SetAcceptableRecordingDelayHint(::System::IntPtr obj, ::System::UIntPtr delayMs);
    // static public System.Void ovr_Microphone_Start(System.IntPtr obj)
    // Offset: 0x48688E8
    static void ovr_Microphone_Start(::System::IntPtr obj);
    // static public System.Void ovr_Microphone_Stop(System.IntPtr obj)
    // Offset: 0x4868964
    static void ovr_Microphone_Stop(::System::IntPtr obj);
    // static public System.Boolean ovr_MicrophoneAvailabilityState_GetMicrophoneAvailable(System.IntPtr obj)
    // Offset: 0x48689E0
    static bool ovr_MicrophoneAvailabilityState_GetMicrophoneAvailable(::System::IntPtr obj);
    // static public System.Int64 ovr_NetSyncConnection_GetConnectionId(System.IntPtr obj)
    // Offset: 0x4868A64
    static int64_t ovr_NetSyncConnection_GetConnectionId(::System::IntPtr obj);
    // static public Oculus.Platform.NetSyncDisconnectReason ovr_NetSyncConnection_GetDisconnectReason(System.IntPtr obj)
    // Offset: 0x4868AE0
    static ::Oculus::Platform::NetSyncDisconnectReason ovr_NetSyncConnection_GetDisconnectReason(::System::IntPtr obj);
    // static public System.UInt64 ovr_NetSyncConnection_GetSessionId(System.IntPtr obj)
    // Offset: 0x4868B5C
    static uint64_t ovr_NetSyncConnection_GetSessionId(::System::IntPtr obj);
    // static public Oculus.Platform.NetSyncConnectionStatus ovr_NetSyncConnection_GetStatus(System.IntPtr obj)
    // Offset: 0x4868BD8
    static ::Oculus::Platform::NetSyncConnectionStatus ovr_NetSyncConnection_GetStatus(::System::IntPtr obj);
    // static public System.String ovr_NetSyncConnection_GetZoneId(System.IntPtr obj)
    // Offset: 0x4868C54
    static ::StringW ovr_NetSyncConnection_GetZoneId(::System::IntPtr obj);
    // static private System.IntPtr ovr_NetSyncConnection_GetZoneId_Native(System.IntPtr obj)
    // Offset: 0x4868CAC
    static ::System::IntPtr ovr_NetSyncConnection_GetZoneId_Native(::System::IntPtr obj);
    // static public System.Int64 ovr_NetSyncSession_GetConnectionId(System.IntPtr obj)
    // Offset: 0x4868D28
    static int64_t ovr_NetSyncSession_GetConnectionId(::System::IntPtr obj);
    // static public System.Boolean ovr_NetSyncSession_GetMuted(System.IntPtr obj)
    // Offset: 0x4868DA4
    static bool ovr_NetSyncSession_GetMuted(::System::IntPtr obj);
    // static public System.UInt64 ovr_NetSyncSession_GetSessionId(System.IntPtr obj)
    // Offset: 0x4868E28
    static uint64_t ovr_NetSyncSession_GetSessionId(::System::IntPtr obj);
    // static public System.UInt64 ovr_NetSyncSession_GetUserId(System.IntPtr obj)
    // Offset: 0x4868EA4
    static uint64_t ovr_NetSyncSession_GetUserId(::System::IntPtr obj);
    // static public System.String ovr_NetSyncSession_GetVoipGroup(System.IntPtr obj)
    // Offset: 0x4868F20
    static ::StringW ovr_NetSyncSession_GetVoipGroup(::System::IntPtr obj);
    // static private System.IntPtr ovr_NetSyncSession_GetVoipGroup_Native(System.IntPtr obj)
    // Offset: 0x4868F78
    static ::System::IntPtr ovr_NetSyncSession_GetVoipGroup_Native(::System::IntPtr obj);
    // static public System.IntPtr ovr_NetSyncSessionArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x4868FF4
    static ::System::IntPtr ovr_NetSyncSessionArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index);
    // static public System.UIntPtr ovr_NetSyncSessionArray_GetSize(System.IntPtr obj)
    // Offset: 0x4869078
    static ::System::UIntPtr ovr_NetSyncSessionArray_GetSize(::System::IntPtr obj);
    // static public System.Int64 ovr_NetSyncSessionsChangedNotification_GetConnectionId(System.IntPtr obj)
    // Offset: 0x48690F4
    static int64_t ovr_NetSyncSessionsChangedNotification_GetConnectionId(::System::IntPtr obj);
    // static public System.IntPtr ovr_NetSyncSessionsChangedNotification_GetSessions(System.IntPtr obj)
    // Offset: 0x4869170
    static ::System::IntPtr ovr_NetSyncSessionsChangedNotification_GetSessions(::System::IntPtr obj);
    // static public System.IntPtr ovr_NetSyncSetSessionPropertyResult_GetSession(System.IntPtr obj)
    // Offset: 0x48691EC
    static ::System::IntPtr ovr_NetSyncSetSessionPropertyResult_GetSession(::System::IntPtr obj);
    // static public System.Single ovr_NetSyncVoipAttenuationValue_GetDecibels(System.IntPtr obj)
    // Offset: 0x4869268
    static float ovr_NetSyncVoipAttenuationValue_GetDecibels(::System::IntPtr obj);
    // static public System.Single ovr_NetSyncVoipAttenuationValue_GetDistance(System.IntPtr obj)
    // Offset: 0x48692E4
    static float ovr_NetSyncVoipAttenuationValue_GetDistance(::System::IntPtr obj);
    // static public System.IntPtr ovr_NetSyncVoipAttenuationValueArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x4869360
    static ::System::IntPtr ovr_NetSyncVoipAttenuationValueArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index);
    // static public System.UIntPtr ovr_NetSyncVoipAttenuationValueArray_GetSize(System.IntPtr obj)
    // Offset: 0x48693E4
    static ::System::UIntPtr ovr_NetSyncVoipAttenuationValueArray_GetSize(::System::IntPtr obj);
    // static public System.UInt64 ovr_OrgScopedID_GetID(System.IntPtr obj)
    // Offset: 0x4869460
    static uint64_t ovr_OrgScopedID_GetID(::System::IntPtr obj);
    // static public System.Void ovr_Packet_Free(System.IntPtr obj)
    // Offset: 0x48694DC
    static void ovr_Packet_Free(::System::IntPtr obj);
    // static public System.IntPtr ovr_Packet_GetBytes(System.IntPtr obj)
    // Offset: 0x4869558
    static ::System::IntPtr ovr_Packet_GetBytes(::System::IntPtr obj);
    // static public System.UInt64 ovr_Packet_GetSenderID(System.IntPtr obj)
    // Offset: 0x48695D4
    static uint64_t ovr_Packet_GetSenderID(::System::IntPtr obj);
    // static public System.UIntPtr ovr_Packet_GetSize(System.IntPtr obj)
    // Offset: 0x4869650
    static ::System::UIntPtr ovr_Packet_GetSize(::System::IntPtr obj);
    // static public System.UInt64 ovr_Party_GetID(System.IntPtr obj)
    // Offset: 0x48696CC
    static uint64_t ovr_Party_GetID(::System::IntPtr obj);
    // static public System.IntPtr ovr_Party_GetInvitedUsers(System.IntPtr obj)
    // Offset: 0x4869748
    static ::System::IntPtr ovr_Party_GetInvitedUsers(::System::IntPtr obj);
    // static public System.IntPtr ovr_Party_GetLeader(System.IntPtr obj)
    // Offset: 0x48697C4
    static ::System::IntPtr ovr_Party_GetLeader(::System::IntPtr obj);
    // static public System.IntPtr ovr_Party_GetUsers(System.IntPtr obj)
    // Offset: 0x4869840
    static ::System::IntPtr ovr_Party_GetUsers(::System::IntPtr obj);
    // static public System.UInt64 ovr_PartyID_GetID(System.IntPtr obj)
    // Offset: 0x48698BC
    static uint64_t ovr_PartyID_GetID(::System::IntPtr obj);
    // static public Oculus.Platform.PartyUpdateAction ovr_PartyUpdateNotification_GetAction(System.IntPtr obj)
    // Offset: 0x4869934
    static ::Oculus::Platform::PartyUpdateAction ovr_PartyUpdateNotification_GetAction(::System::IntPtr obj);
    // static public System.UInt64 ovr_PartyUpdateNotification_GetPartyId(System.IntPtr obj)
    // Offset: 0x48699B0
    static uint64_t ovr_PartyUpdateNotification_GetPartyId(::System::IntPtr obj);
    // static public System.UInt64 ovr_PartyUpdateNotification_GetSenderId(System.IntPtr obj)
    // Offset: 0x4869A2C
    static uint64_t ovr_PartyUpdateNotification_GetSenderId(::System::IntPtr obj);
    // static public System.String ovr_PartyUpdateNotification_GetUpdateTimestamp(System.IntPtr obj)
    // Offset: 0x4869AA8
    static ::StringW ovr_PartyUpdateNotification_GetUpdateTimestamp(::System::IntPtr obj);
    // static private System.IntPtr ovr_PartyUpdateNotification_GetUpdateTimestamp_Native(System.IntPtr obj)
    // Offset: 0x4869B00
    static ::System::IntPtr ovr_PartyUpdateNotification_GetUpdateTimestamp_Native(::System::IntPtr obj);
    // static public System.String ovr_PartyUpdateNotification_GetUserAlias(System.IntPtr obj)
    // Offset: 0x4869B7C
    static ::StringW ovr_PartyUpdateNotification_GetUserAlias(::System::IntPtr obj);
    // static private System.IntPtr ovr_PartyUpdateNotification_GetUserAlias_Native(System.IntPtr obj)
    // Offset: 0x4869BD4
    static ::System::IntPtr ovr_PartyUpdateNotification_GetUserAlias_Native(::System::IntPtr obj);
    // static public System.UInt64 ovr_PartyUpdateNotification_GetUserId(System.IntPtr obj)
    // Offset: 0x4869C50
    static uint64_t ovr_PartyUpdateNotification_GetUserId(::System::IntPtr obj);
    // static public System.String ovr_PartyUpdateNotification_GetUserName(System.IntPtr obj)
    // Offset: 0x4869CCC
    static ::StringW ovr_PartyUpdateNotification_GetUserName(::System::IntPtr obj);
    // static private System.IntPtr ovr_PartyUpdateNotification_GetUserName_Native(System.IntPtr obj)
    // Offset: 0x4869D24
    static ::System::IntPtr ovr_PartyUpdateNotification_GetUserName_Native(::System::IntPtr obj);
    // static public System.String ovr_Pid_GetId(System.IntPtr obj)
    // Offset: 0x4869DA0
    static ::StringW ovr_Pid_GetId(::System::IntPtr obj);
    // static private System.IntPtr ovr_Pid_GetId_Native(System.IntPtr obj)
    // Offset: 0x4869DF8
    static ::System::IntPtr ovr_Pid_GetId_Native(::System::IntPtr obj);
    // static public System.IntPtr ovr_PidArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x4869E74
    static ::System::IntPtr ovr_PidArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index);
    // static public System.UIntPtr ovr_PidArray_GetSize(System.IntPtr obj)
    // Offset: 0x4869EF8
    static ::System::UIntPtr ovr_PidArray_GetSize(::System::IntPtr obj);
    // static public Oculus.Platform.PlatformInitializeResult ovr_PlatformInitialize_GetResult(System.IntPtr obj)
    // Offset: 0x4869F74
    static ::Oculus::Platform::PlatformInitializeResult ovr_PlatformInitialize_GetResult(::System::IntPtr obj);
    // static public System.UInt32 ovr_Price_GetAmountInHundredths(System.IntPtr obj)
    // Offset: 0x4869FF0
    static uint ovr_Price_GetAmountInHundredths(::System::IntPtr obj);
    // static public System.String ovr_Price_GetCurrency(System.IntPtr obj)
    // Offset: 0x486A06C
    static ::StringW ovr_Price_GetCurrency(::System::IntPtr obj);
    // static private System.IntPtr ovr_Price_GetCurrency_Native(System.IntPtr obj)
    // Offset: 0x486A0C4
    static ::System::IntPtr ovr_Price_GetCurrency_Native(::System::IntPtr obj);
    // static public System.String ovr_Price_GetFormatted(System.IntPtr obj)
    // Offset: 0x486A140
    static ::StringW ovr_Price_GetFormatted(::System::IntPtr obj);
    // static private System.IntPtr ovr_Price_GetFormatted_Native(System.IntPtr obj)
    // Offset: 0x486A198
    static ::System::IntPtr ovr_Price_GetFormatted_Native(::System::IntPtr obj);
    // static public System.String ovr_Product_GetDescription(System.IntPtr obj)
    // Offset: 0x486A214
    static ::StringW ovr_Product_GetDescription(::System::IntPtr obj);
    // static private System.IntPtr ovr_Product_GetDescription_Native(System.IntPtr obj)
    // Offset: 0x486A26C
    static ::System::IntPtr ovr_Product_GetDescription_Native(::System::IntPtr obj);
    // static public System.String ovr_Product_GetFormattedPrice(System.IntPtr obj)
    // Offset: 0x486A2E8
    static ::StringW ovr_Product_GetFormattedPrice(::System::IntPtr obj);
    // static private System.IntPtr ovr_Product_GetFormattedPrice_Native(System.IntPtr obj)
    // Offset: 0x486A340
    static ::System::IntPtr ovr_Product_GetFormattedPrice_Native(::System::IntPtr obj);
    // static public System.String ovr_Product_GetName(System.IntPtr obj)
    // Offset: 0x486A3BC
    static ::StringW ovr_Product_GetName(::System::IntPtr obj);
    // static private System.IntPtr ovr_Product_GetName_Native(System.IntPtr obj)
    // Offset: 0x486A414
    static ::System::IntPtr ovr_Product_GetName_Native(::System::IntPtr obj);
    // static public System.String ovr_Product_GetSKU(System.IntPtr obj)
    // Offset: 0x486A490
    static ::StringW ovr_Product_GetSKU(::System::IntPtr obj);
    // static private System.IntPtr ovr_Product_GetSKU_Native(System.IntPtr obj)
    // Offset: 0x486A4E8
    static ::System::IntPtr ovr_Product_GetSKU_Native(::System::IntPtr obj);
    // static public System.IntPtr ovr_ProductArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x486A564
    static ::System::IntPtr ovr_ProductArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index);
    // static public System.String ovr_ProductArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x486A5E8
    static ::StringW ovr_ProductArray_GetNextUrl(::System::IntPtr obj);
    // static private System.IntPtr ovr_ProductArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x486A640
    static ::System::IntPtr ovr_ProductArray_GetNextUrl_Native(::System::IntPtr obj);
    // static public System.UIntPtr ovr_ProductArray_GetSize(System.IntPtr obj)
    // Offset: 0x486A6BC
    static ::System::UIntPtr ovr_ProductArray_GetSize(::System::IntPtr obj);
    // static public System.Boolean ovr_ProductArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x486A738
    static bool ovr_ProductArray_HasNextPage(::System::IntPtr obj);
    // static public System.String ovr_Purchase_GetDeveloperPayload(System.IntPtr obj)
    // Offset: 0x486A7BC
    static ::StringW ovr_Purchase_GetDeveloperPayload(::System::IntPtr obj);
    // static private System.IntPtr ovr_Purchase_GetDeveloperPayload_Native(System.IntPtr obj)
    // Offset: 0x486A814
    static ::System::IntPtr ovr_Purchase_GetDeveloperPayload_Native(::System::IntPtr obj);
    // static public System.DateTime ovr_Purchase_GetExpirationTime(System.IntPtr obj)
    // Offset: 0x486A890
    static ::System::DateTime ovr_Purchase_GetExpirationTime(::System::IntPtr obj);
    // static private System.UInt64 ovr_Purchase_GetExpirationTime_Native(System.IntPtr obj)
    // Offset: 0x486A8E8
    static uint64_t ovr_Purchase_GetExpirationTime_Native(::System::IntPtr obj);
    // static public System.DateTime ovr_Purchase_GetGrantTime(System.IntPtr obj)
    // Offset: 0x486A964
    static ::System::DateTime ovr_Purchase_GetGrantTime(::System::IntPtr obj);
    // static private System.UInt64 ovr_Purchase_GetGrantTime_Native(System.IntPtr obj)
    // Offset: 0x486A9BC
    static uint64_t ovr_Purchase_GetGrantTime_Native(::System::IntPtr obj);
    // static public System.UInt64 ovr_Purchase_GetPurchaseID(System.IntPtr obj)
    // Offset: 0x486AA38
    static uint64_t ovr_Purchase_GetPurchaseID(::System::IntPtr obj);
    // static public System.String ovr_Purchase_GetPurchaseStrID(System.IntPtr obj)
    // Offset: 0x486AAB4
    static ::StringW ovr_Purchase_GetPurchaseStrID(::System::IntPtr obj);
    // static private System.IntPtr ovr_Purchase_GetPurchaseStrID_Native(System.IntPtr obj)
    // Offset: 0x486AB0C
    static ::System::IntPtr ovr_Purchase_GetPurchaseStrID_Native(::System::IntPtr obj);
    // static public System.String ovr_Purchase_GetReportingId(System.IntPtr obj)
    // Offset: 0x486AB88
    static ::StringW ovr_Purchase_GetReportingId(::System::IntPtr obj);
    // static private System.IntPtr ovr_Purchase_GetReportingId_Native(System.IntPtr obj)
    // Offset: 0x486ABE0
    static ::System::IntPtr ovr_Purchase_GetReportingId_Native(::System::IntPtr obj);
    // static public System.String ovr_Purchase_GetSKU(System.IntPtr obj)
    // Offset: 0x486AC5C
    static ::StringW ovr_Purchase_GetSKU(::System::IntPtr obj);
    // static private System.IntPtr ovr_Purchase_GetSKU_Native(System.IntPtr obj)
    // Offset: 0x486ACB4
    static ::System::IntPtr ovr_Purchase_GetSKU_Native(::System::IntPtr obj);
    // static public System.IntPtr ovr_PurchaseArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x486AD30
    static ::System::IntPtr ovr_PurchaseArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index);
    // static public System.String ovr_PurchaseArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x486ADB4
    static ::StringW ovr_PurchaseArray_GetNextUrl(::System::IntPtr obj);
    // static private System.IntPtr ovr_PurchaseArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x486AE0C
    static ::System::IntPtr ovr_PurchaseArray_GetNextUrl_Native(::System::IntPtr obj);
    // static public System.UIntPtr ovr_PurchaseArray_GetSize(System.IntPtr obj)
    // Offset: 0x486AE88
    static ::System::UIntPtr ovr_PurchaseArray_GetSize(::System::IntPtr obj);
    // static public System.Boolean ovr_PurchaseArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x486AF04
    static bool ovr_PurchaseArray_HasNextPage(::System::IntPtr obj);
    // static public System.Boolean ovr_RejoinDialogResult_GetRejoinSelected(System.IntPtr obj)
    // Offset: 0x486AF88
    static bool ovr_RejoinDialogResult_GetRejoinSelected(::System::IntPtr obj);
    // static public Oculus.Platform.SdkAccountType ovr_SdkAccount_GetAccountType(System.IntPtr obj)
    // Offset: 0x486B00C
    static ::Oculus::Platform::SdkAccountType ovr_SdkAccount_GetAccountType(::System::IntPtr obj);
    // static public System.UInt64 ovr_SdkAccount_GetUserId(System.IntPtr obj)
    // Offset: 0x486B088
    static uint64_t ovr_SdkAccount_GetUserId(::System::IntPtr obj);
    // static public System.IntPtr ovr_SdkAccountArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x486B104
    static ::System::IntPtr ovr_SdkAccountArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index);
    // static public System.UIntPtr ovr_SdkAccountArray_GetSize(System.IntPtr obj)
    // Offset: 0x486B188
    static ::System::UIntPtr ovr_SdkAccountArray_GetSize(::System::IntPtr obj);
    // static public System.IntPtr ovr_SendInvitesResult_GetInvites(System.IntPtr obj)
    // Offset: 0x486B204
    static ::System::IntPtr ovr_SendInvitesResult_GetInvites(::System::IntPtr obj);
    // static public Oculus.Platform.ShareMediaStatus ovr_ShareMediaResult_GetStatus(System.IntPtr obj)
    // Offset: 0x486B280
    static ::Oculus::Platform::ShareMediaStatus ovr_ShareMediaResult_GetStatus(::System::IntPtr obj);
    // static public System.UInt64 ovr_SupplementaryMetric_GetID(System.IntPtr obj)
    // Offset: 0x486B2FC
    static uint64_t ovr_SupplementaryMetric_GetID(::System::IntPtr obj);
    // static public System.Int64 ovr_SupplementaryMetric_GetMetric(System.IntPtr obj)
    // Offset: 0x486B378
    static int64_t ovr_SupplementaryMetric_GetMetric(::System::IntPtr obj);
    // static public Oculus.Platform.VoipMuteState ovr_SystemVoipState_GetMicrophoneMuted(System.IntPtr obj)
    // Offset: 0x486B3F4
    static ::Oculus::Platform::VoipMuteState ovr_SystemVoipState_GetMicrophoneMuted(::System::IntPtr obj);
    // static public Oculus.Platform.SystemVoipStatus ovr_SystemVoipState_GetStatus(System.IntPtr obj)
    // Offset: 0x486B470
    static ::Oculus::Platform::SystemVoipStatus ovr_SystemVoipState_GetStatus(::System::IntPtr obj);
    // static public System.String ovr_TestUser_GetAccessToken(System.IntPtr obj)
    // Offset: 0x486B4EC
    static ::StringW ovr_TestUser_GetAccessToken(::System::IntPtr obj);
    // static private System.IntPtr ovr_TestUser_GetAccessToken_Native(System.IntPtr obj)
    // Offset: 0x486B544
    static ::System::IntPtr ovr_TestUser_GetAccessToken_Native(::System::IntPtr obj);
    // static public System.IntPtr ovr_TestUser_GetAppAccessArray(System.IntPtr obj)
    // Offset: 0x486B5C0
    static ::System::IntPtr ovr_TestUser_GetAppAccessArray(::System::IntPtr obj);
    // static public System.IntPtr ovr_TestUser_GetFbAppAccessArray(System.IntPtr obj)
    // Offset: 0x486B63C
    static ::System::IntPtr ovr_TestUser_GetFbAppAccessArray(::System::IntPtr obj);
    // static public System.String ovr_TestUser_GetFriendAccessToken(System.IntPtr obj)
    // Offset: 0x486B6B8
    static ::StringW ovr_TestUser_GetFriendAccessToken(::System::IntPtr obj);
    // static private System.IntPtr ovr_TestUser_GetFriendAccessToken_Native(System.IntPtr obj)
    // Offset: 0x486B710
    static ::System::IntPtr ovr_TestUser_GetFriendAccessToken_Native(::System::IntPtr obj);
    // static public System.IntPtr ovr_TestUser_GetFriendAppAccessArray(System.IntPtr obj)
    // Offset: 0x486B78C
    static ::System::IntPtr ovr_TestUser_GetFriendAppAccessArray(::System::IntPtr obj);
    // static public System.String ovr_TestUser_GetUserAlias(System.IntPtr obj)
    // Offset: 0x486B808
    static ::StringW ovr_TestUser_GetUserAlias(::System::IntPtr obj);
    // static private System.IntPtr ovr_TestUser_GetUserAlias_Native(System.IntPtr obj)
    // Offset: 0x486B860
    static ::System::IntPtr ovr_TestUser_GetUserAlias_Native(::System::IntPtr obj);
    // static public System.UInt64 ovr_TestUser_GetUserFbid(System.IntPtr obj)
    // Offset: 0x486B8DC
    static uint64_t ovr_TestUser_GetUserFbid(::System::IntPtr obj);
    // static public System.UInt64 ovr_TestUser_GetUserId(System.IntPtr obj)
    // Offset: 0x486B958
    static uint64_t ovr_TestUser_GetUserId(::System::IntPtr obj);
    // static public System.String ovr_TestUserAppAccess_GetAccessToken(System.IntPtr obj)
    // Offset: 0x486B9D4
    static ::StringW ovr_TestUserAppAccess_GetAccessToken(::System::IntPtr obj);
    // static private System.IntPtr ovr_TestUserAppAccess_GetAccessToken_Native(System.IntPtr obj)
    // Offset: 0x486BA2C
    static ::System::IntPtr ovr_TestUserAppAccess_GetAccessToken_Native(::System::IntPtr obj);
    // static public System.UInt64 ovr_TestUserAppAccess_GetAppId(System.IntPtr obj)
    // Offset: 0x486BAA8
    static uint64_t ovr_TestUserAppAccess_GetAppId(::System::IntPtr obj);
    // static public System.UInt64 ovr_TestUserAppAccess_GetUserId(System.IntPtr obj)
    // Offset: 0x486BB24
    static uint64_t ovr_TestUserAppAccess_GetUserId(::System::IntPtr obj);
    // static public System.IntPtr ovr_TestUserAppAccessArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x486BBA0
    static ::System::IntPtr ovr_TestUserAppAccessArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index);
    // static public System.UIntPtr ovr_TestUserAppAccessArray_GetSize(System.IntPtr obj)
    // Offset: 0x486BC24
    static ::System::UIntPtr ovr_TestUserAppAccessArray_GetSize(::System::IntPtr obj);
    // static public System.String ovr_User_GetDisplayName(System.IntPtr obj)
    // Offset: 0x486BCA0
    static ::StringW ovr_User_GetDisplayName(::System::IntPtr obj);
    // static private System.IntPtr ovr_User_GetDisplayName_Native(System.IntPtr obj)
    // Offset: 0x486BCF8
    static ::System::IntPtr ovr_User_GetDisplayName_Native(::System::IntPtr obj);
    // static public System.UInt64 ovr_User_GetID(System.IntPtr obj)
    // Offset: 0x486BD74
    static uint64_t ovr_User_GetID(::System::IntPtr obj);
    // static public System.String ovr_User_GetImageUrl(System.IntPtr obj)
    // Offset: 0x486BDF0
    static ::StringW ovr_User_GetImageUrl(::System::IntPtr obj);
    // static private System.IntPtr ovr_User_GetImageUrl_Native(System.IntPtr obj)
    // Offset: 0x486BE48
    static ::System::IntPtr ovr_User_GetImageUrl_Native(::System::IntPtr obj);
    // static public System.String ovr_User_GetOculusID(System.IntPtr obj)
    // Offset: 0x486BEC4
    static ::StringW ovr_User_GetOculusID(::System::IntPtr obj);
    // static private System.IntPtr ovr_User_GetOculusID_Native(System.IntPtr obj)
    // Offset: 0x486BF1C
    static ::System::IntPtr ovr_User_GetOculusID_Native(::System::IntPtr obj);
    // static public System.String ovr_User_GetPresence(System.IntPtr obj)
    // Offset: 0x486BF98
    static ::StringW ovr_User_GetPresence(::System::IntPtr obj);
    // static private System.IntPtr ovr_User_GetPresence_Native(System.IntPtr obj)
    // Offset: 0x486BFF0
    static ::System::IntPtr ovr_User_GetPresence_Native(::System::IntPtr obj);
    // static public System.String ovr_User_GetPresenceDeeplinkMessage(System.IntPtr obj)
    // Offset: 0x486C06C
    static ::StringW ovr_User_GetPresenceDeeplinkMessage(::System::IntPtr obj);
    // static private System.IntPtr ovr_User_GetPresenceDeeplinkMessage_Native(System.IntPtr obj)
    // Offset: 0x486C0C4
    static ::System::IntPtr ovr_User_GetPresenceDeeplinkMessage_Native(::System::IntPtr obj);
    // static public System.String ovr_User_GetPresenceDestinationApiName(System.IntPtr obj)
    // Offset: 0x486C140
    static ::StringW ovr_User_GetPresenceDestinationApiName(::System::IntPtr obj);
    // static private System.IntPtr ovr_User_GetPresenceDestinationApiName_Native(System.IntPtr obj)
    // Offset: 0x486C198
    static ::System::IntPtr ovr_User_GetPresenceDestinationApiName_Native(::System::IntPtr obj);
    // static public System.String ovr_User_GetPresenceLobbySessionId(System.IntPtr obj)
    // Offset: 0x486C214
    static ::StringW ovr_User_GetPresenceLobbySessionId(::System::IntPtr obj);
    // static private System.IntPtr ovr_User_GetPresenceLobbySessionId_Native(System.IntPtr obj)
    // Offset: 0x486C26C
    static ::System::IntPtr ovr_User_GetPresenceLobbySessionId_Native(::System::IntPtr obj);
    // static public System.String ovr_User_GetPresenceMatchSessionId(System.IntPtr obj)
    // Offset: 0x486C2E8
    static ::StringW ovr_User_GetPresenceMatchSessionId(::System::IntPtr obj);
    // static private System.IntPtr ovr_User_GetPresenceMatchSessionId_Native(System.IntPtr obj)
    // Offset: 0x486C340
    static ::System::IntPtr ovr_User_GetPresenceMatchSessionId_Native(::System::IntPtr obj);
    // static public Oculus.Platform.UserPresenceStatus ovr_User_GetPresenceStatus(System.IntPtr obj)
    // Offset: 0x486C3BC
    static ::Oculus::Platform::UserPresenceStatus ovr_User_GetPresenceStatus(::System::IntPtr obj);
    // static public System.String ovr_User_GetSmallImageUrl(System.IntPtr obj)
    // Offset: 0x486C438
    static ::StringW ovr_User_GetSmallImageUrl(::System::IntPtr obj);
    // static private System.IntPtr ovr_User_GetSmallImageUrl_Native(System.IntPtr obj)
    // Offset: 0x486C490
    static ::System::IntPtr ovr_User_GetSmallImageUrl_Native(::System::IntPtr obj);
    // static public Oculus.Platform.AccountAgeCategory ovr_UserAccountAgeCategory_GetAgeCategory(System.IntPtr obj)
    // Offset: 0x486C50C
    static ::Oculus::Platform::AccountAgeCategory ovr_UserAccountAgeCategory_GetAgeCategory(::System::IntPtr obj);
    // static public System.IntPtr ovr_UserArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x486C588
    static ::System::IntPtr ovr_UserArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index);
    // static public System.String ovr_UserArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x486C60C
    static ::StringW ovr_UserArray_GetNextUrl(::System::IntPtr obj);
    // static private System.IntPtr ovr_UserArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x486C664
    static ::System::IntPtr ovr_UserArray_GetNextUrl_Native(::System::IntPtr obj);
    // static public System.UIntPtr ovr_UserArray_GetSize(System.IntPtr obj)
    // Offset: 0x486C6E0
    static ::System::UIntPtr ovr_UserArray_GetSize(::System::IntPtr obj);
    // static public System.Boolean ovr_UserArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x486C75C
    static bool ovr_UserArray_HasNextPage(::System::IntPtr obj);
    // static public System.String ovr_UserCapability_GetDescription(System.IntPtr obj)
    // Offset: 0x486C7E0
    static ::StringW ovr_UserCapability_GetDescription(::System::IntPtr obj);
    // static private System.IntPtr ovr_UserCapability_GetDescription_Native(System.IntPtr obj)
    // Offset: 0x486C838
    static ::System::IntPtr ovr_UserCapability_GetDescription_Native(::System::IntPtr obj);
    // static public System.Boolean ovr_UserCapability_GetIsEnabled(System.IntPtr obj)
    // Offset: 0x486C8B4
    static bool ovr_UserCapability_GetIsEnabled(::System::IntPtr obj);
    // static public System.String ovr_UserCapability_GetName(System.IntPtr obj)
    // Offset: 0x486C938
    static ::StringW ovr_UserCapability_GetName(::System::IntPtr obj);
    // static private System.IntPtr ovr_UserCapability_GetName_Native(System.IntPtr obj)
    // Offset: 0x486C990
    static ::System::IntPtr ovr_UserCapability_GetName_Native(::System::IntPtr obj);
    // static public System.String ovr_UserCapability_GetReasonCode(System.IntPtr obj)
    // Offset: 0x486CA0C
    static ::StringW ovr_UserCapability_GetReasonCode(::System::IntPtr obj);
    // static private System.IntPtr ovr_UserCapability_GetReasonCode_Native(System.IntPtr obj)
    // Offset: 0x486CA64
    static ::System::IntPtr ovr_UserCapability_GetReasonCode_Native(::System::IntPtr obj);
    // static public System.IntPtr ovr_UserCapabilityArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x486CAE0
    static ::System::IntPtr ovr_UserCapabilityArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index);
    // static public System.String ovr_UserCapabilityArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x486CB64
    static ::StringW ovr_UserCapabilityArray_GetNextUrl(::System::IntPtr obj);
    // static private System.IntPtr ovr_UserCapabilityArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x486CBBC
    static ::System::IntPtr ovr_UserCapabilityArray_GetNextUrl_Native(::System::IntPtr obj);
    // static public System.UIntPtr ovr_UserCapabilityArray_GetSize(System.IntPtr obj)
    // Offset: 0x486CC38
    static ::System::UIntPtr ovr_UserCapabilityArray_GetSize(::System::IntPtr obj);
    // static public System.Boolean ovr_UserCapabilityArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x486CCB4
    static bool ovr_UserCapabilityArray_HasNextPage(::System::IntPtr obj);
    // static public System.Boolean ovr_UserDataStoreUpdateResponse_GetSuccess(System.IntPtr obj)
    // Offset: 0x486CD38
    static bool ovr_UserDataStoreUpdateResponse_GetSuccess(::System::IntPtr obj);
    // static public System.String ovr_UserProof_GetNonce(System.IntPtr obj)
    // Offset: 0x486CDBC
    static ::StringW ovr_UserProof_GetNonce(::System::IntPtr obj);
    // static private System.IntPtr ovr_UserProof_GetNonce_Native(System.IntPtr obj)
    // Offset: 0x486CE14
    static ::System::IntPtr ovr_UserProof_GetNonce_Native(::System::IntPtr obj);
    // static public System.Boolean ovr_UserReportID_GetDidCancel(System.IntPtr obj)
    // Offset: 0x486CE90
    static bool ovr_UserReportID_GetDidCancel(::System::IntPtr obj);
    // static public System.UInt64 ovr_UserReportID_GetID(System.IntPtr obj)
    // Offset: 0x486CF14
    static uint64_t ovr_UserReportID_GetID(::System::IntPtr obj);
    // static public System.Void ovr_VoipDecoder_Decode(System.IntPtr obj, System.Byte[] compressedData, System.UIntPtr compressedSize)
    // Offset: 0x486CF90
    static void ovr_VoipDecoder_Decode(::System::IntPtr obj, ::ArrayW<uint8_t> compressedData, ::System::UIntPtr compressedSize);
    // static public System.UIntPtr ovr_VoipDecoder_GetDecodedPCM(System.IntPtr obj, System.Single[] outputBuffer, System.UIntPtr outputBufferSize)
    // Offset: 0x486D02C
    static ::System::UIntPtr ovr_VoipDecoder_GetDecodedPCM(::System::IntPtr obj, ::ArrayW<float> outputBuffer, ::System::UIntPtr outputBufferSize);
    // static public System.Void ovr_VoipEncoder_AddPCM(System.IntPtr obj, System.Single[] inputData, System.UInt32 inputSize)
    // Offset: 0x486D0C8
    static void ovr_VoipEncoder_AddPCM(::System::IntPtr obj, ::ArrayW<float> inputData, uint inputSize);
    // static public System.UIntPtr ovr_VoipEncoder_GetCompressedData(System.IntPtr obj, System.Byte[] outputBuffer, System.UIntPtr intputSize)
    // Offset: 0x486D164
    static ::System::UIntPtr ovr_VoipEncoder_GetCompressedData(::System::IntPtr obj, ::ArrayW<uint8_t> outputBuffer, ::System::UIntPtr intputSize);
    // static public System.UIntPtr ovr_VoipEncoder_GetCompressedDataSize(System.IntPtr obj)
    // Offset: 0x486D200
    static ::System::UIntPtr ovr_VoipEncoder_GetCompressedDataSize(::System::IntPtr obj);
    // static public System.IntPtr ovr_AbuseReportOptions_Create()
    // Offset: 0x4850E04
    static ::System::IntPtr ovr_AbuseReportOptions_Create();
    // static public System.Void ovr_AbuseReportOptions_Destroy(System.IntPtr handle)
    // Offset: 0x4851124
    static void ovr_AbuseReportOptions_Destroy(::System::IntPtr handle);
    // static public System.Void ovr_AbuseReportOptions_SetPreventPeopleChooser(System.IntPtr handle, System.Boolean value)
    // Offset: 0x4850ED4
    static void ovr_AbuseReportOptions_SetPreventPeopleChooser(::System::IntPtr handle, bool value);
    // static public System.Void ovr_AbuseReportOptions_SetReportType(System.IntPtr handle, Oculus.Platform.AbuseReportType value)
    // Offset: 0x4850FC0
    static void ovr_AbuseReportOptions_SetReportType(::System::IntPtr handle, ::Oculus::Platform::AbuseReportType value);
    // static public System.IntPtr ovr_AdvancedAbuseReportOptions_Create()
    // Offset: 0x4851204
    static ::System::IntPtr ovr_AdvancedAbuseReportOptions_Create();
    // static public System.Void ovr_AdvancedAbuseReportOptions_Destroy(System.IntPtr handle)
    // Offset: 0x48519F0
    static void ovr_AdvancedAbuseReportOptions_Destroy(::System::IntPtr handle);
    // static public System.Void ovr_AdvancedAbuseReportOptions_SetDeveloperDefinedContextString(System.IntPtr handle, System.String key, System.String value)
    // Offset: 0x48512DC
    static void ovr_AdvancedAbuseReportOptions_SetDeveloperDefinedContextString(::System::IntPtr handle, ::StringW key, ::StringW value);
    // static private System.Void ovr_AdvancedAbuseReportOptions_SetDeveloperDefinedContextString_Native(System.IntPtr handle, System.IntPtr key, System.IntPtr value)
    // Offset: 0x486D27C
    static void ovr_AdvancedAbuseReportOptions_SetDeveloperDefinedContextString_Native(::System::IntPtr handle, ::System::IntPtr key, ::System::IntPtr value);
    // static public System.Void ovr_AdvancedAbuseReportOptions_ClearDeveloperDefinedContext(System.IntPtr handle)
    // Offset: 0x48513F4
    static void ovr_AdvancedAbuseReportOptions_ClearDeveloperDefinedContext(::System::IntPtr handle);
    // static public System.Void ovr_AdvancedAbuseReportOptions_SetObjectType(System.IntPtr handle, System.String value)
    // Offset: 0x48514D8
    static void ovr_AdvancedAbuseReportOptions_SetObjectType(::System::IntPtr handle, ::StringW value);
    // static private System.Void ovr_AdvancedAbuseReportOptions_SetObjectType_Native(System.IntPtr handle, System.IntPtr value)
    // Offset: 0x486D310
    static void ovr_AdvancedAbuseReportOptions_SetObjectType_Native(::System::IntPtr handle, ::System::IntPtr value);
    // static public System.Void ovr_AdvancedAbuseReportOptions_SetReportType(System.IntPtr handle, Oculus.Platform.AbuseReportType value)
    // Offset: 0x48515E0
    static void ovr_AdvancedAbuseReportOptions_SetReportType(::System::IntPtr handle, ::Oculus::Platform::AbuseReportType value);
    // static public System.Void ovr_AdvancedAbuseReportOptions_AddSuggestedUser(System.IntPtr handle, System.UInt64 value)
    // Offset: 0x48516CC
    static void ovr_AdvancedAbuseReportOptions_AddSuggestedUser(::System::IntPtr handle, uint64_t value);
    // static public System.Void ovr_AdvancedAbuseReportOptions_ClearSuggestedUsers(System.IntPtr handle)
    // Offset: 0x48517A8
    static void ovr_AdvancedAbuseReportOptions_ClearSuggestedUsers(::System::IntPtr handle);
    // static public System.Void ovr_AdvancedAbuseReportOptions_SetVideoMode(System.IntPtr handle, Oculus.Platform.AbuseReportVideoMode value)
    // Offset: 0x485188C
    static void ovr_AdvancedAbuseReportOptions_SetVideoMode(::System::IntPtr handle, ::Oculus::Platform::AbuseReportVideoMode value);
    // static public System.IntPtr ovr_ApplicationOptions_Create()
    // Offset: 0x4851DAC
    static ::System::IntPtr ovr_ApplicationOptions_Create();
    // static public System.Void ovr_ApplicationOptions_Destroy(System.IntPtr handle)
    // Offset: 0x4852400
    static void ovr_ApplicationOptions_Destroy(::System::IntPtr handle);
    // static public System.Void ovr_ApplicationOptions_SetDeeplinkMessage(System.IntPtr handle, System.String value)
    // Offset: 0x4851E7C
    static void ovr_ApplicationOptions_SetDeeplinkMessage(::System::IntPtr handle, ::StringW value);
    // static private System.Void ovr_ApplicationOptions_SetDeeplinkMessage_Native(System.IntPtr handle, System.IntPtr value)
    // Offset: 0x486D394
    static void ovr_ApplicationOptions_SetDeeplinkMessage_Native(::System::IntPtr handle, ::System::IntPtr value);
    // static public System.Void ovr_ApplicationOptions_SetDestinationApiName(System.IntPtr handle, System.String value)
    // Offset: 0x4851F84
    static void ovr_ApplicationOptions_SetDestinationApiName(::System::IntPtr handle, ::StringW value);
    // static private System.Void ovr_ApplicationOptions_SetDestinationApiName_Native(System.IntPtr handle, System.IntPtr value)
    // Offset: 0x486D418
    static void ovr_ApplicationOptions_SetDestinationApiName_Native(::System::IntPtr handle, ::System::IntPtr value);
    // static public System.Void ovr_ApplicationOptions_SetLobbySessionId(System.IntPtr handle, System.String value)
    // Offset: 0x485208C
    static void ovr_ApplicationOptions_SetLobbySessionId(::System::IntPtr handle, ::StringW value);
    // static private System.Void ovr_ApplicationOptions_SetLobbySessionId_Native(System.IntPtr handle, System.IntPtr value)
    // Offset: 0x486D49C
    static void ovr_ApplicationOptions_SetLobbySessionId_Native(::System::IntPtr handle, ::System::IntPtr value);
    // static public System.Void ovr_ApplicationOptions_SetMatchSessionId(System.IntPtr handle, System.String value)
    // Offset: 0x4852194
    static void ovr_ApplicationOptions_SetMatchSessionId(::System::IntPtr handle, ::StringW value);
    // static private System.Void ovr_ApplicationOptions_SetMatchSessionId_Native(System.IntPtr handle, System.IntPtr value)
    // Offset: 0x486D520
    static void ovr_ApplicationOptions_SetMatchSessionId_Native(::System::IntPtr handle, ::System::IntPtr value);
    // static public System.Void ovr_ApplicationOptions_SetRoomId(System.IntPtr handle, System.UInt64 value)
    // Offset: 0x485229C
    static void ovr_ApplicationOptions_SetRoomId(::System::IntPtr handle, uint64_t value);
    // static public System.IntPtr ovr_AvatarEditorOptions_Create()
    // Offset: 0x48524E0
    static ::System::IntPtr ovr_AvatarEditorOptions_Create();
    // static public System.Void ovr_AvatarEditorOptions_Destroy(System.IntPtr handle)
    // Offset: 0x4852730
    static void ovr_AvatarEditorOptions_Destroy(::System::IntPtr handle);
    // static public System.Void ovr_AvatarEditorOptions_SetSourceOverride(System.IntPtr handle, System.String value)
    // Offset: 0x48525B0
    static void ovr_AvatarEditorOptions_SetSourceOverride(::System::IntPtr handle, ::StringW value);
    // static private System.Void ovr_AvatarEditorOptions_SetSourceOverride_Native(System.IntPtr handle, System.IntPtr value)
    // Offset: 0x486D5A4
    static void ovr_AvatarEditorOptions_SetSourceOverride_Native(::System::IntPtr handle, ::System::IntPtr value);
    // static public System.IntPtr ovr_ChallengeOptions_Create()
    // Offset: 0x486D628
    static ::System::IntPtr ovr_ChallengeOptions_Create();
    // static public System.Void ovr_ChallengeOptions_Destroy(System.IntPtr handle)
    // Offset: 0x486D690
    static void ovr_ChallengeOptions_Destroy(::System::IntPtr handle);
    // static public System.Void ovr_ChallengeOptions_SetDescription(System.IntPtr handle, System.String value)
    // Offset: 0x486D70C
    static void ovr_ChallengeOptions_SetDescription(::System::IntPtr handle, ::StringW value);
    // static private System.Void ovr_ChallengeOptions_SetDescription_Native(System.IntPtr handle, System.IntPtr value)
    // Offset: 0x486D7AC
    static void ovr_ChallengeOptions_SetDescription_Native(::System::IntPtr handle, ::System::IntPtr value);
    // static public System.Void ovr_ChallengeOptions_SetEndDate(System.IntPtr handle, System.DateTime value)
    // Offset: 0x486D830
    static void ovr_ChallengeOptions_SetEndDate(::System::IntPtr handle, ::System::DateTime value);
    // static private System.Void ovr_ChallengeOptions_SetEndDate_Native(System.IntPtr handle, System.UInt64 value)
    // Offset: 0x486D89C
    static void ovr_ChallengeOptions_SetEndDate_Native(::System::IntPtr handle, uint64_t value);
    // static public System.Void ovr_ChallengeOptions_SetIncludeActiveChallenges(System.IntPtr handle, System.Boolean value)
    // Offset: 0x486D920
    static void ovr_ChallengeOptions_SetIncludeActiveChallenges(::System::IntPtr handle, bool value);
    // static public System.Void ovr_ChallengeOptions_SetIncludeFutureChallenges(System.IntPtr handle, System.Boolean value)
    // Offset: 0x486D9A4
    static void ovr_ChallengeOptions_SetIncludeFutureChallenges(::System::IntPtr handle, bool value);
    // static public System.Void ovr_ChallengeOptions_SetIncludePastChallenges(System.IntPtr handle, System.Boolean value)
    // Offset: 0x486DA28
    static void ovr_ChallengeOptions_SetIncludePastChallenges(::System::IntPtr handle, bool value);
    // static public System.Void ovr_ChallengeOptions_SetLeaderboardName(System.IntPtr handle, System.String value)
    // Offset: 0x486DAAC
    static void ovr_ChallengeOptions_SetLeaderboardName(::System::IntPtr handle, ::StringW value);
    // static private System.Void ovr_ChallengeOptions_SetLeaderboardName_Native(System.IntPtr handle, System.IntPtr value)
    // Offset: 0x486DB4C
    static void ovr_ChallengeOptions_SetLeaderboardName_Native(::System::IntPtr handle, ::System::IntPtr value);
    // static public System.Void ovr_ChallengeOptions_SetStartDate(System.IntPtr handle, System.DateTime value)
    // Offset: 0x486DBD0
    static void ovr_ChallengeOptions_SetStartDate(::System::IntPtr handle, ::System::DateTime value);
    // static private System.Void ovr_ChallengeOptions_SetStartDate_Native(System.IntPtr handle, System.UInt64 value)
    // Offset: 0x486DC3C
    static void ovr_ChallengeOptions_SetStartDate_Native(::System::IntPtr handle, uint64_t value);
    // static public System.Void ovr_ChallengeOptions_SetTitle(System.IntPtr handle, System.String value)
    // Offset: 0x486DCC0
    static void ovr_ChallengeOptions_SetTitle(::System::IntPtr handle, ::StringW value);
    // static private System.Void ovr_ChallengeOptions_SetTitle_Native(System.IntPtr handle, System.IntPtr value)
    // Offset: 0x486DD60
    static void ovr_ChallengeOptions_SetTitle_Native(::System::IntPtr handle, ::System::IntPtr value);
    // static public System.Void ovr_ChallengeOptions_SetViewerFilter(System.IntPtr handle, Oculus.Platform.ChallengeViewerFilter value)
    // Offset: 0x486DDE4
    static void ovr_ChallengeOptions_SetViewerFilter(::System::IntPtr handle, ::Oculus::Platform::ChallengeViewerFilter value);
    // static public System.Void ovr_ChallengeOptions_SetVisibility(System.IntPtr handle, Oculus.Platform.ChallengeVisibility value)
    // Offset: 0x486DE68
    static void ovr_ChallengeOptions_SetVisibility(::System::IntPtr handle, ::Oculus::Platform::ChallengeVisibility value);
    // static public System.IntPtr ovr_GroupPresenceOptions_Create()
    // Offset: 0x486DEEC
    static ::System::IntPtr ovr_GroupPresenceOptions_Create();
    // static public System.Void ovr_GroupPresenceOptions_Destroy(System.IntPtr handle)
    // Offset: 0x486DF54
    static void ovr_GroupPresenceOptions_Destroy(::System::IntPtr handle);
    // static public System.Void ovr_GroupPresenceOptions_SetDeeplinkMessageOverride(System.IntPtr handle, System.String value)
    // Offset: 0x486DFD0
    static void ovr_GroupPresenceOptions_SetDeeplinkMessageOverride(::System::IntPtr handle, ::StringW value);
    // static private System.Void ovr_GroupPresenceOptions_SetDeeplinkMessageOverride_Native(System.IntPtr handle, System.IntPtr value)
    // Offset: 0x486E070
    static void ovr_GroupPresenceOptions_SetDeeplinkMessageOverride_Native(::System::IntPtr handle, ::System::IntPtr value);
    // static public System.Void ovr_GroupPresenceOptions_SetDestinationApiName(System.IntPtr handle, System.String value)
    // Offset: 0x486E0F4
    static void ovr_GroupPresenceOptions_SetDestinationApiName(::System::IntPtr handle, ::StringW value);
    // static private System.Void ovr_GroupPresenceOptions_SetDestinationApiName_Native(System.IntPtr handle, System.IntPtr value)
    // Offset: 0x486E194
    static void ovr_GroupPresenceOptions_SetDestinationApiName_Native(::System::IntPtr handle, ::System::IntPtr value);
    // static public System.Void ovr_GroupPresenceOptions_SetIsJoinable(System.IntPtr handle, System.Boolean value)
    // Offset: 0x486E218
    static void ovr_GroupPresenceOptions_SetIsJoinable(::System::IntPtr handle, bool value);
    // static public System.Void ovr_GroupPresenceOptions_SetLobbySessionId(System.IntPtr handle, System.String value)
    // Offset: 0x486E29C
    static void ovr_GroupPresenceOptions_SetLobbySessionId(::System::IntPtr handle, ::StringW value);
    // static private System.Void ovr_GroupPresenceOptions_SetLobbySessionId_Native(System.IntPtr handle, System.IntPtr value)
    // Offset: 0x486E33C
    static void ovr_GroupPresenceOptions_SetLobbySessionId_Native(::System::IntPtr handle, ::System::IntPtr value);
    // static public System.Void ovr_GroupPresenceOptions_SetMatchSessionId(System.IntPtr handle, System.String value)
    // Offset: 0x486E3C0
    static void ovr_GroupPresenceOptions_SetMatchSessionId(::System::IntPtr handle, ::StringW value);
    // static private System.Void ovr_GroupPresenceOptions_SetMatchSessionId_Native(System.IntPtr handle, System.IntPtr value)
    // Offset: 0x486E460
    static void ovr_GroupPresenceOptions_SetMatchSessionId_Native(::System::IntPtr handle, ::System::IntPtr value);
    // static public System.IntPtr ovr_InviteOptions_Create()
    // Offset: 0x486E4E4
    static ::System::IntPtr ovr_InviteOptions_Create();
    // static public System.Void ovr_InviteOptions_Destroy(System.IntPtr handle)
    // Offset: 0x486E54C
    static void ovr_InviteOptions_Destroy(::System::IntPtr handle);
    // static public System.Void ovr_InviteOptions_AddSuggestedUser(System.IntPtr handle, System.UInt64 value)
    // Offset: 0x486E5C8
    static void ovr_InviteOptions_AddSuggestedUser(::System::IntPtr handle, uint64_t value);
    // static public System.Void ovr_InviteOptions_ClearSuggestedUsers(System.IntPtr handle)
    // Offset: 0x486E64C
    static void ovr_InviteOptions_ClearSuggestedUsers(::System::IntPtr handle);
    // static public System.IntPtr ovr_MultiplayerErrorOptions_Create()
    // Offset: 0x486E6C8
    static ::System::IntPtr ovr_MultiplayerErrorOptions_Create();
    // static public System.Void ovr_MultiplayerErrorOptions_Destroy(System.IntPtr handle)
    // Offset: 0x486E730
    static void ovr_MultiplayerErrorOptions_Destroy(::System::IntPtr handle);
    // static public System.Void ovr_MultiplayerErrorOptions_SetErrorKey(System.IntPtr handle, Oculus.Platform.MultiplayerErrorErrorKey value)
    // Offset: 0x486E7AC
    static void ovr_MultiplayerErrorOptions_SetErrorKey(::System::IntPtr handle, ::Oculus::Platform::MultiplayerErrorErrorKey value);
    // static public System.IntPtr ovr_NetSyncOptions_Create()
    // Offset: 0x486E830
    static ::System::IntPtr ovr_NetSyncOptions_Create();
    // static public System.Void ovr_NetSyncOptions_Destroy(System.IntPtr handle)
    // Offset: 0x486E898
    static void ovr_NetSyncOptions_Destroy(::System::IntPtr handle);
    // static public System.Void ovr_NetSyncOptions_SetVoipGroup(System.IntPtr handle, System.String value)
    // Offset: 0x486E914
    static void ovr_NetSyncOptions_SetVoipGroup(::System::IntPtr handle, ::StringW value);
    // static private System.Void ovr_NetSyncOptions_SetVoipGroup_Native(System.IntPtr handle, System.IntPtr value)
    // Offset: 0x486E9B4
    static void ovr_NetSyncOptions_SetVoipGroup_Native(::System::IntPtr handle, ::System::IntPtr value);
    // static public System.Void ovr_NetSyncOptions_SetVoipStreamDefault(System.IntPtr handle, Oculus.Platform.NetSyncVoipStreamMode value)
    // Offset: 0x486EA38
    static void ovr_NetSyncOptions_SetVoipStreamDefault(::System::IntPtr handle, ::Oculus::Platform::NetSyncVoipStreamMode value);
    // static public System.Void ovr_NetSyncOptions_SetZoneId(System.IntPtr handle, System.String value)
    // Offset: 0x486EABC
    static void ovr_NetSyncOptions_SetZoneId(::System::IntPtr handle, ::StringW value);
    // static private System.Void ovr_NetSyncOptions_SetZoneId_Native(System.IntPtr handle, System.IntPtr value)
    // Offset: 0x486EB5C
    static void ovr_NetSyncOptions_SetZoneId_Native(::System::IntPtr handle, ::System::IntPtr value);
    // static public System.IntPtr ovr_RichPresenceOptions_Create()
    // Offset: 0x486EBE0
    static ::System::IntPtr ovr_RichPresenceOptions_Create();
    // static public System.Void ovr_RichPresenceOptions_Destroy(System.IntPtr handle)
    // Offset: 0x486EC48
    static void ovr_RichPresenceOptions_Destroy(::System::IntPtr handle);
    // static public System.Void ovr_RichPresenceOptions_SetApiName(System.IntPtr handle, System.String value)
    // Offset: 0x486ECC4
    static void ovr_RichPresenceOptions_SetApiName(::System::IntPtr handle, ::StringW value);
    // static private System.Void ovr_RichPresenceOptions_SetApiName_Native(System.IntPtr handle, System.IntPtr value)
    // Offset: 0x486ED64
    static void ovr_RichPresenceOptions_SetApiName_Native(::System::IntPtr handle, ::System::IntPtr value);
    // static public System.Void ovr_RichPresenceOptions_SetDeeplinkMessageOverride(System.IntPtr handle, System.String value)
    // Offset: 0x486EDE8
    static void ovr_RichPresenceOptions_SetDeeplinkMessageOverride(::System::IntPtr handle, ::StringW value);
    // static private System.Void ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native(System.IntPtr handle, System.IntPtr value)
    // Offset: 0x486EE88
    static void ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native(::System::IntPtr handle, ::System::IntPtr value);
    // static public System.Void ovr_RichPresenceOptions_SetIsJoinable(System.IntPtr handle, System.Boolean value)
    // Offset: 0x486EF0C
    static void ovr_RichPresenceOptions_SetIsJoinable(::System::IntPtr handle, bool value);
    // static public System.IntPtr ovr_RosterOptions_Create()
    // Offset: 0x486EF90
    static ::System::IntPtr ovr_RosterOptions_Create();
    // static public System.Void ovr_RosterOptions_Destroy(System.IntPtr handle)
    // Offset: 0x486EFF8
    static void ovr_RosterOptions_Destroy(::System::IntPtr handle);
    // static public System.Void ovr_RosterOptions_AddSuggestedUser(System.IntPtr handle, System.UInt64 value)
    // Offset: 0x486F074
    static void ovr_RosterOptions_AddSuggestedUser(::System::IntPtr handle, uint64_t value);
    // static public System.Void ovr_RosterOptions_ClearSuggestedUsers(System.IntPtr handle)
    // Offset: 0x486F0F8
    static void ovr_RosterOptions_ClearSuggestedUsers(::System::IntPtr handle);
    // static public System.IntPtr ovr_UserOptions_Create()
    // Offset: 0x486F174
    static ::System::IntPtr ovr_UserOptions_Create();
    // static public System.Void ovr_UserOptions_Destroy(System.IntPtr handle)
    // Offset: 0x486F1DC
    static void ovr_UserOptions_Destroy(::System::IntPtr handle);
    // static public System.Void ovr_UserOptions_SetMaxUsers(System.IntPtr handle, System.UInt32 value)
    // Offset: 0x486F258
    static void ovr_UserOptions_SetMaxUsers(::System::IntPtr handle, uint value);
    // static public System.Void ovr_UserOptions_AddServiceProvider(System.IntPtr handle, Oculus.Platform.ServiceProvider value)
    // Offset: 0x486F2DC
    static void ovr_UserOptions_AddServiceProvider(::System::IntPtr handle, ::Oculus::Platform::ServiceProvider value);
    // static public System.Void ovr_UserOptions_ClearServiceProviders(System.IntPtr handle)
    // Offset: 0x486F360
    static void ovr_UserOptions_ClearServiceProviders(::System::IntPtr handle);
    // static public System.Void ovr_UserOptions_SetTimeWindow(System.IntPtr handle, Oculus.Platform.TimeWindow value)
    // Offset: 0x486F3DC
    static void ovr_UserOptions_SetTimeWindow(::System::IntPtr handle, ::Oculus::Platform::TimeWindow value);
    // static public System.IntPtr ovr_VoipOptions_Create()
    // Offset: 0x486F460
    static ::System::IntPtr ovr_VoipOptions_Create();
    // static public System.Void ovr_VoipOptions_Destroy(System.IntPtr handle)
    // Offset: 0x486F4C8
    static void ovr_VoipOptions_Destroy(::System::IntPtr handle);
    // static public System.Void ovr_VoipOptions_SetBitrateForNewConnections(System.IntPtr handle, Oculus.Platform.VoipBitrate value)
    // Offset: 0x486F544
    static void ovr_VoipOptions_SetBitrateForNewConnections(::System::IntPtr handle, ::Oculus::Platform::VoipBitrate value);
    // static public System.Void ovr_VoipOptions_SetCreateNewConnectionUseDtx(System.IntPtr handle, Oculus.Platform.VoipDtxState value)
    // Offset: 0x486F5C8
    static void ovr_VoipOptions_SetCreateNewConnectionUseDtx(::System::IntPtr handle, ::Oculus::Platform::VoipDtxState value);
    // public System.Void .ctor()
    // Offset: 0x486F64C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CAPI* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CAPI*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x486F654
    static void _cctor();
  }; // Oculus.Platform.CAPI
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Platform::CAPI::ovrKeyValuePair, "Oculus.Platform", "CAPI/ovrKeyValuePair");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ArrayOfStructsToIntPtr
// Il2CppName: ArrayOfStructsToIntPtr
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::Array*)>(&Oculus::Platform::CAPI::ArrayOfStructsToIntPtr)> {
  static const MethodInfo* get() {
    static auto* ar = &::il2cpp_utils::GetClassFromName("System", "Array")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ArrayOfStructsToIntPtr", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ar});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::DictionaryToOVRKeyValuePairs
// Il2CppName: DictionaryToOVRKeyValuePairs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair> (*)(::System::Collections::Generic::Dictionary_2<::Oculus::Platform::InitConfigOptions, bool>*)>(&Oculus::Platform::CAPI::DictionaryToOVRKeyValuePairs)> {
  static const MethodInfo* get() {
    static auto* dict = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Oculus.Platform", "InitConfigOptions"), ::il2cpp_utils::GetClassFromName("System", "Boolean")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "DictionaryToOVRKeyValuePairs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dict});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::DictionaryToOVRKeyValuePairs
// Il2CppName: DictionaryToOVRKeyValuePairs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair> (*)(::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*)>(&Oculus::Platform::CAPI::DictionaryToOVRKeyValuePairs)> {
  static const MethodInfo* get() {
    static auto* dict = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Object")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "DictionaryToOVRKeyValuePairs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dict});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::IntPtrToByteArray
// Il2CppName: IntPtrToByteArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (*)(::System::IntPtr, uint64_t)>(&Oculus::Platform::CAPI::IntPtrToByteArray)> {
  static const MethodInfo* get() {
    static auto* data = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* size = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "IntPtrToByteArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, size});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::DataStoreFromNative
// Il2CppName: DataStoreFromNative
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::DataStoreFromNative)> {
  static const MethodInfo* get() {
    static auto* pointer = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "DataStoreFromNative", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pointer});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::StringFromNative
// Il2CppName: StringFromNative
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::StringFromNative)> {
  static const MethodInfo* get() {
    static auto* pointer = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "StringFromNative", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pointer});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::GetNativeStringLengthNotIncludingNullTerminator
// Il2CppName: GetNativeStringLengthNotIncludingNullTerminator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::GetNativeStringLengthNotIncludingNullTerminator)> {
  static const MethodInfo* get() {
    static auto* pointer = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "GetNativeStringLengthNotIncludingNullTerminator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pointer});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::DateTimeFromNative
// Il2CppName: DateTimeFromNative
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::DateTime (*)(uint64_t)>(&Oculus::Platform::CAPI::DateTimeFromNative)> {
  static const MethodInfo* get() {
    static auto* seconds_since_the_one_true_epoch = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "DateTimeFromNative", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{seconds_since_the_one_true_epoch});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::DateTimeToNative
// Il2CppName: DateTimeToNative
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::DateTime)>(&Oculus::Platform::CAPI::DateTimeToNative)> {
  static const MethodInfo* get() {
    static auto* dt = &::il2cpp_utils::GetClassFromName("System", "DateTime")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "DateTimeToNative", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dt});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::BlobFromNative
// Il2CppName: BlobFromNative
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (*)(uint, ::System::IntPtr)>(&Oculus::Platform::CAPI::BlobFromNative)> {
  static const MethodInfo* get() {
    static auto* size = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* pointer = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "BlobFromNative", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{size, pointer});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::FiledataFromNative
// Il2CppName: FiledataFromNative
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (*)(uint, ::System::IntPtr)>(&Oculus::Platform::CAPI::FiledataFromNative)> {
  static const MethodInfo* get() {
    static auto* size = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* pointer = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "FiledataFromNative", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{size, pointer});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::StringToNative
// Il2CppName: StringToNative
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::StringW)>(&Oculus::Platform::CAPI::StringToNative)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "StringToNative", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UnityInitWrapper
// Il2CppName: ovr_UnityInitWrapper
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_UnityInitWrapper)> {
  static const MethodInfo* get() {
    static auto* appId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UnityInitWrapper", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{appId});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UnityInitGlobals
// Il2CppName: ovr_UnityInitGlobals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UnityInitGlobals)> {
  static const MethodInfo* get() {
    static auto* loggingCB = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UnityInitGlobals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{loggingCB});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UnityInitWrapperAsynchronous
// Il2CppName: ovr_UnityInitWrapperAsynchronous
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_UnityInitWrapperAsynchronous)> {
  static const MethodInfo* get() {
    static auto* appId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UnityInitWrapperAsynchronous", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{appId});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UnityInitWrapperStandalone
// Il2CppName: ovr_UnityInitWrapperStandalone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UnityInitWrapperStandalone)> {
  static const MethodInfo* get() {
    static auto* accessToken = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* loggingCB = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UnityInitWrapperStandalone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{accessToken, loggingCB});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Platform_InitializeStandaloneOculus
// Il2CppName: ovr_Platform_InitializeStandaloneOculus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(ByRef<::Oculus::Platform::CAPI::OculusInitParams>)>(&Oculus::Platform::CAPI::ovr_Platform_InitializeStandaloneOculus)> {
  static const MethodInfo* get() {
    static auto* init = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "CAPI/OculusInitParams")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Platform_InitializeStandaloneOculus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{init});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_PlatformInitializeWithAccessToken
// Il2CppName: ovr_PlatformInitializeWithAccessToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::StringW)>(&Oculus::Platform::CAPI::ovr_PlatformInitializeWithAccessToken)> {
  static const MethodInfo* get() {
    static auto* appId = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* accessToken = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_PlatformInitializeWithAccessToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{appId, accessToken});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_PlatformInitializeWithAccessTokenAndOptions
// Il2CppName: ovr_PlatformInitializeWithAccessTokenAndOptions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::StringW, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair>, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_PlatformInitializeWithAccessTokenAndOptions)> {
  static const MethodInfo* get() {
    static auto* appId = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* accessToken = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* configOptions = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("Oculus.Platform", "CAPI/ovrKeyValuePair"), 1)->byval_arg;
    static auto* numOptions = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_PlatformInitializeWithAccessTokenAndOptions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{appId, accessToken, configOptions, numOptions});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UnityInitWrapperWindows
// Il2CppName: ovr_UnityInitWrapperWindows
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UnityInitWrapperWindows)> {
  static const MethodInfo* get() {
    static auto* appId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* loggingCB = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UnityInitWrapperWindows", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{appId, loggingCB});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UnityInitWrapperWindowsAsynchronous
// Il2CppName: ovr_UnityInitWrapperWindowsAsynchronous
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UnityInitWrapperWindowsAsynchronous)> {
  static const MethodInfo* get() {
    static auto* appId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* loggingCB = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UnityInitWrapperWindowsAsynchronous", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{appId, loggingCB});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_SetDeveloperAccessToken
// Il2CppName: ovr_SetDeveloperAccessToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_SetDeveloperAccessToken)> {
  static const MethodInfo* get() {
    static auto* accessToken = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_SetDeveloperAccessToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{accessToken});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GetLoggedInUserLocale
// Il2CppName: ovr_GetLoggedInUserLocale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&Oculus::Platform::CAPI::ovr_GetLoggedInUserLocale)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GetLoggedInUserLocale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GetLoggedInUserLocale_Native
// Il2CppName: ovr_GetLoggedInUserLocale_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)()>(&Oculus::Platform::CAPI::ovr_GetLoggedInUserLocale_Native)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GetLoggedInUserLocale_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_PopMessage
// Il2CppName: ovr_PopMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)()>(&Oculus::Platform::CAPI::ovr_PopMessage)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_PopMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_FreeMessage
// Il2CppName: ovr_FreeMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_FreeMessage)> {
  static const MethodInfo* get() {
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_FreeMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{message});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_CreateEncoder
// Il2CppName: ovr_Voip_CreateEncoder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)()>(&Oculus::Platform::CAPI::ovr_Voip_CreateEncoder)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_CreateEncoder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_DestroyEncoder
// Il2CppName: ovr_Voip_DestroyEncoder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Voip_DestroyEncoder)> {
  static const MethodInfo* get() {
    static auto* encoder = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_DestroyEncoder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{encoder});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_CreateDecoder
// Il2CppName: ovr_Voip_CreateDecoder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)()>(&Oculus::Platform::CAPI::ovr_Voip_CreateDecoder)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_CreateDecoder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_DestroyDecoder
// Il2CppName: ovr_Voip_DestroyDecoder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Voip_DestroyDecoder)> {
  static const MethodInfo* get() {
    static auto* decoder = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_DestroyDecoder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{decoder});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_VoipDecoder_Decode
// Il2CppName: ovr_VoipDecoder_Decode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::ArrayW<uint8_t>, uint64_t)>(&Oculus::Platform::CAPI::ovr_VoipDecoder_Decode)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* compressedData = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* compressedSize = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_VoipDecoder_Decode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, compressedData, compressedSize});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Microphone_Create
// Il2CppName: ovr_Microphone_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)()>(&Oculus::Platform::CAPI::ovr_Microphone_Create)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Microphone_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Microphone_Destroy
// Il2CppName: ovr_Microphone_Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Microphone_Destroy)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Microphone_Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_SetSystemVoipPassthrough
// Il2CppName: ovr_Voip_SetSystemVoipPassthrough
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&Oculus::Platform::CAPI::ovr_Voip_SetSystemVoipPassthrough)> {
  static const MethodInfo* get() {
    static auto* passthrough = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_SetSystemVoipPassthrough", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{passthrough});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_SetSystemVoipMicrophoneMuted
// Il2CppName: ovr_Voip_SetSystemVoipMicrophoneMuted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Oculus::Platform::VoipMuteState)>(&Oculus::Platform::CAPI::ovr_Voip_SetSystemVoipMicrophoneMuted)> {
  static const MethodInfo* get() {
    static auto* muted = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "VoipMuteState")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_SetSystemVoipMicrophoneMuted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{muted});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UnityResetTestPlatform
// Il2CppName: ovr_UnityResetTestPlatform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Oculus::Platform::CAPI::ovr_UnityResetTestPlatform)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UnityResetTestPlatform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_HTTP_GetWithMessageType
// Il2CppName: ovr_HTTP_GetWithMessageType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW, int)>(&Oculus::Platform::CAPI::ovr_HTTP_GetWithMessageType)> {
  static const MethodInfo* get() {
    static auto* url = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* messageType = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_HTTP_GetWithMessageType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{url, messageType});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CrashApplication
// Il2CppName: ovr_CrashApplication
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Oculus::Platform::CAPI::ovr_CrashApplication)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CrashApplication", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_SetMicrophoneFilterCallback
// Il2CppName: ovr_Voip_SetMicrophoneFilterCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Oculus::Platform::CAPI::FilterCallback*)>(&Oculus::Platform::CAPI::ovr_Voip_SetMicrophoneFilterCallback)> {
  static const MethodInfo* get() {
    static auto* cb = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "CAPI/FilterCallback")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_SetMicrophoneFilterCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cb});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer
// Il2CppName: ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Oculus::Platform::CAPI::FilterCallback*, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer)> {
  static const MethodInfo* get() {
    static auto* cb = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "CAPI/FilterCallback")->byval_arg;
    static auto* bufferSizeElements = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cb, bufferSizeElements});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::LogNewUnifiedEvent
// Il2CppName: LogNewUnifiedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Oculus::Platform::LogEventName, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*)>(&Oculus::Platform::CAPI::LogNewUnifiedEvent)> {
  static const MethodInfo* get() {
    static auto* eventName = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "LogEventName")->byval_arg;
    static auto* values = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "LogNewUnifiedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventName, values});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::LogNewEvent
// Il2CppName: LogNewEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*)>(&Oculus::Platform::CAPI::LogNewEvent)> {
  static const MethodInfo* get() {
    static auto* eventName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* values = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "LogNewEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventName, values});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Log_NewEvent
// Il2CppName: ovr_Log_NewEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::ArrayW<::System::IntPtr>, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_Log_NewEvent)> {
  static const MethodInfo* get() {
    static auto* eventName = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* values = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "IntPtr"), 1)->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Log_NewEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventName, values, length});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationLifecycle_GetLaunchDetails
// Il2CppName: ovr_ApplicationLifecycle_GetLaunchDetails
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)()>(&Oculus::Platform::CAPI::ovr_ApplicationLifecycle_GetLaunchDetails)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationLifecycle_GetLaunchDetails", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationLifecycle_LogDeeplinkResult
// Il2CppName: ovr_ApplicationLifecycle_LogDeeplinkResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::Oculus::Platform::LaunchResult)>(&Oculus::Platform::CAPI::ovr_ApplicationLifecycle_LogDeeplinkResult)> {
  static const MethodInfo* get() {
    static auto* trackingID = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "LaunchResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationLifecycle_LogDeeplinkResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{trackingID, result});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationLifecycle_LogDeeplinkResult_Native
// Il2CppName: ovr_ApplicationLifecycle_LogDeeplinkResult_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::Oculus::Platform::LaunchResult)>(&Oculus::Platform::CAPI::ovr_ApplicationLifecycle_LogDeeplinkResult_Native)> {
  static const MethodInfo* get() {
    static auto* trackingID = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "LaunchResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationLifecycle_LogDeeplinkResult_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{trackingID, result});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_HTTP_StartTransfer
// Il2CppName: ovr_HTTP_StartTransfer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair>)>(&Oculus::Platform::CAPI::ovr_HTTP_StartTransfer)> {
  static const MethodInfo* get() {
    static auto* url = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* headers = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("Oculus.Platform", "CAPI/ovrKeyValuePair"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_HTTP_StartTransfer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{url, headers});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_HTTP_StartTransfer_Native
// Il2CppName: ovr_HTTP_StartTransfer_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair>, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_HTTP_StartTransfer_Native)> {
  static const MethodInfo* get() {
    static auto* url = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* headers = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("Oculus.Platform", "CAPI/ovrKeyValuePair"), 1)->byval_arg;
    static auto* numItems = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_HTTP_StartTransfer_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{url, headers, numItems});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_HTTP_Write
// Il2CppName: ovr_HTTP_Write
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, ::ArrayW<uint8_t>, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_HTTP_Write)> {
  static const MethodInfo* get() {
    static auto* transferId = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* bytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_HTTP_Write", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{transferId, bytes, length});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_HTTP_WriteEOM
// Il2CppName: ovr_HTTP_WriteEOM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_HTTP_WriteEOM)> {
  static const MethodInfo* get() {
    static auto* transferId = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_HTTP_WriteEOM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{transferId});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetStringForJavascript
// Il2CppName: ovr_Message_GetStringForJavascript
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetStringForJavascript)> {
  static const MethodInfo* get() {
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetStringForJavascript", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{message});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetStringForJavascript_Native
// Il2CppName: ovr_Message_GetStringForJavascript_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetStringForJavascript_Native)> {
  static const MethodInfo* get() {
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetStringForJavascript_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{message});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicFloatPCM
// Il2CppName: ovr_NetSync_GetAmbisonicFloatPCM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(int64_t, ::ArrayW<float>, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicFloatPCM)> {
  static const MethodInfo* get() {
    static auto* connection_id = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* outputBuffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    static auto* outputBufferNumElements = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_GetAmbisonicFloatPCM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{connection_id, outputBuffer, outputBufferNumElements});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicInt16PCM
// Il2CppName: ovr_NetSync_GetAmbisonicInt16PCM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(int64_t, ::ArrayW<int16_t>, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicInt16PCM)> {
  static const MethodInfo* get() {
    static auto* connection_id = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* outputBuffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int16"), 1)->byval_arg;
    static auto* outputBufferNumElements = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_GetAmbisonicInt16PCM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{connection_id, outputBuffer, outputBufferNumElements});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicInterleavedFloatPCM
// Il2CppName: ovr_NetSync_GetAmbisonicInterleavedFloatPCM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(int64_t, ::ArrayW<float>, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicInterleavedFloatPCM)> {
  static const MethodInfo* get() {
    static auto* connection_id = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* outputBuffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    static auto* outputBufferNumElements = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_GetAmbisonicInterleavedFloatPCM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{connection_id, outputBuffer, outputBufferNumElements});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicInterleavedInt16PCM
// Il2CppName: ovr_NetSync_GetAmbisonicInterleavedInt16PCM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(int64_t, ::ArrayW<int16_t>, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicInterleavedInt16PCM)> {
  static const MethodInfo* get() {
    static auto* connection_id = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* outputBuffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int16"), 1)->byval_arg;
    static auto* outputBufferNumElements = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_GetAmbisonicInterleavedInt16PCM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{connection_id, outputBuffer, outputBufferNumElements});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_GetListenerPosition
// Il2CppName: ovr_NetSync_GetListenerPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int64_t, uint64_t, ByRef<::Oculus::Platform::CAPI::ovrNetSyncVec3>)>(&Oculus::Platform::CAPI::ovr_NetSync_GetListenerPosition)> {
  static const MethodInfo* get() {
    static auto* connection_id = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* position = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "CAPI/ovrNetSyncVec3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_GetListenerPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{connection_id, sessionId, position});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_GetMonostreamFloatPCM
// Il2CppName: ovr_NetSync_GetMonostreamFloatPCM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(int64_t, uint64_t, ::ArrayW<float>, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_NetSync_GetMonostreamFloatPCM)> {
  static const MethodInfo* get() {
    static auto* connection_id = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* outputBuffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    static auto* outputBufferNumElements = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_GetMonostreamFloatPCM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{connection_id, sessionId, outputBuffer, outputBufferNumElements});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_GetMonostreamInt16PCM
// Il2CppName: ovr_NetSync_GetMonostreamInt16PCM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(int64_t, uint64_t, ::ArrayW<int16_t>, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_NetSync_GetMonostreamInt16PCM)> {
  static const MethodInfo* get() {
    static auto* connection_id = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* session_id = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* outputBuffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int16"), 1)->byval_arg;
    static auto* outputBufferNumElements = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_GetMonostreamInt16PCM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{connection_id, session_id, outputBuffer, outputBufferNumElements});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_GetPcmBufferMaxSamples
// Il2CppName: ovr_NetSync_GetPcmBufferMaxSamples
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)()>(&Oculus::Platform::CAPI::ovr_NetSync_GetPcmBufferMaxSamples)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_GetPcmBufferMaxSamples", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_GetVoipAmplitude
// Il2CppName: ovr_NetSync_GetVoipAmplitude
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int64_t, uint64_t, ByRef<float>)>(&Oculus::Platform::CAPI::ovr_NetSync_GetVoipAmplitude)> {
  static const MethodInfo* get() {
    static auto* connection_id = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* amplitude = &::il2cpp_utils::GetClassFromName("System", "Single")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_GetVoipAmplitude", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{connection_id, sessionId, amplitude});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_SetListenerPosition
// Il2CppName: ovr_NetSync_SetListenerPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int64_t, ByRef<::Oculus::Platform::CAPI::ovrNetSyncVec3>)>(&Oculus::Platform::CAPI::ovr_NetSync_SetListenerPosition)> {
  static const MethodInfo* get() {
    static auto* connection_id = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* position = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "CAPI/ovrNetSyncVec3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_SetListenerPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{connection_id, position});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Party_PluginGetSharedMemHandle
// Il2CppName: ovr_Party_PluginGetSharedMemHandle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&Oculus::Platform::CAPI::ovr_Party_PluginGetSharedMemHandle)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Party_PluginGetSharedMemHandle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Party_PluginGetVoipMicrophoneMuted
// Il2CppName: ovr_Party_PluginGetVoipMicrophoneMuted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::VoipMuteState (*)()>(&Oculus::Platform::CAPI::ovr_Party_PluginGetVoipMicrophoneMuted)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Party_PluginGetVoipMicrophoneMuted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Party_PluginGetVoipPassthrough
// Il2CppName: ovr_Party_PluginGetVoipPassthrough
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&Oculus::Platform::CAPI::ovr_Party_PluginGetVoipPassthrough)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Party_PluginGetVoipPassthrough", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Party_PluginGetVoipStatus
// Il2CppName: ovr_Party_PluginGetVoipStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::SystemVoipStatus (*)()>(&Oculus::Platform::CAPI::ovr_Party_PluginGetVoipStatus)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Party_PluginGetVoipStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_Accept
// Il2CppName: ovr_Voip_Accept
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_Voip_Accept)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_Accept", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_GetIsConnectionUsingDtx
// Il2CppName: ovr_Voip_GetIsConnectionUsingDtx
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::VoipDtxState (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_Voip_GetIsConnectionUsingDtx)> {
  static const MethodInfo* get() {
    static auto* peerID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_GetIsConnectionUsingDtx", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{peerID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_GetLocalBitrate
// Il2CppName: ovr_Voip_GetLocalBitrate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::VoipBitrate (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_Voip_GetLocalBitrate)> {
  static const MethodInfo* get() {
    static auto* peerID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_GetLocalBitrate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{peerID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_GetOutputBufferMaxSize
// Il2CppName: ovr_Voip_GetOutputBufferMaxSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)()>(&Oculus::Platform::CAPI::ovr_Voip_GetOutputBufferMaxSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_GetOutputBufferMaxSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_GetPCM
// Il2CppName: ovr_Voip_GetPCM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(uint64_t, ::ArrayW<int16_t>, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_Voip_GetPCM)> {
  static const MethodInfo* get() {
    static auto* senderID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* outputBuffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int16"), 1)->byval_arg;
    static auto* outputBufferNumElements = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_GetPCM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{senderID, outputBuffer, outputBufferNumElements});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_GetPCMFloat
// Il2CppName: ovr_Voip_GetPCMFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(uint64_t, ::ArrayW<float>, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_Voip_GetPCMFloat)> {
  static const MethodInfo* get() {
    static auto* senderID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* outputBuffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    static auto* outputBufferNumElements = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_GetPCMFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{senderID, outputBuffer, outputBufferNumElements});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_GetPCMSize
// Il2CppName: ovr_Voip_GetPCMSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_Voip_GetPCMSize)> {
  static const MethodInfo* get() {
    static auto* senderID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_GetPCMSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{senderID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_GetPCMWithTimestamp
// Il2CppName: ovr_Voip_GetPCMWithTimestamp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(uint64_t, ::ArrayW<int16_t>, ::System::UIntPtr, ::ArrayW<uint>)>(&Oculus::Platform::CAPI::ovr_Voip_GetPCMWithTimestamp)> {
  static const MethodInfo* get() {
    static auto* senderID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* outputBuffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int16"), 1)->byval_arg;
    static auto* outputBufferNumElements = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    static auto* timestamp = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt32"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_GetPCMWithTimestamp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{senderID, outputBuffer, outputBufferNumElements, timestamp});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_GetPCMWithTimestampFloat
// Il2CppName: ovr_Voip_GetPCMWithTimestampFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(uint64_t, ::ArrayW<float>, ::System::UIntPtr, ::ArrayW<uint>)>(&Oculus::Platform::CAPI::ovr_Voip_GetPCMWithTimestampFloat)> {
  static const MethodInfo* get() {
    static auto* senderID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* outputBuffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    static auto* outputBufferNumElements = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    static auto* timestamp = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt32"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_GetPCMWithTimestampFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{senderID, outputBuffer, outputBufferNumElements, timestamp});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_GetRemoteBitrate
// Il2CppName: ovr_Voip_GetRemoteBitrate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::VoipBitrate (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_Voip_GetRemoteBitrate)> {
  static const MethodInfo* get() {
    static auto* peerID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_GetRemoteBitrate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{peerID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_GetSyncTimestamp
// Il2CppName: ovr_Voip_GetSyncTimestamp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_Voip_GetSyncTimestamp)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_GetSyncTimestamp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_GetSyncTimestampDifference
// Il2CppName: ovr_Voip_GetSyncTimestampDifference
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (*)(uint, uint)>(&Oculus::Platform::CAPI::ovr_Voip_GetSyncTimestampDifference)> {
  static const MethodInfo* get() {
    static auto* lhs = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* rhs = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_GetSyncTimestampDifference", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{lhs, rhs});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_GetSystemVoipMicrophoneMuted
// Il2CppName: ovr_Voip_GetSystemVoipMicrophoneMuted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::VoipMuteState (*)()>(&Oculus::Platform::CAPI::ovr_Voip_GetSystemVoipMicrophoneMuted)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_GetSystemVoipMicrophoneMuted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_GetSystemVoipStatus
// Il2CppName: ovr_Voip_GetSystemVoipStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::SystemVoipStatus (*)()>(&Oculus::Platform::CAPI::ovr_Voip_GetSystemVoipStatus)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_GetSystemVoipStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_SetMicrophoneMuted
// Il2CppName: ovr_Voip_SetMicrophoneMuted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Oculus::Platform::VoipMuteState)>(&Oculus::Platform::CAPI::ovr_Voip_SetMicrophoneMuted)> {
  static const MethodInfo* get() {
    static auto* state = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "VoipMuteState")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_SetMicrophoneMuted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{state});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_SetNewConnectionOptions
// Il2CppName: ovr_Voip_SetNewConnectionOptions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Voip_SetNewConnectionOptions)> {
  static const MethodInfo* get() {
    static auto* voipOptions = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_SetNewConnectionOptions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{voipOptions});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_SetOutputSampleRate
// Il2CppName: ovr_Voip_SetOutputSampleRate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Oculus::Platform::VoipSampleRate)>(&Oculus::Platform::CAPI::ovr_Voip_SetOutputSampleRate)> {
  static const MethodInfo* get() {
    static auto* rate = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "VoipSampleRate")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_SetOutputSampleRate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rate});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_Start
// Il2CppName: ovr_Voip_Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_Voip_Start)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_Stop
// Il2CppName: ovr_Voip_Stop
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_Voip_Stop)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_Stop", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AbuseReport_LaunchAdvancedReportFlow
// Il2CppName: ovr_AbuseReport_LaunchAdvancedReportFlow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AbuseReport_LaunchAdvancedReportFlow)> {
  static const MethodInfo* get() {
    static auto* content_id = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* abuse_report_options = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AbuseReport_LaunchAdvancedReportFlow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{content_id, abuse_report_options});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AbuseReport_ReportRequestHandled
// Il2CppName: ovr_AbuseReport_ReportRequestHandled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Oculus::Platform::ReportRequestResponse)>(&Oculus::Platform::CAPI::ovr_AbuseReport_ReportRequestHandled)> {
  static const MethodInfo* get() {
    static auto* response = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "ReportRequestResponse")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AbuseReport_ReportRequestHandled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{response});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Achievements_AddCount
// Il2CppName: ovr_Achievements_AddCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW, uint64_t)>(&Oculus::Platform::CAPI::ovr_Achievements_AddCount)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Achievements_AddCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, count});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Achievements_AddCount_Native
// Il2CppName: ovr_Achievements_AddCount_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr, uint64_t)>(&Oculus::Platform::CAPI::ovr_Achievements_AddCount_Native)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Achievements_AddCount_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, count});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Achievements_AddFields
// Il2CppName: ovr_Achievements_AddFields
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW, ::StringW)>(&Oculus::Platform::CAPI::ovr_Achievements_AddFields)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* fields = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Achievements_AddFields", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, fields});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Achievements_AddFields_Native
// Il2CppName: ovr_Achievements_AddFields_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Achievements_AddFields_Native)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* fields = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Achievements_AddFields_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, fields});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Achievements_GetAllDefinitions
// Il2CppName: ovr_Achievements_GetAllDefinitions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_Achievements_GetAllDefinitions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Achievements_GetAllDefinitions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Achievements_GetAllProgress
// Il2CppName: ovr_Achievements_GetAllProgress
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_Achievements_GetAllProgress)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Achievements_GetAllProgress", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Achievements_GetDefinitionsByName
// Il2CppName: ovr_Achievements_GetDefinitionsByName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::ArrayW<::StringW>, int)>(&Oculus::Platform::CAPI::ovr_Achievements_GetDefinitionsByName)> {
  static const MethodInfo* get() {
    static auto* names = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Achievements_GetDefinitionsByName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{names, count});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Achievements_GetProgressByName
// Il2CppName: ovr_Achievements_GetProgressByName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::ArrayW<::StringW>, int)>(&Oculus::Platform::CAPI::ovr_Achievements_GetProgressByName)> {
  static const MethodInfo* get() {
    static auto* names = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Achievements_GetProgressByName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{names, count});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Achievements_Unlock
// Il2CppName: ovr_Achievements_Unlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_Achievements_Unlock)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Achievements_Unlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Achievements_Unlock_Native
// Il2CppName: ovr_Achievements_Unlock_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Achievements_Unlock_Native)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Achievements_Unlock_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Application_CancelAppDownload
// Il2CppName: ovr_Application_CancelAppDownload
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_Application_CancelAppDownload)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Application_CancelAppDownload", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Application_CheckAppDownloadProgress
// Il2CppName: ovr_Application_CheckAppDownloadProgress
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_Application_CheckAppDownloadProgress)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Application_CheckAppDownloadProgress", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Application_GetInstalledApplications
// Il2CppName: ovr_Application_GetInstalledApplications
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_Application_GetInstalledApplications)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Application_GetInstalledApplications", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Application_GetVersion
// Il2CppName: ovr_Application_GetVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_Application_GetVersion)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Application_GetVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Application_InstallAppUpdateAndRelaunch
// Il2CppName: ovr_Application_InstallAppUpdateAndRelaunch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Application_InstallAppUpdateAndRelaunch)> {
  static const MethodInfo* get() {
    static auto* deeplink_options = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Application_InstallAppUpdateAndRelaunch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{deeplink_options});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Application_LaunchOtherApp
// Il2CppName: ovr_Application_LaunchOtherApp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Application_LaunchOtherApp)> {
  static const MethodInfo* get() {
    static auto* appID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* deeplink_options = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Application_LaunchOtherApp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{appID, deeplink_options});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Application_StartAppDownload
// Il2CppName: ovr_Application_StartAppDownload
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_Application_StartAppDownload)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Application_StartAppDownload", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationLifecycle_GetRegisteredPIDs
// Il2CppName: ovr_ApplicationLifecycle_GetRegisteredPIDs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_ApplicationLifecycle_GetRegisteredPIDs)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationLifecycle_GetRegisteredPIDs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationLifecycle_GetSessionKey
// Il2CppName: ovr_ApplicationLifecycle_GetSessionKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_ApplicationLifecycle_GetSessionKey)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationLifecycle_GetSessionKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationLifecycle_RegisterSessionKey
// Il2CppName: ovr_ApplicationLifecycle_RegisterSessionKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_ApplicationLifecycle_RegisterSessionKey)> {
  static const MethodInfo* get() {
    static auto* sessionKey = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationLifecycle_RegisterSessionKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionKey});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationLifecycle_RegisterSessionKey_Native
// Il2CppName: ovr_ApplicationLifecycle_RegisterSessionKey_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ApplicationLifecycle_RegisterSessionKey_Native)> {
  static const MethodInfo* get() {
    static auto* sessionKey = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationLifecycle_RegisterSessionKey_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionKey});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFile_Delete
// Il2CppName: ovr_AssetFile_Delete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_AssetFile_Delete)> {
  static const MethodInfo* get() {
    static auto* assetFileID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFile_Delete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetFileID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFile_DeleteById
// Il2CppName: ovr_AssetFile_DeleteById
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_AssetFile_DeleteById)> {
  static const MethodInfo* get() {
    static auto* assetFileID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFile_DeleteById", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetFileID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFile_DeleteByName
// Il2CppName: ovr_AssetFile_DeleteByName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_AssetFile_DeleteByName)> {
  static const MethodInfo* get() {
    static auto* assetFileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFile_DeleteByName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetFileName});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFile_DeleteByName_Native
// Il2CppName: ovr_AssetFile_DeleteByName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetFile_DeleteByName_Native)> {
  static const MethodInfo* get() {
    static auto* assetFileName = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFile_DeleteByName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetFileName});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFile_Download
// Il2CppName: ovr_AssetFile_Download
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_AssetFile_Download)> {
  static const MethodInfo* get() {
    static auto* assetFileID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFile_Download", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetFileID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFile_DownloadById
// Il2CppName: ovr_AssetFile_DownloadById
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_AssetFile_DownloadById)> {
  static const MethodInfo* get() {
    static auto* assetFileID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFile_DownloadById", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetFileID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFile_DownloadByName
// Il2CppName: ovr_AssetFile_DownloadByName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_AssetFile_DownloadByName)> {
  static const MethodInfo* get() {
    static auto* assetFileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFile_DownloadByName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetFileName});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFile_DownloadByName_Native
// Il2CppName: ovr_AssetFile_DownloadByName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetFile_DownloadByName_Native)> {
  static const MethodInfo* get() {
    static auto* assetFileName = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFile_DownloadByName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetFileName});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancel
// Il2CppName: ovr_AssetFile_DownloadCancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancel)> {
  static const MethodInfo* get() {
    static auto* assetFileID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFile_DownloadCancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetFileID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancelById
// Il2CppName: ovr_AssetFile_DownloadCancelById
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancelById)> {
  static const MethodInfo* get() {
    static auto* assetFileID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFile_DownloadCancelById", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetFileID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancelByName
// Il2CppName: ovr_AssetFile_DownloadCancelByName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancelByName)> {
  static const MethodInfo* get() {
    static auto* assetFileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFile_DownloadCancelByName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetFileName});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancelByName_Native
// Il2CppName: ovr_AssetFile_DownloadCancelByName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancelByName_Native)> {
  static const MethodInfo* get() {
    static auto* assetFileName = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFile_DownloadCancelByName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetFileName});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFile_GetList
// Il2CppName: ovr_AssetFile_GetList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_AssetFile_GetList)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFile_GetList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFile_Status
// Il2CppName: ovr_AssetFile_Status
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_AssetFile_Status)> {
  static const MethodInfo* get() {
    static auto* assetFileID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFile_Status", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetFileID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFile_StatusById
// Il2CppName: ovr_AssetFile_StatusById
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_AssetFile_StatusById)> {
  static const MethodInfo* get() {
    static auto* assetFileID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFile_StatusById", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetFileID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFile_StatusByName
// Il2CppName: ovr_AssetFile_StatusByName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_AssetFile_StatusByName)> {
  static const MethodInfo* get() {
    static auto* assetFileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFile_StatusByName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetFileName});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFile_StatusByName_Native
// Il2CppName: ovr_AssetFile_StatusByName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetFile_StatusByName_Native)> {
  static const MethodInfo* get() {
    static auto* assetFileName = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFile_StatusByName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetFileName});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Avatar_LaunchAvatarEditor
// Il2CppName: ovr_Avatar_LaunchAvatarEditor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Avatar_LaunchAvatarEditor)> {
  static const MethodInfo* get() {
    static auto* options = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Avatar_LaunchAvatarEditor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{options});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Avatar_UpdateMetaData
// Il2CppName: ovr_Avatar_UpdateMetaData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW, ::StringW)>(&Oculus::Platform::CAPI::ovr_Avatar_UpdateMetaData)> {
  static const MethodInfo* get() {
    static auto* avatarMetaData = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* imageFilePath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Avatar_UpdateMetaData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatarMetaData, imageFilePath});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Avatar_UpdateMetaData_Native
// Il2CppName: ovr_Avatar_UpdateMetaData_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Avatar_UpdateMetaData_Native)> {
  static const MethodInfo* get() {
    static auto* avatarMetaData = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* imageFilePath = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Avatar_UpdateMetaData_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatarMetaData, imageFilePath});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenges_Create
// Il2CppName: ovr_Challenges_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Challenges_Create)> {
  static const MethodInfo* get() {
    static auto* leaderboardName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* challengeOptions = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenges_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{leaderboardName, challengeOptions});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenges_Create_Native
// Il2CppName: ovr_Challenges_Create_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Challenges_Create_Native)> {
  static const MethodInfo* get() {
    static auto* leaderboardName = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* challengeOptions = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenges_Create_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{leaderboardName, challengeOptions});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenges_DeclineInvite
// Il2CppName: ovr_Challenges_DeclineInvite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_Challenges_DeclineInvite)> {
  static const MethodInfo* get() {
    static auto* challengeID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenges_DeclineInvite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{challengeID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenges_Delete
// Il2CppName: ovr_Challenges_Delete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_Challenges_Delete)> {
  static const MethodInfo* get() {
    static auto* challengeID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenges_Delete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{challengeID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenges_Get
// Il2CppName: ovr_Challenges_Get
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_Challenges_Get)> {
  static const MethodInfo* get() {
    static auto* challengeID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenges_Get", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{challengeID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenges_GetEntries
// Il2CppName: ovr_Challenges_GetEntries
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, int, ::Oculus::Platform::LeaderboardFilterType, ::Oculus::Platform::LeaderboardStartAt)>(&Oculus::Platform::CAPI::ovr_Challenges_GetEntries)> {
  static const MethodInfo* get() {
    static auto* challengeID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* limit = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* filter = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "LeaderboardFilterType")->byval_arg;
    static auto* startAt = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "LeaderboardStartAt")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenges_GetEntries", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{challengeID, limit, filter, startAt});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenges_GetEntriesAfterRank
// Il2CppName: ovr_Challenges_GetEntriesAfterRank
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, int, uint64_t)>(&Oculus::Platform::CAPI::ovr_Challenges_GetEntriesAfterRank)> {
  static const MethodInfo* get() {
    static auto* challengeID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* limit = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* afterRank = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenges_GetEntriesAfterRank", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{challengeID, limit, afterRank});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenges_GetEntriesByIds
// Il2CppName: ovr_Challenges_GetEntriesByIds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, int, ::Oculus::Platform::LeaderboardStartAt, ::ArrayW<uint64_t>, uint)>(&Oculus::Platform::CAPI::ovr_Challenges_GetEntriesByIds)> {
  static const MethodInfo* get() {
    static auto* challengeID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* limit = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* startAt = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "LeaderboardStartAt")->byval_arg;
    static auto* userIDs = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt64"), 1)->byval_arg;
    static auto* userIDLength = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenges_GetEntriesByIds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{challengeID, limit, startAt, userIDs, userIDLength});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenges_GetList
// Il2CppName: ovr_Challenges_GetList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr, int)>(&Oculus::Platform::CAPI::ovr_Challenges_GetList)> {
  static const MethodInfo* get() {
    static auto* challengeOptions = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* limit = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenges_GetList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{challengeOptions, limit});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenges_GetNextChallenges
// Il2CppName: ovr_Challenges_GetNextChallenges
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Challenges_GetNextChallenges)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenges_GetNextChallenges", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenges_GetNextEntries
// Il2CppName: ovr_Challenges_GetNextEntries
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Challenges_GetNextEntries)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenges_GetNextEntries", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenges_GetPreviousChallenges
// Il2CppName: ovr_Challenges_GetPreviousChallenges
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Challenges_GetPreviousChallenges)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenges_GetPreviousChallenges", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenges_GetPreviousEntries
// Il2CppName: ovr_Challenges_GetPreviousEntries
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Challenges_GetPreviousEntries)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenges_GetPreviousEntries", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenges_Join
// Il2CppName: ovr_Challenges_Join
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_Challenges_Join)> {
  static const MethodInfo* get() {
    static auto* challengeID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenges_Join", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{challengeID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenges_Leave
// Il2CppName: ovr_Challenges_Leave
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_Challenges_Leave)> {
  static const MethodInfo* get() {
    static auto* challengeID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenges_Leave", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{challengeID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenges_UpdateInfo
// Il2CppName: ovr_Challenges_UpdateInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Challenges_UpdateInfo)> {
  static const MethodInfo* get() {
    static auto* challengeID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* challengeOptions = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenges_UpdateInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{challengeID, challengeOptions});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Colocation_GetCurrentMapUuid
// Il2CppName: ovr_Colocation_GetCurrentMapUuid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_Colocation_GetCurrentMapUuid)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Colocation_GetCurrentMapUuid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Colocation_RequestMap
// Il2CppName: ovr_Colocation_RequestMap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_Colocation_RequestMap)> {
  static const MethodInfo* get() {
    static auto* uuid = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Colocation_RequestMap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{uuid});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Colocation_RequestMap_Native
// Il2CppName: ovr_Colocation_RequestMap_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Colocation_RequestMap_Native)> {
  static const MethodInfo* get() {
    static auto* uuid = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Colocation_RequestMap_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{uuid});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Colocation_ShareMap
// Il2CppName: ovr_Colocation_ShareMap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_Colocation_ShareMap)> {
  static const MethodInfo* get() {
    static auto* uuid = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Colocation_ShareMap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{uuid});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Colocation_ShareMap_Native
// Il2CppName: ovr_Colocation_ShareMap_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Colocation_ShareMap_Native)> {
  static const MethodInfo* get() {
    static auto* uuid = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Colocation_ShareMap_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{uuid});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_DeviceApplicationIntegrity_GetAttestationToken
// Il2CppName: ovr_DeviceApplicationIntegrity_GetAttestationToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_DeviceApplicationIntegrity_GetAttestationToken)> {
  static const MethodInfo* get() {
    static auto* challenge_nonce = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_DeviceApplicationIntegrity_GetAttestationToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{challenge_nonce});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_DeviceApplicationIntegrity_GetAttestationToken_Native
// Il2CppName: ovr_DeviceApplicationIntegrity_GetAttestationToken_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_DeviceApplicationIntegrity_GetAttestationToken_Native)> {
  static const MethodInfo* get() {
    static auto* challenge_nonce = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_DeviceApplicationIntegrity_GetAttestationToken_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{challenge_nonce});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_DeviceApplicationIntegrity_GetIntegrityToken
// Il2CppName: ovr_DeviceApplicationIntegrity_GetIntegrityToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_DeviceApplicationIntegrity_GetIntegrityToken)> {
  static const MethodInfo* get() {
    static auto* challenge_nonce = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_DeviceApplicationIntegrity_GetIntegrityToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{challenge_nonce});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_DeviceApplicationIntegrity_GetIntegrityToken_Native
// Il2CppName: ovr_DeviceApplicationIntegrity_GetIntegrityToken_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_DeviceApplicationIntegrity_GetIntegrityToken_Native)> {
  static const MethodInfo* get() {
    static auto* challenge_nonce = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_DeviceApplicationIntegrity_GetIntegrityToken_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{challenge_nonce});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Entitlement_GetIsViewerEntitled
// Il2CppName: ovr_Entitlement_GetIsViewerEntitled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_Entitlement_GetIsViewerEntitled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Entitlement_GetIsViewerEntitled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GraphAPI_Get
// Il2CppName: ovr_GraphAPI_Get
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_GraphAPI_Get)> {
  static const MethodInfo* get() {
    static auto* url = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GraphAPI_Get", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{url});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GraphAPI_Get_Native
// Il2CppName: ovr_GraphAPI_Get_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GraphAPI_Get_Native)> {
  static const MethodInfo* get() {
    static auto* url = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GraphAPI_Get_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{url});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GraphAPI_Post
// Il2CppName: ovr_GraphAPI_Post
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_GraphAPI_Post)> {
  static const MethodInfo* get() {
    static auto* url = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GraphAPI_Post", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{url});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GraphAPI_Post_Native
// Il2CppName: ovr_GraphAPI_Post_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GraphAPI_Post_Native)> {
  static const MethodInfo* get() {
    static auto* url = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GraphAPI_Post_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{url});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresence_Clear
// Il2CppName: ovr_GroupPresence_Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_GroupPresence_Clear)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresence_Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresence_GetInvitableUsers
// Il2CppName: ovr_GroupPresence_GetInvitableUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GroupPresence_GetInvitableUsers)> {
  static const MethodInfo* get() {
    static auto* options = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresence_GetInvitableUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{options});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresence_GetSentInvites
// Il2CppName: ovr_GroupPresence_GetSentInvites
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_GroupPresence_GetSentInvites)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresence_GetSentInvites", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresence_LaunchInvitePanel
// Il2CppName: ovr_GroupPresence_LaunchInvitePanel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GroupPresence_LaunchInvitePanel)> {
  static const MethodInfo* get() {
    static auto* options = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresence_LaunchInvitePanel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{options});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresence_LaunchMultiplayerErrorDialog
// Il2CppName: ovr_GroupPresence_LaunchMultiplayerErrorDialog
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GroupPresence_LaunchMultiplayerErrorDialog)> {
  static const MethodInfo* get() {
    static auto* options = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresence_LaunchMultiplayerErrorDialog", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{options});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresence_LaunchRejoinDialog
// Il2CppName: ovr_GroupPresence_LaunchRejoinDialog
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW, ::StringW, ::StringW)>(&Oculus::Platform::CAPI::ovr_GroupPresence_LaunchRejoinDialog)> {
  static const MethodInfo* get() {
    static auto* lobby_session_id = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* match_session_id = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* destination_api_name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresence_LaunchRejoinDialog", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{lobby_session_id, match_session_id, destination_api_name});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresence_LaunchRejoinDialog_Native
// Il2CppName: ovr_GroupPresence_LaunchRejoinDialog_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr, ::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GroupPresence_LaunchRejoinDialog_Native)> {
  static const MethodInfo* get() {
    static auto* lobby_session_id = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* match_session_id = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* destination_api_name = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresence_LaunchRejoinDialog_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{lobby_session_id, match_session_id, destination_api_name});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresence_LaunchRosterPanel
// Il2CppName: ovr_GroupPresence_LaunchRosterPanel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GroupPresence_LaunchRosterPanel)> {
  static const MethodInfo* get() {
    static auto* options = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresence_LaunchRosterPanel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{options});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresence_SendInvites
// Il2CppName: ovr_GroupPresence_SendInvites
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::ArrayW<uint64_t>, uint)>(&Oculus::Platform::CAPI::ovr_GroupPresence_SendInvites)> {
  static const MethodInfo* get() {
    static auto* userIDs = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt64"), 1)->byval_arg;
    static auto* userIDLength = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresence_SendInvites", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userIDs, userIDLength});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresence_Set
// Il2CppName: ovr_GroupPresence_Set
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GroupPresence_Set)> {
  static const MethodInfo* get() {
    static auto* groupPresenceOptions = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresence_Set", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{groupPresenceOptions});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresence_SetDeeplinkMessageOverride
// Il2CppName: ovr_GroupPresence_SetDeeplinkMessageOverride
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_GroupPresence_SetDeeplinkMessageOverride)> {
  static const MethodInfo* get() {
    static auto* deeplink_message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresence_SetDeeplinkMessageOverride", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{deeplink_message});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresence_SetDeeplinkMessageOverride_Native
// Il2CppName: ovr_GroupPresence_SetDeeplinkMessageOverride_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GroupPresence_SetDeeplinkMessageOverride_Native)> {
  static const MethodInfo* get() {
    static auto* deeplink_message = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresence_SetDeeplinkMessageOverride_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{deeplink_message});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresence_SetDestination
// Il2CppName: ovr_GroupPresence_SetDestination
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_GroupPresence_SetDestination)> {
  static const MethodInfo* get() {
    static auto* api_name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresence_SetDestination", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{api_name});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresence_SetDestination_Native
// Il2CppName: ovr_GroupPresence_SetDestination_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GroupPresence_SetDestination_Native)> {
  static const MethodInfo* get() {
    static auto* api_name = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresence_SetDestination_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{api_name});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresence_SetIsJoinable
// Il2CppName: ovr_GroupPresence_SetIsJoinable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(bool)>(&Oculus::Platform::CAPI::ovr_GroupPresence_SetIsJoinable)> {
  static const MethodInfo* get() {
    static auto* is_joinable = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresence_SetIsJoinable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{is_joinable});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresence_SetLobbySession
// Il2CppName: ovr_GroupPresence_SetLobbySession
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_GroupPresence_SetLobbySession)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresence_SetLobbySession", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresence_SetLobbySession_Native
// Il2CppName: ovr_GroupPresence_SetLobbySession_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GroupPresence_SetLobbySession_Native)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresence_SetLobbySession_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresence_SetMatchSession
// Il2CppName: ovr_GroupPresence_SetMatchSession
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_GroupPresence_SetMatchSession)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresence_SetMatchSession", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresence_SetMatchSession_Native
// Il2CppName: ovr_GroupPresence_SetMatchSession_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GroupPresence_SetMatchSession_Native)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresence_SetMatchSession_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_HTTP_Get
// Il2CppName: ovr_HTTP_Get
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_HTTP_Get)> {
  static const MethodInfo* get() {
    static auto* url = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_HTTP_Get", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{url});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_HTTP_Get_Native
// Il2CppName: ovr_HTTP_Get_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_HTTP_Get_Native)> {
  static const MethodInfo* get() {
    static auto* url = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_HTTP_Get_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{url});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_HTTP_GetToFile
// Il2CppName: ovr_HTTP_GetToFile
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW, ::StringW)>(&Oculus::Platform::CAPI::ovr_HTTP_GetToFile)> {
  static const MethodInfo* get() {
    static auto* url = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* diskFile = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_HTTP_GetToFile", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{url, diskFile});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_HTTP_GetToFile_Native
// Il2CppName: ovr_HTTP_GetToFile_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_HTTP_GetToFile_Native)> {
  static const MethodInfo* get() {
    static auto* url = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* diskFile = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_HTTP_GetToFile_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{url, diskFile});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_HTTP_MultiPartPost
// Il2CppName: ovr_HTTP_MultiPartPost
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW, ::StringW, ::StringW, ::StringW, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair>)>(&Oculus::Platform::CAPI::ovr_HTTP_MultiPartPost)> {
  static const MethodInfo* get() {
    static auto* url = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* filepath_param_name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* filepath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* access_token = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* post_params = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("Oculus.Platform", "CAPI/ovrKeyValuePair"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_HTTP_MultiPartPost", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{url, filepath_param_name, filepath, access_token, post_params});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_HTTP_MultiPartPost_Native
// Il2CppName: ovr_HTTP_MultiPartPost_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr, ::System::IntPtr, ::System::IntPtr, ::System::IntPtr, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair>, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_HTTP_MultiPartPost_Native)> {
  static const MethodInfo* get() {
    static auto* url = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* filepath_param_name = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* filepath = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* access_token = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* post_params = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("Oculus.Platform", "CAPI/ovrKeyValuePair"), 1)->byval_arg;
    static auto* numItems = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_HTTP_MultiPartPost_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{url, filepath_param_name, filepath, access_token, post_params, numItems});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_HTTP_Post
// Il2CppName: ovr_HTTP_Post
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_HTTP_Post)> {
  static const MethodInfo* get() {
    static auto* url = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_HTTP_Post", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{url});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_HTTP_Post_Native
// Il2CppName: ovr_HTTP_Post_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_HTTP_Post_Native)> {
  static const MethodInfo* get() {
    static auto* url = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_HTTP_Post_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{url});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_IAP_ConsumePurchase
// Il2CppName: ovr_IAP_ConsumePurchase
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_IAP_ConsumePurchase)> {
  static const MethodInfo* get() {
    static auto* sku = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_IAP_ConsumePurchase", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sku});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_IAP_ConsumePurchase_Native
// Il2CppName: ovr_IAP_ConsumePurchase_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_IAP_ConsumePurchase_Native)> {
  static const MethodInfo* get() {
    static auto* sku = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_IAP_ConsumePurchase_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sku});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_IAP_GetProductsBySKU
// Il2CppName: ovr_IAP_GetProductsBySKU
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::ArrayW<::StringW>, int)>(&Oculus::Platform::CAPI::ovr_IAP_GetProductsBySKU)> {
  static const MethodInfo* get() {
    static auto* skus = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_IAP_GetProductsBySKU", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{skus, count});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_IAP_GetViewerPurchases
// Il2CppName: ovr_IAP_GetViewerPurchases
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_IAP_GetViewerPurchases)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_IAP_GetViewerPurchases", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_IAP_GetViewerPurchasesDurableCache
// Il2CppName: ovr_IAP_GetViewerPurchasesDurableCache
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_IAP_GetViewerPurchasesDurableCache)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_IAP_GetViewerPurchasesDurableCache", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_IAP_LaunchCheckoutFlow
// Il2CppName: ovr_IAP_LaunchCheckoutFlow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_IAP_LaunchCheckoutFlow)> {
  static const MethodInfo* get() {
    static auto* sku = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_IAP_LaunchCheckoutFlow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sku});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_IAP_LaunchCheckoutFlow_Native
// Il2CppName: ovr_IAP_LaunchCheckoutFlow_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_IAP_LaunchCheckoutFlow_Native)> {
  static const MethodInfo* get() {
    static auto* sku = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_IAP_LaunchCheckoutFlow_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sku});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LanguagePack_GetCurrent
// Il2CppName: ovr_LanguagePack_GetCurrent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_LanguagePack_GetCurrent)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LanguagePack_GetCurrent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LanguagePack_SetCurrent
// Il2CppName: ovr_LanguagePack_SetCurrent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_LanguagePack_SetCurrent)> {
  static const MethodInfo* get() {
    static auto* tag = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LanguagePack_SetCurrent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tag});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LanguagePack_SetCurrent_Native
// Il2CppName: ovr_LanguagePack_SetCurrent_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LanguagePack_SetCurrent_Native)> {
  static const MethodInfo* get() {
    static auto* tag = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LanguagePack_SetCurrent_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tag});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Leaderboard_Get
// Il2CppName: ovr_Leaderboard_Get
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_Leaderboard_Get)> {
  static const MethodInfo* get() {
    static auto* leaderboardName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Leaderboard_Get", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{leaderboardName});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Leaderboard_Get_Native
// Il2CppName: ovr_Leaderboard_Get_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Leaderboard_Get_Native)> {
  static const MethodInfo* get() {
    static auto* leaderboardName = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Leaderboard_Get_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{leaderboardName});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Leaderboard_GetEntries
// Il2CppName: ovr_Leaderboard_GetEntries
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW, int, ::Oculus::Platform::LeaderboardFilterType, ::Oculus::Platform::LeaderboardStartAt)>(&Oculus::Platform::CAPI::ovr_Leaderboard_GetEntries)> {
  static const MethodInfo* get() {
    static auto* leaderboardName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* limit = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* filter = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "LeaderboardFilterType")->byval_arg;
    static auto* startAt = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "LeaderboardStartAt")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Leaderboard_GetEntries", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{leaderboardName, limit, filter, startAt});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Leaderboard_GetEntries_Native
// Il2CppName: ovr_Leaderboard_GetEntries_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr, int, ::Oculus::Platform::LeaderboardFilterType, ::Oculus::Platform::LeaderboardStartAt)>(&Oculus::Platform::CAPI::ovr_Leaderboard_GetEntries_Native)> {
  static const MethodInfo* get() {
    static auto* leaderboardName = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* limit = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* filter = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "LeaderboardFilterType")->byval_arg;
    static auto* startAt = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "LeaderboardStartAt")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Leaderboard_GetEntries_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{leaderboardName, limit, filter, startAt});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesAfterRank
// Il2CppName: ovr_Leaderboard_GetEntriesAfterRank
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW, int, uint64_t)>(&Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesAfterRank)> {
  static const MethodInfo* get() {
    static auto* leaderboardName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* limit = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* afterRank = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Leaderboard_GetEntriesAfterRank", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{leaderboardName, limit, afterRank});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesAfterRank_Native
// Il2CppName: ovr_Leaderboard_GetEntriesAfterRank_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr, int, uint64_t)>(&Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesAfterRank_Native)> {
  static const MethodInfo* get() {
    static auto* leaderboardName = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* limit = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* afterRank = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Leaderboard_GetEntriesAfterRank_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{leaderboardName, limit, afterRank});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesByIds
// Il2CppName: ovr_Leaderboard_GetEntriesByIds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW, int, ::Oculus::Platform::LeaderboardStartAt, ::ArrayW<uint64_t>, uint)>(&Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesByIds)> {
  static const MethodInfo* get() {
    static auto* leaderboardName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* limit = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* startAt = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "LeaderboardStartAt")->byval_arg;
    static auto* userIDs = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt64"), 1)->byval_arg;
    static auto* userIDLength = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Leaderboard_GetEntriesByIds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{leaderboardName, limit, startAt, userIDs, userIDLength});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesByIds_Native
// Il2CppName: ovr_Leaderboard_GetEntriesByIds_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr, int, ::Oculus::Platform::LeaderboardStartAt, ::ArrayW<uint64_t>, uint)>(&Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesByIds_Native)> {
  static const MethodInfo* get() {
    static auto* leaderboardName = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* limit = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* startAt = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "LeaderboardStartAt")->byval_arg;
    static auto* userIDs = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt64"), 1)->byval_arg;
    static auto* userIDLength = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Leaderboard_GetEntriesByIds_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{leaderboardName, limit, startAt, userIDs, userIDLength});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Leaderboard_GetNextEntries
// Il2CppName: ovr_Leaderboard_GetNextEntries
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Leaderboard_GetNextEntries)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Leaderboard_GetNextEntries", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Leaderboard_GetPreviousEntries
// Il2CppName: ovr_Leaderboard_GetPreviousEntries
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Leaderboard_GetPreviousEntries)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Leaderboard_GetPreviousEntries", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Leaderboard_WriteEntry
// Il2CppName: ovr_Leaderboard_WriteEntry
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW, int64_t, ::ArrayW<uint8_t>, uint, bool)>(&Oculus::Platform::CAPI::ovr_Leaderboard_WriteEntry)> {
  static const MethodInfo* get() {
    static auto* leaderboardName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* score = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* extraData = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* extraDataLength = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* forceUpdate = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Leaderboard_WriteEntry", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{leaderboardName, score, extraData, extraDataLength, forceUpdate});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Leaderboard_WriteEntry_Native
// Il2CppName: ovr_Leaderboard_WriteEntry_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr, int64_t, ::ArrayW<uint8_t>, uint, bool)>(&Oculus::Platform::CAPI::ovr_Leaderboard_WriteEntry_Native)> {
  static const MethodInfo* get() {
    static auto* leaderboardName = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* score = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* extraData = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* extraDataLength = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* forceUpdate = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Leaderboard_WriteEntry_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{leaderboardName, score, extraData, extraDataLength, forceUpdate});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Leaderboard_WriteEntryWithSupplementaryMetric
// Il2CppName: ovr_Leaderboard_WriteEntryWithSupplementaryMetric
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW, int64_t, int64_t, ::ArrayW<uint8_t>, uint, bool)>(&Oculus::Platform::CAPI::ovr_Leaderboard_WriteEntryWithSupplementaryMetric)> {
  static const MethodInfo* get() {
    static auto* leaderboardName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* score = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* supplementaryMetric = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* extraData = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* extraDataLength = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* forceUpdate = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Leaderboard_WriteEntryWithSupplementaryMetric", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{leaderboardName, score, supplementaryMetric, extraData, extraDataLength, forceUpdate});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Leaderboard_WriteEntryWithSupplementaryMetric_Native
// Il2CppName: ovr_Leaderboard_WriteEntryWithSupplementaryMetric_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr, int64_t, int64_t, ::ArrayW<uint8_t>, uint, bool)>(&Oculus::Platform::CAPI::ovr_Leaderboard_WriteEntryWithSupplementaryMetric_Native)> {
  static const MethodInfo* get() {
    static auto* leaderboardName = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* score = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* supplementaryMetric = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* extraData = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* extraDataLength = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* forceUpdate = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Leaderboard_WriteEntryWithSupplementaryMetric_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{leaderboardName, score, supplementaryMetric, extraData, extraDataLength, forceUpdate});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Livestreaming_IsAllowedForApplication
// Il2CppName: ovr_Livestreaming_IsAllowedForApplication
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_Livestreaming_IsAllowedForApplication)> {
  static const MethodInfo* get() {
    static auto* packageName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Livestreaming_IsAllowedForApplication", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{packageName});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Livestreaming_IsAllowedForApplication_Native
// Il2CppName: ovr_Livestreaming_IsAllowedForApplication_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Livestreaming_IsAllowedForApplication_Native)> {
  static const MethodInfo* get() {
    static auto* packageName = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Livestreaming_IsAllowedForApplication_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{packageName});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Livestreaming_StartPartyStream
// Il2CppName: ovr_Livestreaming_StartPartyStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_Livestreaming_StartPartyStream)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Livestreaming_StartPartyStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Livestreaming_StartStream
// Il2CppName: ovr_Livestreaming_StartStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Oculus::Platform::LivestreamingAudience, ::Oculus::Platform::LivestreamingMicrophoneStatus)>(&Oculus::Platform::CAPI::ovr_Livestreaming_StartStream)> {
  static const MethodInfo* get() {
    static auto* audience = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "LivestreamingAudience")->byval_arg;
    static auto* micStatus = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "LivestreamingMicrophoneStatus")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Livestreaming_StartStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{audience, micStatus});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Livestreaming_StopPartyStream
// Il2CppName: ovr_Livestreaming_StopPartyStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_Livestreaming_StopPartyStream)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Livestreaming_StopPartyStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Livestreaming_StopStream
// Il2CppName: ovr_Livestreaming_StopStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_Livestreaming_StopStream)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Livestreaming_StopStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Livestreaming_UpdateMicStatus
// Il2CppName: ovr_Livestreaming_UpdateMicStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Oculus::Platform::LivestreamingMicrophoneStatus)>(&Oculus::Platform::CAPI::ovr_Livestreaming_UpdateMicStatus)> {
  static const MethodInfo* get() {
    static auto* micStatus = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "LivestreamingMicrophoneStatus")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Livestreaming_UpdateMicStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{micStatus});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Media_ShareToFacebook
// Il2CppName: ovr_Media_ShareToFacebook
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW, ::StringW, ::Oculus::Platform::MediaContentType)>(&Oculus::Platform::CAPI::ovr_Media_ShareToFacebook)> {
  static const MethodInfo* get() {
    static auto* postTextSuggestion = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* filePath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* contentType = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "MediaContentType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Media_ShareToFacebook", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{postTextSuggestion, filePath, contentType});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Media_ShareToFacebook_Native
// Il2CppName: ovr_Media_ShareToFacebook_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr, ::System::IntPtr, ::Oculus::Platform::MediaContentType)>(&Oculus::Platform::CAPI::ovr_Media_ShareToFacebook_Native)> {
  static const MethodInfo* get() {
    static auto* postTextSuggestion = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* filePath = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* contentType = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "MediaContentType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Media_ShareToFacebook_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{postTextSuggestion, filePath, contentType});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_Connect
// Il2CppName: ovr_NetSync_Connect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_NetSync_Connect)> {
  static const MethodInfo* get() {
    static auto* connect_options = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_Connect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{connect_options});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_Disconnect
// Il2CppName: ovr_NetSync_Disconnect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(int64_t)>(&Oculus::Platform::CAPI::ovr_NetSync_Disconnect)> {
  static const MethodInfo* get() {
    static auto* connection_id = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_Disconnect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{connection_id});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_GetSessions
// Il2CppName: ovr_NetSync_GetSessions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(int64_t)>(&Oculus::Platform::CAPI::ovr_NetSync_GetSessions)> {
  static const MethodInfo* get() {
    static auto* connection_id = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_GetSessions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{connection_id});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_GetVoipAttenuation
// Il2CppName: ovr_NetSync_GetVoipAttenuation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(int64_t)>(&Oculus::Platform::CAPI::ovr_NetSync_GetVoipAttenuation)> {
  static const MethodInfo* get() {
    static auto* connection_id = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_GetVoipAttenuation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{connection_id});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_GetVoipAttenuationDefault
// Il2CppName: ovr_NetSync_GetVoipAttenuationDefault
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_NetSync_GetVoipAttenuationDefault)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_GetVoipAttenuationDefault", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_SetVoipAttenuation
// Il2CppName: ovr_NetSync_SetVoipAttenuation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(int64_t, ::ArrayW<float>, ::ArrayW<float>, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_NetSync_SetVoipAttenuation)> {
  static const MethodInfo* get() {
    static auto* connection_id = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* distances = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    static auto* decibels = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_SetVoipAttenuation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{connection_id, distances, decibels, count});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_SetVoipAttenuationModel
// Il2CppName: ovr_NetSync_SetVoipAttenuationModel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(int64_t, ::StringW, ::ArrayW<float>, ::ArrayW<float>, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_NetSync_SetVoipAttenuationModel)> {
  static const MethodInfo* get() {
    static auto* connection_id = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* distances = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    static auto* decibels = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_SetVoipAttenuationModel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{connection_id, name, distances, decibels, count});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_SetVoipAttenuationModel_Native
// Il2CppName: ovr_NetSync_SetVoipAttenuationModel_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(int64_t, ::System::IntPtr, ::ArrayW<float>, ::ArrayW<float>, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_NetSync_SetVoipAttenuationModel_Native)> {
  static const MethodInfo* get() {
    static auto* connection_id = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* distances = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    static auto* decibels = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_SetVoipAttenuationModel_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{connection_id, name, distances, decibels, count});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_SetVoipChannelCfg
// Il2CppName: ovr_NetSync_SetVoipChannelCfg
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(int64_t, ::StringW, ::StringW, bool)>(&Oculus::Platform::CAPI::ovr_NetSync_SetVoipChannelCfg)> {
  static const MethodInfo* get() {
    static auto* connection_id = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* channel_name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* attnmodel = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* disable_spatialization = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_SetVoipChannelCfg", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{connection_id, channel_name, attnmodel, disable_spatialization});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_SetVoipChannelCfg_Native
// Il2CppName: ovr_NetSync_SetVoipChannelCfg_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(int64_t, ::System::IntPtr, ::System::IntPtr, bool)>(&Oculus::Platform::CAPI::ovr_NetSync_SetVoipChannelCfg_Native)> {
  static const MethodInfo* get() {
    static auto* connection_id = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* channel_name = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* attnmodel = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* disable_spatialization = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_SetVoipChannelCfg_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{connection_id, channel_name, attnmodel, disable_spatialization});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_SetVoipGroup
// Il2CppName: ovr_NetSync_SetVoipGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(int64_t, ::StringW)>(&Oculus::Platform::CAPI::ovr_NetSync_SetVoipGroup)> {
  static const MethodInfo* get() {
    static auto* connection_id = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* group_id = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_SetVoipGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{connection_id, group_id});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_SetVoipGroup_Native
// Il2CppName: ovr_NetSync_SetVoipGroup_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(int64_t, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_NetSync_SetVoipGroup_Native)> {
  static const MethodInfo* get() {
    static auto* connection_id = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* group_id = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_SetVoipGroup_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{connection_id, group_id});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_SetVoipListentoChannels
// Il2CppName: ovr_NetSync_SetVoipListentoChannels
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(int64_t, ::ArrayW<::StringW>, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_NetSync_SetVoipListentoChannels)> {
  static const MethodInfo* get() {
    static auto* connection_id = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* listento_channels = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_SetVoipListentoChannels", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{connection_id, listento_channels, count});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_SetVoipMicSource
// Il2CppName: ovr_NetSync_SetVoipMicSource
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(int64_t, ::Oculus::Platform::NetSyncVoipMicSource)>(&Oculus::Platform::CAPI::ovr_NetSync_SetVoipMicSource)> {
  static const MethodInfo* get() {
    static auto* connection_id = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* mic_source = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "NetSyncVoipMicSource")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_SetVoipMicSource", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{connection_id, mic_source});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_SetVoipSessionMuted
// Il2CppName: ovr_NetSync_SetVoipSessionMuted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(int64_t, uint64_t, bool)>(&Oculus::Platform::CAPI::ovr_NetSync_SetVoipSessionMuted)> {
  static const MethodInfo* get() {
    static auto* connection_id = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* session_id = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* muted = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_SetVoipSessionMuted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{connection_id, session_id, muted});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_SetVoipSpeaktoChannels
// Il2CppName: ovr_NetSync_SetVoipSpeaktoChannels
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(int64_t, ::ArrayW<::StringW>, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_NetSync_SetVoipSpeaktoChannels)> {
  static const MethodInfo* get() {
    static auto* connection_id = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* speakto_channels = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_SetVoipSpeaktoChannels", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{connection_id, speakto_channels, count});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_SetVoipStreamMode
// Il2CppName: ovr_NetSync_SetVoipStreamMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(int64_t, uint64_t, ::Oculus::Platform::NetSyncVoipStreamMode)>(&Oculus::Platform::CAPI::ovr_NetSync_SetVoipStreamMode)> {
  static const MethodInfo* get() {
    static auto* connection_id = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* streamMode = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "NetSyncVoipStreamMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_SetVoipStreamMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{connection_id, sessionId, streamMode});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Notification_MarkAsRead
// Il2CppName: ovr_Notification_MarkAsRead
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_Notification_MarkAsRead)> {
  static const MethodInfo* get() {
    static auto* notificationID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Notification_MarkAsRead", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{notificationID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Party_Create
// Il2CppName: ovr_Party_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_Party_Create)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Party_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Party_GatherInApplication
// Il2CppName: ovr_Party_GatherInApplication
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, uint64_t)>(&Oculus::Platform::CAPI::ovr_Party_GatherInApplication)> {
  static const MethodInfo* get() {
    static auto* partyID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* appID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Party_GatherInApplication", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{partyID, appID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Party_Get
// Il2CppName: ovr_Party_Get
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_Party_Get)> {
  static const MethodInfo* get() {
    static auto* partyID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Party_Get", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{partyID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Party_GetCurrent
// Il2CppName: ovr_Party_GetCurrent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_Party_GetCurrent)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Party_GetCurrent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Party_GetCurrentForUser
// Il2CppName: ovr_Party_GetCurrentForUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_Party_GetCurrentForUser)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Party_GetCurrentForUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Party_Invite
// Il2CppName: ovr_Party_Invite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, uint64_t)>(&Oculus::Platform::CAPI::ovr_Party_Invite)> {
  static const MethodInfo* get() {
    static auto* partyID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Party_Invite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{partyID, userID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Party_Join
// Il2CppName: ovr_Party_Join
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_Party_Join)> {
  static const MethodInfo* get() {
    static auto* partyID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Party_Join", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{partyID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Party_Leave
// Il2CppName: ovr_Party_Leave
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_Party_Leave)> {
  static const MethodInfo* get() {
    static auto* partyID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Party_Leave", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{partyID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RichPresence_Clear
// Il2CppName: ovr_RichPresence_Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_RichPresence_Clear)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RichPresence_Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RichPresence_GetDestinations
// Il2CppName: ovr_RichPresence_GetDestinations
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_RichPresence_GetDestinations)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RichPresence_GetDestinations", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RichPresence_Set
// Il2CppName: ovr_RichPresence_Set
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_RichPresence_Set)> {
  static const MethodInfo* get() {
    static auto* richPresenceOptions = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RichPresence_Set", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{richPresenceOptions});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RichPresence_SetDestination
// Il2CppName: ovr_RichPresence_SetDestination
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_RichPresence_SetDestination)> {
  static const MethodInfo* get() {
    static auto* api_name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RichPresence_SetDestination", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{api_name});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RichPresence_SetDestination_Native
// Il2CppName: ovr_RichPresence_SetDestination_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_RichPresence_SetDestination_Native)> {
  static const MethodInfo* get() {
    static auto* api_name = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RichPresence_SetDestination_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{api_name});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RichPresence_SetIsJoinable
// Il2CppName: ovr_RichPresence_SetIsJoinable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(bool)>(&Oculus::Platform::CAPI::ovr_RichPresence_SetIsJoinable)> {
  static const MethodInfo* get() {
    static auto* is_joinable = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RichPresence_SetIsJoinable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{is_joinable});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RichPresence_SetLobbySession
// Il2CppName: ovr_RichPresence_SetLobbySession
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_RichPresence_SetLobbySession)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RichPresence_SetLobbySession", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RichPresence_SetLobbySession_Native
// Il2CppName: ovr_RichPresence_SetLobbySession_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_RichPresence_SetLobbySession_Native)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RichPresence_SetLobbySession_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RichPresence_SetMatchSession
// Il2CppName: ovr_RichPresence_SetMatchSession
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_RichPresence_SetMatchSession)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RichPresence_SetMatchSession", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RichPresence_SetMatchSession_Native
// Il2CppName: ovr_RichPresence_SetMatchSession_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_RichPresence_SetMatchSession_Native)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RichPresence_SetMatchSession_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_CancelRecordingForReportFlow
// Il2CppName: ovr_User_CancelRecordingForReportFlow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_User_CancelRecordingForReportFlow)> {
  static const MethodInfo* get() {
    static auto* recordingUUID = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_CancelRecordingForReportFlow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{recordingUUID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_CancelRecordingForReportFlow_Native
// Il2CppName: ovr_User_CancelRecordingForReportFlow_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_CancelRecordingForReportFlow_Native)> {
  static const MethodInfo* get() {
    static auto* recordingUUID = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_CancelRecordingForReportFlow_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{recordingUUID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_Get
// Il2CppName: ovr_User_Get
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_User_Get)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_Get", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetAccessToken
// Il2CppName: ovr_User_GetAccessToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_User_GetAccessToken)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetAccessToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetBlockedUsers
// Il2CppName: ovr_User_GetBlockedUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_User_GetBlockedUsers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetBlockedUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetLinkedAccounts
// Il2CppName: ovr_User_GetLinkedAccounts
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_GetLinkedAccounts)> {
  static const MethodInfo* get() {
    static auto* userOptions = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetLinkedAccounts", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userOptions});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetLoggedInUser
// Il2CppName: ovr_User_GetLoggedInUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_User_GetLoggedInUser)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetLoggedInUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetLoggedInUserFriends
// Il2CppName: ovr_User_GetLoggedInUserFriends
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_User_GetLoggedInUserFriends)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetLoggedInUserFriends", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetOrgScopedID
// Il2CppName: ovr_User_GetOrgScopedID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_User_GetOrgScopedID)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetOrgScopedID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetSdkAccounts
// Il2CppName: ovr_User_GetSdkAccounts
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_User_GetSdkAccounts)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetSdkAccounts", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetUserCapabilities
// Il2CppName: ovr_User_GetUserCapabilities
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_User_GetUserCapabilities)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetUserCapabilities", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetUserProof
// Il2CppName: ovr_User_GetUserProof
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_User_GetUserProof)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetUserProof", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_LaunchBlockFlow
// Il2CppName: ovr_User_LaunchBlockFlow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_User_LaunchBlockFlow)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_LaunchBlockFlow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_LaunchFriendRequestFlow
// Il2CppName: ovr_User_LaunchFriendRequestFlow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_User_LaunchFriendRequestFlow)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_LaunchFriendRequestFlow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_LaunchReportFlow
// Il2CppName: ovr_User_LaunchReportFlow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_User_LaunchReportFlow)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_LaunchReportFlow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_LaunchReportFlow2
// Il2CppName: ovr_User_LaunchReportFlow2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_LaunchReportFlow2)> {
  static const MethodInfo* get() {
    static auto* optionalUserID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* abuseReportOptions = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_LaunchReportFlow2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{optionalUserID, abuseReportOptions});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_LaunchUnblockFlow
// Il2CppName: ovr_User_LaunchUnblockFlow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_User_LaunchUnblockFlow)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_LaunchUnblockFlow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_NewEntitledTestUser
// Il2CppName: ovr_User_NewEntitledTestUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_User_NewEntitledTestUser)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_NewEntitledTestUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_NewTestUser
// Il2CppName: ovr_User_NewTestUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_User_NewTestUser)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_NewTestUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_NewTestUserFriends
// Il2CppName: ovr_User_NewTestUserFriends
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_User_NewTestUserFriends)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_NewTestUserFriends", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_StartRecordingForReportFlow
// Il2CppName: ovr_User_StartRecordingForReportFlow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_User_StartRecordingForReportFlow)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_StartRecordingForReportFlow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow
// Il2CppName: ovr_User_StopRecordingAndLaunchReportFlow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::StringW)>(&Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow)> {
  static const MethodInfo* get() {
    static auto* optionalUserID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* optionalRecordingUUID = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_StopRecordingAndLaunchReportFlow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{optionalUserID, optionalRecordingUUID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow_Native
// Il2CppName: ovr_User_StopRecordingAndLaunchReportFlow_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow_Native)> {
  static const MethodInfo* get() {
    static auto* optionalUserID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* optionalRecordingUUID = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_StopRecordingAndLaunchReportFlow_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{optionalUserID, optionalRecordingUUID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow2
// Il2CppName: ovr_User_StopRecordingAndLaunchReportFlow2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::StringW, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow2)> {
  static const MethodInfo* get() {
    static auto* optionalUserID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* optionalRecordingUUID = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* abuseReportOptions = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_StopRecordingAndLaunchReportFlow2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{optionalUserID, optionalRecordingUUID, abuseReportOptions});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow2_Native
// Il2CppName: ovr_User_StopRecordingAndLaunchReportFlow2_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow2_Native)> {
  static const MethodInfo* get() {
    static auto* optionalUserID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* optionalRecordingUUID = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* abuseReportOptions = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_StopRecordingAndLaunchReportFlow2_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{optionalUserID, optionalRecordingUUID, abuseReportOptions});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_TestUserCreateDeviceManifest
// Il2CppName: ovr_User_TestUserCreateDeviceManifest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW, ::ArrayW<uint64_t>, int)>(&Oculus::Platform::CAPI::ovr_User_TestUserCreateDeviceManifest)> {
  static const MethodInfo* get() {
    static auto* deviceID = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* appIDs = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt64"), 1)->byval_arg;
    static auto* numAppIDs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_TestUserCreateDeviceManifest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{deviceID, appIDs, numAppIDs});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_TestUserCreateDeviceManifest_Native
// Il2CppName: ovr_User_TestUserCreateDeviceManifest_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr, ::ArrayW<uint64_t>, int)>(&Oculus::Platform::CAPI::ovr_User_TestUserCreateDeviceManifest_Native)> {
  static const MethodInfo* get() {
    static auto* deviceID = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* appIDs = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt64"), 1)->byval_arg;
    static auto* numAppIDs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_TestUserCreateDeviceManifest_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{deviceID, appIDs, numAppIDs});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserAgeCategory_Get
// Il2CppName: ovr_UserAgeCategory_Get
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_UserAgeCategory_Get)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserAgeCategory_Get", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserAgeCategory_Report
// Il2CppName: ovr_UserAgeCategory_Report
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Oculus::Platform::AppAgeCategory)>(&Oculus::Platform::CAPI::ovr_UserAgeCategory_Report)> {
  static const MethodInfo* get() {
    static auto* age_category = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "AppAgeCategory")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserAgeCategory_Report", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{age_category});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserDataStore_PrivateDeleteEntryByKey
// Il2CppName: ovr_UserDataStore_PrivateDeleteEntryByKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::StringW)>(&Oculus::Platform::CAPI::ovr_UserDataStore_PrivateDeleteEntryByKey)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserDataStore_PrivateDeleteEntryByKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID, key});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserDataStore_PrivateDeleteEntryByKey_Native
// Il2CppName: ovr_UserDataStore_PrivateDeleteEntryByKey_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UserDataStore_PrivateDeleteEntryByKey_Native)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserDataStore_PrivateDeleteEntryByKey_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID, key});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserDataStore_PrivateGetEntries
// Il2CppName: ovr_UserDataStore_PrivateGetEntries
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_UserDataStore_PrivateGetEntries)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserDataStore_PrivateGetEntries", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserDataStore_PrivateGetEntryByKey
// Il2CppName: ovr_UserDataStore_PrivateGetEntryByKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::StringW)>(&Oculus::Platform::CAPI::ovr_UserDataStore_PrivateGetEntryByKey)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserDataStore_PrivateGetEntryByKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID, key});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserDataStore_PrivateGetEntryByKey_Native
// Il2CppName: ovr_UserDataStore_PrivateGetEntryByKey_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UserDataStore_PrivateGetEntryByKey_Native)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserDataStore_PrivateGetEntryByKey_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID, key});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserDataStore_PrivateWriteEntry
// Il2CppName: ovr_UserDataStore_PrivateWriteEntry
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::StringW, ::StringW)>(&Oculus::Platform::CAPI::ovr_UserDataStore_PrivateWriteEntry)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserDataStore_PrivateWriteEntry", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID, key, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserDataStore_PrivateWriteEntry_Native
// Il2CppName: ovr_UserDataStore_PrivateWriteEntry_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UserDataStore_PrivateWriteEntry_Native)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserDataStore_PrivateWriteEntry_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID, key, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserDataStore_PublicDeleteEntryByKey
// Il2CppName: ovr_UserDataStore_PublicDeleteEntryByKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::StringW)>(&Oculus::Platform::CAPI::ovr_UserDataStore_PublicDeleteEntryByKey)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserDataStore_PublicDeleteEntryByKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID, key});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserDataStore_PublicDeleteEntryByKey_Native
// Il2CppName: ovr_UserDataStore_PublicDeleteEntryByKey_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UserDataStore_PublicDeleteEntryByKey_Native)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserDataStore_PublicDeleteEntryByKey_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID, key});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserDataStore_PublicGetEntries
// Il2CppName: ovr_UserDataStore_PublicGetEntries
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_UserDataStore_PublicGetEntries)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserDataStore_PublicGetEntries", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserDataStore_PublicGetEntryByKey
// Il2CppName: ovr_UserDataStore_PublicGetEntryByKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::StringW)>(&Oculus::Platform::CAPI::ovr_UserDataStore_PublicGetEntryByKey)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserDataStore_PublicGetEntryByKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID, key});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserDataStore_PublicGetEntryByKey_Native
// Il2CppName: ovr_UserDataStore_PublicGetEntryByKey_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UserDataStore_PublicGetEntryByKey_Native)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserDataStore_PublicGetEntryByKey_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID, key});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserDataStore_PublicWriteEntry
// Il2CppName: ovr_UserDataStore_PublicWriteEntry
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::StringW, ::StringW)>(&Oculus::Platform::CAPI::ovr_UserDataStore_PublicWriteEntry)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserDataStore_PublicWriteEntry", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID, key, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserDataStore_PublicWriteEntry_Native
// Il2CppName: ovr_UserDataStore_PublicWriteEntry_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UserDataStore_PublicWriteEntry_Native)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserDataStore_PublicWriteEntry_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID, key, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_GetMicrophoneAvailability
// Il2CppName: ovr_Voip_GetMicrophoneAvailability
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_Voip_GetMicrophoneAvailability)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_GetMicrophoneAvailability", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_ReportAppVoipSessions
// Il2CppName: ovr_Voip_ReportAppVoipSessions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::ArrayW<uint64_t>)>(&Oculus::Platform::CAPI::ovr_Voip_ReportAppVoipSessions)> {
  static const MethodInfo* get() {
    static auto* sessionIDs = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt64"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_ReportAppVoipSessions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionIDs});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_SetSystemVoipSuppressed
// Il2CppName: ovr_Voip_SetSystemVoipSuppressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(bool)>(&Oculus::Platform::CAPI::ovr_Voip_SetSystemVoipSuppressed)> {
  static const MethodInfo* get() {
    static auto* suppressed = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_SetSystemVoipSuppressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{suppressed});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AbuseReportRecording_GetRecordingUuid
// Il2CppName: ovr_AbuseReportRecording_GetRecordingUuid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AbuseReportRecording_GetRecordingUuid)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AbuseReportRecording_GetRecordingUuid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AbuseReportRecording_GetRecordingUuid_Native
// Il2CppName: ovr_AbuseReportRecording_GetRecordingUuid_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AbuseReportRecording_GetRecordingUuid_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AbuseReportRecording_GetRecordingUuid_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AchievementDefinition_GetBitfieldLength
// Il2CppName: ovr_AchievementDefinition_GetBitfieldLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AchievementDefinition_GetBitfieldLength)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AchievementDefinition_GetBitfieldLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AchievementDefinition_GetName
// Il2CppName: ovr_AchievementDefinition_GetName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AchievementDefinition_GetName)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AchievementDefinition_GetName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AchievementDefinition_GetName_Native
// Il2CppName: ovr_AchievementDefinition_GetName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AchievementDefinition_GetName_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AchievementDefinition_GetName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AchievementDefinition_GetTarget
// Il2CppName: ovr_AchievementDefinition_GetTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AchievementDefinition_GetTarget)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AchievementDefinition_GetTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AchievementDefinition_GetType
// Il2CppName: ovr_AchievementDefinition_GetType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::AchievementType (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AchievementDefinition_GetType)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AchievementDefinition_GetType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetElement
// Il2CppName: ovr_AchievementDefinitionArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetElement)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AchievementDefinitionArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetNextUrl
// Il2CppName: ovr_AchievementDefinitionArray_GetNextUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetNextUrl)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AchievementDefinitionArray_GetNextUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetNextUrl_Native
// Il2CppName: ovr_AchievementDefinitionArray_GetNextUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetNextUrl_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AchievementDefinitionArray_GetNextUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetSize
// Il2CppName: ovr_AchievementDefinitionArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AchievementDefinitionArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_HasNextPage
// Il2CppName: ovr_AchievementDefinitionArray_HasNextPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_HasNextPage)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AchievementDefinitionArray_HasNextPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AchievementProgress_GetBitfield
// Il2CppName: ovr_AchievementProgress_GetBitfield
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AchievementProgress_GetBitfield)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AchievementProgress_GetBitfield", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AchievementProgress_GetBitfield_Native
// Il2CppName: ovr_AchievementProgress_GetBitfield_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AchievementProgress_GetBitfield_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AchievementProgress_GetBitfield_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AchievementProgress_GetCount
// Il2CppName: ovr_AchievementProgress_GetCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AchievementProgress_GetCount)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AchievementProgress_GetCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AchievementProgress_GetIsUnlocked
// Il2CppName: ovr_AchievementProgress_GetIsUnlocked
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AchievementProgress_GetIsUnlocked)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AchievementProgress_GetIsUnlocked", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AchievementProgress_GetName
// Il2CppName: ovr_AchievementProgress_GetName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AchievementProgress_GetName)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AchievementProgress_GetName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AchievementProgress_GetName_Native
// Il2CppName: ovr_AchievementProgress_GetName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AchievementProgress_GetName_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AchievementProgress_GetName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AchievementProgress_GetUnlockTime
// Il2CppName: ovr_AchievementProgress_GetUnlockTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::DateTime (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AchievementProgress_GetUnlockTime)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AchievementProgress_GetUnlockTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AchievementProgress_GetUnlockTime_Native
// Il2CppName: ovr_AchievementProgress_GetUnlockTime_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AchievementProgress_GetUnlockTime_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AchievementProgress_GetUnlockTime_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetElement
// Il2CppName: ovr_AchievementProgressArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetElement)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AchievementProgressArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetNextUrl
// Il2CppName: ovr_AchievementProgressArray_GetNextUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetNextUrl)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AchievementProgressArray_GetNextUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetNextUrl_Native
// Il2CppName: ovr_AchievementProgressArray_GetNextUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetNextUrl_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AchievementProgressArray_GetNextUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetSize
// Il2CppName: ovr_AchievementProgressArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AchievementProgressArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AchievementProgressArray_HasNextPage
// Il2CppName: ovr_AchievementProgressArray_HasNextPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AchievementProgressArray_HasNextPage)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AchievementProgressArray_HasNextPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AchievementUpdate_GetJustUnlocked
// Il2CppName: ovr_AchievementUpdate_GetJustUnlocked
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AchievementUpdate_GetJustUnlocked)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AchievementUpdate_GetJustUnlocked", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AchievementUpdate_GetName
// Il2CppName: ovr_AchievementUpdate_GetName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AchievementUpdate_GetName)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AchievementUpdate_GetName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AchievementUpdate_GetName_Native
// Il2CppName: ovr_AchievementUpdate_GetName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AchievementUpdate_GetName_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AchievementUpdate_GetName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AppDownloadProgressResult_GetDownloadBytes
// Il2CppName: ovr_AppDownloadProgressResult_GetDownloadBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AppDownloadProgressResult_GetDownloadBytes)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AppDownloadProgressResult_GetDownloadBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AppDownloadProgressResult_GetDownloadedBytes
// Il2CppName: ovr_AppDownloadProgressResult_GetDownloadedBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AppDownloadProgressResult_GetDownloadedBytes)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AppDownloadProgressResult_GetDownloadedBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AppDownloadProgressResult_GetStatusCode
// Il2CppName: ovr_AppDownloadProgressResult_GetStatusCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::AppStatus (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AppDownloadProgressResult_GetStatusCode)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AppDownloadProgressResult_GetStatusCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AppDownloadResult_GetTimestamp
// Il2CppName: ovr_AppDownloadResult_GetTimestamp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AppDownloadResult_GetTimestamp)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AppDownloadResult_GetTimestamp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Application_GetID
// Il2CppName: ovr_Application_GetID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Application_GetID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Application_GetID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationInvite_GetDestination
// Il2CppName: ovr_ApplicationInvite_GetDestination
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ApplicationInvite_GetDestination)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationInvite_GetDestination", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationInvite_GetID
// Il2CppName: ovr_ApplicationInvite_GetID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ApplicationInvite_GetID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationInvite_GetID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationInvite_GetIsActive
// Il2CppName: ovr_ApplicationInvite_GetIsActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ApplicationInvite_GetIsActive)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationInvite_GetIsActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationInvite_GetLobbySessionId
// Il2CppName: ovr_ApplicationInvite_GetLobbySessionId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ApplicationInvite_GetLobbySessionId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationInvite_GetLobbySessionId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationInvite_GetLobbySessionId_Native
// Il2CppName: ovr_ApplicationInvite_GetLobbySessionId_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ApplicationInvite_GetLobbySessionId_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationInvite_GetLobbySessionId_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationInvite_GetMatchSessionId
// Il2CppName: ovr_ApplicationInvite_GetMatchSessionId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ApplicationInvite_GetMatchSessionId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationInvite_GetMatchSessionId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationInvite_GetMatchSessionId_Native
// Il2CppName: ovr_ApplicationInvite_GetMatchSessionId_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ApplicationInvite_GetMatchSessionId_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationInvite_GetMatchSessionId_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationInvite_GetRecipient
// Il2CppName: ovr_ApplicationInvite_GetRecipient
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ApplicationInvite_GetRecipient)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationInvite_GetRecipient", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationInviteArray_GetElement
// Il2CppName: ovr_ApplicationInviteArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_ApplicationInviteArray_GetElement)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationInviteArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationInviteArray_GetNextUrl
// Il2CppName: ovr_ApplicationInviteArray_GetNextUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ApplicationInviteArray_GetNextUrl)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationInviteArray_GetNextUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationInviteArray_GetNextUrl_Native
// Il2CppName: ovr_ApplicationInviteArray_GetNextUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ApplicationInviteArray_GetNextUrl_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationInviteArray_GetNextUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationInviteArray_GetSize
// Il2CppName: ovr_ApplicationInviteArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ApplicationInviteArray_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationInviteArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationInviteArray_HasNextPage
// Il2CppName: ovr_ApplicationInviteArray_HasNextPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ApplicationInviteArray_HasNextPage)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationInviteArray_HasNextPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationVersion_GetCurrentCode
// Il2CppName: ovr_ApplicationVersion_GetCurrentCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ApplicationVersion_GetCurrentCode)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationVersion_GetCurrentCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationVersion_GetCurrentName
// Il2CppName: ovr_ApplicationVersion_GetCurrentName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ApplicationVersion_GetCurrentName)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationVersion_GetCurrentName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationVersion_GetCurrentName_Native
// Il2CppName: ovr_ApplicationVersion_GetCurrentName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ApplicationVersion_GetCurrentName_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationVersion_GetCurrentName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationVersion_GetLatestCode
// Il2CppName: ovr_ApplicationVersion_GetLatestCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ApplicationVersion_GetLatestCode)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationVersion_GetLatestCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationVersion_GetLatestName
// Il2CppName: ovr_ApplicationVersion_GetLatestName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ApplicationVersion_GetLatestName)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationVersion_GetLatestName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationVersion_GetLatestName_Native
// Il2CppName: ovr_ApplicationVersion_GetLatestName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ApplicationVersion_GetLatestName_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationVersion_GetLatestName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationVersion_GetReleaseDate
// Il2CppName: ovr_ApplicationVersion_GetReleaseDate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ApplicationVersion_GetReleaseDate)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationVersion_GetReleaseDate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationVersion_GetSize
// Il2CppName: ovr_ApplicationVersion_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ApplicationVersion_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationVersion_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationVersion_GetSize_Native
// Il2CppName: ovr_ApplicationVersion_GetSize_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ApplicationVersion_GetSize_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationVersion_GetSize_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetDetails_GetAssetId
// Il2CppName: ovr_AssetDetails_GetAssetId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetDetails_GetAssetId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetDetails_GetAssetId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetDetails_GetAssetType
// Il2CppName: ovr_AssetDetails_GetAssetType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetDetails_GetAssetType)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetDetails_GetAssetType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetDetails_GetAssetType_Native
// Il2CppName: ovr_AssetDetails_GetAssetType_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetDetails_GetAssetType_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetDetails_GetAssetType_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetDetails_GetDownloadStatus
// Il2CppName: ovr_AssetDetails_GetDownloadStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetDetails_GetDownloadStatus)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetDetails_GetDownloadStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetDetails_GetDownloadStatus_Native
// Il2CppName: ovr_AssetDetails_GetDownloadStatus_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetDetails_GetDownloadStatus_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetDetails_GetDownloadStatus_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetDetails_GetFilepath
// Il2CppName: ovr_AssetDetails_GetFilepath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetDetails_GetFilepath)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetDetails_GetFilepath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetDetails_GetFilepath_Native
// Il2CppName: ovr_AssetDetails_GetFilepath_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetDetails_GetFilepath_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetDetails_GetFilepath_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetDetails_GetIapStatus
// Il2CppName: ovr_AssetDetails_GetIapStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetDetails_GetIapStatus)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetDetails_GetIapStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetDetails_GetIapStatus_Native
// Il2CppName: ovr_AssetDetails_GetIapStatus_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetDetails_GetIapStatus_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetDetails_GetIapStatus_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetDetails_GetLanguage
// Il2CppName: ovr_AssetDetails_GetLanguage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetDetails_GetLanguage)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetDetails_GetLanguage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetDetails_GetMetadata
// Il2CppName: ovr_AssetDetails_GetMetadata
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetDetails_GetMetadata)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetDetails_GetMetadata", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetDetails_GetMetadata_Native
// Il2CppName: ovr_AssetDetails_GetMetadata_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetDetails_GetMetadata_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetDetails_GetMetadata_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetDetailsArray_GetElement
// Il2CppName: ovr_AssetDetailsArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_AssetDetailsArray_GetElement)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetDetailsArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetDetailsArray_GetSize
// Il2CppName: ovr_AssetDetailsArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetDetailsArray_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetDetailsArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetAssetFileId
// Il2CppName: ovr_AssetFileDeleteResult_GetAssetFileId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetAssetFileId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFileDeleteResult_GetAssetFileId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetAssetId
// Il2CppName: ovr_AssetFileDeleteResult_GetAssetId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetAssetId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFileDeleteResult_GetAssetId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetFilepath
// Il2CppName: ovr_AssetFileDeleteResult_GetFilepath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetFilepath)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFileDeleteResult_GetFilepath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetFilepath_Native
// Il2CppName: ovr_AssetFileDeleteResult_GetFilepath_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetFilepath_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFileDeleteResult_GetFilepath_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetSuccess
// Il2CppName: ovr_AssetFileDeleteResult_GetSuccess
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetSuccess)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFileDeleteResult_GetSuccess", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetAssetFileId
// Il2CppName: ovr_AssetFileDownloadCancelResult_GetAssetFileId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetAssetFileId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFileDownloadCancelResult_GetAssetFileId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetAssetId
// Il2CppName: ovr_AssetFileDownloadCancelResult_GetAssetId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetAssetId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFileDownloadCancelResult_GetAssetId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetFilepath
// Il2CppName: ovr_AssetFileDownloadCancelResult_GetFilepath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetFilepath)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFileDownloadCancelResult_GetFilepath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetFilepath_Native
// Il2CppName: ovr_AssetFileDownloadCancelResult_GetFilepath_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetFilepath_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFileDownloadCancelResult_GetFilepath_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetSuccess
// Il2CppName: ovr_AssetFileDownloadCancelResult_GetSuccess
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetSuccess)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFileDownloadCancelResult_GetSuccess", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFileDownloadResult_GetAssetId
// Il2CppName: ovr_AssetFileDownloadResult_GetAssetId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetFileDownloadResult_GetAssetId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFileDownloadResult_GetAssetId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFileDownloadResult_GetFilepath
// Il2CppName: ovr_AssetFileDownloadResult_GetFilepath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetFileDownloadResult_GetFilepath)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFileDownloadResult_GetFilepath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFileDownloadResult_GetFilepath_Native
// Il2CppName: ovr_AssetFileDownloadResult_GetFilepath_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetFileDownloadResult_GetFilepath_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFileDownloadResult_GetFilepath_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetAssetFileId
// Il2CppName: ovr_AssetFileDownloadUpdate_GetAssetFileId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetAssetFileId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFileDownloadUpdate_GetAssetFileId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetAssetId
// Il2CppName: ovr_AssetFileDownloadUpdate_GetAssetId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetAssetId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFileDownloadUpdate_GetAssetId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetBytesTotal
// Il2CppName: ovr_AssetFileDownloadUpdate_GetBytesTotal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetBytesTotal)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFileDownloadUpdate_GetBytesTotal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetBytesTotalLong
// Il2CppName: ovr_AssetFileDownloadUpdate_GetBytesTotalLong
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetBytesTotalLong)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFileDownloadUpdate_GetBytesTotalLong", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetBytesTransferred
// Il2CppName: ovr_AssetFileDownloadUpdate_GetBytesTransferred
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetBytesTransferred)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFileDownloadUpdate_GetBytesTransferred", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetBytesTransferredLong
// Il2CppName: ovr_AssetFileDownloadUpdate_GetBytesTransferredLong
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetBytesTransferredLong)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFileDownloadUpdate_GetBytesTransferredLong", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetCompleted
// Il2CppName: ovr_AssetFileDownloadUpdate_GetCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetCompleted)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFileDownloadUpdate_GetCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AvatarEditorResult_GetRequestSent
// Il2CppName: ovr_AvatarEditorResult_GetRequestSent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AvatarEditorResult_GetRequestSent)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AvatarEditorResult_GetRequestSent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_BlockedUser_GetId
// Il2CppName: ovr_BlockedUser_GetId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_BlockedUser_GetId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_BlockedUser_GetId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_BlockedUserArray_GetElement
// Il2CppName: ovr_BlockedUserArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_BlockedUserArray_GetElement)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_BlockedUserArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_BlockedUserArray_GetNextUrl
// Il2CppName: ovr_BlockedUserArray_GetNextUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_BlockedUserArray_GetNextUrl)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_BlockedUserArray_GetNextUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_BlockedUserArray_GetNextUrl_Native
// Il2CppName: ovr_BlockedUserArray_GetNextUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_BlockedUserArray_GetNextUrl_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_BlockedUserArray_GetNextUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_BlockedUserArray_GetSize
// Il2CppName: ovr_BlockedUserArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_BlockedUserArray_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_BlockedUserArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_BlockedUserArray_HasNextPage
// Il2CppName: ovr_BlockedUserArray_HasNextPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_BlockedUserArray_HasNextPage)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_BlockedUserArray_HasNextPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenge_GetCreationType
// Il2CppName: ovr_Challenge_GetCreationType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::ChallengeCreationType (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Challenge_GetCreationType)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenge_GetCreationType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenge_GetDescription
// Il2CppName: ovr_Challenge_GetDescription
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Challenge_GetDescription)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenge_GetDescription", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenge_GetDescription_Native
// Il2CppName: ovr_Challenge_GetDescription_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Challenge_GetDescription_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenge_GetDescription_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenge_GetEndDate
// Il2CppName: ovr_Challenge_GetEndDate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::DateTime (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Challenge_GetEndDate)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenge_GetEndDate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenge_GetEndDate_Native
// Il2CppName: ovr_Challenge_GetEndDate_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Challenge_GetEndDate_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenge_GetEndDate_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenge_GetID
// Il2CppName: ovr_Challenge_GetID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Challenge_GetID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenge_GetID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenge_GetInvitedUsers
// Il2CppName: ovr_Challenge_GetInvitedUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Challenge_GetInvitedUsers)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenge_GetInvitedUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenge_GetLeaderboard
// Il2CppName: ovr_Challenge_GetLeaderboard
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Challenge_GetLeaderboard)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenge_GetLeaderboard", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenge_GetParticipants
// Il2CppName: ovr_Challenge_GetParticipants
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Challenge_GetParticipants)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenge_GetParticipants", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenge_GetStartDate
// Il2CppName: ovr_Challenge_GetStartDate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::DateTime (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Challenge_GetStartDate)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenge_GetStartDate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenge_GetStartDate_Native
// Il2CppName: ovr_Challenge_GetStartDate_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Challenge_GetStartDate_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenge_GetStartDate_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenge_GetTitle
// Il2CppName: ovr_Challenge_GetTitle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Challenge_GetTitle)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenge_GetTitle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenge_GetTitle_Native
// Il2CppName: ovr_Challenge_GetTitle_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Challenge_GetTitle_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenge_GetTitle_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenge_GetVisibility
// Il2CppName: ovr_Challenge_GetVisibility
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::ChallengeVisibility (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Challenge_GetVisibility)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenge_GetVisibility", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeArray_GetElement
// Il2CppName: ovr_ChallengeArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeArray_GetElement)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeArray_GetNextUrl
// Il2CppName: ovr_ChallengeArray_GetNextUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeArray_GetNextUrl)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeArray_GetNextUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeArray_GetNextUrl_Native
// Il2CppName: ovr_ChallengeArray_GetNextUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeArray_GetNextUrl_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeArray_GetNextUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeArray_GetPreviousUrl
// Il2CppName: ovr_ChallengeArray_GetPreviousUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeArray_GetPreviousUrl)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeArray_GetPreviousUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeArray_GetPreviousUrl_Native
// Il2CppName: ovr_ChallengeArray_GetPreviousUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeArray_GetPreviousUrl_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeArray_GetPreviousUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeArray_GetSize
// Il2CppName: ovr_ChallengeArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeArray_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeArray_GetTotalCount
// Il2CppName: ovr_ChallengeArray_GetTotalCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeArray_GetTotalCount)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeArray_GetTotalCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeArray_HasNextPage
// Il2CppName: ovr_ChallengeArray_HasNextPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeArray_HasNextPage)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeArray_HasNextPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeArray_HasPreviousPage
// Il2CppName: ovr_ChallengeArray_HasPreviousPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeArray_HasPreviousPage)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeArray_HasPreviousPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeEntry_GetDisplayScore
// Il2CppName: ovr_ChallengeEntry_GetDisplayScore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeEntry_GetDisplayScore)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeEntry_GetDisplayScore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeEntry_GetDisplayScore_Native
// Il2CppName: ovr_ChallengeEntry_GetDisplayScore_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeEntry_GetDisplayScore_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeEntry_GetDisplayScore_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeEntry_GetExtraData
// Il2CppName: ovr_ChallengeEntry_GetExtraData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeEntry_GetExtraData)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeEntry_GetExtraData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeEntry_GetExtraData_Native
// Il2CppName: ovr_ChallengeEntry_GetExtraData_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeEntry_GetExtraData_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeEntry_GetExtraData_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeEntry_GetExtraDataLength
// Il2CppName: ovr_ChallengeEntry_GetExtraDataLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeEntry_GetExtraDataLength)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeEntry_GetExtraDataLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeEntry_GetID
// Il2CppName: ovr_ChallengeEntry_GetID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeEntry_GetID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeEntry_GetID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeEntry_GetRank
// Il2CppName: ovr_ChallengeEntry_GetRank
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeEntry_GetRank)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeEntry_GetRank", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeEntry_GetScore
// Il2CppName: ovr_ChallengeEntry_GetScore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeEntry_GetScore)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeEntry_GetScore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeEntry_GetTimestamp
// Il2CppName: ovr_ChallengeEntry_GetTimestamp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::DateTime (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeEntry_GetTimestamp)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeEntry_GetTimestamp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeEntry_GetTimestamp_Native
// Il2CppName: ovr_ChallengeEntry_GetTimestamp_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeEntry_GetTimestamp_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeEntry_GetTimestamp_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeEntry_GetUser
// Il2CppName: ovr_ChallengeEntry_GetUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeEntry_GetUser)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeEntry_GetUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetElement
// Il2CppName: ovr_ChallengeEntryArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetElement)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeEntryArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetNextUrl
// Il2CppName: ovr_ChallengeEntryArray_GetNextUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetNextUrl)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeEntryArray_GetNextUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetNextUrl_Native
// Il2CppName: ovr_ChallengeEntryArray_GetNextUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetNextUrl_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeEntryArray_GetNextUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetPreviousUrl
// Il2CppName: ovr_ChallengeEntryArray_GetPreviousUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetPreviousUrl)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeEntryArray_GetPreviousUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetPreviousUrl_Native
// Il2CppName: ovr_ChallengeEntryArray_GetPreviousUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetPreviousUrl_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeEntryArray_GetPreviousUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetSize
// Il2CppName: ovr_ChallengeEntryArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeEntryArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetTotalCount
// Il2CppName: ovr_ChallengeEntryArray_GetTotalCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetTotalCount)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeEntryArray_GetTotalCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeEntryArray_HasNextPage
// Il2CppName: ovr_ChallengeEntryArray_HasNextPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeEntryArray_HasNextPage)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeEntryArray_HasNextPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeEntryArray_HasPreviousPage
// Il2CppName: ovr_ChallengeEntryArray_HasPreviousPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeEntryArray_HasPreviousPage)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeEntryArray_HasPreviousPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_DataStore_Contains
// Il2CppName: ovr_DataStore_Contains
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(::System::IntPtr, ::StringW)>(&Oculus::Platform::CAPI::ovr_DataStore_Contains)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_DataStore_Contains", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, key});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_DataStore_Contains_Native
// Il2CppName: ovr_DataStore_Contains_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_DataStore_Contains_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_DataStore_Contains_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, key});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_DataStore_GetKey
// Il2CppName: ovr_DataStore_GetKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr, int)>(&Oculus::Platform::CAPI::ovr_DataStore_GetKey)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_DataStore_GetKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_DataStore_GetKey_Native
// Il2CppName: ovr_DataStore_GetKey_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, int)>(&Oculus::Platform::CAPI::ovr_DataStore_GetKey_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_DataStore_GetKey_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_DataStore_GetNumKeys
// Il2CppName: ovr_DataStore_GetNumKeys
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_DataStore_GetNumKeys)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_DataStore_GetNumKeys", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_DataStore_GetValue
// Il2CppName: ovr_DataStore_GetValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr, ::StringW)>(&Oculus::Platform::CAPI::ovr_DataStore_GetValue)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_DataStore_GetValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, key});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_DataStore_GetValue_Native
// Il2CppName: ovr_DataStore_GetValue_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_DataStore_GetValue_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_DataStore_GetValue_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, key});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Destination_GetApiName
// Il2CppName: ovr_Destination_GetApiName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Destination_GetApiName)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Destination_GetApiName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Destination_GetApiName_Native
// Il2CppName: ovr_Destination_GetApiName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Destination_GetApiName_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Destination_GetApiName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Destination_GetDeeplinkMessage
// Il2CppName: ovr_Destination_GetDeeplinkMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Destination_GetDeeplinkMessage)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Destination_GetDeeplinkMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Destination_GetDeeplinkMessage_Native
// Il2CppName: ovr_Destination_GetDeeplinkMessage_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Destination_GetDeeplinkMessage_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Destination_GetDeeplinkMessage_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Destination_GetDisplayName
// Il2CppName: ovr_Destination_GetDisplayName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Destination_GetDisplayName)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Destination_GetDisplayName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Destination_GetDisplayName_Native
// Il2CppName: ovr_Destination_GetDisplayName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Destination_GetDisplayName_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Destination_GetDisplayName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_DestinationArray_GetElement
// Il2CppName: ovr_DestinationArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_DestinationArray_GetElement)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_DestinationArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_DestinationArray_GetNextUrl
// Il2CppName: ovr_DestinationArray_GetNextUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_DestinationArray_GetNextUrl)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_DestinationArray_GetNextUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_DestinationArray_GetNextUrl_Native
// Il2CppName: ovr_DestinationArray_GetNextUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_DestinationArray_GetNextUrl_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_DestinationArray_GetNextUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_DestinationArray_GetSize
// Il2CppName: ovr_DestinationArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_DestinationArray_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_DestinationArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_DestinationArray_HasNextPage
// Il2CppName: ovr_DestinationArray_HasNextPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_DestinationArray_HasNextPage)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_DestinationArray_HasNextPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Error_GetCode
// Il2CppName: ovr_Error_GetCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Error_GetCode)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Error_GetCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Error_GetDisplayableMessage
// Il2CppName: ovr_Error_GetDisplayableMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Error_GetDisplayableMessage)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Error_GetDisplayableMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Error_GetDisplayableMessage_Native
// Il2CppName: ovr_Error_GetDisplayableMessage_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Error_GetDisplayableMessage_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Error_GetDisplayableMessage_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Error_GetHttpCode
// Il2CppName: ovr_Error_GetHttpCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Error_GetHttpCode)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Error_GetHttpCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Error_GetMessage
// Il2CppName: ovr_Error_GetMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Error_GetMessage)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Error_GetMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Error_GetMessage_Native
// Il2CppName: ovr_Error_GetMessage_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Error_GetMessage_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Error_GetMessage_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetDeeplinkMessage
// Il2CppName: ovr_GroupPresenceJoinIntent_GetDeeplinkMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetDeeplinkMessage)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresenceJoinIntent_GetDeeplinkMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetDeeplinkMessage_Native
// Il2CppName: ovr_GroupPresenceJoinIntent_GetDeeplinkMessage_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetDeeplinkMessage_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresenceJoinIntent_GetDeeplinkMessage_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetDestinationApiName
// Il2CppName: ovr_GroupPresenceJoinIntent_GetDestinationApiName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetDestinationApiName)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresenceJoinIntent_GetDestinationApiName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetDestinationApiName_Native
// Il2CppName: ovr_GroupPresenceJoinIntent_GetDestinationApiName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetDestinationApiName_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresenceJoinIntent_GetDestinationApiName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetLobbySessionId
// Il2CppName: ovr_GroupPresenceJoinIntent_GetLobbySessionId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetLobbySessionId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresenceJoinIntent_GetLobbySessionId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetLobbySessionId_Native
// Il2CppName: ovr_GroupPresenceJoinIntent_GetLobbySessionId_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetLobbySessionId_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresenceJoinIntent_GetLobbySessionId_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetMatchSessionId
// Il2CppName: ovr_GroupPresenceJoinIntent_GetMatchSessionId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetMatchSessionId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresenceJoinIntent_GetMatchSessionId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetMatchSessionId_Native
// Il2CppName: ovr_GroupPresenceJoinIntent_GetMatchSessionId_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetMatchSessionId_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresenceJoinIntent_GetMatchSessionId_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetDestinationApiName
// Il2CppName: ovr_GroupPresenceLeaveIntent_GetDestinationApiName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetDestinationApiName)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresenceLeaveIntent_GetDestinationApiName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetDestinationApiName_Native
// Il2CppName: ovr_GroupPresenceLeaveIntent_GetDestinationApiName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetDestinationApiName_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresenceLeaveIntent_GetDestinationApiName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetLobbySessionId
// Il2CppName: ovr_GroupPresenceLeaveIntent_GetLobbySessionId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetLobbySessionId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresenceLeaveIntent_GetLobbySessionId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetLobbySessionId_Native
// Il2CppName: ovr_GroupPresenceLeaveIntent_GetLobbySessionId_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetLobbySessionId_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresenceLeaveIntent_GetLobbySessionId_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetMatchSessionId
// Il2CppName: ovr_GroupPresenceLeaveIntent_GetMatchSessionId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetMatchSessionId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresenceLeaveIntent_GetMatchSessionId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetMatchSessionId_Native
// Il2CppName: ovr_GroupPresenceLeaveIntent_GetMatchSessionId_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetMatchSessionId_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresenceLeaveIntent_GetMatchSessionId_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_HttpTransferUpdate_GetBytes
// Il2CppName: ovr_HttpTransferUpdate_GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_HttpTransferUpdate_GetBytes)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_HttpTransferUpdate_GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_HttpTransferUpdate_GetID
// Il2CppName: ovr_HttpTransferUpdate_GetID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_HttpTransferUpdate_GetID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_HttpTransferUpdate_GetID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_HttpTransferUpdate_GetSize
// Il2CppName: ovr_HttpTransferUpdate_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_HttpTransferUpdate_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_HttpTransferUpdate_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_HttpTransferUpdate_IsCompleted
// Il2CppName: ovr_HttpTransferUpdate_IsCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_HttpTransferUpdate_IsCompleted)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_HttpTransferUpdate_IsCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_InstalledApplication_GetApplicationId
// Il2CppName: ovr_InstalledApplication_GetApplicationId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_InstalledApplication_GetApplicationId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_InstalledApplication_GetApplicationId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_InstalledApplication_GetApplicationId_Native
// Il2CppName: ovr_InstalledApplication_GetApplicationId_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_InstalledApplication_GetApplicationId_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_InstalledApplication_GetApplicationId_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_InstalledApplication_GetPackageName
// Il2CppName: ovr_InstalledApplication_GetPackageName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_InstalledApplication_GetPackageName)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_InstalledApplication_GetPackageName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_InstalledApplication_GetPackageName_Native
// Il2CppName: ovr_InstalledApplication_GetPackageName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_InstalledApplication_GetPackageName_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_InstalledApplication_GetPackageName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_InstalledApplication_GetStatus
// Il2CppName: ovr_InstalledApplication_GetStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_InstalledApplication_GetStatus)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_InstalledApplication_GetStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_InstalledApplication_GetStatus_Native
// Il2CppName: ovr_InstalledApplication_GetStatus_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_InstalledApplication_GetStatus_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_InstalledApplication_GetStatus_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_InstalledApplication_GetVersionCode
// Il2CppName: ovr_InstalledApplication_GetVersionCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_InstalledApplication_GetVersionCode)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_InstalledApplication_GetVersionCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_InstalledApplication_GetVersionName
// Il2CppName: ovr_InstalledApplication_GetVersionName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_InstalledApplication_GetVersionName)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_InstalledApplication_GetVersionName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_InstalledApplication_GetVersionName_Native
// Il2CppName: ovr_InstalledApplication_GetVersionName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_InstalledApplication_GetVersionName_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_InstalledApplication_GetVersionName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_InstalledApplicationArray_GetElement
// Il2CppName: ovr_InstalledApplicationArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_InstalledApplicationArray_GetElement)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_InstalledApplicationArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_InstalledApplicationArray_GetSize
// Il2CppName: ovr_InstalledApplicationArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_InstalledApplicationArray_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_InstalledApplicationArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_InvitePanelResultInfo_GetInvitesSent
// Il2CppName: ovr_InvitePanelResultInfo_GetInvitesSent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_InvitePanelResultInfo_GetInvitesSent)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_InvitePanelResultInfo_GetInvitesSent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetEnglishName
// Il2CppName: ovr_LanguagePackInfo_GetEnglishName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetEnglishName)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LanguagePackInfo_GetEnglishName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetEnglishName_Native
// Il2CppName: ovr_LanguagePackInfo_GetEnglishName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetEnglishName_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LanguagePackInfo_GetEnglishName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetNativeName
// Il2CppName: ovr_LanguagePackInfo_GetNativeName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetNativeName)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LanguagePackInfo_GetNativeName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetNativeName_Native
// Il2CppName: ovr_LanguagePackInfo_GetNativeName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetNativeName_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LanguagePackInfo_GetNativeName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetTag
// Il2CppName: ovr_LanguagePackInfo_GetTag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetTag)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LanguagePackInfo_GetTag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetTag_Native
// Il2CppName: ovr_LanguagePackInfo_GetTag_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetTag_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LanguagePackInfo_GetTag_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LaunchBlockFlowResult_GetDidBlock
// Il2CppName: ovr_LaunchBlockFlowResult_GetDidBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LaunchBlockFlowResult_GetDidBlock)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LaunchBlockFlowResult_GetDidBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LaunchBlockFlowResult_GetDidCancel
// Il2CppName: ovr_LaunchBlockFlowResult_GetDidCancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LaunchBlockFlowResult_GetDidCancel)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LaunchBlockFlowResult_GetDidCancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LaunchDetails_GetDeeplinkMessage
// Il2CppName: ovr_LaunchDetails_GetDeeplinkMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LaunchDetails_GetDeeplinkMessage)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LaunchDetails_GetDeeplinkMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LaunchDetails_GetDeeplinkMessage_Native
// Il2CppName: ovr_LaunchDetails_GetDeeplinkMessage_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LaunchDetails_GetDeeplinkMessage_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LaunchDetails_GetDeeplinkMessage_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LaunchDetails_GetDestinationApiName
// Il2CppName: ovr_LaunchDetails_GetDestinationApiName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LaunchDetails_GetDestinationApiName)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LaunchDetails_GetDestinationApiName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LaunchDetails_GetDestinationApiName_Native
// Il2CppName: ovr_LaunchDetails_GetDestinationApiName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LaunchDetails_GetDestinationApiName_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LaunchDetails_GetDestinationApiName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LaunchDetails_GetLaunchSource
// Il2CppName: ovr_LaunchDetails_GetLaunchSource
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LaunchDetails_GetLaunchSource)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LaunchDetails_GetLaunchSource", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LaunchDetails_GetLaunchSource_Native
// Il2CppName: ovr_LaunchDetails_GetLaunchSource_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LaunchDetails_GetLaunchSource_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LaunchDetails_GetLaunchSource_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LaunchDetails_GetLaunchType
// Il2CppName: ovr_LaunchDetails_GetLaunchType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::LaunchType (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LaunchDetails_GetLaunchType)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LaunchDetails_GetLaunchType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LaunchDetails_GetTrackingID
// Il2CppName: ovr_LaunchDetails_GetTrackingID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LaunchDetails_GetTrackingID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LaunchDetails_GetTrackingID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LaunchDetails_GetTrackingID_Native
// Il2CppName: ovr_LaunchDetails_GetTrackingID_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LaunchDetails_GetTrackingID_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LaunchDetails_GetTrackingID_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LaunchDetails_GetUsers
// Il2CppName: ovr_LaunchDetails_GetUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LaunchDetails_GetUsers)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LaunchDetails_GetUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LaunchFriendRequestFlowResult_GetDidCancel
// Il2CppName: ovr_LaunchFriendRequestFlowResult_GetDidCancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LaunchFriendRequestFlowResult_GetDidCancel)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LaunchFriendRequestFlowResult_GetDidCancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LaunchFriendRequestFlowResult_GetDidSendRequest
// Il2CppName: ovr_LaunchFriendRequestFlowResult_GetDidSendRequest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LaunchFriendRequestFlowResult_GetDidSendRequest)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LaunchFriendRequestFlowResult_GetDidSendRequest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LaunchInvitePanelFlowResult_GetInvitedUsers
// Il2CppName: ovr_LaunchInvitePanelFlowResult_GetInvitedUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LaunchInvitePanelFlowResult_GetInvitedUsers)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LaunchInvitePanelFlowResult_GetInvitedUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LaunchReportFlowResult_GetDidCancel
// Il2CppName: ovr_LaunchReportFlowResult_GetDidCancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LaunchReportFlowResult_GetDidCancel)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LaunchReportFlowResult_GetDidCancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LaunchReportFlowResult_GetUserReportId
// Il2CppName: ovr_LaunchReportFlowResult_GetUserReportId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LaunchReportFlowResult_GetUserReportId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LaunchReportFlowResult_GetUserReportId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LaunchUnblockFlowResult_GetDidCancel
// Il2CppName: ovr_LaunchUnblockFlowResult_GetDidCancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LaunchUnblockFlowResult_GetDidCancel)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LaunchUnblockFlowResult_GetDidCancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LaunchUnblockFlowResult_GetDidUnblock
// Il2CppName: ovr_LaunchUnblockFlowResult_GetDidUnblock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LaunchUnblockFlowResult_GetDidUnblock)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LaunchUnblockFlowResult_GetDidUnblock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Leaderboard_GetApiName
// Il2CppName: ovr_Leaderboard_GetApiName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Leaderboard_GetApiName)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Leaderboard_GetApiName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Leaderboard_GetApiName_Native
// Il2CppName: ovr_Leaderboard_GetApiName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Leaderboard_GetApiName_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Leaderboard_GetApiName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Leaderboard_GetDestination
// Il2CppName: ovr_Leaderboard_GetDestination
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Leaderboard_GetDestination)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Leaderboard_GetDestination", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Leaderboard_GetID
// Il2CppName: ovr_Leaderboard_GetID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Leaderboard_GetID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Leaderboard_GetID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardArray_GetElement
// Il2CppName: ovr_LeaderboardArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardArray_GetElement)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardArray_GetNextUrl
// Il2CppName: ovr_LeaderboardArray_GetNextUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardArray_GetNextUrl)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardArray_GetNextUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardArray_GetNextUrl_Native
// Il2CppName: ovr_LeaderboardArray_GetNextUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardArray_GetNextUrl_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardArray_GetNextUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardArray_GetSize
// Il2CppName: ovr_LeaderboardArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardArray_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardArray_HasNextPage
// Il2CppName: ovr_LeaderboardArray_HasNextPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardArray_HasNextPage)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardArray_HasNextPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetDisplayScore
// Il2CppName: ovr_LeaderboardEntry_GetDisplayScore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetDisplayScore)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardEntry_GetDisplayScore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetDisplayScore_Native
// Il2CppName: ovr_LeaderboardEntry_GetDisplayScore_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetDisplayScore_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardEntry_GetDisplayScore_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetExtraData
// Il2CppName: ovr_LeaderboardEntry_GetExtraData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetExtraData)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardEntry_GetExtraData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetExtraData_Native
// Il2CppName: ovr_LeaderboardEntry_GetExtraData_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetExtraData_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardEntry_GetExtraData_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetExtraDataLength
// Il2CppName: ovr_LeaderboardEntry_GetExtraDataLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetExtraDataLength)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardEntry_GetExtraDataLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetID
// Il2CppName: ovr_LeaderboardEntry_GetID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardEntry_GetID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetRank
// Il2CppName: ovr_LeaderboardEntry_GetRank
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetRank)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardEntry_GetRank", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetScore
// Il2CppName: ovr_LeaderboardEntry_GetScore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetScore)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardEntry_GetScore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetSupplementaryMetric
// Il2CppName: ovr_LeaderboardEntry_GetSupplementaryMetric
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetSupplementaryMetric)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardEntry_GetSupplementaryMetric", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetTimestamp
// Il2CppName: ovr_LeaderboardEntry_GetTimestamp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::DateTime (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetTimestamp)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardEntry_GetTimestamp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetTimestamp_Native
// Il2CppName: ovr_LeaderboardEntry_GetTimestamp_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetTimestamp_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardEntry_GetTimestamp_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetUser
// Il2CppName: ovr_LeaderboardEntry_GetUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetUser)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardEntry_GetUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetElement
// Il2CppName: ovr_LeaderboardEntryArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetElement)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardEntryArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetNextUrl
// Il2CppName: ovr_LeaderboardEntryArray_GetNextUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetNextUrl)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardEntryArray_GetNextUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetNextUrl_Native
// Il2CppName: ovr_LeaderboardEntryArray_GetNextUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetNextUrl_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardEntryArray_GetNextUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetPreviousUrl
// Il2CppName: ovr_LeaderboardEntryArray_GetPreviousUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetPreviousUrl)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardEntryArray_GetPreviousUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetPreviousUrl_Native
// Il2CppName: ovr_LeaderboardEntryArray_GetPreviousUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetPreviousUrl_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardEntryArray_GetPreviousUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetSize
// Il2CppName: ovr_LeaderboardEntryArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardEntryArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetTotalCount
// Il2CppName: ovr_LeaderboardEntryArray_GetTotalCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetTotalCount)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardEntryArray_GetTotalCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_HasNextPage
// Il2CppName: ovr_LeaderboardEntryArray_HasNextPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_HasNextPage)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardEntryArray_HasNextPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_HasPreviousPage
// Il2CppName: ovr_LeaderboardEntryArray_HasPreviousPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_HasPreviousPage)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardEntryArray_HasPreviousPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardUpdateStatus_GetDidUpdate
// Il2CppName: ovr_LeaderboardUpdateStatus_GetDidUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardUpdateStatus_GetDidUpdate)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardUpdateStatus_GetDidUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardUpdateStatus_GetUpdatedChallengeId
// Il2CppName: ovr_LeaderboardUpdateStatus_GetUpdatedChallengeId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr, uint)>(&Oculus::Platform::CAPI::ovr_LeaderboardUpdateStatus_GetUpdatedChallengeId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardUpdateStatus_GetUpdatedChallengeId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardUpdateStatus_GetUpdatedChallengeIdsSize
// Il2CppName: ovr_LeaderboardUpdateStatus_GetUpdatedChallengeIdsSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardUpdateStatus_GetUpdatedChallengeIdsSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardUpdateStatus_GetUpdatedChallengeIdsSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LinkedAccount_GetAccessToken
// Il2CppName: ovr_LinkedAccount_GetAccessToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LinkedAccount_GetAccessToken)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LinkedAccount_GetAccessToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LinkedAccount_GetAccessToken_Native
// Il2CppName: ovr_LinkedAccount_GetAccessToken_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LinkedAccount_GetAccessToken_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LinkedAccount_GetAccessToken_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LinkedAccount_GetServiceProvider
// Il2CppName: ovr_LinkedAccount_GetServiceProvider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::ServiceProvider (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LinkedAccount_GetServiceProvider)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LinkedAccount_GetServiceProvider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LinkedAccount_GetUserId
// Il2CppName: ovr_LinkedAccount_GetUserId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LinkedAccount_GetUserId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LinkedAccount_GetUserId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LinkedAccount_GetUserId_Native
// Il2CppName: ovr_LinkedAccount_GetUserId_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LinkedAccount_GetUserId_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LinkedAccount_GetUserId_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LinkedAccountArray_GetElement
// Il2CppName: ovr_LinkedAccountArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_LinkedAccountArray_GetElement)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LinkedAccountArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LinkedAccountArray_GetSize
// Il2CppName: ovr_LinkedAccountArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LinkedAccountArray_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LinkedAccountArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LivestreamingApplicationStatus_GetStreamingEnabled
// Il2CppName: ovr_LivestreamingApplicationStatus_GetStreamingEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LivestreamingApplicationStatus_GetStreamingEnabled)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LivestreamingApplicationStatus_GetStreamingEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LivestreamingStartResult_GetStreamingResult
// Il2CppName: ovr_LivestreamingStartResult_GetStreamingResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::LivestreamingStartStatus (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LivestreamingStartResult_GetStreamingResult)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LivestreamingStartResult_GetStreamingResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetCommentsVisible
// Il2CppName: ovr_LivestreamingStatus_GetCommentsVisible
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetCommentsVisible)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LivestreamingStatus_GetCommentsVisible", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetIsPaused
// Il2CppName: ovr_LivestreamingStatus_GetIsPaused
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetIsPaused)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LivestreamingStatus_GetIsPaused", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetLivestreamingEnabled
// Il2CppName: ovr_LivestreamingStatus_GetLivestreamingEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetLivestreamingEnabled)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LivestreamingStatus_GetLivestreamingEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetLivestreamingType
// Il2CppName: ovr_LivestreamingStatus_GetLivestreamingType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetLivestreamingType)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LivestreamingStatus_GetLivestreamingType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetMicEnabled
// Il2CppName: ovr_LivestreamingStatus_GetMicEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetMicEnabled)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LivestreamingStatus_GetMicEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetCommentCount
// Il2CppName: ovr_LivestreamingVideoStats_GetCommentCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetCommentCount)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LivestreamingVideoStats_GetCommentCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetReactionCount
// Il2CppName: ovr_LivestreamingVideoStats_GetReactionCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetReactionCount)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LivestreamingVideoStats_GetReactionCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetTotalViews
// Il2CppName: ovr_LivestreamingVideoStats_GetTotalViews
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetTotalViews)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LivestreamingVideoStats_GetTotalViews", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetTotalViews_Native
// Il2CppName: ovr_LivestreamingVideoStats_GetTotalViews_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetTotalViews_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LivestreamingVideoStats_GetTotalViews_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetAbuseReportRecording
// Il2CppName: ovr_Message_GetAbuseReportRecording
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetAbuseReportRecording)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetAbuseReportRecording", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetAchievementDefinitionArray
// Il2CppName: ovr_Message_GetAchievementDefinitionArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetAchievementDefinitionArray)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetAchievementDefinitionArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetAchievementProgressArray
// Il2CppName: ovr_Message_GetAchievementProgressArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetAchievementProgressArray)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetAchievementProgressArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetAchievementUpdate
// Il2CppName: ovr_Message_GetAchievementUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetAchievementUpdate)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetAchievementUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetAppDownloadProgressResult
// Il2CppName: ovr_Message_GetAppDownloadProgressResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetAppDownloadProgressResult)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetAppDownloadProgressResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetAppDownloadResult
// Il2CppName: ovr_Message_GetAppDownloadResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetAppDownloadResult)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetAppDownloadResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetApplicationInviteArray
// Il2CppName: ovr_Message_GetApplicationInviteArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetApplicationInviteArray)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetApplicationInviteArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetApplicationVersion
// Il2CppName: ovr_Message_GetApplicationVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetApplicationVersion)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetApplicationVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetAssetDetails
// Il2CppName: ovr_Message_GetAssetDetails
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetAssetDetails)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetAssetDetails", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetAssetDetailsArray
// Il2CppName: ovr_Message_GetAssetDetailsArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetAssetDetailsArray)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetAssetDetailsArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetAssetFileDeleteResult
// Il2CppName: ovr_Message_GetAssetFileDeleteResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetAssetFileDeleteResult)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetAssetFileDeleteResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetAssetFileDownloadCancelResult
// Il2CppName: ovr_Message_GetAssetFileDownloadCancelResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetAssetFileDownloadCancelResult)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetAssetFileDownloadCancelResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetAssetFileDownloadResult
// Il2CppName: ovr_Message_GetAssetFileDownloadResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetAssetFileDownloadResult)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetAssetFileDownloadResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetAssetFileDownloadUpdate
// Il2CppName: ovr_Message_GetAssetFileDownloadUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetAssetFileDownloadUpdate)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetAssetFileDownloadUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetAvatarEditorResult
// Il2CppName: ovr_Message_GetAvatarEditorResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetAvatarEditorResult)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetAvatarEditorResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetBlockedUserArray
// Il2CppName: ovr_Message_GetBlockedUserArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetBlockedUserArray)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetBlockedUserArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetChallenge
// Il2CppName: ovr_Message_GetChallenge
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetChallenge)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetChallenge", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetChallengeArray
// Il2CppName: ovr_Message_GetChallengeArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetChallengeArray)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetChallengeArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetChallengeEntryArray
// Il2CppName: ovr_Message_GetChallengeEntryArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetChallengeEntryArray)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetChallengeEntryArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetDataStore
// Il2CppName: ovr_Message_GetDataStore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetDataStore)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetDataStore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetDestinationArray
// Il2CppName: ovr_Message_GetDestinationArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetDestinationArray)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetDestinationArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetError
// Il2CppName: ovr_Message_GetError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetError)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetGroupPresenceJoinIntent
// Il2CppName: ovr_Message_GetGroupPresenceJoinIntent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetGroupPresenceJoinIntent)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetGroupPresenceJoinIntent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetGroupPresenceLeaveIntent
// Il2CppName: ovr_Message_GetGroupPresenceLeaveIntent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetGroupPresenceLeaveIntent)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetGroupPresenceLeaveIntent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetHttpTransferUpdate
// Il2CppName: ovr_Message_GetHttpTransferUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetHttpTransferUpdate)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetHttpTransferUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetInstalledApplicationArray
// Il2CppName: ovr_Message_GetInstalledApplicationArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetInstalledApplicationArray)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetInstalledApplicationArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetInvitePanelResultInfo
// Il2CppName: ovr_Message_GetInvitePanelResultInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetInvitePanelResultInfo)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetInvitePanelResultInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetLaunchBlockFlowResult
// Il2CppName: ovr_Message_GetLaunchBlockFlowResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetLaunchBlockFlowResult)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetLaunchBlockFlowResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetLaunchFriendRequestFlowResult
// Il2CppName: ovr_Message_GetLaunchFriendRequestFlowResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetLaunchFriendRequestFlowResult)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetLaunchFriendRequestFlowResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetLaunchInvitePanelFlowResult
// Il2CppName: ovr_Message_GetLaunchInvitePanelFlowResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetLaunchInvitePanelFlowResult)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetLaunchInvitePanelFlowResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetLaunchReportFlowResult
// Il2CppName: ovr_Message_GetLaunchReportFlowResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetLaunchReportFlowResult)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetLaunchReportFlowResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetLaunchUnblockFlowResult
// Il2CppName: ovr_Message_GetLaunchUnblockFlowResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetLaunchUnblockFlowResult)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetLaunchUnblockFlowResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetLeaderboardArray
// Il2CppName: ovr_Message_GetLeaderboardArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetLeaderboardArray)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetLeaderboardArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetLeaderboardEntryArray
// Il2CppName: ovr_Message_GetLeaderboardEntryArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetLeaderboardEntryArray)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetLeaderboardEntryArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetLeaderboardUpdateStatus
// Il2CppName: ovr_Message_GetLeaderboardUpdateStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetLeaderboardUpdateStatus)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetLeaderboardUpdateStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetLinkedAccountArray
// Il2CppName: ovr_Message_GetLinkedAccountArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetLinkedAccountArray)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetLinkedAccountArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetLivestreamingApplicationStatus
// Il2CppName: ovr_Message_GetLivestreamingApplicationStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetLivestreamingApplicationStatus)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetLivestreamingApplicationStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetLivestreamingStartResult
// Il2CppName: ovr_Message_GetLivestreamingStartResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetLivestreamingStartResult)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetLivestreamingStartResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetLivestreamingStatus
// Il2CppName: ovr_Message_GetLivestreamingStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetLivestreamingStatus)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetLivestreamingStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetLivestreamingVideoStats
// Il2CppName: ovr_Message_GetLivestreamingVideoStats
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetLivestreamingVideoStats)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetLivestreamingVideoStats", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetMicrophoneAvailabilityState
// Il2CppName: ovr_Message_GetMicrophoneAvailabilityState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetMicrophoneAvailabilityState)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetMicrophoneAvailabilityState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetNativeMessage
// Il2CppName: ovr_Message_GetNativeMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetNativeMessage)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetNativeMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetNetSyncConnection
// Il2CppName: ovr_Message_GetNetSyncConnection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetNetSyncConnection)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetNetSyncConnection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetNetSyncSessionArray
// Il2CppName: ovr_Message_GetNetSyncSessionArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetNetSyncSessionArray)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetNetSyncSessionArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetNetSyncSessionsChangedNotification
// Il2CppName: ovr_Message_GetNetSyncSessionsChangedNotification
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetNetSyncSessionsChangedNotification)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetNetSyncSessionsChangedNotification", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetNetSyncSetSessionPropertyResult
// Il2CppName: ovr_Message_GetNetSyncSetSessionPropertyResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetNetSyncSetSessionPropertyResult)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetNetSyncSetSessionPropertyResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetNetSyncVoipAttenuationValueArray
// Il2CppName: ovr_Message_GetNetSyncVoipAttenuationValueArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetNetSyncVoipAttenuationValueArray)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetNetSyncVoipAttenuationValueArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetOrgScopedID
// Il2CppName: ovr_Message_GetOrgScopedID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetOrgScopedID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetOrgScopedID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetParty
// Il2CppName: ovr_Message_GetParty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetParty)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetParty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetPartyID
// Il2CppName: ovr_Message_GetPartyID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetPartyID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetPartyID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetPartyUpdateNotification
// Il2CppName: ovr_Message_GetPartyUpdateNotification
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetPartyUpdateNotification)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetPartyUpdateNotification", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetPidArray
// Il2CppName: ovr_Message_GetPidArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetPidArray)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetPidArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetPlatformInitialize
// Il2CppName: ovr_Message_GetPlatformInitialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetPlatformInitialize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetPlatformInitialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetProductArray
// Il2CppName: ovr_Message_GetProductArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetProductArray)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetProductArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetPurchase
// Il2CppName: ovr_Message_GetPurchase
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetPurchase)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetPurchase", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetPurchaseArray
// Il2CppName: ovr_Message_GetPurchaseArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetPurchaseArray)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetPurchaseArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetRejoinDialogResult
// Il2CppName: ovr_Message_GetRejoinDialogResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetRejoinDialogResult)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetRejoinDialogResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetRequestID
// Il2CppName: ovr_Message_GetRequestID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetRequestID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetRequestID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetSdkAccountArray
// Il2CppName: ovr_Message_GetSdkAccountArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetSdkAccountArray)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetSdkAccountArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetSendInvitesResult
// Il2CppName: ovr_Message_GetSendInvitesResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetSendInvitesResult)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetSendInvitesResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetShareMediaResult
// Il2CppName: ovr_Message_GetShareMediaResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetShareMediaResult)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetShareMediaResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetString
// Il2CppName: ovr_Message_GetString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetString)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetString_Native
// Il2CppName: ovr_Message_GetString_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetString_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetString_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetSystemVoipState
// Il2CppName: ovr_Message_GetSystemVoipState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetSystemVoipState)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetSystemVoipState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetType
// Il2CppName: ovr_Message_GetType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::Message::MessageType (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetType)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetUser
// Il2CppName: ovr_Message_GetUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetUser)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetUserAccountAgeCategory
// Il2CppName: ovr_Message_GetUserAccountAgeCategory
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetUserAccountAgeCategory)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetUserAccountAgeCategory", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetUserArray
// Il2CppName: ovr_Message_GetUserArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetUserArray)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetUserArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetUserCapabilityArray
// Il2CppName: ovr_Message_GetUserCapabilityArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetUserCapabilityArray)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetUserCapabilityArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetUserDataStoreUpdateResponse
// Il2CppName: ovr_Message_GetUserDataStoreUpdateResponse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetUserDataStoreUpdateResponse)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetUserDataStoreUpdateResponse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetUserProof
// Il2CppName: ovr_Message_GetUserProof
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetUserProof)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetUserProof", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetUserReportID
// Il2CppName: ovr_Message_GetUserReportID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetUserReportID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetUserReportID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_IsError
// Il2CppName: ovr_Message_IsError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_IsError)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_IsError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Microphone_GetNumSamplesAvailable
// Il2CppName: ovr_Microphone_GetNumSamplesAvailable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Microphone_GetNumSamplesAvailable)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Microphone_GetNumSamplesAvailable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Microphone_GetOutputBufferMaxSize
// Il2CppName: ovr_Microphone_GetOutputBufferMaxSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Microphone_GetOutputBufferMaxSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Microphone_GetOutputBufferMaxSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Microphone_GetPCM
// Il2CppName: ovr_Microphone_GetPCM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr, ::ArrayW<int16_t>, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_Microphone_GetPCM)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* outputBuffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int16"), 1)->byval_arg;
    static auto* outputBufferNumElements = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Microphone_GetPCM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, outputBuffer, outputBufferNumElements});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Microphone_GetPCMFloat
// Il2CppName: ovr_Microphone_GetPCMFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr, ::ArrayW<float>, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_Microphone_GetPCMFloat)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* outputBuffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    static auto* outputBufferNumElements = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Microphone_GetPCMFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, outputBuffer, outputBufferNumElements});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Microphone_ReadData
// Il2CppName: ovr_Microphone_ReadData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr, ::ArrayW<float>, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_Microphone_ReadData)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* outputBuffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    static auto* outputBufferSize = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Microphone_ReadData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, outputBuffer, outputBufferSize});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Microphone_SetAcceptableRecordingDelayHint
// Il2CppName: ovr_Microphone_SetAcceptableRecordingDelayHint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_Microphone_SetAcceptableRecordingDelayHint)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* delayMs = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Microphone_SetAcceptableRecordingDelayHint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, delayMs});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Microphone_Start
// Il2CppName: ovr_Microphone_Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Microphone_Start)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Microphone_Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Microphone_Stop
// Il2CppName: ovr_Microphone_Stop
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Microphone_Stop)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Microphone_Stop", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MicrophoneAvailabilityState_GetMicrophoneAvailable
// Il2CppName: ovr_MicrophoneAvailabilityState_GetMicrophoneAvailable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MicrophoneAvailabilityState_GetMicrophoneAvailable)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MicrophoneAvailabilityState_GetMicrophoneAvailable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncConnection_GetConnectionId
// Il2CppName: ovr_NetSyncConnection_GetConnectionId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_NetSyncConnection_GetConnectionId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncConnection_GetConnectionId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncConnection_GetDisconnectReason
// Il2CppName: ovr_NetSyncConnection_GetDisconnectReason
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::NetSyncDisconnectReason (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_NetSyncConnection_GetDisconnectReason)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncConnection_GetDisconnectReason", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncConnection_GetSessionId
// Il2CppName: ovr_NetSyncConnection_GetSessionId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_NetSyncConnection_GetSessionId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncConnection_GetSessionId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncConnection_GetStatus
// Il2CppName: ovr_NetSyncConnection_GetStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::NetSyncConnectionStatus (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_NetSyncConnection_GetStatus)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncConnection_GetStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncConnection_GetZoneId
// Il2CppName: ovr_NetSyncConnection_GetZoneId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_NetSyncConnection_GetZoneId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncConnection_GetZoneId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncConnection_GetZoneId_Native
// Il2CppName: ovr_NetSyncConnection_GetZoneId_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_NetSyncConnection_GetZoneId_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncConnection_GetZoneId_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncSession_GetConnectionId
// Il2CppName: ovr_NetSyncSession_GetConnectionId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_NetSyncSession_GetConnectionId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncSession_GetConnectionId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncSession_GetMuted
// Il2CppName: ovr_NetSyncSession_GetMuted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_NetSyncSession_GetMuted)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncSession_GetMuted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncSession_GetSessionId
// Il2CppName: ovr_NetSyncSession_GetSessionId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_NetSyncSession_GetSessionId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncSession_GetSessionId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncSession_GetUserId
// Il2CppName: ovr_NetSyncSession_GetUserId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_NetSyncSession_GetUserId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncSession_GetUserId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncSession_GetVoipGroup
// Il2CppName: ovr_NetSyncSession_GetVoipGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_NetSyncSession_GetVoipGroup)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncSession_GetVoipGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncSession_GetVoipGroup_Native
// Il2CppName: ovr_NetSyncSession_GetVoipGroup_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_NetSyncSession_GetVoipGroup_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncSession_GetVoipGroup_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncSessionArray_GetElement
// Il2CppName: ovr_NetSyncSessionArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_NetSyncSessionArray_GetElement)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncSessionArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncSessionArray_GetSize
// Il2CppName: ovr_NetSyncSessionArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_NetSyncSessionArray_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncSessionArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncSessionsChangedNotification_GetConnectionId
// Il2CppName: ovr_NetSyncSessionsChangedNotification_GetConnectionId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_NetSyncSessionsChangedNotification_GetConnectionId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncSessionsChangedNotification_GetConnectionId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncSessionsChangedNotification_GetSessions
// Il2CppName: ovr_NetSyncSessionsChangedNotification_GetSessions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_NetSyncSessionsChangedNotification_GetSessions)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncSessionsChangedNotification_GetSessions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncSetSessionPropertyResult_GetSession
// Il2CppName: ovr_NetSyncSetSessionPropertyResult_GetSession
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_NetSyncSetSessionPropertyResult_GetSession)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncSetSessionPropertyResult_GetSession", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValue_GetDecibels
// Il2CppName: ovr_NetSyncVoipAttenuationValue_GetDecibels
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValue_GetDecibels)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncVoipAttenuationValue_GetDecibels", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValue_GetDistance
// Il2CppName: ovr_NetSyncVoipAttenuationValue_GetDistance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValue_GetDistance)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncVoipAttenuationValue_GetDistance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValueArray_GetElement
// Il2CppName: ovr_NetSyncVoipAttenuationValueArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValueArray_GetElement)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncVoipAttenuationValueArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValueArray_GetSize
// Il2CppName: ovr_NetSyncVoipAttenuationValueArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValueArray_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncVoipAttenuationValueArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_OrgScopedID_GetID
// Il2CppName: ovr_OrgScopedID_GetID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_OrgScopedID_GetID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_OrgScopedID_GetID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Packet_Free
// Il2CppName: ovr_Packet_Free
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Packet_Free)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Packet_Free", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Packet_GetBytes
// Il2CppName: ovr_Packet_GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Packet_GetBytes)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Packet_GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Packet_GetSenderID
// Il2CppName: ovr_Packet_GetSenderID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Packet_GetSenderID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Packet_GetSenderID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Packet_GetSize
// Il2CppName: ovr_Packet_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Packet_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Packet_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Party_GetID
// Il2CppName: ovr_Party_GetID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Party_GetID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Party_GetID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Party_GetInvitedUsers
// Il2CppName: ovr_Party_GetInvitedUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Party_GetInvitedUsers)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Party_GetInvitedUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Party_GetLeader
// Il2CppName: ovr_Party_GetLeader
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Party_GetLeader)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Party_GetLeader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Party_GetUsers
// Il2CppName: ovr_Party_GetUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Party_GetUsers)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Party_GetUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_PartyID_GetID
// Il2CppName: ovr_PartyID_GetID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_PartyID_GetID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_PartyID_GetID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetAction
// Il2CppName: ovr_PartyUpdateNotification_GetAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::PartyUpdateAction (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetAction)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_PartyUpdateNotification_GetAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetPartyId
// Il2CppName: ovr_PartyUpdateNotification_GetPartyId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetPartyId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_PartyUpdateNotification_GetPartyId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetSenderId
// Il2CppName: ovr_PartyUpdateNotification_GetSenderId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetSenderId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_PartyUpdateNotification_GetSenderId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUpdateTimestamp
// Il2CppName: ovr_PartyUpdateNotification_GetUpdateTimestamp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUpdateTimestamp)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_PartyUpdateNotification_GetUpdateTimestamp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUpdateTimestamp_Native
// Il2CppName: ovr_PartyUpdateNotification_GetUpdateTimestamp_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUpdateTimestamp_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_PartyUpdateNotification_GetUpdateTimestamp_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserAlias
// Il2CppName: ovr_PartyUpdateNotification_GetUserAlias
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserAlias)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_PartyUpdateNotification_GetUserAlias", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserAlias_Native
// Il2CppName: ovr_PartyUpdateNotification_GetUserAlias_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserAlias_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_PartyUpdateNotification_GetUserAlias_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserId
// Il2CppName: ovr_PartyUpdateNotification_GetUserId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_PartyUpdateNotification_GetUserId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserName
// Il2CppName: ovr_PartyUpdateNotification_GetUserName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserName)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_PartyUpdateNotification_GetUserName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserName_Native
// Il2CppName: ovr_PartyUpdateNotification_GetUserName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserName_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_PartyUpdateNotification_GetUserName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Pid_GetId
// Il2CppName: ovr_Pid_GetId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Pid_GetId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Pid_GetId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Pid_GetId_Native
// Il2CppName: ovr_Pid_GetId_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Pid_GetId_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Pid_GetId_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_PidArray_GetElement
// Il2CppName: ovr_PidArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_PidArray_GetElement)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_PidArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_PidArray_GetSize
// Il2CppName: ovr_PidArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_PidArray_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_PidArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_PlatformInitialize_GetResult
// Il2CppName: ovr_PlatformInitialize_GetResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::PlatformInitializeResult (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_PlatformInitialize_GetResult)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_PlatformInitialize_GetResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Price_GetAmountInHundredths
// Il2CppName: ovr_Price_GetAmountInHundredths
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Price_GetAmountInHundredths)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Price_GetAmountInHundredths", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Price_GetCurrency
// Il2CppName: ovr_Price_GetCurrency
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Price_GetCurrency)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Price_GetCurrency", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Price_GetCurrency_Native
// Il2CppName: ovr_Price_GetCurrency_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Price_GetCurrency_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Price_GetCurrency_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Price_GetFormatted
// Il2CppName: ovr_Price_GetFormatted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Price_GetFormatted)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Price_GetFormatted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Price_GetFormatted_Native
// Il2CppName: ovr_Price_GetFormatted_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Price_GetFormatted_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Price_GetFormatted_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Product_GetDescription
// Il2CppName: ovr_Product_GetDescription
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Product_GetDescription)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Product_GetDescription", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Product_GetDescription_Native
// Il2CppName: ovr_Product_GetDescription_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Product_GetDescription_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Product_GetDescription_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Product_GetFormattedPrice
// Il2CppName: ovr_Product_GetFormattedPrice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Product_GetFormattedPrice)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Product_GetFormattedPrice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Product_GetFormattedPrice_Native
// Il2CppName: ovr_Product_GetFormattedPrice_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Product_GetFormattedPrice_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Product_GetFormattedPrice_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Product_GetName
// Il2CppName: ovr_Product_GetName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Product_GetName)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Product_GetName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Product_GetName_Native
// Il2CppName: ovr_Product_GetName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Product_GetName_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Product_GetName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Product_GetSKU
// Il2CppName: ovr_Product_GetSKU
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Product_GetSKU)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Product_GetSKU", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Product_GetSKU_Native
// Il2CppName: ovr_Product_GetSKU_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Product_GetSKU_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Product_GetSKU_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ProductArray_GetElement
// Il2CppName: ovr_ProductArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_ProductArray_GetElement)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ProductArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ProductArray_GetNextUrl
// Il2CppName: ovr_ProductArray_GetNextUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ProductArray_GetNextUrl)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ProductArray_GetNextUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ProductArray_GetNextUrl_Native
// Il2CppName: ovr_ProductArray_GetNextUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ProductArray_GetNextUrl_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ProductArray_GetNextUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ProductArray_GetSize
// Il2CppName: ovr_ProductArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ProductArray_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ProductArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ProductArray_HasNextPage
// Il2CppName: ovr_ProductArray_HasNextPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ProductArray_HasNextPage)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ProductArray_HasNextPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Purchase_GetDeveloperPayload
// Il2CppName: ovr_Purchase_GetDeveloperPayload
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Purchase_GetDeveloperPayload)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Purchase_GetDeveloperPayload", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Purchase_GetDeveloperPayload_Native
// Il2CppName: ovr_Purchase_GetDeveloperPayload_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Purchase_GetDeveloperPayload_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Purchase_GetDeveloperPayload_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Purchase_GetExpirationTime
// Il2CppName: ovr_Purchase_GetExpirationTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::DateTime (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Purchase_GetExpirationTime)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Purchase_GetExpirationTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Purchase_GetExpirationTime_Native
// Il2CppName: ovr_Purchase_GetExpirationTime_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Purchase_GetExpirationTime_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Purchase_GetExpirationTime_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Purchase_GetGrantTime
// Il2CppName: ovr_Purchase_GetGrantTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::DateTime (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Purchase_GetGrantTime)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Purchase_GetGrantTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Purchase_GetGrantTime_Native
// Il2CppName: ovr_Purchase_GetGrantTime_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Purchase_GetGrantTime_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Purchase_GetGrantTime_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Purchase_GetPurchaseID
// Il2CppName: ovr_Purchase_GetPurchaseID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Purchase_GetPurchaseID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Purchase_GetPurchaseID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Purchase_GetPurchaseStrID
// Il2CppName: ovr_Purchase_GetPurchaseStrID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Purchase_GetPurchaseStrID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Purchase_GetPurchaseStrID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Purchase_GetPurchaseStrID_Native
// Il2CppName: ovr_Purchase_GetPurchaseStrID_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Purchase_GetPurchaseStrID_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Purchase_GetPurchaseStrID_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Purchase_GetReportingId
// Il2CppName: ovr_Purchase_GetReportingId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Purchase_GetReportingId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Purchase_GetReportingId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Purchase_GetReportingId_Native
// Il2CppName: ovr_Purchase_GetReportingId_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Purchase_GetReportingId_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Purchase_GetReportingId_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Purchase_GetSKU
// Il2CppName: ovr_Purchase_GetSKU
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Purchase_GetSKU)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Purchase_GetSKU", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Purchase_GetSKU_Native
// Il2CppName: ovr_Purchase_GetSKU_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Purchase_GetSKU_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Purchase_GetSKU_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_PurchaseArray_GetElement
// Il2CppName: ovr_PurchaseArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_PurchaseArray_GetElement)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_PurchaseArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_PurchaseArray_GetNextUrl
// Il2CppName: ovr_PurchaseArray_GetNextUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_PurchaseArray_GetNextUrl)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_PurchaseArray_GetNextUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_PurchaseArray_GetNextUrl_Native
// Il2CppName: ovr_PurchaseArray_GetNextUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_PurchaseArray_GetNextUrl_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_PurchaseArray_GetNextUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_PurchaseArray_GetSize
// Il2CppName: ovr_PurchaseArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_PurchaseArray_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_PurchaseArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_PurchaseArray_HasNextPage
// Il2CppName: ovr_PurchaseArray_HasNextPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_PurchaseArray_HasNextPage)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_PurchaseArray_HasNextPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RejoinDialogResult_GetRejoinSelected
// Il2CppName: ovr_RejoinDialogResult_GetRejoinSelected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_RejoinDialogResult_GetRejoinSelected)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RejoinDialogResult_GetRejoinSelected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_SdkAccount_GetAccountType
// Il2CppName: ovr_SdkAccount_GetAccountType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::SdkAccountType (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_SdkAccount_GetAccountType)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_SdkAccount_GetAccountType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_SdkAccount_GetUserId
// Il2CppName: ovr_SdkAccount_GetUserId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_SdkAccount_GetUserId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_SdkAccount_GetUserId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_SdkAccountArray_GetElement
// Il2CppName: ovr_SdkAccountArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_SdkAccountArray_GetElement)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_SdkAccountArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_SdkAccountArray_GetSize
// Il2CppName: ovr_SdkAccountArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_SdkAccountArray_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_SdkAccountArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_SendInvitesResult_GetInvites
// Il2CppName: ovr_SendInvitesResult_GetInvites
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_SendInvitesResult_GetInvites)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_SendInvitesResult_GetInvites", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ShareMediaResult_GetStatus
// Il2CppName: ovr_ShareMediaResult_GetStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::ShareMediaStatus (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ShareMediaResult_GetStatus)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ShareMediaResult_GetStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_SupplementaryMetric_GetID
// Il2CppName: ovr_SupplementaryMetric_GetID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_SupplementaryMetric_GetID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_SupplementaryMetric_GetID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_SupplementaryMetric_GetMetric
// Il2CppName: ovr_SupplementaryMetric_GetMetric
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_SupplementaryMetric_GetMetric)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_SupplementaryMetric_GetMetric", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_SystemVoipState_GetMicrophoneMuted
// Il2CppName: ovr_SystemVoipState_GetMicrophoneMuted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::VoipMuteState (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_SystemVoipState_GetMicrophoneMuted)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_SystemVoipState_GetMicrophoneMuted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_SystemVoipState_GetStatus
// Il2CppName: ovr_SystemVoipState_GetStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::SystemVoipStatus (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_SystemVoipState_GetStatus)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_SystemVoipState_GetStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_TestUser_GetAccessToken
// Il2CppName: ovr_TestUser_GetAccessToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_TestUser_GetAccessToken)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_TestUser_GetAccessToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_TestUser_GetAccessToken_Native
// Il2CppName: ovr_TestUser_GetAccessToken_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_TestUser_GetAccessToken_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_TestUser_GetAccessToken_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_TestUser_GetAppAccessArray
// Il2CppName: ovr_TestUser_GetAppAccessArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_TestUser_GetAppAccessArray)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_TestUser_GetAppAccessArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_TestUser_GetFbAppAccessArray
// Il2CppName: ovr_TestUser_GetFbAppAccessArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_TestUser_GetFbAppAccessArray)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_TestUser_GetFbAppAccessArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_TestUser_GetFriendAccessToken
// Il2CppName: ovr_TestUser_GetFriendAccessToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_TestUser_GetFriendAccessToken)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_TestUser_GetFriendAccessToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_TestUser_GetFriendAccessToken_Native
// Il2CppName: ovr_TestUser_GetFriendAccessToken_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_TestUser_GetFriendAccessToken_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_TestUser_GetFriendAccessToken_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_TestUser_GetFriendAppAccessArray
// Il2CppName: ovr_TestUser_GetFriendAppAccessArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_TestUser_GetFriendAppAccessArray)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_TestUser_GetFriendAppAccessArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_TestUser_GetUserAlias
// Il2CppName: ovr_TestUser_GetUserAlias
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_TestUser_GetUserAlias)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_TestUser_GetUserAlias", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_TestUser_GetUserAlias_Native
// Il2CppName: ovr_TestUser_GetUserAlias_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_TestUser_GetUserAlias_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_TestUser_GetUserAlias_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_TestUser_GetUserFbid
// Il2CppName: ovr_TestUser_GetUserFbid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_TestUser_GetUserFbid)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_TestUser_GetUserFbid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_TestUser_GetUserId
// Il2CppName: ovr_TestUser_GetUserId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_TestUser_GetUserId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_TestUser_GetUserId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetAccessToken
// Il2CppName: ovr_TestUserAppAccess_GetAccessToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetAccessToken)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_TestUserAppAccess_GetAccessToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetAccessToken_Native
// Il2CppName: ovr_TestUserAppAccess_GetAccessToken_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetAccessToken_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_TestUserAppAccess_GetAccessToken_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetAppId
// Il2CppName: ovr_TestUserAppAccess_GetAppId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetAppId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_TestUserAppAccess_GetAppId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetUserId
// Il2CppName: ovr_TestUserAppAccess_GetUserId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetUserId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_TestUserAppAccess_GetUserId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_TestUserAppAccessArray_GetElement
// Il2CppName: ovr_TestUserAppAccessArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_TestUserAppAccessArray_GetElement)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_TestUserAppAccessArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_TestUserAppAccessArray_GetSize
// Il2CppName: ovr_TestUserAppAccessArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_TestUserAppAccessArray_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_TestUserAppAccessArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetDisplayName
// Il2CppName: ovr_User_GetDisplayName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_GetDisplayName)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetDisplayName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetDisplayName_Native
// Il2CppName: ovr_User_GetDisplayName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_GetDisplayName_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetDisplayName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetID
// Il2CppName: ovr_User_GetID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_GetID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetImageUrl
// Il2CppName: ovr_User_GetImageUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_GetImageUrl)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetImageUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetImageUrl_Native
// Il2CppName: ovr_User_GetImageUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_GetImageUrl_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetImageUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetOculusID
// Il2CppName: ovr_User_GetOculusID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_GetOculusID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetOculusID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetOculusID_Native
// Il2CppName: ovr_User_GetOculusID_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_GetOculusID_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetOculusID_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetPresence
// Il2CppName: ovr_User_GetPresence
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_GetPresence)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetPresence", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetPresence_Native
// Il2CppName: ovr_User_GetPresence_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_GetPresence_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetPresence_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetPresenceDeeplinkMessage
// Il2CppName: ovr_User_GetPresenceDeeplinkMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_GetPresenceDeeplinkMessage)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetPresenceDeeplinkMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetPresenceDeeplinkMessage_Native
// Il2CppName: ovr_User_GetPresenceDeeplinkMessage_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_GetPresenceDeeplinkMessage_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetPresenceDeeplinkMessage_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetPresenceDestinationApiName
// Il2CppName: ovr_User_GetPresenceDestinationApiName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_GetPresenceDestinationApiName)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetPresenceDestinationApiName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetPresenceDestinationApiName_Native
// Il2CppName: ovr_User_GetPresenceDestinationApiName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_GetPresenceDestinationApiName_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetPresenceDestinationApiName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetPresenceLobbySessionId
// Il2CppName: ovr_User_GetPresenceLobbySessionId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_GetPresenceLobbySessionId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetPresenceLobbySessionId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetPresenceLobbySessionId_Native
// Il2CppName: ovr_User_GetPresenceLobbySessionId_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_GetPresenceLobbySessionId_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetPresenceLobbySessionId_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetPresenceMatchSessionId
// Il2CppName: ovr_User_GetPresenceMatchSessionId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_GetPresenceMatchSessionId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetPresenceMatchSessionId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetPresenceMatchSessionId_Native
// Il2CppName: ovr_User_GetPresenceMatchSessionId_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_GetPresenceMatchSessionId_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetPresenceMatchSessionId_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetPresenceStatus
// Il2CppName: ovr_User_GetPresenceStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::UserPresenceStatus (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_GetPresenceStatus)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetPresenceStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetSmallImageUrl
// Il2CppName: ovr_User_GetSmallImageUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_GetSmallImageUrl)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetSmallImageUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetSmallImageUrl_Native
// Il2CppName: ovr_User_GetSmallImageUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_GetSmallImageUrl_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetSmallImageUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserAccountAgeCategory_GetAgeCategory
// Il2CppName: ovr_UserAccountAgeCategory_GetAgeCategory
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::AccountAgeCategory (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UserAccountAgeCategory_GetAgeCategory)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserAccountAgeCategory_GetAgeCategory", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserArray_GetElement
// Il2CppName: ovr_UserArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_UserArray_GetElement)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserArray_GetNextUrl
// Il2CppName: ovr_UserArray_GetNextUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UserArray_GetNextUrl)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserArray_GetNextUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserArray_GetNextUrl_Native
// Il2CppName: ovr_UserArray_GetNextUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UserArray_GetNextUrl_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserArray_GetNextUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserArray_GetSize
// Il2CppName: ovr_UserArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UserArray_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserArray_HasNextPage
// Il2CppName: ovr_UserArray_HasNextPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UserArray_HasNextPage)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserArray_HasNextPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserCapability_GetDescription
// Il2CppName: ovr_UserCapability_GetDescription
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UserCapability_GetDescription)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserCapability_GetDescription", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserCapability_GetDescription_Native
// Il2CppName: ovr_UserCapability_GetDescription_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UserCapability_GetDescription_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserCapability_GetDescription_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserCapability_GetIsEnabled
// Il2CppName: ovr_UserCapability_GetIsEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UserCapability_GetIsEnabled)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserCapability_GetIsEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserCapability_GetName
// Il2CppName: ovr_UserCapability_GetName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UserCapability_GetName)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserCapability_GetName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserCapability_GetName_Native
// Il2CppName: ovr_UserCapability_GetName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UserCapability_GetName_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserCapability_GetName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserCapability_GetReasonCode
// Il2CppName: ovr_UserCapability_GetReasonCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UserCapability_GetReasonCode)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserCapability_GetReasonCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserCapability_GetReasonCode_Native
// Il2CppName: ovr_UserCapability_GetReasonCode_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UserCapability_GetReasonCode_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserCapability_GetReasonCode_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserCapabilityArray_GetElement
// Il2CppName: ovr_UserCapabilityArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_UserCapabilityArray_GetElement)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserCapabilityArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserCapabilityArray_GetNextUrl
// Il2CppName: ovr_UserCapabilityArray_GetNextUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UserCapabilityArray_GetNextUrl)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserCapabilityArray_GetNextUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserCapabilityArray_GetNextUrl_Native
// Il2CppName: ovr_UserCapabilityArray_GetNextUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UserCapabilityArray_GetNextUrl_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserCapabilityArray_GetNextUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserCapabilityArray_GetSize
// Il2CppName: ovr_UserCapabilityArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UserCapabilityArray_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserCapabilityArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserCapabilityArray_HasNextPage
// Il2CppName: ovr_UserCapabilityArray_HasNextPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UserCapabilityArray_HasNextPage)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserCapabilityArray_HasNextPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserDataStoreUpdateResponse_GetSuccess
// Il2CppName: ovr_UserDataStoreUpdateResponse_GetSuccess
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UserDataStoreUpdateResponse_GetSuccess)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserDataStoreUpdateResponse_GetSuccess", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserProof_GetNonce
// Il2CppName: ovr_UserProof_GetNonce
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UserProof_GetNonce)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserProof_GetNonce", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserProof_GetNonce_Native
// Il2CppName: ovr_UserProof_GetNonce_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UserProof_GetNonce_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserProof_GetNonce_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserReportID_GetDidCancel
// Il2CppName: ovr_UserReportID_GetDidCancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UserReportID_GetDidCancel)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserReportID_GetDidCancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserReportID_GetID
// Il2CppName: ovr_UserReportID_GetID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UserReportID_GetID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserReportID_GetID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_VoipDecoder_Decode
// Il2CppName: ovr_VoipDecoder_Decode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::ArrayW<uint8_t>, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_VoipDecoder_Decode)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* compressedData = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* compressedSize = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_VoipDecoder_Decode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, compressedData, compressedSize});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_VoipDecoder_GetDecodedPCM
// Il2CppName: ovr_VoipDecoder_GetDecodedPCM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr, ::ArrayW<float>, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_VoipDecoder_GetDecodedPCM)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* outputBuffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    static auto* outputBufferSize = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_VoipDecoder_GetDecodedPCM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, outputBuffer, outputBufferSize});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_VoipEncoder_AddPCM
// Il2CppName: ovr_VoipEncoder_AddPCM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::ArrayW<float>, uint)>(&Oculus::Platform::CAPI::ovr_VoipEncoder_AddPCM)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* inputData = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    static auto* inputSize = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_VoipEncoder_AddPCM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, inputData, inputSize});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_VoipEncoder_GetCompressedData
// Il2CppName: ovr_VoipEncoder_GetCompressedData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr, ::ArrayW<uint8_t>, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_VoipEncoder_GetCompressedData)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* outputBuffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* intputSize = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_VoipEncoder_GetCompressedData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, outputBuffer, intputSize});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_VoipEncoder_GetCompressedDataSize
// Il2CppName: ovr_VoipEncoder_GetCompressedDataSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_VoipEncoder_GetCompressedDataSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_VoipEncoder_GetCompressedDataSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AbuseReportOptions_Create
// Il2CppName: ovr_AbuseReportOptions_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)()>(&Oculus::Platform::CAPI::ovr_AbuseReportOptions_Create)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AbuseReportOptions_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AbuseReportOptions_Destroy
// Il2CppName: ovr_AbuseReportOptions_Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AbuseReportOptions_Destroy)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AbuseReportOptions_Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AbuseReportOptions_SetPreventPeopleChooser
// Il2CppName: ovr_AbuseReportOptions_SetPreventPeopleChooser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, bool)>(&Oculus::Platform::CAPI::ovr_AbuseReportOptions_SetPreventPeopleChooser)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AbuseReportOptions_SetPreventPeopleChooser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AbuseReportOptions_SetReportType
// Il2CppName: ovr_AbuseReportOptions_SetReportType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::Oculus::Platform::AbuseReportType)>(&Oculus::Platform::CAPI::ovr_AbuseReportOptions_SetReportType)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "AbuseReportType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AbuseReportOptions_SetReportType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_Create
// Il2CppName: ovr_AdvancedAbuseReportOptions_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)()>(&Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_Create)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AdvancedAbuseReportOptions_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_Destroy
// Il2CppName: ovr_AdvancedAbuseReportOptions_Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_Destroy)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AdvancedAbuseReportOptions_Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetDeveloperDefinedContextString
// Il2CppName: ovr_AdvancedAbuseReportOptions_SetDeveloperDefinedContextString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::StringW, ::StringW)>(&Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetDeveloperDefinedContextString)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AdvancedAbuseReportOptions_SetDeveloperDefinedContextString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, key, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetDeveloperDefinedContextString_Native
// Il2CppName: ovr_AdvancedAbuseReportOptions_SetDeveloperDefinedContextString_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetDeveloperDefinedContextString_Native)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AdvancedAbuseReportOptions_SetDeveloperDefinedContextString_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, key, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_ClearDeveloperDefinedContext
// Il2CppName: ovr_AdvancedAbuseReportOptions_ClearDeveloperDefinedContext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_ClearDeveloperDefinedContext)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AdvancedAbuseReportOptions_ClearDeveloperDefinedContext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetObjectType
// Il2CppName: ovr_AdvancedAbuseReportOptions_SetObjectType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::StringW)>(&Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetObjectType)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AdvancedAbuseReportOptions_SetObjectType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetObjectType_Native
// Il2CppName: ovr_AdvancedAbuseReportOptions_SetObjectType_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetObjectType_Native)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AdvancedAbuseReportOptions_SetObjectType_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetReportType
// Il2CppName: ovr_AdvancedAbuseReportOptions_SetReportType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::Oculus::Platform::AbuseReportType)>(&Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetReportType)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "AbuseReportType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AdvancedAbuseReportOptions_SetReportType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_AddSuggestedUser
// Il2CppName: ovr_AdvancedAbuseReportOptions_AddSuggestedUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, uint64_t)>(&Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_AddSuggestedUser)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AdvancedAbuseReportOptions_AddSuggestedUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_ClearSuggestedUsers
// Il2CppName: ovr_AdvancedAbuseReportOptions_ClearSuggestedUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_ClearSuggestedUsers)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AdvancedAbuseReportOptions_ClearSuggestedUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetVideoMode
// Il2CppName: ovr_AdvancedAbuseReportOptions_SetVideoMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::Oculus::Platform::AbuseReportVideoMode)>(&Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetVideoMode)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "AbuseReportVideoMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AdvancedAbuseReportOptions_SetVideoMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationOptions_Create
// Il2CppName: ovr_ApplicationOptions_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)()>(&Oculus::Platform::CAPI::ovr_ApplicationOptions_Create)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationOptions_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationOptions_Destroy
// Il2CppName: ovr_ApplicationOptions_Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ApplicationOptions_Destroy)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationOptions_Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationOptions_SetDeeplinkMessage
// Il2CppName: ovr_ApplicationOptions_SetDeeplinkMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::StringW)>(&Oculus::Platform::CAPI::ovr_ApplicationOptions_SetDeeplinkMessage)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationOptions_SetDeeplinkMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationOptions_SetDeeplinkMessage_Native
// Il2CppName: ovr_ApplicationOptions_SetDeeplinkMessage_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ApplicationOptions_SetDeeplinkMessage_Native)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationOptions_SetDeeplinkMessage_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationOptions_SetDestinationApiName
// Il2CppName: ovr_ApplicationOptions_SetDestinationApiName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::StringW)>(&Oculus::Platform::CAPI::ovr_ApplicationOptions_SetDestinationApiName)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationOptions_SetDestinationApiName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationOptions_SetDestinationApiName_Native
// Il2CppName: ovr_ApplicationOptions_SetDestinationApiName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ApplicationOptions_SetDestinationApiName_Native)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationOptions_SetDestinationApiName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationOptions_SetLobbySessionId
// Il2CppName: ovr_ApplicationOptions_SetLobbySessionId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::StringW)>(&Oculus::Platform::CAPI::ovr_ApplicationOptions_SetLobbySessionId)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationOptions_SetLobbySessionId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationOptions_SetLobbySessionId_Native
// Il2CppName: ovr_ApplicationOptions_SetLobbySessionId_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ApplicationOptions_SetLobbySessionId_Native)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationOptions_SetLobbySessionId_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationOptions_SetMatchSessionId
// Il2CppName: ovr_ApplicationOptions_SetMatchSessionId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::StringW)>(&Oculus::Platform::CAPI::ovr_ApplicationOptions_SetMatchSessionId)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationOptions_SetMatchSessionId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationOptions_SetMatchSessionId_Native
// Il2CppName: ovr_ApplicationOptions_SetMatchSessionId_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ApplicationOptions_SetMatchSessionId_Native)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationOptions_SetMatchSessionId_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationOptions_SetRoomId
// Il2CppName: ovr_ApplicationOptions_SetRoomId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, uint64_t)>(&Oculus::Platform::CAPI::ovr_ApplicationOptions_SetRoomId)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationOptions_SetRoomId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AvatarEditorOptions_Create
// Il2CppName: ovr_AvatarEditorOptions_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)()>(&Oculus::Platform::CAPI::ovr_AvatarEditorOptions_Create)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AvatarEditorOptions_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AvatarEditorOptions_Destroy
// Il2CppName: ovr_AvatarEditorOptions_Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AvatarEditorOptions_Destroy)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AvatarEditorOptions_Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AvatarEditorOptions_SetSourceOverride
// Il2CppName: ovr_AvatarEditorOptions_SetSourceOverride
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::StringW)>(&Oculus::Platform::CAPI::ovr_AvatarEditorOptions_SetSourceOverride)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AvatarEditorOptions_SetSourceOverride", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AvatarEditorOptions_SetSourceOverride_Native
// Il2CppName: ovr_AvatarEditorOptions_SetSourceOverride_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AvatarEditorOptions_SetSourceOverride_Native)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AvatarEditorOptions_SetSourceOverride_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeOptions_Create
// Il2CppName: ovr_ChallengeOptions_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)()>(&Oculus::Platform::CAPI::ovr_ChallengeOptions_Create)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeOptions_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeOptions_Destroy
// Il2CppName: ovr_ChallengeOptions_Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeOptions_Destroy)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeOptions_Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeOptions_SetDescription
// Il2CppName: ovr_ChallengeOptions_SetDescription
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::StringW)>(&Oculus::Platform::CAPI::ovr_ChallengeOptions_SetDescription)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeOptions_SetDescription", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeOptions_SetDescription_Native
// Il2CppName: ovr_ChallengeOptions_SetDescription_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeOptions_SetDescription_Native)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeOptions_SetDescription_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeOptions_SetEndDate
// Il2CppName: ovr_ChallengeOptions_SetEndDate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::DateTime)>(&Oculus::Platform::CAPI::ovr_ChallengeOptions_SetEndDate)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "DateTime")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeOptions_SetEndDate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeOptions_SetEndDate_Native
// Il2CppName: ovr_ChallengeOptions_SetEndDate_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, uint64_t)>(&Oculus::Platform::CAPI::ovr_ChallengeOptions_SetEndDate_Native)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeOptions_SetEndDate_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeOptions_SetIncludeActiveChallenges
// Il2CppName: ovr_ChallengeOptions_SetIncludeActiveChallenges
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, bool)>(&Oculus::Platform::CAPI::ovr_ChallengeOptions_SetIncludeActiveChallenges)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeOptions_SetIncludeActiveChallenges", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeOptions_SetIncludeFutureChallenges
// Il2CppName: ovr_ChallengeOptions_SetIncludeFutureChallenges
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, bool)>(&Oculus::Platform::CAPI::ovr_ChallengeOptions_SetIncludeFutureChallenges)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeOptions_SetIncludeFutureChallenges", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeOptions_SetIncludePastChallenges
// Il2CppName: ovr_ChallengeOptions_SetIncludePastChallenges
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, bool)>(&Oculus::Platform::CAPI::ovr_ChallengeOptions_SetIncludePastChallenges)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeOptions_SetIncludePastChallenges", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeOptions_SetLeaderboardName
// Il2CppName: ovr_ChallengeOptions_SetLeaderboardName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::StringW)>(&Oculus::Platform::CAPI::ovr_ChallengeOptions_SetLeaderboardName)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeOptions_SetLeaderboardName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeOptions_SetLeaderboardName_Native
// Il2CppName: ovr_ChallengeOptions_SetLeaderboardName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeOptions_SetLeaderboardName_Native)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeOptions_SetLeaderboardName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeOptions_SetStartDate
// Il2CppName: ovr_ChallengeOptions_SetStartDate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::DateTime)>(&Oculus::Platform::CAPI::ovr_ChallengeOptions_SetStartDate)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "DateTime")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeOptions_SetStartDate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeOptions_SetStartDate_Native
// Il2CppName: ovr_ChallengeOptions_SetStartDate_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, uint64_t)>(&Oculus::Platform::CAPI::ovr_ChallengeOptions_SetStartDate_Native)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeOptions_SetStartDate_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeOptions_SetTitle
// Il2CppName: ovr_ChallengeOptions_SetTitle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::StringW)>(&Oculus::Platform::CAPI::ovr_ChallengeOptions_SetTitle)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeOptions_SetTitle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeOptions_SetTitle_Native
// Il2CppName: ovr_ChallengeOptions_SetTitle_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeOptions_SetTitle_Native)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeOptions_SetTitle_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeOptions_SetViewerFilter
// Il2CppName: ovr_ChallengeOptions_SetViewerFilter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::Oculus::Platform::ChallengeViewerFilter)>(&Oculus::Platform::CAPI::ovr_ChallengeOptions_SetViewerFilter)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "ChallengeViewerFilter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeOptions_SetViewerFilter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeOptions_SetVisibility
// Il2CppName: ovr_ChallengeOptions_SetVisibility
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::Oculus::Platform::ChallengeVisibility)>(&Oculus::Platform::CAPI::ovr_ChallengeOptions_SetVisibility)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "ChallengeVisibility")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeOptions_SetVisibility", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresenceOptions_Create
// Il2CppName: ovr_GroupPresenceOptions_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)()>(&Oculus::Platform::CAPI::ovr_GroupPresenceOptions_Create)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresenceOptions_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresenceOptions_Destroy
// Il2CppName: ovr_GroupPresenceOptions_Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GroupPresenceOptions_Destroy)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresenceOptions_Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetDeeplinkMessageOverride
// Il2CppName: ovr_GroupPresenceOptions_SetDeeplinkMessageOverride
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::StringW)>(&Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetDeeplinkMessageOverride)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresenceOptions_SetDeeplinkMessageOverride", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetDeeplinkMessageOverride_Native
// Il2CppName: ovr_GroupPresenceOptions_SetDeeplinkMessageOverride_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetDeeplinkMessageOverride_Native)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresenceOptions_SetDeeplinkMessageOverride_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetDestinationApiName
// Il2CppName: ovr_GroupPresenceOptions_SetDestinationApiName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::StringW)>(&Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetDestinationApiName)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresenceOptions_SetDestinationApiName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetDestinationApiName_Native
// Il2CppName: ovr_GroupPresenceOptions_SetDestinationApiName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetDestinationApiName_Native)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresenceOptions_SetDestinationApiName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetIsJoinable
// Il2CppName: ovr_GroupPresenceOptions_SetIsJoinable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, bool)>(&Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetIsJoinable)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresenceOptions_SetIsJoinable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetLobbySessionId
// Il2CppName: ovr_GroupPresenceOptions_SetLobbySessionId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::StringW)>(&Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetLobbySessionId)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresenceOptions_SetLobbySessionId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetLobbySessionId_Native
// Il2CppName: ovr_GroupPresenceOptions_SetLobbySessionId_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetLobbySessionId_Native)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresenceOptions_SetLobbySessionId_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetMatchSessionId
// Il2CppName: ovr_GroupPresenceOptions_SetMatchSessionId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::StringW)>(&Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetMatchSessionId)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresenceOptions_SetMatchSessionId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetMatchSessionId_Native
// Il2CppName: ovr_GroupPresenceOptions_SetMatchSessionId_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetMatchSessionId_Native)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresenceOptions_SetMatchSessionId_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_InviteOptions_Create
// Il2CppName: ovr_InviteOptions_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)()>(&Oculus::Platform::CAPI::ovr_InviteOptions_Create)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_InviteOptions_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_InviteOptions_Destroy
// Il2CppName: ovr_InviteOptions_Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_InviteOptions_Destroy)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_InviteOptions_Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_InviteOptions_AddSuggestedUser
// Il2CppName: ovr_InviteOptions_AddSuggestedUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, uint64_t)>(&Oculus::Platform::CAPI::ovr_InviteOptions_AddSuggestedUser)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_InviteOptions_AddSuggestedUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_InviteOptions_ClearSuggestedUsers
// Il2CppName: ovr_InviteOptions_ClearSuggestedUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_InviteOptions_ClearSuggestedUsers)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_InviteOptions_ClearSuggestedUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MultiplayerErrorOptions_Create
// Il2CppName: ovr_MultiplayerErrorOptions_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)()>(&Oculus::Platform::CAPI::ovr_MultiplayerErrorOptions_Create)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MultiplayerErrorOptions_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MultiplayerErrorOptions_Destroy
// Il2CppName: ovr_MultiplayerErrorOptions_Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MultiplayerErrorOptions_Destroy)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MultiplayerErrorOptions_Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MultiplayerErrorOptions_SetErrorKey
// Il2CppName: ovr_MultiplayerErrorOptions_SetErrorKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::Oculus::Platform::MultiplayerErrorErrorKey)>(&Oculus::Platform::CAPI::ovr_MultiplayerErrorOptions_SetErrorKey)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "MultiplayerErrorErrorKey")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MultiplayerErrorOptions_SetErrorKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncOptions_Create
// Il2CppName: ovr_NetSyncOptions_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)()>(&Oculus::Platform::CAPI::ovr_NetSyncOptions_Create)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncOptions_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncOptions_Destroy
// Il2CppName: ovr_NetSyncOptions_Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_NetSyncOptions_Destroy)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncOptions_Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncOptions_SetVoipGroup
// Il2CppName: ovr_NetSyncOptions_SetVoipGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::StringW)>(&Oculus::Platform::CAPI::ovr_NetSyncOptions_SetVoipGroup)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncOptions_SetVoipGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncOptions_SetVoipGroup_Native
// Il2CppName: ovr_NetSyncOptions_SetVoipGroup_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_NetSyncOptions_SetVoipGroup_Native)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncOptions_SetVoipGroup_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncOptions_SetVoipStreamDefault
// Il2CppName: ovr_NetSyncOptions_SetVoipStreamDefault
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::Oculus::Platform::NetSyncVoipStreamMode)>(&Oculus::Platform::CAPI::ovr_NetSyncOptions_SetVoipStreamDefault)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "NetSyncVoipStreamMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncOptions_SetVoipStreamDefault", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncOptions_SetZoneId
// Il2CppName: ovr_NetSyncOptions_SetZoneId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::StringW)>(&Oculus::Platform::CAPI::ovr_NetSyncOptions_SetZoneId)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncOptions_SetZoneId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncOptions_SetZoneId_Native
// Il2CppName: ovr_NetSyncOptions_SetZoneId_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_NetSyncOptions_SetZoneId_Native)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncOptions_SetZoneId_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RichPresenceOptions_Create
// Il2CppName: ovr_RichPresenceOptions_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)()>(&Oculus::Platform::CAPI::ovr_RichPresenceOptions_Create)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RichPresenceOptions_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RichPresenceOptions_Destroy
// Il2CppName: ovr_RichPresenceOptions_Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_RichPresenceOptions_Destroy)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RichPresenceOptions_Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetApiName
// Il2CppName: ovr_RichPresenceOptions_SetApiName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::StringW)>(&Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetApiName)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RichPresenceOptions_SetApiName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetApiName_Native
// Il2CppName: ovr_RichPresenceOptions_SetApiName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetApiName_Native)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RichPresenceOptions_SetApiName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetDeeplinkMessageOverride
// Il2CppName: ovr_RichPresenceOptions_SetDeeplinkMessageOverride
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::StringW)>(&Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetDeeplinkMessageOverride)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RichPresenceOptions_SetDeeplinkMessageOverride", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native
// Il2CppName: ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetIsJoinable
// Il2CppName: ovr_RichPresenceOptions_SetIsJoinable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, bool)>(&Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetIsJoinable)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RichPresenceOptions_SetIsJoinable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RosterOptions_Create
// Il2CppName: ovr_RosterOptions_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)()>(&Oculus::Platform::CAPI::ovr_RosterOptions_Create)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RosterOptions_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RosterOptions_Destroy
// Il2CppName: ovr_RosterOptions_Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_RosterOptions_Destroy)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RosterOptions_Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RosterOptions_AddSuggestedUser
// Il2CppName: ovr_RosterOptions_AddSuggestedUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, uint64_t)>(&Oculus::Platform::CAPI::ovr_RosterOptions_AddSuggestedUser)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RosterOptions_AddSuggestedUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RosterOptions_ClearSuggestedUsers
// Il2CppName: ovr_RosterOptions_ClearSuggestedUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_RosterOptions_ClearSuggestedUsers)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RosterOptions_ClearSuggestedUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserOptions_Create
// Il2CppName: ovr_UserOptions_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)()>(&Oculus::Platform::CAPI::ovr_UserOptions_Create)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserOptions_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserOptions_Destroy
// Il2CppName: ovr_UserOptions_Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UserOptions_Destroy)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserOptions_Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserOptions_SetMaxUsers
// Il2CppName: ovr_UserOptions_SetMaxUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, uint)>(&Oculus::Platform::CAPI::ovr_UserOptions_SetMaxUsers)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserOptions_SetMaxUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserOptions_AddServiceProvider
// Il2CppName: ovr_UserOptions_AddServiceProvider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::Oculus::Platform::ServiceProvider)>(&Oculus::Platform::CAPI::ovr_UserOptions_AddServiceProvider)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "ServiceProvider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserOptions_AddServiceProvider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserOptions_ClearServiceProviders
// Il2CppName: ovr_UserOptions_ClearServiceProviders
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UserOptions_ClearServiceProviders)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserOptions_ClearServiceProviders", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserOptions_SetTimeWindow
// Il2CppName: ovr_UserOptions_SetTimeWindow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::Oculus::Platform::TimeWindow)>(&Oculus::Platform::CAPI::ovr_UserOptions_SetTimeWindow)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "TimeWindow")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserOptions_SetTimeWindow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_VoipOptions_Create
// Il2CppName: ovr_VoipOptions_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)()>(&Oculus::Platform::CAPI::ovr_VoipOptions_Create)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_VoipOptions_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_VoipOptions_Destroy
// Il2CppName: ovr_VoipOptions_Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_VoipOptions_Destroy)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_VoipOptions_Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_VoipOptions_SetBitrateForNewConnections
// Il2CppName: ovr_VoipOptions_SetBitrateForNewConnections
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::Oculus::Platform::VoipBitrate)>(&Oculus::Platform::CAPI::ovr_VoipOptions_SetBitrateForNewConnections)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "VoipBitrate")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_VoipOptions_SetBitrateForNewConnections", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_VoipOptions_SetCreateNewConnectionUseDtx
// Il2CppName: ovr_VoipOptions_SetCreateNewConnectionUseDtx
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::Oculus::Platform::VoipDtxState)>(&Oculus::Platform::CAPI::ovr_VoipOptions_SetCreateNewConnectionUseDtx)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "VoipDtxState")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_VoipOptions_SetCreateNewConnectionUseDtx", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Oculus::Platform::CAPI::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Oculus::Platform::CAPI::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
