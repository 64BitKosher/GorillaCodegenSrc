// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::VoiceSDK::Utilities
namespace Oculus::VoiceSDK::Utilities {
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Completed forward declares
// Type namespace: Oculus.VoiceSDK.Utilities
namespace Oculus::VoiceSDK::Utilities {
  // Forward declaring type: MicPermissionsManager
  class MicPermissionsManager;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::VoiceSDK::Utilities::MicPermissionsManager);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::VoiceSDK::Utilities::MicPermissionsManager*, "Oculus.VoiceSDK.Utilities", "MicPermissionsManager");
// Type namespace: Oculus.VoiceSDK.Utilities
namespace Oculus::VoiceSDK::Utilities {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.VoiceSDK.Utilities.MicPermissionsManager
  // [TokenAttribute] Offset: FFFFFFFF
  class MicPermissionsManager : public ::Il2CppObject {
    public:
    // Nested type: ::Oculus::VoiceSDK::Utilities::MicPermissionsManager::$$c__DisplayClass1_0
    class $$c__DisplayClass1_0;
    // static public System.Boolean HasMicPermission()
    // Offset: 0x571BCCC
    static bool HasMicPermission();
    // static public System.Void RequestMicPermission(System.Action`1<System.String> permissionGrantedCallback)
    // Offset: 0x571BD10
    static void RequestMicPermission(::System::Action_1<::StringW>* permissionGrantedCallback);
  }; // Oculus.VoiceSDK.Utilities.MicPermissionsManager
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::VoiceSDK::Utilities::MicPermissionsManager::HasMicPermission
// Il2CppName: HasMicPermission
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&Oculus::VoiceSDK::Utilities::MicPermissionsManager::HasMicPermission)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::VoiceSDK::Utilities::MicPermissionsManager*), "HasMicPermission", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::VoiceSDK::Utilities::MicPermissionsManager::RequestMicPermission
// Il2CppName: RequestMicPermission
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action_1<::StringW>*)>(&Oculus::VoiceSDK::Utilities::MicPermissionsManager::RequestMicPermission)> {
  static const MethodInfo* get() {
    static auto* permissionGrantedCallback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::VoiceSDK::Utilities::MicPermissionsManager*), "RequestMicPermission", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{permissionGrantedCallback});
  }
};
