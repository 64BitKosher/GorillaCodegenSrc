// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.VoiceSDK.Utilities.MicPermissionsManager
#include "Oculus/VoiceSDK/Utilities/MicPermissionsManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::VoiceSDK::Utilities::MicPermissionsManager::$$c__DisplayClass1_0);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::VoiceSDK::Utilities::MicPermissionsManager::$$c__DisplayClass1_0*, "Oculus.VoiceSDK.Utilities", "MicPermissionsManager/<>c__DisplayClass1_0");
// Type namespace: Oculus.VoiceSDK.Utilities
namespace Oculus::VoiceSDK::Utilities {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.VoiceSDK.Utilities.MicPermissionsManager/<>c__DisplayClass1_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class MicPermissionsManager::$$c__DisplayClass1_0 : public ::Il2CppObject {
    public:
    public:
    // public System.Action`1<System.String> permissionGrantedCallback
    // Size: 0x8
    // Offset: 0x10
    ::System::Action_1<::StringW>* permissionGrantedCallback;
    // Field size check
    static_assert(sizeof(::System::Action_1<::StringW>*) == 0x8);
    public:
    // Creating conversion operator: operator ::System::Action_1<::StringW>*
    constexpr operator ::System::Action_1<::StringW>*() const noexcept {
      return permissionGrantedCallback;
    }
    // Get instance field reference: public System.Action`1<System.String> permissionGrantedCallback
    [[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& dyn_permissionGrantedCallback();
    // public System.Void .ctor()
    // Offset: 0x571BE60
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MicPermissionsManager::$$c__DisplayClass1_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::VoiceSDK::Utilities::MicPermissionsManager::$$c__DisplayClass1_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MicPermissionsManager::$$c__DisplayClass1_0*, creationType>()));
    }
    // System.Void <RequestMicPermission>b__0(System.String s)
    // Offset: 0x571BE68
    void $RequestMicPermission$b__0(::StringW s);
  }; // Oculus.VoiceSDK.Utilities.MicPermissionsManager/<>c__DisplayClass1_0
  #pragma pack(pop)
  static check_size<sizeof(MicPermissionsManager::$$c__DisplayClass1_0), 16 + sizeof(::System::Action_1<::StringW>*)> __Oculus_VoiceSDK_Utilities_MicPermissionsManager_$$c__DisplayClass1_0SizeCheck;
  static_assert(sizeof(MicPermissionsManager::$$c__DisplayClass1_0) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::VoiceSDK::Utilities::MicPermissionsManager::$$c__DisplayClass1_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Oculus::VoiceSDK::Utilities::MicPermissionsManager::$$c__DisplayClass1_0::$RequestMicPermission$b__0
// Il2CppName: <RequestMicPermission>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::VoiceSDK::Utilities::MicPermissionsManager::$$c__DisplayClass1_0::*)(::StringW)>(&Oculus::VoiceSDK::Utilities::MicPermissionsManager::$$c__DisplayClass1_0::$RequestMicPermission$b__0)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::VoiceSDK::Utilities::MicPermissionsManager::$$c__DisplayClass1_0*), "<RequestMicPermission>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s});
  }
};
