// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Button
  class Button;
  // Forward declaring type: Text
  class Text;
}
// Forward declaring namespace: Meta::WitAi
namespace Meta::WitAi {
  // Forward declaring type: VoiceService
  class VoiceService;
}
// Forward declaring namespace: Meta::WitAi::Requests
namespace Meta::WitAi::Requests {
  // Forward declaring type: VoiceServiceRequest
  class VoiceServiceRequest;
  // Forward declaring type: VoiceServiceRequestEvents
  class VoiceServiceRequestEvents;
}
// Completed forward declares
// Type namespace: Oculus.VoiceSDK.UX
namespace Oculus::VoiceSDK::UX {
  // Forward declaring type: VoiceActivationButton
  class VoiceActivationButton;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::VoiceSDK::UX::VoiceActivationButton);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::VoiceSDK::UX::VoiceActivationButton*, "Oculus.VoiceSDK.UX", "VoiceActivationButton");
// Type namespace: Oculus.VoiceSDK.UX
namespace Oculus::VoiceSDK::UX {
  // Size: 0x61
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.VoiceSDK.UX.VoiceActivationButton
  // [TokenAttribute] Offset: FFFFFFFF
  // [RequireComponent] Offset: FFFFFFFF
  class VoiceActivationButton : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private UnityEngine.UI.Button _button
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::UI::Button* button;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Button*) == 0x8);
    // private UnityEngine.UI.Text _buttonLabel
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::UI::Text* buttonLabel;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Text*) == 0x8);
    // private Meta.WitAi.VoiceService _voiceService
    // Size: 0x8
    // Offset: 0x30
    ::Meta::WitAi::VoiceService* voiceService;
    // Field size check
    static_assert(sizeof(::Meta::WitAi::VoiceService*) == 0x8);
    // private System.String _activateText
    // Size: 0x8
    // Offset: 0x38
    ::StringW activateText;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Boolean _activateImmediately
    // Size: 0x1
    // Offset: 0x40
    bool activateImmediately;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: activateImmediately and: deactivateText
    char __padding4[0x7] = {};
    // private System.String _deactivateText
    // Size: 0x8
    // Offset: 0x48
    ::StringW deactivateText;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Boolean _deactivateAndAbort
    // Size: 0x1
    // Offset: 0x50
    bool deactivateAndAbort;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: deactivateAndAbort and: request
    char __padding6[0x7] = {};
    // private Meta.WitAi.Requests.VoiceServiceRequest _request
    // Size: 0x8
    // Offset: 0x58
    ::Meta::WitAi::Requests::VoiceServiceRequest* request;
    // Field size check
    static_assert(sizeof(::Meta::WitAi::Requests::VoiceServiceRequest*) == 0x8);
    // private System.Boolean _isActive
    // Size: 0x1
    // Offset: 0x60
    bool isActive;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get instance field reference: private UnityEngine.UI.Button _button
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& dyn__button();
    // Get instance field reference: private UnityEngine.UI.Text _buttonLabel
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& dyn__buttonLabel();
    // Get instance field reference: private Meta.WitAi.VoiceService _voiceService
    [[deprecated("Use field access instead!")]] ::Meta::WitAi::VoiceService*& dyn__voiceService();
    // Get instance field reference: private System.String _activateText
    [[deprecated("Use field access instead!")]] ::StringW& dyn__activateText();
    // Get instance field reference: private System.Boolean _activateImmediately
    [[deprecated("Use field access instead!")]] bool& dyn__activateImmediately();
    // Get instance field reference: private System.String _deactivateText
    [[deprecated("Use field access instead!")]] ::StringW& dyn__deactivateText();
    // Get instance field reference: private System.Boolean _deactivateAndAbort
    [[deprecated("Use field access instead!")]] bool& dyn__deactivateAndAbort();
    // Get instance field reference: private Meta.WitAi.Requests.VoiceServiceRequest _request
    [[deprecated("Use field access instead!")]] ::Meta::WitAi::Requests::VoiceServiceRequest*& dyn__request();
    // Get instance field reference: private System.Boolean _isActive
    [[deprecated("Use field access instead!")]] bool& dyn__isActive();
    // private System.Void Awake()
    // Offset: 0x571ABEC
    void Awake();
    // private System.Void OnEnable()
    // Offset: 0x571AD04
    void OnEnable();
    // private System.Void OnDisable()
    // Offset: 0x571AE88
    void OnDisable();
    // private System.Void OnClick()
    // Offset: 0x571AF64
    void OnClick();
    // private System.Void Activate()
    // Offset: 0x571AF74
    void Activate();
    // private System.Void Deactivate()
    // Offset: 0x571AFC8
    void Deactivate();
    // private Meta.WitAi.Requests.VoiceServiceRequestEvents GetRequestEvents()
    // Offset: 0x571B044
    ::Meta::WitAi::Requests::VoiceServiceRequestEvents* GetRequestEvents();
    // private System.Void OnInit(Meta.WitAi.Requests.VoiceServiceRequest request)
    // Offset: 0x571B184
    void OnInit(::Meta::WitAi::Requests::VoiceServiceRequest* request);
    // private System.Void OnComplete(Meta.WitAi.Requests.VoiceServiceRequest request)
    // Offset: 0x571B190
    void OnComplete(::Meta::WitAi::Requests::VoiceServiceRequest* request);
    // private System.Void RefreshActive()
    // Offset: 0x571ADE4
    void RefreshActive();
    // public System.Void .ctor()
    // Offset: 0x571B198
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static VoiceActivationButton* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::VoiceSDK::UX::VoiceActivationButton::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<VoiceActivationButton*, creationType>()));
    }
  }; // Oculus.VoiceSDK.UX.VoiceActivationButton
  #pragma pack(pop)
  static check_size<sizeof(VoiceActivationButton), 96 + sizeof(bool)> __Oculus_VoiceSDK_UX_VoiceActivationButtonSizeCheck;
  static_assert(sizeof(VoiceActivationButton) == 0x61);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::VoiceSDK::UX::VoiceActivationButton::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::VoiceSDK::UX::VoiceActivationButton::*)()>(&Oculus::VoiceSDK::UX::VoiceActivationButton::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::VoiceSDK::UX::VoiceActivationButton*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::VoiceSDK::UX::VoiceActivationButton::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::VoiceSDK::UX::VoiceActivationButton::*)()>(&Oculus::VoiceSDK::UX::VoiceActivationButton::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::VoiceSDK::UX::VoiceActivationButton*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::VoiceSDK::UX::VoiceActivationButton::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::VoiceSDK::UX::VoiceActivationButton::*)()>(&Oculus::VoiceSDK::UX::VoiceActivationButton::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::VoiceSDK::UX::VoiceActivationButton*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::VoiceSDK::UX::VoiceActivationButton::OnClick
// Il2CppName: OnClick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::VoiceSDK::UX::VoiceActivationButton::*)()>(&Oculus::VoiceSDK::UX::VoiceActivationButton::OnClick)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::VoiceSDK::UX::VoiceActivationButton*), "OnClick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::VoiceSDK::UX::VoiceActivationButton::Activate
// Il2CppName: Activate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::VoiceSDK::UX::VoiceActivationButton::*)()>(&Oculus::VoiceSDK::UX::VoiceActivationButton::Activate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::VoiceSDK::UX::VoiceActivationButton*), "Activate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::VoiceSDK::UX::VoiceActivationButton::Deactivate
// Il2CppName: Deactivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::VoiceSDK::UX::VoiceActivationButton::*)()>(&Oculus::VoiceSDK::UX::VoiceActivationButton::Deactivate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::VoiceSDK::UX::VoiceActivationButton*), "Deactivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::VoiceSDK::UX::VoiceActivationButton::GetRequestEvents
// Il2CppName: GetRequestEvents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Meta::WitAi::Requests::VoiceServiceRequestEvents* (Oculus::VoiceSDK::UX::VoiceActivationButton::*)()>(&Oculus::VoiceSDK::UX::VoiceActivationButton::GetRequestEvents)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::VoiceSDK::UX::VoiceActivationButton*), "GetRequestEvents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::VoiceSDK::UX::VoiceActivationButton::OnInit
// Il2CppName: OnInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::VoiceSDK::UX::VoiceActivationButton::*)(::Meta::WitAi::Requests::VoiceServiceRequest*)>(&Oculus::VoiceSDK::UX::VoiceActivationButton::OnInit)> {
  static const MethodInfo* get() {
    static auto* request = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Requests", "VoiceServiceRequest")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::VoiceSDK::UX::VoiceActivationButton*), "OnInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{request});
  }
};
// Writing MetadataGetter for method: Oculus::VoiceSDK::UX::VoiceActivationButton::OnComplete
// Il2CppName: OnComplete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::VoiceSDK::UX::VoiceActivationButton::*)(::Meta::WitAi::Requests::VoiceServiceRequest*)>(&Oculus::VoiceSDK::UX::VoiceActivationButton::OnComplete)> {
  static const MethodInfo* get() {
    static auto* request = &::il2cpp_utils::GetClassFromName("Meta.WitAi.Requests", "VoiceServiceRequest")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::VoiceSDK::UX::VoiceActivationButton*), "OnComplete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{request});
  }
};
// Writing MetadataGetter for method: Oculus::VoiceSDK::UX::VoiceActivationButton::RefreshActive
// Il2CppName: RefreshActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::VoiceSDK::UX::VoiceActivationButton::*)()>(&Oculus::VoiceSDK::UX::VoiceActivationButton::RefreshActive)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::VoiceSDK::UX::VoiceActivationButton*), "RefreshActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::VoiceSDK::UX::VoiceActivationButton::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
