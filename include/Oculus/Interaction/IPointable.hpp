// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.PointerEvent
#include "Oculus/Interaction/PointerEvent.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Completed forward declares
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Forward declaring type: IPointable
  class IPointable;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::IPointable);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::IPointable*, "Oculus.Interaction", "IPointable");
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.IPointable
  // [TokenAttribute] Offset: FFFFFFFF
  class IPointable {
    public:
    // public System.Void add_WhenPointerEventRaised(System.Action`1<Oculus.Interaction.PointerEvent> value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void add_WhenPointerEventRaised(::System::Action_1<::Oculus::Interaction::PointerEvent>* value);
    // public System.Void remove_WhenPointerEventRaised(System.Action`1<Oculus.Interaction.PointerEvent> value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void remove_WhenPointerEventRaised(::System::Action_1<::Oculus::Interaction::PointerEvent>* value);
  }; // Oculus.Interaction.IPointable
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::IPointable::add_WhenPointerEventRaised
// Il2CppName: add_WhenPointerEventRaised
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::IPointable::*)(::System::Action_1<::Oculus::Interaction::PointerEvent>*)>(&Oculus::Interaction::IPointable::add_WhenPointerEventRaised)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Oculus.Interaction", "PointerEvent")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::IPointable*), "add_WhenPointerEventRaised", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::IPointable::remove_WhenPointerEventRaised
// Il2CppName: remove_WhenPointerEventRaised
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::IPointable::*)(::System::Action_1<::Oculus::Interaction::PointerEvent>*)>(&Oculus::Interaction::IPointable::remove_WhenPointerEventRaised)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Oculus.Interaction", "PointerEvent")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::IPointable*), "remove_WhenPointerEventRaised", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
