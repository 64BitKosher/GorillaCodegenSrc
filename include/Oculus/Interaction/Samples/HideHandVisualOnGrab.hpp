// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction::HandGrab
namespace Oculus::Interaction::HandGrab {
  // Forward declaring type: HandGrabInteractor
  class HandGrabInteractor;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Object because it is already included!
}
// Forward declaring namespace: Oculus::Interaction
namespace Oculus::Interaction {
  // Forward declaring type: IHandVisual
  class IHandVisual;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.Samples
namespace Oculus::Interaction::Samples {
  // Forward declaring type: HideHandVisualOnGrab
  class HideHandVisualOnGrab;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::Samples::HideHandVisualOnGrab);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::Samples::HideHandVisualOnGrab*, "Oculus.Interaction.Samples", "HideHandVisualOnGrab");
// Type namespace: Oculus.Interaction.Samples
namespace Oculus::Interaction::Samples {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.Samples.HideHandVisualOnGrab
  // [TokenAttribute] Offset: FFFFFFFF
  class HideHandVisualOnGrab : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private Oculus.Interaction.HandGrab.HandGrabInteractor _handGrabInteractor
    // Size: 0x8
    // Offset: 0x20
    ::Oculus::Interaction::HandGrab::HandGrabInteractor* handGrabInteractor;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::HandGrab::HandGrabInteractor*) == 0x8);
    // private UnityEngine.Object _handVisual
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::Object* handVisual;
    // Field size check
    static_assert(sizeof(::UnityEngine::Object*) == 0x8);
    // private Oculus.Interaction.IHandVisual HandVisual
    // Size: 0x8
    // Offset: 0x30
    ::Oculus::Interaction::IHandVisual* HandVisual;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::IHandVisual*) == 0x8);
    public:
    // Get instance field reference: private Oculus.Interaction.HandGrab.HandGrabInteractor _handGrabInteractor
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::HandGrabInteractor*& dyn__handGrabInteractor();
    // Get instance field reference: private UnityEngine.Object _handVisual
    [[deprecated("Use field access instead!")]] ::UnityEngine::Object*& dyn__handVisual();
    // Get instance field reference: private Oculus.Interaction.IHandVisual HandVisual
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::IHandVisual*& dyn_HandVisual();
    // protected System.Void Awake()
    // Offset: 0x479EB10
    void Awake();
    // protected System.Void Start()
    // Offset: 0x479EB78
    void Start();
    // protected System.Void Update()
    // Offset: 0x479EB7C
    void Update();
    // public System.Void InjectAll(Oculus.Interaction.HandGrab.HandGrabInteractor handGrabInteractor, Oculus.Interaction.IHandVisual handVisual)
    // Offset: 0x479ED4C
    void InjectAll(::Oculus::Interaction::HandGrab::HandGrabInteractor* handGrabInteractor, ::Oculus::Interaction::IHandVisual* handVisual);
    // private System.Void InjectHandGrabInteractor(Oculus.Interaction.HandGrab.HandGrabInteractor handGrabInteractor)
    // Offset: 0x479EE48
    void InjectHandGrabInteractor(::Oculus::Interaction::HandGrab::HandGrabInteractor* handGrabInteractor);
    // private System.Void InjectHandVisual(Oculus.Interaction.IHandVisual handVisual)
    // Offset: 0x479ED78
    void InjectHandVisual(::Oculus::Interaction::IHandVisual* handVisual);
    // public System.Void .ctor()
    // Offset: 0x479EE50
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static HideHandVisualOnGrab* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::HideHandVisualOnGrab::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<HideHandVisualOnGrab*, creationType>()));
    }
  }; // Oculus.Interaction.Samples.HideHandVisualOnGrab
  #pragma pack(pop)
  static check_size<sizeof(HideHandVisualOnGrab), 48 + sizeof(::Oculus::Interaction::IHandVisual*)> __Oculus_Interaction_Samples_HideHandVisualOnGrabSizeCheck;
  static_assert(sizeof(HideHandVisualOnGrab) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::Samples::HideHandVisualOnGrab::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Samples::HideHandVisualOnGrab::*)()>(&Oculus::Interaction::Samples::HideHandVisualOnGrab::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Samples::HideHandVisualOnGrab*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Samples::HideHandVisualOnGrab::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Samples::HideHandVisualOnGrab::*)()>(&Oculus::Interaction::Samples::HideHandVisualOnGrab::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Samples::HideHandVisualOnGrab*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Samples::HideHandVisualOnGrab::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Samples::HideHandVisualOnGrab::*)()>(&Oculus::Interaction::Samples::HideHandVisualOnGrab::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Samples::HideHandVisualOnGrab*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Samples::HideHandVisualOnGrab::InjectAll
// Il2CppName: InjectAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Samples::HideHandVisualOnGrab::*)(::Oculus::Interaction::HandGrab::HandGrabInteractor*, ::Oculus::Interaction::IHandVisual*)>(&Oculus::Interaction::Samples::HideHandVisualOnGrab::InjectAll)> {
  static const MethodInfo* get() {
    static auto* handGrabInteractor = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "HandGrabInteractor")->byval_arg;
    static auto* handVisual = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "IHandVisual")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Samples::HideHandVisualOnGrab*), "InjectAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handGrabInteractor, handVisual});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Samples::HideHandVisualOnGrab::InjectHandGrabInteractor
// Il2CppName: InjectHandGrabInteractor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Samples::HideHandVisualOnGrab::*)(::Oculus::Interaction::HandGrab::HandGrabInteractor*)>(&Oculus::Interaction::Samples::HideHandVisualOnGrab::InjectHandGrabInteractor)> {
  static const MethodInfo* get() {
    static auto* handGrabInteractor = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "HandGrabInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Samples::HideHandVisualOnGrab*), "InjectHandGrabInteractor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handGrabInteractor});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Samples::HideHandVisualOnGrab::InjectHandVisual
// Il2CppName: InjectHandVisual
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Samples::HideHandVisualOnGrab::*)(::Oculus::Interaction::IHandVisual*)>(&Oculus::Interaction::Samples::HideHandVisualOnGrab::InjectHandVisual)> {
  static const MethodInfo* get() {
    static auto* handVisual = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "IHandVisual")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Samples::HideHandVisualOnGrab*), "InjectHandVisual", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handVisual});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Samples::HideHandVisualOnGrab::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
