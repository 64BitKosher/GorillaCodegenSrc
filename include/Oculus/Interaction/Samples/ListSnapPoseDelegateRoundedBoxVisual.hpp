// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction
namespace Oculus::Interaction {
  // Forward declaring type: ListSnapPoseDelegate
  class ListSnapPoseDelegate;
  // Forward declaring type: RoundedBoxProperties
  class RoundedBoxProperties;
  // Forward declaring type: SnapInteractable
  class SnapInteractable;
  // Forward declaring type: ProgressCurve
  class ProgressCurve;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.Samples
namespace Oculus::Interaction::Samples {
  // Forward declaring type: ListSnapPoseDelegateRoundedBoxVisual
  class ListSnapPoseDelegateRoundedBoxVisual;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::Samples::ListSnapPoseDelegateRoundedBoxVisual);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::Samples::ListSnapPoseDelegateRoundedBoxVisual*, "Oculus.Interaction.Samples", "ListSnapPoseDelegateRoundedBoxVisual");
// Type namespace: Oculus.Interaction.Samples
namespace Oculus::Interaction::Samples {
  // Size: 0x50
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.Samples.ListSnapPoseDelegateRoundedBoxVisual
  // [TokenAttribute] Offset: FFFFFFFF
  class ListSnapPoseDelegateRoundedBoxVisual : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private Oculus.Interaction.ListSnapPoseDelegate _listSnapPoseDelegate
    // Size: 0x8
    // Offset: 0x20
    ::Oculus::Interaction::ListSnapPoseDelegate* listSnapPoseDelegate;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::ListSnapPoseDelegate*) == 0x8);
    // private Oculus.Interaction.RoundedBoxProperties _properties
    // Size: 0x8
    // Offset: 0x28
    ::Oculus::Interaction::RoundedBoxProperties* properties;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::RoundedBoxProperties*) == 0x8);
    // private Oculus.Interaction.SnapInteractable _snapInteractable
    // Size: 0x8
    // Offset: 0x30
    ::Oculus::Interaction::SnapInteractable* snapInteractable;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::SnapInteractable*) == 0x8);
    // private System.Single _minSize
    // Size: 0x4
    // Offset: 0x38
    float minSize;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Padding between fields: minSize and: curve
    char __padding3[0x4] = {};
    // private Oculus.Interaction.ProgressCurve _curve
    // Size: 0x8
    // Offset: 0x40
    ::Oculus::Interaction::ProgressCurve* curve;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::ProgressCurve*) == 0x8);
    // private System.Single _targetWidth
    // Size: 0x4
    // Offset: 0x48
    float targetWidth;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single _startWidth
    // Size: 0x4
    // Offset: 0x4C
    float startWidth;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Get instance field reference: private Oculus.Interaction.ListSnapPoseDelegate _listSnapPoseDelegate
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::ListSnapPoseDelegate*& dyn__listSnapPoseDelegate();
    // Get instance field reference: private Oculus.Interaction.RoundedBoxProperties _properties
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::RoundedBoxProperties*& dyn__properties();
    // Get instance field reference: private Oculus.Interaction.SnapInteractable _snapInteractable
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::SnapInteractable*& dyn__snapInteractable();
    // Get instance field reference: private System.Single _minSize
    [[deprecated("Use field access instead!")]] float& dyn__minSize();
    // Get instance field reference: private Oculus.Interaction.ProgressCurve _curve
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::ProgressCurve*& dyn__curve();
    // Get instance field reference: private System.Single _targetWidth
    [[deprecated("Use field access instead!")]] float& dyn__targetWidth();
    // Get instance field reference: private System.Single _startWidth
    [[deprecated("Use field access instead!")]] float& dyn__startWidth();
    // protected System.Void LateUpdate()
    // Offset: 0x47A209C
    void LateUpdate();
    // public System.Void .ctor()
    // Offset: 0x47A22A4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ListSnapPoseDelegateRoundedBoxVisual* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ListSnapPoseDelegateRoundedBoxVisual::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ListSnapPoseDelegateRoundedBoxVisual*, creationType>()));
    }
  }; // Oculus.Interaction.Samples.ListSnapPoseDelegateRoundedBoxVisual
  #pragma pack(pop)
  static check_size<sizeof(ListSnapPoseDelegateRoundedBoxVisual), 76 + sizeof(float)> __Oculus_Interaction_Samples_ListSnapPoseDelegateRoundedBoxVisualSizeCheck;
  static_assert(sizeof(ListSnapPoseDelegateRoundedBoxVisual) == 0x50);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::Samples::ListSnapPoseDelegateRoundedBoxVisual::LateUpdate
// Il2CppName: LateUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Samples::ListSnapPoseDelegateRoundedBoxVisual::*)()>(&Oculus::Interaction::Samples::ListSnapPoseDelegateRoundedBoxVisual::LateUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Samples::ListSnapPoseDelegateRoundedBoxVisual*), "LateUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Samples::ListSnapPoseDelegateRoundedBoxVisual::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
