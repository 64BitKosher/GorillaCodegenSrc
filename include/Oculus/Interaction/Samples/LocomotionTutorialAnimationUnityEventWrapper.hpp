// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Events
namespace UnityEngine::Events {
  // Forward declaring type: UnityEvent
  class UnityEvent;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.Samples
namespace Oculus::Interaction::Samples {
  // Forward declaring type: LocomotionTutorialAnimationUnityEventWrapper
  class LocomotionTutorialAnimationUnityEventWrapper;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::Samples::LocomotionTutorialAnimationUnityEventWrapper);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::Samples::LocomotionTutorialAnimationUnityEventWrapper*, "Oculus.Interaction.Samples", "LocomotionTutorialAnimationUnityEventWrapper");
// Type namespace: Oculus.Interaction.Samples
namespace Oculus::Interaction::Samples {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.Samples.LocomotionTutorialAnimationUnityEventWrapper
  // [TokenAttribute] Offset: FFFFFFFF
  class LocomotionTutorialAnimationUnityEventWrapper : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public UnityEngine.Events.UnityEvent WhenEnableTeleportRay
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::Events::UnityEvent* WhenEnableTeleportRay;
    // Field size check
    static_assert(sizeof(::UnityEngine::Events::UnityEvent*) == 0x8);
    // public UnityEngine.Events.UnityEvent WhenDisableTeleportRay
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::Events::UnityEvent* WhenDisableTeleportRay;
    // Field size check
    static_assert(sizeof(::UnityEngine::Events::UnityEvent*) == 0x8);
    // public UnityEngine.Events.UnityEvent WhenEnableTurningRing
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::Events::UnityEvent* WhenEnableTurningRing;
    // Field size check
    static_assert(sizeof(::UnityEngine::Events::UnityEvent*) == 0x8);
    // public UnityEngine.Events.UnityEvent WhenDisableTurningRing
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::Events::UnityEvent* WhenDisableTurningRing;
    // Field size check
    static_assert(sizeof(::UnityEngine::Events::UnityEvent*) == 0x8);
    public:
    // Get instance field reference: public UnityEngine.Events.UnityEvent WhenEnableTeleportRay
    [[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& dyn_WhenEnableTeleportRay();
    // Get instance field reference: public UnityEngine.Events.UnityEvent WhenDisableTeleportRay
    [[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& dyn_WhenDisableTeleportRay();
    // Get instance field reference: public UnityEngine.Events.UnityEvent WhenEnableTurningRing
    [[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& dyn_WhenEnableTurningRing();
    // Get instance field reference: public UnityEngine.Events.UnityEvent WhenDisableTurningRing
    [[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& dyn_WhenDisableTurningRing();
    // public System.Void EnableTeleportRay()
    // Offset: 0x479EE58
    void EnableTeleportRay();
    // public System.Void DisableTeleportRay()
    // Offset: 0x479EE74
    void DisableTeleportRay();
    // public System.Void EnableTurningRing()
    // Offset: 0x479EE90
    void EnableTurningRing();
    // public System.Void DisableTurningRing()
    // Offset: 0x479EEAC
    void DisableTurningRing();
    // public System.Void .ctor()
    // Offset: 0x479EEC8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LocomotionTutorialAnimationUnityEventWrapper* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialAnimationUnityEventWrapper::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LocomotionTutorialAnimationUnityEventWrapper*, creationType>()));
    }
  }; // Oculus.Interaction.Samples.LocomotionTutorialAnimationUnityEventWrapper
  #pragma pack(pop)
  static check_size<sizeof(LocomotionTutorialAnimationUnityEventWrapper), 56 + sizeof(::UnityEngine::Events::UnityEvent*)> __Oculus_Interaction_Samples_LocomotionTutorialAnimationUnityEventWrapperSizeCheck;
  static_assert(sizeof(LocomotionTutorialAnimationUnityEventWrapper) == 0x40);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::Samples::LocomotionTutorialAnimationUnityEventWrapper::EnableTeleportRay
// Il2CppName: EnableTeleportRay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Samples::LocomotionTutorialAnimationUnityEventWrapper::*)()>(&Oculus::Interaction::Samples::LocomotionTutorialAnimationUnityEventWrapper::EnableTeleportRay)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Samples::LocomotionTutorialAnimationUnityEventWrapper*), "EnableTeleportRay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Samples::LocomotionTutorialAnimationUnityEventWrapper::DisableTeleportRay
// Il2CppName: DisableTeleportRay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Samples::LocomotionTutorialAnimationUnityEventWrapper::*)()>(&Oculus::Interaction::Samples::LocomotionTutorialAnimationUnityEventWrapper::DisableTeleportRay)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Samples::LocomotionTutorialAnimationUnityEventWrapper*), "DisableTeleportRay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Samples::LocomotionTutorialAnimationUnityEventWrapper::EnableTurningRing
// Il2CppName: EnableTurningRing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Samples::LocomotionTutorialAnimationUnityEventWrapper::*)()>(&Oculus::Interaction::Samples::LocomotionTutorialAnimationUnityEventWrapper::EnableTurningRing)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Samples::LocomotionTutorialAnimationUnityEventWrapper*), "EnableTurningRing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Samples::LocomotionTutorialAnimationUnityEventWrapper::DisableTurningRing
// Il2CppName: DisableTurningRing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Samples::LocomotionTutorialAnimationUnityEventWrapper::*)()>(&Oculus::Interaction::Samples::LocomotionTutorialAnimationUnityEventWrapper::DisableTurningRing)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Samples::LocomotionTutorialAnimationUnityEventWrapper*), "DisableTurningRing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Samples::LocomotionTutorialAnimationUnityEventWrapper::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
