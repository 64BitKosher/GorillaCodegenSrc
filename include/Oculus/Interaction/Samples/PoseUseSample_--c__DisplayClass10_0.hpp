// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.Samples.PoseUseSample
#include "Oculus/Interaction/Samples/PoseUseSample.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::Samples::PoseUseSample::$$c__DisplayClass10_0);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::Samples::PoseUseSample::$$c__DisplayClass10_0*, "Oculus.Interaction.Samples", "PoseUseSample/<>c__DisplayClass10_0");
// Type namespace: Oculus.Interaction.Samples
namespace Oculus::Interaction::Samples {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.Samples.PoseUseSample/<>c__DisplayClass10_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class PoseUseSample::$$c__DisplayClass10_0 : public ::Il2CppObject {
    public:
    public:
    // public System.Int32 poseNumber
    // Size: 0x4
    // Offset: 0x10
    int poseNumber;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: poseNumber and: $$4__this
    char __padding0[0x4] = {};
    // public Oculus.Interaction.Samples.PoseUseSample <>4__this
    // Size: 0x8
    // Offset: 0x18
    ::Oculus::Interaction::Samples::PoseUseSample* $$4__this;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Samples::PoseUseSample*) == 0x8);
    public:
    // Get instance field reference: public System.Int32 poseNumber
    [[deprecated("Use field access instead!")]] int& dyn_poseNumber();
    // Get instance field reference: public Oculus.Interaction.Samples.PoseUseSample <>4__this
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Samples::PoseUseSample*& dyn_$$4__this();
    // public System.Void .ctor()
    // Offset: 0x47A0648
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PoseUseSample::$$c__DisplayClass10_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PoseUseSample::$$c__DisplayClass10_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PoseUseSample::$$c__DisplayClass10_0*, creationType>()));
    }
    // System.Void <Start>b__0()
    // Offset: 0x47A0AB4
    void $Start$b__0();
    // System.Void <Start>b__1()
    // Offset: 0x47A0AD4
    void $Start$b__1();
  }; // Oculus.Interaction.Samples.PoseUseSample/<>c__DisplayClass10_0
  #pragma pack(pop)
  static check_size<sizeof(PoseUseSample::$$c__DisplayClass10_0), 24 + sizeof(::Oculus::Interaction::Samples::PoseUseSample*)> __Oculus_Interaction_Samples_PoseUseSample_$$c__DisplayClass10_0SizeCheck;
  static_assert(sizeof(PoseUseSample::$$c__DisplayClass10_0) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::Samples::PoseUseSample::$$c__DisplayClass10_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Oculus::Interaction::Samples::PoseUseSample::$$c__DisplayClass10_0::$Start$b__0
// Il2CppName: <Start>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Samples::PoseUseSample::$$c__DisplayClass10_0::*)()>(&Oculus::Interaction::Samples::PoseUseSample::$$c__DisplayClass10_0::$Start$b__0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Samples::PoseUseSample::$$c__DisplayClass10_0*), "<Start>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Samples::PoseUseSample::$$c__DisplayClass10_0::$Start$b__1
// Il2CppName: <Start>b__1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Samples::PoseUseSample::$$c__DisplayClass10_0::*)()>(&Oculus::Interaction::Samples::PoseUseSample::$$c__DisplayClass10_0::$Start$b__1)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Samples::PoseUseSample::$$c__DisplayClass10_0*), "<Start>b__1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
