// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: Oculus.Interaction.Samples
namespace Oculus::Interaction::Samples {
  // Forward declaring type: ScaleModifier
  class ScaleModifier;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::Samples::ScaleModifier);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::Samples::ScaleModifier*, "Oculus.Interaction.Samples", "ScaleModifier");
// Type namespace: Oculus.Interaction.Samples
namespace Oculus::Interaction::Samples {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.Samples.ScaleModifier
  // [TokenAttribute] Offset: FFFFFFFF
  class ScaleModifier : public ::UnityEngine::MonoBehaviour {
    public:
    // public System.Void SetScaleX(System.Single x)
    // Offset: 0x47A1974
    void SetScaleX(float x);
    // public System.Void SetScaleY(System.Single y)
    // Offset: 0x47A19F0
    void SetScaleY(float y);
    // public System.Void SetScaleZ(System.Single z)
    // Offset: 0x47A1A6C
    void SetScaleZ(float z);
    // public System.Void .ctor()
    // Offset: 0x47A1AE8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ScaleModifier* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ScaleModifier::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ScaleModifier*, creationType>()));
    }
  }; // Oculus.Interaction.Samples.ScaleModifier
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::Samples::ScaleModifier::SetScaleX
// Il2CppName: SetScaleX
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Samples::ScaleModifier::*)(float)>(&Oculus::Interaction::Samples::ScaleModifier::SetScaleX)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Samples::ScaleModifier*), "SetScaleX", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Samples::ScaleModifier::SetScaleY
// Il2CppName: SetScaleY
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Samples::ScaleModifier::*)(float)>(&Oculus::Interaction::Samples::ScaleModifier::SetScaleY)> {
  static const MethodInfo* get() {
    static auto* y = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Samples::ScaleModifier*), "SetScaleY", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{y});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Samples::ScaleModifier::SetScaleZ
// Il2CppName: SetScaleZ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Samples::ScaleModifier::*)(float)>(&Oculus::Interaction::Samples::ScaleModifier::SetScaleZ)> {
  static const MethodInfo* get() {
    static auto* z = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Samples::ScaleModifier*), "SetScaleZ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{z});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Samples::ScaleModifier::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
