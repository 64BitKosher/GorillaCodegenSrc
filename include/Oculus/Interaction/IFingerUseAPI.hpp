// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction::Input
namespace Oculus::Interaction::Input {
  // Forward declaring type: HandFinger
  struct HandFinger;
}
// Completed forward declares
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Forward declaring type: IFingerUseAPI
  class IFingerUseAPI;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::IFingerUseAPI);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::IFingerUseAPI*, "Oculus.Interaction", "IFingerUseAPI");
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.IFingerUseAPI
  // [TokenAttribute] Offset: FFFFFFFF
  class IFingerUseAPI {
    public:
    // public System.Single GetFingerUseStrength(Oculus.Interaction.Input.HandFinger finger)
    // Offset: 0xFFFFFFFFFFFFFFFF
    float GetFingerUseStrength(::Oculus::Interaction::Input::HandFinger finger);
  }; // Oculus.Interaction.IFingerUseAPI
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::IFingerUseAPI::GetFingerUseStrength
// Il2CppName: GetFingerUseStrength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Oculus::Interaction::IFingerUseAPI::*)(::Oculus::Interaction::Input::HandFinger)>(&Oculus::Interaction::IFingerUseAPI::GetFingerUseStrength)> {
  static const MethodInfo* get() {
    static auto* finger = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "HandFinger")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::IFingerUseAPI*), "GetFingerUseStrength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{finger});
  }
};
