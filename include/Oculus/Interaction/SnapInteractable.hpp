// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.Interactable`2
#include "Oculus/Interaction/Interactable_2.hpp"
// Including type: Oculus.Interaction.IRigidbodyRef
#include "Oculus/Interaction/IRigidbodyRef.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction
namespace Oculus::Interaction {
  // Forward declaring type: SnapInteractor
  class SnapInteractor;
  // Forward declaring type: ISnapPoseDelegate
  class ISnapPoseDelegate;
  // Forward declaring type: IMovementProvider
  class IMovementProvider;
  // Forward declaring type: CollisionInteractionRegistry`2<TInteractor, TInteractable>
  template<typename TInteractor, typename TInteractable>
  class CollisionInteractionRegistry_2;
  // Forward declaring type: IMovement
  class IMovement;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Rigidbody
  class Rigidbody;
  // Skipping declaration: Object because it is already included!
  // Forward declaring type: Pose
  struct Pose;
}
// Completed forward declares
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Forward declaring type: SnapInteractable
  class SnapInteractable;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::SnapInteractable);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::SnapInteractable*, "Oculus.Interaction", "SnapInteractable");
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // WARNING Size may be invalid!
  // Autogenerated type: Oculus.Interaction.SnapInteractable
  // [TokenAttribute] Offset: FFFFFFFF
  class SnapInteractable : public ::Oculus::Interaction::Interactable_2<::Oculus::Interaction::SnapInteractor*, ::Oculus::Interaction::SnapInteractable*>/*, public ::Oculus::Interaction::IRigidbodyRef*/ {
    public:
    public:
    // private UnityEngine.Rigidbody _rigidbody
    // Size: 0x8
    // Offset: 0xB0
    ::UnityEngine::Rigidbody* rigidbody;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rigidbody*) == 0x8);
    // private UnityEngine.Object _snapPoseDelegate
    // Size: 0x8
    // Offset: 0xB8
    ::UnityEngine::Object* snapPoseDelegate;
    // Field size check
    static_assert(sizeof(::UnityEngine::Object*) == 0x8);
    // private Oculus.Interaction.ISnapPoseDelegate <SnapPoseDelegate>k__BackingField
    // Size: 0x8
    // Offset: 0xC0
    ::Oculus::Interaction::ISnapPoseDelegate* SnapPoseDelegate;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::ISnapPoseDelegate*) == 0x8);
    // private UnityEngine.Object _movementProvider
    // Size: 0x8
    // Offset: 0xC8
    ::UnityEngine::Object* movementProvider;
    // Field size check
    static_assert(sizeof(::UnityEngine::Object*) == 0x8);
    // private Oculus.Interaction.IMovementProvider <MovementProvider>k__BackingField
    // Size: 0x8
    // Offset: 0xD0
    ::Oculus::Interaction::IMovementProvider* MovementProvider;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::IMovementProvider*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::Oculus::Interaction::IRigidbodyRef
    operator ::Oculus::Interaction::IRigidbodyRef() noexcept {
      return *reinterpret_cast<::Oculus::Interaction::IRigidbodyRef*>(this);
    }
    // Get static field: static private Oculus.Interaction.CollisionInteractionRegistry`2<Oculus.Interaction.SnapInteractor,Oculus.Interaction.SnapInteractable> _registry
    static ::Oculus::Interaction::CollisionInteractionRegistry_2<::Oculus::Interaction::SnapInteractor*, ::Oculus::Interaction::SnapInteractable*>* _get__registry();
    // Set static field: static private Oculus.Interaction.CollisionInteractionRegistry`2<Oculus.Interaction.SnapInteractor,Oculus.Interaction.SnapInteractable> _registry
    static void _set__registry(::Oculus::Interaction::CollisionInteractionRegistry_2<::Oculus::Interaction::SnapInteractor*, ::Oculus::Interaction::SnapInteractable*>* value);
    // Get instance field reference: private UnityEngine.Rigidbody _rigidbody
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& dyn__rigidbody();
    // Get instance field reference: private UnityEngine.Object _snapPoseDelegate
    [[deprecated("Use field access instead!")]] ::UnityEngine::Object*& dyn__snapPoseDelegate();
    // Get instance field reference: private Oculus.Interaction.ISnapPoseDelegate <SnapPoseDelegate>k__BackingField
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::ISnapPoseDelegate*& dyn_$SnapPoseDelegate$k__BackingField();
    // Get instance field reference: private UnityEngine.Object _movementProvider
    [[deprecated("Use field access instead!")]] ::UnityEngine::Object*& dyn__movementProvider();
    // Get instance field reference: private Oculus.Interaction.IMovementProvider <MovementProvider>k__BackingField
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::IMovementProvider*& dyn_$MovementProvider$k__BackingField();
    // public UnityEngine.Rigidbody get_Rigidbody()
    // Offset: 0x47B966C
    ::UnityEngine::Rigidbody* get_Rigidbody();
    // private Oculus.Interaction.ISnapPoseDelegate get_SnapPoseDelegate()
    // Offset: 0x47B9674
    ::Oculus::Interaction::ISnapPoseDelegate* get_SnapPoseDelegate();
    // private System.Void set_SnapPoseDelegate(Oculus.Interaction.ISnapPoseDelegate value)
    // Offset: 0x47B967C
    void set_SnapPoseDelegate(::Oculus::Interaction::ISnapPoseDelegate* value);
    // private Oculus.Interaction.IMovementProvider get_MovementProvider()
    // Offset: 0x47B9684
    ::Oculus::Interaction::IMovementProvider* get_MovementProvider();
    // private System.Void set_MovementProvider(Oculus.Interaction.IMovementProvider value)
    // Offset: 0x47B968C
    void set_MovementProvider(::Oculus::Interaction::IMovementProvider* value);
    // private System.Void Reset()
    // Offset: 0x47B9694
    void Reset();
    // protected System.Void InteractorAdded(Oculus.Interaction.SnapInteractor interactor)
    // Offset: 0x47B99B8
    void InteractorAdded(::Oculus::Interaction::SnapInteractor* interactor);
    // protected System.Void InteractorRemoved(Oculus.Interaction.SnapInteractor interactor)
    // Offset: 0x47B9B3C
    void InteractorRemoved(::Oculus::Interaction::SnapInteractor* interactor);
    // protected System.Void SelectingInteractorAdded(Oculus.Interaction.SnapInteractor interactor)
    // Offset: 0x47B9C4C
    void SelectingInteractorAdded(::Oculus::Interaction::SnapInteractor* interactor);
    // protected System.Void SelectingInteractorRemoved(Oculus.Interaction.SnapInteractor interactor)
    // Offset: 0x47B9D98
    void SelectingInteractorRemoved(::Oculus::Interaction::SnapInteractor* interactor);
    // public System.Void InteractorHoverUpdated(Oculus.Interaction.SnapInteractor interactor)
    // Offset: 0x47B9EA8
    void InteractorHoverUpdated(::Oculus::Interaction::SnapInteractor* interactor);
    // public System.Boolean PoseForInteractor(Oculus.Interaction.SnapInteractor interactor, out UnityEngine.Pose result)
    // Offset: 0x47B9FC8
    bool PoseForInteractor(::Oculus::Interaction::SnapInteractor* interactor, ByRef<::UnityEngine::Pose> result);
    // public Oculus.Interaction.IMovement GenerateMovement(in UnityEngine.Pose from, Oculus.Interaction.SnapInteractor interactor)
    // Offset: 0x47BA140
    ::Oculus::Interaction::IMovement* GenerateMovement(ByRef<::UnityEngine::Pose> from, ::Oculus::Interaction::SnapInteractor* interactor);
    // public System.Void InjectAllSnapInteractable(UnityEngine.Rigidbody rigidbody)
    // Offset: 0x47BA35C
    void InjectAllSnapInteractable(::UnityEngine::Rigidbody* rigidbody);
    // public System.Void InjectRigidbody(UnityEngine.Rigidbody rigidbody)
    // Offset: 0x47BA364
    void InjectRigidbody(::UnityEngine::Rigidbody* rigidbody);
    // public System.Void InjectOptionalMovementProvider(Oculus.Interaction.IMovementProvider provider)
    // Offset: 0x47BA36C
    void InjectOptionalMovementProvider(::Oculus::Interaction::IMovementProvider* provider);
    // public System.Void InjectOptionalSnapPoseDelegate(Oculus.Interaction.ISnapPoseDelegate snapPoseDelegate)
    // Offset: 0x47BA43C
    void InjectOptionalSnapPoseDelegate(::Oculus::Interaction::ISnapPoseDelegate* snapPoseDelegate);
    // private System.Void <Start>b__16_0()
    // Offset: 0x47BA578
    void $Start$b__16_0();
    // protected override System.Void Awake()
    // Offset: 0x47B96EC
    // Implemented from: Oculus.Interaction.Interactable`2
    // Base method: System.Void Interactable_2::Awake()
    void Awake();
    // protected override System.Void Start()
    // Offset: 0x47B979C
    // Implemented from: Oculus.Interaction.Interactable`2
    // Base method: System.Void Interactable_2::Start()
    void Start();
    // public System.Void .ctor()
    // Offset: 0x47BA50C
    // Implemented from: Oculus.Interaction.Interactable`2
    // Base method: System.Void Interactable_2::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SnapInteractable* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractable::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SnapInteractable*, creationType>()));
    }
  }; // Oculus.Interaction.SnapInteractable
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::SnapInteractable::get_Rigidbody
// Il2CppName: get_Rigidbody
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rigidbody* (Oculus::Interaction::SnapInteractable::*)()>(&Oculus::Interaction::SnapInteractable::get_Rigidbody)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::SnapInteractable*), "get_Rigidbody", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::SnapInteractable::get_SnapPoseDelegate
// Il2CppName: get_SnapPoseDelegate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::ISnapPoseDelegate* (Oculus::Interaction::SnapInteractable::*)()>(&Oculus::Interaction::SnapInteractable::get_SnapPoseDelegate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::SnapInteractable*), "get_SnapPoseDelegate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::SnapInteractable::set_SnapPoseDelegate
// Il2CppName: set_SnapPoseDelegate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::SnapInteractable::*)(::Oculus::Interaction::ISnapPoseDelegate*)>(&Oculus::Interaction::SnapInteractable::set_SnapPoseDelegate)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "ISnapPoseDelegate")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::SnapInteractable*), "set_SnapPoseDelegate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::SnapInteractable::get_MovementProvider
// Il2CppName: get_MovementProvider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::IMovementProvider* (Oculus::Interaction::SnapInteractable::*)()>(&Oculus::Interaction::SnapInteractable::get_MovementProvider)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::SnapInteractable*), "get_MovementProvider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::SnapInteractable::set_MovementProvider
// Il2CppName: set_MovementProvider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::SnapInteractable::*)(::Oculus::Interaction::IMovementProvider*)>(&Oculus::Interaction::SnapInteractable::set_MovementProvider)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "IMovementProvider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::SnapInteractable*), "set_MovementProvider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::SnapInteractable::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::SnapInteractable::*)()>(&Oculus::Interaction::SnapInteractable::Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::SnapInteractable*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::SnapInteractable::InteractorAdded
// Il2CppName: InteractorAdded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::SnapInteractable::*)(::Oculus::Interaction::SnapInteractor*)>(&Oculus::Interaction::SnapInteractable::InteractorAdded)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "SnapInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::SnapInteractable*), "InteractorAdded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::SnapInteractable::InteractorRemoved
// Il2CppName: InteractorRemoved
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::SnapInteractable::*)(::Oculus::Interaction::SnapInteractor*)>(&Oculus::Interaction::SnapInteractable::InteractorRemoved)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "SnapInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::SnapInteractable*), "InteractorRemoved", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::SnapInteractable::SelectingInteractorAdded
// Il2CppName: SelectingInteractorAdded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::SnapInteractable::*)(::Oculus::Interaction::SnapInteractor*)>(&Oculus::Interaction::SnapInteractable::SelectingInteractorAdded)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "SnapInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::SnapInteractable*), "SelectingInteractorAdded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::SnapInteractable::SelectingInteractorRemoved
// Il2CppName: SelectingInteractorRemoved
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::SnapInteractable::*)(::Oculus::Interaction::SnapInteractor*)>(&Oculus::Interaction::SnapInteractable::SelectingInteractorRemoved)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "SnapInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::SnapInteractable*), "SelectingInteractorRemoved", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::SnapInteractable::InteractorHoverUpdated
// Il2CppName: InteractorHoverUpdated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::SnapInteractable::*)(::Oculus::Interaction::SnapInteractor*)>(&Oculus::Interaction::SnapInteractable::InteractorHoverUpdated)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "SnapInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::SnapInteractable*), "InteractorHoverUpdated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::SnapInteractable::PoseForInteractor
// Il2CppName: PoseForInteractor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::SnapInteractable::*)(::Oculus::Interaction::SnapInteractor*, ByRef<::UnityEngine::Pose>)>(&Oculus::Interaction::SnapInteractable::PoseForInteractor)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "SnapInteractor")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::SnapInteractable*), "PoseForInteractor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, result});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::SnapInteractable::GenerateMovement
// Il2CppName: GenerateMovement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::IMovement* (Oculus::Interaction::SnapInteractable::*)(ByRef<::UnityEngine::Pose>, ::Oculus::Interaction::SnapInteractor*)>(&Oculus::Interaction::SnapInteractable::GenerateMovement)> {
  static const MethodInfo* get() {
    static auto* from = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->this_arg;
    static auto* interactor = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "SnapInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::SnapInteractable*), "GenerateMovement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{from, interactor});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::SnapInteractable::InjectAllSnapInteractable
// Il2CppName: InjectAllSnapInteractable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::SnapInteractable::*)(::UnityEngine::Rigidbody*)>(&Oculus::Interaction::SnapInteractable::InjectAllSnapInteractable)> {
  static const MethodInfo* get() {
    static auto* rigidbody = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rigidbody")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::SnapInteractable*), "InjectAllSnapInteractable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rigidbody});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::SnapInteractable::InjectRigidbody
// Il2CppName: InjectRigidbody
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::SnapInteractable::*)(::UnityEngine::Rigidbody*)>(&Oculus::Interaction::SnapInteractable::InjectRigidbody)> {
  static const MethodInfo* get() {
    static auto* rigidbody = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rigidbody")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::SnapInteractable*), "InjectRigidbody", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rigidbody});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::SnapInteractable::InjectOptionalMovementProvider
// Il2CppName: InjectOptionalMovementProvider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::SnapInteractable::*)(::Oculus::Interaction::IMovementProvider*)>(&Oculus::Interaction::SnapInteractable::InjectOptionalMovementProvider)> {
  static const MethodInfo* get() {
    static auto* provider = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "IMovementProvider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::SnapInteractable*), "InjectOptionalMovementProvider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{provider});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::SnapInteractable::InjectOptionalSnapPoseDelegate
// Il2CppName: InjectOptionalSnapPoseDelegate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::SnapInteractable::*)(::Oculus::Interaction::ISnapPoseDelegate*)>(&Oculus::Interaction::SnapInteractable::InjectOptionalSnapPoseDelegate)> {
  static const MethodInfo* get() {
    static auto* snapPoseDelegate = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "ISnapPoseDelegate")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::SnapInteractable*), "InjectOptionalSnapPoseDelegate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{snapPoseDelegate});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::SnapInteractable::$Start$b__16_0
// Il2CppName: <Start>b__16_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::SnapInteractable::*)()>(&Oculus::Interaction::SnapInteractable::$Start$b__16_0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::SnapInteractable*), "<Start>b__16_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::SnapInteractable::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::SnapInteractable::*)()>(&Oculus::Interaction::SnapInteractable::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::SnapInteractable*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::SnapInteractable::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::SnapInteractable::*)()>(&Oculus::Interaction::SnapInteractable::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::SnapInteractable*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::SnapInteractable::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
