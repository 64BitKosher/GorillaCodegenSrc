// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.PointerInteractable`2
#include "Oculus/Interaction/PointerInteractable_2.hpp"
// Including type: Oculus.Interaction.IRigidbodyRef
#include "Oculus/Interaction/IRigidbodyRef.hpp"
// Including type: Oculus.Interaction.IRelativeToRef
#include "Oculus/Interaction/IRelativeToRef.hpp"
// Including type: Oculus.Interaction.ICollidersRef
#include "Oculus/Interaction/ICollidersRef.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction
namespace Oculus::Interaction {
  // Forward declaring type: DistanceGrabInteractor
  class DistanceGrabInteractor;
  // Forward declaring type: PhysicsGrabbable
  class PhysicsGrabbable;
  // Forward declaring type: IMovementProvider
  class IMovementProvider;
  // Forward declaring type: IMovement
  class IMovement;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Collider
  class Collider;
  // Forward declaring type: Rigidbody
  class Rigidbody;
  // Forward declaring type: Transform
  class Transform;
  // Skipping declaration: Object because it is already included!
  // Skipping declaration: Pose because it is already included!
  // Skipping declaration: Vector3 because it is already included!
}
// Completed forward declares
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Forward declaring type: DistanceGrabInteractable
  class DistanceGrabInteractable;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::DistanceGrabInteractable);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::DistanceGrabInteractable*, "Oculus.Interaction", "DistanceGrabInteractable");
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // WARNING Size may be invalid!
  // Autogenerated type: Oculus.Interaction.DistanceGrabInteractable
  // [TokenAttribute] Offset: FFFFFFFF
  class DistanceGrabInteractable : public ::Oculus::Interaction::PointerInteractable_2<::Oculus::Interaction::DistanceGrabInteractor*, ::Oculus::Interaction::DistanceGrabInteractable*>/*, public ::Oculus::Interaction::IRigidbodyRef, public ::Oculus::Interaction::IRelativeToRef, public ::Oculus::Interaction::ICollidersRef*/ {
    public:
    public:
    // private UnityEngine.Collider[] _colliders
    // Size: 0x8
    // Offset: 0xC8
    ::ArrayW<::UnityEngine::Collider*> colliders;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Collider*>) == 0x8);
    // private UnityEngine.Rigidbody _rigidbody
    // Size: 0x8
    // Offset: 0xD0
    ::UnityEngine::Rigidbody* rigidbody;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rigidbody*) == 0x8);
    // private UnityEngine.Transform _grabSource
    // Size: 0x8
    // Offset: 0xD8
    ::UnityEngine::Transform* grabSource;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private System.Boolean _resetGrabOnGrabsUpdated
    // Size: 0x1
    // Offset: 0xE0
    bool resetGrabOnGrabsUpdated;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private Oculus.Interaction.PhysicsGrabbable _physicsGrabbable
    // Size: 0x8
    // Offset: 0xE8
    ::Oculus::Interaction::PhysicsGrabbable* physicsGrabbable;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::PhysicsGrabbable*) == 0x8);
    // private UnityEngine.Object _movementProvider
    // Size: 0x8
    // Offset: 0xF0
    ::UnityEngine::Object* movementProvider;
    // Field size check
    static_assert(sizeof(::UnityEngine::Object*) == 0x8);
    // private Oculus.Interaction.IMovementProvider <MovementProvider>k__BackingField
    // Size: 0x8
    // Offset: 0xF8
    ::Oculus::Interaction::IMovementProvider* MovementProvider;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::IMovementProvider*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::Oculus::Interaction::IRigidbodyRef
    operator ::Oculus::Interaction::IRigidbodyRef() noexcept {
      return *reinterpret_cast<::Oculus::Interaction::IRigidbodyRef*>(this);
    }
    // Creating interface conversion operator: operator ::Oculus::Interaction::IRelativeToRef
    operator ::Oculus::Interaction::IRelativeToRef() noexcept {
      return *reinterpret_cast<::Oculus::Interaction::IRelativeToRef*>(this);
    }
    // Creating interface conversion operator: operator ::Oculus::Interaction::ICollidersRef
    operator ::Oculus::Interaction::ICollidersRef() noexcept {
      return *reinterpret_cast<::Oculus::Interaction::ICollidersRef*>(this);
    }
    // Get instance field reference: private UnityEngine.Collider[] _colliders
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Collider*>& dyn__colliders();
    // Get instance field reference: private UnityEngine.Rigidbody _rigidbody
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& dyn__rigidbody();
    // Get instance field reference: private UnityEngine.Transform _grabSource
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn__grabSource();
    // Get instance field reference: private System.Boolean _resetGrabOnGrabsUpdated
    [[deprecated("Use field access instead!")]] bool& dyn__resetGrabOnGrabsUpdated();
    // Get instance field reference: private Oculus.Interaction.PhysicsGrabbable _physicsGrabbable
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::PhysicsGrabbable*& dyn__physicsGrabbable();
    // Get instance field reference: private UnityEngine.Object _movementProvider
    [[deprecated("Use field access instead!")]] ::UnityEngine::Object*& dyn__movementProvider();
    // Get instance field reference: private Oculus.Interaction.IMovementProvider <MovementProvider>k__BackingField
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::IMovementProvider*& dyn_$MovementProvider$k__BackingField();
    // public UnityEngine.Collider[] get_Colliders()
    // Offset: 0x47A7EA8
    ::ArrayW<::UnityEngine::Collider*> get_Colliders();
    // public UnityEngine.Rigidbody get_Rigidbody()
    // Offset: 0x47A7EB0
    ::UnityEngine::Rigidbody* get_Rigidbody();
    // private Oculus.Interaction.IMovementProvider get_MovementProvider()
    // Offset: 0x47A7EB8
    ::Oculus::Interaction::IMovementProvider* get_MovementProvider();
    // private System.Void set_MovementProvider(Oculus.Interaction.IMovementProvider value)
    // Offset: 0x47A7EC0
    void set_MovementProvider(::Oculus::Interaction::IMovementProvider* value);
    // public System.Boolean get_ResetGrabOnGrabsUpdated()
    // Offset: 0x47A7EC8
    bool get_ResetGrabOnGrabsUpdated();
    // public System.Void set_ResetGrabOnGrabsUpdated(System.Boolean value)
    // Offset: 0x47A7ED0
    void set_ResetGrabOnGrabsUpdated(bool value);
    // public UnityEngine.Transform get_RelativeTo()
    // Offset: 0x47A7EDC
    ::UnityEngine::Transform* get_RelativeTo();
    // protected System.Void Reset()
    // Offset: 0x47A7EE4
    void Reset();
    // public Oculus.Interaction.IMovement GenerateMovement(in UnityEngine.Pose to)
    // Offset: 0x47A823C
    ::Oculus::Interaction::IMovement* GenerateMovement(ByRef<::UnityEngine::Pose> to);
    // public System.Void ApplyVelocities(UnityEngine.Vector3 linearVelocity, UnityEngine.Vector3 angularVelocity)
    // Offset: 0x47A8454
    void ApplyVelocities(::UnityEngine::Vector3 linearVelocity, ::UnityEngine::Vector3 angularVelocity);
    // public System.Void InjectAllGrabInteractable(UnityEngine.Rigidbody rigidbody)
    // Offset: 0x47A852C
    void InjectAllGrabInteractable(::UnityEngine::Rigidbody* rigidbody);
    // public System.Void InjectRigidbody(UnityEngine.Rigidbody rigidbody)
    // Offset: 0x47A8534
    void InjectRigidbody(::UnityEngine::Rigidbody* rigidbody);
    // public System.Void InjectOptionalGrabSource(UnityEngine.Transform grabSource)
    // Offset: 0x47A853C
    void InjectOptionalGrabSource(::UnityEngine::Transform* grabSource);
    // public System.Void InjectOptionalPhysicsGrabbable(Oculus.Interaction.PhysicsGrabbable physicsGrabbable)
    // Offset: 0x47A8544
    void InjectOptionalPhysicsGrabbable(::Oculus::Interaction::PhysicsGrabbable* physicsGrabbable);
    // public System.Void InjectOptionalMovementProvider(Oculus.Interaction.IMovementProvider provider)
    // Offset: 0x47A816C
    void InjectOptionalMovementProvider(::Oculus::Interaction::IMovementProvider* provider);
    // private System.Void <Start>b__21_0()
    // Offset: 0x47A859C
    void $Start$b__21_0();
    // protected override System.Void Awake()
    // Offset: 0x47A7F74
    // Implemented from: Oculus.Interaction.PointerInteractable`2
    // Base method: System.Void PointerInteractable_2::Awake()
    void Awake();
    // protected override System.Void Start()
    // Offset: 0x47A7FF4
    // Implemented from: Oculus.Interaction.PointerInteractable`2
    // Base method: System.Void PointerInteractable_2::Start()
    void Start();
    // public System.Void .ctor()
    // Offset: 0x47A854C
    // Implemented from: Oculus.Interaction.PointerInteractable`2
    // Base method: System.Void PointerInteractable_2::.ctor()
    // Base method: System.Void Interactable_2::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DistanceGrabInteractable* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractable::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DistanceGrabInteractable*, creationType>()));
    }
  }; // Oculus.Interaction.DistanceGrabInteractable
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::DistanceGrabInteractable::get_Colliders
// Il2CppName: get_Colliders
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::Collider*> (Oculus::Interaction::DistanceGrabInteractable::*)()>(&Oculus::Interaction::DistanceGrabInteractable::get_Colliders)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceGrabInteractable*), "get_Colliders", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceGrabInteractable::get_Rigidbody
// Il2CppName: get_Rigidbody
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rigidbody* (Oculus::Interaction::DistanceGrabInteractable::*)()>(&Oculus::Interaction::DistanceGrabInteractable::get_Rigidbody)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceGrabInteractable*), "get_Rigidbody", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceGrabInteractable::get_MovementProvider
// Il2CppName: get_MovementProvider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::IMovementProvider* (Oculus::Interaction::DistanceGrabInteractable::*)()>(&Oculus::Interaction::DistanceGrabInteractable::get_MovementProvider)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceGrabInteractable*), "get_MovementProvider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceGrabInteractable::set_MovementProvider
// Il2CppName: set_MovementProvider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceGrabInteractable::*)(::Oculus::Interaction::IMovementProvider*)>(&Oculus::Interaction::DistanceGrabInteractable::set_MovementProvider)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "IMovementProvider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceGrabInteractable*), "set_MovementProvider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceGrabInteractable::get_ResetGrabOnGrabsUpdated
// Il2CppName: get_ResetGrabOnGrabsUpdated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::DistanceGrabInteractable::*)()>(&Oculus::Interaction::DistanceGrabInteractable::get_ResetGrabOnGrabsUpdated)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceGrabInteractable*), "get_ResetGrabOnGrabsUpdated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceGrabInteractable::set_ResetGrabOnGrabsUpdated
// Il2CppName: set_ResetGrabOnGrabsUpdated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceGrabInteractable::*)(bool)>(&Oculus::Interaction::DistanceGrabInteractable::set_ResetGrabOnGrabsUpdated)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceGrabInteractable*), "set_ResetGrabOnGrabsUpdated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceGrabInteractable::get_RelativeTo
// Il2CppName: get_RelativeTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (Oculus::Interaction::DistanceGrabInteractable::*)()>(&Oculus::Interaction::DistanceGrabInteractable::get_RelativeTo)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceGrabInteractable*), "get_RelativeTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceGrabInteractable::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceGrabInteractable::*)()>(&Oculus::Interaction::DistanceGrabInteractable::Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceGrabInteractable*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceGrabInteractable::GenerateMovement
// Il2CppName: GenerateMovement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::IMovement* (Oculus::Interaction::DistanceGrabInteractable::*)(ByRef<::UnityEngine::Pose>)>(&Oculus::Interaction::DistanceGrabInteractable::GenerateMovement)> {
  static const MethodInfo* get() {
    static auto* to = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceGrabInteractable*), "GenerateMovement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{to});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceGrabInteractable::ApplyVelocities
// Il2CppName: ApplyVelocities
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceGrabInteractable::*)(::UnityEngine::Vector3, ::UnityEngine::Vector3)>(&Oculus::Interaction::DistanceGrabInteractable::ApplyVelocities)> {
  static const MethodInfo* get() {
    static auto* linearVelocity = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* angularVelocity = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceGrabInteractable*), "ApplyVelocities", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{linearVelocity, angularVelocity});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceGrabInteractable::InjectAllGrabInteractable
// Il2CppName: InjectAllGrabInteractable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceGrabInteractable::*)(::UnityEngine::Rigidbody*)>(&Oculus::Interaction::DistanceGrabInteractable::InjectAllGrabInteractable)> {
  static const MethodInfo* get() {
    static auto* rigidbody = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rigidbody")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceGrabInteractable*), "InjectAllGrabInteractable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rigidbody});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceGrabInteractable::InjectRigidbody
// Il2CppName: InjectRigidbody
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceGrabInteractable::*)(::UnityEngine::Rigidbody*)>(&Oculus::Interaction::DistanceGrabInteractable::InjectRigidbody)> {
  static const MethodInfo* get() {
    static auto* rigidbody = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rigidbody")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceGrabInteractable*), "InjectRigidbody", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rigidbody});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceGrabInteractable::InjectOptionalGrabSource
// Il2CppName: InjectOptionalGrabSource
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceGrabInteractable::*)(::UnityEngine::Transform*)>(&Oculus::Interaction::DistanceGrabInteractable::InjectOptionalGrabSource)> {
  static const MethodInfo* get() {
    static auto* grabSource = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceGrabInteractable*), "InjectOptionalGrabSource", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{grabSource});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceGrabInteractable::InjectOptionalPhysicsGrabbable
// Il2CppName: InjectOptionalPhysicsGrabbable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceGrabInteractable::*)(::Oculus::Interaction::PhysicsGrabbable*)>(&Oculus::Interaction::DistanceGrabInteractable::InjectOptionalPhysicsGrabbable)> {
  static const MethodInfo* get() {
    static auto* physicsGrabbable = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "PhysicsGrabbable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceGrabInteractable*), "InjectOptionalPhysicsGrabbable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{physicsGrabbable});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceGrabInteractable::InjectOptionalMovementProvider
// Il2CppName: InjectOptionalMovementProvider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceGrabInteractable::*)(::Oculus::Interaction::IMovementProvider*)>(&Oculus::Interaction::DistanceGrabInteractable::InjectOptionalMovementProvider)> {
  static const MethodInfo* get() {
    static auto* provider = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "IMovementProvider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceGrabInteractable*), "InjectOptionalMovementProvider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{provider});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceGrabInteractable::$Start$b__21_0
// Il2CppName: <Start>b__21_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceGrabInteractable::*)()>(&Oculus::Interaction::DistanceGrabInteractable::$Start$b__21_0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceGrabInteractable*), "<Start>b__21_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceGrabInteractable::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceGrabInteractable::*)()>(&Oculus::Interaction::DistanceGrabInteractable::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceGrabInteractable*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceGrabInteractable::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceGrabInteractable::*)()>(&Oculus::Interaction::DistanceGrabInteractable::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceGrabInteractable*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceGrabInteractable::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
