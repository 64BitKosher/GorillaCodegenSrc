// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.PointerInteractable`2
#include "Oculus/Interaction/PointerInteractable_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction
namespace Oculus::Interaction {
  // Forward declaring type: TouchHandGrabInteractor
  class TouchHandGrabInteractor;
  // Forward declaring type: ColliderGroup
  class ColliderGroup;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Collider
  class Collider;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Forward declaring type: TouchHandGrabInteractable
  class TouchHandGrabInteractable;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::TouchHandGrabInteractable);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::TouchHandGrabInteractable*, "Oculus.Interaction", "TouchHandGrabInteractable");
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // WARNING Size may be invalid!
  // Autogenerated type: Oculus.Interaction.TouchHandGrabInteractable
  // [TokenAttribute] Offset: FFFFFFFF
  class TouchHandGrabInteractable : public ::Oculus::Interaction::PointerInteractable_2<::Oculus::Interaction::TouchHandGrabInteractor*, ::Oculus::Interaction::TouchHandGrabInteractable*> {
    public:
    public:
    // private UnityEngine.Collider _boundsCollider
    // Size: 0x8
    // Offset: 0xC8
    ::UnityEngine::Collider* boundsCollider;
    // Field size check
    static_assert(sizeof(::UnityEngine::Collider*) == 0x8);
    // private System.Collections.Generic.List`1<UnityEngine.Collider> _colliders
    // Size: 0x8
    // Offset: 0xD0
    ::System::Collections::Generic::List_1<::UnityEngine::Collider*>* colliders;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::Collider*>*) == 0x8);
    // private Oculus.Interaction.ColliderGroup _colliderGroup
    // Size: 0x8
    // Offset: 0xD8
    ::Oculus::Interaction::ColliderGroup* colliderGroup;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::ColliderGroup*) == 0x8);
    public:
    // Get instance field reference: private UnityEngine.Collider _boundsCollider
    [[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& dyn__boundsCollider();
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.Collider> _colliders
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Collider*>*& dyn__colliders();
    // Get instance field reference: private Oculus.Interaction.ColliderGroup _colliderGroup
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::ColliderGroup*& dyn__colliderGroup();
    // public Oculus.Interaction.ColliderGroup get_ColliderGroup()
    // Offset: 0x47BD190
    ::Oculus::Interaction::ColliderGroup* get_ColliderGroup();
    // public System.Void InjectAllTouchHandGrabInteractable(UnityEngine.Collider boundsCollider, System.Collections.Generic.List`1<UnityEngine.Collider> colliders)
    // Offset: 0x47BD22C
    void InjectAllTouchHandGrabInteractable(::UnityEngine::Collider* boundsCollider, ::System::Collections::Generic::List_1<::UnityEngine::Collider*>* colliders);
    // private System.Void InjectBoundsCollider(UnityEngine.Collider boundsCollider)
    // Offset: 0x47BD25C
    void InjectBoundsCollider(::UnityEngine::Collider* boundsCollider);
    // public System.Void InjectColliders(System.Collections.Generic.List`1<UnityEngine.Collider> colliders)
    // Offset: 0x47BD264
    void InjectColliders(::System::Collections::Generic::List_1<::UnityEngine::Collider*>* colliders);
    // protected override System.Void Start()
    // Offset: 0x47BD198
    // Implemented from: Oculus.Interaction.PointerInteractable`2
    // Base method: System.Void PointerInteractable_2::Start()
    void Start();
    // public System.Void .ctor()
    // Offset: 0x47BD26C
    // Implemented from: Oculus.Interaction.PointerInteractable`2
    // Base method: System.Void PointerInteractable_2::.ctor()
    // Base method: System.Void Interactable_2::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TouchHandGrabInteractable* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractable::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TouchHandGrabInteractable*, creationType>()));
    }
  }; // Oculus.Interaction.TouchHandGrabInteractable
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::TouchHandGrabInteractable::get_ColliderGroup
// Il2CppName: get_ColliderGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::ColliderGroup* (Oculus::Interaction::TouchHandGrabInteractable::*)()>(&Oculus::Interaction::TouchHandGrabInteractable::get_ColliderGroup)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::TouchHandGrabInteractable*), "get_ColliderGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::TouchHandGrabInteractable::InjectAllTouchHandGrabInteractable
// Il2CppName: InjectAllTouchHandGrabInteractable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::TouchHandGrabInteractable::*)(::UnityEngine::Collider*, ::System::Collections::Generic::List_1<::UnityEngine::Collider*>*)>(&Oculus::Interaction::TouchHandGrabInteractable::InjectAllTouchHandGrabInteractable)> {
  static const MethodInfo* get() {
    static auto* boundsCollider = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    static auto* colliders = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::TouchHandGrabInteractable*), "InjectAllTouchHandGrabInteractable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{boundsCollider, colliders});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::TouchHandGrabInteractable::InjectBoundsCollider
// Il2CppName: InjectBoundsCollider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::TouchHandGrabInteractable::*)(::UnityEngine::Collider*)>(&Oculus::Interaction::TouchHandGrabInteractable::InjectBoundsCollider)> {
  static const MethodInfo* get() {
    static auto* boundsCollider = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::TouchHandGrabInteractable*), "InjectBoundsCollider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{boundsCollider});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::TouchHandGrabInteractable::InjectColliders
// Il2CppName: InjectColliders
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::TouchHandGrabInteractable::*)(::System::Collections::Generic::List_1<::UnityEngine::Collider*>*)>(&Oculus::Interaction::TouchHandGrabInteractable::InjectColliders)> {
  static const MethodInfo* get() {
    static auto* colliders = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::TouchHandGrabInteractable*), "InjectColliders", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{colliders});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::TouchHandGrabInteractable::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::TouchHandGrabInteractable::*)()>(&Oculus::Interaction::TouchHandGrabInteractable::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::TouchHandGrabInteractable*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::TouchHandGrabInteractable::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
