// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Vector3
  struct Vector3;
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: Bounds
  struct Bounds;
}
// Completed forward declares
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Forward declaring type: TransformExtensions
  class TransformExtensions;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::TransformExtensions);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::TransformExtensions*, "Oculus.Interaction", "TransformExtensions");
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.TransformExtensions
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class TransformExtensions : public ::Il2CppObject {
    public:
    // static public UnityEngine.Vector3 InverseTransformPointUnscaled(UnityEngine.Transform transform, UnityEngine.Vector3 position)
    // Offset: 0x47728BC
    static ::UnityEngine::Vector3 InverseTransformPointUnscaled(::UnityEngine::Transform* transform, ::UnityEngine::Vector3 position);
    // static public UnityEngine.Vector3 TransformPointUnscaled(UnityEngine.Transform transform, UnityEngine.Vector3 position)
    // Offset: 0x4772A04
    static ::UnityEngine::Vector3 TransformPointUnscaled(::UnityEngine::Transform* transform, ::UnityEngine::Vector3 position);
    // static public UnityEngine.Bounds TransformBounds(UnityEngine.Transform transform, in UnityEngine.Bounds bounds)
    // Offset: 0x4772B14
    static ::UnityEngine::Bounds TransformBounds(::UnityEngine::Transform* transform, ByRef<::UnityEngine::Bounds> bounds);
    // static public UnityEngine.Transform FindChildRecursive(UnityEngine.Transform parent, System.String name)
    // Offset: 0x4772D54
    static ::UnityEngine::Transform* FindChildRecursive(::UnityEngine::Transform* parent, ::StringW name);
  }; // Oculus.Interaction.TransformExtensions
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::TransformExtensions::InverseTransformPointUnscaled
// Il2CppName: InverseTransformPointUnscaled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (*)(::UnityEngine::Transform*, ::UnityEngine::Vector3)>(&Oculus::Interaction::TransformExtensions::InverseTransformPointUnscaled)> {
  static const MethodInfo* get() {
    static auto* transform = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::TransformExtensions*), "InverseTransformPointUnscaled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{transform, position});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::TransformExtensions::TransformPointUnscaled
// Il2CppName: TransformPointUnscaled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (*)(::UnityEngine::Transform*, ::UnityEngine::Vector3)>(&Oculus::Interaction::TransformExtensions::TransformPointUnscaled)> {
  static const MethodInfo* get() {
    static auto* transform = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::TransformExtensions*), "TransformPointUnscaled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{transform, position});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::TransformExtensions::TransformBounds
// Il2CppName: TransformBounds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Bounds (*)(::UnityEngine::Transform*, ByRef<::UnityEngine::Bounds>)>(&Oculus::Interaction::TransformExtensions::TransformBounds)> {
  static const MethodInfo* get() {
    static auto* transform = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* bounds = &::il2cpp_utils::GetClassFromName("UnityEngine", "Bounds")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::TransformExtensions*), "TransformBounds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{transform, bounds});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::TransformExtensions::FindChildRecursive
// Il2CppName: FindChildRecursive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (*)(::UnityEngine::Transform*, ::StringW)>(&Oculus::Interaction::TransformExtensions::FindChildRecursive)> {
  static const MethodInfo* get() {
    static auto* parent = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::TransformExtensions*), "FindChildRecursive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parent, name});
  }
};
