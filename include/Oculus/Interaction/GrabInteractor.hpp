// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.PointerInteractor`2
#include "Oculus/Interaction/PointerInteractor_2.hpp"
// Including type: Oculus.Interaction.IRigidbodyRef
#include "Oculus/Interaction/IRigidbodyRef.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction
namespace Oculus::Interaction {
  // Forward declaring type: GrabInteractable
  class GrabInteractable;
  // Forward declaring type: Tween
  class Tween;
  // Forward declaring type: ISelector
  class ISelector;
  // Skipping declaration: PointerEvent because it is already included!
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Object because it is already included!
  // Forward declaring type: Rigidbody
  class Rigidbody;
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: Collider
  class Collider;
  // Skipping declaration: Pose because it is already included!
}
// Forward declaring namespace: Oculus::Interaction::Throw
namespace Oculus::Interaction::Throw {
  // Forward declaring type: IVelocityCalculator
  class IVelocityCalculator;
}
// Completed forward declares
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Forward declaring type: GrabInteractor
  class GrabInteractor;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::GrabInteractor);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::GrabInteractor*, "Oculus.Interaction", "GrabInteractor");
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // WARNING Size may be invalid!
  // Autogenerated type: Oculus.Interaction.GrabInteractor
  // [TokenAttribute] Offset: FFFFFFFF
  class GrabInteractor : public ::Oculus::Interaction::PointerInteractor_2<::Oculus::Interaction::GrabInteractor*, ::Oculus::Interaction::GrabInteractable*>/*, public ::Oculus::Interaction::IRigidbodyRef*/ {
    public:
    // Nested type: ::Oculus::Interaction::GrabInteractor::$$c
    class $$c;
    // Nested type: ::Oculus::Interaction::GrabInteractor::$$c__DisplayClass20_0
    class $$c__DisplayClass20_0;
    public:
    // private UnityEngine.Object _selector
    // Size: 0x8
    // Offset: 0x118
    ::UnityEngine::Object* selector;
    // Field size check
    static_assert(sizeof(::UnityEngine::Object*) == 0x8);
    // private UnityEngine.Rigidbody _rigidbody
    // Size: 0x8
    // Offset: 0x120
    ::UnityEngine::Rigidbody* rigidbody;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rigidbody*) == 0x8);
    // private UnityEngine.Transform _grabCenter
    // Size: 0x8
    // Offset: 0x128
    ::UnityEngine::Transform* grabCenter;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private UnityEngine.Transform _grabTarget
    // Size: 0x8
    // Offset: 0x130
    ::UnityEngine::Transform* grabTarget;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private UnityEngine.Collider[] _colliders
    // Size: 0x8
    // Offset: 0x138
    ::ArrayW<::UnityEngine::Collider*> colliders;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Collider*>) == 0x8);
    // private Oculus.Interaction.Tween _tween
    // Size: 0x8
    // Offset: 0x140
    ::Oculus::Interaction::Tween* tween;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Tween*) == 0x8);
    // private System.Boolean _outsideReleaseDist
    // Size: 0x1
    // Offset: 0x148
    bool outsideReleaseDist;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private UnityEngine.Object _velocityCalculator
    // Size: 0x8
    // Offset: 0x150
    ::UnityEngine::Object* velocityCalculator;
    // Field size check
    static_assert(sizeof(::UnityEngine::Object*) == 0x8);
    // private Oculus.Interaction.Throw.IVelocityCalculator <VelocityCalculator>k__BackingField
    // Size: 0x8
    // Offset: 0x158
    ::Oculus::Interaction::Throw::IVelocityCalculator* VelocityCalculator;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Throw::IVelocityCalculator*) == 0x8);
    // private Oculus.Interaction.GrabInteractable _selectedInteractableOverride
    // Size: 0x8
    // Offset: 0x160
    ::Oculus::Interaction::GrabInteractable* selectedInteractableOverride;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::GrabInteractable*) == 0x8);
    // private System.Boolean _isSelectionOverriden
    // Size: 0x1
    // Offset: 0x168
    bool isSelectionOverriden;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating interface conversion operator: operator ::Oculus::Interaction::IRigidbodyRef
    operator ::Oculus::Interaction::IRigidbodyRef() noexcept {
      return *reinterpret_cast<::Oculus::Interaction::IRigidbodyRef*>(this);
    }
    // Get instance field reference: private UnityEngine.Object _selector
    [[deprecated("Use field access instead!")]] ::UnityEngine::Object*& dyn__selector();
    // Get instance field reference: private UnityEngine.Rigidbody _rigidbody
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& dyn__rigidbody();
    // Get instance field reference: private UnityEngine.Transform _grabCenter
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn__grabCenter();
    // Get instance field reference: private UnityEngine.Transform _grabTarget
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn__grabTarget();
    // Get instance field reference: private UnityEngine.Collider[] _colliders
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Collider*>& dyn__colliders();
    // Get instance field reference: private Oculus.Interaction.Tween _tween
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Tween*& dyn__tween();
    // Get instance field reference: private System.Boolean _outsideReleaseDist
    [[deprecated("Use field access instead!")]] bool& dyn__outsideReleaseDist();
    // Get instance field reference: private UnityEngine.Object _velocityCalculator
    [[deprecated("Use field access instead!")]] ::UnityEngine::Object*& dyn__velocityCalculator();
    // Get instance field reference: private Oculus.Interaction.Throw.IVelocityCalculator <VelocityCalculator>k__BackingField
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Throw::IVelocityCalculator*& dyn_$VelocityCalculator$k__BackingField();
    // Get instance field reference: private Oculus.Interaction.GrabInteractable _selectedInteractableOverride
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::GrabInteractable*& dyn__selectedInteractableOverride();
    // Get instance field reference: private System.Boolean _isSelectionOverriden
    [[deprecated("Use field access instead!")]] bool& dyn__isSelectionOverriden();
    // public UnityEngine.Rigidbody get_Rigidbody()
    // Offset: 0x47A9BE4
    ::UnityEngine::Rigidbody* get_Rigidbody();
    // public Oculus.Interaction.Throw.IVelocityCalculator get_VelocityCalculator()
    // Offset: 0x47A9BEC
    ::Oculus::Interaction::Throw::IVelocityCalculator* get_VelocityCalculator();
    // public System.Void set_VelocityCalculator(Oculus.Interaction.Throw.IVelocityCalculator value)
    // Offset: 0x47A9BF4
    void set_VelocityCalculator(::Oculus::Interaction::Throw::IVelocityCalculator* value);
    // protected Oculus.Interaction.GrabInteractable ComputeCandidate()
    // Offset: 0x47AA0D4
    ::Oculus::Interaction::GrabInteractable* ComputeCandidate();
    // public System.Void ForceSelect(Oculus.Interaction.GrabInteractable interactable)
    // Offset: 0x47AA3C4
    void ForceSelect(::Oculus::Interaction::GrabInteractable* interactable);
    // public System.Void ForceRelease()
    // Offset: 0x47AA588
    void ForceRelease();
    // protected System.Void InteractableSelected(Oculus.Interaction.GrabInteractable interactable)
    // Offset: 0x47AA7F8
    void InteractableSelected(::Oculus::Interaction::GrabInteractable* interactable);
    // protected System.Void InteractableUnselected(Oculus.Interaction.GrabInteractable interactable)
    // Offset: 0x47AAA60
    void InteractableUnselected(::Oculus::Interaction::GrabInteractable* interactable);
    // public System.Void InjectAllGrabInteractor(Oculus.Interaction.ISelector selector, UnityEngine.Rigidbody rigidbody)
    // Offset: 0x47AB5DC
    void InjectAllGrabInteractor(::Oculus::Interaction::ISelector* selector, ::UnityEngine::Rigidbody* rigidbody);
    // public System.Void InjectSelector(Oculus.Interaction.ISelector selector)
    // Offset: 0x47AB608
    void InjectSelector(::Oculus::Interaction::ISelector* selector);
    // public System.Void InjectRigidbody(UnityEngine.Rigidbody rigidbody)
    // Offset: 0x47AB6EC
    void InjectRigidbody(::UnityEngine::Rigidbody* rigidbody);
    // public System.Void InjectOptionalGrabCenter(UnityEngine.Transform grabCenter)
    // Offset: 0x47AB6FC
    void InjectOptionalGrabCenter(::UnityEngine::Transform* grabCenter);
    // public System.Void InjectOptionalGrabTarget(UnityEngine.Transform grabTarget)
    // Offset: 0x47AB70C
    void InjectOptionalGrabTarget(::UnityEngine::Transform* grabTarget);
    // public System.Void InjectOptionalVelocityCalculator(Oculus.Interaction.Throw.IVelocityCalculator velocityCalculator)
    // Offset: 0x47AB71C
    void InjectOptionalVelocityCalculator(::Oculus::Interaction::Throw::IVelocityCalculator* velocityCalculator);
    // private System.Void <Start>b__17_0()
    // Offset: 0x47AB834
    void $Start$b__17_0();
    // protected override System.Void Awake()
    // Offset: 0x47A9C04
    // Implemented from: Oculus.Interaction.Interactor`2
    // Base method: System.Void Interactor_2::Awake()
    void Awake();
    // protected override System.Void Start()
    // Offset: 0x47A9CE8
    // Implemented from: Oculus.Interaction.Interactor`2
    // Base method: System.Void Interactor_2::Start()
    void Start();
    // protected override System.Void DoPreprocess()
    // Offset: 0x47AA058
    // Implemented from: Oculus.Interaction.Interactor`2
    // Base method: System.Void Interactor_2::DoPreprocess()
    void DoPreprocess();
    // public override System.Void Unselect()
    // Offset: 0x47AA6EC
    // Implemented from: Oculus.Interaction.Interactor`2
    // Base method: System.Void Interactor_2::Unselect()
    void Unselect();
    // protected override System.Void HandlePointerEventRaised(Oculus.Interaction.PointerEvent evt)
    // Offset: 0x47AABE0
    // Implemented from: Oculus.Interaction.PointerInteractor`2
    // Base method: System.Void PointerInteractor_2::HandlePointerEventRaised(Oculus.Interaction.PointerEvent evt)
    void HandlePointerEventRaised(::Oculus::Interaction::PointerEvent evt);
    // protected override UnityEngine.Pose ComputePointerPose()
    // Offset: 0x47AB01C
    // Implemented from: Oculus.Interaction.PointerInteractor`2
    // Base method: UnityEngine.Pose PointerInteractor_2::ComputePointerPose()
    ::UnityEngine::Pose ComputePointerPose();
    // protected override System.Void DoSelectUpdate()
    // Offset: 0x47AB0E0
    // Implemented from: Oculus.Interaction.Interactor`2
    // Base method: System.Void Interactor_2::DoSelectUpdate()
    void DoSelectUpdate();
    // protected override System.Boolean ComputeShouldUnselect()
    // Offset: 0x47AB57C
    // Implemented from: Oculus.Interaction.Interactor`2
    // Base method: System.Boolean Interactor_2::ComputeShouldUnselect()
    bool ComputeShouldUnselect();
    // public System.Void .ctor()
    // Offset: 0x47AB7EC
    // Implemented from: Oculus.Interaction.PointerInteractor`2
    // Base method: System.Void PointerInteractor_2::.ctor()
    // Base method: System.Void Interactor_2::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GrabInteractor* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractor::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GrabInteractor*, creationType>()));
    }
  }; // Oculus.Interaction.GrabInteractor
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::GrabInteractor::get_Rigidbody
// Il2CppName: get_Rigidbody
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rigidbody* (Oculus::Interaction::GrabInteractor::*)()>(&Oculus::Interaction::GrabInteractor::get_Rigidbody)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabInteractor*), "get_Rigidbody", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabInteractor::get_VelocityCalculator
// Il2CppName: get_VelocityCalculator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::Throw::IVelocityCalculator* (Oculus::Interaction::GrabInteractor::*)()>(&Oculus::Interaction::GrabInteractor::get_VelocityCalculator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabInteractor*), "get_VelocityCalculator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabInteractor::set_VelocityCalculator
// Il2CppName: set_VelocityCalculator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::GrabInteractor::*)(::Oculus::Interaction::Throw::IVelocityCalculator*)>(&Oculus::Interaction::GrabInteractor::set_VelocityCalculator)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Throw", "IVelocityCalculator")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabInteractor*), "set_VelocityCalculator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabInteractor::ComputeCandidate
// Il2CppName: ComputeCandidate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::GrabInteractable* (Oculus::Interaction::GrabInteractor::*)()>(&Oculus::Interaction::GrabInteractor::ComputeCandidate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabInteractor*), "ComputeCandidate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabInteractor::ForceSelect
// Il2CppName: ForceSelect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::GrabInteractor::*)(::Oculus::Interaction::GrabInteractable*)>(&Oculus::Interaction::GrabInteractor::ForceSelect)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "GrabInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabInteractor*), "ForceSelect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabInteractor::ForceRelease
// Il2CppName: ForceRelease
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::GrabInteractor::*)()>(&Oculus::Interaction::GrabInteractor::ForceRelease)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabInteractor*), "ForceRelease", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabInteractor::InteractableSelected
// Il2CppName: InteractableSelected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::GrabInteractor::*)(::Oculus::Interaction::GrabInteractable*)>(&Oculus::Interaction::GrabInteractor::InteractableSelected)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "GrabInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabInteractor*), "InteractableSelected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabInteractor::InteractableUnselected
// Il2CppName: InteractableUnselected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::GrabInteractor::*)(::Oculus::Interaction::GrabInteractable*)>(&Oculus::Interaction::GrabInteractor::InteractableUnselected)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "GrabInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabInteractor*), "InteractableUnselected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabInteractor::InjectAllGrabInteractor
// Il2CppName: InjectAllGrabInteractor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::GrabInteractor::*)(::Oculus::Interaction::ISelector*, ::UnityEngine::Rigidbody*)>(&Oculus::Interaction::GrabInteractor::InjectAllGrabInteractor)> {
  static const MethodInfo* get() {
    static auto* selector = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "ISelector")->byval_arg;
    static auto* rigidbody = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rigidbody")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabInteractor*), "InjectAllGrabInteractor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{selector, rigidbody});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabInteractor::InjectSelector
// Il2CppName: InjectSelector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::GrabInteractor::*)(::Oculus::Interaction::ISelector*)>(&Oculus::Interaction::GrabInteractor::InjectSelector)> {
  static const MethodInfo* get() {
    static auto* selector = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "ISelector")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabInteractor*), "InjectSelector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{selector});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabInteractor::InjectRigidbody
// Il2CppName: InjectRigidbody
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::GrabInteractor::*)(::UnityEngine::Rigidbody*)>(&Oculus::Interaction::GrabInteractor::InjectRigidbody)> {
  static const MethodInfo* get() {
    static auto* rigidbody = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rigidbody")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabInteractor*), "InjectRigidbody", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rigidbody});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabInteractor::InjectOptionalGrabCenter
// Il2CppName: InjectOptionalGrabCenter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::GrabInteractor::*)(::UnityEngine::Transform*)>(&Oculus::Interaction::GrabInteractor::InjectOptionalGrabCenter)> {
  static const MethodInfo* get() {
    static auto* grabCenter = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabInteractor*), "InjectOptionalGrabCenter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{grabCenter});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabInteractor::InjectOptionalGrabTarget
// Il2CppName: InjectOptionalGrabTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::GrabInteractor::*)(::UnityEngine::Transform*)>(&Oculus::Interaction::GrabInteractor::InjectOptionalGrabTarget)> {
  static const MethodInfo* get() {
    static auto* grabTarget = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabInteractor*), "InjectOptionalGrabTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{grabTarget});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabInteractor::InjectOptionalVelocityCalculator
// Il2CppName: InjectOptionalVelocityCalculator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::GrabInteractor::*)(::Oculus::Interaction::Throw::IVelocityCalculator*)>(&Oculus::Interaction::GrabInteractor::InjectOptionalVelocityCalculator)> {
  static const MethodInfo* get() {
    static auto* velocityCalculator = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Throw", "IVelocityCalculator")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabInteractor*), "InjectOptionalVelocityCalculator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{velocityCalculator});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabInteractor::$Start$b__17_0
// Il2CppName: <Start>b__17_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::GrabInteractor::*)()>(&Oculus::Interaction::GrabInteractor::$Start$b__17_0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabInteractor*), "<Start>b__17_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabInteractor::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::GrabInteractor::*)()>(&Oculus::Interaction::GrabInteractor::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabInteractor*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabInteractor::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::GrabInteractor::*)()>(&Oculus::Interaction::GrabInteractor::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabInteractor*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabInteractor::DoPreprocess
// Il2CppName: DoPreprocess
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::GrabInteractor::*)()>(&Oculus::Interaction::GrabInteractor::DoPreprocess)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabInteractor*), "DoPreprocess", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabInteractor::Unselect
// Il2CppName: Unselect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::GrabInteractor::*)()>(&Oculus::Interaction::GrabInteractor::Unselect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabInteractor*), "Unselect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabInteractor::HandlePointerEventRaised
// Il2CppName: HandlePointerEventRaised
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::GrabInteractor::*)(::Oculus::Interaction::PointerEvent)>(&Oculus::Interaction::GrabInteractor::HandlePointerEventRaised)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "PointerEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabInteractor*), "HandlePointerEventRaised", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabInteractor::ComputePointerPose
// Il2CppName: ComputePointerPose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Pose (Oculus::Interaction::GrabInteractor::*)()>(&Oculus::Interaction::GrabInteractor::ComputePointerPose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabInteractor*), "ComputePointerPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabInteractor::DoSelectUpdate
// Il2CppName: DoSelectUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::GrabInteractor::*)()>(&Oculus::Interaction::GrabInteractor::DoSelectUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabInteractor*), "DoSelectUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabInteractor::ComputeShouldUnselect
// Il2CppName: ComputeShouldUnselect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::GrabInteractor::*)()>(&Oculus::Interaction::GrabInteractor::ComputeShouldUnselect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabInteractor*), "ComputeShouldUnselect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabInteractor::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
