// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.PokeInteractable
#include "Oculus/Interaction/PokeInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: AnimationCurve
  class AnimationCurve;
}
// Forward declaring namespace: Oculus::Interaction
namespace Oculus::Interaction {
  // Forward declaring type: ProgressCurve
  class ProgressCurve;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::PokeInteractable::PositionPinningConfig);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::PokeInteractable::PositionPinningConfig*, "Oculus.Interaction", "PokeInteractable/PositionPinningConfig");
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.PokeInteractable/PositionPinningConfig
  // [TokenAttribute] Offset: FFFFFFFF
  class PokeInteractable::PositionPinningConfig : public ::Il2CppObject {
    public:
    public:
    // public System.Boolean Enabled
    // Size: 0x1
    // Offset: 0x10
    bool Enabled;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: Enabled and: MaxPinDistance
    char __padding0[0x3] = {};
    // public System.Single MaxPinDistance
    // Size: 0x4
    // Offset: 0x14
    float MaxPinDistance;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public UnityEngine.AnimationCurve PinningEaseCurve
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::AnimationCurve* PinningEaseCurve;
    // Field size check
    static_assert(sizeof(::UnityEngine::AnimationCurve*) == 0x8);
    // public Oculus.Interaction.ProgressCurve ResyncCurve
    // Size: 0x8
    // Offset: 0x20
    ::Oculus::Interaction::ProgressCurve* ResyncCurve;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::ProgressCurve*) == 0x8);
    public:
    // Get instance field reference: public System.Boolean Enabled
    [[deprecated("Use field access instead!")]] bool& dyn_Enabled();
    // Get instance field reference: public System.Single MaxPinDistance
    [[deprecated("Use field access instead!")]] float& dyn_MaxPinDistance();
    // Get instance field reference: public UnityEngine.AnimationCurve PinningEaseCurve
    [[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& dyn_PinningEaseCurve();
    // Get instance field reference: public Oculus.Interaction.ProgressCurve ResyncCurve
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::ProgressCurve*& dyn_ResyncCurve();
    // public System.Void .ctor()
    // Offset: 0x47AD810
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PokeInteractable::PositionPinningConfig* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::PositionPinningConfig::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PokeInteractable::PositionPinningConfig*, creationType>()));
    }
  }; // Oculus.Interaction.PokeInteractable/PositionPinningConfig
  #pragma pack(pop)
  static check_size<sizeof(PokeInteractable::PositionPinningConfig), 32 + sizeof(::Oculus::Interaction::ProgressCurve*)> __Oculus_Interaction_PokeInteractable_PositionPinningConfigSizeCheck;
  static_assert(sizeof(PokeInteractable::PositionPinningConfig) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::PokeInteractable::PositionPinningConfig::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
