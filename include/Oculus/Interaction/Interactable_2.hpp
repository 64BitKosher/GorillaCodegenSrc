// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: Oculus.Interaction.IInteractable
#include "Oculus/Interaction/IInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction
namespace Oculus::Interaction {
  // Skipping declaration: <>c because it is already included!
  // Forward declaring type: Interactor`2<TInteractor, TInteractable>
  template<typename TInteractor, typename TInteractable>
  class Interactor_2;
  // Forward declaring type: IGameObjectFilter
  class IGameObjectFilter;
  // Forward declaring type: IInteractorView
  class IInteractorView;
  // Forward declaring type: MultiAction`1<T>
  template<typename T>
  class MultiAction_1;
  // Forward declaring type: InteractableRegistry`2<TInteractor, TInteractable>
  template<typename TInteractor, typename TInteractable>
  class InteractableRegistry_2;
  // Forward declaring type: MAction`1<T>
  template<typename T>
  class MAction_1;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: IEnumerable`1<T>
  template<typename T>
  class IEnumerable_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Object because it is already included!
}
// Forward declaring namespace: Oculus::Interaction::Collections
namespace Oculus::Interaction::Collections {
  // Forward declaring type: EnumerableHashSet`1<T>
  template<typename T>
  class EnumerableHashSet_1;
  // Forward declaring type: IEnumerableHashSet`1<T>
  template<typename T>
  class IEnumerableHashSet_1;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: Converter`2<TInput, TOutput>
  template<typename TInput, typename TOutput>
  class Converter_2;
}
// Completed forward declares
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Forward declaring type: Interactable`2<TInteractor, TInteractable>
  template<typename TInteractor, typename TInteractable>
  class Interactable_2;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::Oculus::Interaction::Interactable_2, "Oculus.Interaction", "Interactable`2");
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // WARNING Size may be invalid!
  // Autogenerated type: Oculus.Interaction.Interactable`2
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename TInteractor, typename TInteractable>
  class Interactable_2 : public ::UnityEngine::MonoBehaviour/*, public ::Oculus::Interaction::IInteractable*/ {
    public:
    // Nested type: ::Oculus::Interaction::Interactable_2::$$c<TInteractor, TInteractable>
    class $$c;
    // WARNING Size may be invalid!
    // Autogenerated type: Oculus.Interaction.Interactable`2/<>c
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    class $$c : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = Interactable_2<TInteractor, TInteractable>*;
      static constexpr std::string_view NESTED_NAME = "<>c";
      static constexpr bool IS_VALUE_TYPE = false;
      // Autogenerated static field getter
      // Get static field: static public readonly Oculus.Interaction.Interactable`2/<>c<TInteractor,TInteractable> <>9
      static typename ::Oculus::Interaction::Interactable_2<TInteractor, TInteractable>::$$c* _get_$$9() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::$$c::_get_$$9");
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<typename ::Oculus::Interaction::Interactable_2<TInteractor, TInteractable>::$$c*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename Interactable_2<TInteractor, TInteractable>::$$c*>::get(), "<>9")));
      }
      // Autogenerated static field setter
      // Set static field: static public readonly Oculus.Interaction.Interactable`2/<>c<TInteractor,TInteractable> <>9
      static void _set_$$9(typename ::Oculus::Interaction::Interactable_2<TInteractor, TInteractable>::$$c* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::$$c::_set_$$9");
        THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename Interactable_2<TInteractor, TInteractable>::$$c*>::get(), "<>9", value)));
      }
      // Autogenerated static field getter
      // Get static field: static public System.Converter`2<UnityEngine.Object,Oculus.Interaction.IGameObjectFilter> <>9__75_0
      static ::System::Converter_2<::UnityEngine::Object*, ::Oculus::Interaction::IGameObjectFilter*>* _get_$$9__75_0() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::$$c::_get_$$9__75_0");
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Converter_2<::UnityEngine::Object*, ::Oculus::Interaction::IGameObjectFilter*>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename Interactable_2<TInteractor, TInteractable>::$$c*>::get(), "<>9__75_0")));
      }
      // Autogenerated static field setter
      // Set static field: static public System.Converter`2<UnityEngine.Object,Oculus.Interaction.IGameObjectFilter> <>9__75_0
      static void _set_$$9__75_0(::System::Converter_2<::UnityEngine::Object*, ::Oculus::Interaction::IGameObjectFilter*>* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::$$c::_set_$$9__75_0");
        THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename Interactable_2<TInteractor, TInteractable>::$$c*>::get(), "<>9__75_0", value)));
      }
      // Autogenerated static field getter
      // Get static field: static public System.Converter`2<Oculus.Interaction.IGameObjectFilter,UnityEngine.Object> <>9__80_0
      static ::System::Converter_2<::Oculus::Interaction::IGameObjectFilter*, ::UnityEngine::Object*>* _get_$$9__80_0() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::$$c::_get_$$9__80_0");
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Converter_2<::Oculus::Interaction::IGameObjectFilter*, ::UnityEngine::Object*>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename Interactable_2<TInteractor, TInteractable>::$$c*>::get(), "<>9__80_0")));
      }
      // Autogenerated static field setter
      // Set static field: static public System.Converter`2<Oculus.Interaction.IGameObjectFilter,UnityEngine.Object> <>9__80_0
      static void _set_$$9__80_0(::System::Converter_2<::Oculus::Interaction::IGameObjectFilter*, ::UnityEngine::Object*>* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::$$c::_set_$$9__80_0");
        THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename Interactable_2<TInteractor, TInteractable>::$$c*>::get(), "<>9__80_0", value)));
      }
      // Autogenerated static field getter
      // Get static field: static public System.Action`1<Oculus.Interaction.InteractableStateChangeArgs> <>9__82_0
      static ::System::Action_1<::Oculus::Interaction::InteractableStateChangeArgs>* _get_$$9__82_0() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::$$c::_get_$$9__82_0");
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::Oculus::Interaction::InteractableStateChangeArgs>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename Interactable_2<TInteractor, TInteractable>::$$c*>::get(), "<>9__82_0")));
      }
      // Autogenerated static field setter
      // Set static field: static public System.Action`1<Oculus.Interaction.InteractableStateChangeArgs> <>9__82_0
      static void _set_$$9__82_0(::System::Action_1<::Oculus::Interaction::InteractableStateChangeArgs>* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::$$c::_set_$$9__82_0");
        THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename Interactable_2<TInteractor, TInteractable>::$$c*>::get(), "<>9__82_0", value)));
      }
      // Autogenerated static field getter
      // Get static field: static public System.Action`1<Oculus.Interaction.IInteractorView> <>9__82_1
      static ::System::Action_1<::Oculus::Interaction::IInteractorView*>* _get_$$9__82_1() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::$$c::_get_$$9__82_1");
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::Oculus::Interaction::IInteractorView*>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename Interactable_2<TInteractor, TInteractable>::$$c*>::get(), "<>9__82_1")));
      }
      // Autogenerated static field setter
      // Set static field: static public System.Action`1<Oculus.Interaction.IInteractorView> <>9__82_1
      static void _set_$$9__82_1(::System::Action_1<::Oculus::Interaction::IInteractorView*>* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::$$c::_set_$$9__82_1");
        THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename Interactable_2<TInteractor, TInteractable>::$$c*>::get(), "<>9__82_1", value)));
      }
      // Autogenerated static field getter
      // Get static field: static public System.Action`1<Oculus.Interaction.IInteractorView> <>9__82_2
      static ::System::Action_1<::Oculus::Interaction::IInteractorView*>* _get_$$9__82_2() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::$$c::_get_$$9__82_2");
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::Oculus::Interaction::IInteractorView*>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename Interactable_2<TInteractor, TInteractable>::$$c*>::get(), "<>9__82_2")));
      }
      // Autogenerated static field setter
      // Set static field: static public System.Action`1<Oculus.Interaction.IInteractorView> <>9__82_2
      static void _set_$$9__82_2(::System::Action_1<::Oculus::Interaction::IInteractorView*>* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::$$c::_set_$$9__82_2");
        THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename Interactable_2<TInteractor, TInteractable>::$$c*>::get(), "<>9__82_2", value)));
      }
      // Autogenerated static field getter
      // Get static field: static public System.Action`1<Oculus.Interaction.IInteractorView> <>9__82_3
      static ::System::Action_1<::Oculus::Interaction::IInteractorView*>* _get_$$9__82_3() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::$$c::_get_$$9__82_3");
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::Oculus::Interaction::IInteractorView*>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename Interactable_2<TInteractor, TInteractable>::$$c*>::get(), "<>9__82_3")));
      }
      // Autogenerated static field setter
      // Set static field: static public System.Action`1<Oculus.Interaction.IInteractorView> <>9__82_3
      static void _set_$$9__82_3(::System::Action_1<::Oculus::Interaction::IInteractorView*>* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::$$c::_set_$$9__82_3");
        THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename Interactable_2<TInteractor, TInteractable>::$$c*>::get(), "<>9__82_3", value)));
      }
      // Autogenerated static field getter
      // Get static field: static public System.Action`1<Oculus.Interaction.IInteractorView> <>9__82_4
      static ::System::Action_1<::Oculus::Interaction::IInteractorView*>* _get_$$9__82_4() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::$$c::_get_$$9__82_4");
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::Oculus::Interaction::IInteractorView*>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename Interactable_2<TInteractor, TInteractable>::$$c*>::get(), "<>9__82_4")));
      }
      // Autogenerated static field setter
      // Set static field: static public System.Action`1<Oculus.Interaction.IInteractorView> <>9__82_4
      static void _set_$$9__82_4(::System::Action_1<::Oculus::Interaction::IInteractorView*>* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::$$c::_set_$$9__82_4");
        THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename Interactable_2<TInteractor, TInteractable>::$$c*>::get(), "<>9__82_4", value)));
      }
      // static private System.Void .cctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      static void _cctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::$$c::.cctor");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename Interactable_2<TInteractor, TInteractable>::$$c*>::get(), ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename Interactable_2<TInteractor, TInteractable>::$$c* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::$$c::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename Interactable_2<TInteractor, TInteractable>::$$c*, creationType>()));
      }
      // Oculus.Interaction.IGameObjectFilter <Awake>b__75_0(UnityEngine.Object mono)
      // Offset: 0xFFFFFFFFFFFFFFFF
      ::Oculus::Interaction::IGameObjectFilter* $Awake$b__75_0(::UnityEngine::Object* mono) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::$$c::<Awake>b__75_0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__75_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mono)})));
        return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::IGameObjectFilter*, false>(this, ___internal__method, mono);
      }
      // UnityEngine.Object <InjectOptionalInteractorFilters>b__80_0(Oculus.Interaction.IGameObjectFilter interactorFilter)
      // Offset: 0xFFFFFFFFFFFFFFFF
      ::UnityEngine::Object* $InjectOptionalInteractorFilters$b__80_0(::Oculus::Interaction::IGameObjectFilter* interactorFilter) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::$$c::<InjectOptionalInteractorFilters>b__80_0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InjectOptionalInteractorFilters>b__80_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactorFilter)})));
        return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(this, ___internal__method, interactorFilter);
      }
      // System.Void <.ctor>b__82_0(Oculus.Interaction.InteractableStateChangeArgs <p0>)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $_ctor$b__82_0(::Oculus::Interaction::InteractableStateChangeArgs $p0$) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::$$c::<.ctor>b__82_0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__82_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, $p0$);
      }
      // System.Void <.ctor>b__82_1(Oculus.Interaction.IInteractorView <p0>)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $_ctor$b__82_1(::Oculus::Interaction::IInteractorView* $p0$) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::$$c::<.ctor>b__82_1");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__82_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, $p0$);
      }
      // System.Void <.ctor>b__82_2(Oculus.Interaction.IInteractorView <p0>)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $_ctor$b__82_2(::Oculus::Interaction::IInteractorView* $p0$) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::$$c::<.ctor>b__82_2");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__82_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, $p0$);
      }
      // System.Void <.ctor>b__82_3(Oculus.Interaction.IInteractorView <p0>)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $_ctor$b__82_3(::Oculus::Interaction::IInteractorView* $p0$) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::$$c::<.ctor>b__82_3");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__82_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, $p0$);
      }
      // System.Void <.ctor>b__82_4(Oculus.Interaction.IInteractorView <p0>)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $_ctor$b__82_4(::Oculus::Interaction::IInteractorView* $p0$) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::$$c::<.ctor>b__82_4");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__82_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, $p0$);
      }
    }; // Oculus.Interaction.Interactable`2/<>c
    // Could not write size check! Type: Oculus.Interaction.Interactable`2/<>c is generic, or has no fields that are valid for size checks!
    public:
    // private System.Collections.Generic.List`1<UnityEngine.Object> _interactorFilters
    // Size: 0x8
    // Offset: 0x0
    ::System::Collections::Generic::List_1<::UnityEngine::Object*>* interactorFilters;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::Object*>*) == 0x8);
    // private System.Collections.Generic.List`1<Oculus.Interaction.IGameObjectFilter> InteractorFilters
    // Size: 0x8
    // Offset: 0x0
    ::System::Collections::Generic::List_1<::Oculus::Interaction::IGameObjectFilter*>* InteractorFilters;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::Oculus::Interaction::IGameObjectFilter*>*) == 0x8);
    // private System.Int32 _maxInteractors
    // Size: 0x4
    // Offset: 0x0
    int maxInteractors;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 _maxSelectingInteractors
    // Size: 0x4
    // Offset: 0x0
    int maxSelectingInteractors;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private UnityEngine.Object _data
    // Size: 0x8
    // Offset: 0x0
    ::UnityEngine::Object* data;
    // Field size check
    static_assert(sizeof(::UnityEngine::Object*) == 0x8);
    // private System.Object <Data>k__BackingField
    // Size: 0x8
    // Offset: 0x0
    ::Il2CppObject* Data;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    // protected System.Boolean _started
    // Size: 0x1
    // Offset: 0x0
    bool started;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private Oculus.Interaction.Collections.EnumerableHashSet`1<TInteractor> _interactors
    // Size: 0x8
    // Offset: 0x0
    ::Oculus::Interaction::Collections::EnumerableHashSet_1<TInteractor>* interactors;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Collections::EnumerableHashSet_1<TInteractor>*) == 0x8);
    // private Oculus.Interaction.Collections.EnumerableHashSet`1<TInteractor> _selectingInteractors
    // Size: 0x8
    // Offset: 0x0
    ::Oculus::Interaction::Collections::EnumerableHashSet_1<TInteractor>* selectingInteractors;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Collections::EnumerableHashSet_1<TInteractor>*) == 0x8);
    // private Oculus.Interaction.InteractableState _state
    // Size: 0x4
    // Offset: 0x0
    ::Oculus::Interaction::InteractableState state;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::InteractableState) == 0x4);
    // private System.Action`1<Oculus.Interaction.InteractableStateChangeArgs> WhenStateChanged
    // Size: 0x8
    // Offset: 0x0
    ::System::Action_1<::Oculus::Interaction::InteractableStateChangeArgs>* WhenStateChanged;
    // Field size check
    static_assert(sizeof(::System::Action_1<::Oculus::Interaction::InteractableStateChangeArgs>*) == 0x8);
    // private System.Action`1<Oculus.Interaction.IInteractorView> WhenInteractorViewAdded
    // Size: 0x8
    // Offset: 0x0
    ::System::Action_1<::Oculus::Interaction::IInteractorView*>* WhenInteractorViewAdded;
    // Field size check
    static_assert(sizeof(::System::Action_1<::Oculus::Interaction::IInteractorView*>*) == 0x8);
    // private System.Action`1<Oculus.Interaction.IInteractorView> WhenInteractorViewRemoved
    // Size: 0x8
    // Offset: 0x0
    ::System::Action_1<::Oculus::Interaction::IInteractorView*>* WhenInteractorViewRemoved;
    // Field size check
    static_assert(sizeof(::System::Action_1<::Oculus::Interaction::IInteractorView*>*) == 0x8);
    // private System.Action`1<Oculus.Interaction.IInteractorView> WhenSelectingInteractorViewAdded
    // Size: 0x8
    // Offset: 0x0
    ::System::Action_1<::Oculus::Interaction::IInteractorView*>* WhenSelectingInteractorViewAdded;
    // Field size check
    static_assert(sizeof(::System::Action_1<::Oculus::Interaction::IInteractorView*>*) == 0x8);
    // private System.Action`1<Oculus.Interaction.IInteractorView> WhenSelectingInteractorViewRemoved
    // Size: 0x8
    // Offset: 0x0
    ::System::Action_1<::Oculus::Interaction::IInteractorView*>* WhenSelectingInteractorViewRemoved;
    // Field size check
    static_assert(sizeof(::System::Action_1<::Oculus::Interaction::IInteractorView*>*) == 0x8);
    // private Oculus.Interaction.MultiAction`1<TInteractor> _whenInteractorAdded
    // Size: 0x8
    // Offset: 0x0
    ::Oculus::Interaction::MultiAction_1<TInteractor>* whenInteractorAdded;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::MultiAction_1<TInteractor>*) == 0x8);
    // private Oculus.Interaction.MultiAction`1<TInteractor> _whenInteractorRemoved
    // Size: 0x8
    // Offset: 0x0
    ::Oculus::Interaction::MultiAction_1<TInteractor>* whenInteractorRemoved;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::MultiAction_1<TInteractor>*) == 0x8);
    // private Oculus.Interaction.MultiAction`1<TInteractor> _whenSelectingInteractorAdded
    // Size: 0x8
    // Offset: 0x0
    ::Oculus::Interaction::MultiAction_1<TInteractor>* whenSelectingInteractorAdded;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::MultiAction_1<TInteractor>*) == 0x8);
    // private Oculus.Interaction.MultiAction`1<TInteractor> _whenSelectingInteractorRemoved
    // Size: 0x8
    // Offset: 0x0
    ::Oculus::Interaction::MultiAction_1<TInteractor>* whenSelectingInteractorRemoved;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::MultiAction_1<TInteractor>*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::Oculus::Interaction::IInteractable
    operator ::Oculus::Interaction::IInteractable() noexcept {
      return *reinterpret_cast<::Oculus::Interaction::IInteractable*>(this);
    }
    // Autogenerated static field getter
    // Get static field: static private Oculus.Interaction.InteractableRegistry`2<TInteractor,TInteractable> _registry
    static ::Oculus::Interaction::InteractableRegistry_2<TInteractor, TInteractable>* _get__registry() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::_get__registry");
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::InteractableRegistry_2<TInteractor, TInteractable>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<Interactable_2<TInteractor, TInteractable>*>::get(), "_registry")));
    }
    // Autogenerated static field setter
    // Set static field: static private Oculus.Interaction.InteractableRegistry`2<TInteractor,TInteractable> _registry
    static void _set__registry(::Oculus::Interaction::InteractableRegistry_2<TInteractor, TInteractable>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::_set__registry");
      THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<Interactable_2<TInteractor, TInteractable>*>::get(), "_registry", value)));
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Collections.Generic.List`1<UnityEngine.Object> _interactorFilters
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Object*>*& dyn__interactorFilters() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::dyn__interactorFilters");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_interactorFilters"))->offset;
      return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Object*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Collections.Generic.List`1<Oculus.Interaction.IGameObjectFilter> InteractorFilters
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Oculus::Interaction::IGameObjectFilter*>*& dyn_InteractorFilters() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::dyn_InteractorFilters");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InteractorFilters"))->offset;
      return *reinterpret_cast<::System::Collections::Generic::List_1<::Oculus::Interaction::IGameObjectFilter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Int32 _maxInteractors
    [[deprecated("Use field access instead!")]] int& dyn__maxInteractors() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::dyn__maxInteractors");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxInteractors"))->offset;
      return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Int32 _maxSelectingInteractors
    [[deprecated("Use field access instead!")]] int& dyn__maxSelectingInteractors() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::dyn__maxSelectingInteractors");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxSelectingInteractors"))->offset;
      return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private UnityEngine.Object _data
    [[deprecated("Use field access instead!")]] ::UnityEngine::Object*& dyn__data() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::dyn__data");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_data"))->offset;
      return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Object <Data>k__BackingField
    [[deprecated("Use field access instead!")]] ::Il2CppObject*& dyn_$Data$k__BackingField() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::dyn_$Data$k__BackingField");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Data>k__BackingField"))->offset;
      return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: protected System.Boolean _started
    [[deprecated("Use field access instead!")]] bool& dyn__started() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::dyn__started");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
      return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private Oculus.Interaction.Collections.EnumerableHashSet`1<TInteractor> _interactors
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Collections::EnumerableHashSet_1<TInteractor>*& dyn__interactors() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::dyn__interactors");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_interactors"))->offset;
      return *reinterpret_cast<::Oculus::Interaction::Collections::EnumerableHashSet_1<TInteractor>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private Oculus.Interaction.Collections.EnumerableHashSet`1<TInteractor> _selectingInteractors
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Collections::EnumerableHashSet_1<TInteractor>*& dyn__selectingInteractors() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::dyn__selectingInteractors");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectingInteractors"))->offset;
      return *reinterpret_cast<::Oculus::Interaction::Collections::EnumerableHashSet_1<TInteractor>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private Oculus.Interaction.InteractableState _state
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::InteractableState& dyn__state() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::dyn__state");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_state"))->offset;
      return *reinterpret_cast<::Oculus::Interaction::InteractableState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Action`1<Oculus.Interaction.InteractableStateChangeArgs> WhenStateChanged
    [[deprecated("Use field access instead!")]] ::System::Action_1<::Oculus::Interaction::InteractableStateChangeArgs>*& dyn_WhenStateChanged() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::dyn_WhenStateChanged");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenStateChanged"))->offset;
      return *reinterpret_cast<::System::Action_1<::Oculus::Interaction::InteractableStateChangeArgs>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Action`1<Oculus.Interaction.IInteractorView> WhenInteractorViewAdded
    [[deprecated("Use field access instead!")]] ::System::Action_1<::Oculus::Interaction::IInteractorView*>*& dyn_WhenInteractorViewAdded() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::dyn_WhenInteractorViewAdded");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenInteractorViewAdded"))->offset;
      return *reinterpret_cast<::System::Action_1<::Oculus::Interaction::IInteractorView*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Action`1<Oculus.Interaction.IInteractorView> WhenInteractorViewRemoved
    [[deprecated("Use field access instead!")]] ::System::Action_1<::Oculus::Interaction::IInteractorView*>*& dyn_WhenInteractorViewRemoved() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::dyn_WhenInteractorViewRemoved");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenInteractorViewRemoved"))->offset;
      return *reinterpret_cast<::System::Action_1<::Oculus::Interaction::IInteractorView*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Action`1<Oculus.Interaction.IInteractorView> WhenSelectingInteractorViewAdded
    [[deprecated("Use field access instead!")]] ::System::Action_1<::Oculus::Interaction::IInteractorView*>*& dyn_WhenSelectingInteractorViewAdded() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::dyn_WhenSelectingInteractorViewAdded");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenSelectingInteractorViewAdded"))->offset;
      return *reinterpret_cast<::System::Action_1<::Oculus::Interaction::IInteractorView*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Action`1<Oculus.Interaction.IInteractorView> WhenSelectingInteractorViewRemoved
    [[deprecated("Use field access instead!")]] ::System::Action_1<::Oculus::Interaction::IInteractorView*>*& dyn_WhenSelectingInteractorViewRemoved() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::dyn_WhenSelectingInteractorViewRemoved");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenSelectingInteractorViewRemoved"))->offset;
      return *reinterpret_cast<::System::Action_1<::Oculus::Interaction::IInteractorView*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private Oculus.Interaction.MultiAction`1<TInteractor> _whenInteractorAdded
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::MultiAction_1<TInteractor>*& dyn__whenInteractorAdded() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::dyn__whenInteractorAdded");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenInteractorAdded"))->offset;
      return *reinterpret_cast<::Oculus::Interaction::MultiAction_1<TInteractor>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private Oculus.Interaction.MultiAction`1<TInteractor> _whenInteractorRemoved
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::MultiAction_1<TInteractor>*& dyn__whenInteractorRemoved() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::dyn__whenInteractorRemoved");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenInteractorRemoved"))->offset;
      return *reinterpret_cast<::Oculus::Interaction::MultiAction_1<TInteractor>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private Oculus.Interaction.MultiAction`1<TInteractor> _whenSelectingInteractorAdded
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::MultiAction_1<TInteractor>*& dyn__whenSelectingInteractorAdded() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::dyn__whenSelectingInteractorAdded");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenSelectingInteractorAdded"))->offset;
      return *reinterpret_cast<::Oculus::Interaction::MultiAction_1<TInteractor>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private Oculus.Interaction.MultiAction`1<TInteractor> _whenSelectingInteractorRemoved
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::MultiAction_1<TInteractor>*& dyn__whenSelectingInteractorRemoved() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::dyn__whenSelectingInteractorRemoved");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenSelectingInteractorRemoved"))->offset;
      return *reinterpret_cast<::Oculus::Interaction::MultiAction_1<TInteractor>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // public System.Object get_Data()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Il2CppObject* get_Data() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::get_Data");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactable_2<TInteractor, TInteractable>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
    }
    // protected System.Void set_Data(System.Object value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_Data(::Il2CppObject* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::set_Data");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public System.Int32 get_MaxInteractors()
    // Offset: 0xFFFFFFFFFFFFFFFF
    int get_MaxInteractors() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::get_MaxInteractors");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactable_2<TInteractor, TInteractable>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
    }
    // public System.Void set_MaxInteractors(System.Int32 value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_MaxInteractors(int value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::set_MaxInteractors");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactable_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public System.Int32 get_MaxSelectingInteractors()
    // Offset: 0xFFFFFFFFFFFFFFFF
    int get_MaxSelectingInteractors() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::get_MaxSelectingInteractors");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactable_2<TInteractor, TInteractable>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
    }
    // public System.Void set_MaxSelectingInteractors(System.Int32 value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_MaxSelectingInteractors(int value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::set_MaxSelectingInteractors");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactable_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public System.Collections.Generic.IEnumerable`1<Oculus.Interaction.IInteractorView> get_InteractorViews()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::IInteractorView*>* get_InteractorViews() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::get_InteractorViews");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactable_2<TInteractor, TInteractable>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::IInteractorView*>*, false>(this, ___internal__method);
    }
    // public System.Collections.Generic.IEnumerable`1<Oculus.Interaction.IInteractorView> get_SelectingInteractorViews()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::IInteractorView*>* get_SelectingInteractorViews() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::get_SelectingInteractorViews");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactable_2<TInteractor, TInteractable>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::IInteractorView*>*, false>(this, ___internal__method);
    }
    // public System.Void add_WhenStateChanged(System.Action`1<Oculus.Interaction.InteractableStateChangeArgs> value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void add_WhenStateChanged(::System::Action_1<::Oculus::Interaction::InteractableStateChangeArgs>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::add_WhenStateChanged");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactable_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public System.Void remove_WhenStateChanged(System.Action`1<Oculus.Interaction.InteractableStateChangeArgs> value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void remove_WhenStateChanged(::System::Action_1<::Oculus::Interaction::InteractableStateChangeArgs>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::remove_WhenStateChanged");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactable_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public System.Void add_WhenInteractorViewAdded(System.Action`1<Oculus.Interaction.IInteractorView> value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void add_WhenInteractorViewAdded(::System::Action_1<::Oculus::Interaction::IInteractorView*>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::add_WhenInteractorViewAdded");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactable_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public System.Void remove_WhenInteractorViewAdded(System.Action`1<Oculus.Interaction.IInteractorView> value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void remove_WhenInteractorViewAdded(::System::Action_1<::Oculus::Interaction::IInteractorView*>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::remove_WhenInteractorViewAdded");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactable_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public System.Void add_WhenInteractorViewRemoved(System.Action`1<Oculus.Interaction.IInteractorView> value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void add_WhenInteractorViewRemoved(::System::Action_1<::Oculus::Interaction::IInteractorView*>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::add_WhenInteractorViewRemoved");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactable_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public System.Void remove_WhenInteractorViewRemoved(System.Action`1<Oculus.Interaction.IInteractorView> value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void remove_WhenInteractorViewRemoved(::System::Action_1<::Oculus::Interaction::IInteractorView*>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::remove_WhenInteractorViewRemoved");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactable_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public System.Void add_WhenSelectingInteractorViewAdded(System.Action`1<Oculus.Interaction.IInteractorView> value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void add_WhenSelectingInteractorViewAdded(::System::Action_1<::Oculus::Interaction::IInteractorView*>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::add_WhenSelectingInteractorViewAdded");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactable_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public System.Void remove_WhenSelectingInteractorViewAdded(System.Action`1<Oculus.Interaction.IInteractorView> value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void remove_WhenSelectingInteractorViewAdded(::System::Action_1<::Oculus::Interaction::IInteractorView*>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::remove_WhenSelectingInteractorViewAdded");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactable_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public System.Void add_WhenSelectingInteractorViewRemoved(System.Action`1<Oculus.Interaction.IInteractorView> value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void add_WhenSelectingInteractorViewRemoved(::System::Action_1<::Oculus::Interaction::IInteractorView*>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::add_WhenSelectingInteractorViewRemoved");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactable_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public System.Void remove_WhenSelectingInteractorViewRemoved(System.Action`1<Oculus.Interaction.IInteractorView> value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void remove_WhenSelectingInteractorViewRemoved(::System::Action_1<::Oculus::Interaction::IInteractorView*>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::remove_WhenSelectingInteractorViewRemoved");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactable_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public Oculus.Interaction.MAction`1<TInteractor> get_WhenInteractorAdded()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Oculus::Interaction::MAction_1<TInteractor>* get_WhenInteractorAdded() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::get_WhenInteractorAdded");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WhenInteractorAdded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::MAction_1<TInteractor>*, false>(this, ___internal__method);
    }
    // public Oculus.Interaction.MAction`1<TInteractor> get_WhenInteractorRemoved()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Oculus::Interaction::MAction_1<TInteractor>* get_WhenInteractorRemoved() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::get_WhenInteractorRemoved");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WhenInteractorRemoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::MAction_1<TInteractor>*, false>(this, ___internal__method);
    }
    // public Oculus.Interaction.MAction`1<TInteractor> get_WhenSelectingInteractorAdded()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Oculus::Interaction::MAction_1<TInteractor>* get_WhenSelectingInteractorAdded() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::get_WhenSelectingInteractorAdded");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WhenSelectingInteractorAdded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::MAction_1<TInteractor>*, false>(this, ___internal__method);
    }
    // public Oculus.Interaction.MAction`1<TInteractor> get_WhenSelectingInteractorRemoved()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Oculus::Interaction::MAction_1<TInteractor>* get_WhenSelectingInteractorRemoved() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::get_WhenSelectingInteractorRemoved");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WhenSelectingInteractorRemoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::MAction_1<TInteractor>*, false>(this, ___internal__method);
    }
    // public Oculus.Interaction.InteractableState get_State()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Oculus::Interaction::InteractableState get_State() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::get_State");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactable_2<TInteractor, TInteractable>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::InteractableState, false>(this, ___internal__method);
    }
    // private System.Void set_State(Oculus.Interaction.InteractableState value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_State(::Oculus::Interaction::InteractableState value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::set_State");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_State", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // static public Oculus.Interaction.InteractableRegistry`2<TInteractor,TInteractable> get_Registry()
    // Offset: 0xFFFFFFFFFFFFFFFF
    static ::Oculus::Interaction::InteractableRegistry_2<TInteractor, TInteractable>* get_Registry() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::get_Registry");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<Interactable_2<TInteractor, TInteractable>*>::get(), "get_Registry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::InteractableRegistry_2<TInteractor, TInteractable>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
    // protected System.Void InteractorAdded(TInteractor interactor)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void InteractorAdded(TInteractor interactor) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::InteractorAdded");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactable_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
    }
    // protected System.Void InteractorRemoved(TInteractor interactor)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void InteractorRemoved(TInteractor interactor) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::InteractorRemoved");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactable_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
    }
    // protected System.Void SelectingInteractorAdded(TInteractor interactor)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void SelectingInteractorAdded(TInteractor interactor) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::SelectingInteractorAdded");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactable_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
    }
    // protected System.Void SelectingInteractorRemoved(TInteractor interactor)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void SelectingInteractorRemoved(TInteractor interactor) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::SelectingInteractorRemoved");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactable_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
    }
    // public Oculus.Interaction.Collections.IEnumerableHashSet`1<TInteractor> get_Interactors()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Oculus::Interaction::Collections::IEnumerableHashSet_1<TInteractor>* get_Interactors() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::get_Interactors");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Interactors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Collections::IEnumerableHashSet_1<TInteractor>*, false>(this, ___internal__method);
    }
    // public Oculus.Interaction.Collections.IEnumerableHashSet`1<TInteractor> get_SelectingInteractors()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Oculus::Interaction::Collections::IEnumerableHashSet_1<TInteractor>* get_SelectingInteractors() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::get_SelectingInteractors");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SelectingInteractors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Collections::IEnumerableHashSet_1<TInteractor>*, false>(this, ___internal__method);
    }
    // public System.Void AddInteractor(TInteractor interactor)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void AddInteractor(TInteractor interactor) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::AddInteractor");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
    }
    // public System.Void RemoveInteractor(TInteractor interactor)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void RemoveInteractor(TInteractor interactor) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::RemoveInteractor");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
    }
    // public System.Void AddSelectingInteractor(TInteractor interactor)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void AddSelectingInteractor(TInteractor interactor) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::AddSelectingInteractor");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSelectingInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
    }
    // public System.Void RemoveSelectingInteractor(TInteractor interactor)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void RemoveSelectingInteractor(TInteractor interactor) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::RemoveSelectingInteractor");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveSelectingInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
    }
    // private System.Void UpdateInteractableState()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void UpdateInteractableState() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::UpdateInteractableState");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateInteractableState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // public System.Boolean CanBeSelectedBy(TInteractor interactor)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool CanBeSelectedBy(TInteractor interactor) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::CanBeSelectedBy");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanBeSelectedBy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor);
    }
    // public System.Boolean HasInteractor(TInteractor interactor)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool HasInteractor(TInteractor interactor) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::HasInteractor");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor);
    }
    // public System.Boolean HasSelectingInteractor(TInteractor interactor)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool HasSelectingInteractor(TInteractor interactor) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::HasSelectingInteractor");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasSelectingInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor);
    }
    // public System.Void Enable()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Enable() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::Enable");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactable_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // public System.Void Disable()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Disable() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::Disable");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactable_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // public System.Void RemoveInteractorByIdentifier(System.Int32 id)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void RemoveInteractorByIdentifier(int id) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::RemoveInteractorByIdentifier");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactable_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id);
    }
    // protected System.Void Awake()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Awake() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::Awake");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactable_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // protected System.Void Start()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Start() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::Start");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactable_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // protected System.Void OnEnable()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void OnEnable() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::OnEnable");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactable_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // protected System.Void OnDisable()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void OnDisable() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::OnDisable");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactable_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // protected System.Void SetRegistry(Oculus.Interaction.InteractableRegistry`2<TInteractor,TInteractable> registry)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void SetRegistry(::Oculus::Interaction::InteractableRegistry_2<TInteractor, TInteractable>* registry) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::SetRegistry");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactable_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, registry);
    }
    // public System.Void InjectOptionalInteractorFilters(System.Collections.Generic.List`1<Oculus.Interaction.IGameObjectFilter> interactorFilters)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void InjectOptionalInteractorFilters(::System::Collections::Generic::List_1<::Oculus::Interaction::IGameObjectFilter*>* interactorFilters) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::InjectOptionalInteractorFilters");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalInteractorFilters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactorFilters)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactorFilters);
    }
    // public System.Void InjectOptionalData(System.Object data)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void InjectOptionalData(::Il2CppObject* data) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::InjectOptionalData");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
    }
    // protected System.Void .ctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Interactable_2<TInteractor, TInteractable>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Interactable_2<TInteractor, TInteractable>*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    static void _cctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactable_2::.cctor");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<Interactable_2<TInteractor, TInteractable>*>::get(), ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
  }; // Oculus.Interaction.Interactable`2
  // Could not write size check! Type: Oculus.Interaction.Interactable`2 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
