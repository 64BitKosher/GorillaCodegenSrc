// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: Oculus.Interaction.IInteractor
#include "Oculus/Interaction/IInteractor.hpp"
// Including type: System.UInt64
#include "System/UInt64.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction
namespace Oculus::Interaction {
  // Skipping declaration: <>c because it is already included!
  // Forward declaring type: Interactable`2<TInteractor, TInteractable>
  template<typename TInteractor, typename TInteractable>
  class Interactable_2;
  // Forward declaring type: IActiveState
  class IActiveState;
  // Forward declaring type: IGameObjectFilter
  class IGameObjectFilter;
  // Forward declaring type: ISelector
  class ISelector;
  // Forward declaring type: MultiAction`1<T>
  template<typename T>
  class MultiAction_1;
  // Forward declaring type: UniqueIdentifier
  class UniqueIdentifier;
  // Forward declaring type: MAction`1<T>
  template<typename T>
  class MAction_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Object because it is already included!
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: IComparer`1<T>
  template<typename T>
  class IComparer_1;
  // Forward declaring type: Queue`1<T>
  template<typename T>
  class Queue_1;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`1<TResult>
  template<typename TResult>
  class Func_1;
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: Action
  class Action;
  // Forward declaring type: Converter`2<TInput, TOutput>
  template<typename TInput, typename TOutput>
  class Converter_2;
}
// Completed forward declares
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Forward declaring type: Interactor`2<TInteractor, TInteractable>
  template<typename TInteractor, typename TInteractable>
  class Interactor_2;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::Oculus::Interaction::Interactor_2, "Oculus.Interaction", "Interactor`2");
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // WARNING Size may be invalid!
  // Autogenerated type: Oculus.Interaction.Interactor`2
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename TInteractor, typename TInteractable>
  class Interactor_2 : public ::UnityEngine::MonoBehaviour/*, public ::Oculus::Interaction::IInteractor*/ {
    public:
    // Nested type: ::Oculus::Interaction::Interactor_2::$$c<TInteractor, TInteractable>
    class $$c;
    // WARNING Size may be invalid!
    // Autogenerated type: Oculus.Interaction.Interactor`2/<>c
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    class $$c : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = Interactor_2<TInteractor, TInteractable>*;
      static constexpr std::string_view NESTED_NAME = "<>c";
      static constexpr bool IS_VALUE_TYPE = false;
      // Autogenerated static field getter
      // Get static field: static public readonly Oculus.Interaction.Interactor`2/<>c<TInteractor,TInteractable> <>9
      static typename ::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>::$$c* _get_$$9() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::$$c::_get_$$9");
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<typename ::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>::$$c*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename Interactor_2<TInteractor, TInteractable>::$$c*>::get(), "<>9")));
      }
      // Autogenerated static field setter
      // Set static field: static public readonly Oculus.Interaction.Interactor`2/<>c<TInteractor,TInteractable> <>9
      static void _set_$$9(typename ::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>::$$c* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::$$c::_set_$$9");
        THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename Interactor_2<TInteractor, TInteractable>::$$c*>::get(), "<>9", value)));
      }
      // Autogenerated static field getter
      // Get static field: static public System.Converter`2<UnityEngine.Object,Oculus.Interaction.IGameObjectFilter> <>9__100_0
      static ::System::Converter_2<::UnityEngine::Object*, ::Oculus::Interaction::IGameObjectFilter*>* _get_$$9__100_0() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::$$c::_get_$$9__100_0");
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Converter_2<::UnityEngine::Object*, ::Oculus::Interaction::IGameObjectFilter*>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename Interactor_2<TInteractor, TInteractable>::$$c*>::get(), "<>9__100_0")));
      }
      // Autogenerated static field setter
      // Set static field: static public System.Converter`2<UnityEngine.Object,Oculus.Interaction.IGameObjectFilter> <>9__100_0
      static void _set_$$9__100_0(::System::Converter_2<::UnityEngine::Object*, ::Oculus::Interaction::IGameObjectFilter*>* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::$$c::_set_$$9__100_0");
        THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename Interactor_2<TInteractor, TInteractable>::$$c*>::get(), "<>9__100_0", value)));
      }
      // Autogenerated static field getter
      // Get static field: static public System.Converter`2<Oculus.Interaction.IGameObjectFilter,UnityEngine.Object> <>9__141_0
      static ::System::Converter_2<::Oculus::Interaction::IGameObjectFilter*, ::UnityEngine::Object*>* _get_$$9__141_0() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::$$c::_get_$$9__141_0");
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Converter_2<::Oculus::Interaction::IGameObjectFilter*, ::UnityEngine::Object*>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename Interactor_2<TInteractor, TInteractable>::$$c*>::get(), "<>9__141_0")));
      }
      // Autogenerated static field setter
      // Set static field: static public System.Converter`2<Oculus.Interaction.IGameObjectFilter,UnityEngine.Object> <>9__141_0
      static void _set_$$9__141_0(::System::Converter_2<::Oculus::Interaction::IGameObjectFilter*, ::UnityEngine::Object*>* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::$$c::_set_$$9__141_0");
        THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename Interactor_2<TInteractor, TInteractable>::$$c*>::get(), "<>9__141_0", value)));
      }
      // Autogenerated static field getter
      // Get static field: static public System.Action`1<Oculus.Interaction.InteractorStateChangeArgs> <>9__144_0
      static ::System::Action_1<::Oculus::Interaction::InteractorStateChangeArgs>* _get_$$9__144_0() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::$$c::_get_$$9__144_0");
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::Oculus::Interaction::InteractorStateChangeArgs>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename Interactor_2<TInteractor, TInteractable>::$$c*>::get(), "<>9__144_0")));
      }
      // Autogenerated static field setter
      // Set static field: static public System.Action`1<Oculus.Interaction.InteractorStateChangeArgs> <>9__144_0
      static void _set_$$9__144_0(::System::Action_1<::Oculus::Interaction::InteractorStateChangeArgs>* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::$$c::_set_$$9__144_0");
        THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename Interactor_2<TInteractor, TInteractable>::$$c*>::get(), "<>9__144_0", value)));
      }
      // Autogenerated static field getter
      // Get static field: static public System.Action <>9__144_1
      static ::System::Action* _get_$$9__144_1() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::$$c::_get_$$9__144_1");
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename Interactor_2<TInteractor, TInteractable>::$$c*>::get(), "<>9__144_1")));
      }
      // Autogenerated static field setter
      // Set static field: static public System.Action <>9__144_1
      static void _set_$$9__144_1(::System::Action* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::$$c::_set_$$9__144_1");
        THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename Interactor_2<TInteractor, TInteractable>::$$c*>::get(), "<>9__144_1", value)));
      }
      // Autogenerated static field getter
      // Get static field: static public System.Action <>9__144_2
      static ::System::Action* _get_$$9__144_2() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::$$c::_get_$$9__144_2");
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename Interactor_2<TInteractor, TInteractable>::$$c*>::get(), "<>9__144_2")));
      }
      // Autogenerated static field setter
      // Set static field: static public System.Action <>9__144_2
      static void _set_$$9__144_2(::System::Action* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::$$c::_set_$$9__144_2");
        THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename Interactor_2<TInteractor, TInteractable>::$$c*>::get(), "<>9__144_2", value)));
      }
      // Autogenerated static field getter
      // Get static field: static public System.Action <>9__144_3
      static ::System::Action* _get_$$9__144_3() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::$$c::_get_$$9__144_3");
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename Interactor_2<TInteractor, TInteractable>::$$c*>::get(), "<>9__144_3")));
      }
      // Autogenerated static field setter
      // Set static field: static public System.Action <>9__144_3
      static void _set_$$9__144_3(::System::Action* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::$$c::_set_$$9__144_3");
        THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename Interactor_2<TInteractor, TInteractable>::$$c*>::get(), "<>9__144_3", value)));
      }
      // static private System.Void .cctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      static void _cctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::$$c::.cctor");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename Interactor_2<TInteractor, TInteractable>::$$c*>::get(), ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename Interactor_2<TInteractor, TInteractable>::$$c* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::$$c::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename Interactor_2<TInteractor, TInteractable>::$$c*, creationType>()));
      }
      // Oculus.Interaction.IGameObjectFilter <Awake>b__100_0(UnityEngine.Object mono)
      // Offset: 0xFFFFFFFFFFFFFFFF
      ::Oculus::Interaction::IGameObjectFilter* $Awake$b__100_0(::UnityEngine::Object* mono) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::$$c::<Awake>b__100_0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__100_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mono)})));
        return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::IGameObjectFilter*, false>(this, ___internal__method, mono);
      }
      // UnityEngine.Object <InjectOptionalInteractableFilters>b__141_0(Oculus.Interaction.IGameObjectFilter interactableFilter)
      // Offset: 0xFFFFFFFFFFFFFFFF
      ::UnityEngine::Object* $InjectOptionalInteractableFilters$b__141_0(::Oculus::Interaction::IGameObjectFilter* interactableFilter) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::$$c::<InjectOptionalInteractableFilters>b__141_0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InjectOptionalInteractableFilters>b__141_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactableFilter)})));
        return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(this, ___internal__method, interactableFilter);
      }
      // System.Void <.ctor>b__144_0(Oculus.Interaction.InteractorStateChangeArgs <p0>)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $_ctor$b__144_0(::Oculus::Interaction::InteractorStateChangeArgs $p0$) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::$$c::<.ctor>b__144_0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__144_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, $p0$);
      }
      // System.Void <.ctor>b__144_1()
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $_ctor$b__144_1() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::$$c::<.ctor>b__144_1");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__144_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
      }
      // System.Void <.ctor>b__144_2()
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $_ctor$b__144_2() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::$$c::<.ctor>b__144_2");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__144_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
      }
      // System.Void <.ctor>b__144_3()
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $_ctor$b__144_3() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::$$c::<.ctor>b__144_3");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__144_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
      }
    }; // Oculus.Interaction.Interactor`2/<>c
    // Could not write size check! Type: Oculus.Interaction.Interactor`2/<>c is generic, or has no fields that are valid for size checks!
    public:
    // protected System.UInt64 _nativeId
    // Size: 0x8
    // Offset: 0x0
    uint64_t nativeId;
    // Field size check
    static_assert(sizeof(uint64_t) == 0x8);
    // private UnityEngine.Object _activeState
    // Size: 0x8
    // Offset: 0x0
    ::UnityEngine::Object* activeState;
    // Field size check
    static_assert(sizeof(::UnityEngine::Object*) == 0x8);
    // private Oculus.Interaction.IActiveState ActiveState
    // Size: 0x8
    // Offset: 0x0
    ::Oculus::Interaction::IActiveState* ActiveState;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::IActiveState*) == 0x8);
    // private System.Collections.Generic.List`1<UnityEngine.Object> _interactableFilters
    // Size: 0x8
    // Offset: 0x0
    ::System::Collections::Generic::List_1<::UnityEngine::Object*>* interactableFilters;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::Object*>*) == 0x8);
    // private System.Collections.Generic.List`1<Oculus.Interaction.IGameObjectFilter> InteractableFilters
    // Size: 0x8
    // Offset: 0x0
    ::System::Collections::Generic::List_1<::Oculus::Interaction::IGameObjectFilter*>* InteractableFilters;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::Oculus::Interaction::IGameObjectFilter*>*) == 0x8);
    // private UnityEngine.Object _candidateTiebreaker
    // Size: 0x8
    // Offset: 0x0
    ::UnityEngine::Object* candidateTiebreaker;
    // Field size check
    static_assert(sizeof(::UnityEngine::Object*) == 0x8);
    // private System.Collections.Generic.IComparer`1<TInteractable> CandidateTiebreaker
    // Size: 0x8
    // Offset: 0x0
    ::System::Collections::Generic::IComparer_1<TInteractable>* CandidateTiebreaker;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::IComparer_1<TInteractable>*) == 0x8);
    // private System.Func`1<TInteractable> _computeCandidateOverride
    // Size: 0x8
    // Offset: 0x0
    ::System::Func_1<TInteractable>* computeCandidateOverride;
    // Field size check
    static_assert(sizeof(::System::Func_1<TInteractable>*) == 0x8);
    // private System.Boolean _clearComputeCandidateOverrideOnSelect
    // Size: 0x1
    // Offset: 0x0
    bool clearComputeCandidateOverrideOnSelect;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Func`1<System.Boolean> _computeShouldSelectOverride
    // Size: 0x8
    // Offset: 0x0
    ::System::Func_1<bool>* computeShouldSelectOverride;
    // Field size check
    static_assert(sizeof(::System::Func_1<bool>*) == 0x8);
    // private System.Boolean _clearComputeShouldSelectOverrideOnSelect
    // Size: 0x1
    // Offset: 0x0
    bool clearComputeShouldSelectOverrideOnSelect;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Func`1<System.Boolean> _computeShouldUnselectOverride
    // Size: 0x8
    // Offset: 0x0
    ::System::Func_1<bool>* computeShouldUnselectOverride;
    // Field size check
    static_assert(sizeof(::System::Func_1<bool>*) == 0x8);
    // private System.Boolean _clearComputeShouldUnselectOverrideOnUnselect
    // Size: 0x1
    // Offset: 0x0
    bool clearComputeShouldUnselectOverrideOnUnselect;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private Oculus.Interaction.InteractorState _state
    // Size: 0x4
    // Offset: 0x0
    ::Oculus::Interaction::InteractorState state;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::InteractorState) == 0x4);
    // private System.Action`1<Oculus.Interaction.InteractorStateChangeArgs> WhenStateChanged
    // Size: 0x8
    // Offset: 0x0
    ::System::Action_1<::Oculus::Interaction::InteractorStateChangeArgs>* WhenStateChanged;
    // Field size check
    static_assert(sizeof(::System::Action_1<::Oculus::Interaction::InteractorStateChangeArgs>*) == 0x8);
    // private System.Action WhenPreprocessed
    // Size: 0x8
    // Offset: 0x0
    ::System::Action* WhenPreprocessed;
    // Field size check
    static_assert(sizeof(::System::Action*) == 0x8);
    // private System.Action WhenProcessed
    // Size: 0x8
    // Offset: 0x0
    ::System::Action* WhenProcessed;
    // Field size check
    static_assert(sizeof(::System::Action*) == 0x8);
    // private System.Action WhenPostprocessed
    // Size: 0x8
    // Offset: 0x0
    ::System::Action* WhenPostprocessed;
    // Field size check
    static_assert(sizeof(::System::Action*) == 0x8);
    // private Oculus.Interaction.ISelector _selector
    // Size: 0x8
    // Offset: 0x0
    ::Oculus::Interaction::ISelector* selector;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::ISelector*) == 0x8);
    // private System.Int32 _maxIterationsPerFrame
    // Size: 0x4
    // Offset: 0x0
    int maxIterationsPerFrame;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Collections.Generic.Queue`1<System.Boolean> _selectorQueue
    // Size: 0x8
    // Offset: 0x0
    ::System::Collections::Generic::Queue_1<bool>* selectorQueue;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Queue_1<bool>*) == 0x8);
    // protected TInteractable _candidate
    // Size: 0xFFFFFFFF
    // Offset: 0x0
    TInteractable candidate;
    // protected TInteractable _interactable
    // Size: 0xFFFFFFFF
    // Offset: 0x0
    TInteractable interactable;
    // protected TInteractable _selectedInteractable
    // Size: 0xFFFFFFFF
    // Offset: 0x0
    TInteractable selectedInteractable;
    // private Oculus.Interaction.MultiAction`1<TInteractable> _whenInteractableSet
    // Size: 0x8
    // Offset: 0x0
    ::Oculus::Interaction::MultiAction_1<TInteractable>* whenInteractableSet;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::MultiAction_1<TInteractable>*) == 0x8);
    // private Oculus.Interaction.MultiAction`1<TInteractable> _whenInteractableUnset
    // Size: 0x8
    // Offset: 0x0
    ::Oculus::Interaction::MultiAction_1<TInteractable>* whenInteractableUnset;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::MultiAction_1<TInteractable>*) == 0x8);
    // private Oculus.Interaction.MultiAction`1<TInteractable> _whenInteractableSelected
    // Size: 0x8
    // Offset: 0x0
    ::Oculus::Interaction::MultiAction_1<TInteractable>* whenInteractableSelected;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::MultiAction_1<TInteractable>*) == 0x8);
    // private Oculus.Interaction.MultiAction`1<TInteractable> _whenInteractableUnselected
    // Size: 0x8
    // Offset: 0x0
    ::Oculus::Interaction::MultiAction_1<TInteractable>* whenInteractableUnselected;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::MultiAction_1<TInteractable>*) == 0x8);
    // private Oculus.Interaction.UniqueIdentifier _identifier
    // Size: 0x8
    // Offset: 0x0
    ::Oculus::Interaction::UniqueIdentifier* identifier;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::UniqueIdentifier*) == 0x8);
    // private UnityEngine.Object _data
    // Size: 0x8
    // Offset: 0x0
    ::UnityEngine::Object* data;
    // Field size check
    static_assert(sizeof(::UnityEngine::Object*) == 0x8);
    // private System.Object <Data>k__BackingField
    // Size: 0x8
    // Offset: 0x0
    ::Il2CppObject* Data;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    // protected System.Boolean _started
    // Size: 0x1
    // Offset: 0x0
    bool started;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean <IsRootDriver>k__BackingField
    // Size: 0x1
    // Offset: 0x0
    bool IsRootDriver;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating interface conversion operator: operator ::Oculus::Interaction::IInteractor
    operator ::Oculus::Interaction::IInteractor() noexcept {
      return *reinterpret_cast<::Oculus::Interaction::IInteractor*>(this);
    }
    // Autogenerated static field getter
    // Get static field: static private System.UInt64 DefaultNativeId
    static uint64_t _get_DefaultNativeId() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::_get_DefaultNativeId");
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<uint64_t>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<Interactor_2<TInteractor, TInteractable>*>::get(), "DefaultNativeId")));
    }
    // Autogenerated static field setter
    // Set static field: static private System.UInt64 DefaultNativeId
    static void _set_DefaultNativeId(uint64_t value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::_set_DefaultNativeId");
      THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<Interactor_2<TInteractor, TInteractable>*>::get(), "DefaultNativeId", value)));
    }
    // Autogenerated instance field getter
    // Get instance field: protected System.UInt64 _nativeId
    [[deprecated("Use field access instead!")]] uint64_t& dyn__nativeId() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::dyn__nativeId");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nativeId"))->offset;
      return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private UnityEngine.Object _activeState
    [[deprecated("Use field access instead!")]] ::UnityEngine::Object*& dyn__activeState() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::dyn__activeState");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeState"))->offset;
      return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private Oculus.Interaction.IActiveState ActiveState
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::IActiveState*& dyn_ActiveState() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::dyn_ActiveState");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ActiveState"))->offset;
      return *reinterpret_cast<::Oculus::Interaction::IActiveState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Collections.Generic.List`1<UnityEngine.Object> _interactableFilters
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Object*>*& dyn__interactableFilters() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::dyn__interactableFilters");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_interactableFilters"))->offset;
      return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Object*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Collections.Generic.List`1<Oculus.Interaction.IGameObjectFilter> InteractableFilters
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Oculus::Interaction::IGameObjectFilter*>*& dyn_InteractableFilters() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::dyn_InteractableFilters");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InteractableFilters"))->offset;
      return *reinterpret_cast<::System::Collections::Generic::List_1<::Oculus::Interaction::IGameObjectFilter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private UnityEngine.Object _candidateTiebreaker
    [[deprecated("Use field access instead!")]] ::UnityEngine::Object*& dyn__candidateTiebreaker() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::dyn__candidateTiebreaker");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_candidateTiebreaker"))->offset;
      return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Collections.Generic.IComparer`1<TInteractable> CandidateTiebreaker
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::IComparer_1<TInteractable>*& dyn_CandidateTiebreaker() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::dyn_CandidateTiebreaker");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CandidateTiebreaker"))->offset;
      return *reinterpret_cast<::System::Collections::Generic::IComparer_1<TInteractable>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Func`1<TInteractable> _computeCandidateOverride
    [[deprecated("Use field access instead!")]] ::System::Func_1<TInteractable>*& dyn__computeCandidateOverride() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::dyn__computeCandidateOverride");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_computeCandidateOverride"))->offset;
      return *reinterpret_cast<::System::Func_1<TInteractable>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Boolean _clearComputeCandidateOverrideOnSelect
    [[deprecated("Use field access instead!")]] bool& dyn__clearComputeCandidateOverrideOnSelect() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::dyn__clearComputeCandidateOverrideOnSelect");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clearComputeCandidateOverrideOnSelect"))->offset;
      return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Func`1<System.Boolean> _computeShouldSelectOverride
    [[deprecated("Use field access instead!")]] ::System::Func_1<bool>*& dyn__computeShouldSelectOverride() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::dyn__computeShouldSelectOverride");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_computeShouldSelectOverride"))->offset;
      return *reinterpret_cast<::System::Func_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Boolean _clearComputeShouldSelectOverrideOnSelect
    [[deprecated("Use field access instead!")]] bool& dyn__clearComputeShouldSelectOverrideOnSelect() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::dyn__clearComputeShouldSelectOverrideOnSelect");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clearComputeShouldSelectOverrideOnSelect"))->offset;
      return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Func`1<System.Boolean> _computeShouldUnselectOverride
    [[deprecated("Use field access instead!")]] ::System::Func_1<bool>*& dyn__computeShouldUnselectOverride() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::dyn__computeShouldUnselectOverride");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_computeShouldUnselectOverride"))->offset;
      return *reinterpret_cast<::System::Func_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Boolean _clearComputeShouldUnselectOverrideOnUnselect
    [[deprecated("Use field access instead!")]] bool& dyn__clearComputeShouldUnselectOverrideOnUnselect() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::dyn__clearComputeShouldUnselectOverrideOnUnselect");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clearComputeShouldUnselectOverrideOnUnselect"))->offset;
      return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private Oculus.Interaction.InteractorState _state
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::InteractorState& dyn__state() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::dyn__state");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_state"))->offset;
      return *reinterpret_cast<::Oculus::Interaction::InteractorState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Action`1<Oculus.Interaction.InteractorStateChangeArgs> WhenStateChanged
    [[deprecated("Use field access instead!")]] ::System::Action_1<::Oculus::Interaction::InteractorStateChangeArgs>*& dyn_WhenStateChanged() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::dyn_WhenStateChanged");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenStateChanged"))->offset;
      return *reinterpret_cast<::System::Action_1<::Oculus::Interaction::InteractorStateChangeArgs>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Action WhenPreprocessed
    [[deprecated("Use field access instead!")]] ::System::Action*& dyn_WhenPreprocessed() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::dyn_WhenPreprocessed");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenPreprocessed"))->offset;
      return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Action WhenProcessed
    [[deprecated("Use field access instead!")]] ::System::Action*& dyn_WhenProcessed() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::dyn_WhenProcessed");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenProcessed"))->offset;
      return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Action WhenPostprocessed
    [[deprecated("Use field access instead!")]] ::System::Action*& dyn_WhenPostprocessed() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::dyn_WhenPostprocessed");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenPostprocessed"))->offset;
      return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private Oculus.Interaction.ISelector _selector
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::ISelector*& dyn__selector() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::dyn__selector");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selector"))->offset;
      return *reinterpret_cast<::Oculus::Interaction::ISelector**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Int32 _maxIterationsPerFrame
    [[deprecated("Use field access instead!")]] int& dyn__maxIterationsPerFrame() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::dyn__maxIterationsPerFrame");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxIterationsPerFrame"))->offset;
      return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Collections.Generic.Queue`1<System.Boolean> _selectorQueue
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<bool>*& dyn__selectorQueue() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::dyn__selectorQueue");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectorQueue"))->offset;
      return *reinterpret_cast<::System::Collections::Generic::Queue_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: protected TInteractable _candidate
    [[deprecated("Use field access instead!")]] TInteractable& dyn__candidate() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::dyn__candidate");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_candidate"))->offset;
      return *reinterpret_cast<TInteractable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: protected TInteractable _interactable
    [[deprecated("Use field access instead!")]] TInteractable& dyn__interactable() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::dyn__interactable");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_interactable"))->offset;
      return *reinterpret_cast<TInteractable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: protected TInteractable _selectedInteractable
    [[deprecated("Use field access instead!")]] TInteractable& dyn__selectedInteractable() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::dyn__selectedInteractable");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedInteractable"))->offset;
      return *reinterpret_cast<TInteractable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private Oculus.Interaction.MultiAction`1<TInteractable> _whenInteractableSet
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::MultiAction_1<TInteractable>*& dyn__whenInteractableSet() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::dyn__whenInteractableSet");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenInteractableSet"))->offset;
      return *reinterpret_cast<::Oculus::Interaction::MultiAction_1<TInteractable>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private Oculus.Interaction.MultiAction`1<TInteractable> _whenInteractableUnset
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::MultiAction_1<TInteractable>*& dyn__whenInteractableUnset() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::dyn__whenInteractableUnset");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenInteractableUnset"))->offset;
      return *reinterpret_cast<::Oculus::Interaction::MultiAction_1<TInteractable>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private Oculus.Interaction.MultiAction`1<TInteractable> _whenInteractableSelected
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::MultiAction_1<TInteractable>*& dyn__whenInteractableSelected() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::dyn__whenInteractableSelected");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenInteractableSelected"))->offset;
      return *reinterpret_cast<::Oculus::Interaction::MultiAction_1<TInteractable>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private Oculus.Interaction.MultiAction`1<TInteractable> _whenInteractableUnselected
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::MultiAction_1<TInteractable>*& dyn__whenInteractableUnselected() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::dyn__whenInteractableUnselected");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenInteractableUnselected"))->offset;
      return *reinterpret_cast<::Oculus::Interaction::MultiAction_1<TInteractable>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private Oculus.Interaction.UniqueIdentifier _identifier
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::UniqueIdentifier*& dyn__identifier() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::dyn__identifier");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_identifier"))->offset;
      return *reinterpret_cast<::Oculus::Interaction::UniqueIdentifier**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private UnityEngine.Object _data
    [[deprecated("Use field access instead!")]] ::UnityEngine::Object*& dyn__data() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::dyn__data");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_data"))->offset;
      return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Object <Data>k__BackingField
    [[deprecated("Use field access instead!")]] ::Il2CppObject*& dyn_$Data$k__BackingField() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::dyn_$Data$k__BackingField");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Data>k__BackingField"))->offset;
      return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: protected System.Boolean _started
    [[deprecated("Use field access instead!")]] bool& dyn__started() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::dyn__started");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
      return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Boolean <IsRootDriver>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$IsRootDriver$k__BackingField() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::dyn_$IsRootDriver$k__BackingField");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsRootDriver>k__BackingField"))->offset;
      return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // protected System.Void DoPreprocess()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void DoPreprocess() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::DoPreprocess");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // protected System.Void DoNormalUpdate()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void DoNormalUpdate() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::DoNormalUpdate");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // protected System.Void DoHoverUpdate()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void DoHoverUpdate() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::DoHoverUpdate");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // protected System.Void DoSelectUpdate()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void DoSelectUpdate() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::DoSelectUpdate");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // protected System.Void DoPostprocess()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void DoPostprocess() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::DoPostprocess");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // public System.Boolean get_ShouldHover()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_ShouldHover() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::get_ShouldHover");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // public System.Boolean get_ShouldUnhover()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_ShouldUnhover() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::get_ShouldUnhover");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // public System.Boolean get_ShouldSelect()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_ShouldSelect() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::get_ShouldSelect");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // public System.Boolean get_ShouldUnselect()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_ShouldUnselect() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::get_ShouldUnselect");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // protected System.Boolean ComputeShouldSelect()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool ComputeShouldSelect() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::ComputeShouldSelect");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // protected System.Boolean ComputeShouldUnselect()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool ComputeShouldUnselect() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::ComputeShouldUnselect");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // public System.Void add_WhenStateChanged(System.Action`1<Oculus.Interaction.InteractorStateChangeArgs> value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void add_WhenStateChanged(::System::Action_1<::Oculus::Interaction::InteractorStateChangeArgs>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::add_WhenStateChanged");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public System.Void remove_WhenStateChanged(System.Action`1<Oculus.Interaction.InteractorStateChangeArgs> value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void remove_WhenStateChanged(::System::Action_1<::Oculus::Interaction::InteractorStateChangeArgs>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::remove_WhenStateChanged");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public System.Void add_WhenPreprocessed(System.Action value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void add_WhenPreprocessed(::System::Action* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::add_WhenPreprocessed");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public System.Void remove_WhenPreprocessed(System.Action value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void remove_WhenPreprocessed(::System::Action* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::remove_WhenPreprocessed");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public System.Void add_WhenProcessed(System.Action value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void add_WhenProcessed(::System::Action* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::add_WhenProcessed");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public System.Void remove_WhenProcessed(System.Action value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void remove_WhenProcessed(::System::Action* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::remove_WhenProcessed");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public System.Void add_WhenPostprocessed(System.Action value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void add_WhenPostprocessed(::System::Action* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::add_WhenPostprocessed");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public System.Void remove_WhenPostprocessed(System.Action value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void remove_WhenPostprocessed(::System::Action* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::remove_WhenPostprocessed");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public System.Int32 get_MaxIterationsPerFrame()
    // Offset: 0xFFFFFFFFFFFFFFFF
    int get_MaxIterationsPerFrame() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::get_MaxIterationsPerFrame");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxIterationsPerFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
    }
    // public System.Void set_MaxIterationsPerFrame(System.Int32 value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_MaxIterationsPerFrame(int value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::set_MaxIterationsPerFrame");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxIterationsPerFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // protected Oculus.Interaction.ISelector get_Selector()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Oculus::Interaction::ISelector* get_Selector() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::get_Selector");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Selector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::ISelector*, false>(this, ___internal__method);
    }
    // protected System.Void set_Selector(Oculus.Interaction.ISelector value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_Selector(::Oculus::Interaction::ISelector* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::set_Selector");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Selector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // private System.Boolean get_QueuedSelect()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_QueuedSelect() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::get_QueuedSelect");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_QueuedSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // private System.Boolean get_QueuedUnselect()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_QueuedUnselect() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::get_QueuedUnselect");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_QueuedUnselect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // public Oculus.Interaction.InteractorState get_State()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Oculus::Interaction::InteractorState get_State() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::get_State");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::InteractorState, false>(this, ___internal__method);
    }
    // private System.Void set_State(Oculus.Interaction.InteractorState value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_State(::Oculus::Interaction::InteractorState value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::set_State");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_State", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public System.Object get_CandidateProperties()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Il2CppObject* get_CandidateProperties() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::get_CandidateProperties");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
    }
    // public TInteractable get_Candidate()
    // Offset: 0xFFFFFFFFFFFFFFFF
    TInteractable get_Candidate() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::get_Candidate");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Candidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<TInteractable, false>(this, ___internal__method);
    }
    // public TInteractable get_Interactable()
    // Offset: 0xFFFFFFFFFFFFFFFF
    TInteractable get_Interactable() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::get_Interactable");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Interactable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<TInteractable, false>(this, ___internal__method);
    }
    // public TInteractable get_SelectedInteractable()
    // Offset: 0xFFFFFFFFFFFFFFFF
    TInteractable get_SelectedInteractable() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::get_SelectedInteractable");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SelectedInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<TInteractable, false>(this, ___internal__method);
    }
    // public System.Boolean get_HasCandidate()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_HasCandidate() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::get_HasCandidate");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // public System.Boolean get_HasInteractable()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_HasInteractable() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::get_HasInteractable");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // public System.Boolean get_HasSelectedInteractable()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_HasSelectedInteractable() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::get_HasSelectedInteractable");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // public Oculus.Interaction.MAction`1<TInteractable> get_WhenInteractableSet()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Oculus::Interaction::MAction_1<TInteractable>* get_WhenInteractableSet() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::get_WhenInteractableSet");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WhenInteractableSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::MAction_1<TInteractable>*, false>(this, ___internal__method);
    }
    // public Oculus.Interaction.MAction`1<TInteractable> get_WhenInteractableUnset()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Oculus::Interaction::MAction_1<TInteractable>* get_WhenInteractableUnset() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::get_WhenInteractableUnset");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WhenInteractableUnset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::MAction_1<TInteractable>*, false>(this, ___internal__method);
    }
    // public Oculus.Interaction.MAction`1<TInteractable> get_WhenInteractableSelected()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Oculus::Interaction::MAction_1<TInteractable>* get_WhenInteractableSelected() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::get_WhenInteractableSelected");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WhenInteractableSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::MAction_1<TInteractable>*, false>(this, ___internal__method);
    }
    // public Oculus.Interaction.MAction`1<TInteractable> get_WhenInteractableUnselected()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Oculus::Interaction::MAction_1<TInteractable>* get_WhenInteractableUnselected() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::get_WhenInteractableUnselected");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WhenInteractableUnselected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::MAction_1<TInteractable>*, false>(this, ___internal__method);
    }
    // protected System.Void InteractableSet(TInteractable interactable)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void InteractableSet(TInteractable interactable) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::InteractableSet");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
    }
    // protected System.Void InteractableUnset(TInteractable interactable)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void InteractableUnset(TInteractable interactable) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::InteractableUnset");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
    }
    // protected System.Void InteractableSelected(TInteractable interactable)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void InteractableSelected(TInteractable interactable) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::InteractableSelected");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
    }
    // protected System.Void InteractableUnselected(TInteractable interactable)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void InteractableUnselected(TInteractable interactable) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::InteractableUnselected");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
    }
    // public System.Int32 get_Identifier()
    // Offset: 0xFFFFFFFFFFFFFFFF
    int get_Identifier() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::get_Identifier");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
    }
    // public System.Object get_Data()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Il2CppObject* get_Data() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::get_Data");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
    }
    // protected System.Void set_Data(System.Object value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_Data(::Il2CppObject* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::set_Data");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // protected System.Void Awake()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Awake() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::Awake");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // protected System.Void Start()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Start() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::Start");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // protected System.Void OnEnable()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void OnEnable() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::OnEnable");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // protected System.Void OnDisable()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void OnDisable() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::OnDisable");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // protected System.Void OnDestroy()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void OnDestroy() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::OnDestroy");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // public System.Void SetComputeCandidateOverride(System.Func`1<TInteractable> computeCandidate, System.Boolean shouldClearOverrideOnSelect)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void SetComputeCandidateOverride(::System::Func_1<TInteractable>* computeCandidate, bool shouldClearOverrideOnSelect) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::SetComputeCandidateOverride");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, computeCandidate, shouldClearOverrideOnSelect);
    }
    // public System.Void ClearComputeCandidateOverride()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ClearComputeCandidateOverride() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::ClearComputeCandidateOverride");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // public System.Void SetComputeShouldSelectOverride(System.Func`1<System.Boolean> computeShouldSelect, System.Boolean clearOverrideOnSelect)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void SetComputeShouldSelectOverride(::System::Func_1<bool>* computeShouldSelect, bool clearOverrideOnSelect) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::SetComputeShouldSelectOverride");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, computeShouldSelect, clearOverrideOnSelect);
    }
    // public System.Void ClearComputeShouldSelectOverride()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ClearComputeShouldSelectOverride() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::ClearComputeShouldSelectOverride");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // public System.Void SetComputeShouldUnselectOverride(System.Func`1<System.Boolean> computeShouldUnselect, System.Boolean clearOverrideOnUnselect)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void SetComputeShouldUnselectOverride(::System::Func_1<bool>* computeShouldUnselect, bool clearOverrideOnUnselect) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::SetComputeShouldUnselectOverride");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, computeShouldUnselect, clearOverrideOnUnselect);
    }
    // public System.Void ClearComputeShouldUnselectOverride()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ClearComputeShouldUnselectOverride() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::ClearComputeShouldUnselectOverride");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // public System.Void Preprocess()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Preprocess() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::Preprocess");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // public System.Void Process()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Process() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::Process");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // public System.Void Postprocess()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Postprocess() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::Postprocess");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // public System.Void ProcessCandidate()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ProcessCandidate() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::ProcessCandidate");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // public System.Void InteractableChangesUpdate()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void InteractableChangesUpdate() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::InteractableChangesUpdate");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InteractableChangesUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // public System.Void Hover()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Hover() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::Hover");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // public System.Void Unhover()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Unhover() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::Unhover");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // public System.Void Select()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Select() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::Select");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // public System.Void Unselect()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Unselect() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::Unselect");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // protected TInteractable ComputeCandidate()
    // Offset: 0xFFFFFFFFFFFFFFFF
    TInteractable ComputeCandidate() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::ComputeCandidate");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<TInteractable, false>(this, ___internal__method);
    }
    // protected System.Int32 ComputeCandidateTiebreaker(TInteractable a, TInteractable b)
    // Offset: 0xFFFFFFFFFFFFFFFF
    int ComputeCandidateTiebreaker(TInteractable a, TInteractable b) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::ComputeCandidateTiebreaker");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, a, b);
    }
    // public System.Boolean CanSelect(TInteractable interactable)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool CanSelect(TInteractable interactable) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::CanSelect");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
    }
    // private System.Void SetInteractable(TInteractable interactable)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void SetInteractable(TInteractable interactable) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::SetInteractable");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
    }
    // private System.Void UnsetInteractable()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void UnsetInteractable() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::UnsetInteractable");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnsetInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // private System.Void SelectInteractable(TInteractable interactable)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void SelectInteractable(TInteractable interactable) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::SelectInteractable");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
    }
    // private System.Void UnselectInteractable()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void UnselectInteractable() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::UnselectInteractable");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnselectInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // public System.Void Enable()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Enable() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::Enable");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // public System.Void Disable()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Disable() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::Disable");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // protected System.Void HandleEnabled()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void HandleEnabled() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::HandleEnabled");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // protected System.Void HandleDisabled()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void HandleDisabled() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::HandleDisabled");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // protected System.Void HandleSelected()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void HandleSelected() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::HandleSelected");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // protected System.Void HandleUnselected()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void HandleUnselected() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::HandleUnselected");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // private System.Boolean UpdateActiveState()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool UpdateActiveState() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::UpdateActiveState");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateActiveState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // public System.Boolean get_IsRootDriver()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_IsRootDriver() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::get_IsRootDriver");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // public System.Void set_IsRootDriver(System.Boolean value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_IsRootDriver(bool value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::set_IsRootDriver");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // protected System.Void Update()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Update() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::Update");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // public System.Void Drive()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Drive() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::Drive");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // public System.Void InjectOptionalActiveState(Oculus.Interaction.IActiveState activeState)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void InjectOptionalActiveState(::Oculus::Interaction::IActiveState* activeState) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::InjectOptionalActiveState");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalActiveState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(activeState)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, activeState);
    }
    // public System.Void InjectOptionalInteractableFilters(System.Collections.Generic.List`1<Oculus.Interaction.IGameObjectFilter> interactableFilters)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void InjectOptionalInteractableFilters(::System::Collections::Generic::List_1<::Oculus::Interaction::IGameObjectFilter*>* interactableFilters) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::InjectOptionalInteractableFilters");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalInteractableFilters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactableFilters)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactableFilters);
    }
    // public System.Void InjectOptionalCandidateTiebreaker(System.Collections.Generic.IComparer`1<TInteractable> candidateTiebreaker)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void InjectOptionalCandidateTiebreaker(::System::Collections::Generic::IComparer_1<TInteractable>* candidateTiebreaker) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::InjectOptionalCandidateTiebreaker");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalCandidateTiebreaker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(candidateTiebreaker)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, candidateTiebreaker);
    }
    // public System.Void InjectOptionalData(System.Object data)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void InjectOptionalData(::Il2CppObject* data) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::InjectOptionalData");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
    }
    // protected System.Void .ctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Interactor_2<TInteractor, TInteractable>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Interactor_2::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Interactor_2<TInteractor, TInteractable>*, creationType>()));
    }
  }; // Oculus.Interaction.Interactor`2
  // Could not write size check! Type: Oculus.Interaction.Interactor`2 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
