// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.TwoGrabPlaneTransformer
#include "Oculus/Interaction/TwoGrabPlaneTransformer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction
namespace Oculus::Interaction {
  // Forward declaring type: FloatConstraint
  class FloatConstraint;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::TwoGrabPlaneTransformer::TwoGrabPlaneConstraints);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::TwoGrabPlaneTransformer::TwoGrabPlaneConstraints*, "Oculus.Interaction", "TwoGrabPlaneTransformer/TwoGrabPlaneConstraints");
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.TwoGrabPlaneTransformer/TwoGrabPlaneConstraints
  // [TokenAttribute] Offset: FFFFFFFF
  class TwoGrabPlaneTransformer::TwoGrabPlaneConstraints : public ::Il2CppObject {
    public:
    public:
    // public Oculus.Interaction.FloatConstraint MinScale
    // Size: 0x8
    // Offset: 0x10
    ::Oculus::Interaction::FloatConstraint* MinScale;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::FloatConstraint*) == 0x8);
    // public Oculus.Interaction.FloatConstraint MaxScale
    // Size: 0x8
    // Offset: 0x18
    ::Oculus::Interaction::FloatConstraint* MaxScale;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::FloatConstraint*) == 0x8);
    // public Oculus.Interaction.FloatConstraint MinY
    // Size: 0x8
    // Offset: 0x20
    ::Oculus::Interaction::FloatConstraint* MinY;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::FloatConstraint*) == 0x8);
    // public Oculus.Interaction.FloatConstraint MaxY
    // Size: 0x8
    // Offset: 0x28
    ::Oculus::Interaction::FloatConstraint* MaxY;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::FloatConstraint*) == 0x8);
    public:
    // Get instance field reference: public Oculus.Interaction.FloatConstraint MinScale
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::FloatConstraint*& dyn_MinScale();
    // Get instance field reference: public Oculus.Interaction.FloatConstraint MaxScale
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::FloatConstraint*& dyn_MaxScale();
    // Get instance field reference: public Oculus.Interaction.FloatConstraint MinY
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::FloatConstraint*& dyn_MinY();
    // Get instance field reference: public Oculus.Interaction.FloatConstraint MaxY
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::FloatConstraint*& dyn_MaxY();
    // public System.Void .ctor()
    // Offset: 0x47A77B8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TwoGrabPlaneTransformer::TwoGrabPlaneConstraints* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabPlaneTransformer::TwoGrabPlaneConstraints::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TwoGrabPlaneTransformer::TwoGrabPlaneConstraints*, creationType>()));
    }
  }; // Oculus.Interaction.TwoGrabPlaneTransformer/TwoGrabPlaneConstraints
  #pragma pack(pop)
  static check_size<sizeof(TwoGrabPlaneTransformer::TwoGrabPlaneConstraints), 40 + sizeof(::Oculus::Interaction::FloatConstraint*)> __Oculus_Interaction_TwoGrabPlaneTransformer_TwoGrabPlaneConstraintsSizeCheck;
  static_assert(sizeof(TwoGrabPlaneTransformer::TwoGrabPlaneConstraints) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::TwoGrabPlaneTransformer::TwoGrabPlaneConstraints::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
