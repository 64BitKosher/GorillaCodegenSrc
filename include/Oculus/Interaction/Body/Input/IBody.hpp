// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction::Body::Input
namespace Oculus::Interaction::Body::Input {
  // Forward declaring type: ISkeletonMapping
  class ISkeletonMapping;
  // Forward declaring type: BodyJointId
  struct BodyJointId;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Pose
  struct Pose;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.Body.Input
namespace Oculus::Interaction::Body::Input {
  // Forward declaring type: IBody
  class IBody;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::Body::Input::IBody);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::Body::Input::IBody*, "Oculus.Interaction.Body.Input", "IBody");
// Type namespace: Oculus.Interaction.Body.Input
namespace Oculus::Interaction::Body::Input {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.Body.Input.IBody
  // [TokenAttribute] Offset: FFFFFFFF
  class IBody {
    public:
    // public Oculus.Interaction.Body.Input.ISkeletonMapping get_SkeletonMapping()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Oculus::Interaction::Body::Input::ISkeletonMapping* get_SkeletonMapping();
    // public System.Boolean get_IsConnected()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_IsConnected();
    // public System.Boolean get_IsHighConfidence()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_IsHighConfidence();
    // public System.Boolean get_IsTrackedDataValid()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_IsTrackedDataValid();
    // public System.Single get_Scale()
    // Offset: 0xFFFFFFFFFFFFFFFF
    float get_Scale();
    // public System.Boolean GetRootPose(out UnityEngine.Pose pose)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool GetRootPose(ByRef<::UnityEngine::Pose> pose);
    // public System.Boolean GetJointPose(Oculus.Interaction.Body.Input.BodyJointId bodyJointId, out UnityEngine.Pose pose)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool GetJointPose(::Oculus::Interaction::Body::Input::BodyJointId bodyJointId, ByRef<::UnityEngine::Pose> pose);
    // public System.Boolean GetJointPoseLocal(Oculus.Interaction.Body.Input.BodyJointId bodyJointId, out UnityEngine.Pose pose)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool GetJointPoseLocal(::Oculus::Interaction::Body::Input::BodyJointId bodyJointId, ByRef<::UnityEngine::Pose> pose);
    // public System.Boolean GetJointPoseFromRoot(Oculus.Interaction.Body.Input.BodyJointId bodyJointId, out UnityEngine.Pose pose)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool GetJointPoseFromRoot(::Oculus::Interaction::Body::Input::BodyJointId bodyJointId, ByRef<::UnityEngine::Pose> pose);
    // public System.Int32 get_CurrentDataVersion()
    // Offset: 0xFFFFFFFFFFFFFFFF
    int get_CurrentDataVersion();
    // public System.Void add_WhenBodyUpdated(System.Action value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void add_WhenBodyUpdated(::System::Action* value);
    // public System.Void remove_WhenBodyUpdated(System.Action value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void remove_WhenBodyUpdated(::System::Action* value);
  }; // Oculus.Interaction.Body.Input.IBody
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::Body::Input::IBody::get_SkeletonMapping
// Il2CppName: get_SkeletonMapping
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::Body::Input::ISkeletonMapping* (Oculus::Interaction::Body::Input::IBody::*)()>(&Oculus::Interaction::Body::Input::IBody::get_SkeletonMapping)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Input::IBody*), "get_SkeletonMapping", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Input::IBody::get_IsConnected
// Il2CppName: get_IsConnected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Body::Input::IBody::*)()>(&Oculus::Interaction::Body::Input::IBody::get_IsConnected)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Input::IBody*), "get_IsConnected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Input::IBody::get_IsHighConfidence
// Il2CppName: get_IsHighConfidence
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Body::Input::IBody::*)()>(&Oculus::Interaction::Body::Input::IBody::get_IsHighConfidence)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Input::IBody*), "get_IsHighConfidence", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Input::IBody::get_IsTrackedDataValid
// Il2CppName: get_IsTrackedDataValid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Body::Input::IBody::*)()>(&Oculus::Interaction::Body::Input::IBody::get_IsTrackedDataValid)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Input::IBody*), "get_IsTrackedDataValid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Input::IBody::get_Scale
// Il2CppName: get_Scale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Oculus::Interaction::Body::Input::IBody::*)()>(&Oculus::Interaction::Body::Input::IBody::get_Scale)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Input::IBody*), "get_Scale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Input::IBody::GetRootPose
// Il2CppName: GetRootPose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Body::Input::IBody::*)(ByRef<::UnityEngine::Pose>)>(&Oculus::Interaction::Body::Input::IBody::GetRootPose)> {
  static const MethodInfo* get() {
    static auto* pose = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Input::IBody*), "GetRootPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pose});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Input::IBody::GetJointPose
// Il2CppName: GetJointPose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Body::Input::IBody::*)(::Oculus::Interaction::Body::Input::BodyJointId, ByRef<::UnityEngine::Pose>)>(&Oculus::Interaction::Body::Input::IBody::GetJointPose)> {
  static const MethodInfo* get() {
    static auto* bodyJointId = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Body.Input", "BodyJointId")->byval_arg;
    static auto* pose = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Input::IBody*), "GetJointPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bodyJointId, pose});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Input::IBody::GetJointPoseLocal
// Il2CppName: GetJointPoseLocal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Body::Input::IBody::*)(::Oculus::Interaction::Body::Input::BodyJointId, ByRef<::UnityEngine::Pose>)>(&Oculus::Interaction::Body::Input::IBody::GetJointPoseLocal)> {
  static const MethodInfo* get() {
    static auto* bodyJointId = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Body.Input", "BodyJointId")->byval_arg;
    static auto* pose = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Input::IBody*), "GetJointPoseLocal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bodyJointId, pose});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Input::IBody::GetJointPoseFromRoot
// Il2CppName: GetJointPoseFromRoot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Body::Input::IBody::*)(::Oculus::Interaction::Body::Input::BodyJointId, ByRef<::UnityEngine::Pose>)>(&Oculus::Interaction::Body::Input::IBody::GetJointPoseFromRoot)> {
  static const MethodInfo* get() {
    static auto* bodyJointId = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Body.Input", "BodyJointId")->byval_arg;
    static auto* pose = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Input::IBody*), "GetJointPoseFromRoot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bodyJointId, pose});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Input::IBody::get_CurrentDataVersion
// Il2CppName: get_CurrentDataVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Oculus::Interaction::Body::Input::IBody::*)()>(&Oculus::Interaction::Body::Input::IBody::get_CurrentDataVersion)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Input::IBody*), "get_CurrentDataVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Input::IBody::add_WhenBodyUpdated
// Il2CppName: add_WhenBodyUpdated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::Input::IBody::*)(::System::Action*)>(&Oculus::Interaction::Body::Input::IBody::add_WhenBodyUpdated)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Input::IBody*), "add_WhenBodyUpdated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Input::IBody::remove_WhenBodyUpdated
// Il2CppName: remove_WhenBodyUpdated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::Input::IBody::*)(::System::Action*)>(&Oculus::Interaction::Body::Input::IBody::remove_WhenBodyUpdated)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Input::IBody*), "remove_WhenBodyUpdated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
