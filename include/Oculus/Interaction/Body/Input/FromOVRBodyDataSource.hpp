// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.Input.DataSource`1
#include "Oculus/Interaction/Input/DataSource_1.hpp"
// Including type: OVRSkeleton
#include "GlobalNamespace/OVRSkeleton.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction::Body::Input
namespace Oculus::Interaction::Body::Input {
  // Forward declaring type: BodyDataAsset
  class BodyDataAsset;
  // Forward declaring type: OVRSkeletonMapping
  class OVRSkeletonMapping;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Object because it is already included!
}
// Forward declaring namespace: Oculus::Interaction::Input
namespace Oculus::Interaction::Input {
  // Forward declaring type: IOVRCameraRigRef
  class IOVRCameraRigRef;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.Body.Input
namespace Oculus::Interaction::Body::Input {
  // Forward declaring type: FromOVRBodyDataSource
  class FromOVRBodyDataSource;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::Body::Input::FromOVRBodyDataSource);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::Body::Input::FromOVRBodyDataSource*, "Oculus.Interaction.Body.Input", "FromOVRBodyDataSource");
// Type namespace: Oculus.Interaction.Body.Input
namespace Oculus::Interaction::Body::Input {
  // WARNING Size may be invalid!
  // Autogenerated type: Oculus.Interaction.Body.Input.FromOVRBodyDataSource
  // [TokenAttribute] Offset: FFFFFFFF
  class FromOVRBodyDataSource : public ::Oculus::Interaction::Input::DataSource_1<::Oculus::Interaction::Body::Input::BodyDataAsset*> {
    public:
    public:
    // private UnityEngine.Object _dataProvider
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::Object* dataProvider;
    // Field size check
    static_assert(sizeof(::UnityEngine::Object*) == 0x8);
    // private OVRSkeleton/IOVRSkeletonDataProvider DataProvider
    // Size: 0x8
    // Offset: 0x50
    ::GlobalNamespace::OVRSkeleton::IOVRSkeletonDataProvider* DataProvider;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRSkeleton::IOVRSkeletonDataProvider*) == 0x8);
    // private UnityEngine.Object _cameraRigRef
    // Size: 0x8
    // Offset: 0x58
    ::UnityEngine::Object* cameraRigRef;
    // Field size check
    static_assert(sizeof(::UnityEngine::Object*) == 0x8);
    // private Oculus.Interaction.Input.IOVRCameraRigRef CameraRigRef
    // Size: 0x8
    // Offset: 0x60
    ::Oculus::Interaction::Input::IOVRCameraRigRef* CameraRigRef;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Input::IOVRCameraRigRef*) == 0x8);
    // private System.Boolean _processLateUpdates
    // Size: 0x1
    // Offset: 0x68
    bool processLateUpdates;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private readonly Oculus.Interaction.Body.Input.BodyDataAsset _bodyDataAsset
    // Size: 0x8
    // Offset: 0x70
    ::Oculus::Interaction::Body::Input::BodyDataAsset* bodyDataAsset;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Body::Input::BodyDataAsset*) == 0x8);
    // private readonly Oculus.Interaction.Body.Input.OVRSkeletonMapping _mapping
    // Size: 0x8
    // Offset: 0x78
    ::Oculus::Interaction::Body::Input::OVRSkeletonMapping* mapping;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Body::Input::OVRSkeletonMapping*) == 0x8);
    public:
    // Get instance field reference: private UnityEngine.Object _dataProvider
    [[deprecated("Use field access instead!")]] ::UnityEngine::Object*& dyn__dataProvider();
    // Get instance field reference: private OVRSkeleton/IOVRSkeletonDataProvider DataProvider
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRSkeleton::IOVRSkeletonDataProvider*& dyn_DataProvider();
    // Get instance field reference: private UnityEngine.Object _cameraRigRef
    [[deprecated("Use field access instead!")]] ::UnityEngine::Object*& dyn__cameraRigRef();
    // Get instance field reference: private Oculus.Interaction.Input.IOVRCameraRigRef CameraRigRef
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IOVRCameraRigRef*& dyn_CameraRigRef();
    // Get instance field reference: private System.Boolean _processLateUpdates
    [[deprecated("Use field access instead!")]] bool& dyn__processLateUpdates();
    // Get instance field reference: private readonly Oculus.Interaction.Body.Input.BodyDataAsset _bodyDataAsset
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Body::Input::BodyDataAsset*& dyn__bodyDataAsset();
    // Get instance field reference: private readonly Oculus.Interaction.Body.Input.OVRSkeletonMapping _mapping
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Body::Input::OVRSkeletonMapping*& dyn__mapping();
    // protected Oculus.Interaction.Body.Input.BodyDataAsset get_DataAsset()
    // Offset: 0x47972E8
    ::Oculus::Interaction::Body::Input::BodyDataAsset* get_DataAsset();
    // protected System.Void Awake()
    // Offset: 0x47972F0
    void Awake();
    // private System.Void HandleInputDataDirtied(System.Boolean isLateUpdate)
    // Offset: 0x4797638
    void HandleInputDataDirtied(bool isLateUpdate);
    // public System.Void .ctor()
    // Offset: 0x4797AE8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static FromOVRBodyDataSource* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Input::FromOVRBodyDataSource::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<FromOVRBodyDataSource*, creationType>()));
    }
    // protected override System.Void Start()
    // Offset: 0x47973A4
    // Implemented from: Oculus.Interaction.Input.DataSource`1
    // Base method: System.Void DataSource_1::Start()
    void Start();
    // protected override System.Void OnEnable()
    // Offset: 0x4797404
    // Implemented from: Oculus.Interaction.Input.DataSource`1
    // Base method: System.Void DataSource_1::OnEnable()
    void OnEnable();
    // protected override System.Void OnDisable()
    // Offset: 0x4797524
    // Implemented from: Oculus.Interaction.Input.DataSource`1
    // Base method: System.Void DataSource_1::OnDisable()
    void OnDisable();
    // protected override System.Void UpdateData()
    // Offset: 0x4797658
    // Implemented from: Oculus.Interaction.Input.DataSource`1
    // Base method: System.Void DataSource_1::UpdateData()
    void UpdateData();
  }; // Oculus.Interaction.Body.Input.FromOVRBodyDataSource
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::Body::Input::FromOVRBodyDataSource::get_DataAsset
// Il2CppName: get_DataAsset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::Body::Input::BodyDataAsset* (Oculus::Interaction::Body::Input::FromOVRBodyDataSource::*)()>(&Oculus::Interaction::Body::Input::FromOVRBodyDataSource::get_DataAsset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Input::FromOVRBodyDataSource*), "get_DataAsset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Input::FromOVRBodyDataSource::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::Input::FromOVRBodyDataSource::*)()>(&Oculus::Interaction::Body::Input::FromOVRBodyDataSource::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Input::FromOVRBodyDataSource*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Input::FromOVRBodyDataSource::HandleInputDataDirtied
// Il2CppName: HandleInputDataDirtied
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::Input::FromOVRBodyDataSource::*)(bool)>(&Oculus::Interaction::Body::Input::FromOVRBodyDataSource::HandleInputDataDirtied)> {
  static const MethodInfo* get() {
    static auto* isLateUpdate = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Input::FromOVRBodyDataSource*), "HandleInputDataDirtied", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{isLateUpdate});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Input::FromOVRBodyDataSource::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Oculus::Interaction::Body::Input::FromOVRBodyDataSource::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::Input::FromOVRBodyDataSource::*)()>(&Oculus::Interaction::Body::Input::FromOVRBodyDataSource::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Input::FromOVRBodyDataSource*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Input::FromOVRBodyDataSource::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::Input::FromOVRBodyDataSource::*)()>(&Oculus::Interaction::Body::Input::FromOVRBodyDataSource::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Input::FromOVRBodyDataSource*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Input::FromOVRBodyDataSource::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::Input::FromOVRBodyDataSource::*)()>(&Oculus::Interaction::Body::Input::FromOVRBodyDataSource::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Input::FromOVRBodyDataSource*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Input::FromOVRBodyDataSource::UpdateData
// Il2CppName: UpdateData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::Input::FromOVRBodyDataSource::*)()>(&Oculus::Interaction::Body::Input::FromOVRBodyDataSource::UpdateData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Input::FromOVRBodyDataSource*), "UpdateData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
