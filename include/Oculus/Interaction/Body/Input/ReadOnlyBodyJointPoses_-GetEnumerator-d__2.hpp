// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.Body.Input.ReadOnlyBodyJointPoses
#include "Oculus/Interaction/Body/Input/ReadOnlyBodyJointPoses.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::Body::Input::ReadOnlyBodyJointPoses::$GetEnumerator$d__2);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::Body::Input::ReadOnlyBodyJointPoses::$GetEnumerator$d__2*, "Oculus.Interaction.Body.Input", "ReadOnlyBodyJointPoses/<GetEnumerator>d__2");
// Type namespace: Oculus.Interaction.Body.Input
namespace Oculus::Interaction::Body::Input {
  // Size: 0x44
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.Body.Input.ReadOnlyBodyJointPoses/<GetEnumerator>d__2
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class ReadOnlyBodyJointPoses::$GetEnumerator$d__2 : public ::Il2CppObject/*, public ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Pose>*/ {
    public:
    public:
    // private System.Int32 <>1__state
    // Size: 0x4
    // Offset: 0x10
    int $$1__state;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private UnityEngine.Pose <>2__current
    // Size: 0x1C
    // Offset: 0x14
    ::UnityEngine::Pose $$2__current;
    // Field size check
    static_assert(sizeof(::UnityEngine::Pose) == 0x1C);
    // public Oculus.Interaction.Body.Input.ReadOnlyBodyJointPoses <>4__this
    // Size: 0x8
    // Offset: 0x30
    ::Oculus::Interaction::Body::Input::ReadOnlyBodyJointPoses* $$4__this;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Body::Input::ReadOnlyBodyJointPoses*) == 0x8);
    // private UnityEngine.Pose[] <>7__wrap1
    // Size: 0x8
    // Offset: 0x38
    ::ArrayW<::UnityEngine::Pose> $$7__wrap1;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Pose>) == 0x8);
    // private System.Int32 <>7__wrap2
    // Size: 0x4
    // Offset: 0x40
    int $$7__wrap2;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating interface conversion operator: operator ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Pose>
    operator ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Pose>() noexcept {
      return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<::UnityEngine::Pose>*>(this);
    }
    // Get instance field reference: private System.Int32 <>1__state
    [[deprecated("Use field access instead!")]] int& dyn_$$1__state();
    // Get instance field reference: private UnityEngine.Pose <>2__current
    [[deprecated("Use field access instead!")]] ::UnityEngine::Pose& dyn_$$2__current();
    // Get instance field reference: public Oculus.Interaction.Body.Input.ReadOnlyBodyJointPoses <>4__this
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Body::Input::ReadOnlyBodyJointPoses*& dyn_$$4__this();
    // Get instance field reference: private UnityEngine.Pose[] <>7__wrap1
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Pose>& dyn_$$7__wrap1();
    // Get instance field reference: private System.Int32 <>7__wrap2
    [[deprecated("Use field access instead!")]] int& dyn_$$7__wrap2();
    // public System.Void .ctor(System.Int32 <>1__state)
    // Offset: 0x48473B8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ReadOnlyBodyJointPoses::$GetEnumerator$d__2* New_ctor(int $$1__state) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Input::ReadOnlyBodyJointPoses::$GetEnumerator$d__2::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ReadOnlyBodyJointPoses::$GetEnumerator$d__2*, creationType>($$1__state)));
    }
    // private System.Void System.IDisposable.Dispose()
    // Offset: 0x484758C
    void System_IDisposable_Dispose();
    // private System.Boolean MoveNext()
    // Offset: 0x4847590
    bool MoveNext();
    // private UnityEngine.Pose System.Collections.Generic.IEnumerator<UnityEngine.Pose>.get_Current()
    // Offset: 0x484765C
    ::UnityEngine::Pose System_Collections_Generic_IEnumerator$UnityEngine_Pose$_get_Current();
    // private System.Void System.Collections.IEnumerator.Reset()
    // Offset: 0x4847670
    void System_Collections_IEnumerator_Reset();
    // private System.Object System.Collections.IEnumerator.get_Current()
    // Offset: 0x48476A8
    ::Il2CppObject* System_Collections_IEnumerator_get_Current();
  }; // Oculus.Interaction.Body.Input.ReadOnlyBodyJointPoses/<GetEnumerator>d__2
  #pragma pack(pop)
  static check_size<sizeof(ReadOnlyBodyJointPoses::$GetEnumerator$d__2), 64 + sizeof(int)> __Oculus_Interaction_Body_Input_ReadOnlyBodyJointPoses_$GetEnumerator$d__2SizeCheck;
  static_assert(sizeof(ReadOnlyBodyJointPoses::$GetEnumerator$d__2) == 0x44);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::Body::Input::ReadOnlyBodyJointPoses::$GetEnumerator$d__2::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Oculus::Interaction::Body::Input::ReadOnlyBodyJointPoses::$GetEnumerator$d__2::System_IDisposable_Dispose
// Il2CppName: System.IDisposable.Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::Input::ReadOnlyBodyJointPoses::$GetEnumerator$d__2::*)()>(&Oculus::Interaction::Body::Input::ReadOnlyBodyJointPoses::$GetEnumerator$d__2::System_IDisposable_Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Input::ReadOnlyBodyJointPoses::$GetEnumerator$d__2*), "System.IDisposable.Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Input::ReadOnlyBodyJointPoses::$GetEnumerator$d__2::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Body::Input::ReadOnlyBodyJointPoses::$GetEnumerator$d__2::*)()>(&Oculus::Interaction::Body::Input::ReadOnlyBodyJointPoses::$GetEnumerator$d__2::MoveNext)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Input::ReadOnlyBodyJointPoses::$GetEnumerator$d__2*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Input::ReadOnlyBodyJointPoses::$GetEnumerator$d__2::System_Collections_Generic_IEnumerator$UnityEngine_Pose$_get_Current
// Il2CppName: System.Collections.Generic.IEnumerator<UnityEngine.Pose>.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Pose (Oculus::Interaction::Body::Input::ReadOnlyBodyJointPoses::$GetEnumerator$d__2::*)()>(&Oculus::Interaction::Body::Input::ReadOnlyBodyJointPoses::$GetEnumerator$d__2::System_Collections_Generic_IEnumerator$UnityEngine_Pose$_get_Current)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Input::ReadOnlyBodyJointPoses::$GetEnumerator$d__2*), "System.Collections.Generic.IEnumerator<UnityEngine.Pose>.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Input::ReadOnlyBodyJointPoses::$GetEnumerator$d__2::System_Collections_IEnumerator_Reset
// Il2CppName: System.Collections.IEnumerator.Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::Input::ReadOnlyBodyJointPoses::$GetEnumerator$d__2::*)()>(&Oculus::Interaction::Body::Input::ReadOnlyBodyJointPoses::$GetEnumerator$d__2::System_Collections_IEnumerator_Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Input::ReadOnlyBodyJointPoses::$GetEnumerator$d__2*), "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Input::ReadOnlyBodyJointPoses::$GetEnumerator$d__2::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (Oculus::Interaction::Body::Input::ReadOnlyBodyJointPoses::$GetEnumerator$d__2::*)()>(&Oculus::Interaction::Body::Input::ReadOnlyBodyJointPoses::$GetEnumerator$d__2::System_Collections_IEnumerator_get_Current)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Input::ReadOnlyBodyJointPoses::$GetEnumerator$d__2*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
