// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction::Body::Input
namespace Oculus::Interaction::Body::Input {
  // Forward declaring type: ReadOnlyBodyJointPoses
  class ReadOnlyBodyJointPoses;
  // Forward declaring type: ISkeletonMapping
  class ISkeletonMapping;
  // Forward declaring type: BodyDataAsset
  class BodyDataAsset;
  // Forward declaring type: BodyJointId
  struct BodyJointId;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.Body.Input
namespace Oculus::Interaction::Body::Input {
  // Forward declaring type: BodyJointsCache
  class BodyJointsCache;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::Body::Input::BodyJointsCache);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::Body::Input::BodyJointsCache*, "Oculus.Interaction.Body.Input", "BodyJointsCache");
// Type namespace: Oculus.Interaction.Body.Input
namespace Oculus::Interaction::Body::Input {
  // Size: 0xE8
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.Body.Input.BodyJointsCache
  // [TokenAttribute] Offset: FFFFFFFF
  class BodyJointsCache : public ::Il2CppObject {
    public:
    public:
    // private System.Int32 <LocalDataVersion>k__BackingField
    // Size: 0x4
    // Offset: 0x10
    int LocalDataVersion;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: LocalDataVersion and: originalPoses
    char __padding0[0x4] = {};
    // private UnityEngine.Pose[] _originalPoses
    // Size: 0x8
    // Offset: 0x18
    ::ArrayW<::UnityEngine::Pose> originalPoses;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Pose>) == 0x8);
    // private UnityEngine.Pose[] _posesFromRoot
    // Size: 0x8
    // Offset: 0x20
    ::ArrayW<::UnityEngine::Pose> posesFromRoot;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Pose>) == 0x8);
    // private UnityEngine.Pose[] _localPoses
    // Size: 0x8
    // Offset: 0x28
    ::ArrayW<::UnityEngine::Pose> localPoses;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Pose>) == 0x8);
    // private UnityEngine.Pose[] _worldPoses
    // Size: 0x8
    // Offset: 0x30
    ::ArrayW<::UnityEngine::Pose> worldPoses;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Pose>) == 0x8);
    // private Oculus.Interaction.Body.Input.ReadOnlyBodyJointPoses _posesFromRootCollection
    // Size: 0x8
    // Offset: 0x38
    ::Oculus::Interaction::Body::Input::ReadOnlyBodyJointPoses* posesFromRootCollection;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Body::Input::ReadOnlyBodyJointPoses*) == 0x8);
    // private Oculus.Interaction.Body.Input.ReadOnlyBodyJointPoses _worldPosesCollection
    // Size: 0x8
    // Offset: 0x40
    ::Oculus::Interaction::Body::Input::ReadOnlyBodyJointPoses* worldPosesCollection;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Body::Input::ReadOnlyBodyJointPoses*) == 0x8);
    // private Oculus.Interaction.Body.Input.ReadOnlyBodyJointPoses _localPosesCollection
    // Size: 0x8
    // Offset: 0x48
    ::Oculus::Interaction::Body::Input::ReadOnlyBodyJointPoses* localPosesCollection;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Body::Input::ReadOnlyBodyJointPoses*) == 0x8);
    // private System.UInt64[] _dirtyJointsFromRoot
    // Size: 0x8
    // Offset: 0x50
    ::ArrayW<uint64_t> dirtyJointsFromRoot;
    // Field size check
    static_assert(sizeof(::ArrayW<uint64_t>) == 0x8);
    // private System.UInt64[] _dirtyLocalJoints
    // Size: 0x8
    // Offset: 0x58
    ::ArrayW<uint64_t> dirtyLocalJoints;
    // Field size check
    static_assert(sizeof(::ArrayW<uint64_t>) == 0x8);
    // private System.UInt64[] _dirtyWorldJoints
    // Size: 0x8
    // Offset: 0x60
    ::ArrayW<uint64_t> dirtyWorldJoints;
    // Field size check
    static_assert(sizeof(::ArrayW<uint64_t>) == 0x8);
    // private UnityEngine.Matrix4x4 _scale
    // Size: 0x40
    // Offset: 0x68
    ::UnityEngine::Matrix4x4 scale;
    // Field size check
    static_assert(sizeof(::UnityEngine::Matrix4x4) == 0x40);
    // private UnityEngine.Pose _rootPose
    // Size: 0x1C
    // Offset: 0xA8
    ::UnityEngine::Pose rootPose;
    // Field size check
    static_assert(sizeof(::UnityEngine::Pose) == 0x1C);
    // private UnityEngine.Pose _worldRoot
    // Size: 0x1C
    // Offset: 0xC4
    ::UnityEngine::Pose worldRoot;
    // Field size check
    static_assert(sizeof(::UnityEngine::Pose) == 0x1C);
    // private Oculus.Interaction.Body.Input.ISkeletonMapping _mapping
    // Size: 0x8
    // Offset: 0xE0
    ::Oculus::Interaction::Body::Input::ISkeletonMapping* mapping;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Body::Input::ISkeletonMapping*) == 0x8);
    public:
    // static field const value: static private System.Int32 DIRTY_ARRAY_SIZE
    static constexpr const int DIRTY_ARRAY_SIZE = 2;
    // Get static field: static private System.Int32 DIRTY_ARRAY_SIZE
    static int _get_DIRTY_ARRAY_SIZE();
    // Set static field: static private System.Int32 DIRTY_ARRAY_SIZE
    static void _set_DIRTY_ARRAY_SIZE(int value);
    // Get instance field reference: private System.Int32 <LocalDataVersion>k__BackingField
    [[deprecated("Use field access instead!")]] int& dyn_$LocalDataVersion$k__BackingField();
    // Get instance field reference: private UnityEngine.Pose[] _originalPoses
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Pose>& dyn__originalPoses();
    // Get instance field reference: private UnityEngine.Pose[] _posesFromRoot
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Pose>& dyn__posesFromRoot();
    // Get instance field reference: private UnityEngine.Pose[] _localPoses
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Pose>& dyn__localPoses();
    // Get instance field reference: private UnityEngine.Pose[] _worldPoses
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Pose>& dyn__worldPoses();
    // Get instance field reference: private Oculus.Interaction.Body.Input.ReadOnlyBodyJointPoses _posesFromRootCollection
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Body::Input::ReadOnlyBodyJointPoses*& dyn__posesFromRootCollection();
    // Get instance field reference: private Oculus.Interaction.Body.Input.ReadOnlyBodyJointPoses _worldPosesCollection
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Body::Input::ReadOnlyBodyJointPoses*& dyn__worldPosesCollection();
    // Get instance field reference: private Oculus.Interaction.Body.Input.ReadOnlyBodyJointPoses _localPosesCollection
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Body::Input::ReadOnlyBodyJointPoses*& dyn__localPosesCollection();
    // Get instance field reference: private System.UInt64[] _dirtyJointsFromRoot
    [[deprecated("Use field access instead!")]] ::ArrayW<uint64_t>& dyn__dirtyJointsFromRoot();
    // Get instance field reference: private System.UInt64[] _dirtyLocalJoints
    [[deprecated("Use field access instead!")]] ::ArrayW<uint64_t>& dyn__dirtyLocalJoints();
    // Get instance field reference: private System.UInt64[] _dirtyWorldJoints
    [[deprecated("Use field access instead!")]] ::ArrayW<uint64_t>& dyn__dirtyWorldJoints();
    // Get instance field reference: private UnityEngine.Matrix4x4 _scale
    [[deprecated("Use field access instead!")]] ::UnityEngine::Matrix4x4& dyn__scale();
    // Get instance field reference: private UnityEngine.Pose _rootPose
    [[deprecated("Use field access instead!")]] ::UnityEngine::Pose& dyn__rootPose();
    // Get instance field reference: private UnityEngine.Pose _worldRoot
    [[deprecated("Use field access instead!")]] ::UnityEngine::Pose& dyn__worldRoot();
    // Get instance field reference: private Oculus.Interaction.Body.Input.ISkeletonMapping _mapping
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Body::Input::ISkeletonMapping*& dyn__mapping();
    // public System.Int32 get_LocalDataVersion()
    // Offset: 0x4846550
    int get_LocalDataVersion();
    // private System.Void set_LocalDataVersion(System.Int32 value)
    // Offset: 0x4846558
    void set_LocalDataVersion(int value);
    // public System.Void .ctor()
    // Offset: 0x4845B5C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BodyJointsCache* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Input::BodyJointsCache::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BodyJointsCache*, creationType>()));
    }
    // public System.Void Update(Oculus.Interaction.Body.Input.BodyDataAsset data, System.Int32 dataVersion, UnityEngine.Transform trackingSpace)
    // Offset: 0x4845D60
    void Update(::Oculus::Interaction::Body::Input::BodyDataAsset* data, int dataVersion, ::UnityEngine::Transform* trackingSpace);
    // public System.Boolean GetAllLocalPoses(out Oculus.Interaction.Body.Input.ReadOnlyBodyJointPoses localJointPoses)
    // Offset: 0x4846590
    bool GetAllLocalPoses(ByRef<::Oculus::Interaction::Body::Input::ReadOnlyBodyJointPoses*> localJointPoses);
    // public System.Boolean GetAllPosesFromRoot(out Oculus.Interaction.Body.Input.ReadOnlyBodyJointPoses posesFromRoot)
    // Offset: 0x484680C
    bool GetAllPosesFromRoot(ByRef<::Oculus::Interaction::Body::Input::ReadOnlyBodyJointPoses*> posesFromRoot);
    // public System.Boolean GetAllWorldPoses(out Oculus.Interaction.Body.Input.ReadOnlyBodyJointPoses worldJointPoses)
    // Offset: 0x4846A6C
    bool GetAllWorldPoses(ByRef<::Oculus::Interaction::Body::Input::ReadOnlyBodyJointPoses*> worldJointPoses);
    // public UnityEngine.Pose GetLocalJointPose(Oculus.Interaction.Body.Input.BodyJointId jointId)
    // Offset: 0x4845794
    ::UnityEngine::Pose GetLocalJointPose(::Oculus::Interaction::Body::Input::BodyJointId jointId);
    // public UnityEngine.Pose GetJointPoseFromRoot(Oculus.Interaction.Body.Input.BodyJointId jointId)
    // Offset: 0x48459C4
    ::UnityEngine::Pose GetJointPoseFromRoot(::Oculus::Interaction::Body::Input::BodyJointId jointId);
    // public UnityEngine.Pose GetWorldJointPose(Oculus.Interaction.Body.Input.BodyJointId jointId)
    // Offset: 0x4845564
    ::UnityEngine::Pose GetWorldJointPose(::Oculus::Interaction::Body::Input::BodyJointId jointId);
    // public UnityEngine.Pose GetWorldRootPose()
    // Offset: 0x48472A8
    ::UnityEngine::Pose GetWorldRootPose();
    // private System.Void UpdateJointPoseFromRoot(Oculus.Interaction.Body.Input.BodyJointId jointId)
    // Offset: 0x4846FD8
    void UpdateJointPoseFromRoot(::Oculus::Interaction::Body::Input::BodyJointId jointId);
    // private System.Void UpdateLocalJointPose(Oculus.Interaction.Body.Input.BodyJointId jointId)
    // Offset: 0x4846CCC
    void UpdateLocalJointPose(::Oculus::Interaction::Body::Input::BodyJointId jointId);
    // private System.Void UpdateWorldJointPose(Oculus.Interaction.Body.Input.BodyJointId jointId)
    // Offset: 0x4847194
    void UpdateWorldJointPose(::Oculus::Interaction::Body::Input::BodyJointId jointId);
    // private System.Void UpdateAllWorldPoses()
    // Offset: 0x4846ABC
    void UpdateAllWorldPoses();
    // private System.Void UpdateAllLocalPoses()
    // Offset: 0x48465E0
    void UpdateAllLocalPoses();
    // private System.Void UpdateAllPosesFromRoot()
    // Offset: 0x484685C
    void UpdateAllPosesFromRoot();
    // private System.Boolean CheckJointDirty(Oculus.Interaction.Body.Input.BodyJointId jointId, System.UInt64[] dirtyFlags)
    // Offset: 0x48472BC
    bool CheckJointDirty(::Oculus::Interaction::Body::Input::BodyJointId jointId, ::ArrayW<uint64_t> dirtyFlags);
    // private System.Void SetJointClean(Oculus.Interaction.Body.Input.BodyJointId jointId, System.UInt64[] dirtyFlags)
    // Offset: 0x4847300
    void SetJointClean(::Oculus::Interaction::Body::Input::BodyJointId jointId, ::ArrayW<uint64_t> dirtyFlags);
  }; // Oculus.Interaction.Body.Input.BodyJointsCache
  #pragma pack(pop)
  static check_size<sizeof(BodyJointsCache), 224 + sizeof(::Oculus::Interaction::Body::Input::ISkeletonMapping*)> __Oculus_Interaction_Body_Input_BodyJointsCacheSizeCheck;
  static_assert(sizeof(BodyJointsCache) == 0xE8);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::Body::Input::BodyJointsCache::get_LocalDataVersion
// Il2CppName: get_LocalDataVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Oculus::Interaction::Body::Input::BodyJointsCache::*)()>(&Oculus::Interaction::Body::Input::BodyJointsCache::get_LocalDataVersion)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Input::BodyJointsCache*), "get_LocalDataVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Input::BodyJointsCache::set_LocalDataVersion
// Il2CppName: set_LocalDataVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::Input::BodyJointsCache::*)(int)>(&Oculus::Interaction::Body::Input::BodyJointsCache::set_LocalDataVersion)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Input::BodyJointsCache*), "set_LocalDataVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Input::BodyJointsCache::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Oculus::Interaction::Body::Input::BodyJointsCache::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::Input::BodyJointsCache::*)(::Oculus::Interaction::Body::Input::BodyDataAsset*, int, ::UnityEngine::Transform*)>(&Oculus::Interaction::Body::Input::BodyJointsCache::Update)> {
  static const MethodInfo* get() {
    static auto* data = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Body.Input", "BodyDataAsset")->byval_arg;
    static auto* dataVersion = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* trackingSpace = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Input::BodyJointsCache*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, dataVersion, trackingSpace});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Input::BodyJointsCache::GetAllLocalPoses
// Il2CppName: GetAllLocalPoses
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Body::Input::BodyJointsCache::*)(ByRef<::Oculus::Interaction::Body::Input::ReadOnlyBodyJointPoses*>)>(&Oculus::Interaction::Body::Input::BodyJointsCache::GetAllLocalPoses)> {
  static const MethodInfo* get() {
    static auto* localJointPoses = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Body.Input", "ReadOnlyBodyJointPoses")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Input::BodyJointsCache*), "GetAllLocalPoses", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{localJointPoses});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Input::BodyJointsCache::GetAllPosesFromRoot
// Il2CppName: GetAllPosesFromRoot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Body::Input::BodyJointsCache::*)(ByRef<::Oculus::Interaction::Body::Input::ReadOnlyBodyJointPoses*>)>(&Oculus::Interaction::Body::Input::BodyJointsCache::GetAllPosesFromRoot)> {
  static const MethodInfo* get() {
    static auto* posesFromRoot = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Body.Input", "ReadOnlyBodyJointPoses")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Input::BodyJointsCache*), "GetAllPosesFromRoot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{posesFromRoot});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Input::BodyJointsCache::GetAllWorldPoses
// Il2CppName: GetAllWorldPoses
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Body::Input::BodyJointsCache::*)(ByRef<::Oculus::Interaction::Body::Input::ReadOnlyBodyJointPoses*>)>(&Oculus::Interaction::Body::Input::BodyJointsCache::GetAllWorldPoses)> {
  static const MethodInfo* get() {
    static auto* worldJointPoses = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Body.Input", "ReadOnlyBodyJointPoses")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Input::BodyJointsCache*), "GetAllWorldPoses", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{worldJointPoses});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Input::BodyJointsCache::GetLocalJointPose
// Il2CppName: GetLocalJointPose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Pose (Oculus::Interaction::Body::Input::BodyJointsCache::*)(::Oculus::Interaction::Body::Input::BodyJointId)>(&Oculus::Interaction::Body::Input::BodyJointsCache::GetLocalJointPose)> {
  static const MethodInfo* get() {
    static auto* jointId = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Body.Input", "BodyJointId")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Input::BodyJointsCache*), "GetLocalJointPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{jointId});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Input::BodyJointsCache::GetJointPoseFromRoot
// Il2CppName: GetJointPoseFromRoot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Pose (Oculus::Interaction::Body::Input::BodyJointsCache::*)(::Oculus::Interaction::Body::Input::BodyJointId)>(&Oculus::Interaction::Body::Input::BodyJointsCache::GetJointPoseFromRoot)> {
  static const MethodInfo* get() {
    static auto* jointId = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Body.Input", "BodyJointId")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Input::BodyJointsCache*), "GetJointPoseFromRoot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{jointId});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Input::BodyJointsCache::GetWorldJointPose
// Il2CppName: GetWorldJointPose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Pose (Oculus::Interaction::Body::Input::BodyJointsCache::*)(::Oculus::Interaction::Body::Input::BodyJointId)>(&Oculus::Interaction::Body::Input::BodyJointsCache::GetWorldJointPose)> {
  static const MethodInfo* get() {
    static auto* jointId = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Body.Input", "BodyJointId")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Input::BodyJointsCache*), "GetWorldJointPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{jointId});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Input::BodyJointsCache::GetWorldRootPose
// Il2CppName: GetWorldRootPose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Pose (Oculus::Interaction::Body::Input::BodyJointsCache::*)()>(&Oculus::Interaction::Body::Input::BodyJointsCache::GetWorldRootPose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Input::BodyJointsCache*), "GetWorldRootPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Input::BodyJointsCache::UpdateJointPoseFromRoot
// Il2CppName: UpdateJointPoseFromRoot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::Input::BodyJointsCache::*)(::Oculus::Interaction::Body::Input::BodyJointId)>(&Oculus::Interaction::Body::Input::BodyJointsCache::UpdateJointPoseFromRoot)> {
  static const MethodInfo* get() {
    static auto* jointId = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Body.Input", "BodyJointId")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Input::BodyJointsCache*), "UpdateJointPoseFromRoot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{jointId});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Input::BodyJointsCache::UpdateLocalJointPose
// Il2CppName: UpdateLocalJointPose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::Input::BodyJointsCache::*)(::Oculus::Interaction::Body::Input::BodyJointId)>(&Oculus::Interaction::Body::Input::BodyJointsCache::UpdateLocalJointPose)> {
  static const MethodInfo* get() {
    static auto* jointId = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Body.Input", "BodyJointId")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Input::BodyJointsCache*), "UpdateLocalJointPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{jointId});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Input::BodyJointsCache::UpdateWorldJointPose
// Il2CppName: UpdateWorldJointPose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::Input::BodyJointsCache::*)(::Oculus::Interaction::Body::Input::BodyJointId)>(&Oculus::Interaction::Body::Input::BodyJointsCache::UpdateWorldJointPose)> {
  static const MethodInfo* get() {
    static auto* jointId = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Body.Input", "BodyJointId")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Input::BodyJointsCache*), "UpdateWorldJointPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{jointId});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Input::BodyJointsCache::UpdateAllWorldPoses
// Il2CppName: UpdateAllWorldPoses
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::Input::BodyJointsCache::*)()>(&Oculus::Interaction::Body::Input::BodyJointsCache::UpdateAllWorldPoses)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Input::BodyJointsCache*), "UpdateAllWorldPoses", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Input::BodyJointsCache::UpdateAllLocalPoses
// Il2CppName: UpdateAllLocalPoses
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::Input::BodyJointsCache::*)()>(&Oculus::Interaction::Body::Input::BodyJointsCache::UpdateAllLocalPoses)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Input::BodyJointsCache*), "UpdateAllLocalPoses", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Input::BodyJointsCache::UpdateAllPosesFromRoot
// Il2CppName: UpdateAllPosesFromRoot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::Input::BodyJointsCache::*)()>(&Oculus::Interaction::Body::Input::BodyJointsCache::UpdateAllPosesFromRoot)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Input::BodyJointsCache*), "UpdateAllPosesFromRoot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Input::BodyJointsCache::CheckJointDirty
// Il2CppName: CheckJointDirty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Body::Input::BodyJointsCache::*)(::Oculus::Interaction::Body::Input::BodyJointId, ::ArrayW<uint64_t>)>(&Oculus::Interaction::Body::Input::BodyJointsCache::CheckJointDirty)> {
  static const MethodInfo* get() {
    static auto* jointId = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Body.Input", "BodyJointId")->byval_arg;
    static auto* dirtyFlags = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt64"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Input::BodyJointsCache*), "CheckJointDirty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{jointId, dirtyFlags});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Input::BodyJointsCache::SetJointClean
// Il2CppName: SetJointClean
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::Input::BodyJointsCache::*)(::Oculus::Interaction::Body::Input::BodyJointId, ::ArrayW<uint64_t>)>(&Oculus::Interaction::Body::Input::BodyJointsCache::SetJointClean)> {
  static const MethodInfo* get() {
    static auto* jointId = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Body.Input", "BodyJointId")->byval_arg;
    static auto* dirtyFlags = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt64"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Input::BodyJointsCache*), "SetJointClean", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{jointId, dirtyFlags});
  }
};
