// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: Oculus.Interaction.Body.PoseDetection.IBodyPose
#include "Oculus/Interaction/Body/PoseDetection/IBodyPose.hpp"
// Including type: Oculus.Interaction.Body.Input.BodyJointId
#include "Oculus/Interaction/Body/Input/BodyJointId.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction::Body::PoseDetection
namespace Oculus::Interaction::Body::PoseDetection {
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Object because it is already included!
}
// Forward declaring namespace: Oculus::Interaction::Body::Input
namespace Oculus::Interaction::Body::Input {
  // Forward declaring type: IBody
  class IBody;
  // Forward declaring type: ISkeletonMapping
  class ISkeletonMapping;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.Body.PoseDetection
namespace Oculus::Interaction::Body::PoseDetection {
  // Forward declaring type: PoseFromBody
  class PoseFromBody;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::Body::PoseDetection::PoseFromBody);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::Body::PoseDetection::PoseFromBody*, "Oculus.Interaction.Body.PoseDetection", "PoseFromBody");
// Type namespace: Oculus.Interaction.Body.PoseDetection
namespace Oculus::Interaction::Body::PoseDetection {
  // Size: 0x50
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.Body.PoseDetection.PoseFromBody
  // [TokenAttribute] Offset: FFFFFFFF
  class PoseFromBody : public ::UnityEngine::MonoBehaviour/*, public ::Oculus::Interaction::Body::PoseDetection::IBodyPose*/ {
    public:
    // Nested type: ::Oculus::Interaction::Body::PoseDetection::PoseFromBody::$$c
    class $$c;
    public:
    // private System.Action WhenBodyPoseUpdated
    // Size: 0x8
    // Offset: 0x20
    ::System::Action* WhenBodyPoseUpdated;
    // Field size check
    static_assert(sizeof(::System::Action*) == 0x8);
    // private UnityEngine.Object _body
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::Object* body;
    // Field size check
    static_assert(sizeof(::UnityEngine::Object*) == 0x8);
    // private Oculus.Interaction.Body.Input.IBody Body
    // Size: 0x8
    // Offset: 0x30
    ::Oculus::Interaction::Body::Input::IBody* Body;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Body::Input::IBody*) == 0x8);
    // private System.Boolean _autoUpdate
    // Size: 0x1
    // Offset: 0x38
    bool autoUpdate;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // protected System.Boolean _started
    // Size: 0x1
    // Offset: 0x39
    bool started;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: started and: jointPosesLocal
    char __padding4[0x6] = {};
    // private System.Collections.Generic.Dictionary`2<Oculus.Interaction.Body.Input.BodyJointId,UnityEngine.Pose> _jointPosesLocal
    // Size: 0x8
    // Offset: 0x40
    ::System::Collections::Generic::Dictionary_2<::Oculus::Interaction::Body::Input::BodyJointId, ::UnityEngine::Pose>* jointPosesLocal;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::Oculus::Interaction::Body::Input::BodyJointId, ::UnityEngine::Pose>*) == 0x8);
    // private System.Collections.Generic.Dictionary`2<Oculus.Interaction.Body.Input.BodyJointId,UnityEngine.Pose> _jointPosesFromRoot
    // Size: 0x8
    // Offset: 0x48
    ::System::Collections::Generic::Dictionary_2<::Oculus::Interaction::Body::Input::BodyJointId, ::UnityEngine::Pose>* jointPosesFromRoot;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::Oculus::Interaction::Body::Input::BodyJointId, ::UnityEngine::Pose>*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::Oculus::Interaction::Body::PoseDetection::IBodyPose
    operator ::Oculus::Interaction::Body::PoseDetection::IBodyPose() noexcept {
      return *reinterpret_cast<::Oculus::Interaction::Body::PoseDetection::IBodyPose*>(this);
    }
    // Get instance field reference: private System.Action WhenBodyPoseUpdated
    [[deprecated("Use field access instead!")]] ::System::Action*& dyn_WhenBodyPoseUpdated();
    // Get instance field reference: private UnityEngine.Object _body
    [[deprecated("Use field access instead!")]] ::UnityEngine::Object*& dyn__body();
    // Get instance field reference: private Oculus.Interaction.Body.Input.IBody Body
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Body::Input::IBody*& dyn_Body();
    // Get instance field reference: private System.Boolean _autoUpdate
    [[deprecated("Use field access instead!")]] bool& dyn__autoUpdate();
    // Get instance field reference: protected System.Boolean _started
    [[deprecated("Use field access instead!")]] bool& dyn__started();
    // Get instance field reference: private System.Collections.Generic.Dictionary`2<Oculus.Interaction.Body.Input.BodyJointId,UnityEngine.Pose> _jointPosesLocal
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::Oculus::Interaction::Body::Input::BodyJointId, ::UnityEngine::Pose>*& dyn__jointPosesLocal();
    // Get instance field reference: private System.Collections.Generic.Dictionary`2<Oculus.Interaction.Body.Input.BodyJointId,UnityEngine.Pose> _jointPosesFromRoot
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::Oculus::Interaction::Body::Input::BodyJointId, ::UnityEngine::Pose>*& dyn__jointPosesFromRoot();
    // public System.Void add_WhenBodyPoseUpdated(System.Action value)
    // Offset: 0x4844340
    void add_WhenBodyPoseUpdated(::System::Action* value);
    // public System.Void remove_WhenBodyPoseUpdated(System.Action value)
    // Offset: 0x48443DC
    void remove_WhenBodyPoseUpdated(::System::Action* value);
    // public System.Boolean get_AutoUpdate()
    // Offset: 0x4844478
    bool get_AutoUpdate();
    // public System.Void set_AutoUpdate(System.Boolean value)
    // Offset: 0x4844480
    void set_AutoUpdate(bool value);
    // public Oculus.Interaction.Body.Input.ISkeletonMapping get_SkeletonMapping()
    // Offset: 0x484448C
    ::Oculus::Interaction::Body::Input::ISkeletonMapping* get_SkeletonMapping();
    // public System.Boolean GetJointPoseLocal(Oculus.Interaction.Body.Input.BodyJointId bodyJointId, out UnityEngine.Pose pose)
    // Offset: 0x484452C
    bool GetJointPoseLocal(::Oculus::Interaction::Body::Input::BodyJointId bodyJointId, ByRef<::UnityEngine::Pose> pose);
    // public System.Boolean GetJointPoseFromRoot(Oculus.Interaction.Body.Input.BodyJointId bodyJointId, out UnityEngine.Pose pose)
    // Offset: 0x4844594
    bool GetJointPoseFromRoot(::Oculus::Interaction::Body::Input::BodyJointId bodyJointId, ByRef<::UnityEngine::Pose> pose);
    // protected System.Void Awake()
    // Offset: 0x48445FC
    void Awake();
    // protected System.Void Start()
    // Offset: 0x48446DC
    void Start();
    // protected System.Void OnEnable()
    // Offset: 0x4844714
    void OnEnable();
    // protected System.Void OnDisable()
    // Offset: 0x4844814
    void OnDisable();
    // private System.Void Body_WhenBodyUpdated()
    // Offset: 0x4844914
    void Body_WhenBodyUpdated();
    // public System.Void UpdatePose()
    // Offset: 0x4844924
    void UpdatePose();
    // public System.Void InjectAllPoseFromBody(Oculus.Interaction.Body.Input.IBody body)
    // Offset: 0x4844DA8
    void InjectAllPoseFromBody(::Oculus::Interaction::Body::Input::IBody* body);
    // public System.Void InjectBody(Oculus.Interaction.Body.Input.IBody body)
    // Offset: 0x4844DAC
    void InjectBody(::Oculus::Interaction::Body::Input::IBody* body);
    // public System.Void .ctor()
    // Offset: 0x4844E7C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PoseFromBody* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::PoseDetection::PoseFromBody::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PoseFromBody*, creationType>()));
    }
  }; // Oculus.Interaction.Body.PoseDetection.PoseFromBody
  #pragma pack(pop)
  static check_size<sizeof(PoseFromBody), 72 + sizeof(::System::Collections::Generic::Dictionary_2<::Oculus::Interaction::Body::Input::BodyJointId, ::UnityEngine::Pose>*)> __Oculus_Interaction_Body_PoseDetection_PoseFromBodySizeCheck;
  static_assert(sizeof(PoseFromBody) == 0x50);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::Body::PoseDetection::PoseFromBody::add_WhenBodyPoseUpdated
// Il2CppName: add_WhenBodyPoseUpdated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::PoseDetection::PoseFromBody::*)(::System::Action*)>(&Oculus::Interaction::Body::PoseDetection::PoseFromBody::add_WhenBodyPoseUpdated)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::PoseDetection::PoseFromBody*), "add_WhenBodyPoseUpdated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::PoseDetection::PoseFromBody::remove_WhenBodyPoseUpdated
// Il2CppName: remove_WhenBodyPoseUpdated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::PoseDetection::PoseFromBody::*)(::System::Action*)>(&Oculus::Interaction::Body::PoseDetection::PoseFromBody::remove_WhenBodyPoseUpdated)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::PoseDetection::PoseFromBody*), "remove_WhenBodyPoseUpdated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::PoseDetection::PoseFromBody::get_AutoUpdate
// Il2CppName: get_AutoUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Body::PoseDetection::PoseFromBody::*)()>(&Oculus::Interaction::Body::PoseDetection::PoseFromBody::get_AutoUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::PoseDetection::PoseFromBody*), "get_AutoUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::PoseDetection::PoseFromBody::set_AutoUpdate
// Il2CppName: set_AutoUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::PoseDetection::PoseFromBody::*)(bool)>(&Oculus::Interaction::Body::PoseDetection::PoseFromBody::set_AutoUpdate)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::PoseDetection::PoseFromBody*), "set_AutoUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::PoseDetection::PoseFromBody::get_SkeletonMapping
// Il2CppName: get_SkeletonMapping
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::Body::Input::ISkeletonMapping* (Oculus::Interaction::Body::PoseDetection::PoseFromBody::*)()>(&Oculus::Interaction::Body::PoseDetection::PoseFromBody::get_SkeletonMapping)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::PoseDetection::PoseFromBody*), "get_SkeletonMapping", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::PoseDetection::PoseFromBody::GetJointPoseLocal
// Il2CppName: GetJointPoseLocal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Body::PoseDetection::PoseFromBody::*)(::Oculus::Interaction::Body::Input::BodyJointId, ByRef<::UnityEngine::Pose>)>(&Oculus::Interaction::Body::PoseDetection::PoseFromBody::GetJointPoseLocal)> {
  static const MethodInfo* get() {
    static auto* bodyJointId = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Body.Input", "BodyJointId")->byval_arg;
    static auto* pose = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::PoseDetection::PoseFromBody*), "GetJointPoseLocal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bodyJointId, pose});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::PoseDetection::PoseFromBody::GetJointPoseFromRoot
// Il2CppName: GetJointPoseFromRoot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Body::PoseDetection::PoseFromBody::*)(::Oculus::Interaction::Body::Input::BodyJointId, ByRef<::UnityEngine::Pose>)>(&Oculus::Interaction::Body::PoseDetection::PoseFromBody::GetJointPoseFromRoot)> {
  static const MethodInfo* get() {
    static auto* bodyJointId = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Body.Input", "BodyJointId")->byval_arg;
    static auto* pose = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::PoseDetection::PoseFromBody*), "GetJointPoseFromRoot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bodyJointId, pose});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::PoseDetection::PoseFromBody::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::PoseDetection::PoseFromBody::*)()>(&Oculus::Interaction::Body::PoseDetection::PoseFromBody::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::PoseDetection::PoseFromBody*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::PoseDetection::PoseFromBody::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::PoseDetection::PoseFromBody::*)()>(&Oculus::Interaction::Body::PoseDetection::PoseFromBody::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::PoseDetection::PoseFromBody*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::PoseDetection::PoseFromBody::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::PoseDetection::PoseFromBody::*)()>(&Oculus::Interaction::Body::PoseDetection::PoseFromBody::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::PoseDetection::PoseFromBody*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::PoseDetection::PoseFromBody::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::PoseDetection::PoseFromBody::*)()>(&Oculus::Interaction::Body::PoseDetection::PoseFromBody::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::PoseDetection::PoseFromBody*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::PoseDetection::PoseFromBody::Body_WhenBodyUpdated
// Il2CppName: Body_WhenBodyUpdated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::PoseDetection::PoseFromBody::*)()>(&Oculus::Interaction::Body::PoseDetection::PoseFromBody::Body_WhenBodyUpdated)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::PoseDetection::PoseFromBody*), "Body_WhenBodyUpdated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::PoseDetection::PoseFromBody::UpdatePose
// Il2CppName: UpdatePose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::PoseDetection::PoseFromBody::*)()>(&Oculus::Interaction::Body::PoseDetection::PoseFromBody::UpdatePose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::PoseDetection::PoseFromBody*), "UpdatePose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::PoseDetection::PoseFromBody::InjectAllPoseFromBody
// Il2CppName: InjectAllPoseFromBody
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::PoseDetection::PoseFromBody::*)(::Oculus::Interaction::Body::Input::IBody*)>(&Oculus::Interaction::Body::PoseDetection::PoseFromBody::InjectAllPoseFromBody)> {
  static const MethodInfo* get() {
    static auto* body = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Body.Input", "IBody")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::PoseDetection::PoseFromBody*), "InjectAllPoseFromBody", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{body});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::PoseDetection::PoseFromBody::InjectBody
// Il2CppName: InjectBody
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::PoseDetection::PoseFromBody::*)(::Oculus::Interaction::Body::Input::IBody*)>(&Oculus::Interaction::Body::PoseDetection::PoseFromBody::InjectBody)> {
  static const MethodInfo* get() {
    static auto* body = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Body.Input", "IBody")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::PoseDetection::PoseFromBody*), "InjectBody", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{body});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::PoseDetection::PoseFromBody::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
