// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.Body.SkeletonDebugGizmos
#include "Oculus/Interaction/Body/SkeletonDebugGizmos.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Object because it is already included!
  // Forward declaring type: Pose
  struct Pose;
}
// Forward declaring namespace: Oculus::Interaction::Body::PoseDetection
namespace Oculus::Interaction::Body::PoseDetection {
  // Forward declaring type: IBodyPose
  class IBodyPose;
}
// Forward declaring namespace: Oculus::Interaction::Body::Input
namespace Oculus::Interaction::Body::Input {
  // Forward declaring type: BodyJointId
  struct BodyJointId;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.Body.PoseDetection
namespace Oculus::Interaction::Body::PoseDetection {
  // Forward declaring type: BodyPoseDebugGizmos
  class BodyPoseDebugGizmos;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::Body::PoseDetection::BodyPoseDebugGizmos);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::Body::PoseDetection::BodyPoseDebugGizmos*, "Oculus.Interaction.Body.PoseDetection", "BodyPoseDebugGizmos");
// Type namespace: Oculus.Interaction.Body.PoseDetection
namespace Oculus::Interaction::Body::PoseDetection {
  // Size: 0x58
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.Body.PoseDetection.BodyPoseDebugGizmos
  // [TokenAttribute] Offset: FFFFFFFF
  class BodyPoseDebugGizmos : public ::Oculus::Interaction::Body::SkeletonDebugGizmos {
    public:
    public:
    // private UnityEngine.Object _bodyPose
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::Object* bodyPose;
    // Field size check
    static_assert(sizeof(::UnityEngine::Object*) == 0x8);
    // private Oculus.Interaction.Body.PoseDetection.IBodyPose BodyPose
    // Size: 0x8
    // Offset: 0x50
    ::Oculus::Interaction::Body::PoseDetection::IBodyPose* BodyPose;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Body::PoseDetection::IBodyPose*) == 0x8);
    public:
    // Get instance field reference: private UnityEngine.Object _bodyPose
    [[deprecated("Use field access instead!")]] ::UnityEngine::Object*& dyn__bodyPose();
    // Get instance field reference: private Oculus.Interaction.Body.PoseDetection.IBodyPose BodyPose
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Body::PoseDetection::IBodyPose*& dyn_BodyPose();
    // protected System.Void Awake()
    // Offset: 0x4843C4C
    void Awake();
    // protected System.Void Start()
    // Offset: 0x4843CB4
    void Start();
    // protected System.Void Update()
    // Offset: 0x4843CB8
    void Update();
    // private Oculus.Interaction.Body.SkeletonDebugGizmos/VisibilityFlags GetVisibilityFlags()
    // Offset: 0x4843F5C
    ::Oculus::Interaction::Body::SkeletonDebugGizmos::VisibilityFlags GetVisibilityFlags();
    // public System.Void InjectAllBodyJointDebugGizmos(Oculus.Interaction.Body.PoseDetection.IBodyPose bodyPose)
    // Offset: 0x484423C
    void InjectAllBodyJointDebugGizmos(::Oculus::Interaction::Body::PoseDetection::IBodyPose* bodyPose);
    // public System.Void InjectBodyPose(Oculus.Interaction.Body.PoseDetection.IBodyPose bodyPose)
    // Offset: 0x4844240
    void InjectBodyPose(::Oculus::Interaction::Body::PoseDetection::IBodyPose* bodyPose);
    // protected override System.Boolean TryGetWorldJointPose(Oculus.Interaction.Body.Input.BodyJointId jointId, out UnityEngine.Pose pose)
    // Offset: 0x4843F7C
    // Implemented from: Oculus.Interaction.Body.SkeletonDebugGizmos
    // Base method: System.Boolean SkeletonDebugGizmos::TryGetWorldJointPose(Oculus.Interaction.Body.Input.BodyJointId jointId, out UnityEngine.Pose pose)
    bool TryGetWorldJointPose(::Oculus::Interaction::Body::Input::BodyJointId jointId, ByRef<::UnityEngine::Pose> pose);
    // protected override System.Boolean TryGetParentJointId(Oculus.Interaction.Body.Input.BodyJointId jointId, out Oculus.Interaction.Body.Input.BodyJointId parent)
    // Offset: 0x4844108
    // Implemented from: Oculus.Interaction.Body.SkeletonDebugGizmos
    // Base method: System.Boolean SkeletonDebugGizmos::TryGetParentJointId(Oculus.Interaction.Body.Input.BodyJointId jointId, out Oculus.Interaction.Body.Input.BodyJointId parent)
    bool TryGetParentJointId(::Oculus::Interaction::Body::Input::BodyJointId jointId, ByRef<::Oculus::Interaction::Body::Input::BodyJointId> parent);
    // public System.Void .ctor()
    // Offset: 0x4844310
    // Implemented from: Oculus.Interaction.Body.SkeletonDebugGizmos
    // Base method: System.Void SkeletonDebugGizmos::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BodyPoseDebugGizmos* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::PoseDetection::BodyPoseDebugGizmos::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BodyPoseDebugGizmos*, creationType>()));
    }
  }; // Oculus.Interaction.Body.PoseDetection.BodyPoseDebugGizmos
  #pragma pack(pop)
  static check_size<sizeof(BodyPoseDebugGizmos), 80 + sizeof(::Oculus::Interaction::Body::PoseDetection::IBodyPose*)> __Oculus_Interaction_Body_PoseDetection_BodyPoseDebugGizmosSizeCheck;
  static_assert(sizeof(BodyPoseDebugGizmos) == 0x58);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::Body::PoseDetection::BodyPoseDebugGizmos::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::PoseDetection::BodyPoseDebugGizmos::*)()>(&Oculus::Interaction::Body::PoseDetection::BodyPoseDebugGizmos::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::PoseDetection::BodyPoseDebugGizmos*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::PoseDetection::BodyPoseDebugGizmos::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::PoseDetection::BodyPoseDebugGizmos::*)()>(&Oculus::Interaction::Body::PoseDetection::BodyPoseDebugGizmos::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::PoseDetection::BodyPoseDebugGizmos*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::PoseDetection::BodyPoseDebugGizmos::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::PoseDetection::BodyPoseDebugGizmos::*)()>(&Oculus::Interaction::Body::PoseDetection::BodyPoseDebugGizmos::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::PoseDetection::BodyPoseDebugGizmos*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::PoseDetection::BodyPoseDebugGizmos::GetVisibilityFlags
// Il2CppName: GetVisibilityFlags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::Body::SkeletonDebugGizmos::VisibilityFlags (Oculus::Interaction::Body::PoseDetection::BodyPoseDebugGizmos::*)()>(&Oculus::Interaction::Body::PoseDetection::BodyPoseDebugGizmos::GetVisibilityFlags)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::PoseDetection::BodyPoseDebugGizmos*), "GetVisibilityFlags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::PoseDetection::BodyPoseDebugGizmos::InjectAllBodyJointDebugGizmos
// Il2CppName: InjectAllBodyJointDebugGizmos
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::PoseDetection::BodyPoseDebugGizmos::*)(::Oculus::Interaction::Body::PoseDetection::IBodyPose*)>(&Oculus::Interaction::Body::PoseDetection::BodyPoseDebugGizmos::InjectAllBodyJointDebugGizmos)> {
  static const MethodInfo* get() {
    static auto* bodyPose = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Body.PoseDetection", "IBodyPose")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::PoseDetection::BodyPoseDebugGizmos*), "InjectAllBodyJointDebugGizmos", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bodyPose});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::PoseDetection::BodyPoseDebugGizmos::InjectBodyPose
// Il2CppName: InjectBodyPose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::PoseDetection::BodyPoseDebugGizmos::*)(::Oculus::Interaction::Body::PoseDetection::IBodyPose*)>(&Oculus::Interaction::Body::PoseDetection::BodyPoseDebugGizmos::InjectBodyPose)> {
  static const MethodInfo* get() {
    static auto* bodyPose = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Body.PoseDetection", "IBodyPose")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::PoseDetection::BodyPoseDebugGizmos*), "InjectBodyPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bodyPose});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::PoseDetection::BodyPoseDebugGizmos::TryGetWorldJointPose
// Il2CppName: TryGetWorldJointPose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Body::PoseDetection::BodyPoseDebugGizmos::*)(::Oculus::Interaction::Body::Input::BodyJointId, ByRef<::UnityEngine::Pose>)>(&Oculus::Interaction::Body::PoseDetection::BodyPoseDebugGizmos::TryGetWorldJointPose)> {
  static const MethodInfo* get() {
    static auto* jointId = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Body.Input", "BodyJointId")->byval_arg;
    static auto* pose = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::PoseDetection::BodyPoseDebugGizmos*), "TryGetWorldJointPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{jointId, pose});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::PoseDetection::BodyPoseDebugGizmos::TryGetParentJointId
// Il2CppName: TryGetParentJointId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Body::PoseDetection::BodyPoseDebugGizmos::*)(::Oculus::Interaction::Body::Input::BodyJointId, ByRef<::Oculus::Interaction::Body::Input::BodyJointId>)>(&Oculus::Interaction::Body::PoseDetection::BodyPoseDebugGizmos::TryGetParentJointId)> {
  static const MethodInfo* get() {
    static auto* jointId = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Body.Input", "BodyJointId")->byval_arg;
    static auto* parent = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Body.Input", "BodyJointId")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::PoseDetection::BodyPoseDebugGizmos*), "TryGetParentJointId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{jointId, parent});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::PoseDetection::BodyPoseDebugGizmos::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
