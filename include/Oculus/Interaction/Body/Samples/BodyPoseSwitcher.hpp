// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: Oculus.Interaction.Body.PoseDetection.IBodyPose
#include "Oculus/Interaction/Body/PoseDetection/IBodyPose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction::Body::Input
namespace Oculus::Interaction::Body::Input {
  // Forward declaring type: ISkeletonMapping
  class ISkeletonMapping;
  // Forward declaring type: BodyJointId
  struct BodyJointId;
}
// Forward declaring namespace: Oculus::Interaction::Body::Samples
namespace Oculus::Interaction::Body::Samples {
  // Skipping declaration: PoseSource because it is already included!
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Object because it is already included!
  // Forward declaring type: Pose
  struct Pose;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.Body.Samples
namespace Oculus::Interaction::Body::Samples {
  // Forward declaring type: BodyPoseSwitcher
  class BodyPoseSwitcher;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::Body::Samples::BodyPoseSwitcher);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::Body::Samples::BodyPoseSwitcher*, "Oculus.Interaction.Body.Samples", "BodyPoseSwitcher");
// Type namespace: Oculus.Interaction.Body.Samples
namespace Oculus::Interaction::Body::Samples {
  // Size: 0x4D
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.Body.Samples.BodyPoseSwitcher
  // [TokenAttribute] Offset: FFFFFFFF
  class BodyPoseSwitcher : public ::UnityEngine::MonoBehaviour/*, public ::Oculus::Interaction::Body::PoseDetection::IBodyPose*/ {
    public:
    // Nested type: ::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::PoseSource
    struct PoseSource;
    // Nested type: ::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::$$c
    class $$c;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: Oculus.Interaction.Body.Samples.BodyPoseSwitcher/PoseSource
    // [TokenAttribute] Offset: FFFFFFFF
    struct PoseSource/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: PoseSource
      constexpr PoseSource(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public Oculus.Interaction.Body.Samples.BodyPoseSwitcher/PoseSource PoseA
      static constexpr const int PoseA = 0;
      // Get static field: static public Oculus.Interaction.Body.Samples.BodyPoseSwitcher/PoseSource PoseA
      static ::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::PoseSource _get_PoseA();
      // Set static field: static public Oculus.Interaction.Body.Samples.BodyPoseSwitcher/PoseSource PoseA
      static void _set_PoseA(::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::PoseSource value);
      // static field const value: static public Oculus.Interaction.Body.Samples.BodyPoseSwitcher/PoseSource PoseB
      static constexpr const int PoseB = 1;
      // Get static field: static public Oculus.Interaction.Body.Samples.BodyPoseSwitcher/PoseSource PoseB
      static ::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::PoseSource _get_PoseB();
      // Set static field: static public Oculus.Interaction.Body.Samples.BodyPoseSwitcher/PoseSource PoseB
      static void _set_PoseB(::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::PoseSource value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // Oculus.Interaction.Body.Samples.BodyPoseSwitcher/PoseSource
    #pragma pack(pop)
    static check_size<sizeof(BodyPoseSwitcher::PoseSource), 0 + sizeof(int)> __Oculus_Interaction_Body_Samples_BodyPoseSwitcher_PoseSourceSizeCheck;
    static_assert(sizeof(BodyPoseSwitcher::PoseSource) == 0x4);
    public:
    // private System.Action WhenBodyPoseUpdated
    // Size: 0x8
    // Offset: 0x20
    ::System::Action* WhenBodyPoseUpdated;
    // Field size check
    static_assert(sizeof(::System::Action*) == 0x8);
    // private UnityEngine.Object _poseA
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::Object* poseA;
    // Field size check
    static_assert(sizeof(::UnityEngine::Object*) == 0x8);
    // private Oculus.Interaction.Body.PoseDetection.IBodyPose PoseA
    // Size: 0x8
    // Offset: 0x30
    ::Oculus::Interaction::Body::PoseDetection::IBodyPose* PoseA;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Body::PoseDetection::IBodyPose*) == 0x8);
    // private UnityEngine.Object _poseB
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::Object* poseB;
    // Field size check
    static_assert(sizeof(::UnityEngine::Object*) == 0x8);
    // private Oculus.Interaction.Body.PoseDetection.IBodyPose PoseB
    // Size: 0x8
    // Offset: 0x40
    ::Oculus::Interaction::Body::PoseDetection::IBodyPose* PoseB;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Body::PoseDetection::IBodyPose*) == 0x8);
    // private Oculus.Interaction.Body.Samples.BodyPoseSwitcher/PoseSource _source
    // Size: 0x4
    // Offset: 0x48
    ::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::PoseSource source;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::PoseSource) == 0x4);
    // protected System.Boolean _started
    // Size: 0x1
    // Offset: 0x4C
    bool started;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating interface conversion operator: operator ::Oculus::Interaction::Body::PoseDetection::IBodyPose
    operator ::Oculus::Interaction::Body::PoseDetection::IBodyPose() noexcept {
      return *reinterpret_cast<::Oculus::Interaction::Body::PoseDetection::IBodyPose*>(this);
    }
    // Get instance field reference: private System.Action WhenBodyPoseUpdated
    [[deprecated("Use field access instead!")]] ::System::Action*& dyn_WhenBodyPoseUpdated();
    // Get instance field reference: private UnityEngine.Object _poseA
    [[deprecated("Use field access instead!")]] ::UnityEngine::Object*& dyn__poseA();
    // Get instance field reference: private Oculus.Interaction.Body.PoseDetection.IBodyPose PoseA
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Body::PoseDetection::IBodyPose*& dyn_PoseA();
    // Get instance field reference: private UnityEngine.Object _poseB
    [[deprecated("Use field access instead!")]] ::UnityEngine::Object*& dyn__poseB();
    // Get instance field reference: private Oculus.Interaction.Body.PoseDetection.IBodyPose PoseB
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Body::PoseDetection::IBodyPose*& dyn_PoseB();
    // Get instance field reference: private Oculus.Interaction.Body.Samples.BodyPoseSwitcher/PoseSource _source
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::PoseSource& dyn__source();
    // Get instance field reference: protected System.Boolean _started
    [[deprecated("Use field access instead!")]] bool& dyn__started();
    // public System.Void add_WhenBodyPoseUpdated(System.Action value)
    // Offset: 0x47A390C
    void add_WhenBodyPoseUpdated(::System::Action* value);
    // public System.Void remove_WhenBodyPoseUpdated(System.Action value)
    // Offset: 0x47A39A8
    void remove_WhenBodyPoseUpdated(::System::Action* value);
    // public Oculus.Interaction.Body.Input.ISkeletonMapping get_SkeletonMapping()
    // Offset: 0x47A3A44
    ::Oculus::Interaction::Body::Input::ISkeletonMapping* get_SkeletonMapping();
    // public System.Boolean GetJointPoseFromRoot(Oculus.Interaction.Body.Input.BodyJointId bodyJointId, out UnityEngine.Pose pose)
    // Offset: 0x47A3B18
    bool GetJointPoseFromRoot(::Oculus::Interaction::Body::Input::BodyJointId bodyJointId, ByRef<::UnityEngine::Pose> pose);
    // public System.Boolean GetJointPoseLocal(Oculus.Interaction.Body.Input.BodyJointId bodyJointId, out UnityEngine.Pose pose)
    // Offset: 0x47A3BE8
    bool GetJointPoseLocal(::Oculus::Interaction::Body::Input::BodyJointId bodyJointId, ByRef<::UnityEngine::Pose> pose);
    // public Oculus.Interaction.Body.Samples.BodyPoseSwitcher/PoseSource get_Source()
    // Offset: 0x47A3CB8
    ::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::PoseSource get_Source();
    // public System.Void set_Source(Oculus.Interaction.Body.Samples.BodyPoseSwitcher/PoseSource value)
    // Offset: 0x47A3CC0
    void set_Source(::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::PoseSource value);
    // public System.Void UsePoseA()
    // Offset: 0x47A3CFC
    void UsePoseA();
    // public System.Void UsePoseB()
    // Offset: 0x47A3D04
    void UsePoseB();
    // protected System.Void Awake()
    // Offset: 0x47A3D0C
    void Awake();
    // protected System.Void Start()
    // Offset: 0x47A3DAC
    void Start();
    // protected System.Void OnEnable()
    // Offset: 0x47A3DE4
    void OnEnable();
    // protected System.Void OnDisable()
    // Offset: 0x47A3F8C
    void OnDisable();
    // private System.Void OnPoseUpdated(Oculus.Interaction.Body.Samples.BodyPoseSwitcher/PoseSource source)
    // Offset: 0x47A413C
    void OnPoseUpdated(::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::PoseSource source);
    // private Oculus.Interaction.Body.PoseDetection.IBodyPose GetPose()
    // Offset: 0x47A3AFC
    ::Oculus::Interaction::Body::PoseDetection::IBodyPose* GetPose();
    // public System.Void .ctor()
    // Offset: 0x47A4174
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BodyPoseSwitcher* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BodyPoseSwitcher*, creationType>()));
    }
    // private System.Void <OnEnable>b__21_0()
    // Offset: 0x47A426C
    void $OnEnable$b__21_0();
    // private System.Void <OnEnable>b__21_1()
    // Offset: 0x47A42A0
    void $OnEnable$b__21_1();
    // private System.Void <OnDisable>b__22_0()
    // Offset: 0x47A42D8
    void $OnDisable$b__22_0();
    // private System.Void <OnDisable>b__22_1()
    // Offset: 0x47A430C
    void $OnDisable$b__22_1();
  }; // Oculus.Interaction.Body.Samples.BodyPoseSwitcher
  #pragma pack(pop)
  static check_size<sizeof(BodyPoseSwitcher), 76 + sizeof(bool)> __Oculus_Interaction_Body_Samples_BodyPoseSwitcherSizeCheck;
  static_assert(sizeof(BodyPoseSwitcher) == 0x4D);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::PoseSource, "Oculus.Interaction.Body.Samples", "BodyPoseSwitcher/PoseSource");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::Body::Samples::BodyPoseSwitcher::add_WhenBodyPoseUpdated
// Il2CppName: add_WhenBodyPoseUpdated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::Samples::BodyPoseSwitcher::*)(::System::Action*)>(&Oculus::Interaction::Body::Samples::BodyPoseSwitcher::add_WhenBodyPoseUpdated)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Samples::BodyPoseSwitcher*), "add_WhenBodyPoseUpdated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Samples::BodyPoseSwitcher::remove_WhenBodyPoseUpdated
// Il2CppName: remove_WhenBodyPoseUpdated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::Samples::BodyPoseSwitcher::*)(::System::Action*)>(&Oculus::Interaction::Body::Samples::BodyPoseSwitcher::remove_WhenBodyPoseUpdated)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Samples::BodyPoseSwitcher*), "remove_WhenBodyPoseUpdated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Samples::BodyPoseSwitcher::get_SkeletonMapping
// Il2CppName: get_SkeletonMapping
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::Body::Input::ISkeletonMapping* (Oculus::Interaction::Body::Samples::BodyPoseSwitcher::*)()>(&Oculus::Interaction::Body::Samples::BodyPoseSwitcher::get_SkeletonMapping)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Samples::BodyPoseSwitcher*), "get_SkeletonMapping", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Samples::BodyPoseSwitcher::GetJointPoseFromRoot
// Il2CppName: GetJointPoseFromRoot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Body::Samples::BodyPoseSwitcher::*)(::Oculus::Interaction::Body::Input::BodyJointId, ByRef<::UnityEngine::Pose>)>(&Oculus::Interaction::Body::Samples::BodyPoseSwitcher::GetJointPoseFromRoot)> {
  static const MethodInfo* get() {
    static auto* bodyJointId = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Body.Input", "BodyJointId")->byval_arg;
    static auto* pose = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Samples::BodyPoseSwitcher*), "GetJointPoseFromRoot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bodyJointId, pose});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Samples::BodyPoseSwitcher::GetJointPoseLocal
// Il2CppName: GetJointPoseLocal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Body::Samples::BodyPoseSwitcher::*)(::Oculus::Interaction::Body::Input::BodyJointId, ByRef<::UnityEngine::Pose>)>(&Oculus::Interaction::Body::Samples::BodyPoseSwitcher::GetJointPoseLocal)> {
  static const MethodInfo* get() {
    static auto* bodyJointId = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Body.Input", "BodyJointId")->byval_arg;
    static auto* pose = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Samples::BodyPoseSwitcher*), "GetJointPoseLocal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bodyJointId, pose});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Samples::BodyPoseSwitcher::get_Source
// Il2CppName: get_Source
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::PoseSource (Oculus::Interaction::Body::Samples::BodyPoseSwitcher::*)()>(&Oculus::Interaction::Body::Samples::BodyPoseSwitcher::get_Source)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Samples::BodyPoseSwitcher*), "get_Source", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Samples::BodyPoseSwitcher::set_Source
// Il2CppName: set_Source
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::Samples::BodyPoseSwitcher::*)(::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::PoseSource)>(&Oculus::Interaction::Body::Samples::BodyPoseSwitcher::set_Source)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Body.Samples", "BodyPoseSwitcher/PoseSource")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Samples::BodyPoseSwitcher*), "set_Source", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Samples::BodyPoseSwitcher::UsePoseA
// Il2CppName: UsePoseA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::Samples::BodyPoseSwitcher::*)()>(&Oculus::Interaction::Body::Samples::BodyPoseSwitcher::UsePoseA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Samples::BodyPoseSwitcher*), "UsePoseA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Samples::BodyPoseSwitcher::UsePoseB
// Il2CppName: UsePoseB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::Samples::BodyPoseSwitcher::*)()>(&Oculus::Interaction::Body::Samples::BodyPoseSwitcher::UsePoseB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Samples::BodyPoseSwitcher*), "UsePoseB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Samples::BodyPoseSwitcher::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::Samples::BodyPoseSwitcher::*)()>(&Oculus::Interaction::Body::Samples::BodyPoseSwitcher::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Samples::BodyPoseSwitcher*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Samples::BodyPoseSwitcher::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::Samples::BodyPoseSwitcher::*)()>(&Oculus::Interaction::Body::Samples::BodyPoseSwitcher::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Samples::BodyPoseSwitcher*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Samples::BodyPoseSwitcher::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::Samples::BodyPoseSwitcher::*)()>(&Oculus::Interaction::Body::Samples::BodyPoseSwitcher::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Samples::BodyPoseSwitcher*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Samples::BodyPoseSwitcher::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::Samples::BodyPoseSwitcher::*)()>(&Oculus::Interaction::Body::Samples::BodyPoseSwitcher::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Samples::BodyPoseSwitcher*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Samples::BodyPoseSwitcher::OnPoseUpdated
// Il2CppName: OnPoseUpdated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::Samples::BodyPoseSwitcher::*)(::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::PoseSource)>(&Oculus::Interaction::Body::Samples::BodyPoseSwitcher::OnPoseUpdated)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Body.Samples", "BodyPoseSwitcher/PoseSource")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Samples::BodyPoseSwitcher*), "OnPoseUpdated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Samples::BodyPoseSwitcher::GetPose
// Il2CppName: GetPose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::Body::PoseDetection::IBodyPose* (Oculus::Interaction::Body::Samples::BodyPoseSwitcher::*)()>(&Oculus::Interaction::Body::Samples::BodyPoseSwitcher::GetPose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Samples::BodyPoseSwitcher*), "GetPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Samples::BodyPoseSwitcher::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Oculus::Interaction::Body::Samples::BodyPoseSwitcher::$OnEnable$b__21_0
// Il2CppName: <OnEnable>b__21_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::Samples::BodyPoseSwitcher::*)()>(&Oculus::Interaction::Body::Samples::BodyPoseSwitcher::$OnEnable$b__21_0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Samples::BodyPoseSwitcher*), "<OnEnable>b__21_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Samples::BodyPoseSwitcher::$OnEnable$b__21_1
// Il2CppName: <OnEnable>b__21_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::Samples::BodyPoseSwitcher::*)()>(&Oculus::Interaction::Body::Samples::BodyPoseSwitcher::$OnEnable$b__21_1)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Samples::BodyPoseSwitcher*), "<OnEnable>b__21_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Samples::BodyPoseSwitcher::$OnDisable$b__22_0
// Il2CppName: <OnDisable>b__22_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::Samples::BodyPoseSwitcher::*)()>(&Oculus::Interaction::Body::Samples::BodyPoseSwitcher::$OnDisable$b__22_0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Samples::BodyPoseSwitcher*), "<OnDisable>b__22_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::Samples::BodyPoseSwitcher::$OnDisable$b__22_1
// Il2CppName: <OnDisable>b__22_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::Samples::BodyPoseSwitcher::*)()>(&Oculus::Interaction::Body::Samples::BodyPoseSwitcher::$OnDisable$b__22_1)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::Samples::BodyPoseSwitcher*), "<OnDisable>b__22_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
