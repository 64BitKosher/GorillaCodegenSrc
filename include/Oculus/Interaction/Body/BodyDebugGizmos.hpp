// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.Body.SkeletonDebugGizmos
#include "Oculus/Interaction/Body/SkeletonDebugGizmos.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction::Body
namespace Oculus::Interaction::Body {
  // Skipping declaration: CoordSpace because it is already included!
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Object because it is already included!
  // Forward declaring type: Pose
  struct Pose;
}
// Forward declaring namespace: Oculus::Interaction::Body::Input
namespace Oculus::Interaction::Body::Input {
  // Forward declaring type: IBody
  class IBody;
  // Forward declaring type: BodyJointId
  struct BodyJointId;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.Body
namespace Oculus::Interaction::Body {
  // Forward declaring type: BodyDebugGizmos
  class BodyDebugGizmos;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::Body::BodyDebugGizmos);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::Body::BodyDebugGizmos*, "Oculus.Interaction.Body", "BodyDebugGizmos");
// Type namespace: Oculus.Interaction.Body
namespace Oculus::Interaction::Body {
  // Size: 0x5D
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.Body.BodyDebugGizmos
  // [TokenAttribute] Offset: FFFFFFFF
  class BodyDebugGizmos : public ::Oculus::Interaction::Body::SkeletonDebugGizmos {
    public:
    // Nested type: ::Oculus::Interaction::Body::BodyDebugGizmos::CoordSpace
    struct CoordSpace;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: Oculus.Interaction.Body.BodyDebugGizmos/CoordSpace
    // [TokenAttribute] Offset: FFFFFFFF
    struct CoordSpace/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: CoordSpace
      constexpr CoordSpace(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public Oculus.Interaction.Body.BodyDebugGizmos/CoordSpace World
      static constexpr const int World = 0;
      // Get static field: static public Oculus.Interaction.Body.BodyDebugGizmos/CoordSpace World
      static ::Oculus::Interaction::Body::BodyDebugGizmos::CoordSpace _get_World();
      // Set static field: static public Oculus.Interaction.Body.BodyDebugGizmos/CoordSpace World
      static void _set_World(::Oculus::Interaction::Body::BodyDebugGizmos::CoordSpace value);
      // static field const value: static public Oculus.Interaction.Body.BodyDebugGizmos/CoordSpace Local
      static constexpr const int Local = 1;
      // Get static field: static public Oculus.Interaction.Body.BodyDebugGizmos/CoordSpace Local
      static ::Oculus::Interaction::Body::BodyDebugGizmos::CoordSpace _get_Local();
      // Set static field: static public Oculus.Interaction.Body.BodyDebugGizmos/CoordSpace Local
      static void _set_Local(::Oculus::Interaction::Body::BodyDebugGizmos::CoordSpace value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // Oculus.Interaction.Body.BodyDebugGizmos/CoordSpace
    #pragma pack(pop)
    static check_size<sizeof(BodyDebugGizmos::CoordSpace), 0 + sizeof(int)> __Oculus_Interaction_Body_BodyDebugGizmos_CoordSpaceSizeCheck;
    static_assert(sizeof(BodyDebugGizmos::CoordSpace) == 0x4);
    public:
    // private UnityEngine.Object _body
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::Object* body;
    // Field size check
    static_assert(sizeof(::UnityEngine::Object*) == 0x8);
    // private Oculus.Interaction.Body.Input.IBody Body
    // Size: 0x8
    // Offset: 0x50
    ::Oculus::Interaction::Body::Input::IBody* Body;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Body::Input::IBody*) == 0x8);
    // private Oculus.Interaction.Body.BodyDebugGizmos/CoordSpace _space
    // Size: 0x4
    // Offset: 0x58
    ::Oculus::Interaction::Body::BodyDebugGizmos::CoordSpace space;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Body::BodyDebugGizmos::CoordSpace) == 0x4);
    // protected System.Boolean _started
    // Size: 0x1
    // Offset: 0x5C
    bool started;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get instance field reference: private UnityEngine.Object _body
    [[deprecated("Use field access instead!")]] ::UnityEngine::Object*& dyn__body();
    // Get instance field reference: private Oculus.Interaction.Body.Input.IBody Body
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Body::Input::IBody*& dyn_Body();
    // Get instance field reference: private Oculus.Interaction.Body.BodyDebugGizmos/CoordSpace _space
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Body::BodyDebugGizmos::CoordSpace& dyn__space();
    // Get instance field reference: protected System.Boolean _started
    [[deprecated("Use field access instead!")]] bool& dyn__started();
    // public Oculus.Interaction.Body.BodyDebugGizmos/CoordSpace get_Space()
    // Offset: 0x4841014
    ::Oculus::Interaction::Body::BodyDebugGizmos::CoordSpace get_Space();
    // public System.Void set_Space(Oculus.Interaction.Body.BodyDebugGizmos/CoordSpace value)
    // Offset: 0x484101C
    void set_Space(::Oculus::Interaction::Body::BodyDebugGizmos::CoordSpace value);
    // protected System.Void Awake()
    // Offset: 0x4841024
    void Awake();
    // protected System.Void Start()
    // Offset: 0x484108C
    void Start();
    // protected System.Void OnEnable()
    // Offset: 0x48410C4
    void OnEnable();
    // protected System.Void OnDisable()
    // Offset: 0x48411C4
    void OnDisable();
    // private Oculus.Interaction.Body.SkeletonDebugGizmos/VisibilityFlags GetModifiedDrawFlags()
    // Offset: 0x48415EC
    ::Oculus::Interaction::Body::SkeletonDebugGizmos::VisibilityFlags GetModifiedDrawFlags();
    // private System.Void HandleBodyUpdated()
    // Offset: 0x48416A0
    void HandleBodyUpdated();
    // public System.Void InjectAllBodyJointDebugGizmos(Oculus.Interaction.Body.Input.IBody body)
    // Offset: 0x4841B24
    void InjectAllBodyJointDebugGizmos(::Oculus::Interaction::Body::Input::IBody* body);
    // public System.Void InjectBody(Oculus.Interaction.Body.Input.IBody body)
    // Offset: 0x4841B28
    void InjectBody(::Oculus::Interaction::Body::Input::IBody* body);
    // protected override System.Boolean TryGetWorldJointPose(Oculus.Interaction.Body.Input.BodyJointId jointId, out UnityEngine.Pose pose)
    // Offset: 0x48412C4
    // Implemented from: Oculus.Interaction.Body.SkeletonDebugGizmos
    // Base method: System.Boolean SkeletonDebugGizmos::TryGetWorldJointPose(Oculus.Interaction.Body.Input.BodyJointId jointId, out UnityEngine.Pose pose)
    bool TryGetWorldJointPose(::Oculus::Interaction::Body::Input::BodyJointId jointId, ByRef<::UnityEngine::Pose> pose);
    // protected override System.Boolean TryGetParentJointId(Oculus.Interaction.Body.Input.BodyJointId jointId, out Oculus.Interaction.Body.Input.BodyJointId parent)
    // Offset: 0x48414BC
    // Implemented from: Oculus.Interaction.Body.SkeletonDebugGizmos
    // Base method: System.Boolean SkeletonDebugGizmos::TryGetParentJointId(Oculus.Interaction.Body.Input.BodyJointId jointId, out Oculus.Interaction.Body.Input.BodyJointId parent)
    bool TryGetParentJointId(::Oculus::Interaction::Body::Input::BodyJointId jointId, ByRef<::Oculus::Interaction::Body::Input::BodyJointId> parent);
    // public System.Void .ctor()
    // Offset: 0x4841BF8
    // Implemented from: Oculus.Interaction.Body.SkeletonDebugGizmos
    // Base method: System.Void SkeletonDebugGizmos::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BodyDebugGizmos* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::BodyDebugGizmos::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BodyDebugGizmos*, creationType>()));
    }
  }; // Oculus.Interaction.Body.BodyDebugGizmos
  #pragma pack(pop)
  static check_size<sizeof(BodyDebugGizmos), 92 + sizeof(bool)> __Oculus_Interaction_Body_BodyDebugGizmosSizeCheck;
  static_assert(sizeof(BodyDebugGizmos) == 0x5D);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::Body::BodyDebugGizmos::CoordSpace, "Oculus.Interaction.Body", "BodyDebugGizmos/CoordSpace");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::Body::BodyDebugGizmos::get_Space
// Il2CppName: get_Space
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::Body::BodyDebugGizmos::CoordSpace (Oculus::Interaction::Body::BodyDebugGizmos::*)()>(&Oculus::Interaction::Body::BodyDebugGizmos::get_Space)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::BodyDebugGizmos*), "get_Space", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::BodyDebugGizmos::set_Space
// Il2CppName: set_Space
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::BodyDebugGizmos::*)(::Oculus::Interaction::Body::BodyDebugGizmos::CoordSpace)>(&Oculus::Interaction::Body::BodyDebugGizmos::set_Space)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Body", "BodyDebugGizmos/CoordSpace")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::BodyDebugGizmos*), "set_Space", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::BodyDebugGizmos::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::BodyDebugGizmos::*)()>(&Oculus::Interaction::Body::BodyDebugGizmos::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::BodyDebugGizmos*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::BodyDebugGizmos::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::BodyDebugGizmos::*)()>(&Oculus::Interaction::Body::BodyDebugGizmos::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::BodyDebugGizmos*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::BodyDebugGizmos::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::BodyDebugGizmos::*)()>(&Oculus::Interaction::Body::BodyDebugGizmos::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::BodyDebugGizmos*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::BodyDebugGizmos::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::BodyDebugGizmos::*)()>(&Oculus::Interaction::Body::BodyDebugGizmos::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::BodyDebugGizmos*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::BodyDebugGizmos::GetModifiedDrawFlags
// Il2CppName: GetModifiedDrawFlags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::Body::SkeletonDebugGizmos::VisibilityFlags (Oculus::Interaction::Body::BodyDebugGizmos::*)()>(&Oculus::Interaction::Body::BodyDebugGizmos::GetModifiedDrawFlags)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::BodyDebugGizmos*), "GetModifiedDrawFlags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::BodyDebugGizmos::HandleBodyUpdated
// Il2CppName: HandleBodyUpdated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::BodyDebugGizmos::*)()>(&Oculus::Interaction::Body::BodyDebugGizmos::HandleBodyUpdated)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::BodyDebugGizmos*), "HandleBodyUpdated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::BodyDebugGizmos::InjectAllBodyJointDebugGizmos
// Il2CppName: InjectAllBodyJointDebugGizmos
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::BodyDebugGizmos::*)(::Oculus::Interaction::Body::Input::IBody*)>(&Oculus::Interaction::Body::BodyDebugGizmos::InjectAllBodyJointDebugGizmos)> {
  static const MethodInfo* get() {
    static auto* body = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Body.Input", "IBody")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::BodyDebugGizmos*), "InjectAllBodyJointDebugGizmos", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{body});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::BodyDebugGizmos::InjectBody
// Il2CppName: InjectBody
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Body::BodyDebugGizmos::*)(::Oculus::Interaction::Body::Input::IBody*)>(&Oculus::Interaction::Body::BodyDebugGizmos::InjectBody)> {
  static const MethodInfo* get() {
    static auto* body = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Body.Input", "IBody")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::BodyDebugGizmos*), "InjectBody", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{body});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::BodyDebugGizmos::TryGetWorldJointPose
// Il2CppName: TryGetWorldJointPose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Body::BodyDebugGizmos::*)(::Oculus::Interaction::Body::Input::BodyJointId, ByRef<::UnityEngine::Pose>)>(&Oculus::Interaction::Body::BodyDebugGizmos::TryGetWorldJointPose)> {
  static const MethodInfo* get() {
    static auto* jointId = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Body.Input", "BodyJointId")->byval_arg;
    static auto* pose = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::BodyDebugGizmos*), "TryGetWorldJointPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{jointId, pose});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::BodyDebugGizmos::TryGetParentJointId
// Il2CppName: TryGetParentJointId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Body::BodyDebugGizmos::*)(::Oculus::Interaction::Body::Input::BodyJointId, ByRef<::Oculus::Interaction::Body::Input::BodyJointId>)>(&Oculus::Interaction::Body::BodyDebugGizmos::TryGetParentJointId)> {
  static const MethodInfo* get() {
    static auto* jointId = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Body.Input", "BodyJointId")->byval_arg;
    static auto* parent = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Body.Input", "BodyJointId")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Body::BodyDebugGizmos*), "TryGetParentJointId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{jointId, parent});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Body::BodyDebugGizmos::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
