// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction::HandGrab
namespace Oculus::Interaction::HandGrab {
  // Forward declaring type: HandGrabInteractable
  class HandGrabInteractable;
  // Forward declaring type: HandGrabPose
  class HandGrabPose;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.HandGrab
namespace Oculus::Interaction::HandGrab {
  // Forward declaring type: HandGrabUtils
  class HandGrabUtils;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::HandGrab::HandGrabUtils);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::HandGrab::HandGrabUtils*, "Oculus.Interaction.HandGrab", "HandGrabUtils");
// Type namespace: Oculus.Interaction.HandGrab
namespace Oculus::Interaction::HandGrab {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.HandGrab.HandGrabUtils
  // [TokenAttribute] Offset: FFFFFFFF
  class HandGrabUtils : public ::Il2CppObject {
    public:
    // Nested type: ::Oculus::Interaction::HandGrab::HandGrabUtils::HandGrabInteractableData
    struct HandGrabInteractableData;
    // Nested type: ::Oculus::Interaction::HandGrab::HandGrabUtils::HandGrabPoseData
    struct HandGrabPoseData;
    // static public Oculus.Interaction.HandGrab.HandGrabInteractable CreateHandGrabInteractable(UnityEngine.Transform parent, System.String name)
    // Offset: 0x4829B70
    static ::Oculus::Interaction::HandGrab::HandGrabInteractable* CreateHandGrabInteractable(::UnityEngine::Transform* parent, ::StringW name);
    // static public Oculus.Interaction.HandGrab.HandGrabPose CreateHandGrabPose(UnityEngine.Transform parent, UnityEngine.Transform relativeTo)
    // Offset: 0x4829CE0
    static ::Oculus::Interaction::HandGrab::HandGrabPose* CreateHandGrabPose(::UnityEngine::Transform* parent, ::UnityEngine::Transform* relativeTo);
    // static public System.Void MirrorHandGrabPose(Oculus.Interaction.HandGrab.HandGrabPose originalPoint, Oculus.Interaction.HandGrab.HandGrabPose mirrorPoint, UnityEngine.Transform relativeTo)
    // Offset: 0x4829DB8
    static void MirrorHandGrabPose(::Oculus::Interaction::HandGrab::HandGrabPose* originalPoint, ::Oculus::Interaction::HandGrab::HandGrabPose* mirrorPoint, ::UnityEngine::Transform* relativeTo);
    // static private Oculus.Interaction.HandGrab.HandGrabUtils/HandGrabPoseData SaveHandGrabPoseData(Oculus.Interaction.HandGrab.HandGrabPose handGrabPose)
    // Offset: 0x482A150
    static ::Oculus::Interaction::HandGrab::HandGrabUtils::HandGrabPoseData SaveHandGrabPoseData(::Oculus::Interaction::HandGrab::HandGrabPose* handGrabPose);
    // static private System.Void LoadHandGrabPoseData(Oculus.Interaction.HandGrab.HandGrabPose handGrabPose, Oculus.Interaction.HandGrab.HandGrabUtils/HandGrabPoseData data, UnityEngine.Transform relativeTo)
    // Offset: 0x482A22C
    static void LoadHandGrabPoseData(::Oculus::Interaction::HandGrab::HandGrabPose* handGrabPose, ::Oculus::Interaction::HandGrab::HandGrabUtils::HandGrabPoseData data, ::UnityEngine::Transform* relativeTo);
    // static public Oculus.Interaction.HandGrab.HandGrabUtils/HandGrabInteractableData SaveData(Oculus.Interaction.HandGrab.HandGrabInteractable interactable)
    // Offset: 0x482A464
    static ::Oculus::Interaction::HandGrab::HandGrabUtils::HandGrabInteractableData SaveData(::Oculus::Interaction::HandGrab::HandGrabInteractable* interactable);
    // static public System.Void LoadData(Oculus.Interaction.HandGrab.HandGrabInteractable interactable, Oculus.Interaction.HandGrab.HandGrabUtils/HandGrabInteractableData data)
    // Offset: 0x482A748
    static void LoadData(::Oculus::Interaction::HandGrab::HandGrabInteractable* interactable, ::Oculus::Interaction::HandGrab::HandGrabUtils::HandGrabInteractableData data);
    // static public Oculus.Interaction.HandGrab.HandGrabPose LoadHandGrabPose(Oculus.Interaction.HandGrab.HandGrabInteractable interactable, Oculus.Interaction.HandGrab.HandGrabUtils/HandGrabPoseData poseData)
    // Offset: 0x482A9F8
    static ::Oculus::Interaction::HandGrab::HandGrabPose* LoadHandGrabPose(::Oculus::Interaction::HandGrab::HandGrabInteractable* interactable, ::Oculus::Interaction::HandGrab::HandGrabUtils::HandGrabPoseData poseData);
  }; // Oculus.Interaction.HandGrab.HandGrabUtils
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabUtils::CreateHandGrabInteractable
// Il2CppName: CreateHandGrabInteractable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::HandGrab::HandGrabInteractable* (*)(::UnityEngine::Transform*, ::StringW)>(&Oculus::Interaction::HandGrab::HandGrabUtils::CreateHandGrabInteractable)> {
  static const MethodInfo* get() {
    static auto* parent = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabUtils*), "CreateHandGrabInteractable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parent, name});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabUtils::CreateHandGrabPose
// Il2CppName: CreateHandGrabPose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::HandGrab::HandGrabPose* (*)(::UnityEngine::Transform*, ::UnityEngine::Transform*)>(&Oculus::Interaction::HandGrab::HandGrabUtils::CreateHandGrabPose)> {
  static const MethodInfo* get() {
    static auto* parent = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* relativeTo = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabUtils*), "CreateHandGrabPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parent, relativeTo});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabUtils::MirrorHandGrabPose
// Il2CppName: MirrorHandGrabPose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Oculus::Interaction::HandGrab::HandGrabPose*, ::Oculus::Interaction::HandGrab::HandGrabPose*, ::UnityEngine::Transform*)>(&Oculus::Interaction::HandGrab::HandGrabUtils::MirrorHandGrabPose)> {
  static const MethodInfo* get() {
    static auto* originalPoint = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "HandGrabPose")->byval_arg;
    static auto* mirrorPoint = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "HandGrabPose")->byval_arg;
    static auto* relativeTo = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabUtils*), "MirrorHandGrabPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{originalPoint, mirrorPoint, relativeTo});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabUtils::SaveHandGrabPoseData
// Il2CppName: SaveHandGrabPoseData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::HandGrab::HandGrabUtils::HandGrabPoseData (*)(::Oculus::Interaction::HandGrab::HandGrabPose*)>(&Oculus::Interaction::HandGrab::HandGrabUtils::SaveHandGrabPoseData)> {
  static const MethodInfo* get() {
    static auto* handGrabPose = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "HandGrabPose")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabUtils*), "SaveHandGrabPoseData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handGrabPose});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabUtils::LoadHandGrabPoseData
// Il2CppName: LoadHandGrabPoseData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Oculus::Interaction::HandGrab::HandGrabPose*, ::Oculus::Interaction::HandGrab::HandGrabUtils::HandGrabPoseData, ::UnityEngine::Transform*)>(&Oculus::Interaction::HandGrab::HandGrabUtils::LoadHandGrabPoseData)> {
  static const MethodInfo* get() {
    static auto* handGrabPose = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "HandGrabPose")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "HandGrabUtils/HandGrabPoseData")->byval_arg;
    static auto* relativeTo = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabUtils*), "LoadHandGrabPoseData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handGrabPose, data, relativeTo});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabUtils::SaveData
// Il2CppName: SaveData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::HandGrab::HandGrabUtils::HandGrabInteractableData (*)(::Oculus::Interaction::HandGrab::HandGrabInteractable*)>(&Oculus::Interaction::HandGrab::HandGrabUtils::SaveData)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "HandGrabInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabUtils*), "SaveData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabUtils::LoadData
// Il2CppName: LoadData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Oculus::Interaction::HandGrab::HandGrabInteractable*, ::Oculus::Interaction::HandGrab::HandGrabUtils::HandGrabInteractableData)>(&Oculus::Interaction::HandGrab::HandGrabUtils::LoadData)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "HandGrabInteractable")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "HandGrabUtils/HandGrabInteractableData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabUtils*), "LoadData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable, data});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabUtils::LoadHandGrabPose
// Il2CppName: LoadHandGrabPose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::HandGrab::HandGrabPose* (*)(::Oculus::Interaction::HandGrab::HandGrabInteractable*, ::Oculus::Interaction::HandGrab::HandGrabUtils::HandGrabPoseData)>(&Oculus::Interaction::HandGrab::HandGrabUtils::LoadHandGrabPose)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "HandGrabInteractable")->byval_arg;
    static auto* poseData = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "HandGrabUtils/HandGrabPoseData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabUtils*), "LoadHandGrabPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable, poseData});
  }
};
