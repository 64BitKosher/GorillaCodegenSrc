// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.IMovement
#include "Oculus/Interaction/IMovement.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: Oculus.Interaction.HandGrab
namespace Oculus::Interaction::HandGrab {
  // Forward declaring type: MoveFromTarget
  class MoveFromTarget;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::HandGrab::MoveFromTarget);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::HandGrab::MoveFromTarget*, "Oculus.Interaction.HandGrab", "MoveFromTarget");
// Type namespace: Oculus.Interaction.HandGrab
namespace Oculus::Interaction::HandGrab {
  // Size: 0x2C
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.HandGrab.MoveFromTarget
  // [TokenAttribute] Offset: FFFFFFFF
  class MoveFromTarget : public ::Il2CppObject/*, public ::Oculus::Interaction::IMovement*/ {
    public:
    public:
    // private UnityEngine.Pose <Pose>k__BackingField
    // Size: 0x1C
    // Offset: 0x10
    ::UnityEngine::Pose Pose;
    // Field size check
    static_assert(sizeof(::UnityEngine::Pose) == 0x1C);
    public:
    // Creating interface conversion operator: operator ::Oculus::Interaction::IMovement
    operator ::Oculus::Interaction::IMovement() noexcept {
      return *reinterpret_cast<::Oculus::Interaction::IMovement*>(this);
    }
    // Creating conversion operator: operator ::UnityEngine::Pose
    constexpr operator ::UnityEngine::Pose() const noexcept {
      return Pose;
    }
    // Get instance field reference: private UnityEngine.Pose <Pose>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Pose& dyn_$Pose$k__BackingField();
    // public UnityEngine.Pose get_Pose()
    // Offset: 0x482EB80
    ::UnityEngine::Pose get_Pose();
    // private System.Void set_Pose(UnityEngine.Pose value)
    // Offset: 0x482EB94
    void set_Pose(::UnityEngine::Pose value);
    // public System.Boolean get_Stopped()
    // Offset: 0x482EBB0
    bool get_Stopped();
    // public System.Void StopMovement()
    // Offset: 0x482EBB8
    void StopMovement();
    // public System.Void MoveTo(UnityEngine.Pose target)
    // Offset: 0x482EBBC
    void MoveTo(::UnityEngine::Pose target);
    // public System.Void UpdateTarget(UnityEngine.Pose target)
    // Offset: 0x482EBD8
    void UpdateTarget(::UnityEngine::Pose target);
    // public System.Void StopAndSetPose(UnityEngine.Pose source)
    // Offset: 0x482EBF4
    void StopAndSetPose(::UnityEngine::Pose source);
    // public System.Void Tick()
    // Offset: 0x482EC10
    void Tick();
    // public System.Void .ctor()
    // Offset: 0x482EAE8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MoveFromTarget* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::MoveFromTarget::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MoveFromTarget*, creationType>()));
    }
  }; // Oculus.Interaction.HandGrab.MoveFromTarget
  #pragma pack(pop)
  static check_size<sizeof(MoveFromTarget), 16 + sizeof(::UnityEngine::Pose)> __Oculus_Interaction_HandGrab_MoveFromTargetSizeCheck;
  static_assert(sizeof(MoveFromTarget) == 0x2C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::MoveFromTarget::get_Pose
// Il2CppName: get_Pose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Pose (Oculus::Interaction::HandGrab::MoveFromTarget::*)()>(&Oculus::Interaction::HandGrab::MoveFromTarget::get_Pose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::MoveFromTarget*), "get_Pose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::MoveFromTarget::set_Pose
// Il2CppName: set_Pose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::MoveFromTarget::*)(::UnityEngine::Pose)>(&Oculus::Interaction::HandGrab::MoveFromTarget::set_Pose)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::MoveFromTarget*), "set_Pose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::MoveFromTarget::get_Stopped
// Il2CppName: get_Stopped
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::HandGrab::MoveFromTarget::*)()>(&Oculus::Interaction::HandGrab::MoveFromTarget::get_Stopped)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::MoveFromTarget*), "get_Stopped", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::MoveFromTarget::StopMovement
// Il2CppName: StopMovement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::MoveFromTarget::*)()>(&Oculus::Interaction::HandGrab::MoveFromTarget::StopMovement)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::MoveFromTarget*), "StopMovement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::MoveFromTarget::MoveTo
// Il2CppName: MoveTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::MoveFromTarget::*)(::UnityEngine::Pose)>(&Oculus::Interaction::HandGrab::MoveFromTarget::MoveTo)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::MoveFromTarget*), "MoveTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::MoveFromTarget::UpdateTarget
// Il2CppName: UpdateTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::MoveFromTarget::*)(::UnityEngine::Pose)>(&Oculus::Interaction::HandGrab::MoveFromTarget::UpdateTarget)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::MoveFromTarget*), "UpdateTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::MoveFromTarget::StopAndSetPose
// Il2CppName: StopAndSetPose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::MoveFromTarget::*)(::UnityEngine::Pose)>(&Oculus::Interaction::HandGrab::MoveFromTarget::StopAndSetPose)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::MoveFromTarget*), "StopAndSetPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::MoveFromTarget::Tick
// Il2CppName: Tick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::MoveFromTarget::*)()>(&Oculus::Interaction::HandGrab::MoveFromTarget::Tick)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::MoveFromTarget*), "Tick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::MoveFromTarget::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
