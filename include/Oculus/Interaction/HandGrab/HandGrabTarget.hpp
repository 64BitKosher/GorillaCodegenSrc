// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.HandGrab.HandAlignType
#include "Oculus/Interaction/HandGrab/HandAlignType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction::HandGrab
namespace Oculus::Interaction::HandGrab {
  // Forward declaring type: HandPose
  class HandPose;
  // Forward declaring type: HandGrabResult
  class HandGrabResult;
  // Skipping declaration: GrabAnchor because it is already included!
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: Pose
  struct Pose;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.HandGrab
namespace Oculus::Interaction::HandGrab {
  // Forward declaring type: HandGrabTarget
  class HandGrabTarget;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::HandGrab::HandGrabTarget);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::HandGrab::HandGrabTarget*, "Oculus.Interaction.HandGrab", "HandGrabTarget");
// Type namespace: Oculus.Interaction.HandGrab
namespace Oculus::Interaction::HandGrab {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.HandGrab.HandGrabTarget
  // [TokenAttribute] Offset: FFFFFFFF
  class HandGrabTarget : public ::Il2CppObject {
    public:
    // Nested type: ::Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor
    struct GrabAnchor;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: Oculus.Interaction.HandGrab.HandGrabTarget/GrabAnchor
    // [TokenAttribute] Offset: FFFFFFFF
    struct GrabAnchor/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: GrabAnchor
      constexpr GrabAnchor(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public Oculus.Interaction.HandGrab.HandGrabTarget/GrabAnchor None
      static constexpr const int None = 0;
      // Get static field: static public Oculus.Interaction.HandGrab.HandGrabTarget/GrabAnchor None
      static ::Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor _get_None();
      // Set static field: static public Oculus.Interaction.HandGrab.HandGrabTarget/GrabAnchor None
      static void _set_None(::Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor value);
      // static field const value: static public Oculus.Interaction.HandGrab.HandGrabTarget/GrabAnchor Wrist
      static constexpr const int Wrist = 1;
      // Get static field: static public Oculus.Interaction.HandGrab.HandGrabTarget/GrabAnchor Wrist
      static ::Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor _get_Wrist();
      // Set static field: static public Oculus.Interaction.HandGrab.HandGrabTarget/GrabAnchor Wrist
      static void _set_Wrist(::Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor value);
      // static field const value: static public Oculus.Interaction.HandGrab.HandGrabTarget/GrabAnchor Pinch
      static constexpr const int Pinch = 2;
      // Get static field: static public Oculus.Interaction.HandGrab.HandGrabTarget/GrabAnchor Pinch
      static ::Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor _get_Pinch();
      // Set static field: static public Oculus.Interaction.HandGrab.HandGrabTarget/GrabAnchor Pinch
      static void _set_Pinch(::Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor value);
      // static field const value: static public Oculus.Interaction.HandGrab.HandGrabTarget/GrabAnchor Palm
      static constexpr const int Palm = 3;
      // Get static field: static public Oculus.Interaction.HandGrab.HandGrabTarget/GrabAnchor Palm
      static ::Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor _get_Palm();
      // Set static field: static public Oculus.Interaction.HandGrab.HandGrabTarget/GrabAnchor Palm
      static void _set_Palm(::Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // Oculus.Interaction.HandGrab.HandGrabTarget/GrabAnchor
    #pragma pack(pop)
    static check_size<sizeof(HandGrabTarget::GrabAnchor), 0 + sizeof(int)> __Oculus_Interaction_HandGrab_HandGrabTarget_GrabAnchorSizeCheck;
    static_assert(sizeof(HandGrabTarget::GrabAnchor) == 0x4);
    public:
    // private UnityEngine.Transform _relativeTo
    // Size: 0x8
    // Offset: 0x10
    ::UnityEngine::Transform* relativeTo;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private Oculus.Interaction.HandGrab.HandGrabResult _handGrabResult
    // Size: 0x8
    // Offset: 0x18
    ::Oculus::Interaction::HandGrab::HandGrabResult* handGrabResult;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::HandGrab::HandGrabResult*) == 0x8);
    // private Oculus.Interaction.HandGrab.HandAlignType <HandAlignment>k__BackingField
    // Size: 0x4
    // Offset: 0x20
    ::Oculus::Interaction::HandGrab::HandAlignType HandAlignment;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::HandGrab::HandAlignType) == 0x4);
    // private Oculus.Interaction.HandGrab.HandGrabTarget/GrabAnchor <Anchor>k__BackingField
    // Size: 0x4
    // Offset: 0x24
    ::Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor Anchor;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor) == 0x4);
    public:
    // Get instance field reference: private UnityEngine.Transform _relativeTo
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn__relativeTo();
    // Get instance field reference: private Oculus.Interaction.HandGrab.HandGrabResult _handGrabResult
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::HandGrabResult*& dyn__handGrabResult();
    // Get instance field reference: private Oculus.Interaction.HandGrab.HandAlignType <HandAlignment>k__BackingField
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::HandAlignType& dyn_$HandAlignment$k__BackingField();
    // Get instance field reference: private Oculus.Interaction.HandGrab.HandGrabTarget/GrabAnchor <Anchor>k__BackingField
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor& dyn_$Anchor$k__BackingField();
    // public Oculus.Interaction.HandGrab.HandPose get_HandPose()
    // Offset: 0x4829AA4
    ::Oculus::Interaction::HandGrab::HandPose* get_HandPose();
    // public UnityEngine.Pose GetWorldPoseDisplaced(in UnityEngine.Pose offset)
    // Offset: 0x4829AD0
    ::UnityEngine::Pose GetWorldPoseDisplaced(ByRef<::UnityEngine::Pose> offset);
    // public Oculus.Interaction.HandGrab.HandAlignType get_HandAlignment()
    // Offset: 0x4829B50
    ::Oculus::Interaction::HandGrab::HandAlignType get_HandAlignment();
    // private System.Void set_HandAlignment(Oculus.Interaction.HandGrab.HandAlignType value)
    // Offset: 0x4829B58
    void set_HandAlignment(::Oculus::Interaction::HandGrab::HandAlignType value);
    // public Oculus.Interaction.HandGrab.HandGrabTarget/GrabAnchor get_Anchor()
    // Offset: 0x4829B60
    ::Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor get_Anchor();
    // private System.Void set_Anchor(Oculus.Interaction.HandGrab.HandGrabTarget/GrabAnchor value)
    // Offset: 0x4829B68
    void set_Anchor(::Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor value);
    // public System.Void Set(UnityEngine.Transform relativeTo, Oculus.Interaction.HandGrab.HandAlignType handAlignment, Oculus.Interaction.HandGrab.HandGrabTarget/GrabAnchor anchor, Oculus.Interaction.HandGrab.HandGrabResult handGrabResult)
    // Offset: 0x4828B70
    void Set(::UnityEngine::Transform* relativeTo, ::Oculus::Interaction::HandGrab::HandAlignType handAlignment, ::Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor anchor, ::Oculus::Interaction::HandGrab::HandGrabResult* handGrabResult);
    // public System.Void .ctor()
    // Offset: 0x4828FB4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static HandGrabTarget* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabTarget::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<HandGrabTarget*, creationType>()));
    }
  }; // Oculus.Interaction.HandGrab.HandGrabTarget
  #pragma pack(pop)
  static check_size<sizeof(HandGrabTarget), 36 + sizeof(::Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor)> __Oculus_Interaction_HandGrab_HandGrabTargetSizeCheck;
  static_assert(sizeof(HandGrabTarget) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor, "Oculus.Interaction.HandGrab", "HandGrabTarget/GrabAnchor");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabTarget::get_HandPose
// Il2CppName: get_HandPose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::HandGrab::HandPose* (Oculus::Interaction::HandGrab::HandGrabTarget::*)()>(&Oculus::Interaction::HandGrab::HandGrabTarget::get_HandPose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabTarget*), "get_HandPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabTarget::GetWorldPoseDisplaced
// Il2CppName: GetWorldPoseDisplaced
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Pose (Oculus::Interaction::HandGrab::HandGrabTarget::*)(ByRef<::UnityEngine::Pose>)>(&Oculus::Interaction::HandGrab::HandGrabTarget::GetWorldPoseDisplaced)> {
  static const MethodInfo* get() {
    static auto* offset = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabTarget*), "GetWorldPoseDisplaced", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{offset});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabTarget::get_HandAlignment
// Il2CppName: get_HandAlignment
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::HandGrab::HandAlignType (Oculus::Interaction::HandGrab::HandGrabTarget::*)()>(&Oculus::Interaction::HandGrab::HandGrabTarget::get_HandAlignment)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabTarget*), "get_HandAlignment", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabTarget::set_HandAlignment
// Il2CppName: set_HandAlignment
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::HandGrabTarget::*)(::Oculus::Interaction::HandGrab::HandAlignType)>(&Oculus::Interaction::HandGrab::HandGrabTarget::set_HandAlignment)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "HandAlignType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabTarget*), "set_HandAlignment", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabTarget::get_Anchor
// Il2CppName: get_Anchor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor (Oculus::Interaction::HandGrab::HandGrabTarget::*)()>(&Oculus::Interaction::HandGrab::HandGrabTarget::get_Anchor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabTarget*), "get_Anchor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabTarget::set_Anchor
// Il2CppName: set_Anchor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::HandGrabTarget::*)(::Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor)>(&Oculus::Interaction::HandGrab::HandGrabTarget::set_Anchor)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "HandGrabTarget/GrabAnchor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabTarget*), "set_Anchor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabTarget::Set
// Il2CppName: Set
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::HandGrabTarget::*)(::UnityEngine::Transform*, ::Oculus::Interaction::HandGrab::HandAlignType, ::Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor, ::Oculus::Interaction::HandGrab::HandGrabResult*)>(&Oculus::Interaction::HandGrab::HandGrabTarget::Set)> {
  static const MethodInfo* get() {
    static auto* relativeTo = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* handAlignment = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "HandAlignType")->byval_arg;
    static auto* anchor = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "HandGrabTarget/GrabAnchor")->byval_arg;
    static auto* handGrabResult = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "HandGrabResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabTarget*), "Set", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{relativeTo, handAlignment, anchor, handGrabResult});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabTarget::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
