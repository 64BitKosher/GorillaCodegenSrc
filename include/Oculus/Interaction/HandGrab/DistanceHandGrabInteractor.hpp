// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.PointerInteractor`2
#include "Oculus/Interaction/PointerInteractor_2.hpp"
// Including type: Oculus.Interaction.HandGrab.IHandGrabInteractor
#include "Oculus/Interaction/HandGrab/IHandGrabInteractor.hpp"
// Including type: Oculus.Interaction.IDistanceInteractor
#include "Oculus/Interaction/IDistanceInteractor.hpp"
// Including type: Oculus.Interaction.Grab.GrabTypeFlags
#include "Oculus/Interaction/Grab/GrabTypeFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction::HandGrab
namespace Oculus::Interaction::HandGrab {
  // Forward declaring type: DistanceHandGrabInteractable
  class DistanceHandGrabInteractable;
  // Forward declaring type: HandGrabResult
  class HandGrabResult;
  // Forward declaring type: HandGrabTarget
  class HandGrabTarget;
  // Forward declaring type: IHandGrabInteractable
  class IHandGrabInteractable;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Object because it is already included!
  // Forward declaring type: Transform
  class Transform;
}
// Forward declaring namespace: Oculus::Interaction::Input
namespace Oculus::Interaction::Input {
  // Forward declaring type: IHand
  class IHand;
  // Forward declaring type: HandFingerFlags
  struct HandFingerFlags;
}
// Forward declaring namespace: Oculus::Interaction::GrabAPI
namespace Oculus::Interaction::GrabAPI {
  // Forward declaring type: HandGrabAPI
  class HandGrabAPI;
}
// Forward declaring namespace: Oculus::Interaction::Throw
namespace Oculus::Interaction::Throw {
  // Forward declaring type: IVelocityCalculator
  class IVelocityCalculator;
}
// Forward declaring namespace: Oculus::Interaction
namespace Oculus::Interaction {
  // Forward declaring type: DistantCandidateComputer`2<TInteractor, TInteractable>
  template<typename TInteractor, typename TInteractable>
  class DistantCandidateComputer_2;
  // Forward declaring type: IMovement
  class IMovement;
  // Forward declaring type: IRelativeToRef
  class IRelativeToRef;
  // Skipping declaration: PointerEvent because it is already included!
}
// Completed forward declares
// Type namespace: Oculus.Interaction.HandGrab
namespace Oculus::Interaction::HandGrab {
  // Forward declaring type: DistanceHandGrabInteractor
  class DistanceHandGrabInteractor;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*, "Oculus.Interaction.HandGrab", "DistanceHandGrabInteractor");
// Type namespace: Oculus.Interaction.HandGrab
namespace Oculus::Interaction::HandGrab {
  // WARNING Size may be invalid!
  // Autogenerated type: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor
  // [TokenAttribute] Offset: FFFFFFFF
  class DistanceHandGrabInteractor : public ::Oculus::Interaction::PointerInteractor_2<::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*, ::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*>/*, public ::Oculus::Interaction::HandGrab::IHandGrabInteractor, public ::Oculus::Interaction::IDistanceInteractor*/ {
    public:
    public:
    // private UnityEngine.Object _hand
    // Size: 0x8
    // Offset: 0x118
    ::UnityEngine::Object* hand;
    // Field size check
    static_assert(sizeof(::UnityEngine::Object*) == 0x8);
    // private Oculus.Interaction.Input.IHand <Hand>k__BackingField
    // Size: 0x8
    // Offset: 0x120
    ::Oculus::Interaction::Input::IHand* Hand;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Input::IHand*) == 0x8);
    // private Oculus.Interaction.GrabAPI.HandGrabAPI _handGrabApi
    // Size: 0x8
    // Offset: 0x128
    ::Oculus::Interaction::GrabAPI::HandGrabAPI* handGrabApi;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::GrabAPI::HandGrabAPI*) == 0x8);
    // private Oculus.Interaction.Grab.GrabTypeFlags _supportedGrabTypes
    // Size: 0x4
    // Offset: 0x130
    ::Oculus::Interaction::Grab::GrabTypeFlags supportedGrabTypes;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Grab::GrabTypeFlags) == 0x4);
    // private UnityEngine.Transform _grabOrigin
    // Size: 0x8
    // Offset: 0x138
    ::UnityEngine::Transform* grabOrigin;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private UnityEngine.Transform _gripPoint
    // Size: 0x8
    // Offset: 0x140
    ::UnityEngine::Transform* gripPoint;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private UnityEngine.Transform _pinchPoint
    // Size: 0x8
    // Offset: 0x148
    ::UnityEngine::Transform* pinchPoint;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private UnityEngine.Object _velocityCalculator
    // Size: 0x8
    // Offset: 0x150
    ::UnityEngine::Object* velocityCalculator;
    // Field size check
    static_assert(sizeof(::UnityEngine::Object*) == 0x8);
    // private Oculus.Interaction.Throw.IVelocityCalculator <VelocityCalculator>k__BackingField
    // Size: 0x8
    // Offset: 0x158
    ::Oculus::Interaction::Throw::IVelocityCalculator* VelocityCalculator;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Throw::IVelocityCalculator*) == 0x8);
    // private Oculus.Interaction.DistantCandidateComputer`2<Oculus.Interaction.HandGrab.DistanceHandGrabInteractor,Oculus.Interaction.HandGrab.DistanceHandGrabInteractable> _distantCandidateComputer
    // Size: 0x8
    // Offset: 0x160
    ::Oculus::Interaction::DistantCandidateComputer_2<::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*, ::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*>* distantCandidateComputer;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::DistantCandidateComputer_2<::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*, ::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*>*) == 0x8);
    // private System.Boolean _handGrabShouldSelect
    // Size: 0x1
    // Offset: 0x168
    bool handGrabShouldSelect;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _handGrabShouldUnselect
    // Size: 0x1
    // Offset: 0x169
    bool handGrabShouldUnselect;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private Oculus.Interaction.HandGrab.HandGrabResult _cachedResult
    // Size: 0x8
    // Offset: 0x170
    ::Oculus::Interaction::HandGrab::HandGrabResult* cachedResult;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::HandGrab::HandGrabResult*) == 0x8);
    // private Oculus.Interaction.IMovement <Movement>k__BackingField
    // Size: 0x8
    // Offset: 0x178
    ::Oculus::Interaction::IMovement* Movement;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::IMovement*) == 0x8);
    // private System.Boolean <MovementFinished>k__BackingField
    // Size: 0x1
    // Offset: 0x180
    bool MovementFinished;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private readonly Oculus.Interaction.HandGrab.HandGrabTarget <HandGrabTarget>k__BackingField
    // Size: 0x8
    // Offset: 0x188
    ::Oculus::Interaction::HandGrab::HandGrabTarget* HandGrabTarget;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::HandGrab::HandGrabTarget*) == 0x8);
    // private UnityEngine.Vector3 <HitPoint>k__BackingField
    // Size: 0xC
    // Offset: 0x190
    ::UnityEngine::Vector3 HitPoint;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private System.Single <FingersStrength>k__BackingField
    // Size: 0x4
    // Offset: 0x19C
    float FingersStrength;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single <WristStrength>k__BackingField
    // Size: 0x4
    // Offset: 0x1A0
    float WristStrength;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.Pose <WristToGrabPoseOffset>k__BackingField
    // Size: 0x1C
    // Offset: 0x1A4
    ::UnityEngine::Pose WristToGrabPoseOffset;
    // Field size check
    static_assert(sizeof(::UnityEngine::Pose) == 0x1C);
    public:
    // Creating interface conversion operator: operator ::Oculus::Interaction::HandGrab::IHandGrabInteractor
    operator ::Oculus::Interaction::HandGrab::IHandGrabInteractor() noexcept {
      return *reinterpret_cast<::Oculus::Interaction::HandGrab::IHandGrabInteractor*>(this);
    }
    // Creating interface conversion operator: operator ::Oculus::Interaction::IDistanceInteractor
    operator ::Oculus::Interaction::IDistanceInteractor() noexcept {
      return *reinterpret_cast<::Oculus::Interaction::IDistanceInteractor*>(this);
    }
    // Get instance field reference: private UnityEngine.Object _hand
    [[deprecated("Use field access instead!")]] ::UnityEngine::Object*& dyn__hand();
    // Get instance field reference: private Oculus.Interaction.Input.IHand <Hand>k__BackingField
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IHand*& dyn_$Hand$k__BackingField();
    // Get instance field reference: private Oculus.Interaction.GrabAPI.HandGrabAPI _handGrabApi
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::GrabAPI::HandGrabAPI*& dyn__handGrabApi();
    // Get instance field reference: private Oculus.Interaction.Grab.GrabTypeFlags _supportedGrabTypes
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Grab::GrabTypeFlags& dyn__supportedGrabTypes();
    // Get instance field reference: private UnityEngine.Transform _grabOrigin
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn__grabOrigin();
    // Get instance field reference: private UnityEngine.Transform _gripPoint
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn__gripPoint();
    // Get instance field reference: private UnityEngine.Transform _pinchPoint
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn__pinchPoint();
    // Get instance field reference: private UnityEngine.Object _velocityCalculator
    [[deprecated("Use field access instead!")]] ::UnityEngine::Object*& dyn__velocityCalculator();
    // Get instance field reference: private Oculus.Interaction.Throw.IVelocityCalculator <VelocityCalculator>k__BackingField
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Throw::IVelocityCalculator*& dyn_$VelocityCalculator$k__BackingField();
    // Get instance field reference: private Oculus.Interaction.DistantCandidateComputer`2<Oculus.Interaction.HandGrab.DistanceHandGrabInteractor,Oculus.Interaction.HandGrab.DistanceHandGrabInteractable> _distantCandidateComputer
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::DistantCandidateComputer_2<::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*, ::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*>*& dyn__distantCandidateComputer();
    // Get instance field reference: private System.Boolean _handGrabShouldSelect
    [[deprecated("Use field access instead!")]] bool& dyn__handGrabShouldSelect();
    // Get instance field reference: private System.Boolean _handGrabShouldUnselect
    [[deprecated("Use field access instead!")]] bool& dyn__handGrabShouldUnselect();
    // Get instance field reference: private Oculus.Interaction.HandGrab.HandGrabResult _cachedResult
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::HandGrabResult*& dyn__cachedResult();
    // Get instance field reference: private Oculus.Interaction.IMovement <Movement>k__BackingField
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::IMovement*& dyn_$Movement$k__BackingField();
    // Get instance field reference: private System.Boolean <MovementFinished>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$MovementFinished$k__BackingField();
    // Get instance field reference: private readonly Oculus.Interaction.HandGrab.HandGrabTarget <HandGrabTarget>k__BackingField
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::HandGrabTarget*& dyn_$HandGrabTarget$k__BackingField();
    // Get instance field reference: private UnityEngine.Vector3 <HitPoint>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_$HitPoint$k__BackingField();
    // Get instance field reference: private System.Single <FingersStrength>k__BackingField
    [[deprecated("Use field access instead!")]] float& dyn_$FingersStrength$k__BackingField();
    // Get instance field reference: private System.Single <WristStrength>k__BackingField
    [[deprecated("Use field access instead!")]] float& dyn_$WristStrength$k__BackingField();
    // Get instance field reference: private UnityEngine.Pose <WristToGrabPoseOffset>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Pose& dyn_$WristToGrabPoseOffset$k__BackingField();
    // public Oculus.Interaction.Input.IHand get_Hand()
    // Offset: 0x48217EC
    ::Oculus::Interaction::Input::IHand* get_Hand();
    // private System.Void set_Hand(Oculus.Interaction.Input.IHand value)
    // Offset: 0x48217F4
    void set_Hand(::Oculus::Interaction::Input::IHand* value);
    // public Oculus.Interaction.Throw.IVelocityCalculator get_VelocityCalculator()
    // Offset: 0x4821804
    ::Oculus::Interaction::Throw::IVelocityCalculator* get_VelocityCalculator();
    // public System.Void set_VelocityCalculator(Oculus.Interaction.Throw.IVelocityCalculator value)
    // Offset: 0x482180C
    void set_VelocityCalculator(::Oculus::Interaction::Throw::IVelocityCalculator* value);
    // public Oculus.Interaction.IMovement get_Movement()
    // Offset: 0x482181C
    ::Oculus::Interaction::IMovement* get_Movement();
    // public System.Void set_Movement(Oculus.Interaction.IMovement value)
    // Offset: 0x4821824
    void set_Movement(::Oculus::Interaction::IMovement* value);
    // public System.Boolean get_MovementFinished()
    // Offset: 0x4821834
    bool get_MovementFinished();
    // public System.Void set_MovementFinished(System.Boolean value)
    // Offset: 0x482183C
    void set_MovementFinished(bool value);
    // public Oculus.Interaction.HandGrab.HandGrabTarget get_HandGrabTarget()
    // Offset: 0x4821848
    ::Oculus::Interaction::HandGrab::HandGrabTarget* get_HandGrabTarget();
    // public UnityEngine.Transform get_WristPoint()
    // Offset: 0x4821850
    ::UnityEngine::Transform* get_WristPoint();
    // public UnityEngine.Transform get_PinchPoint()
    // Offset: 0x4821858
    ::UnityEngine::Transform* get_PinchPoint();
    // public UnityEngine.Transform get_PalmPoint()
    // Offset: 0x4821860
    ::UnityEngine::Transform* get_PalmPoint();
    // public Oculus.Interaction.GrabAPI.HandGrabAPI get_HandGrabApi()
    // Offset: 0x4821868
    ::Oculus::Interaction::GrabAPI::HandGrabAPI* get_HandGrabApi();
    // public Oculus.Interaction.Grab.GrabTypeFlags get_SupportedGrabTypes()
    // Offset: 0x4821870
    ::Oculus::Interaction::Grab::GrabTypeFlags get_SupportedGrabTypes();
    // public Oculus.Interaction.HandGrab.IHandGrabInteractable get_TargetInteractable()
    // Offset: 0x4821878
    ::Oculus::Interaction::HandGrab::IHandGrabInteractable* get_TargetInteractable();
    // public UnityEngine.Pose get_Origin()
    // Offset: 0x48218B4
    ::UnityEngine::Pose get_Origin();
    // public UnityEngine.Vector3 get_HitPoint()
    // Offset: 0x48218F8
    ::UnityEngine::Vector3 get_HitPoint();
    // private System.Void set_HitPoint(UnityEngine.Vector3 value)
    // Offset: 0x4821908
    void set_HitPoint(::UnityEngine::Vector3 value);
    // public Oculus.Interaction.IRelativeToRef get_DistanceInteractable()
    // Offset: 0x4821918
    ::Oculus::Interaction::IRelativeToRef* get_DistanceInteractable();
    // public System.Boolean get_IsGrabbing()
    // Offset: 0x4821954
    bool get_IsGrabbing();
    // public System.Single get_FingersStrength()
    // Offset: 0x4821A28
    float get_FingersStrength();
    // private System.Void set_FingersStrength(System.Single value)
    // Offset: 0x4821A30
    void set_FingersStrength(float value);
    // public System.Single get_WristStrength()
    // Offset: 0x4821A38
    float get_WristStrength();
    // private System.Void set_WristStrength(System.Single value)
    // Offset: 0x4821A40
    void set_WristStrength(float value);
    // public UnityEngine.Pose get_WristToGrabPoseOffset()
    // Offset: 0x4821A48
    ::UnityEngine::Pose get_WristToGrabPoseOffset();
    // private System.Void set_WristToGrabPoseOffset(UnityEngine.Pose value)
    // Offset: 0x4821A60
    void set_WristToGrabPoseOffset(::UnityEngine::Pose value);
    // public Oculus.Interaction.Input.HandFingerFlags GrabbingFingers()
    // Offset: 0x4821A80
    ::Oculus::Interaction::Input::HandFingerFlags GrabbingFingers();
    // protected System.Void Reset()
    // Offset: 0x4821AC4
    void Reset();
    // protected System.Void InteractableSet(Oculus.Interaction.HandGrab.DistanceHandGrabInteractable interactable)
    // Offset: 0x4821EBC
    void InteractableSet(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable* interactable);
    // protected System.Void InteractableUnset(Oculus.Interaction.HandGrab.DistanceHandGrabInteractable interactable)
    // Offset: 0x4821F2C
    void InteractableUnset(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable* interactable);
    // protected System.Void InteractableSelected(Oculus.Interaction.HandGrab.DistanceHandGrabInteractable interactable)
    // Offset: 0x48222C8
    void InteractableSelected(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable* interactable);
    // protected System.Void InteractableUnselected(Oculus.Interaction.HandGrab.DistanceHandGrabInteractable interactable)
    // Offset: 0x48223C4
    void InteractableUnselected(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable* interactable);
    // public System.Boolean CanSelect(Oculus.Interaction.HandGrab.DistanceHandGrabInteractable interactable)
    // Offset: 0x4822A74
    bool CanSelect(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable* interactable);
    // protected Oculus.Interaction.HandGrab.DistanceHandGrabInteractable ComputeCandidate()
    // Offset: 0x4822AF4
    ::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable* ComputeCandidate();
    // private Oculus.Interaction.Grab.GrabTypeFlags SelectingGrabTypes(Oculus.Interaction.HandGrab.IHandGrabInteractable interactable)
    // Offset: 0x4822C8C
    ::Oculus::Interaction::Grab::GrabTypeFlags SelectingGrabTypes(::Oculus::Interaction::HandGrab::IHandGrabInteractable* interactable);
    // private System.Void UpdateTarget(Oculus.Interaction.HandGrab.IHandGrabInteractable interactable)
    // Offset: 0x4821E28
    void UpdateTarget(::Oculus::Interaction::HandGrab::IHandGrabInteractable* interactable);
    // private System.Void UpdateTargetSliding(Oculus.Interaction.HandGrab.IHandGrabInteractable interactable)
    // Offset: 0x482217C
    void UpdateTargetSliding(::Oculus::Interaction::HandGrab::IHandGrabInteractable* interactable);
    // private System.Boolean TrySetTarget(Oculus.Interaction.HandGrab.IHandGrabInteractable interactable, Oculus.Interaction.Grab.GrabTypeFlags selectingGrabTypes)
    // Offset: 0x4822814
    bool TrySetTarget(::Oculus::Interaction::HandGrab::IHandGrabInteractable* interactable, ::Oculus::Interaction::Grab::GrabTypeFlags selectingGrabTypes);
    // private System.Void SetGrabStrength(System.Single strength)
    // Offset: 0x4821F90
    void SetGrabStrength(float strength);
    // public System.Void InjectAllDistanceHandGrabInteractor(Oculus.Interaction.GrabAPI.HandGrabAPI handGrabApi, Oculus.Interaction.DistantCandidateComputer`2<Oculus.Interaction.HandGrab.DistanceHandGrabInteractor,Oculus.Interaction.HandGrab.DistanceHandGrabInteractable> distantCandidateComputer, UnityEngine.Transform grabOrigin, Oculus.Interaction.Input.IHand hand, Oculus.Interaction.Grab.GrabTypeFlags supportedGrabTypes)
    // Offset: 0x4822D98
    void InjectAllDistanceHandGrabInteractor(::Oculus::Interaction::GrabAPI::HandGrabAPI* handGrabApi, ::Oculus::Interaction::DistantCandidateComputer_2<::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*, ::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*>* distantCandidateComputer, ::UnityEngine::Transform* grabOrigin, ::Oculus::Interaction::Input::IHand* hand, ::Oculus::Interaction::Grab::GrabTypeFlags supportedGrabTypes);
    // public System.Void InjectHandGrabApi(Oculus.Interaction.GrabAPI.HandGrabAPI handGrabApi)
    // Offset: 0x4822ED4
    void InjectHandGrabApi(::Oculus::Interaction::GrabAPI::HandGrabAPI* handGrabApi);
    // public System.Void InjectDistantCandidateComputer(Oculus.Interaction.DistantCandidateComputer`2<Oculus.Interaction.HandGrab.DistanceHandGrabInteractor,Oculus.Interaction.HandGrab.DistanceHandGrabInteractable> distantCandidateComputer)
    // Offset: 0x4822EE4
    void InjectDistantCandidateComputer(::Oculus::Interaction::DistantCandidateComputer_2<::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*, ::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*>* distantCandidateComputer);
    // public System.Void InjectHand(Oculus.Interaction.Input.IHand hand)
    // Offset: 0x4822E04
    void InjectHand(::Oculus::Interaction::Input::IHand* hand);
    // public System.Void InjectSupportedGrabTypes(Oculus.Interaction.Grab.GrabTypeFlags supportedGrabTypes)
    // Offset: 0x4822EF4
    void InjectSupportedGrabTypes(::Oculus::Interaction::Grab::GrabTypeFlags supportedGrabTypes);
    // public System.Void InjectGrabOrigin(UnityEngine.Transform grabOrigin)
    // Offset: 0x4822EFC
    void InjectGrabOrigin(::UnityEngine::Transform* grabOrigin);
    // public System.Void InjectOptionalGripPoint(UnityEngine.Transform gripPoint)
    // Offset: 0x4822F0C
    void InjectOptionalGripPoint(::UnityEngine::Transform* gripPoint);
    // public System.Void InjectOptionalPinchPoint(UnityEngine.Transform pinchPoint)
    // Offset: 0x4822F1C
    void InjectOptionalPinchPoint(::UnityEngine::Transform* pinchPoint);
    // public System.Void InjectOptionalVelocityCalculator(Oculus.Interaction.Throw.IVelocityCalculator velocityCalculator)
    // Offset: 0x4822F2C
    void InjectOptionalVelocityCalculator(::Oculus::Interaction::Throw::IVelocityCalculator* velocityCalculator);
    // private System.Void <Start>b__67_0()
    // Offset: 0x4823118
    void $Start$b__67_0();
    // protected override System.Void Awake()
    // Offset: 0x4821BD4
    // Implemented from: Oculus.Interaction.Interactor`2
    // Base method: System.Void Interactor_2::Awake()
    void Awake();
    // protected override System.Void Start()
    // Offset: 0x4821C84
    // Implemented from: Oculus.Interaction.Interactor`2
    // Base method: System.Void Interactor_2::Start()
    void Start();
    // protected override System.Void DoHoverUpdate()
    // Offset: 0x4821D58
    // Implemented from: Oculus.Interaction.Interactor`2
    // Base method: System.Void Interactor_2::DoHoverUpdate()
    void DoHoverUpdate();
    // protected override System.Void DoSelectUpdate()
    // Offset: 0x4821F9C
    // Implemented from: Oculus.Interaction.Interactor`2
    // Base method: System.Void Interactor_2::DoSelectUpdate()
    void DoSelectUpdate();
    // protected override System.Void HandlePointerEventRaised(Oculus.Interaction.PointerEvent evt)
    // Offset: 0x4822554
    // Implemented from: Oculus.Interaction.PointerInteractor`2
    // Base method: System.Void PointerInteractor_2::HandlePointerEventRaised(Oculus.Interaction.PointerEvent evt)
    void HandlePointerEventRaised(::Oculus::Interaction::PointerEvent evt);
    // protected override UnityEngine.Pose ComputePointerPose()
    // Offset: 0x4822990
    // Implemented from: Oculus.Interaction.PointerInteractor`2
    // Base method: UnityEngine.Pose PointerInteractor_2::ComputePointerPose()
    ::UnityEngine::Pose ComputePointerPose();
    // protected override System.Boolean ComputeShouldSelect()
    // Offset: 0x4822A64
    // Implemented from: Oculus.Interaction.Interactor`2
    // Base method: System.Boolean Interactor_2::ComputeShouldSelect()
    bool ComputeShouldSelect();
    // protected override System.Boolean ComputeShouldUnselect()
    // Offset: 0x4822A6C
    // Implemented from: Oculus.Interaction.Interactor`2
    // Base method: System.Boolean Interactor_2::ComputeShouldUnselect()
    bool ComputeShouldUnselect();
    // public System.Void .ctor()
    // Offset: 0x4822FFC
    // Implemented from: Oculus.Interaction.PointerInteractor`2
    // Base method: System.Void PointerInteractor_2::.ctor()
    // Base method: System.Void Interactor_2::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DistanceHandGrabInteractor* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DistanceHandGrabInteractor*, creationType>()));
    }
  }; // Oculus.Interaction.HandGrab.DistanceHandGrabInteractor
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_Hand
// Il2CppName: get_Hand
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::Input::IHand* (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_Hand)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "get_Hand", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::set_Hand
// Il2CppName: set_Hand
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)(::Oculus::Interaction::Input::IHand*)>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::set_Hand)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "IHand")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "set_Hand", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_VelocityCalculator
// Il2CppName: get_VelocityCalculator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::Throw::IVelocityCalculator* (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_VelocityCalculator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "get_VelocityCalculator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::set_VelocityCalculator
// Il2CppName: set_VelocityCalculator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)(::Oculus::Interaction::Throw::IVelocityCalculator*)>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::set_VelocityCalculator)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Throw", "IVelocityCalculator")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "set_VelocityCalculator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_Movement
// Il2CppName: get_Movement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::IMovement* (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_Movement)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "get_Movement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::set_Movement
// Il2CppName: set_Movement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)(::Oculus::Interaction::IMovement*)>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::set_Movement)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "IMovement")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "set_Movement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_MovementFinished
// Il2CppName: get_MovementFinished
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_MovementFinished)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "get_MovementFinished", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::set_MovementFinished
// Il2CppName: set_MovementFinished
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)(bool)>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::set_MovementFinished)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "set_MovementFinished", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_HandGrabTarget
// Il2CppName: get_HandGrabTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::HandGrab::HandGrabTarget* (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_HandGrabTarget)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "get_HandGrabTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_WristPoint
// Il2CppName: get_WristPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_WristPoint)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "get_WristPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_PinchPoint
// Il2CppName: get_PinchPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_PinchPoint)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "get_PinchPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_PalmPoint
// Il2CppName: get_PalmPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_PalmPoint)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "get_PalmPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_HandGrabApi
// Il2CppName: get_HandGrabApi
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::GrabAPI::HandGrabAPI* (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_HandGrabApi)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "get_HandGrabApi", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_SupportedGrabTypes
// Il2CppName: get_SupportedGrabTypes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::Grab::GrabTypeFlags (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_SupportedGrabTypes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "get_SupportedGrabTypes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_TargetInteractable
// Il2CppName: get_TargetInteractable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::HandGrab::IHandGrabInteractable* (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_TargetInteractable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "get_TargetInteractable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_Origin
// Il2CppName: get_Origin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Pose (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_Origin)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "get_Origin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_HitPoint
// Il2CppName: get_HitPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_HitPoint)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "get_HitPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::set_HitPoint
// Il2CppName: set_HitPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)(::UnityEngine::Vector3)>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::set_HitPoint)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "set_HitPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_DistanceInteractable
// Il2CppName: get_DistanceInteractable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::IRelativeToRef* (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_DistanceInteractable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "get_DistanceInteractable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_IsGrabbing
// Il2CppName: get_IsGrabbing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_IsGrabbing)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "get_IsGrabbing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_FingersStrength
// Il2CppName: get_FingersStrength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_FingersStrength)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "get_FingersStrength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::set_FingersStrength
// Il2CppName: set_FingersStrength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)(float)>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::set_FingersStrength)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "set_FingersStrength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_WristStrength
// Il2CppName: get_WristStrength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_WristStrength)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "get_WristStrength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::set_WristStrength
// Il2CppName: set_WristStrength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)(float)>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::set_WristStrength)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "set_WristStrength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_WristToGrabPoseOffset
// Il2CppName: get_WristToGrabPoseOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Pose (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_WristToGrabPoseOffset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "get_WristToGrabPoseOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::set_WristToGrabPoseOffset
// Il2CppName: set_WristToGrabPoseOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)(::UnityEngine::Pose)>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::set_WristToGrabPoseOffset)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "set_WristToGrabPoseOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::GrabbingFingers
// Il2CppName: GrabbingFingers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::Input::HandFingerFlags (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::GrabbingFingers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "GrabbingFingers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::InteractableSet
// Il2CppName: InteractableSet
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*)>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::InteractableSet)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "DistanceHandGrabInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "InteractableSet", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::InteractableUnset
// Il2CppName: InteractableUnset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*)>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::InteractableUnset)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "DistanceHandGrabInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "InteractableUnset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::InteractableSelected
// Il2CppName: InteractableSelected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*)>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::InteractableSelected)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "DistanceHandGrabInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "InteractableSelected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::InteractableUnselected
// Il2CppName: InteractableUnselected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*)>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::InteractableUnselected)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "DistanceHandGrabInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "InteractableUnselected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::CanSelect
// Il2CppName: CanSelect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*)>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::CanSelect)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "DistanceHandGrabInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "CanSelect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::ComputeCandidate
// Il2CppName: ComputeCandidate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable* (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::ComputeCandidate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "ComputeCandidate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::SelectingGrabTypes
// Il2CppName: SelectingGrabTypes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::Grab::GrabTypeFlags (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)(::Oculus::Interaction::HandGrab::IHandGrabInteractable*)>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::SelectingGrabTypes)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "IHandGrabInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "SelectingGrabTypes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::UpdateTarget
// Il2CppName: UpdateTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)(::Oculus::Interaction::HandGrab::IHandGrabInteractable*)>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::UpdateTarget)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "IHandGrabInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "UpdateTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::UpdateTargetSliding
// Il2CppName: UpdateTargetSliding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)(::Oculus::Interaction::HandGrab::IHandGrabInteractable*)>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::UpdateTargetSliding)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "IHandGrabInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "UpdateTargetSliding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::TrySetTarget
// Il2CppName: TrySetTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)(::Oculus::Interaction::HandGrab::IHandGrabInteractable*, ::Oculus::Interaction::Grab::GrabTypeFlags)>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::TrySetTarget)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "IHandGrabInteractable")->byval_arg;
    static auto* selectingGrabTypes = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Grab", "GrabTypeFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "TrySetTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable, selectingGrabTypes});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::SetGrabStrength
// Il2CppName: SetGrabStrength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)(float)>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::SetGrabStrength)> {
  static const MethodInfo* get() {
    static auto* strength = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "SetGrabStrength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{strength});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::InjectAllDistanceHandGrabInteractor
// Il2CppName: InjectAllDistanceHandGrabInteractor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)(::Oculus::Interaction::GrabAPI::HandGrabAPI*, ::Oculus::Interaction::DistantCandidateComputer_2<::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*, ::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*>*, ::UnityEngine::Transform*, ::Oculus::Interaction::Input::IHand*, ::Oculus::Interaction::Grab::GrabTypeFlags)>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::InjectAllDistanceHandGrabInteractor)> {
  static const MethodInfo* get() {
    static auto* handGrabApi = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.GrabAPI", "HandGrabAPI")->byval_arg;
    static auto* distantCandidateComputer = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("Oculus.Interaction", "DistantCandidateComputer`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "DistanceHandGrabInteractor"), ::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "DistanceHandGrabInteractable")})->byval_arg;
    static auto* grabOrigin = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* hand = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "IHand")->byval_arg;
    static auto* supportedGrabTypes = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Grab", "GrabTypeFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "InjectAllDistanceHandGrabInteractor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handGrabApi, distantCandidateComputer, grabOrigin, hand, supportedGrabTypes});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::InjectHandGrabApi
// Il2CppName: InjectHandGrabApi
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)(::Oculus::Interaction::GrabAPI::HandGrabAPI*)>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::InjectHandGrabApi)> {
  static const MethodInfo* get() {
    static auto* handGrabApi = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.GrabAPI", "HandGrabAPI")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "InjectHandGrabApi", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handGrabApi});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::InjectDistantCandidateComputer
// Il2CppName: InjectDistantCandidateComputer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)(::Oculus::Interaction::DistantCandidateComputer_2<::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*, ::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*>*)>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::InjectDistantCandidateComputer)> {
  static const MethodInfo* get() {
    static auto* distantCandidateComputer = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("Oculus.Interaction", "DistantCandidateComputer`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "DistanceHandGrabInteractor"), ::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "DistanceHandGrabInteractable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "InjectDistantCandidateComputer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{distantCandidateComputer});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::InjectHand
// Il2CppName: InjectHand
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)(::Oculus::Interaction::Input::IHand*)>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::InjectHand)> {
  static const MethodInfo* get() {
    static auto* hand = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "IHand")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "InjectHand", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{hand});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::InjectSupportedGrabTypes
// Il2CppName: InjectSupportedGrabTypes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)(::Oculus::Interaction::Grab::GrabTypeFlags)>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::InjectSupportedGrabTypes)> {
  static const MethodInfo* get() {
    static auto* supportedGrabTypes = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Grab", "GrabTypeFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "InjectSupportedGrabTypes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{supportedGrabTypes});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::InjectGrabOrigin
// Il2CppName: InjectGrabOrigin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)(::UnityEngine::Transform*)>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::InjectGrabOrigin)> {
  static const MethodInfo* get() {
    static auto* grabOrigin = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "InjectGrabOrigin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{grabOrigin});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::InjectOptionalGripPoint
// Il2CppName: InjectOptionalGripPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)(::UnityEngine::Transform*)>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::InjectOptionalGripPoint)> {
  static const MethodInfo* get() {
    static auto* gripPoint = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "InjectOptionalGripPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gripPoint});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::InjectOptionalPinchPoint
// Il2CppName: InjectOptionalPinchPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)(::UnityEngine::Transform*)>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::InjectOptionalPinchPoint)> {
  static const MethodInfo* get() {
    static auto* pinchPoint = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "InjectOptionalPinchPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pinchPoint});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::InjectOptionalVelocityCalculator
// Il2CppName: InjectOptionalVelocityCalculator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)(::Oculus::Interaction::Throw::IVelocityCalculator*)>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::InjectOptionalVelocityCalculator)> {
  static const MethodInfo* get() {
    static auto* velocityCalculator = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Throw", "IVelocityCalculator")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "InjectOptionalVelocityCalculator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{velocityCalculator});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::$Start$b__67_0
// Il2CppName: <Start>b__67_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::$Start$b__67_0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "<Start>b__67_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::DoHoverUpdate
// Il2CppName: DoHoverUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::DoHoverUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "DoHoverUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::DoSelectUpdate
// Il2CppName: DoSelectUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::DoSelectUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "DoSelectUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::HandlePointerEventRaised
// Il2CppName: HandlePointerEventRaised
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)(::Oculus::Interaction::PointerEvent)>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::HandlePointerEventRaised)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "PointerEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "HandlePointerEventRaised", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::ComputePointerPose
// Il2CppName: ComputePointerPose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Pose (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::ComputePointerPose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "ComputePointerPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::ComputeShouldSelect
// Il2CppName: ComputeShouldSelect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::ComputeShouldSelect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "ComputeShouldSelect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::ComputeShouldUnselect
// Il2CppName: ComputeShouldUnselect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::ComputeShouldUnselect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), "ComputeShouldUnselect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
