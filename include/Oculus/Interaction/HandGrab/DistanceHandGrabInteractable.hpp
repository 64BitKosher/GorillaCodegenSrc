// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.PointerInteractable`2
#include "Oculus/Interaction/PointerInteractable_2.hpp"
// Including type: Oculus.Interaction.HandGrab.IHandGrabInteractable
#include "Oculus/Interaction/HandGrab/IHandGrabInteractable.hpp"
// Including type: Oculus.Interaction.IRigidbodyRef
#include "Oculus/Interaction/IRigidbodyRef.hpp"
// Including type: Oculus.Interaction.ICollidersRef
#include "Oculus/Interaction/ICollidersRef.hpp"
// Including type: Oculus.Interaction.Grab.GrabTypeFlags
#include "Oculus/Interaction/Grab/GrabTypeFlags.hpp"
// Including type: Oculus.Interaction.GrabAPI.GrabbingRule
#include "Oculus/Interaction/GrabAPI/GrabbingRule.hpp"
// Including type: Oculus.Interaction.HandGrab.HandAlignType
#include "Oculus/Interaction/HandGrab/HandAlignType.hpp"
// Including type: Oculus.Interaction.Grab.PoseMeasureParameters
#include "Oculus/Interaction/Grab/PoseMeasureParameters.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction::HandGrab
namespace Oculus::Interaction::HandGrab {
  // Forward declaring type: DistanceHandGrabInteractor
  class DistanceHandGrabInteractor;
  // Forward declaring type: HandGrabPose
  class HandGrabPose;
  // Forward declaring type: GrabPoseFinder
  class GrabPoseFinder;
  // Forward declaring type: HandGrabResult
  class HandGrabResult;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Rigidbody
  class Rigidbody;
  // Skipping declaration: Object because it is already included!
  // Forward declaring type: Collider
  class Collider;
  // Forward declaring type: Transform
  class Transform;
  // Skipping declaration: Pose because it is already included!
  // Skipping declaration: Vector3 because it is already included!
}
// Forward declaring namespace: Oculus::Interaction
namespace Oculus::Interaction {
  // Forward declaring type: PhysicsGrabbable
  class PhysicsGrabbable;
  // Forward declaring type: IMovementProvider
  class IMovementProvider;
  // Forward declaring type: IMovement
  class IMovement;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: Oculus::Interaction::Input
namespace Oculus::Interaction::Input {
  // Forward declaring type: Handedness
  struct Handedness;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.HandGrab
namespace Oculus::Interaction::HandGrab {
  // Forward declaring type: DistanceHandGrabInteractable
  class DistanceHandGrabInteractable;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*, "Oculus.Interaction.HandGrab", "DistanceHandGrabInteractable");
// Type namespace: Oculus.Interaction.HandGrab
namespace Oculus::Interaction::HandGrab {
  // WARNING Size may be invalid!
  // Autogenerated type: Oculus.Interaction.HandGrab.DistanceHandGrabInteractable
  // [TokenAttribute] Offset: FFFFFFFF
  class DistanceHandGrabInteractable : public ::Oculus::Interaction::PointerInteractable_2<::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*, ::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*>/*, public ::Oculus::Interaction::HandGrab::IHandGrabInteractable, public ::Oculus::Interaction::IRigidbodyRef, public ::Oculus::Interaction::ICollidersRef*/ {
    public:
    public:
    // private UnityEngine.Rigidbody _rigidbody
    // Size: 0x8
    // Offset: 0xC8
    ::UnityEngine::Rigidbody* rigidbody;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rigidbody*) == 0x8);
    // private Oculus.Interaction.PhysicsGrabbable _physicsGrabbable
    // Size: 0x8
    // Offset: 0xD0
    ::Oculus::Interaction::PhysicsGrabbable* physicsGrabbable;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::PhysicsGrabbable*) == 0x8);
    // private System.Boolean _resetGrabOnGrabsUpdated
    // Size: 0x1
    // Offset: 0xD8
    bool resetGrabOnGrabsUpdated;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Single _slippiness
    // Size: 0x4
    // Offset: 0xDC
    float slippiness;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private Oculus.Interaction.Grab.GrabTypeFlags _supportedGrabTypes
    // Size: 0x4
    // Offset: 0xE0
    ::Oculus::Interaction::Grab::GrabTypeFlags supportedGrabTypes;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Grab::GrabTypeFlags) == 0x4);
    // private Oculus.Interaction.GrabAPI.GrabbingRule _pinchGrabRules
    // Size: 0x18
    // Offset: 0xE4
    ::Oculus::Interaction::GrabAPI::GrabbingRule pinchGrabRules;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::GrabAPI::GrabbingRule) == 0x18);
    // private Oculus.Interaction.GrabAPI.GrabbingRule _palmGrabRules
    // Size: 0x18
    // Offset: 0xFC
    ::Oculus::Interaction::GrabAPI::GrabbingRule palmGrabRules;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::GrabAPI::GrabbingRule) == 0x18);
    // private UnityEngine.Object _movementProvider
    // Size: 0x8
    // Offset: 0x118
    ::UnityEngine::Object* movementProvider;
    // Field size check
    static_assert(sizeof(::UnityEngine::Object*) == 0x8);
    // private Oculus.Interaction.IMovementProvider <MovementProvider>k__BackingField
    // Size: 0x8
    // Offset: 0x120
    ::Oculus::Interaction::IMovementProvider* MovementProvider;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::IMovementProvider*) == 0x8);
    // private Oculus.Interaction.HandGrab.HandAlignType _handAligment
    // Size: 0x4
    // Offset: 0x128
    ::Oculus::Interaction::HandGrab::HandAlignType handAligment;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::HandGrab::HandAlignType) == 0x4);
    // private System.Collections.Generic.List`1<Oculus.Interaction.HandGrab.HandGrabPose> _handGrabPoses
    // Size: 0x8
    // Offset: 0x130
    ::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::HandGrabPose*>* handGrabPoses;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::HandGrabPose*>*) == 0x8);
    // private UnityEngine.Collider[] <Colliders>k__BackingField
    // Size: 0x8
    // Offset: 0x138
    ::ArrayW<::UnityEngine::Collider*> Colliders;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Collider*>) == 0x8);
    // private Oculus.Interaction.HandGrab.GrabPoseFinder _grabPoseFinder
    // Size: 0x8
    // Offset: 0x140
    ::Oculus::Interaction::HandGrab::GrabPoseFinder* grabPoseFinder;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::HandGrab::GrabPoseFinder*) == 0x8);
    // private readonly Oculus.Interaction.Grab.PoseMeasureParameters SCORE_MODIFIER
    // Size: 0x4
    // Offset: 0x148
    ::Oculus::Interaction::Grab::PoseMeasureParameters SCORE_MODIFIER;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Grab::PoseMeasureParameters) == 0x4);
    public:
    // Creating interface conversion operator: operator ::Oculus::Interaction::HandGrab::IHandGrabInteractable
    operator ::Oculus::Interaction::HandGrab::IHandGrabInteractable() noexcept {
      return *reinterpret_cast<::Oculus::Interaction::HandGrab::IHandGrabInteractable*>(this);
    }
    // Creating interface conversion operator: operator ::Oculus::Interaction::IRigidbodyRef
    operator ::Oculus::Interaction::IRigidbodyRef() noexcept {
      return *reinterpret_cast<::Oculus::Interaction::IRigidbodyRef*>(this);
    }
    // Creating interface conversion operator: operator ::Oculus::Interaction::ICollidersRef
    operator ::Oculus::Interaction::ICollidersRef() noexcept {
      return *reinterpret_cast<::Oculus::Interaction::ICollidersRef*>(this);
    }
    // Get instance field reference: private UnityEngine.Rigidbody _rigidbody
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& dyn__rigidbody();
    // Get instance field reference: private Oculus.Interaction.PhysicsGrabbable _physicsGrabbable
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::PhysicsGrabbable*& dyn__physicsGrabbable();
    // Get instance field reference: private System.Boolean _resetGrabOnGrabsUpdated
    [[deprecated("Use field access instead!")]] bool& dyn__resetGrabOnGrabsUpdated();
    // Get instance field reference: private System.Single _slippiness
    [[deprecated("Use field access instead!")]] float& dyn__slippiness();
    // Get instance field reference: private Oculus.Interaction.Grab.GrabTypeFlags _supportedGrabTypes
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Grab::GrabTypeFlags& dyn__supportedGrabTypes();
    // Get instance field reference: private Oculus.Interaction.GrabAPI.GrabbingRule _pinchGrabRules
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::GrabAPI::GrabbingRule& dyn__pinchGrabRules();
    // Get instance field reference: private Oculus.Interaction.GrabAPI.GrabbingRule _palmGrabRules
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::GrabAPI::GrabbingRule& dyn__palmGrabRules();
    // Get instance field reference: private UnityEngine.Object _movementProvider
    [[deprecated("Use field access instead!")]] ::UnityEngine::Object*& dyn__movementProvider();
    // Get instance field reference: private Oculus.Interaction.IMovementProvider <MovementProvider>k__BackingField
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::IMovementProvider*& dyn_$MovementProvider$k__BackingField();
    // Get instance field reference: private Oculus.Interaction.HandGrab.HandAlignType _handAligment
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::HandAlignType& dyn__handAligment();
    // Get instance field reference: private System.Collections.Generic.List`1<Oculus.Interaction.HandGrab.HandGrabPose> _handGrabPoses
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::HandGrabPose*>*& dyn__handGrabPoses();
    // Get instance field reference: private UnityEngine.Collider[] <Colliders>k__BackingField
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Collider*>& dyn_$Colliders$k__BackingField();
    // Get instance field reference: private Oculus.Interaction.HandGrab.GrabPoseFinder _grabPoseFinder
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::GrabPoseFinder*& dyn__grabPoseFinder();
    // Get instance field reference: private readonly Oculus.Interaction.Grab.PoseMeasureParameters SCORE_MODIFIER
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Grab::PoseMeasureParameters& dyn_SCORE_MODIFIER();
    // public UnityEngine.Rigidbody get_Rigidbody()
    // Offset: 0x4820844
    ::UnityEngine::Rigidbody* get_Rigidbody();
    // public System.Boolean get_ResetGrabOnGrabsUpdated()
    // Offset: 0x482084C
    bool get_ResetGrabOnGrabsUpdated();
    // public System.Void set_ResetGrabOnGrabsUpdated(System.Boolean value)
    // Offset: 0x4820854
    void set_ResetGrabOnGrabsUpdated(bool value);
    // public System.Single get_Slippiness()
    // Offset: 0x4820860
    float get_Slippiness();
    // public System.Void set_Slippiness(System.Single value)
    // Offset: 0x4820868
    void set_Slippiness(float value);
    // public Oculus.Interaction.IMovementProvider get_MovementProvider()
    // Offset: 0x4820870
    ::Oculus::Interaction::IMovementProvider* get_MovementProvider();
    // public System.Void set_MovementProvider(Oculus.Interaction.IMovementProvider value)
    // Offset: 0x4820878
    void set_MovementProvider(::Oculus::Interaction::IMovementProvider* value);
    // public Oculus.Interaction.HandGrab.HandAlignType get_HandAlignment()
    // Offset: 0x4820888
    ::Oculus::Interaction::HandGrab::HandAlignType get_HandAlignment();
    // public System.Void set_HandAlignment(Oculus.Interaction.HandGrab.HandAlignType value)
    // Offset: 0x4820890
    void set_HandAlignment(::Oculus::Interaction::HandGrab::HandAlignType value);
    // public UnityEngine.Transform get_RelativeTo()
    // Offset: 0x4820898
    ::UnityEngine::Transform* get_RelativeTo();
    // public Oculus.Interaction.Grab.GrabTypeFlags get_SupportedGrabTypes()
    // Offset: 0x48208B4
    ::Oculus::Interaction::Grab::GrabTypeFlags get_SupportedGrabTypes();
    // public Oculus.Interaction.GrabAPI.GrabbingRule get_PinchGrabRules()
    // Offset: 0x48208BC
    ::Oculus::Interaction::GrabAPI::GrabbingRule get_PinchGrabRules();
    // public Oculus.Interaction.GrabAPI.GrabbingRule get_PalmGrabRules()
    // Offset: 0x48208D0
    ::Oculus::Interaction::GrabAPI::GrabbingRule get_PalmGrabRules();
    // public System.Collections.Generic.List`1<Oculus.Interaction.HandGrab.HandGrabPose> get_HandGrabPoses()
    // Offset: 0x48208E8
    ::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::HandGrabPose*>* get_HandGrabPoses();
    // public UnityEngine.Collider[] get_Colliders()
    // Offset: 0x48208F0
    ::ArrayW<::UnityEngine::Collider*> get_Colliders();
    // private System.Void set_Colliders(UnityEngine.Collider[] value)
    // Offset: 0x48208F8
    void set_Colliders(::ArrayW<::UnityEngine::Collider*> value);
    // protected System.Void Reset()
    // Offset: 0x4820908
    void Reset();
    // public Oculus.Interaction.IMovement GenerateMovement(in UnityEngine.Pose from, in UnityEngine.Pose to)
    // Offset: 0x4820E94
    ::Oculus::Interaction::IMovement* GenerateMovement(ByRef<::UnityEngine::Pose> from, ByRef<::UnityEngine::Pose> to);
    // public System.Void ApplyVelocities(UnityEngine.Vector3 linearVelocity, UnityEngine.Vector3 angularVelocity)
    // Offset: 0x4821088
    void ApplyVelocities(::UnityEngine::Vector3 linearVelocity, ::UnityEngine::Vector3 angularVelocity);
    // public System.Boolean CalculateBestPose(UnityEngine.Pose userPose, System.Single handScale, Oculus.Interaction.Input.Handedness handedness, ref Oculus.Interaction.HandGrab.HandGrabResult result)
    // Offset: 0x4821160
    bool CalculateBestPose(::UnityEngine::Pose userPose, float handScale, ::Oculus::Interaction::Input::Handedness handedness, ByRef<::Oculus::Interaction::HandGrab::HandGrabResult*> result);
    // public System.Boolean get_UsesHandPose()
    // Offset: 0x4821498
    bool get_UsesHandPose();
    // public System.Boolean SupportsHandedness(Oculus.Interaction.Input.Handedness handedness)
    // Offset: 0x482153C
    bool SupportsHandedness(::Oculus::Interaction::Input::Handedness handedness);
    // public System.Void InjectAllDistanceHandGrabInteractable(Oculus.Interaction.Grab.GrabTypeFlags supportedGrabTypes, UnityEngine.Rigidbody rigidbody, Oculus.Interaction.GrabAPI.GrabbingRule pinchGrabRules, Oculus.Interaction.GrabAPI.GrabbingRule palmGrabRules)
    // Offset: 0x4820AEC
    void InjectAllDistanceHandGrabInteractable(::Oculus::Interaction::Grab::GrabTypeFlags supportedGrabTypes, ::UnityEngine::Rigidbody* rigidbody, ::Oculus::Interaction::GrabAPI::GrabbingRule pinchGrabRules, ::Oculus::Interaction::GrabAPI::GrabbingRule palmGrabRules);
    // public System.Void InjectOptionalPhysicsGrabbable(Oculus.Interaction.PhysicsGrabbable physicsObject)
    // Offset: 0x48215E0
    void InjectOptionalPhysicsGrabbable(::Oculus::Interaction::PhysicsGrabbable* physicsObject);
    // public System.Void InjectSupportedGrabTypes(Oculus.Interaction.Grab.GrabTypeFlags supportedGrabTypes)
    // Offset: 0x48215E8
    void InjectSupportedGrabTypes(::Oculus::Interaction::Grab::GrabTypeFlags supportedGrabTypes);
    // public System.Void InjectPinchGrabRules(Oculus.Interaction.GrabAPI.GrabbingRule pinchGrabRules)
    // Offset: 0x48215F0
    void InjectPinchGrabRules(::Oculus::Interaction::GrabAPI::GrabbingRule pinchGrabRules);
    // public System.Void InjectPalmGrabRules(Oculus.Interaction.GrabAPI.GrabbingRule palmGrabRules)
    // Offset: 0x4821604
    void InjectPalmGrabRules(::Oculus::Interaction::GrabAPI::GrabbingRule palmGrabRules);
    // public System.Void InjectRigidbody(UnityEngine.Rigidbody rigidbody)
    // Offset: 0x482161C
    void InjectRigidbody(::UnityEngine::Rigidbody* rigidbody);
    // public System.Void InjectOptionalHandGrabPoses(System.Collections.Generic.List`1<Oculus.Interaction.HandGrab.HandGrabPose> handGrabPoses)
    // Offset: 0x4821624
    void InjectOptionalHandGrabPoses(::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::HandGrabPose*>* handGrabPoses);
    // public System.Void InjectOptionalMovementProvider(Oculus.Interaction.IMovementProvider provider)
    // Offset: 0x4820D2C
    void InjectOptionalMovementProvider(::Oculus::Interaction::IMovementProvider* provider);
    // private Oculus.Interaction.IMovement Oculus.Interaction.HandGrab.IHandGrabInteractable.GenerateMovement(in UnityEngine.Pose from, in UnityEngine.Pose to)
    // Offset: 0x48217A0
    ::Oculus::Interaction::IMovement* Oculus_Interaction_HandGrab_IHandGrabInteractable_GenerateMovement(ByRef<::UnityEngine::Pose> from, ByRef<::UnityEngine::Pose> to);
    // private System.Void <Start>b__43_0()
    // Offset: 0x48217A4
    void $Start$b__43_0();
    // protected override System.Void Awake()
    // Offset: 0x4820B40
    // Implemented from: Oculus.Interaction.PointerInteractable`2
    // Base method: System.Void PointerInteractable_2::Awake()
    void Awake();
    // protected override System.Void Start()
    // Offset: 0x4820BC0
    // Implemented from: Oculus.Interaction.PointerInteractable`2
    // Base method: System.Void PointerInteractable_2::Start()
    void Start();
    // public System.Void .ctor()
    // Offset: 0x4821634
    // Implemented from: Oculus.Interaction.PointerInteractable`2
    // Base method: System.Void PointerInteractable_2::.ctor()
    // Base method: System.Void Interactable_2::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DistanceHandGrabInteractable* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DistanceHandGrabInteractable*, creationType>()));
    }
  }; // Oculus.Interaction.HandGrab.DistanceHandGrabInteractable
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::get_Rigidbody
// Il2CppName: get_Rigidbody
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rigidbody* (Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::*)()>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::get_Rigidbody)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*), "get_Rigidbody", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::get_ResetGrabOnGrabsUpdated
// Il2CppName: get_ResetGrabOnGrabsUpdated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::*)()>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::get_ResetGrabOnGrabsUpdated)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*), "get_ResetGrabOnGrabsUpdated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::set_ResetGrabOnGrabsUpdated
// Il2CppName: set_ResetGrabOnGrabsUpdated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::*)(bool)>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::set_ResetGrabOnGrabsUpdated)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*), "set_ResetGrabOnGrabsUpdated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::get_Slippiness
// Il2CppName: get_Slippiness
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::*)()>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::get_Slippiness)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*), "get_Slippiness", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::set_Slippiness
// Il2CppName: set_Slippiness
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::*)(float)>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::set_Slippiness)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*), "set_Slippiness", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::get_MovementProvider
// Il2CppName: get_MovementProvider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::IMovementProvider* (Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::*)()>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::get_MovementProvider)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*), "get_MovementProvider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::set_MovementProvider
// Il2CppName: set_MovementProvider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::*)(::Oculus::Interaction::IMovementProvider*)>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::set_MovementProvider)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "IMovementProvider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*), "set_MovementProvider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::get_HandAlignment
// Il2CppName: get_HandAlignment
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::HandGrab::HandAlignType (Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::*)()>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::get_HandAlignment)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*), "get_HandAlignment", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::set_HandAlignment
// Il2CppName: set_HandAlignment
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::*)(::Oculus::Interaction::HandGrab::HandAlignType)>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::set_HandAlignment)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "HandAlignType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*), "set_HandAlignment", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::get_RelativeTo
// Il2CppName: get_RelativeTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::*)()>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::get_RelativeTo)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*), "get_RelativeTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::get_SupportedGrabTypes
// Il2CppName: get_SupportedGrabTypes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::Grab::GrabTypeFlags (Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::*)()>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::get_SupportedGrabTypes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*), "get_SupportedGrabTypes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::get_PinchGrabRules
// Il2CppName: get_PinchGrabRules
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::GrabAPI::GrabbingRule (Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::*)()>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::get_PinchGrabRules)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*), "get_PinchGrabRules", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::get_PalmGrabRules
// Il2CppName: get_PalmGrabRules
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::GrabAPI::GrabbingRule (Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::*)()>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::get_PalmGrabRules)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*), "get_PalmGrabRules", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::get_HandGrabPoses
// Il2CppName: get_HandGrabPoses
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::HandGrabPose*>* (Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::*)()>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::get_HandGrabPoses)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*), "get_HandGrabPoses", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::get_Colliders
// Il2CppName: get_Colliders
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::Collider*> (Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::*)()>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::get_Colliders)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*), "get_Colliders", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::set_Colliders
// Il2CppName: set_Colliders
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::*)(::ArrayW<::UnityEngine::Collider*>)>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::set_Colliders)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Collider"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*), "set_Colliders", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::*)()>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::GenerateMovement
// Il2CppName: GenerateMovement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::IMovement* (Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::*)(ByRef<::UnityEngine::Pose>, ByRef<::UnityEngine::Pose>)>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::GenerateMovement)> {
  static const MethodInfo* get() {
    static auto* from = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->this_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*), "GenerateMovement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{from, to});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::ApplyVelocities
// Il2CppName: ApplyVelocities
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::*)(::UnityEngine::Vector3, ::UnityEngine::Vector3)>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::ApplyVelocities)> {
  static const MethodInfo* get() {
    static auto* linearVelocity = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* angularVelocity = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*), "ApplyVelocities", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{linearVelocity, angularVelocity});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::CalculateBestPose
// Il2CppName: CalculateBestPose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::*)(::UnityEngine::Pose, float, ::Oculus::Interaction::Input::Handedness, ByRef<::Oculus::Interaction::HandGrab::HandGrabResult*>)>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::CalculateBestPose)> {
  static const MethodInfo* get() {
    static auto* userPose = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->byval_arg;
    static auto* handScale = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* handedness = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "Handedness")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "HandGrabResult")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*), "CalculateBestPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userPose, handScale, handedness, result});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::get_UsesHandPose
// Il2CppName: get_UsesHandPose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::*)()>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::get_UsesHandPose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*), "get_UsesHandPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::SupportsHandedness
// Il2CppName: SupportsHandedness
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::*)(::Oculus::Interaction::Input::Handedness)>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::SupportsHandedness)> {
  static const MethodInfo* get() {
    static auto* handedness = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "Handedness")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*), "SupportsHandedness", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handedness});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::InjectAllDistanceHandGrabInteractable
// Il2CppName: InjectAllDistanceHandGrabInteractable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::*)(::Oculus::Interaction::Grab::GrabTypeFlags, ::UnityEngine::Rigidbody*, ::Oculus::Interaction::GrabAPI::GrabbingRule, ::Oculus::Interaction::GrabAPI::GrabbingRule)>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::InjectAllDistanceHandGrabInteractable)> {
  static const MethodInfo* get() {
    static auto* supportedGrabTypes = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Grab", "GrabTypeFlags")->byval_arg;
    static auto* rigidbody = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rigidbody")->byval_arg;
    static auto* pinchGrabRules = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.GrabAPI", "GrabbingRule")->byval_arg;
    static auto* palmGrabRules = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.GrabAPI", "GrabbingRule")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*), "InjectAllDistanceHandGrabInteractable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{supportedGrabTypes, rigidbody, pinchGrabRules, palmGrabRules});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::InjectOptionalPhysicsGrabbable
// Il2CppName: InjectOptionalPhysicsGrabbable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::*)(::Oculus::Interaction::PhysicsGrabbable*)>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::InjectOptionalPhysicsGrabbable)> {
  static const MethodInfo* get() {
    static auto* physicsObject = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "PhysicsGrabbable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*), "InjectOptionalPhysicsGrabbable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{physicsObject});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::InjectSupportedGrabTypes
// Il2CppName: InjectSupportedGrabTypes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::*)(::Oculus::Interaction::Grab::GrabTypeFlags)>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::InjectSupportedGrabTypes)> {
  static const MethodInfo* get() {
    static auto* supportedGrabTypes = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Grab", "GrabTypeFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*), "InjectSupportedGrabTypes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{supportedGrabTypes});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::InjectPinchGrabRules
// Il2CppName: InjectPinchGrabRules
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::*)(::Oculus::Interaction::GrabAPI::GrabbingRule)>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::InjectPinchGrabRules)> {
  static const MethodInfo* get() {
    static auto* pinchGrabRules = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.GrabAPI", "GrabbingRule")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*), "InjectPinchGrabRules", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pinchGrabRules});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::InjectPalmGrabRules
// Il2CppName: InjectPalmGrabRules
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::*)(::Oculus::Interaction::GrabAPI::GrabbingRule)>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::InjectPalmGrabRules)> {
  static const MethodInfo* get() {
    static auto* palmGrabRules = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.GrabAPI", "GrabbingRule")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*), "InjectPalmGrabRules", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{palmGrabRules});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::InjectRigidbody
// Il2CppName: InjectRigidbody
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::*)(::UnityEngine::Rigidbody*)>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::InjectRigidbody)> {
  static const MethodInfo* get() {
    static auto* rigidbody = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rigidbody")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*), "InjectRigidbody", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rigidbody});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::InjectOptionalHandGrabPoses
// Il2CppName: InjectOptionalHandGrabPoses
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::*)(::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::HandGrabPose*>*)>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::InjectOptionalHandGrabPoses)> {
  static const MethodInfo* get() {
    static auto* handGrabPoses = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "HandGrabPose")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*), "InjectOptionalHandGrabPoses", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handGrabPoses});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::InjectOptionalMovementProvider
// Il2CppName: InjectOptionalMovementProvider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::*)(::Oculus::Interaction::IMovementProvider*)>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::InjectOptionalMovementProvider)> {
  static const MethodInfo* get() {
    static auto* provider = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "IMovementProvider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*), "InjectOptionalMovementProvider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{provider});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::Oculus_Interaction_HandGrab_IHandGrabInteractable_GenerateMovement
// Il2CppName: Oculus.Interaction.HandGrab.IHandGrabInteractable.GenerateMovement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::IMovement* (Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::*)(ByRef<::UnityEngine::Pose>, ByRef<::UnityEngine::Pose>)>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::Oculus_Interaction_HandGrab_IHandGrabInteractable_GenerateMovement)> {
  static const MethodInfo* get() {
    static auto* from = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->this_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*), "Oculus.Interaction.HandGrab.IHandGrabInteractable.GenerateMovement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{from, to});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::$Start$b__43_0
// Il2CppName: <Start>b__43_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::*)()>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::$Start$b__43_0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*), "<Start>b__43_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::*)()>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::*)()>(&Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
