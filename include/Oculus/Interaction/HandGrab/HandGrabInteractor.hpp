// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.PointerInteractor`2
#include "Oculus/Interaction/PointerInteractor_2.hpp"
// Including type: Oculus.Interaction.HandGrab.IHandGrabInteractor
#include "Oculus/Interaction/HandGrab/IHandGrabInteractor.hpp"
// Including type: Oculus.Interaction.IRigidbodyRef
#include "Oculus/Interaction/IRigidbodyRef.hpp"
// Including type: Oculus.Interaction.Grab.GrabTypeFlags
#include "Oculus/Interaction/Grab/GrabTypeFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction::HandGrab
namespace Oculus::Interaction::HandGrab {
  // Forward declaring type: HandGrabInteractable
  class HandGrabInteractable;
  // Forward declaring type: HandGrabResult
  class HandGrabResult;
  // Forward declaring type: HandGrabTarget
  class HandGrabTarget;
  // Forward declaring type: IHandGrabInteractable
  class IHandGrabInteractable;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Object because it is already included!
  // Forward declaring type: Rigidbody
  class Rigidbody;
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: SphereCollider
  class SphereCollider;
}
// Forward declaring namespace: Oculus::Interaction::Input
namespace Oculus::Interaction::Input {
  // Forward declaring type: IHand
  class IHand;
  // Forward declaring type: HandFingerFlags
  struct HandFingerFlags;
}
// Forward declaring namespace: Oculus::Interaction::GrabAPI
namespace Oculus::Interaction::GrabAPI {
  // Forward declaring type: HandGrabAPI
  class HandGrabAPI;
}
// Forward declaring namespace: Oculus::Interaction::Throw
namespace Oculus::Interaction::Throw {
  // Forward declaring type: IVelocityCalculator
  class IVelocityCalculator;
}
// Forward declaring namespace: Oculus::Interaction
namespace Oculus::Interaction {
  // Forward declaring type: IMovement
  class IMovement;
  // Skipping declaration: PointerEvent because it is already included!
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`1<TResult>
  template<typename TResult>
  class Func_1;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.HandGrab
namespace Oculus::Interaction::HandGrab {
  // Forward declaring type: HandGrabInteractor
  class HandGrabInteractor;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::HandGrab::HandGrabInteractor);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::HandGrab::HandGrabInteractor*, "Oculus.Interaction.HandGrab", "HandGrabInteractor");
// Type namespace: Oculus.Interaction.HandGrab
namespace Oculus::Interaction::HandGrab {
  // WARNING Size may be invalid!
  // Autogenerated type: Oculus.Interaction.HandGrab.HandGrabInteractor
  // [TokenAttribute] Offset: FFFFFFFF
  class HandGrabInteractor : public ::Oculus::Interaction::PointerInteractor_2<::Oculus::Interaction::HandGrab::HandGrabInteractor*, ::Oculus::Interaction::HandGrab::HandGrabInteractable*>/*, public ::Oculus::Interaction::HandGrab::IHandGrabInteractor, public ::Oculus::Interaction::IRigidbodyRef*/ {
    public:
    // Nested type: ::Oculus::Interaction::HandGrab::HandGrabInteractor::$$c
    class $$c;
    // Nested type: ::Oculus::Interaction::HandGrab::HandGrabInteractor::$$c__DisplayClass82_0
    class $$c__DisplayClass82_0;
    // Nested type: ::Oculus::Interaction::HandGrab::HandGrabInteractor::$$c__DisplayClass84_0
    class $$c__DisplayClass84_0;
    public:
    // private UnityEngine.Object _hand
    // Size: 0x8
    // Offset: 0x118
    ::UnityEngine::Object* hand;
    // Field size check
    static_assert(sizeof(::UnityEngine::Object*) == 0x8);
    // private Oculus.Interaction.Input.IHand <Hand>k__BackingField
    // Size: 0x8
    // Offset: 0x120
    ::Oculus::Interaction::Input::IHand* Hand;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Input::IHand*) == 0x8);
    // private UnityEngine.Rigidbody _rigidbody
    // Size: 0x8
    // Offset: 0x128
    ::UnityEngine::Rigidbody* rigidbody;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rigidbody*) == 0x8);
    // private Oculus.Interaction.GrabAPI.HandGrabAPI _handGrabApi
    // Size: 0x8
    // Offset: 0x130
    ::Oculus::Interaction::GrabAPI::HandGrabAPI* handGrabApi;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::GrabAPI::HandGrabAPI*) == 0x8);
    // private Oculus.Interaction.Grab.GrabTypeFlags _supportedGrabTypes
    // Size: 0x4
    // Offset: 0x138
    ::Oculus::Interaction::Grab::GrabTypeFlags supportedGrabTypes;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Grab::GrabTypeFlags) == 0x4);
    // private System.Boolean _hoverOnZeroStrength
    // Size: 0x1
    // Offset: 0x13C
    bool hoverOnZeroStrength;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private UnityEngine.Transform _grabOrigin
    // Size: 0x8
    // Offset: 0x140
    ::UnityEngine::Transform* grabOrigin;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private UnityEngine.Transform _gripPoint
    // Size: 0x8
    // Offset: 0x148
    ::UnityEngine::Transform* gripPoint;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private UnityEngine.SphereCollider _gripCollider
    // Size: 0x8
    // Offset: 0x150
    ::UnityEngine::SphereCollider* gripCollider;
    // Field size check
    static_assert(sizeof(::UnityEngine::SphereCollider*) == 0x8);
    // private UnityEngine.Transform _pinchPoint
    // Size: 0x8
    // Offset: 0x158
    ::UnityEngine::Transform* pinchPoint;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private UnityEngine.SphereCollider _pinchCollider
    // Size: 0x8
    // Offset: 0x160
    ::UnityEngine::SphereCollider* pinchCollider;
    // Field size check
    static_assert(sizeof(::UnityEngine::SphereCollider*) == 0x8);
    // private UnityEngine.Object _velocityCalculator
    // Size: 0x8
    // Offset: 0x168
    ::UnityEngine::Object* velocityCalculator;
    // Field size check
    static_assert(sizeof(::UnityEngine::Object*) == 0x8);
    // private Oculus.Interaction.Throw.IVelocityCalculator <VelocityCalculator>k__BackingField
    // Size: 0x8
    // Offset: 0x170
    ::Oculus::Interaction::Throw::IVelocityCalculator* VelocityCalculator;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Throw::IVelocityCalculator*) == 0x8);
    // private System.Boolean _handGrabShouldSelect
    // Size: 0x1
    // Offset: 0x178
    bool handGrabShouldSelect;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _handGrabShouldUnselect
    // Size: 0x1
    // Offset: 0x179
    bool handGrabShouldUnselect;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private Oculus.Interaction.HandGrab.HandGrabResult _cachedResult
    // Size: 0x8
    // Offset: 0x180
    ::Oculus::Interaction::HandGrab::HandGrabResult* cachedResult;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::HandGrab::HandGrabResult*) == 0x8);
    // private Oculus.Interaction.HandGrab.HandGrabInteractable _selectedInteractableOverride
    // Size: 0x8
    // Offset: 0x188
    ::Oculus::Interaction::HandGrab::HandGrabInteractable* selectedInteractableOverride;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::HandGrab::HandGrabInteractable*) == 0x8);
    // private Oculus.Interaction.IMovement <Movement>k__BackingField
    // Size: 0x8
    // Offset: 0x190
    ::Oculus::Interaction::IMovement* Movement;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::IMovement*) == 0x8);
    // private System.Boolean <MovementFinished>k__BackingField
    // Size: 0x1
    // Offset: 0x198
    bool MovementFinished;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private readonly Oculus.Interaction.HandGrab.HandGrabTarget <HandGrabTarget>k__BackingField
    // Size: 0x8
    // Offset: 0x1A0
    ::Oculus::Interaction::HandGrab::HandGrabTarget* HandGrabTarget;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::HandGrab::HandGrabTarget*) == 0x8);
    // private System.Single <FingersStrength>k__BackingField
    // Size: 0x4
    // Offset: 0x1A8
    float FingersStrength;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single <WristStrength>k__BackingField
    // Size: 0x4
    // Offset: 0x1AC
    float WristStrength;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.Pose <WristToGrabPoseOffset>k__BackingField
    // Size: 0x1C
    // Offset: 0x1B0
    ::UnityEngine::Pose WristToGrabPoseOffset;
    // Field size check
    static_assert(sizeof(::UnityEngine::Pose) == 0x1C);
    public:
    // Creating interface conversion operator: operator ::Oculus::Interaction::HandGrab::IHandGrabInteractor
    operator ::Oculus::Interaction::HandGrab::IHandGrabInteractor() noexcept {
      return *reinterpret_cast<::Oculus::Interaction::HandGrab::IHandGrabInteractor*>(this);
    }
    // Creating interface conversion operator: operator ::Oculus::Interaction::IRigidbodyRef
    operator ::Oculus::Interaction::IRigidbodyRef() noexcept {
      return *reinterpret_cast<::Oculus::Interaction::IRigidbodyRef*>(this);
    }
    // Get instance field reference: private UnityEngine.Object _hand
    [[deprecated("Use field access instead!")]] ::UnityEngine::Object*& dyn__hand();
    // Get instance field reference: private Oculus.Interaction.Input.IHand <Hand>k__BackingField
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IHand*& dyn_$Hand$k__BackingField();
    // Get instance field reference: private UnityEngine.Rigidbody _rigidbody
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& dyn__rigidbody();
    // Get instance field reference: private Oculus.Interaction.GrabAPI.HandGrabAPI _handGrabApi
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::GrabAPI::HandGrabAPI*& dyn__handGrabApi();
    // Get instance field reference: private Oculus.Interaction.Grab.GrabTypeFlags _supportedGrabTypes
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Grab::GrabTypeFlags& dyn__supportedGrabTypes();
    // Get instance field reference: private System.Boolean _hoverOnZeroStrength
    [[deprecated("Use field access instead!")]] bool& dyn__hoverOnZeroStrength();
    // Get instance field reference: private UnityEngine.Transform _grabOrigin
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn__grabOrigin();
    // Get instance field reference: private UnityEngine.Transform _gripPoint
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn__gripPoint();
    // Get instance field reference: private UnityEngine.SphereCollider _gripCollider
    [[deprecated("Use field access instead!")]] ::UnityEngine::SphereCollider*& dyn__gripCollider();
    // Get instance field reference: private UnityEngine.Transform _pinchPoint
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn__pinchPoint();
    // Get instance field reference: private UnityEngine.SphereCollider _pinchCollider
    [[deprecated("Use field access instead!")]] ::UnityEngine::SphereCollider*& dyn__pinchCollider();
    // Get instance field reference: private UnityEngine.Object _velocityCalculator
    [[deprecated("Use field access instead!")]] ::UnityEngine::Object*& dyn__velocityCalculator();
    // Get instance field reference: private Oculus.Interaction.Throw.IVelocityCalculator <VelocityCalculator>k__BackingField
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Throw::IVelocityCalculator*& dyn_$VelocityCalculator$k__BackingField();
    // Get instance field reference: private System.Boolean _handGrabShouldSelect
    [[deprecated("Use field access instead!")]] bool& dyn__handGrabShouldSelect();
    // Get instance field reference: private System.Boolean _handGrabShouldUnselect
    [[deprecated("Use field access instead!")]] bool& dyn__handGrabShouldUnselect();
    // Get instance field reference: private Oculus.Interaction.HandGrab.HandGrabResult _cachedResult
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::HandGrabResult*& dyn__cachedResult();
    // Get instance field reference: private Oculus.Interaction.HandGrab.HandGrabInteractable _selectedInteractableOverride
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::HandGrabInteractable*& dyn__selectedInteractableOverride();
    // Get instance field reference: private Oculus.Interaction.IMovement <Movement>k__BackingField
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::IMovement*& dyn_$Movement$k__BackingField();
    // Get instance field reference: private System.Boolean <MovementFinished>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$MovementFinished$k__BackingField();
    // Get instance field reference: private readonly Oculus.Interaction.HandGrab.HandGrabTarget <HandGrabTarget>k__BackingField
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::HandGrabTarget*& dyn_$HandGrabTarget$k__BackingField();
    // Get instance field reference: private System.Single <FingersStrength>k__BackingField
    [[deprecated("Use field access instead!")]] float& dyn_$FingersStrength$k__BackingField();
    // Get instance field reference: private System.Single <WristStrength>k__BackingField
    [[deprecated("Use field access instead!")]] float& dyn_$WristStrength$k__BackingField();
    // Get instance field reference: private UnityEngine.Pose <WristToGrabPoseOffset>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Pose& dyn_$WristToGrabPoseOffset$k__BackingField();
    // public Oculus.Interaction.Input.IHand get_Hand()
    // Offset: 0x4826DBC
    ::Oculus::Interaction::Input::IHand* get_Hand();
    // private System.Void set_Hand(Oculus.Interaction.Input.IHand value)
    // Offset: 0x4826DC4
    void set_Hand(::Oculus::Interaction::Input::IHand* value);
    // public System.Boolean get_HoverOnZeroStrength()
    // Offset: 0x4826DD4
    bool get_HoverOnZeroStrength();
    // public System.Void set_HoverOnZeroStrength(System.Boolean value)
    // Offset: 0x4826DDC
    void set_HoverOnZeroStrength(bool value);
    // public Oculus.Interaction.Throw.IVelocityCalculator get_VelocityCalculator()
    // Offset: 0x4826DE8
    ::Oculus::Interaction::Throw::IVelocityCalculator* get_VelocityCalculator();
    // public System.Void set_VelocityCalculator(Oculus.Interaction.Throw.IVelocityCalculator value)
    // Offset: 0x4826DF0
    void set_VelocityCalculator(::Oculus::Interaction::Throw::IVelocityCalculator* value);
    // public Oculus.Interaction.IMovement get_Movement()
    // Offset: 0x4826E00
    ::Oculus::Interaction::IMovement* get_Movement();
    // public System.Void set_Movement(Oculus.Interaction.IMovement value)
    // Offset: 0x4826E08
    void set_Movement(::Oculus::Interaction::IMovement* value);
    // public System.Boolean get_MovementFinished()
    // Offset: 0x4826E18
    bool get_MovementFinished();
    // public System.Void set_MovementFinished(System.Boolean value)
    // Offset: 0x4826E20
    void set_MovementFinished(bool value);
    // public Oculus.Interaction.HandGrab.HandGrabTarget get_HandGrabTarget()
    // Offset: 0x4826E2C
    ::Oculus::Interaction::HandGrab::HandGrabTarget* get_HandGrabTarget();
    // public UnityEngine.Transform get_WristPoint()
    // Offset: 0x4826E34
    ::UnityEngine::Transform* get_WristPoint();
    // public UnityEngine.Transform get_PinchPoint()
    // Offset: 0x4826E3C
    ::UnityEngine::Transform* get_PinchPoint();
    // public UnityEngine.Transform get_PalmPoint()
    // Offset: 0x4826E44
    ::UnityEngine::Transform* get_PalmPoint();
    // public Oculus.Interaction.GrabAPI.HandGrabAPI get_HandGrabApi()
    // Offset: 0x4826E4C
    ::Oculus::Interaction::GrabAPI::HandGrabAPI* get_HandGrabApi();
    // public Oculus.Interaction.Grab.GrabTypeFlags get_SupportedGrabTypes()
    // Offset: 0x4826E54
    ::Oculus::Interaction::Grab::GrabTypeFlags get_SupportedGrabTypes();
    // public Oculus.Interaction.HandGrab.IHandGrabInteractable get_TargetInteractable()
    // Offset: 0x4826E5C
    ::Oculus::Interaction::HandGrab::IHandGrabInteractable* get_TargetInteractable();
    // public System.Boolean get_IsGrabbing()
    // Offset: 0x4826E98
    bool get_IsGrabbing();
    // public System.Single get_FingersStrength()
    // Offset: 0x4826F6C
    float get_FingersStrength();
    // private System.Void set_FingersStrength(System.Single value)
    // Offset: 0x4826F74
    void set_FingersStrength(float value);
    // public System.Single get_WristStrength()
    // Offset: 0x4826F7C
    float get_WristStrength();
    // private System.Void set_WristStrength(System.Single value)
    // Offset: 0x4826F84
    void set_WristStrength(float value);
    // public UnityEngine.Pose get_WristToGrabPoseOffset()
    // Offset: 0x4826F8C
    ::UnityEngine::Pose get_WristToGrabPoseOffset();
    // private System.Void set_WristToGrabPoseOffset(UnityEngine.Pose value)
    // Offset: 0x4826FA4
    void set_WristToGrabPoseOffset(::UnityEngine::Pose value);
    // public Oculus.Interaction.Input.HandFingerFlags GrabbingFingers()
    // Offset: 0x4826FC4
    ::Oculus::Interaction::Input::HandFingerFlags GrabbingFingers();
    // public UnityEngine.Rigidbody get_Rigidbody()
    // Offset: 0x4827004
    ::UnityEngine::Rigidbody* get_Rigidbody();
    // protected System.Void Reset()
    // Offset: 0x482700C
    void Reset();
    // protected System.Void InteractableSet(Oculus.Interaction.HandGrab.HandGrabInteractable interactable)
    // Offset: 0x4827448
    void InteractableSet(::Oculus::Interaction::HandGrab::HandGrabInteractable* interactable);
    // protected System.Void InteractableUnset(Oculus.Interaction.HandGrab.HandGrabInteractable interactable)
    // Offset: 0x48274B8
    void InteractableUnset(::Oculus::Interaction::HandGrab::HandGrabInteractable* interactable);
    // protected System.Void InteractableSelected(Oculus.Interaction.HandGrab.HandGrabInteractable interactable)
    // Offset: 0x4827758
    void InteractableSelected(::Oculus::Interaction::HandGrab::HandGrabInteractable* interactable);
    // protected System.Void InteractableUnselected(Oculus.Interaction.HandGrab.HandGrabInteractable interactable)
    // Offset: 0x4827834
    void InteractableUnselected(::Oculus::Interaction::HandGrab::HandGrabInteractable* interactable);
    // public System.Boolean CanSelect(Oculus.Interaction.HandGrab.HandGrabInteractable interactable)
    // Offset: 0x4827F70
    bool CanSelect(::Oculus::Interaction::HandGrab::HandGrabInteractable* interactable);
    // protected Oculus.Interaction.HandGrab.HandGrabInteractable ComputeCandidate()
    // Offset: 0x4827FEC
    ::Oculus::Interaction::HandGrab::HandGrabInteractable* ComputeCandidate();
    // private Oculus.Interaction.Grab.GrabTypeFlags SelectingGrabTypes(Oculus.Interaction.HandGrab.HandGrabInteractable interactable, System.Single minFingerScoreRequired, out System.Single fingerScore)
    // Offset: 0x48282E8
    ::Oculus::Interaction::Grab::GrabTypeFlags SelectingGrabTypes(::Oculus::Interaction::HandGrab::HandGrabInteractable* interactable, float minFingerScoreRequired, ByRef<float> fingerScore);
    // public System.Void ForceSelect(Oculus.Interaction.HandGrab.HandGrabInteractable interactable, System.Boolean allowManualRelease)
    // Offset: 0x4828618
    void ForceSelect(::Oculus::Interaction::HandGrab::HandGrabInteractable* interactable, bool allowManualRelease);
    // public System.Void ForceRelease()
    // Offset: 0x48287F4
    void ForceRelease();
    // public System.Void SetComputeCandidateOverride(System.Func`1<Oculus.Interaction.HandGrab.HandGrabInteractable> computeCandidate, System.Boolean shouldClearOverrideOnSelect)
    // Offset: 0x4828954
    void SetComputeCandidateOverride(::System::Func_1<::Oculus::Interaction::HandGrab::HandGrabInteractable*>* computeCandidate, bool shouldClearOverrideOnSelect);
    // private System.Boolean OverlapsSphere(Oculus.Interaction.HandGrab.HandGrabInteractable interactable, UnityEngine.SphereCollider sphere)
    // Offset: 0x4828518
    bool OverlapsSphere(::Oculus::Interaction::HandGrab::HandGrabInteractable* interactable, ::UnityEngine::SphereCollider* sphere);
    // private System.Void UpdateTarget(Oculus.Interaction.HandGrab.HandGrabInteractable interactable)
    // Offset: 0x48273D0
    void UpdateTarget(::Oculus::Interaction::HandGrab::HandGrabInteractable* interactable);
    // private System.Void UpdateTargetSliding(Oculus.Interaction.HandGrab.HandGrabInteractable interactable)
    // Offset: 0x48276F8
    void UpdateTargetSliding(::Oculus::Interaction::HandGrab::HandGrabInteractable* interactable);
    // private System.Boolean TrySetTarget(Oculus.Interaction.HandGrab.IHandGrabInteractable interactable, Oculus.Interaction.Grab.GrabTypeFlags selectingGrabTypes)
    // Offset: 0x4827C6C
    bool TrySetTarget(::Oculus::Interaction::HandGrab::IHandGrabInteractable* interactable, ::Oculus::Interaction::Grab::GrabTypeFlags selectingGrabTypes);
    // private System.Void SetGrabStrength(System.Single strength)
    // Offset: 0x4827518
    void SetGrabStrength(float strength);
    // public System.Void InjectAllHandGrabInteractor(Oculus.Interaction.GrabAPI.HandGrabAPI handGrabApi, UnityEngine.Transform grabOrigin, Oculus.Interaction.Input.IHand hand, UnityEngine.Rigidbody rigidbody, Oculus.Interaction.Grab.GrabTypeFlags supportedGrabTypes)
    // Offset: 0x4828BAC
    void InjectAllHandGrabInteractor(::Oculus::Interaction::GrabAPI::HandGrabAPI* handGrabApi, ::UnityEngine::Transform* grabOrigin, ::Oculus::Interaction::Input::IHand* hand, ::UnityEngine::Rigidbody* rigidbody, ::Oculus::Interaction::Grab::GrabTypeFlags supportedGrabTypes);
    // public System.Void InjectHandGrabApi(Oculus.Interaction.GrabAPI.HandGrabAPI handGrabAPI)
    // Offset: 0x4828CE8
    void InjectHandGrabApi(::Oculus::Interaction::GrabAPI::HandGrabAPI* handGrabAPI);
    // public System.Void InjectHand(Oculus.Interaction.Input.IHand hand)
    // Offset: 0x4828C18
    void InjectHand(::Oculus::Interaction::Input::IHand* hand);
    // public System.Void InjectRigidbody(UnityEngine.Rigidbody rigidbody)
    // Offset: 0x4828CF8
    void InjectRigidbody(::UnityEngine::Rigidbody* rigidbody);
    // public System.Void InjectSupportedGrabTypes(Oculus.Interaction.Grab.GrabTypeFlags supportedGrabTypes)
    // Offset: 0x4828D08
    void InjectSupportedGrabTypes(::Oculus::Interaction::Grab::GrabTypeFlags supportedGrabTypes);
    // public System.Void InjectGrabOrigin(UnityEngine.Transform grabOrigin)
    // Offset: 0x4828D10
    void InjectGrabOrigin(::UnityEngine::Transform* grabOrigin);
    // public System.Void InjectOptionalGripPoint(UnityEngine.Transform gripPoint)
    // Offset: 0x4828D20
    void InjectOptionalGripPoint(::UnityEngine::Transform* gripPoint);
    // public System.Void InjectOptionalGripCollider(UnityEngine.SphereCollider gripCollider)
    // Offset: 0x4828D30
    void InjectOptionalGripCollider(::UnityEngine::SphereCollider* gripCollider);
    // public System.Void InjectOptionalPinchPoint(UnityEngine.Transform pinchPoint)
    // Offset: 0x4828D40
    void InjectOptionalPinchPoint(::UnityEngine::Transform* pinchPoint);
    // public System.Void InjectOptionalPinchCollider(UnityEngine.SphereCollider pinchCollider)
    // Offset: 0x4828D50
    void InjectOptionalPinchCollider(::UnityEngine::SphereCollider* pinchCollider);
    // public System.Void InjectOptionalVelocityCalculator(Oculus.Interaction.Throw.IVelocityCalculator velocityCalculator)
    // Offset: 0x4828D60
    void InjectOptionalVelocityCalculator(::Oculus::Interaction::Throw::IVelocityCalculator* velocityCalculator);
    // private System.Void <Start>b__68_0()
    // Offset: 0x482901C
    void $Start$b__68_0();
    // protected override System.Void Awake()
    // Offset: 0x482711C
    // Implemented from: Oculus.Interaction.Interactor`2
    // Base method: System.Void Interactor_2::Awake()
    void Awake();
    // protected override System.Void Start()
    // Offset: 0x48271E4
    // Implemented from: Oculus.Interaction.Interactor`2
    // Base method: System.Void Interactor_2::Start()
    void Start();
    // protected override System.Void DoHoverUpdate()
    // Offset: 0x4827304
    // Implemented from: Oculus.Interaction.Interactor`2
    // Base method: System.Void Interactor_2::DoHoverUpdate()
    void DoHoverUpdate();
    // protected override System.Void DoSelectUpdate()
    // Offset: 0x4827524
    // Implemented from: Oculus.Interaction.Interactor`2
    // Base method: System.Void Interactor_2::DoSelectUpdate()
    void DoSelectUpdate();
    // protected override System.Void HandlePointerEventRaised(Oculus.Interaction.PointerEvent evt)
    // Offset: 0x48279C8
    // Implemented from: Oculus.Interaction.PointerInteractor`2
    // Base method: System.Void PointerInteractor_2::HandlePointerEventRaised(Oculus.Interaction.PointerEvent evt)
    void HandlePointerEventRaised(::Oculus::Interaction::PointerEvent evt);
    // protected override UnityEngine.Pose ComputePointerPose()
    // Offset: 0x4827DE0
    // Implemented from: Oculus.Interaction.PointerInteractor`2
    // Base method: UnityEngine.Pose PointerInteractor_2::ComputePointerPose()
    ::UnityEngine::Pose ComputePointerPose();
    // protected override System.Boolean ComputeShouldSelect()
    // Offset: 0x4827EB0
    // Implemented from: Oculus.Interaction.Interactor`2
    // Base method: System.Boolean Interactor_2::ComputeShouldSelect()
    bool ComputeShouldSelect();
    // protected override System.Boolean ComputeShouldUnselect()
    // Offset: 0x4827EB8
    // Implemented from: Oculus.Interaction.Interactor`2
    // Base method: System.Boolean Interactor_2::ComputeShouldUnselect()
    bool ComputeShouldUnselect();
    // public override System.Void Unselect()
    // Offset: 0x4828A48
    // Implemented from: Oculus.Interaction.Interactor`2
    // Base method: System.Void Interactor_2::Unselect()
    void Unselect();
    // public System.Void .ctor()
    // Offset: 0x4828E30
    // Implemented from: Oculus.Interaction.PointerInteractor`2
    // Base method: System.Void PointerInteractor_2::.ctor()
    // Base method: System.Void Interactor_2::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static HandGrabInteractor* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<HandGrabInteractor*, creationType>()));
    }
  }; // Oculus.Interaction.HandGrab.HandGrabInteractor
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::get_Hand
// Il2CppName: get_Hand
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::Input::IHand* (Oculus::Interaction::HandGrab::HandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::HandGrabInteractor::get_Hand)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "get_Hand", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::set_Hand
// Il2CppName: set_Hand
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::HandGrabInteractor::*)(::Oculus::Interaction::Input::IHand*)>(&Oculus::Interaction::HandGrab::HandGrabInteractor::set_Hand)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "IHand")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "set_Hand", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::get_HoverOnZeroStrength
// Il2CppName: get_HoverOnZeroStrength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::HandGrab::HandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::HandGrabInteractor::get_HoverOnZeroStrength)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "get_HoverOnZeroStrength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::set_HoverOnZeroStrength
// Il2CppName: set_HoverOnZeroStrength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::HandGrabInteractor::*)(bool)>(&Oculus::Interaction::HandGrab::HandGrabInteractor::set_HoverOnZeroStrength)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "set_HoverOnZeroStrength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::get_VelocityCalculator
// Il2CppName: get_VelocityCalculator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::Throw::IVelocityCalculator* (Oculus::Interaction::HandGrab::HandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::HandGrabInteractor::get_VelocityCalculator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "get_VelocityCalculator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::set_VelocityCalculator
// Il2CppName: set_VelocityCalculator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::HandGrabInteractor::*)(::Oculus::Interaction::Throw::IVelocityCalculator*)>(&Oculus::Interaction::HandGrab::HandGrabInteractor::set_VelocityCalculator)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Throw", "IVelocityCalculator")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "set_VelocityCalculator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::get_Movement
// Il2CppName: get_Movement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::IMovement* (Oculus::Interaction::HandGrab::HandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::HandGrabInteractor::get_Movement)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "get_Movement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::set_Movement
// Il2CppName: set_Movement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::HandGrabInteractor::*)(::Oculus::Interaction::IMovement*)>(&Oculus::Interaction::HandGrab::HandGrabInteractor::set_Movement)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "IMovement")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "set_Movement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::get_MovementFinished
// Il2CppName: get_MovementFinished
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::HandGrab::HandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::HandGrabInteractor::get_MovementFinished)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "get_MovementFinished", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::set_MovementFinished
// Il2CppName: set_MovementFinished
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::HandGrabInteractor::*)(bool)>(&Oculus::Interaction::HandGrab::HandGrabInteractor::set_MovementFinished)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "set_MovementFinished", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::get_HandGrabTarget
// Il2CppName: get_HandGrabTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::HandGrab::HandGrabTarget* (Oculus::Interaction::HandGrab::HandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::HandGrabInteractor::get_HandGrabTarget)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "get_HandGrabTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::get_WristPoint
// Il2CppName: get_WristPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (Oculus::Interaction::HandGrab::HandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::HandGrabInteractor::get_WristPoint)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "get_WristPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::get_PinchPoint
// Il2CppName: get_PinchPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (Oculus::Interaction::HandGrab::HandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::HandGrabInteractor::get_PinchPoint)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "get_PinchPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::get_PalmPoint
// Il2CppName: get_PalmPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (Oculus::Interaction::HandGrab::HandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::HandGrabInteractor::get_PalmPoint)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "get_PalmPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::get_HandGrabApi
// Il2CppName: get_HandGrabApi
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::GrabAPI::HandGrabAPI* (Oculus::Interaction::HandGrab::HandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::HandGrabInteractor::get_HandGrabApi)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "get_HandGrabApi", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::get_SupportedGrabTypes
// Il2CppName: get_SupportedGrabTypes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::Grab::GrabTypeFlags (Oculus::Interaction::HandGrab::HandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::HandGrabInteractor::get_SupportedGrabTypes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "get_SupportedGrabTypes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::get_TargetInteractable
// Il2CppName: get_TargetInteractable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::HandGrab::IHandGrabInteractable* (Oculus::Interaction::HandGrab::HandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::HandGrabInteractor::get_TargetInteractable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "get_TargetInteractable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::get_IsGrabbing
// Il2CppName: get_IsGrabbing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::HandGrab::HandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::HandGrabInteractor::get_IsGrabbing)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "get_IsGrabbing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::get_FingersStrength
// Il2CppName: get_FingersStrength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Oculus::Interaction::HandGrab::HandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::HandGrabInteractor::get_FingersStrength)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "get_FingersStrength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::set_FingersStrength
// Il2CppName: set_FingersStrength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::HandGrabInteractor::*)(float)>(&Oculus::Interaction::HandGrab::HandGrabInteractor::set_FingersStrength)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "set_FingersStrength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::get_WristStrength
// Il2CppName: get_WristStrength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Oculus::Interaction::HandGrab::HandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::HandGrabInteractor::get_WristStrength)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "get_WristStrength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::set_WristStrength
// Il2CppName: set_WristStrength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::HandGrabInteractor::*)(float)>(&Oculus::Interaction::HandGrab::HandGrabInteractor::set_WristStrength)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "set_WristStrength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::get_WristToGrabPoseOffset
// Il2CppName: get_WristToGrabPoseOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Pose (Oculus::Interaction::HandGrab::HandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::HandGrabInteractor::get_WristToGrabPoseOffset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "get_WristToGrabPoseOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::set_WristToGrabPoseOffset
// Il2CppName: set_WristToGrabPoseOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::HandGrabInteractor::*)(::UnityEngine::Pose)>(&Oculus::Interaction::HandGrab::HandGrabInteractor::set_WristToGrabPoseOffset)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "set_WristToGrabPoseOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::GrabbingFingers
// Il2CppName: GrabbingFingers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::Input::HandFingerFlags (Oculus::Interaction::HandGrab::HandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::HandGrabInteractor::GrabbingFingers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "GrabbingFingers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::get_Rigidbody
// Il2CppName: get_Rigidbody
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rigidbody* (Oculus::Interaction::HandGrab::HandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::HandGrabInteractor::get_Rigidbody)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "get_Rigidbody", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::HandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::HandGrabInteractor::Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::InteractableSet
// Il2CppName: InteractableSet
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::HandGrabInteractor::*)(::Oculus::Interaction::HandGrab::HandGrabInteractable*)>(&Oculus::Interaction::HandGrab::HandGrabInteractor::InteractableSet)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "HandGrabInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "InteractableSet", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::InteractableUnset
// Il2CppName: InteractableUnset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::HandGrabInteractor::*)(::Oculus::Interaction::HandGrab::HandGrabInteractable*)>(&Oculus::Interaction::HandGrab::HandGrabInteractor::InteractableUnset)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "HandGrabInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "InteractableUnset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::InteractableSelected
// Il2CppName: InteractableSelected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::HandGrabInteractor::*)(::Oculus::Interaction::HandGrab::HandGrabInteractable*)>(&Oculus::Interaction::HandGrab::HandGrabInteractor::InteractableSelected)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "HandGrabInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "InteractableSelected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::InteractableUnselected
// Il2CppName: InteractableUnselected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::HandGrabInteractor::*)(::Oculus::Interaction::HandGrab::HandGrabInteractable*)>(&Oculus::Interaction::HandGrab::HandGrabInteractor::InteractableUnselected)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "HandGrabInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "InteractableUnselected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::CanSelect
// Il2CppName: CanSelect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::HandGrab::HandGrabInteractor::*)(::Oculus::Interaction::HandGrab::HandGrabInteractable*)>(&Oculus::Interaction::HandGrab::HandGrabInteractor::CanSelect)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "HandGrabInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "CanSelect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::ComputeCandidate
// Il2CppName: ComputeCandidate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::HandGrab::HandGrabInteractable* (Oculus::Interaction::HandGrab::HandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::HandGrabInteractor::ComputeCandidate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "ComputeCandidate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::SelectingGrabTypes
// Il2CppName: SelectingGrabTypes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::Grab::GrabTypeFlags (Oculus::Interaction::HandGrab::HandGrabInteractor::*)(::Oculus::Interaction::HandGrab::HandGrabInteractable*, float, ByRef<float>)>(&Oculus::Interaction::HandGrab::HandGrabInteractor::SelectingGrabTypes)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "HandGrabInteractable")->byval_arg;
    static auto* minFingerScoreRequired = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* fingerScore = &::il2cpp_utils::GetClassFromName("System", "Single")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "SelectingGrabTypes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable, minFingerScoreRequired, fingerScore});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::ForceSelect
// Il2CppName: ForceSelect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::HandGrabInteractor::*)(::Oculus::Interaction::HandGrab::HandGrabInteractable*, bool)>(&Oculus::Interaction::HandGrab::HandGrabInteractor::ForceSelect)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "HandGrabInteractable")->byval_arg;
    static auto* allowManualRelease = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "ForceSelect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable, allowManualRelease});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::ForceRelease
// Il2CppName: ForceRelease
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::HandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::HandGrabInteractor::ForceRelease)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "ForceRelease", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::SetComputeCandidateOverride
// Il2CppName: SetComputeCandidateOverride
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::HandGrabInteractor::*)(::System::Func_1<::Oculus::Interaction::HandGrab::HandGrabInteractable*>*, bool)>(&Oculus::Interaction::HandGrab::HandGrabInteractor::SetComputeCandidateOverride)> {
  static const MethodInfo* get() {
    static auto* computeCandidate = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "HandGrabInteractable")})->byval_arg;
    static auto* shouldClearOverrideOnSelect = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "SetComputeCandidateOverride", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{computeCandidate, shouldClearOverrideOnSelect});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::OverlapsSphere
// Il2CppName: OverlapsSphere
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::HandGrab::HandGrabInteractor::*)(::Oculus::Interaction::HandGrab::HandGrabInteractable*, ::UnityEngine::SphereCollider*)>(&Oculus::Interaction::HandGrab::HandGrabInteractor::OverlapsSphere)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "HandGrabInteractable")->byval_arg;
    static auto* sphere = &::il2cpp_utils::GetClassFromName("UnityEngine", "SphereCollider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "OverlapsSphere", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable, sphere});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::UpdateTarget
// Il2CppName: UpdateTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::HandGrabInteractor::*)(::Oculus::Interaction::HandGrab::HandGrabInteractable*)>(&Oculus::Interaction::HandGrab::HandGrabInteractor::UpdateTarget)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "HandGrabInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "UpdateTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::UpdateTargetSliding
// Il2CppName: UpdateTargetSliding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::HandGrabInteractor::*)(::Oculus::Interaction::HandGrab::HandGrabInteractable*)>(&Oculus::Interaction::HandGrab::HandGrabInteractor::UpdateTargetSliding)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "HandGrabInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "UpdateTargetSliding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::TrySetTarget
// Il2CppName: TrySetTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::HandGrab::HandGrabInteractor::*)(::Oculus::Interaction::HandGrab::IHandGrabInteractable*, ::Oculus::Interaction::Grab::GrabTypeFlags)>(&Oculus::Interaction::HandGrab::HandGrabInteractor::TrySetTarget)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "IHandGrabInteractable")->byval_arg;
    static auto* selectingGrabTypes = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Grab", "GrabTypeFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "TrySetTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable, selectingGrabTypes});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::SetGrabStrength
// Il2CppName: SetGrabStrength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::HandGrabInteractor::*)(float)>(&Oculus::Interaction::HandGrab::HandGrabInteractor::SetGrabStrength)> {
  static const MethodInfo* get() {
    static auto* strength = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "SetGrabStrength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{strength});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::InjectAllHandGrabInteractor
// Il2CppName: InjectAllHandGrabInteractor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::HandGrabInteractor::*)(::Oculus::Interaction::GrabAPI::HandGrabAPI*, ::UnityEngine::Transform*, ::Oculus::Interaction::Input::IHand*, ::UnityEngine::Rigidbody*, ::Oculus::Interaction::Grab::GrabTypeFlags)>(&Oculus::Interaction::HandGrab::HandGrabInteractor::InjectAllHandGrabInteractor)> {
  static const MethodInfo* get() {
    static auto* handGrabApi = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.GrabAPI", "HandGrabAPI")->byval_arg;
    static auto* grabOrigin = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* hand = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "IHand")->byval_arg;
    static auto* rigidbody = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rigidbody")->byval_arg;
    static auto* supportedGrabTypes = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Grab", "GrabTypeFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "InjectAllHandGrabInteractor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handGrabApi, grabOrigin, hand, rigidbody, supportedGrabTypes});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::InjectHandGrabApi
// Il2CppName: InjectHandGrabApi
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::HandGrabInteractor::*)(::Oculus::Interaction::GrabAPI::HandGrabAPI*)>(&Oculus::Interaction::HandGrab::HandGrabInteractor::InjectHandGrabApi)> {
  static const MethodInfo* get() {
    static auto* handGrabAPI = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.GrabAPI", "HandGrabAPI")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "InjectHandGrabApi", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handGrabAPI});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::InjectHand
// Il2CppName: InjectHand
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::HandGrabInteractor::*)(::Oculus::Interaction::Input::IHand*)>(&Oculus::Interaction::HandGrab::HandGrabInteractor::InjectHand)> {
  static const MethodInfo* get() {
    static auto* hand = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "IHand")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "InjectHand", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{hand});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::InjectRigidbody
// Il2CppName: InjectRigidbody
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::HandGrabInteractor::*)(::UnityEngine::Rigidbody*)>(&Oculus::Interaction::HandGrab::HandGrabInteractor::InjectRigidbody)> {
  static const MethodInfo* get() {
    static auto* rigidbody = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rigidbody")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "InjectRigidbody", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rigidbody});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::InjectSupportedGrabTypes
// Il2CppName: InjectSupportedGrabTypes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::HandGrabInteractor::*)(::Oculus::Interaction::Grab::GrabTypeFlags)>(&Oculus::Interaction::HandGrab::HandGrabInteractor::InjectSupportedGrabTypes)> {
  static const MethodInfo* get() {
    static auto* supportedGrabTypes = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Grab", "GrabTypeFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "InjectSupportedGrabTypes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{supportedGrabTypes});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::InjectGrabOrigin
// Il2CppName: InjectGrabOrigin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::HandGrabInteractor::*)(::UnityEngine::Transform*)>(&Oculus::Interaction::HandGrab::HandGrabInteractor::InjectGrabOrigin)> {
  static const MethodInfo* get() {
    static auto* grabOrigin = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "InjectGrabOrigin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{grabOrigin});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::InjectOptionalGripPoint
// Il2CppName: InjectOptionalGripPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::HandGrabInteractor::*)(::UnityEngine::Transform*)>(&Oculus::Interaction::HandGrab::HandGrabInteractor::InjectOptionalGripPoint)> {
  static const MethodInfo* get() {
    static auto* gripPoint = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "InjectOptionalGripPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gripPoint});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::InjectOptionalGripCollider
// Il2CppName: InjectOptionalGripCollider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::HandGrabInteractor::*)(::UnityEngine::SphereCollider*)>(&Oculus::Interaction::HandGrab::HandGrabInteractor::InjectOptionalGripCollider)> {
  static const MethodInfo* get() {
    static auto* gripCollider = &::il2cpp_utils::GetClassFromName("UnityEngine", "SphereCollider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "InjectOptionalGripCollider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gripCollider});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::InjectOptionalPinchPoint
// Il2CppName: InjectOptionalPinchPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::HandGrabInteractor::*)(::UnityEngine::Transform*)>(&Oculus::Interaction::HandGrab::HandGrabInteractor::InjectOptionalPinchPoint)> {
  static const MethodInfo* get() {
    static auto* pinchPoint = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "InjectOptionalPinchPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pinchPoint});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::InjectOptionalPinchCollider
// Il2CppName: InjectOptionalPinchCollider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::HandGrabInteractor::*)(::UnityEngine::SphereCollider*)>(&Oculus::Interaction::HandGrab::HandGrabInteractor::InjectOptionalPinchCollider)> {
  static const MethodInfo* get() {
    static auto* pinchCollider = &::il2cpp_utils::GetClassFromName("UnityEngine", "SphereCollider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "InjectOptionalPinchCollider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pinchCollider});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::InjectOptionalVelocityCalculator
// Il2CppName: InjectOptionalVelocityCalculator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::HandGrabInteractor::*)(::Oculus::Interaction::Throw::IVelocityCalculator*)>(&Oculus::Interaction::HandGrab::HandGrabInteractor::InjectOptionalVelocityCalculator)> {
  static const MethodInfo* get() {
    static auto* velocityCalculator = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Throw", "IVelocityCalculator")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "InjectOptionalVelocityCalculator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{velocityCalculator});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::$Start$b__68_0
// Il2CppName: <Start>b__68_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::HandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::HandGrabInteractor::$Start$b__68_0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "<Start>b__68_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::HandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::HandGrabInteractor::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::HandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::HandGrabInteractor::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::DoHoverUpdate
// Il2CppName: DoHoverUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::HandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::HandGrabInteractor::DoHoverUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "DoHoverUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::DoSelectUpdate
// Il2CppName: DoSelectUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::HandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::HandGrabInteractor::DoSelectUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "DoSelectUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::HandlePointerEventRaised
// Il2CppName: HandlePointerEventRaised
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::HandGrabInteractor::*)(::Oculus::Interaction::PointerEvent)>(&Oculus::Interaction::HandGrab::HandGrabInteractor::HandlePointerEventRaised)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "PointerEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "HandlePointerEventRaised", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::ComputePointerPose
// Il2CppName: ComputePointerPose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Pose (Oculus::Interaction::HandGrab::HandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::HandGrabInteractor::ComputePointerPose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "ComputePointerPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::ComputeShouldSelect
// Il2CppName: ComputeShouldSelect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::HandGrab::HandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::HandGrabInteractor::ComputeShouldSelect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "ComputeShouldSelect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::ComputeShouldUnselect
// Il2CppName: ComputeShouldUnselect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::HandGrab::HandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::HandGrabInteractor::ComputeShouldUnselect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "ComputeShouldUnselect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::Unselect
// Il2CppName: Unselect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::HandGrabInteractor::*)()>(&Oculus::Interaction::HandGrab::HandGrabInteractor::Unselect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor*), "Unselect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
