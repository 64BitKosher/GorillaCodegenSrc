// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.IMovement
#include "Oculus/Interaction/IMovement.hpp"
// Including type: Oculus.Interaction.HandGrab.PoseTravelData
#include "Oculus/Interaction/HandGrab/PoseTravelData.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction
namespace Oculus::Interaction {
  // Forward declaring type: Tween
  class Tween;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.HandGrab
namespace Oculus::Interaction::HandGrab {
  // Forward declaring type: MoveTowardsTarget
  class MoveTowardsTarget;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::HandGrab::MoveTowardsTarget);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::HandGrab::MoveTowardsTarget*, "Oculus.Interaction.HandGrab", "MoveTowardsTarget");
// Type namespace: Oculus.Interaction.HandGrab
namespace Oculus::Interaction::HandGrab {
  // Size: 0x60
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.HandGrab.MoveTowardsTarget
  // [TokenAttribute] Offset: FFFFFFFF
  class MoveTowardsTarget : public ::Il2CppObject/*, public ::Oculus::Interaction::IMovement*/ {
    public:
    public:
    // private Oculus.Interaction.HandGrab.PoseTravelData _travellingData
    // Size: 0x10
    // Offset: 0x10
    ::Oculus::Interaction::HandGrab::PoseTravelData travellingData;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::HandGrab::PoseTravelData) == 0x10);
    // private Oculus.Interaction.Tween _tween
    // Size: 0x8
    // Offset: 0x20
    ::Oculus::Interaction::Tween* tween;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Tween*) == 0x8);
    // private UnityEngine.Pose _source
    // Size: 0x1C
    // Offset: 0x28
    ::UnityEngine::Pose source;
    // Field size check
    static_assert(sizeof(::UnityEngine::Pose) == 0x1C);
    // private UnityEngine.Pose _target
    // Size: 0x1C
    // Offset: 0x44
    ::UnityEngine::Pose target;
    // Field size check
    static_assert(sizeof(::UnityEngine::Pose) == 0x1C);
    public:
    // Creating interface conversion operator: operator ::Oculus::Interaction::IMovement
    operator ::Oculus::Interaction::IMovement() noexcept {
      return *reinterpret_cast<::Oculus::Interaction::IMovement*>(this);
    }
    // Get instance field reference: private Oculus.Interaction.HandGrab.PoseTravelData _travellingData
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::PoseTravelData& dyn__travellingData();
    // Get instance field reference: private Oculus.Interaction.Tween _tween
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Tween*& dyn__tween();
    // Get instance field reference: private UnityEngine.Pose _source
    [[deprecated("Use field access instead!")]] ::UnityEngine::Pose& dyn__source();
    // Get instance field reference: private UnityEngine.Pose _target
    [[deprecated("Use field access instead!")]] ::UnityEngine::Pose& dyn__target();
    // public UnityEngine.Pose get_Pose()
    // Offset: 0x482ED14
    ::UnityEngine::Pose get_Pose();
    // public System.Boolean get_Stopped()
    // Offset: 0x482ED3C
    bool get_Stopped();
    // public System.Void .ctor(Oculus.Interaction.HandGrab.PoseTravelData travellingData)
    // Offset: 0x482EC8C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MoveTowardsTarget* New_ctor(::Oculus::Interaction::HandGrab::PoseTravelData travellingData) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::MoveTowardsTarget::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MoveTowardsTarget*, creationType>(travellingData)));
    }
    // public System.Void MoveTo(UnityEngine.Pose target)
    // Offset: 0x482ED50
    void MoveTo(::UnityEngine::Pose target);
    // public System.Void UpdateTarget(UnityEngine.Pose target)
    // Offset: 0x482ED94
    void UpdateTarget(::UnityEngine::Pose target);
    // public System.Void StopAndSetPose(UnityEngine.Pose pose)
    // Offset: 0x482EEA4
    void StopAndSetPose(::UnityEngine::Pose pose);
    // public System.Void Tick()
    // Offset: 0x482EEFC
    void Tick();
  }; // Oculus.Interaction.HandGrab.MoveTowardsTarget
  #pragma pack(pop)
  static check_size<sizeof(MoveTowardsTarget), 68 + sizeof(::UnityEngine::Pose)> __Oculus_Interaction_HandGrab_MoveTowardsTargetSizeCheck;
  static_assert(sizeof(MoveTowardsTarget) == 0x60);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::MoveTowardsTarget::get_Pose
// Il2CppName: get_Pose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Pose (Oculus::Interaction::HandGrab::MoveTowardsTarget::*)()>(&Oculus::Interaction::HandGrab::MoveTowardsTarget::get_Pose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::MoveTowardsTarget*), "get_Pose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::MoveTowardsTarget::get_Stopped
// Il2CppName: get_Stopped
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::HandGrab::MoveTowardsTarget::*)()>(&Oculus::Interaction::HandGrab::MoveTowardsTarget::get_Stopped)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::MoveTowardsTarget*), "get_Stopped", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::MoveTowardsTarget::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::MoveTowardsTarget::MoveTo
// Il2CppName: MoveTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::MoveTowardsTarget::*)(::UnityEngine::Pose)>(&Oculus::Interaction::HandGrab::MoveTowardsTarget::MoveTo)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::MoveTowardsTarget*), "MoveTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::MoveTowardsTarget::UpdateTarget
// Il2CppName: UpdateTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::MoveTowardsTarget::*)(::UnityEngine::Pose)>(&Oculus::Interaction::HandGrab::MoveTowardsTarget::UpdateTarget)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::MoveTowardsTarget*), "UpdateTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::MoveTowardsTarget::StopAndSetPose
// Il2CppName: StopAndSetPose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::MoveTowardsTarget::*)(::UnityEngine::Pose)>(&Oculus::Interaction::HandGrab::MoveTowardsTarget::StopAndSetPose)> {
  static const MethodInfo* get() {
    static auto* pose = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::MoveTowardsTarget*), "StopAndSetPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pose});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::MoveTowardsTarget::Tick
// Il2CppName: Tick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::MoveTowardsTarget::*)()>(&Oculus::Interaction::HandGrab::MoveTowardsTarget::Tick)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::MoveTowardsTarget*), "Tick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
