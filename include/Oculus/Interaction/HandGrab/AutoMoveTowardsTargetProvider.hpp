// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: Oculus.Interaction.IMovementProvider
#include "Oculus/Interaction/IMovementProvider.hpp"
// Including type: Oculus.Interaction.HandGrab.PoseTravelData
#include "Oculus/Interaction/HandGrab/PoseTravelData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Object because it is already included!
}
// Forward declaring namespace: Oculus::Interaction
namespace Oculus::Interaction {
  // Forward declaring type: IPointableElement
  class IPointableElement;
  // Forward declaring type: IMovement
  class IMovement;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: Oculus::Interaction::HandGrab
namespace Oculus::Interaction::HandGrab {
  // Forward declaring type: AutoMoveTowardsTarget
  class AutoMoveTowardsTarget;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.HandGrab
namespace Oculus::Interaction::HandGrab {
  // Forward declaring type: AutoMoveTowardsTargetProvider
  class AutoMoveTowardsTargetProvider;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider*, "Oculus.Interaction.HandGrab", "AutoMoveTowardsTargetProvider");
// Type namespace: Oculus.Interaction.HandGrab
namespace Oculus::Interaction::HandGrab {
  // Size: 0x50
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.HandGrab.AutoMoveTowardsTargetProvider
  // [TokenAttribute] Offset: FFFFFFFF
  class AutoMoveTowardsTargetProvider : public ::UnityEngine::MonoBehaviour/*, public ::Oculus::Interaction::IMovementProvider*/ {
    public:
    public:
    // private Oculus.Interaction.HandGrab.PoseTravelData _travellingData
    // Size: 0x10
    // Offset: 0x20
    ::Oculus::Interaction::HandGrab::PoseTravelData travellingData;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::HandGrab::PoseTravelData) == 0x10);
    // private UnityEngine.Object _pointableElement
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::Object* pointableElement;
    // Field size check
    static_assert(sizeof(::UnityEngine::Object*) == 0x8);
    // private Oculus.Interaction.IPointableElement <PointableElement>k__BackingField
    // Size: 0x8
    // Offset: 0x38
    ::Oculus::Interaction::IPointableElement* PointableElement;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::IPointableElement*) == 0x8);
    // private System.Boolean _started
    // Size: 0x1
    // Offset: 0x40
    bool started;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: started and: movers
    char __padding3[0x7] = {};
    // public System.Collections.Generic.List`1<Oculus.Interaction.HandGrab.AutoMoveTowardsTarget> _movers
    // Size: 0x8
    // Offset: 0x48
    ::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget*>* movers;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget*>*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::Oculus::Interaction::IMovementProvider
    operator ::Oculus::Interaction::IMovementProvider() noexcept {
      return *reinterpret_cast<::Oculus::Interaction::IMovementProvider*>(this);
    }
    // Get instance field reference: private Oculus.Interaction.HandGrab.PoseTravelData _travellingData
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::PoseTravelData& dyn__travellingData();
    // Get instance field reference: private UnityEngine.Object _pointableElement
    [[deprecated("Use field access instead!")]] ::UnityEngine::Object*& dyn__pointableElement();
    // Get instance field reference: private Oculus.Interaction.IPointableElement <PointableElement>k__BackingField
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::IPointableElement*& dyn_$PointableElement$k__BackingField();
    // Get instance field reference: private System.Boolean _started
    [[deprecated("Use field access instead!")]] bool& dyn__started();
    // Get instance field reference: public System.Collections.Generic.List`1<Oculus.Interaction.HandGrab.AutoMoveTowardsTarget> _movers
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget*>*& dyn__movers();
    // public Oculus.Interaction.HandGrab.PoseTravelData get_TravellingData()
    // Offset: 0x482D5CC
    ::Oculus::Interaction::HandGrab::PoseTravelData get_TravellingData();
    // public System.Void set_TravellingData(Oculus.Interaction.HandGrab.PoseTravelData value)
    // Offset: 0x482D5D8
    void set_TravellingData(::Oculus::Interaction::HandGrab::PoseTravelData value);
    // public Oculus.Interaction.IPointableElement get_PointableElement()
    // Offset: 0x482D5E8
    ::Oculus::Interaction::IPointableElement* get_PointableElement();
    // private System.Void set_PointableElement(Oculus.Interaction.IPointableElement value)
    // Offset: 0x482D5F0
    void set_PointableElement(::Oculus::Interaction::IPointableElement* value);
    // protected System.Void Awake()
    // Offset: 0x482D5F8
    void Awake();
    // protected System.Void Start()
    // Offset: 0x482D650
    void Start();
    // private System.Void LateUpdate()
    // Offset: 0x482D688
    void LateUpdate();
    // public Oculus.Interaction.IMovement CreateMovement()
    // Offset: 0x482D7D4
    ::Oculus::Interaction::IMovement* CreateMovement();
    // private System.Void HandleAborted(Oculus.Interaction.HandGrab.AutoMoveTowardsTarget mover)
    // Offset: 0x482DA6C
    void HandleAborted(::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget* mover);
    // public System.Void InjectAllAutoMoveTowardsTargetProvider(Oculus.Interaction.IPointableElement pointableElement)
    // Offset: 0x482DBE0
    void InjectAllAutoMoveTowardsTargetProvider(::Oculus::Interaction::IPointableElement* pointableElement);
    // public System.Void InjectPointableElement(Oculus.Interaction.IPointableElement pointableElement)
    // Offset: 0x482DBE4
    void InjectPointableElement(::Oculus::Interaction::IPointableElement* pointableElement);
    // public System.Void .ctor()
    // Offset: 0x482DCB0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AutoMoveTowardsTargetProvider* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AutoMoveTowardsTargetProvider*, creationType>()));
    }
  }; // Oculus.Interaction.HandGrab.AutoMoveTowardsTargetProvider
  #pragma pack(pop)
  static check_size<sizeof(AutoMoveTowardsTargetProvider), 72 + sizeof(::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget*>*)> __Oculus_Interaction_HandGrab_AutoMoveTowardsTargetProviderSizeCheck;
  static_assert(sizeof(AutoMoveTowardsTargetProvider) == 0x50);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::get_TravellingData
// Il2CppName: get_TravellingData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::HandGrab::PoseTravelData (Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::*)()>(&Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::get_TravellingData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider*), "get_TravellingData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::set_TravellingData
// Il2CppName: set_TravellingData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::*)(::Oculus::Interaction::HandGrab::PoseTravelData)>(&Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::set_TravellingData)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "PoseTravelData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider*), "set_TravellingData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::get_PointableElement
// Il2CppName: get_PointableElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::IPointableElement* (Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::*)()>(&Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::get_PointableElement)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider*), "get_PointableElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::set_PointableElement
// Il2CppName: set_PointableElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::*)(::Oculus::Interaction::IPointableElement*)>(&Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::set_PointableElement)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "IPointableElement")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider*), "set_PointableElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::*)()>(&Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::*)()>(&Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::LateUpdate
// Il2CppName: LateUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::*)()>(&Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::LateUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider*), "LateUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::CreateMovement
// Il2CppName: CreateMovement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::IMovement* (Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::*)()>(&Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::CreateMovement)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider*), "CreateMovement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::HandleAborted
// Il2CppName: HandleAborted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::*)(::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget*)>(&Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::HandleAborted)> {
  static const MethodInfo* get() {
    static auto* mover = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "AutoMoveTowardsTarget")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider*), "HandleAborted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mover});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::InjectAllAutoMoveTowardsTargetProvider
// Il2CppName: InjectAllAutoMoveTowardsTargetProvider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::*)(::Oculus::Interaction::IPointableElement*)>(&Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::InjectAllAutoMoveTowardsTargetProvider)> {
  static const MethodInfo* get() {
    static auto* pointableElement = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "IPointableElement")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider*), "InjectAllAutoMoveTowardsTargetProvider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pointableElement});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::InjectPointableElement
// Il2CppName: InjectPointableElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::*)(::Oculus::Interaction::IPointableElement*)>(&Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::InjectPointableElement)> {
  static const MethodInfo* get() {
    static auto* pointableElement = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "IPointableElement")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider*), "InjectPointableElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pointableElement});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
