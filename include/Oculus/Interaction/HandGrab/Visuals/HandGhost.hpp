// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction::HandGrab::Visuals
namespace Oculus::Interaction::HandGrab::Visuals {
  // Forward declaring type: HandPuppet
  class HandPuppet;
}
// Forward declaring namespace: Oculus::Interaction::HandGrab
namespace Oculus::Interaction::HandGrab {
  // Forward declaring type: HandGrabPose
  class HandGrabPose;
  // Forward declaring type: HandPose
  class HandPose;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Pose
  struct Pose;
  // Forward declaring type: Transform
  class Transform;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.HandGrab.Visuals
namespace Oculus::Interaction::HandGrab::Visuals {
  // Forward declaring type: HandGhost
  class HandGhost;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::HandGrab::Visuals::HandGhost);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::HandGrab::Visuals::HandGhost*, "Oculus.Interaction.HandGrab.Visuals", "HandGhost");
// Type namespace: Oculus.Interaction.HandGrab.Visuals
namespace Oculus::Interaction::HandGrab::Visuals {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.HandGrab.Visuals.HandGhost
  // [TokenAttribute] Offset: FFFFFFFF
  // [RequireComponent] Offset: FFFFFFFF
  class HandGhost : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private Oculus.Interaction.HandGrab.Visuals.HandPuppet _puppet
    // Size: 0x8
    // Offset: 0x20
    ::Oculus::Interaction::HandGrab::Visuals::HandPuppet* puppet;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::HandGrab::Visuals::HandPuppet*) == 0x8);
    // private Oculus.Interaction.HandGrab.HandGrabPose _handGrabPose
    // Size: 0x8
    // Offset: 0x28
    ::Oculus::Interaction::HandGrab::HandGrabPose* handGrabPose;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::HandGrab::HandGrabPose*) == 0x8);
    public:
    // Get instance field reference: private Oculus.Interaction.HandGrab.Visuals.HandPuppet _puppet
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::Visuals::HandPuppet*& dyn__puppet();
    // Get instance field reference: private Oculus.Interaction.HandGrab.HandGrabPose _handGrabPose
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::HandGrabPose*& dyn__handGrabPose();
    // protected System.Void Reset()
    // Offset: 0x482F67C
    void Reset();
    // protected System.Void OnValidate()
    // Offset: 0x482F70C
    void OnValidate();
    // protected System.Void Start()
    // Offset: 0x482F8A4
    void Start();
    // public System.Void SetPose(Oculus.Interaction.HandGrab.HandGrabPose handGrabPose)
    // Offset: 0x482F830
    void SetPose(::Oculus::Interaction::HandGrab::HandGrabPose* handGrabPose);
    // public System.Void SetPose(Oculus.Interaction.HandGrab.HandPose userPose, UnityEngine.Pose rootPose)
    // Offset: 0x482FB10
    void SetPose(::Oculus::Interaction::HandGrab::HandPose* userPose, ::UnityEngine::Pose rootPose);
    // public System.Void SetRootPose(UnityEngine.Pose rootPose, UnityEngine.Transform relativeTo)
    // Offset: 0x482FA2C
    void SetRootPose(::UnityEngine::Pose rootPose, ::UnityEngine::Transform* relativeTo);
    // public System.Void InjectAllHandGhost(Oculus.Interaction.HandGrab.Visuals.HandPuppet puppet)
    // Offset: 0x482FB9C
    void InjectAllHandGhost(::Oculus::Interaction::HandGrab::Visuals::HandPuppet* puppet);
    // public System.Void InjectHandPuppet(Oculus.Interaction.HandGrab.Visuals.HandPuppet puppet)
    // Offset: 0x482FBA4
    void InjectHandPuppet(::Oculus::Interaction::HandGrab::Visuals::HandPuppet* puppet);
    // public System.Void InjectOptionalHandGrabPose(Oculus.Interaction.HandGrab.HandGrabPose handGrabPose)
    // Offset: 0x482FBAC
    void InjectOptionalHandGrabPose(::Oculus::Interaction::HandGrab::HandGrabPose* handGrabPose);
    // public System.Void .ctor()
    // Offset: 0x482FBB4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static HandGhost* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Visuals::HandGhost::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<HandGhost*, creationType>()));
    }
  }; // Oculus.Interaction.HandGrab.Visuals.HandGhost
  #pragma pack(pop)
  static check_size<sizeof(HandGhost), 40 + sizeof(::Oculus::Interaction::HandGrab::HandGrabPose*)> __Oculus_Interaction_HandGrab_Visuals_HandGhostSizeCheck;
  static_assert(sizeof(HandGhost) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::Visuals::HandGhost::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::Visuals::HandGhost::*)()>(&Oculus::Interaction::HandGrab::Visuals::HandGhost::Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::Visuals::HandGhost*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::Visuals::HandGhost::OnValidate
// Il2CppName: OnValidate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::Visuals::HandGhost::*)()>(&Oculus::Interaction::HandGrab::Visuals::HandGhost::OnValidate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::Visuals::HandGhost*), "OnValidate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::Visuals::HandGhost::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::Visuals::HandGhost::*)()>(&Oculus::Interaction::HandGrab::Visuals::HandGhost::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::Visuals::HandGhost*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::Visuals::HandGhost::SetPose
// Il2CppName: SetPose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::Visuals::HandGhost::*)(::Oculus::Interaction::HandGrab::HandGrabPose*)>(&Oculus::Interaction::HandGrab::Visuals::HandGhost::SetPose)> {
  static const MethodInfo* get() {
    static auto* handGrabPose = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "HandGrabPose")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::Visuals::HandGhost*), "SetPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handGrabPose});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::Visuals::HandGhost::SetPose
// Il2CppName: SetPose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::Visuals::HandGhost::*)(::Oculus::Interaction::HandGrab::HandPose*, ::UnityEngine::Pose)>(&Oculus::Interaction::HandGrab::Visuals::HandGhost::SetPose)> {
  static const MethodInfo* get() {
    static auto* userPose = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "HandPose")->byval_arg;
    static auto* rootPose = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::Visuals::HandGhost*), "SetPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userPose, rootPose});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::Visuals::HandGhost::SetRootPose
// Il2CppName: SetRootPose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::Visuals::HandGhost::*)(::UnityEngine::Pose, ::UnityEngine::Transform*)>(&Oculus::Interaction::HandGrab::Visuals::HandGhost::SetRootPose)> {
  static const MethodInfo* get() {
    static auto* rootPose = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->byval_arg;
    static auto* relativeTo = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::Visuals::HandGhost*), "SetRootPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rootPose, relativeTo});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::Visuals::HandGhost::InjectAllHandGhost
// Il2CppName: InjectAllHandGhost
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::Visuals::HandGhost::*)(::Oculus::Interaction::HandGrab::Visuals::HandPuppet*)>(&Oculus::Interaction::HandGrab::Visuals::HandGhost::InjectAllHandGhost)> {
  static const MethodInfo* get() {
    static auto* puppet = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab.Visuals", "HandPuppet")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::Visuals::HandGhost*), "InjectAllHandGhost", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{puppet});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::Visuals::HandGhost::InjectHandPuppet
// Il2CppName: InjectHandPuppet
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::Visuals::HandGhost::*)(::Oculus::Interaction::HandGrab::Visuals::HandPuppet*)>(&Oculus::Interaction::HandGrab::Visuals::HandGhost::InjectHandPuppet)> {
  static const MethodInfo* get() {
    static auto* puppet = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab.Visuals", "HandPuppet")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::Visuals::HandGhost*), "InjectHandPuppet", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{puppet});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::Visuals::HandGhost::InjectOptionalHandGrabPose
// Il2CppName: InjectOptionalHandGrabPose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::Visuals::HandGhost::*)(::Oculus::Interaction::HandGrab::HandGrabPose*)>(&Oculus::Interaction::HandGrab::Visuals::HandGhost::InjectOptionalHandGrabPose)> {
  static const MethodInfo* get() {
    static auto* handGrabPose = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "HandGrabPose")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::Visuals::HandGhost*), "InjectOptionalHandGrabPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handGrabPose});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::Visuals::HandGhost::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
