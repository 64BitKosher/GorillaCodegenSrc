// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction::HandGrab::Visuals
namespace Oculus::Interaction::HandGrab::Visuals {
  // Forward declaring type: HandJointMap
  class HandJointMap;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.HandGrab.Visuals
namespace Oculus::Interaction::HandGrab::Visuals {
  // Forward declaring type: JointCollection
  class JointCollection;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::HandGrab::Visuals::JointCollection);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::HandGrab::Visuals::JointCollection*, "Oculus.Interaction.HandGrab.Visuals", "JointCollection");
// Type namespace: Oculus.Interaction.HandGrab.Visuals
namespace Oculus::Interaction::HandGrab::Visuals {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.HandGrab.Visuals.JointCollection
  // [TokenAttribute] Offset: FFFFFFFF
  // [DefaultMemberAttribute] Offset: FFFFFFFF
  class JointCollection : public ::Il2CppObject {
    public:
    // Nested type: ::Oculus::Interaction::HandGrab::Visuals::JointCollection::$$c__DisplayClass2_0
    class $$c__DisplayClass2_0;
    public:
    // private System.Int32[] _jointIndices
    // Size: 0x8
    // Offset: 0x10
    ::ArrayW<int> jointIndices;
    // Field size check
    static_assert(sizeof(::ArrayW<int>) == 0x8);
    // private System.Collections.Generic.List`1<Oculus.Interaction.HandGrab.Visuals.HandJointMap> _jointMaps
    // Size: 0x8
    // Offset: 0x18
    ::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::Visuals::HandJointMap*>* jointMaps;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::Visuals::HandJointMap*>*) == 0x8);
    public:
    // Get instance field reference: private System.Int32[] _jointIndices
    [[deprecated("Use field access instead!")]] ::ArrayW<int>& dyn__jointIndices();
    // Get instance field reference: private System.Collections.Generic.List`1<Oculus.Interaction.HandGrab.Visuals.HandJointMap> _jointMaps
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::Visuals::HandJointMap*>*& dyn__jointMaps();
    // public System.Void .ctor(System.Collections.Generic.List`1<Oculus.Interaction.HandGrab.Visuals.HandJointMap> joints)
    // Offset: 0x482FCE8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JointCollection* New_ctor(::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::Visuals::HandJointMap*>* joints) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Visuals::JointCollection::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JointCollection*, creationType>(joints)));
    }
    // public Oculus.Interaction.HandGrab.Visuals.HandJointMap get_Item(System.Int32 jointIndex)
    // Offset: 0x482FEEC
    ::Oculus::Interaction::HandGrab::Visuals::HandJointMap* get_Item(int jointIndex);
  }; // Oculus.Interaction.HandGrab.Visuals.JointCollection
  #pragma pack(pop)
  static check_size<sizeof(JointCollection), 24 + sizeof(::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::Visuals::HandJointMap*>*)> __Oculus_Interaction_HandGrab_Visuals_JointCollectionSizeCheck;
  static_assert(sizeof(JointCollection) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::Visuals::JointCollection::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::Visuals::JointCollection::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::HandGrab::Visuals::HandJointMap* (Oculus::Interaction::HandGrab::Visuals::JointCollection::*)(int)>(&Oculus::Interaction::HandGrab::Visuals::JointCollection::get_Item)> {
  static const MethodInfo* get() {
    static auto* jointIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::Visuals::JointCollection*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{jointIndex});
  }
};
