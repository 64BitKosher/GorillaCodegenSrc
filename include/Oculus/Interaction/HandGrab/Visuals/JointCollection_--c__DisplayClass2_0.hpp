// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.HandGrab.Visuals.JointCollection
#include "Oculus/Interaction/HandGrab/Visuals/JointCollection.hpp"
// Including type: Oculus.Interaction.Input.HandJointId
#include "Oculus/Interaction/Input/HandJointId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction::HandGrab::Visuals
namespace Oculus::Interaction::HandGrab::Visuals {
  // Forward declaring type: HandJointMap
  class HandJointMap;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::HandGrab::Visuals::JointCollection::$$c__DisplayClass2_0);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::HandGrab::Visuals::JointCollection::$$c__DisplayClass2_0*, "Oculus.Interaction.HandGrab.Visuals", "JointCollection/<>c__DisplayClass2_0");
// Type namespace: Oculus.Interaction.HandGrab.Visuals
namespace Oculus::Interaction::HandGrab::Visuals {
  // Size: 0x14
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.HandGrab.Visuals.JointCollection/<>c__DisplayClass2_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class JointCollection::$$c__DisplayClass2_0 : public ::Il2CppObject {
    public:
    public:
    // public Oculus.Interaction.Input.HandJointId boneId
    // Size: 0x4
    // Offset: 0x10
    ::Oculus::Interaction::Input::HandJointId boneId;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Input::HandJointId) == 0x4);
    public:
    // Creating conversion operator: operator ::Oculus::Interaction::Input::HandJointId
    constexpr operator ::Oculus::Interaction::Input::HandJointId() const noexcept {
      return boneId;
    }
    // Get instance field reference: public Oculus.Interaction.Input.HandJointId boneId
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::HandJointId& dyn_boneId();
    // public System.Void .ctor()
    // Offset: 0x482FEE4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JointCollection::$$c__DisplayClass2_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Visuals::JointCollection::$$c__DisplayClass2_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JointCollection::$$c__DisplayClass2_0*, creationType>()));
    }
    // System.Boolean <.ctor>b__0(Oculus.Interaction.HandGrab.Visuals.HandJointMap bone)
    // Offset: 0x482FF74
    bool $_ctor$b__0(::Oculus::Interaction::HandGrab::Visuals::HandJointMap* bone);
  }; // Oculus.Interaction.HandGrab.Visuals.JointCollection/<>c__DisplayClass2_0
  #pragma pack(pop)
  static check_size<sizeof(JointCollection::$$c__DisplayClass2_0), 16 + sizeof(::Oculus::Interaction::Input::HandJointId)> __Oculus_Interaction_HandGrab_Visuals_JointCollection_$$c__DisplayClass2_0SizeCheck;
  static_assert(sizeof(JointCollection::$$c__DisplayClass2_0) == 0x14);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::Visuals::JointCollection::$$c__DisplayClass2_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::Visuals::JointCollection::$$c__DisplayClass2_0::$_ctor$b__0
// Il2CppName: <.ctor>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::HandGrab::Visuals::JointCollection::$$c__DisplayClass2_0::*)(::Oculus::Interaction::HandGrab::Visuals::HandJointMap*)>(&Oculus::Interaction::HandGrab::Visuals::JointCollection::$$c__DisplayClass2_0::$_ctor$b__0)> {
  static const MethodInfo* get() {
    static auto* bone = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab.Visuals", "HandJointMap")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::Visuals::JointCollection::$$c__DisplayClass2_0*), "<.ctor>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bone});
  }
};
