// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction::HandGrab::Visuals
namespace Oculus::Interaction::HandGrab::Visuals {
  // Forward declaring type: HandGhost
  class HandGhost;
}
// Forward declaring namespace: Oculus::Interaction::Input
namespace Oculus::Interaction::Input {
  // Forward declaring type: Handedness
  struct Handedness;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.HandGrab.Visuals
namespace Oculus::Interaction::HandGrab::Visuals {
  // Forward declaring type: HandGhostProvider
  class HandGhostProvider;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::HandGrab::Visuals::HandGhostProvider);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::HandGrab::Visuals::HandGhostProvider*, "Oculus.Interaction.HandGrab.Visuals", "HandGhostProvider");
// Type namespace: Oculus.Interaction.HandGrab.Visuals
namespace Oculus::Interaction::HandGrab::Visuals {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.HandGrab.Visuals.HandGhostProvider
  // [TokenAttribute] Offset: FFFFFFFF
  // [CreateAssetMenuAttribute] Offset: FFFFFFFF
  class HandGhostProvider : public ::UnityEngine::ScriptableObject {
    public:
    public:
    // private Oculus.Interaction.HandGrab.Visuals.HandGhost _leftHand
    // Size: 0x8
    // Offset: 0x18
    ::Oculus::Interaction::HandGrab::Visuals::HandGhost* leftHand;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::HandGrab::Visuals::HandGhost*) == 0x8);
    // private Oculus.Interaction.HandGrab.Visuals.HandGhost _rightHand
    // Size: 0x8
    // Offset: 0x20
    ::Oculus::Interaction::HandGrab::Visuals::HandGhost* rightHand;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::HandGrab::Visuals::HandGhost*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private Oculus.Interaction.HandGrab.Visuals.HandGhost _leftHand
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::Visuals::HandGhost*& dyn__leftHand();
    // Get instance field reference: private Oculus.Interaction.HandGrab.Visuals.HandGhost _rightHand
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::Visuals::HandGhost*& dyn__rightHand();
    // public Oculus.Interaction.HandGrab.Visuals.HandGhost GetHand(Oculus.Interaction.Input.Handedness handedness)
    // Offset: 0x482FBBC
    ::Oculus::Interaction::HandGrab::Visuals::HandGhost* GetHand(::Oculus::Interaction::Input::Handedness handedness);
    // public System.Void .ctor()
    // Offset: 0x482FBD4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static HandGhostProvider* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Visuals::HandGhostProvider::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<HandGhostProvider*, creationType>()));
    }
  }; // Oculus.Interaction.HandGrab.Visuals.HandGhostProvider
  #pragma pack(pop)
  static check_size<sizeof(HandGhostProvider), 32 + sizeof(::Oculus::Interaction::HandGrab::Visuals::HandGhost*)> __Oculus_Interaction_HandGrab_Visuals_HandGhostProviderSizeCheck;
  static_assert(sizeof(HandGhostProvider) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::Visuals::HandGhostProvider::GetHand
// Il2CppName: GetHand
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::HandGrab::Visuals::HandGhost* (Oculus::Interaction::HandGrab::Visuals::HandGhostProvider::*)(::Oculus::Interaction::Input::Handedness)>(&Oculus::Interaction::HandGrab::Visuals::HandGhostProvider::GetHand)> {
  static const MethodInfo* get() {
    static auto* handedness = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "Handedness")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::Visuals::HandGhostProvider*), "GetHand", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handedness});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::Visuals::HandGhostProvider::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
