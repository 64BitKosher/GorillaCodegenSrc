// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.IMovement
#include "Oculus/Interaction/IMovement.hpp"
// Including type: Oculus.Interaction.HandGrab.PoseTravelData
#include "Oculus/Interaction/HandGrab/PoseTravelData.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction::HandGrab
namespace Oculus::Interaction::HandGrab {
}
// Forward declaring namespace: Oculus::Interaction
namespace Oculus::Interaction {
  // Forward declaring type: IPointableElement
  class IPointableElement;
  // Forward declaring type: UniqueIdentifier
  class UniqueIdentifier;
  // Forward declaring type: Tween
  class Tween;
  // Forward declaring type: PointerEvent
  struct PointerEvent;
  // Forward declaring type: PointerEventType
  struct PointerEventType;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.HandGrab
namespace Oculus::Interaction::HandGrab {
  // Forward declaring type: AutoMoveTowardsTarget
  class AutoMoveTowardsTarget;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget*, "Oculus.Interaction.HandGrab", "AutoMoveTowardsTarget");
// Type namespace: Oculus.Interaction.HandGrab
namespace Oculus::Interaction::HandGrab {
  // Size: 0x81
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.HandGrab.AutoMoveTowardsTarget
  // [TokenAttribute] Offset: FFFFFFFF
  class AutoMoveTowardsTarget : public ::Il2CppObject/*, public ::Oculus::Interaction::IMovement*/ {
    public:
    // Nested type: ::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::$$c
    class $$c;
    public:
    // private Oculus.Interaction.HandGrab.PoseTravelData _travellingData
    // Size: 0x10
    // Offset: 0x10
    ::Oculus::Interaction::HandGrab::PoseTravelData travellingData;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::HandGrab::PoseTravelData) == 0x10);
    // private Oculus.Interaction.IPointableElement _pointableElement
    // Size: 0x8
    // Offset: 0x20
    ::Oculus::Interaction::IPointableElement* pointableElement;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::IPointableElement*) == 0x8);
    // private System.Boolean <Aborting>k__BackingField
    // Size: 0x1
    // Offset: 0x28
    bool Aborting;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: Aborting and: WhenAborted
    char __padding2[0x7] = {};
    // public System.Action`1<Oculus.Interaction.HandGrab.AutoMoveTowardsTarget> WhenAborted
    // Size: 0x8
    // Offset: 0x30
    ::System::Action_1<::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget*>* WhenAborted;
    // Field size check
    static_assert(sizeof(::System::Action_1<::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget*>*) == 0x8);
    // private Oculus.Interaction.UniqueIdentifier _identifier
    // Size: 0x8
    // Offset: 0x38
    ::Oculus::Interaction::UniqueIdentifier* identifier;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::UniqueIdentifier*) == 0x8);
    // private Oculus.Interaction.Tween _tween
    // Size: 0x8
    // Offset: 0x40
    ::Oculus::Interaction::Tween* tween;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Tween*) == 0x8);
    // private UnityEngine.Pose _target
    // Size: 0x1C
    // Offset: 0x48
    ::UnityEngine::Pose target;
    // Field size check
    static_assert(sizeof(::UnityEngine::Pose) == 0x1C);
    // private UnityEngine.Pose _source
    // Size: 0x1C
    // Offset: 0x64
    ::UnityEngine::Pose source;
    // Field size check
    static_assert(sizeof(::UnityEngine::Pose) == 0x1C);
    // private System.Boolean _eventRegistered
    // Size: 0x1
    // Offset: 0x80
    bool eventRegistered;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating interface conversion operator: operator ::Oculus::Interaction::IMovement
    operator ::Oculus::Interaction::IMovement() noexcept {
      return *reinterpret_cast<::Oculus::Interaction::IMovement*>(this);
    }
    // Get instance field reference: private Oculus.Interaction.HandGrab.PoseTravelData _travellingData
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::PoseTravelData& dyn__travellingData();
    // Get instance field reference: private Oculus.Interaction.IPointableElement _pointableElement
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::IPointableElement*& dyn__pointableElement();
    // Get instance field reference: private System.Boolean <Aborting>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$Aborting$k__BackingField();
    // Get instance field reference: public System.Action`1<Oculus.Interaction.HandGrab.AutoMoveTowardsTarget> WhenAborted
    [[deprecated("Use field access instead!")]] ::System::Action_1<::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget*>*& dyn_WhenAborted();
    // Get instance field reference: private Oculus.Interaction.UniqueIdentifier _identifier
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::UniqueIdentifier*& dyn__identifier();
    // Get instance field reference: private Oculus.Interaction.Tween _tween
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Tween*& dyn__tween();
    // Get instance field reference: private UnityEngine.Pose _target
    [[deprecated("Use field access instead!")]] ::UnityEngine::Pose& dyn__target();
    // Get instance field reference: private UnityEngine.Pose _source
    [[deprecated("Use field access instead!")]] ::UnityEngine::Pose& dyn__source();
    // Get instance field reference: private System.Boolean _eventRegistered
    [[deprecated("Use field access instead!")]] bool& dyn__eventRegistered();
    // public UnityEngine.Pose get_Pose()
    // Offset: 0x482DD50
    ::UnityEngine::Pose get_Pose();
    // public System.Boolean get_Stopped()
    // Offset: 0x482D7BC
    bool get_Stopped();
    // public System.Boolean get_Aborting()
    // Offset: 0x482DD78
    bool get_Aborting();
    // private System.Void set_Aborting(System.Boolean value)
    // Offset: 0x482DD80
    void set_Aborting(bool value);
    // public System.Int32 get_Identifier()
    // Offset: 0x482DD8C
    int get_Identifier();
    // public System.Void .ctor(Oculus.Interaction.HandGrab.PoseTravelData travellingData, Oculus.Interaction.IPointableElement pointableElement)
    // Offset: 0x482D900
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AutoMoveTowardsTarget* New_ctor(::Oculus::Interaction::HandGrab::PoseTravelData travellingData, ::Oculus::Interaction::IPointableElement* pointableElement) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AutoMoveTowardsTarget*, creationType>(travellingData, pointableElement)));
    }
    // public System.Void MoveTo(UnityEngine.Pose target)
    // Offset: 0x482DDA8
    void MoveTo(::UnityEngine::Pose target);
    // public System.Void UpdateTarget(UnityEngine.Pose target)
    // Offset: 0x482DF20
    void UpdateTarget(::UnityEngine::Pose target);
    // public System.Void StopAndSetPose(UnityEngine.Pose pose)
    // Offset: 0x482DF88
    void StopAndSetPose(::UnityEngine::Pose pose);
    // public System.Void Tick()
    // Offset: 0x482D764
    void Tick();
    // private System.Void HandlePointerEventRaised(Oculus.Interaction.PointerEvent evt)
    // Offset: 0x482E244
    void HandlePointerEventRaised(::Oculus::Interaction::PointerEvent evt);
    // private System.Void AbortSelfAligment()
    // Offset: 0x482DEEC
    void AbortSelfAligment();
    // private System.Void GeneratePointerEvent(Oculus.Interaction.PointerEventType pointerEventType)
    // Offset: 0x482E104
    void GeneratePointerEvent(::Oculus::Interaction::PointerEventType pointerEventType);
  }; // Oculus.Interaction.HandGrab.AutoMoveTowardsTarget
  #pragma pack(pop)
  static check_size<sizeof(AutoMoveTowardsTarget), 128 + sizeof(bool)> __Oculus_Interaction_HandGrab_AutoMoveTowardsTargetSizeCheck;
  static_assert(sizeof(AutoMoveTowardsTarget) == 0x81);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::get_Pose
// Il2CppName: get_Pose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Pose (Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::*)()>(&Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::get_Pose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::AutoMoveTowardsTarget*), "get_Pose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::get_Stopped
// Il2CppName: get_Stopped
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::*)()>(&Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::get_Stopped)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::AutoMoveTowardsTarget*), "get_Stopped", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::get_Aborting
// Il2CppName: get_Aborting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::*)()>(&Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::get_Aborting)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::AutoMoveTowardsTarget*), "get_Aborting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::set_Aborting
// Il2CppName: set_Aborting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::*)(bool)>(&Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::set_Aborting)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::AutoMoveTowardsTarget*), "set_Aborting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::get_Identifier
// Il2CppName: get_Identifier
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::*)()>(&Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::get_Identifier)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::AutoMoveTowardsTarget*), "get_Identifier", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::MoveTo
// Il2CppName: MoveTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::*)(::UnityEngine::Pose)>(&Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::MoveTo)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::AutoMoveTowardsTarget*), "MoveTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::UpdateTarget
// Il2CppName: UpdateTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::*)(::UnityEngine::Pose)>(&Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::UpdateTarget)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::AutoMoveTowardsTarget*), "UpdateTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::StopAndSetPose
// Il2CppName: StopAndSetPose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::*)(::UnityEngine::Pose)>(&Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::StopAndSetPose)> {
  static const MethodInfo* get() {
    static auto* pose = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::AutoMoveTowardsTarget*), "StopAndSetPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pose});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::Tick
// Il2CppName: Tick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::*)()>(&Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::Tick)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::AutoMoveTowardsTarget*), "Tick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::HandlePointerEventRaised
// Il2CppName: HandlePointerEventRaised
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::*)(::Oculus::Interaction::PointerEvent)>(&Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::HandlePointerEventRaised)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "PointerEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::AutoMoveTowardsTarget*), "HandlePointerEventRaised", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::AbortSelfAligment
// Il2CppName: AbortSelfAligment
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::*)()>(&Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::AbortSelfAligment)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::AutoMoveTowardsTarget*), "AbortSelfAligment", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::GeneratePointerEvent
// Il2CppName: GeneratePointerEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::*)(::Oculus::Interaction::PointerEventType)>(&Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::GeneratePointerEvent)> {
  static const MethodInfo* get() {
    static auto* pointerEventType = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "PointerEventType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::AutoMoveTowardsTarget*), "GeneratePointerEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pointerEventType});
  }
};
