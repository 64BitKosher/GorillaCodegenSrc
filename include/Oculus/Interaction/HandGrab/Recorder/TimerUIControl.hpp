// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: TMPro
namespace TMPro {
  // Forward declaring type: TextMeshProUGUI
  class TextMeshProUGUI;
}
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Button
  class Button;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.HandGrab.Recorder
namespace Oculus::Interaction::HandGrab::Recorder {
  // Forward declaring type: TimerUIControl
  class TimerUIControl;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::HandGrab::Recorder::TimerUIControl);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::HandGrab::Recorder::TimerUIControl*, "Oculus.Interaction.HandGrab.Recorder", "TimerUIControl");
// Type namespace: Oculus.Interaction.HandGrab.Recorder
namespace Oculus::Interaction::HandGrab::Recorder {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.HandGrab.Recorder.TimerUIControl
  // [TokenAttribute] Offset: FFFFFFFF
  class TimerUIControl : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private TMPro.TextMeshProUGUI _timerLabel
    // Size: 0x8
    // Offset: 0x20
    ::TMPro::TextMeshProUGUI* timerLabel;
    // Field size check
    static_assert(sizeof(::TMPro::TextMeshProUGUI*) == 0x8);
    // private System.Int32 _delaySeconds
    // Size: 0x4
    // Offset: 0x28
    int delaySeconds;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 _maxSeconds
    // Size: 0x4
    // Offset: 0x2C
    int maxSeconds;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private UnityEngine.UI.Button _moreButton
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::UI::Button* moreButton;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Button*) == 0x8);
    // private UnityEngine.UI.Button _lessButton
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::UI::Button* lessButton;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Button*) == 0x8);
    public:
    // Get instance field reference: private TMPro.TextMeshProUGUI _timerLabel
    [[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& dyn__timerLabel();
    // Get instance field reference: private System.Int32 _delaySeconds
    [[deprecated("Use field access instead!")]] int& dyn__delaySeconds();
    // Get instance field reference: private System.Int32 _maxSeconds
    [[deprecated("Use field access instead!")]] int& dyn__maxSeconds();
    // Get instance field reference: private UnityEngine.UI.Button _moreButton
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& dyn__moreButton();
    // Get instance field reference: private UnityEngine.UI.Button _lessButton
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& dyn__lessButton();
    // public System.Int32 get_DelaySeconds()
    // Offset: 0x479DD30
    int get_DelaySeconds();
    // public System.Void set_DelaySeconds(System.Int32 value)
    // Offset: 0x479DD38
    void set_DelaySeconds(int value);
    // private System.Void OnEnable()
    // Offset: 0x479DE38
    void OnEnable();
    // private System.Void OnDisable()
    // Offset: 0x479DF20
    void OnDisable();
    // private System.Void Start()
    // Offset: 0x479E008
    void Start();
    // private System.Void IncreaseTime()
    // Offset: 0x479E010
    void IncreaseTime();
    // private System.Void DecreaseTime()
    // Offset: 0x479E030
    void DecreaseTime();
    // private System.Void UpdateDisplay(System.Int32 seconds)
    // Offset: 0x479DD54
    void UpdateDisplay(int seconds);
    // public System.Void .ctor()
    // Offset: 0x479E050
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TimerUIControl* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::TimerUIControl::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TimerUIControl*, creationType>()));
    }
  }; // Oculus.Interaction.HandGrab.Recorder.TimerUIControl
  #pragma pack(pop)
  static check_size<sizeof(TimerUIControl), 56 + sizeof(::UnityEngine::UI::Button*)> __Oculus_Interaction_HandGrab_Recorder_TimerUIControlSizeCheck;
  static_assert(sizeof(TimerUIControl) == 0x40);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::Recorder::TimerUIControl::get_DelaySeconds
// Il2CppName: get_DelaySeconds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Oculus::Interaction::HandGrab::Recorder::TimerUIControl::*)()>(&Oculus::Interaction::HandGrab::Recorder::TimerUIControl::get_DelaySeconds)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::Recorder::TimerUIControl*), "get_DelaySeconds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::Recorder::TimerUIControl::set_DelaySeconds
// Il2CppName: set_DelaySeconds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::Recorder::TimerUIControl::*)(int)>(&Oculus::Interaction::HandGrab::Recorder::TimerUIControl::set_DelaySeconds)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::Recorder::TimerUIControl*), "set_DelaySeconds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::Recorder::TimerUIControl::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::Recorder::TimerUIControl::*)()>(&Oculus::Interaction::HandGrab::Recorder::TimerUIControl::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::Recorder::TimerUIControl*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::Recorder::TimerUIControl::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::Recorder::TimerUIControl::*)()>(&Oculus::Interaction::HandGrab::Recorder::TimerUIControl::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::Recorder::TimerUIControl*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::Recorder::TimerUIControl::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::Recorder::TimerUIControl::*)()>(&Oculus::Interaction::HandGrab::Recorder::TimerUIControl::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::Recorder::TimerUIControl*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::Recorder::TimerUIControl::IncreaseTime
// Il2CppName: IncreaseTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::Recorder::TimerUIControl::*)()>(&Oculus::Interaction::HandGrab::Recorder::TimerUIControl::IncreaseTime)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::Recorder::TimerUIControl*), "IncreaseTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::Recorder::TimerUIControl::DecreaseTime
// Il2CppName: DecreaseTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::Recorder::TimerUIControl::*)()>(&Oculus::Interaction::HandGrab::Recorder::TimerUIControl::DecreaseTime)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::Recorder::TimerUIControl*), "DecreaseTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::Recorder::TimerUIControl::UpdateDisplay
// Il2CppName: UpdateDisplay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::Recorder::TimerUIControl::*)(int)>(&Oculus::Interaction::HandGrab::Recorder::TimerUIControl::UpdateDisplay)> {
  static const MethodInfo* get() {
    static auto* seconds = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::Recorder::TimerUIControl*), "UpdateDisplay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{seconds});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::Recorder::TimerUIControl::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
