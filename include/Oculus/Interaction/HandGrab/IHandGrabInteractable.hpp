// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.IRelativeToRef
#include "Oculus/Interaction/IRelativeToRef.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction::HandGrab
namespace Oculus::Interaction::HandGrab {
  // Forward declaring type: HandAlignType
  struct HandAlignType;
  // Forward declaring type: HandGrabResult
  class HandGrabResult;
}
// Forward declaring namespace: Oculus::Interaction::Input
namespace Oculus::Interaction::Input {
  // Forward declaring type: Handedness
  struct Handedness;
}
// Forward declaring namespace: Oculus::Interaction
namespace Oculus::Interaction {
  // Forward declaring type: IMovement
  class IMovement;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Pose
  struct Pose;
}
// Forward declaring namespace: Oculus::Interaction::Grab
namespace Oculus::Interaction::Grab {
  // Forward declaring type: GrabTypeFlags
  struct GrabTypeFlags;
}
// Forward declaring namespace: Oculus::Interaction::GrabAPI
namespace Oculus::Interaction::GrabAPI {
  // Forward declaring type: GrabbingRule
  struct GrabbingRule;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.HandGrab
namespace Oculus::Interaction::HandGrab {
  // Forward declaring type: IHandGrabInteractable
  class IHandGrabInteractable;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::HandGrab::IHandGrabInteractable);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::HandGrab::IHandGrabInteractable*, "Oculus.Interaction.HandGrab", "IHandGrabInteractable");
// Type namespace: Oculus.Interaction.HandGrab
namespace Oculus::Interaction::HandGrab {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.HandGrab.IHandGrabInteractable
  // [TokenAttribute] Offset: FFFFFFFF
  class IHandGrabInteractable/*, public ::Oculus::Interaction::IRelativeToRef*/ {
    public:
    // Creating interface conversion operator: operator ::Oculus::Interaction::IRelativeToRef
    operator ::Oculus::Interaction::IRelativeToRef() noexcept {
      return *reinterpret_cast<::Oculus::Interaction::IRelativeToRef*>(this);
    }
    // public Oculus.Interaction.HandGrab.HandAlignType get_HandAlignment()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Oculus::Interaction::HandGrab::HandAlignType get_HandAlignment();
    // public System.Boolean get_UsesHandPose()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_UsesHandPose();
    // public System.Single get_Slippiness()
    // Offset: 0xFFFFFFFFFFFFFFFF
    float get_Slippiness();
    // public System.Boolean SupportsHandedness(Oculus.Interaction.Input.Handedness handedness)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool SupportsHandedness(::Oculus::Interaction::Input::Handedness handedness);
    // public Oculus.Interaction.IMovement GenerateMovement(in UnityEngine.Pose from, in UnityEngine.Pose to)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Oculus::Interaction::IMovement* GenerateMovement(ByRef<::UnityEngine::Pose> from, ByRef<::UnityEngine::Pose> to);
    // public System.Boolean CalculateBestPose(UnityEngine.Pose userPose, System.Single handScale, Oculus.Interaction.Input.Handedness handedness, ref Oculus.Interaction.HandGrab.HandGrabResult result)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool CalculateBestPose(::UnityEngine::Pose userPose, float handScale, ::Oculus::Interaction::Input::Handedness handedness, ByRef<::Oculus::Interaction::HandGrab::HandGrabResult*> result);
    // public Oculus.Interaction.Grab.GrabTypeFlags get_SupportedGrabTypes()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Oculus::Interaction::Grab::GrabTypeFlags get_SupportedGrabTypes();
    // public Oculus.Interaction.GrabAPI.GrabbingRule get_PinchGrabRules()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Oculus::Interaction::GrabAPI::GrabbingRule get_PinchGrabRules();
    // public Oculus.Interaction.GrabAPI.GrabbingRule get_PalmGrabRules()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Oculus::Interaction::GrabAPI::GrabbingRule get_PalmGrabRules();
  }; // Oculus.Interaction.HandGrab.IHandGrabInteractable
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::IHandGrabInteractable::get_HandAlignment
// Il2CppName: get_HandAlignment
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::HandGrab::HandAlignType (Oculus::Interaction::HandGrab::IHandGrabInteractable::*)()>(&Oculus::Interaction::HandGrab::IHandGrabInteractable::get_HandAlignment)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::IHandGrabInteractable*), "get_HandAlignment", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::IHandGrabInteractable::get_UsesHandPose
// Il2CppName: get_UsesHandPose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::HandGrab::IHandGrabInteractable::*)()>(&Oculus::Interaction::HandGrab::IHandGrabInteractable::get_UsesHandPose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::IHandGrabInteractable*), "get_UsesHandPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::IHandGrabInteractable::get_Slippiness
// Il2CppName: get_Slippiness
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Oculus::Interaction::HandGrab::IHandGrabInteractable::*)()>(&Oculus::Interaction::HandGrab::IHandGrabInteractable::get_Slippiness)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::IHandGrabInteractable*), "get_Slippiness", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::IHandGrabInteractable::SupportsHandedness
// Il2CppName: SupportsHandedness
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::HandGrab::IHandGrabInteractable::*)(::Oculus::Interaction::Input::Handedness)>(&Oculus::Interaction::HandGrab::IHandGrabInteractable::SupportsHandedness)> {
  static const MethodInfo* get() {
    static auto* handedness = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "Handedness")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::IHandGrabInteractable*), "SupportsHandedness", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handedness});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::IHandGrabInteractable::GenerateMovement
// Il2CppName: GenerateMovement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::IMovement* (Oculus::Interaction::HandGrab::IHandGrabInteractable::*)(ByRef<::UnityEngine::Pose>, ByRef<::UnityEngine::Pose>)>(&Oculus::Interaction::HandGrab::IHandGrabInteractable::GenerateMovement)> {
  static const MethodInfo* get() {
    static auto* from = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->this_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::IHandGrabInteractable*), "GenerateMovement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{from, to});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::IHandGrabInteractable::CalculateBestPose
// Il2CppName: CalculateBestPose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::HandGrab::IHandGrabInteractable::*)(::UnityEngine::Pose, float, ::Oculus::Interaction::Input::Handedness, ByRef<::Oculus::Interaction::HandGrab::HandGrabResult*>)>(&Oculus::Interaction::HandGrab::IHandGrabInteractable::CalculateBestPose)> {
  static const MethodInfo* get() {
    static auto* userPose = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->byval_arg;
    static auto* handScale = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* handedness = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "Handedness")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "HandGrabResult")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::IHandGrabInteractable*), "CalculateBestPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userPose, handScale, handedness, result});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::IHandGrabInteractable::get_SupportedGrabTypes
// Il2CppName: get_SupportedGrabTypes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::Grab::GrabTypeFlags (Oculus::Interaction::HandGrab::IHandGrabInteractable::*)()>(&Oculus::Interaction::HandGrab::IHandGrabInteractable::get_SupportedGrabTypes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::IHandGrabInteractable*), "get_SupportedGrabTypes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::IHandGrabInteractable::get_PinchGrabRules
// Il2CppName: get_PinchGrabRules
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::GrabAPI::GrabbingRule (Oculus::Interaction::HandGrab::IHandGrabInteractable::*)()>(&Oculus::Interaction::HandGrab::IHandGrabInteractable::get_PinchGrabRules)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::IHandGrabInteractable*), "get_PinchGrabRules", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::IHandGrabInteractable::get_PalmGrabRules
// Il2CppName: get_PalmGrabRules
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::GrabAPI::GrabbingRule (Oculus::Interaction::HandGrab::IHandGrabInteractable::*)()>(&Oculus::Interaction::HandGrab::IHandGrabInteractable::get_PalmGrabRules)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::IHandGrabInteractable*), "get_PalmGrabRules", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
