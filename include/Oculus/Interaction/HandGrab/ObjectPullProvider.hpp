// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: Oculus.Interaction.IMovementProvider
#include "Oculus/Interaction/IMovementProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction
namespace Oculus::Interaction {
  // Forward declaring type: IMovement
  class IMovement;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.HandGrab
namespace Oculus::Interaction::HandGrab {
  // Forward declaring type: ObjectPullProvider
  class ObjectPullProvider;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::HandGrab::ObjectPullProvider);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::HandGrab::ObjectPullProvider*, "Oculus.Interaction.HandGrab", "ObjectPullProvider");
// Type namespace: Oculus.Interaction.HandGrab
namespace Oculus::Interaction::HandGrab {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.HandGrab.ObjectPullProvider
  // [TokenAttribute] Offset: FFFFFFFF
  class ObjectPullProvider : public ::UnityEngine::MonoBehaviour/*, public ::Oculus::Interaction::IMovementProvider*/ {
    public:
    public:
    // private System.Single _speed
    // Size: 0x4
    // Offset: 0x20
    float speed;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single _deadZone
    // Size: 0x4
    // Offset: 0x24
    float deadZone;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Creating interface conversion operator: operator ::Oculus::Interaction::IMovementProvider
    operator ::Oculus::Interaction::IMovementProvider() noexcept {
      return *reinterpret_cast<::Oculus::Interaction::IMovementProvider*>(this);
    }
    // Get instance field reference: private System.Single _speed
    [[deprecated("Use field access instead!")]] float& dyn__speed();
    // Get instance field reference: private System.Single _deadZone
    [[deprecated("Use field access instead!")]] float& dyn__deadZone();
    // public System.Single get_Speed()
    // Offset: 0x482EF18
    float get_Speed();
    // public System.Void set_Speed(System.Single value)
    // Offset: 0x482EF20
    void set_Speed(float value);
    // public System.Single get_DeadZone()
    // Offset: 0x482EF28
    float get_DeadZone();
    // public System.Void set_DeadZone(System.Single value)
    // Offset: 0x482EF30
    void set_DeadZone(float value);
    // public Oculus.Interaction.IMovement CreateMovement()
    // Offset: 0x482EF38
    ::Oculus::Interaction::IMovement* CreateMovement();
    // public System.Void .ctor()
    // Offset: 0x482F08C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ObjectPullProvider* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::ObjectPullProvider::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ObjectPullProvider*, creationType>()));
    }
  }; // Oculus.Interaction.HandGrab.ObjectPullProvider
  #pragma pack(pop)
  static check_size<sizeof(ObjectPullProvider), 36 + sizeof(float)> __Oculus_Interaction_HandGrab_ObjectPullProviderSizeCheck;
  static_assert(sizeof(ObjectPullProvider) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::ObjectPullProvider::get_Speed
// Il2CppName: get_Speed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Oculus::Interaction::HandGrab::ObjectPullProvider::*)()>(&Oculus::Interaction::HandGrab::ObjectPullProvider::get_Speed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::ObjectPullProvider*), "get_Speed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::ObjectPullProvider::set_Speed
// Il2CppName: set_Speed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::ObjectPullProvider::*)(float)>(&Oculus::Interaction::HandGrab::ObjectPullProvider::set_Speed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::ObjectPullProvider*), "set_Speed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::ObjectPullProvider::get_DeadZone
// Il2CppName: get_DeadZone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Oculus::Interaction::HandGrab::ObjectPullProvider::*)()>(&Oculus::Interaction::HandGrab::ObjectPullProvider::get_DeadZone)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::ObjectPullProvider*), "get_DeadZone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::ObjectPullProvider::set_DeadZone
// Il2CppName: set_DeadZone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::HandGrab::ObjectPullProvider::*)(float)>(&Oculus::Interaction::HandGrab::ObjectPullProvider::set_DeadZone)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::ObjectPullProvider*), "set_DeadZone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::ObjectPullProvider::CreateMovement
// Il2CppName: CreateMovement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::IMovement* (Oculus::Interaction::HandGrab::ObjectPullProvider::*)()>(&Oculus::Interaction::HandGrab::ObjectPullProvider::CreateMovement)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::ObjectPullProvider*), "CreateMovement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::ObjectPullProvider::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
