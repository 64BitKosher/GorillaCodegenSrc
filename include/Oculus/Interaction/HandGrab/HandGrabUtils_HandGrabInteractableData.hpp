// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.HandGrab.HandGrabUtils
#include "Oculus/Interaction/HandGrab/HandGrabUtils.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: Oculus.Interaction.HandGrab.HandGrabUtils/HandGrabPoseData
#include "Oculus/Interaction/HandGrab/HandGrabUtils_HandGrabPoseData.hpp"
// Including type: Oculus.Interaction.Grab.GrabTypeFlags
#include "Oculus/Interaction/Grab/GrabTypeFlags.hpp"
// Including type: Oculus.Interaction.HandGrab.HandAlignType
#include "Oculus/Interaction/HandGrab/HandAlignType.hpp"
// Including type: Oculus.Interaction.Grab.PoseMeasureParameters
#include "Oculus/Interaction/Grab/PoseMeasureParameters.hpp"
// Including type: Oculus.Interaction.GrabAPI.GrabbingRule
#include "Oculus/Interaction/GrabAPI/GrabbingRule.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::HandGrab::HandGrabUtils::HandGrabInteractableData, "Oculus.Interaction.HandGrab", "HandGrabUtils/HandGrabInteractableData");
// Type namespace: Oculus.Interaction.HandGrab
namespace Oculus::Interaction::HandGrab {
  // Size: 0x44
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: Oculus.Interaction.HandGrab.HandGrabUtils/HandGrabInteractableData
  // [TokenAttribute] Offset: FFFFFFFF
  struct HandGrabUtils::HandGrabInteractableData/*, public ::System::ValueType*/ {
    public:
    public:
    // public System.Collections.Generic.List`1<Oculus.Interaction.HandGrab.HandGrabUtils/HandGrabPoseData> poses
    // Size: 0x8
    // Offset: 0x0
    ::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::HandGrabUtils::HandGrabPoseData>* poses;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::HandGrabUtils::HandGrabPoseData>*) == 0x8);
    // public Oculus.Interaction.Grab.GrabTypeFlags grabType
    // Size: 0x4
    // Offset: 0x8
    ::Oculus::Interaction::Grab::GrabTypeFlags grabType;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Grab::GrabTypeFlags) == 0x4);
    // public Oculus.Interaction.HandGrab.HandAlignType handAlignment
    // Size: 0x4
    // Offset: 0xC
    ::Oculus::Interaction::HandGrab::HandAlignType handAlignment;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::HandGrab::HandAlignType) == 0x4);
    // public Oculus.Interaction.Grab.PoseMeasureParameters scoringModifier
    // Size: 0x4
    // Offset: 0x10
    ::Oculus::Interaction::Grab::PoseMeasureParameters scoringModifier;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Grab::PoseMeasureParameters) == 0x4);
    // public Oculus.Interaction.GrabAPI.GrabbingRule pinchGrabRules
    // Size: 0x18
    // Offset: 0x14
    ::Oculus::Interaction::GrabAPI::GrabbingRule pinchGrabRules;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::GrabAPI::GrabbingRule) == 0x18);
    // public Oculus.Interaction.GrabAPI.GrabbingRule palmGrabRules
    // Size: 0x18
    // Offset: 0x2C
    ::Oculus::Interaction::GrabAPI::GrabbingRule palmGrabRules;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::GrabAPI::GrabbingRule) == 0x18);
    public:
    // Creating value type constructor for type: HandGrabInteractableData
    constexpr HandGrabInteractableData(::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::HandGrabUtils::HandGrabPoseData>* poses_ = {}, ::Oculus::Interaction::Grab::GrabTypeFlags grabType_ = {}, ::Oculus::Interaction::HandGrab::HandAlignType handAlignment_ = {}, ::Oculus::Interaction::Grab::PoseMeasureParameters scoringModifier_ = {}, ::Oculus::Interaction::GrabAPI::GrabbingRule pinchGrabRules_ = {}, ::Oculus::Interaction::GrabAPI::GrabbingRule palmGrabRules_ = {}) noexcept : poses{poses_}, grabType{grabType_}, handAlignment{handAlignment_}, scoringModifier{scoringModifier_}, pinchGrabRules{pinchGrabRules_}, palmGrabRules{palmGrabRules_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public System.Collections.Generic.List`1<Oculus.Interaction.HandGrab.HandGrabUtils/HandGrabPoseData> poses
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::HandGrabUtils::HandGrabPoseData>*& dyn_poses();
    // Get instance field reference: public Oculus.Interaction.Grab.GrabTypeFlags grabType
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Grab::GrabTypeFlags& dyn_grabType();
    // Get instance field reference: public Oculus.Interaction.HandGrab.HandAlignType handAlignment
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::HandAlignType& dyn_handAlignment();
    // Get instance field reference: public Oculus.Interaction.Grab.PoseMeasureParameters scoringModifier
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Grab::PoseMeasureParameters& dyn_scoringModifier();
    // Get instance field reference: public Oculus.Interaction.GrabAPI.GrabbingRule pinchGrabRules
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::GrabAPI::GrabbingRule& dyn_pinchGrabRules();
    // Get instance field reference: public Oculus.Interaction.GrabAPI.GrabbingRule palmGrabRules
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::GrabAPI::GrabbingRule& dyn_palmGrabRules();
  }; // Oculus.Interaction.HandGrab.HandGrabUtils/HandGrabInteractableData
  #pragma pack(pop)
  static check_size<sizeof(HandGrabUtils::HandGrabInteractableData), 44 + sizeof(::Oculus::Interaction::GrabAPI::GrabbingRule)> __Oculus_Interaction_HandGrab_HandGrabUtils_HandGrabInteractableDataSizeCheck;
  static_assert(sizeof(HandGrabUtils::HandGrabInteractableData) == 0x44);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
