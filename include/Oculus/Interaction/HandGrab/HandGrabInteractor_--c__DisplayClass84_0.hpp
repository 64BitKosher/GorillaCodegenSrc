// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.HandGrab.HandGrabInteractor
#include "Oculus/Interaction/HandGrab/HandGrabInteractor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`1<TResult>
  template<typename TResult>
  class Func_1;
}
// Forward declaring namespace: Oculus::Interaction::HandGrab
namespace Oculus::Interaction::HandGrab {
  // Forward declaring type: HandGrabInteractable
  class HandGrabInteractable;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::HandGrab::HandGrabInteractor::$$c__DisplayClass84_0);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::HandGrab::HandGrabInteractor::$$c__DisplayClass84_0*, "Oculus.Interaction.HandGrab", "HandGrabInteractor/<>c__DisplayClass84_0");
// Type namespace: Oculus.Interaction.HandGrab
namespace Oculus::Interaction::HandGrab {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.HandGrab.HandGrabInteractor/<>c__DisplayClass84_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class HandGrabInteractor::$$c__DisplayClass84_0 : public ::Il2CppObject {
    public:
    public:
    // public System.Func`1<Oculus.Interaction.HandGrab.HandGrabInteractable> computeCandidate
    // Size: 0x8
    // Offset: 0x10
    ::System::Func_1<::Oculus::Interaction::HandGrab::HandGrabInteractable*>* computeCandidate;
    // Field size check
    static_assert(sizeof(::System::Func_1<::Oculus::Interaction::HandGrab::HandGrabInteractable*>*) == 0x8);
    public:
    // Creating conversion operator: operator ::System::Func_1<::Oculus::Interaction::HandGrab::HandGrabInteractable*>*
    constexpr operator ::System::Func_1<::Oculus::Interaction::HandGrab::HandGrabInteractable*>*() const noexcept {
      return computeCandidate;
    }
    // Get instance field reference: public System.Func`1<Oculus.Interaction.HandGrab.HandGrabInteractable> computeCandidate
    [[deprecated("Use field access instead!")]] ::System::Func_1<::Oculus::Interaction::HandGrab::HandGrabInteractable*>*& dyn_computeCandidate();
    // public System.Void .ctor()
    // Offset: 0x4828A40
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static HandGrabInteractor::$$c__DisplayClass84_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::$$c__DisplayClass84_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<HandGrabInteractor::$$c__DisplayClass84_0*, creationType>()));
    }
    // Oculus.Interaction.HandGrab.HandGrabInteractable <SetComputeCandidateOverride>b__0()
    // Offset: 0x482918C
    ::Oculus::Interaction::HandGrab::HandGrabInteractable* $SetComputeCandidateOverride$b__0();
  }; // Oculus.Interaction.HandGrab.HandGrabInteractor/<>c__DisplayClass84_0
  #pragma pack(pop)
  static check_size<sizeof(HandGrabInteractor::$$c__DisplayClass84_0), 16 + sizeof(::System::Func_1<::Oculus::Interaction::HandGrab::HandGrabInteractable*>*)> __Oculus_Interaction_HandGrab_HandGrabInteractor_$$c__DisplayClass84_0SizeCheck;
  static_assert(sizeof(HandGrabInteractor::$$c__DisplayClass84_0) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::$$c__DisplayClass84_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Oculus::Interaction::HandGrab::HandGrabInteractor::$$c__DisplayClass84_0::$SetComputeCandidateOverride$b__0
// Il2CppName: <SetComputeCandidateOverride>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::HandGrab::HandGrabInteractable* (Oculus::Interaction::HandGrab::HandGrabInteractor::$$c__DisplayClass84_0::*)()>(&Oculus::Interaction::HandGrab::HandGrabInteractor::$$c__DisplayClass84_0::$SetComputeCandidateOverride$b__0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::HandGrab::HandGrabInteractor::$$c__DisplayClass84_0*), "<SetComputeCandidateOverride>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
