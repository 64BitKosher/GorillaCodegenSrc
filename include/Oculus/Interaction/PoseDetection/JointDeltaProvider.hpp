// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: Oculus.Interaction.PoseDetection.IJointDeltaProvider
#include "Oculus/Interaction/PoseDetection/IJointDeltaProvider.hpp"
// Including type: Oculus.Interaction.Input.HandJointId
#include "Oculus/Interaction/Input/HandJointId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction::PoseDetection
namespace Oculus::Interaction::PoseDetection {
  // Forward declaring type: JointDeltaConfig
  class JointDeltaConfig;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Object because it is already included!
  // Skipping declaration: Vector3 because it is already included!
  // Skipping declaration: Quaternion because it is already included!
  // Forward declaring type: Pose
  struct Pose;
}
// Forward declaring namespace: Oculus::Interaction::Input
namespace Oculus::Interaction::Input {
  // Forward declaring type: IHand
  class IHand;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Forward declaring type: HashSet`1<T>
  template<typename T>
  class HashSet_1;
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.PoseDetection
namespace Oculus::Interaction::PoseDetection {
  // Forward declaring type: JointDeltaProvider
  class JointDeltaProvider;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::PoseDetection::JointDeltaProvider);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::PoseDetection::JointDeltaProvider*, "Oculus.Interaction.PoseDetection", "JointDeltaProvider");
// Type namespace: Oculus.Interaction.PoseDetection
namespace Oculus::Interaction::PoseDetection {
  // Size: 0x51
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.PoseDetection.JointDeltaProvider
  // [TokenAttribute] Offset: FFFFFFFF
  class JointDeltaProvider : public ::UnityEngine::MonoBehaviour/*, public ::Oculus::Interaction::PoseDetection::IJointDeltaProvider*/ {
    public:
    // Nested type: ::Oculus::Interaction::PoseDetection::JointDeltaProvider::PoseData
    class PoseData;
    public:
    // private UnityEngine.Object _hand
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::Object* hand;
    // Field size check
    static_assert(sizeof(::UnityEngine::Object*) == 0x8);
    // private Oculus.Interaction.Input.IHand Hand
    // Size: 0x8
    // Offset: 0x28
    ::Oculus::Interaction::Input::IHand* Hand;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Input::IHand*) == 0x8);
    // private System.Collections.Generic.Dictionary`2<Oculus.Interaction.Input.HandJointId,Oculus.Interaction.PoseDetection.JointDeltaProvider/PoseData[]> _poseDataCache
    // Size: 0x8
    // Offset: 0x30
    ::System::Collections::Generic::Dictionary_2<::Oculus::Interaction::Input::HandJointId, ::ArrayW<::Oculus::Interaction::PoseDetection::JointDeltaProvider::PoseData*>>* poseDataCache;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::Oculus::Interaction::Input::HandJointId, ::ArrayW<::Oculus::Interaction::PoseDetection::JointDeltaProvider::PoseData*>>*) == 0x8);
    // private System.Collections.Generic.HashSet`1<Oculus.Interaction.Input.HandJointId> _trackedJoints
    // Size: 0x8
    // Offset: 0x38
    ::System::Collections::Generic::HashSet_1<::Oculus::Interaction::Input::HandJointId>* trackedJoints;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::HashSet_1<::Oculus::Interaction::Input::HandJointId>*) == 0x8);
    // private System.Collections.Generic.Dictionary`2<System.Int32,System.Collections.Generic.List`1<Oculus.Interaction.Input.HandJointId>> _requestors
    // Size: 0x8
    // Offset: 0x40
    ::System::Collections::Generic::Dictionary_2<int, ::System::Collections::Generic::List_1<::Oculus::Interaction::Input::HandJointId>*>* requestors;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<int, ::System::Collections::Generic::List_1<::Oculus::Interaction::Input::HandJointId>*>*) == 0x8);
    // private System.Int32 CurDataIndex
    // Size: 0x4
    // Offset: 0x48
    int CurDataIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 _lastUpdateDataVersion
    // Size: 0x4
    // Offset: 0x4C
    int lastUpdateDataVersion;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // protected System.Boolean _started
    // Size: 0x1
    // Offset: 0x50
    bool started;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating interface conversion operator: operator ::Oculus::Interaction::PoseDetection::IJointDeltaProvider
    operator ::Oculus::Interaction::PoseDetection::IJointDeltaProvider() noexcept {
      return *reinterpret_cast<::Oculus::Interaction::PoseDetection::IJointDeltaProvider*>(this);
    }
    // Get instance field reference: private UnityEngine.Object _hand
    [[deprecated("Use field access instead!")]] ::UnityEngine::Object*& dyn__hand();
    // Get instance field reference: private Oculus.Interaction.Input.IHand Hand
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IHand*& dyn_Hand();
    // Get instance field reference: private System.Collections.Generic.Dictionary`2<Oculus.Interaction.Input.HandJointId,Oculus.Interaction.PoseDetection.JointDeltaProvider/PoseData[]> _poseDataCache
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::Oculus::Interaction::Input::HandJointId, ::ArrayW<::Oculus::Interaction::PoseDetection::JointDeltaProvider::PoseData*>>*& dyn__poseDataCache();
    // Get instance field reference: private System.Collections.Generic.HashSet`1<Oculus.Interaction.Input.HandJointId> _trackedJoints
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::Oculus::Interaction::Input::HandJointId>*& dyn__trackedJoints();
    // Get instance field reference: private System.Collections.Generic.Dictionary`2<System.Int32,System.Collections.Generic.List`1<Oculus.Interaction.Input.HandJointId>> _requestors
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, ::System::Collections::Generic::List_1<::Oculus::Interaction::Input::HandJointId>*>*& dyn__requestors();
    // Get instance field reference: private System.Int32 CurDataIndex
    [[deprecated("Use field access instead!")]] int& dyn_CurDataIndex();
    // Get instance field reference: private System.Int32 _lastUpdateDataVersion
    [[deprecated("Use field access instead!")]] int& dyn__lastUpdateDataVersion();
    // Get instance field reference: protected System.Boolean _started
    [[deprecated("Use field access instead!")]] bool& dyn__started();
    // private System.Int32 get_PrevDataIndex()
    // Offset: 0x47EC310
    int get_PrevDataIndex();
    // public System.Boolean GetPositionDelta(Oculus.Interaction.Input.HandJointId joint, out UnityEngine.Vector3 delta)
    // Offset: 0x47EC320
    bool GetPositionDelta(::Oculus::Interaction::Input::HandJointId joint, ByRef<::UnityEngine::Vector3> delta);
    // public System.Boolean GetRotationDelta(Oculus.Interaction.Input.HandJointId joint, out UnityEngine.Quaternion delta)
    // Offset: 0x47EC9BC
    bool GetRotationDelta(::Oculus::Interaction::Input::HandJointId joint, ByRef<::UnityEngine::Quaternion> delta);
    // public System.Boolean GetPrevJointPose(Oculus.Interaction.Input.HandJointId joint, out UnityEngine.Pose pose)
    // Offset: 0x47ECB84
    bool GetPrevJointPose(::Oculus::Interaction::Input::HandJointId joint, ByRef<::UnityEngine::Pose> pose);
    // public System.Void RegisterConfig(Oculus.Interaction.PoseDetection.JointDeltaConfig config)
    // Offset: 0x47ECC3C
    void RegisterConfig(::Oculus::Interaction::PoseDetection::JointDeltaConfig* config);
    // public System.Void UnRegisterConfig(Oculus.Interaction.PoseDetection.JointDeltaConfig config)
    // Offset: 0x47ED2BC
    void UnRegisterConfig(::Oculus::Interaction::PoseDetection::JointDeltaConfig* config);
    // protected System.Void Awake()
    // Offset: 0x47ED318
    void Awake();
    // protected System.Void Start()
    // Offset: 0x47ED380
    void Start();
    // protected System.Void OnEnable()
    // Offset: 0x47ED3B8
    void OnEnable();
    // protected System.Void OnDisable()
    // Offset: 0x47ED4B8
    void OnDisable();
    // private System.Void UpdateData()
    // Offset: 0x47EC468
    void UpdateData();
    // public System.Void .ctor()
    // Offset: 0x47ED5B8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JointDeltaProvider* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::JointDeltaProvider::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JointDeltaProvider*, creationType>()));
    }
  }; // Oculus.Interaction.PoseDetection.JointDeltaProvider
  #pragma pack(pop)
  static check_size<sizeof(JointDeltaProvider), 80 + sizeof(bool)> __Oculus_Interaction_PoseDetection_JointDeltaProviderSizeCheck;
  static_assert(sizeof(JointDeltaProvider) == 0x51);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::PoseDetection::JointDeltaProvider::get_PrevDataIndex
// Il2CppName: get_PrevDataIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Oculus::Interaction::PoseDetection::JointDeltaProvider::*)()>(&Oculus::Interaction::PoseDetection::JointDeltaProvider::get_PrevDataIndex)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::PoseDetection::JointDeltaProvider*), "get_PrevDataIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::PoseDetection::JointDeltaProvider::GetPositionDelta
// Il2CppName: GetPositionDelta
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::PoseDetection::JointDeltaProvider::*)(::Oculus::Interaction::Input::HandJointId, ByRef<::UnityEngine::Vector3>)>(&Oculus::Interaction::PoseDetection::JointDeltaProvider::GetPositionDelta)> {
  static const MethodInfo* get() {
    static auto* joint = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "HandJointId")->byval_arg;
    static auto* delta = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::PoseDetection::JointDeltaProvider*), "GetPositionDelta", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{joint, delta});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::PoseDetection::JointDeltaProvider::GetRotationDelta
// Il2CppName: GetRotationDelta
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::PoseDetection::JointDeltaProvider::*)(::Oculus::Interaction::Input::HandJointId, ByRef<::UnityEngine::Quaternion>)>(&Oculus::Interaction::PoseDetection::JointDeltaProvider::GetRotationDelta)> {
  static const MethodInfo* get() {
    static auto* joint = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "HandJointId")->byval_arg;
    static auto* delta = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::PoseDetection::JointDeltaProvider*), "GetRotationDelta", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{joint, delta});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::PoseDetection::JointDeltaProvider::GetPrevJointPose
// Il2CppName: GetPrevJointPose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::PoseDetection::JointDeltaProvider::*)(::Oculus::Interaction::Input::HandJointId, ByRef<::UnityEngine::Pose>)>(&Oculus::Interaction::PoseDetection::JointDeltaProvider::GetPrevJointPose)> {
  static const MethodInfo* get() {
    static auto* joint = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "HandJointId")->byval_arg;
    static auto* pose = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::PoseDetection::JointDeltaProvider*), "GetPrevJointPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{joint, pose});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::PoseDetection::JointDeltaProvider::RegisterConfig
// Il2CppName: RegisterConfig
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::PoseDetection::JointDeltaProvider::*)(::Oculus::Interaction::PoseDetection::JointDeltaConfig*)>(&Oculus::Interaction::PoseDetection::JointDeltaProvider::RegisterConfig)> {
  static const MethodInfo* get() {
    static auto* config = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.PoseDetection", "JointDeltaConfig")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::PoseDetection::JointDeltaProvider*), "RegisterConfig", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{config});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::PoseDetection::JointDeltaProvider::UnRegisterConfig
// Il2CppName: UnRegisterConfig
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::PoseDetection::JointDeltaProvider::*)(::Oculus::Interaction::PoseDetection::JointDeltaConfig*)>(&Oculus::Interaction::PoseDetection::JointDeltaProvider::UnRegisterConfig)> {
  static const MethodInfo* get() {
    static auto* config = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.PoseDetection", "JointDeltaConfig")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::PoseDetection::JointDeltaProvider*), "UnRegisterConfig", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{config});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::PoseDetection::JointDeltaProvider::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::PoseDetection::JointDeltaProvider::*)()>(&Oculus::Interaction::PoseDetection::JointDeltaProvider::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::PoseDetection::JointDeltaProvider*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::PoseDetection::JointDeltaProvider::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::PoseDetection::JointDeltaProvider::*)()>(&Oculus::Interaction::PoseDetection::JointDeltaProvider::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::PoseDetection::JointDeltaProvider*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::PoseDetection::JointDeltaProvider::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::PoseDetection::JointDeltaProvider::*)()>(&Oculus::Interaction::PoseDetection::JointDeltaProvider::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::PoseDetection::JointDeltaProvider*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::PoseDetection::JointDeltaProvider::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::PoseDetection::JointDeltaProvider::*)()>(&Oculus::Interaction::PoseDetection::JointDeltaProvider::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::PoseDetection::JointDeltaProvider*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::PoseDetection::JointDeltaProvider::UpdateData
// Il2CppName: UpdateData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::PoseDetection::JointDeltaProvider::*)()>(&Oculus::Interaction::PoseDetection::JointDeltaProvider::UpdateData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::PoseDetection::JointDeltaProvider*), "UpdateData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::PoseDetection::JointDeltaProvider::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
