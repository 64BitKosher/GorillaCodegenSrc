// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction::Input
namespace Oculus::Interaction::Input {
  // Forward declaring type: HandFinger
  struct HandFinger;
}
// Forward declaring namespace: Oculus::Interaction::PoseDetection
namespace Oculus::Interaction::PoseDetection {
  // Forward declaring type: FingerFeature
  struct FingerFeature;
  // Forward declaring type: FeatureStateActiveMode
  struct FeatureStateActiveMode;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Nullable`1<T>
  template<typename T>
  struct Nullable_1;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.PoseDetection
namespace Oculus::Interaction::PoseDetection {
  // Forward declaring type: IFingerFeatureStateProvider
  class IFingerFeatureStateProvider;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::PoseDetection::IFingerFeatureStateProvider);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::PoseDetection::IFingerFeatureStateProvider*, "Oculus.Interaction.PoseDetection", "IFingerFeatureStateProvider");
// Type namespace: Oculus.Interaction.PoseDetection
namespace Oculus::Interaction::PoseDetection {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.PoseDetection.IFingerFeatureStateProvider
  // [TokenAttribute] Offset: FFFFFFFF
  class IFingerFeatureStateProvider {
    public:
    // public System.Boolean GetCurrentState(Oculus.Interaction.Input.HandFinger finger, Oculus.Interaction.PoseDetection.FingerFeature fingerFeature, out System.String currentState)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool GetCurrentState(::Oculus::Interaction::Input::HandFinger finger, ::Oculus::Interaction::PoseDetection::FingerFeature fingerFeature, ByRef<::StringW> currentState);
    // public System.Boolean IsStateActive(Oculus.Interaction.Input.HandFinger finger, Oculus.Interaction.PoseDetection.FingerFeature feature, Oculus.Interaction.PoseDetection.FeatureStateActiveMode mode, System.String stateId)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool IsStateActive(::Oculus::Interaction::Input::HandFinger finger, ::Oculus::Interaction::PoseDetection::FingerFeature feature, ::Oculus::Interaction::PoseDetection::FeatureStateActiveMode mode, ::StringW stateId);
    // public System.Nullable`1<System.Single> GetFeatureValue(Oculus.Interaction.Input.HandFinger finger, Oculus.Interaction.PoseDetection.FingerFeature fingerFeature)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Nullable_1<float> GetFeatureValue(::Oculus::Interaction::Input::HandFinger finger, ::Oculus::Interaction::PoseDetection::FingerFeature fingerFeature);
  }; // Oculus.Interaction.PoseDetection.IFingerFeatureStateProvider
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::PoseDetection::IFingerFeatureStateProvider::GetCurrentState
// Il2CppName: GetCurrentState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::PoseDetection::IFingerFeatureStateProvider::*)(::Oculus::Interaction::Input::HandFinger, ::Oculus::Interaction::PoseDetection::FingerFeature, ByRef<::StringW>)>(&Oculus::Interaction::PoseDetection::IFingerFeatureStateProvider::GetCurrentState)> {
  static const MethodInfo* get() {
    static auto* finger = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "HandFinger")->byval_arg;
    static auto* fingerFeature = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.PoseDetection", "FingerFeature")->byval_arg;
    static auto* currentState = &::il2cpp_utils::GetClassFromName("System", "String")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::PoseDetection::IFingerFeatureStateProvider*), "GetCurrentState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{finger, fingerFeature, currentState});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::PoseDetection::IFingerFeatureStateProvider::IsStateActive
// Il2CppName: IsStateActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::PoseDetection::IFingerFeatureStateProvider::*)(::Oculus::Interaction::Input::HandFinger, ::Oculus::Interaction::PoseDetection::FingerFeature, ::Oculus::Interaction::PoseDetection::FeatureStateActiveMode, ::StringW)>(&Oculus::Interaction::PoseDetection::IFingerFeatureStateProvider::IsStateActive)> {
  static const MethodInfo* get() {
    static auto* finger = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "HandFinger")->byval_arg;
    static auto* feature = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.PoseDetection", "FingerFeature")->byval_arg;
    static auto* mode = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.PoseDetection", "FeatureStateActiveMode")->byval_arg;
    static auto* stateId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::PoseDetection::IFingerFeatureStateProvider*), "IsStateActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{finger, feature, mode, stateId});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::PoseDetection::IFingerFeatureStateProvider::GetFeatureValue
// Il2CppName: GetFeatureValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Nullable_1<float> (Oculus::Interaction::PoseDetection::IFingerFeatureStateProvider::*)(::Oculus::Interaction::Input::HandFinger, ::Oculus::Interaction::PoseDetection::FingerFeature)>(&Oculus::Interaction::PoseDetection::IFingerFeatureStateProvider::GetFeatureValue)> {
  static const MethodInfo* get() {
    static auto* finger = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "HandFinger")->byval_arg;
    static auto* fingerFeature = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.PoseDetection", "FingerFeature")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::PoseDetection::IFingerFeatureStateProvider*), "GetFeatureValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{finger, fingerFeature});
  }
};
