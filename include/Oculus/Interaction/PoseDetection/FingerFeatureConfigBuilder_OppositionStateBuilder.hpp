// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.PoseDetection.FingerFeatureConfigBuilder
#include "Oculus/Interaction/PoseDetection/FingerFeatureConfigBuilder.hpp"
// Including type: Oculus.Interaction.PoseDetection.FeatureStateActiveMode
#include "Oculus/Interaction/PoseDetection/FeatureStateActiveMode.hpp"
// Including type: Oculus.Interaction.PoseDetection.ShapeRecognizer
#include "Oculus/Interaction/PoseDetection/ShapeRecognizer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::PoseDetection::FingerFeatureConfigBuilder::OppositionStateBuilder);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::PoseDetection::FingerFeatureConfigBuilder::OppositionStateBuilder*, "Oculus.Interaction.PoseDetection", "FingerFeatureConfigBuilder/OppositionStateBuilder");
// Type namespace: Oculus.Interaction.PoseDetection
namespace Oculus::Interaction::PoseDetection {
  // Size: 0x14
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.PoseDetection.FingerFeatureConfigBuilder/OppositionStateBuilder
  // [TokenAttribute] Offset: FFFFFFFF
  class FingerFeatureConfigBuilder::OppositionStateBuilder : public ::Il2CppObject {
    public:
    public:
    // private readonly Oculus.Interaction.PoseDetection.FeatureStateActiveMode _mode
    // Size: 0x4
    // Offset: 0x10
    ::Oculus::Interaction::PoseDetection::FeatureStateActiveMode mode;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::PoseDetection::FeatureStateActiveMode) == 0x4);
    public:
    // Creating conversion operator: operator ::Oculus::Interaction::PoseDetection::FeatureStateActiveMode
    constexpr operator ::Oculus::Interaction::PoseDetection::FeatureStateActiveMode() const noexcept {
      return mode;
    }
    // Get instance field reference: private readonly Oculus.Interaction.PoseDetection.FeatureStateActiveMode _mode
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::PoseDetection::FeatureStateActiveMode& dyn__mode();
    // public System.Void .ctor(Oculus.Interaction.PoseDetection.FeatureStateActiveMode mode)
    // Offset: 0x47E74D8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static FingerFeatureConfigBuilder::OppositionStateBuilder* New_ctor(::Oculus::Interaction::PoseDetection::FeatureStateActiveMode mode) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::FingerFeatureConfigBuilder::OppositionStateBuilder::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<FingerFeatureConfigBuilder::OppositionStateBuilder*, creationType>(mode)));
    }
    // public Oculus.Interaction.PoseDetection.ShapeRecognizer/FingerFeatureConfig get_Touching()
    // Offset: 0x47E7500
    ::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig* get_Touching();
    // public Oculus.Interaction.PoseDetection.ShapeRecognizer/FingerFeatureConfig get_Near()
    // Offset: 0x47E75EC
    ::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig* get_Near();
    // public Oculus.Interaction.PoseDetection.ShapeRecognizer/FingerFeatureConfig get_None()
    // Offset: 0x47E76DC
    ::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig* get_None();
  }; // Oculus.Interaction.PoseDetection.FingerFeatureConfigBuilder/OppositionStateBuilder
  #pragma pack(pop)
  static check_size<sizeof(FingerFeatureConfigBuilder::OppositionStateBuilder), 16 + sizeof(::Oculus::Interaction::PoseDetection::FeatureStateActiveMode)> __Oculus_Interaction_PoseDetection_FingerFeatureConfigBuilder_OppositionStateBuilderSizeCheck;
  static_assert(sizeof(FingerFeatureConfigBuilder::OppositionStateBuilder) == 0x14);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::PoseDetection::FingerFeatureConfigBuilder::OppositionStateBuilder::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Oculus::Interaction::PoseDetection::FingerFeatureConfigBuilder::OppositionStateBuilder::get_Touching
// Il2CppName: get_Touching
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig* (Oculus::Interaction::PoseDetection::FingerFeatureConfigBuilder::OppositionStateBuilder::*)()>(&Oculus::Interaction::PoseDetection::FingerFeatureConfigBuilder::OppositionStateBuilder::get_Touching)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::PoseDetection::FingerFeatureConfigBuilder::OppositionStateBuilder*), "get_Touching", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::PoseDetection::FingerFeatureConfigBuilder::OppositionStateBuilder::get_Near
// Il2CppName: get_Near
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig* (Oculus::Interaction::PoseDetection::FingerFeatureConfigBuilder::OppositionStateBuilder::*)()>(&Oculus::Interaction::PoseDetection::FingerFeatureConfigBuilder::OppositionStateBuilder::get_Near)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::PoseDetection::FingerFeatureConfigBuilder::OppositionStateBuilder*), "get_Near", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::PoseDetection::FingerFeatureConfigBuilder::OppositionStateBuilder::get_None
// Il2CppName: get_None
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig* (Oculus::Interaction::PoseDetection::FingerFeatureConfigBuilder::OppositionStateBuilder::*)()>(&Oculus::Interaction::PoseDetection::FingerFeatureConfigBuilder::OppositionStateBuilder::get_None)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::PoseDetection::FingerFeatureConfigBuilder::OppositionStateBuilder*), "get_None", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
