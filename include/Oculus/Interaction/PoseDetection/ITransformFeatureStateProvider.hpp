// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction::PoseDetection
namespace Oculus::Interaction::PoseDetection {
  // Forward declaring type: TransformConfig
  class TransformConfig;
  // Forward declaring type: TransformFeature
  struct TransformFeature;
  // Forward declaring type: FeatureStateActiveMode
  struct FeatureStateActiveMode;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Nullable`1<T>
  template<typename T>
  struct Nullable_1;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.PoseDetection
namespace Oculus::Interaction::PoseDetection {
  // Forward declaring type: ITransformFeatureStateProvider
  class ITransformFeatureStateProvider;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::PoseDetection::ITransformFeatureStateProvider);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::PoseDetection::ITransformFeatureStateProvider*, "Oculus.Interaction.PoseDetection", "ITransformFeatureStateProvider");
// Type namespace: Oculus.Interaction.PoseDetection
namespace Oculus::Interaction::PoseDetection {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.PoseDetection.ITransformFeatureStateProvider
  // [TokenAttribute] Offset: FFFFFFFF
  class ITransformFeatureStateProvider {
    public:
    // public System.Boolean IsStateActive(Oculus.Interaction.PoseDetection.TransformConfig config, Oculus.Interaction.PoseDetection.TransformFeature feature, Oculus.Interaction.PoseDetection.FeatureStateActiveMode mode, System.String stateId)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool IsStateActive(::Oculus::Interaction::PoseDetection::TransformConfig* config, ::Oculus::Interaction::PoseDetection::TransformFeature feature, ::Oculus::Interaction::PoseDetection::FeatureStateActiveMode mode, ::StringW stateId);
    // public System.Boolean GetCurrentState(Oculus.Interaction.PoseDetection.TransformConfig config, Oculus.Interaction.PoseDetection.TransformFeature transformFeature, out System.String currentState)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool GetCurrentState(::Oculus::Interaction::PoseDetection::TransformConfig* config, ::Oculus::Interaction::PoseDetection::TransformFeature transformFeature, ByRef<::StringW> currentState);
    // public System.Void RegisterConfig(Oculus.Interaction.PoseDetection.TransformConfig transformConfig)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void RegisterConfig(::Oculus::Interaction::PoseDetection::TransformConfig* transformConfig);
    // public System.Void UnRegisterConfig(Oculus.Interaction.PoseDetection.TransformConfig transformConfig)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void UnRegisterConfig(::Oculus::Interaction::PoseDetection::TransformConfig* transformConfig);
    // public System.Void GetFeatureVectorAndWristPos(Oculus.Interaction.PoseDetection.TransformConfig config, Oculus.Interaction.PoseDetection.TransformFeature transformFeature, System.Boolean isHandVector, ref System.Nullable`1<UnityEngine.Vector3> featureVec, ref System.Nullable`1<UnityEngine.Vector3> wristPos)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void GetFeatureVectorAndWristPos(::Oculus::Interaction::PoseDetection::TransformConfig* config, ::Oculus::Interaction::PoseDetection::TransformFeature transformFeature, bool isHandVector, ByRef<::System::Nullable_1<::UnityEngine::Vector3>> featureVec, ByRef<::System::Nullable_1<::UnityEngine::Vector3>> wristPos);
  }; // Oculus.Interaction.PoseDetection.ITransformFeatureStateProvider
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::PoseDetection::ITransformFeatureStateProvider::IsStateActive
// Il2CppName: IsStateActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::PoseDetection::ITransformFeatureStateProvider::*)(::Oculus::Interaction::PoseDetection::TransformConfig*, ::Oculus::Interaction::PoseDetection::TransformFeature, ::Oculus::Interaction::PoseDetection::FeatureStateActiveMode, ::StringW)>(&Oculus::Interaction::PoseDetection::ITransformFeatureStateProvider::IsStateActive)> {
  static const MethodInfo* get() {
    static auto* config = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.PoseDetection", "TransformConfig")->byval_arg;
    static auto* feature = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.PoseDetection", "TransformFeature")->byval_arg;
    static auto* mode = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.PoseDetection", "FeatureStateActiveMode")->byval_arg;
    static auto* stateId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::PoseDetection::ITransformFeatureStateProvider*), "IsStateActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{config, feature, mode, stateId});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::PoseDetection::ITransformFeatureStateProvider::GetCurrentState
// Il2CppName: GetCurrentState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::PoseDetection::ITransformFeatureStateProvider::*)(::Oculus::Interaction::PoseDetection::TransformConfig*, ::Oculus::Interaction::PoseDetection::TransformFeature, ByRef<::StringW>)>(&Oculus::Interaction::PoseDetection::ITransformFeatureStateProvider::GetCurrentState)> {
  static const MethodInfo* get() {
    static auto* config = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.PoseDetection", "TransformConfig")->byval_arg;
    static auto* transformFeature = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.PoseDetection", "TransformFeature")->byval_arg;
    static auto* currentState = &::il2cpp_utils::GetClassFromName("System", "String")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::PoseDetection::ITransformFeatureStateProvider*), "GetCurrentState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{config, transformFeature, currentState});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::PoseDetection::ITransformFeatureStateProvider::RegisterConfig
// Il2CppName: RegisterConfig
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::PoseDetection::ITransformFeatureStateProvider::*)(::Oculus::Interaction::PoseDetection::TransformConfig*)>(&Oculus::Interaction::PoseDetection::ITransformFeatureStateProvider::RegisterConfig)> {
  static const MethodInfo* get() {
    static auto* transformConfig = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.PoseDetection", "TransformConfig")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::PoseDetection::ITransformFeatureStateProvider*), "RegisterConfig", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{transformConfig});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::PoseDetection::ITransformFeatureStateProvider::UnRegisterConfig
// Il2CppName: UnRegisterConfig
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::PoseDetection::ITransformFeatureStateProvider::*)(::Oculus::Interaction::PoseDetection::TransformConfig*)>(&Oculus::Interaction::PoseDetection::ITransformFeatureStateProvider::UnRegisterConfig)> {
  static const MethodInfo* get() {
    static auto* transformConfig = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.PoseDetection", "TransformConfig")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::PoseDetection::ITransformFeatureStateProvider*), "UnRegisterConfig", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{transformConfig});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::PoseDetection::ITransformFeatureStateProvider::GetFeatureVectorAndWristPos
// Il2CppName: GetFeatureVectorAndWristPos
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::PoseDetection::ITransformFeatureStateProvider::*)(::Oculus::Interaction::PoseDetection::TransformConfig*, ::Oculus::Interaction::PoseDetection::TransformFeature, bool, ByRef<::System::Nullable_1<::UnityEngine::Vector3>>, ByRef<::System::Nullable_1<::UnityEngine::Vector3>>)>(&Oculus::Interaction::PoseDetection::ITransformFeatureStateProvider::GetFeatureVectorAndWristPos)> {
  static const MethodInfo* get() {
    static auto* config = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.PoseDetection", "TransformConfig")->byval_arg;
    static auto* transformFeature = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.PoseDetection", "TransformFeature")->byval_arg;
    static auto* isHandVector = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* featureVec = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")})->this_arg;
    static auto* wristPos = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")})->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::PoseDetection::ITransformFeatureStateProvider*), "GetFeatureVectorAndWristPos", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{config, transformFeature, isHandVector, featureVec, wristPos});
  }
};
