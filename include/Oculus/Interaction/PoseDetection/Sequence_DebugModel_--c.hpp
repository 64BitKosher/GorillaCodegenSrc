// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.PoseDetection.Sequence/DebugModel
#include "Oculus/Interaction/PoseDetection/Sequence_DebugModel.hpp"
// Including type: Oculus.Interaction.PoseDetection.Sequence
#include "Oculus/Interaction/PoseDetection/Sequence.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
}
// Forward declaring namespace: Oculus::Interaction
namespace Oculus::Interaction {
  // Forward declaring type: IActiveState
  class IActiveState;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::PoseDetection::Sequence::DebugModel::$$c);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::PoseDetection::Sequence::DebugModel::$$c*, "Oculus.Interaction.PoseDetection", "Sequence/DebugModel/<>c");
// Type namespace: Oculus.Interaction.PoseDetection
namespace Oculus::Interaction::PoseDetection {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.PoseDetection.Sequence/DebugModel/<>c
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class Sequence::DebugModel::$$c : public ::Il2CppObject {
    public:
    // Get static field: static public readonly Oculus.Interaction.PoseDetection.Sequence/DebugModel/<>c <>9
    static ::Oculus::Interaction::PoseDetection::Sequence::DebugModel::$$c* _get_$$9();
    // Set static field: static public readonly Oculus.Interaction.PoseDetection.Sequence/DebugModel/<>c <>9
    static void _set_$$9(::Oculus::Interaction::PoseDetection::Sequence::DebugModel::$$c* value);
    // Get static field: static public System.Func`2<Oculus.Interaction.PoseDetection.Sequence/ActivationStep,Oculus.Interaction.IActiveState> <>9__0_0
    static ::System::Func_2<::Oculus::Interaction::PoseDetection::Sequence::ActivationStep*, ::Oculus::Interaction::IActiveState*>* _get_$$9__0_0();
    // Set static field: static public System.Func`2<Oculus.Interaction.PoseDetection.Sequence/ActivationStep,Oculus.Interaction.IActiveState> <>9__0_0
    static void _set_$$9__0_0(::System::Func_2<::Oculus::Interaction::PoseDetection::Sequence::ActivationStep*, ::Oculus::Interaction::IActiveState*>* value);
    // Get static field: static public System.Func`2<Oculus.Interaction.IActiveState,System.Boolean> <>9__0_1
    static ::System::Func_2<::Oculus::Interaction::IActiveState*, bool>* _get_$$9__0_1();
    // Set static field: static public System.Func`2<Oculus.Interaction.IActiveState,System.Boolean> <>9__0_1
    static void _set_$$9__0_1(::System::Func_2<::Oculus::Interaction::IActiveState*, bool>* value);
    // static private System.Void .cctor()
    // Offset: 0x47F1D14
    static void _cctor();
    // public System.Void .ctor()
    // Offset: 0x47F1D7C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Sequence::DebugModel::$$c* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Sequence::DebugModel::$$c::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Sequence::DebugModel::$$c*, creationType>()));
    }
    // Oculus.Interaction.IActiveState <GetChildren>b__0_0(Oculus.Interaction.PoseDetection.Sequence/ActivationStep step)
    // Offset: 0x47F1D84
    ::Oculus::Interaction::IActiveState* $GetChildren$b__0_0(::Oculus::Interaction::PoseDetection::Sequence::ActivationStep* step);
    // System.Boolean <GetChildren>b__0_1(Oculus.Interaction.IActiveState c)
    // Offset: 0x47F1D9C
    bool $GetChildren$b__0_1(::Oculus::Interaction::IActiveState* c);
  }; // Oculus.Interaction.PoseDetection.Sequence/DebugModel/<>c
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::PoseDetection::Sequence::DebugModel::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Oculus::Interaction::PoseDetection::Sequence::DebugModel::$$c::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::PoseDetection::Sequence::DebugModel::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::PoseDetection::Sequence::DebugModel::$$c::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Oculus::Interaction::PoseDetection::Sequence::DebugModel::$$c::$GetChildren$b__0_0
// Il2CppName: <GetChildren>b__0_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::IActiveState* (Oculus::Interaction::PoseDetection::Sequence::DebugModel::$$c::*)(::Oculus::Interaction::PoseDetection::Sequence::ActivationStep*)>(&Oculus::Interaction::PoseDetection::Sequence::DebugModel::$$c::$GetChildren$b__0_0)> {
  static const MethodInfo* get() {
    static auto* step = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.PoseDetection", "Sequence/ActivationStep")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::PoseDetection::Sequence::DebugModel::$$c*), "<GetChildren>b__0_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{step});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::PoseDetection::Sequence::DebugModel::$$c::$GetChildren$b__0_1
// Il2CppName: <GetChildren>b__0_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::PoseDetection::Sequence::DebugModel::$$c::*)(::Oculus::Interaction::IActiveState*)>(&Oculus::Interaction::PoseDetection::Sequence::DebugModel::$$c::$GetChildren$b__0_1)> {
  static const MethodInfo* get() {
    static auto* c = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "IActiveState")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::PoseDetection::Sequence::DebugModel::$$c*), "<GetChildren>b__0_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{c});
  }
};
