// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.DebugTree.DebugTreeUI`1
#include "Oculus/Interaction/DebugTree/DebugTreeUI_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction
namespace Oculus::Interaction {
  // Forward declaring type: IActiveState
  class IActiveState;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Object because it is already included!
  // Skipping declaration: Component because it is already included!
}
// Forward declaring namespace: Oculus::Interaction::DebugTree
namespace Oculus::Interaction::DebugTree {
  // Forward declaring type: INodeUI`1<TLeaf>
  template<typename TLeaf>
  class INodeUI_1;
  // Forward declaring type: DebugTree`1<TLeaf>
  template<typename TLeaf>
  class DebugTree_1;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.PoseDetection.Debug
namespace Oculus::Interaction::PoseDetection::Debug {
  // Forward declaring type: ActiveStateDebugTreeUI
  class ActiveStateDebugTreeUI;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::PoseDetection::Debug::ActiveStateDebugTreeUI);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::PoseDetection::Debug::ActiveStateDebugTreeUI*, "Oculus.Interaction.PoseDetection.Debug", "ActiveStateDebugTreeUI");
// Type namespace: Oculus.Interaction.PoseDetection.Debug
namespace Oculus::Interaction::PoseDetection::Debug {
  // WARNING Size may be invalid!
  // Autogenerated type: Oculus.Interaction.PoseDetection.Debug.ActiveStateDebugTreeUI
  // [TokenAttribute] Offset: FFFFFFFF
  class ActiveStateDebugTreeUI : public ::Oculus::Interaction::DebugTree::DebugTreeUI_1<::Oculus::Interaction::IActiveState*> {
    public:
    public:
    // private UnityEngine.Object _activeState
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::Object* activeState;
    // Field size check
    static_assert(sizeof(::UnityEngine::Object*) == 0x8);
    // private UnityEngine.Component _nodePrefab
    // Size: 0x8
    // Offset: 0x50
    ::UnityEngine::Component* nodePrefab;
    // Field size check
    static_assert(sizeof(::UnityEngine::Component*) == 0x8);
    public:
    // Get instance field reference: private UnityEngine.Object _activeState
    [[deprecated("Use field access instead!")]] ::UnityEngine::Object*& dyn__activeState();
    // Get instance field reference: private UnityEngine.Component _nodePrefab
    [[deprecated("Use field access instead!")]] ::UnityEngine::Component*& dyn__nodePrefab();
    // protected Oculus.Interaction.IActiveState get_Value()
    // Offset: 0x47F7808
    ::Oculus::Interaction::IActiveState* get_Value();
    // protected Oculus.Interaction.DebugTree.INodeUI`1<Oculus.Interaction.IActiveState> get_NodePrefab()
    // Offset: 0x47F7850
    ::Oculus::Interaction::DebugTree::INodeUI_1<::Oculus::Interaction::IActiveState*>* get_NodePrefab();
    // protected Oculus.Interaction.DebugTree.DebugTree`1<Oculus.Interaction.IActiveState> InstantiateTree(Oculus.Interaction.IActiveState value)
    // Offset: 0x47F7898
    ::Oculus::Interaction::DebugTree::DebugTree_1<::Oculus::Interaction::IActiveState*>* InstantiateTree(::Oculus::Interaction::IActiveState* value);
    // protected System.String TitleForValue(Oculus.Interaction.IActiveState value)
    // Offset: 0x47F78F0
    ::StringW TitleForValue(::Oculus::Interaction::IActiveState* value);
    // public System.Void .ctor()
    // Offset: 0x47F79BC
    // Implemented from: Oculus.Interaction.DebugTree.DebugTreeUI`1
    // Base method: System.Void DebugTreeUI_1::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ActiveStateDebugTreeUI* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::ActiveStateDebugTreeUI::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ActiveStateDebugTreeUI*, creationType>()));
    }
  }; // Oculus.Interaction.PoseDetection.Debug.ActiveStateDebugTreeUI
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::PoseDetection::Debug::ActiveStateDebugTreeUI::get_Value
// Il2CppName: get_Value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::IActiveState* (Oculus::Interaction::PoseDetection::Debug::ActiveStateDebugTreeUI::*)()>(&Oculus::Interaction::PoseDetection::Debug::ActiveStateDebugTreeUI::get_Value)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::PoseDetection::Debug::ActiveStateDebugTreeUI*), "get_Value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::PoseDetection::Debug::ActiveStateDebugTreeUI::get_NodePrefab
// Il2CppName: get_NodePrefab
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::DebugTree::INodeUI_1<::Oculus::Interaction::IActiveState*>* (Oculus::Interaction::PoseDetection::Debug::ActiveStateDebugTreeUI::*)()>(&Oculus::Interaction::PoseDetection::Debug::ActiveStateDebugTreeUI::get_NodePrefab)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::PoseDetection::Debug::ActiveStateDebugTreeUI*), "get_NodePrefab", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::PoseDetection::Debug::ActiveStateDebugTreeUI::InstantiateTree
// Il2CppName: InstantiateTree
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::DebugTree::DebugTree_1<::Oculus::Interaction::IActiveState*>* (Oculus::Interaction::PoseDetection::Debug::ActiveStateDebugTreeUI::*)(::Oculus::Interaction::IActiveState*)>(&Oculus::Interaction::PoseDetection::Debug::ActiveStateDebugTreeUI::InstantiateTree)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "IActiveState")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::PoseDetection::Debug::ActiveStateDebugTreeUI*), "InstantiateTree", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::PoseDetection::Debug::ActiveStateDebugTreeUI::TitleForValue
// Il2CppName: TitleForValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Oculus::Interaction::PoseDetection::Debug::ActiveStateDebugTreeUI::*)(::Oculus::Interaction::IActiveState*)>(&Oculus::Interaction::PoseDetection::Debug::ActiveStateDebugTreeUI::TitleForValue)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "IActiveState")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::PoseDetection::Debug::ActiveStateDebugTreeUI*), "TitleForValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::PoseDetection::Debug::ActiveStateDebugTreeUI::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
