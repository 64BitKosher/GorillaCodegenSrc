// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.PoseDetection.FingerFeatureConfigBuilder
#include "Oculus/Interaction/PoseDetection/FingerFeatureConfigBuilder.hpp"
// Including type: Oculus.Interaction.PoseDetection.FeatureStateActiveMode
#include "Oculus/Interaction/PoseDetection/FeatureStateActiveMode.hpp"
// Including type: Oculus.Interaction.PoseDetection.FingerFeature
#include "Oculus/Interaction/PoseDetection/FingerFeature.hpp"
// Including type: Oculus.Interaction.PoseDetection.ShapeRecognizer
#include "Oculus/Interaction/PoseDetection/ShapeRecognizer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction::PoseDetection
namespace Oculus::Interaction::PoseDetection {
  // Forward declaring type: FeatureStateDescription
  class FeatureStateDescription;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::PoseDetection::FingerFeatureConfigBuilder::OpenCloseStateBuilder);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::PoseDetection::FingerFeatureConfigBuilder::OpenCloseStateBuilder*, "Oculus.Interaction.PoseDetection", "FingerFeatureConfigBuilder/OpenCloseStateBuilder");
// Type namespace: Oculus.Interaction.PoseDetection
namespace Oculus::Interaction::PoseDetection {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.PoseDetection.FingerFeatureConfigBuilder/OpenCloseStateBuilder
  // [TokenAttribute] Offset: FFFFFFFF
  class FingerFeatureConfigBuilder::OpenCloseStateBuilder : public ::Il2CppObject {
    public:
    public:
    // private readonly Oculus.Interaction.PoseDetection.FeatureStateActiveMode _mode
    // Size: 0x4
    // Offset: 0x10
    ::Oculus::Interaction::PoseDetection::FeatureStateActiveMode mode;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::PoseDetection::FeatureStateActiveMode) == 0x4);
    // private readonly Oculus.Interaction.PoseDetection.FingerFeature _fingerFeature
    // Size: 0x4
    // Offset: 0x14
    ::Oculus::Interaction::PoseDetection::FingerFeature fingerFeature;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::PoseDetection::FingerFeature) == 0x4);
    // private readonly Oculus.Interaction.PoseDetection.FeatureStateDescription[] _states
    // Size: 0x8
    // Offset: 0x18
    ::ArrayW<::Oculus::Interaction::PoseDetection::FeatureStateDescription*> states;
    // Field size check
    static_assert(sizeof(::ArrayW<::Oculus::Interaction::PoseDetection::FeatureStateDescription*>) == 0x8);
    public:
    // Get instance field reference: private readonly Oculus.Interaction.PoseDetection.FeatureStateActiveMode _mode
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::PoseDetection::FeatureStateActiveMode& dyn__mode();
    // Get instance field reference: private readonly Oculus.Interaction.PoseDetection.FingerFeature _fingerFeature
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::PoseDetection::FingerFeature& dyn__fingerFeature();
    // Get instance field reference: private readonly Oculus.Interaction.PoseDetection.FeatureStateDescription[] _states
    [[deprecated("Use field access instead!")]] ::ArrayW<::Oculus::Interaction::PoseDetection::FeatureStateDescription*>& dyn__states();
    // public System.Void .ctor(Oculus.Interaction.PoseDetection.FeatureStateActiveMode featureStateActiveMode, Oculus.Interaction.PoseDetection.FingerFeature fingerFeature)
    // Offset: 0x47E6E78
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static FingerFeatureConfigBuilder::OpenCloseStateBuilder* New_ctor(::Oculus::Interaction::PoseDetection::FeatureStateActiveMode featureStateActiveMode, ::Oculus::Interaction::PoseDetection::FingerFeature fingerFeature) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::FingerFeatureConfigBuilder::OpenCloseStateBuilder::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<FingerFeatureConfigBuilder::OpenCloseStateBuilder*, creationType>(featureStateActiveMode, fingerFeature)));
    }
    // public Oculus.Interaction.PoseDetection.ShapeRecognizer/FingerFeatureConfig get_Open()
    // Offset: 0x47E6FB4
    ::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig* get_Open();
    // public Oculus.Interaction.PoseDetection.ShapeRecognizer/FingerFeatureConfig get_Neutral()
    // Offset: 0x47E706C
    ::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig* get_Neutral();
    // public Oculus.Interaction.PoseDetection.ShapeRecognizer/FingerFeatureConfig get_Closed()
    // Offset: 0x47E7128
    ::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig* get_Closed();
  }; // Oculus.Interaction.PoseDetection.FingerFeatureConfigBuilder/OpenCloseStateBuilder
  #pragma pack(pop)
  static check_size<sizeof(FingerFeatureConfigBuilder::OpenCloseStateBuilder), 24 + sizeof(::ArrayW<::Oculus::Interaction::PoseDetection::FeatureStateDescription*>)> __Oculus_Interaction_PoseDetection_FingerFeatureConfigBuilder_OpenCloseStateBuilderSizeCheck;
  static_assert(sizeof(FingerFeatureConfigBuilder::OpenCloseStateBuilder) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::PoseDetection::FingerFeatureConfigBuilder::OpenCloseStateBuilder::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Oculus::Interaction::PoseDetection::FingerFeatureConfigBuilder::OpenCloseStateBuilder::get_Open
// Il2CppName: get_Open
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig* (Oculus::Interaction::PoseDetection::FingerFeatureConfigBuilder::OpenCloseStateBuilder::*)()>(&Oculus::Interaction::PoseDetection::FingerFeatureConfigBuilder::OpenCloseStateBuilder::get_Open)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::PoseDetection::FingerFeatureConfigBuilder::OpenCloseStateBuilder*), "get_Open", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::PoseDetection::FingerFeatureConfigBuilder::OpenCloseStateBuilder::get_Neutral
// Il2CppName: get_Neutral
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig* (Oculus::Interaction::PoseDetection::FingerFeatureConfigBuilder::OpenCloseStateBuilder::*)()>(&Oculus::Interaction::PoseDetection::FingerFeatureConfigBuilder::OpenCloseStateBuilder::get_Neutral)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::PoseDetection::FingerFeatureConfigBuilder::OpenCloseStateBuilder*), "get_Neutral", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::PoseDetection::FingerFeatureConfigBuilder::OpenCloseStateBuilder::get_Closed
// Il2CppName: get_Closed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig* (Oculus::Interaction::PoseDetection::FingerFeatureConfigBuilder::OpenCloseStateBuilder::*)()>(&Oculus::Interaction::PoseDetection::FingerFeatureConfigBuilder::OpenCloseStateBuilder::get_Closed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::PoseDetection::FingerFeatureConfigBuilder::OpenCloseStateBuilder*), "get_Closed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
