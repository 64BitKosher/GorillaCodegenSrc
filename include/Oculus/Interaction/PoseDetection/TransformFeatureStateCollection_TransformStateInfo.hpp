// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.PoseDetection.TransformFeatureStateCollection
#include "Oculus/Interaction/PoseDetection/TransformFeatureStateCollection.hpp"
// Including type: Oculus.Interaction.PoseDetection.TransformFeature
#include "Oculus/Interaction/PoseDetection/TransformFeature.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction::PoseDetection
namespace Oculus::Interaction::PoseDetection {
  // Forward declaring type: TransformConfig
  class TransformConfig;
  // Forward declaring type: FeatureStateProvider`2<TFeature, TFeatureState>
  template<typename TFeature, typename TFeatureState>
  class FeatureStateProvider_2;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::PoseDetection::TransformFeatureStateCollection::TransformStateInfo);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::PoseDetection::TransformFeatureStateCollection::TransformStateInfo*, "Oculus.Interaction.PoseDetection", "TransformFeatureStateCollection/TransformStateInfo");
// Type namespace: Oculus.Interaction.PoseDetection
namespace Oculus::Interaction::PoseDetection {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.PoseDetection.TransformFeatureStateCollection/TransformStateInfo
  // [TokenAttribute] Offset: FFFFFFFF
  class TransformFeatureStateCollection::TransformStateInfo : public ::Il2CppObject {
    public:
    public:
    // public Oculus.Interaction.PoseDetection.TransformConfig Config
    // Size: 0x8
    // Offset: 0x10
    ::Oculus::Interaction::PoseDetection::TransformConfig* Config;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::PoseDetection::TransformConfig*) == 0x8);
    // public Oculus.Interaction.PoseDetection.FeatureStateProvider`2<Oculus.Interaction.PoseDetection.TransformFeature,System.String> StateProvider
    // Size: 0x8
    // Offset: 0x18
    ::Oculus::Interaction::PoseDetection::FeatureStateProvider_2<::Oculus::Interaction::PoseDetection::TransformFeature, ::StringW>* StateProvider;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::PoseDetection::FeatureStateProvider_2<::Oculus::Interaction::PoseDetection::TransformFeature, ::StringW>*) == 0x8);
    public:
    // Get instance field reference: public Oculus.Interaction.PoseDetection.TransformConfig Config
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::PoseDetection::TransformConfig*& dyn_Config();
    // Get instance field reference: public Oculus.Interaction.PoseDetection.FeatureStateProvider`2<Oculus.Interaction.PoseDetection.TransformFeature,System.String> StateProvider
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::PoseDetection::FeatureStateProvider_2<::Oculus::Interaction::PoseDetection::TransformFeature, ::StringW>*& dyn_StateProvider();
    // public System.Void .ctor(Oculus.Interaction.PoseDetection.TransformConfig transformConfig, Oculus.Interaction.PoseDetection.FeatureStateProvider`2<Oculus.Interaction.PoseDetection.TransformFeature,System.String> stateProvider)
    // Offset: 0x47F413C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TransformFeatureStateCollection::TransformStateInfo* New_ctor(::Oculus::Interaction::PoseDetection::TransformConfig* transformConfig, ::Oculus::Interaction::PoseDetection::FeatureStateProvider_2<::Oculus::Interaction::PoseDetection::TransformFeature, ::StringW>* stateProvider) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::TransformFeatureStateCollection::TransformStateInfo::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TransformFeatureStateCollection::TransformStateInfo*, creationType>(transformConfig, stateProvider)));
    }
  }; // Oculus.Interaction.PoseDetection.TransformFeatureStateCollection/TransformStateInfo
  #pragma pack(pop)
  static check_size<sizeof(TransformFeatureStateCollection::TransformStateInfo), 24 + sizeof(::Oculus::Interaction::PoseDetection::FeatureStateProvider_2<::Oculus::Interaction::PoseDetection::TransformFeature, ::StringW>*)> __Oculus_Interaction_PoseDetection_TransformFeatureStateCollection_TransformStateInfoSizeCheck;
  static_assert(sizeof(TransformFeatureStateCollection::TransformStateInfo) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::PoseDetection::TransformFeatureStateCollection::TransformStateInfo::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
