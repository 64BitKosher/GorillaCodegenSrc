// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.PoseDetection.FeatureStateActiveMode
#include "Oculus/Interaction/PoseDetection/FeatureStateActiveMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: Oculus.Interaction.PoseDetection
namespace Oculus::Interaction::PoseDetection {
  // Forward declaring type: FeatureConfigBase`1<TFeature>
  template<typename TFeature>
  class FeatureConfigBase_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::Oculus::Interaction::PoseDetection::FeatureConfigBase_1, "Oculus.Interaction.PoseDetection", "FeatureConfigBase`1");
// Type namespace: Oculus.Interaction.PoseDetection
namespace Oculus::Interaction::PoseDetection {
  // WARNING Size may be invalid!
  // Autogenerated type: Oculus.Interaction.PoseDetection.FeatureConfigBase`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename TFeature>
  class FeatureConfigBase_1 : public ::Il2CppObject {
    public:
    public:
    // private Oculus.Interaction.PoseDetection.FeatureStateActiveMode _mode
    // Size: 0x4
    // Offset: 0x0
    ::Oculus::Interaction::PoseDetection::FeatureStateActiveMode mode;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::PoseDetection::FeatureStateActiveMode) == 0x4);
    // private TFeature _feature
    // Size: 0xFFFFFFFF
    // Offset: 0x0
    TFeature feature;
    // private System.String _state
    // Size: 0x8
    // Offset: 0x0
    ::StringW state;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Autogenerated instance field getter
    // Get instance field: private Oculus.Interaction.PoseDetection.FeatureStateActiveMode _mode
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::PoseDetection::FeatureStateActiveMode& dyn__mode() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::FeatureConfigBase_1::dyn__mode");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mode"))->offset;
      return *reinterpret_cast<::Oculus::Interaction::PoseDetection::FeatureStateActiveMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private TFeature _feature
    [[deprecated("Use field access instead!")]] TFeature& dyn__feature() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::FeatureConfigBase_1::dyn__feature");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_feature"))->offset;
      return *reinterpret_cast<TFeature*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.String _state
    [[deprecated("Use field access instead!")]] ::StringW& dyn__state() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::FeatureConfigBase_1::dyn__state");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_state"))->offset;
      return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // public Oculus.Interaction.PoseDetection.FeatureStateActiveMode get_Mode()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Oculus::Interaction::PoseDetection::FeatureStateActiveMode get_Mode() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::FeatureConfigBase_1::get_Mode");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Mode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::PoseDetection::FeatureStateActiveMode, false>(this, ___internal__method);
    }
    // public System.Void set_Mode(Oculus.Interaction.PoseDetection.FeatureStateActiveMode value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_Mode(::Oculus::Interaction::PoseDetection::FeatureStateActiveMode value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::FeatureConfigBase_1::set_Mode");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Mode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public TFeature get_Feature()
    // Offset: 0xFFFFFFFFFFFFFFFF
    TFeature get_Feature() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::FeatureConfigBase_1::get_Feature");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Feature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<TFeature, false>(this, ___internal__method);
    }
    // public System.Void set_Feature(TFeature value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_Feature(TFeature value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::FeatureConfigBase_1::set_Feature");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Feature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public System.String get_State()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::StringW get_State() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::FeatureConfigBase_1::get_State");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_State", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
    }
    // public System.Void set_State(System.String value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_State(::StringW value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::FeatureConfigBase_1::set_State");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_State", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // protected System.Void .ctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static FeatureConfigBase_1<TFeature>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::FeatureConfigBase_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<FeatureConfigBase_1<TFeature>*, creationType>()));
    }
  }; // Oculus.Interaction.PoseDetection.FeatureConfigBase`1
  // Could not write size check! Type: Oculus.Interaction.PoseDetection.FeatureConfigBase`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
