// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.PoseDetection.TransformFeature
#include "Oculus/Interaction/PoseDetection/TransformFeature.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction::PoseDetection
namespace Oculus::Interaction::PoseDetection {
  // Forward declaring type: TransformConfig
  class TransformConfig;
  // Forward declaring type: TransformJointData
  class TransformJointData;
  // Forward declaring type: FeatureStateProvider`2<TFeature, TFeatureState>
  template<typename TFeature, typename TFeatureState>
  class FeatureStateProvider_2;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`1<TResult>
  template<typename TResult>
  class Func_1;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.PoseDetection
namespace Oculus::Interaction::PoseDetection {
  // Forward declaring type: TransformFeatureStateCollection
  class TransformFeatureStateCollection;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::PoseDetection::TransformFeatureStateCollection);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::PoseDetection::TransformFeatureStateCollection*, "Oculus.Interaction.PoseDetection", "TransformFeatureStateCollection");
// Type namespace: Oculus.Interaction.PoseDetection
namespace Oculus::Interaction::PoseDetection {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.PoseDetection.TransformFeatureStateCollection
  // [TokenAttribute] Offset: FFFFFFFF
  class TransformFeatureStateCollection : public ::Il2CppObject {
    public:
    // Nested type: ::Oculus::Interaction::PoseDetection::TransformFeatureStateCollection::TransformStateInfo
    class TransformStateInfo;
    // Nested type: ::Oculus::Interaction::PoseDetection::TransformFeatureStateCollection::$$c
    class $$c;
    // Nested type: ::Oculus::Interaction::PoseDetection::TransformFeatureStateCollection::$$c__DisplayClass2_0
    class $$c__DisplayClass2_0;
    public:
    // private System.Collections.Generic.Dictionary`2<System.Int32,Oculus.Interaction.PoseDetection.TransformFeatureStateCollection/TransformStateInfo> _idToTransformStateInfo
    // Size: 0x8
    // Offset: 0x10
    ::System::Collections::Generic::Dictionary_2<int, ::Oculus::Interaction::PoseDetection::TransformFeatureStateCollection::TransformStateInfo*>* idToTransformStateInfo;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<int, ::Oculus::Interaction::PoseDetection::TransformFeatureStateCollection::TransformStateInfo*>*) == 0x8);
    public:
    // Creating conversion operator: operator ::System::Collections::Generic::Dictionary_2<int, ::Oculus::Interaction::PoseDetection::TransformFeatureStateCollection::TransformStateInfo*>*
    constexpr operator ::System::Collections::Generic::Dictionary_2<int, ::Oculus::Interaction::PoseDetection::TransformFeatureStateCollection::TransformStateInfo*>*() const noexcept {
      return idToTransformStateInfo;
    }
    // Get instance field reference: private System.Collections.Generic.Dictionary`2<System.Int32,Oculus.Interaction.PoseDetection.TransformFeatureStateCollection/TransformStateInfo> _idToTransformStateInfo
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, ::Oculus::Interaction::PoseDetection::TransformFeatureStateCollection::TransformStateInfo*>*& dyn__idToTransformStateInfo();
    // public System.Void RegisterConfig(Oculus.Interaction.PoseDetection.TransformConfig transformConfig, Oculus.Interaction.PoseDetection.TransformJointData jointData, System.Func`1<System.Single> timeProvider)
    // Offset: 0x47F3E98
    void RegisterConfig(::Oculus::Interaction::PoseDetection::TransformConfig* transformConfig, ::Oculus::Interaction::PoseDetection::TransformJointData* jointData, ::System::Func_1<float>* timeProvider);
    // public System.Void UnRegisterConfig(Oculus.Interaction.PoseDetection.TransformConfig transformConfig)
    // Offset: 0x47F4180
    void UnRegisterConfig(::Oculus::Interaction::PoseDetection::TransformConfig* transformConfig);
    // public Oculus.Interaction.PoseDetection.FeatureStateProvider`2<Oculus.Interaction.PoseDetection.TransformFeature,System.String> GetStateProvider(Oculus.Interaction.PoseDetection.TransformConfig transformConfig)
    // Offset: 0x47F41DC
    ::Oculus::Interaction::PoseDetection::FeatureStateProvider_2<::Oculus::Interaction::PoseDetection::TransformFeature, ::StringW>* GetStateProvider(::Oculus::Interaction::PoseDetection::TransformConfig* transformConfig);
    // public System.Void SetConfig(System.Int32 configId, Oculus.Interaction.PoseDetection.TransformConfig config)
    // Offset: 0x47F4244
    void SetConfig(int configId, ::Oculus::Interaction::PoseDetection::TransformConfig* config);
    // public Oculus.Interaction.PoseDetection.TransformConfig GetConfig(System.Int32 configId)
    // Offset: 0x47F42B8
    ::Oculus::Interaction::PoseDetection::TransformConfig* GetConfig(int configId);
    // public System.Void UpdateFeatureStates(System.Int32 lastUpdatedFrameId, System.Boolean disableProactiveEvaluation)
    // Offset: 0x47F431C
    void UpdateFeatureStates(int lastUpdatedFrameId, bool disableProactiveEvaluation);
    // public System.Void .ctor()
    // Offset: 0x47F44E4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TransformFeatureStateCollection* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::TransformFeatureStateCollection::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TransformFeatureStateCollection*, creationType>()));
    }
  }; // Oculus.Interaction.PoseDetection.TransformFeatureStateCollection
  #pragma pack(pop)
  static check_size<sizeof(TransformFeatureStateCollection), 16 + sizeof(::System::Collections::Generic::Dictionary_2<int, ::Oculus::Interaction::PoseDetection::TransformFeatureStateCollection::TransformStateInfo*>*)> __Oculus_Interaction_PoseDetection_TransformFeatureStateCollectionSizeCheck;
  static_assert(sizeof(TransformFeatureStateCollection) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::PoseDetection::TransformFeatureStateCollection::RegisterConfig
// Il2CppName: RegisterConfig
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::PoseDetection::TransformFeatureStateCollection::*)(::Oculus::Interaction::PoseDetection::TransformConfig*, ::Oculus::Interaction::PoseDetection::TransformJointData*, ::System::Func_1<float>*)>(&Oculus::Interaction::PoseDetection::TransformFeatureStateCollection::RegisterConfig)> {
  static const MethodInfo* get() {
    static auto* transformConfig = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.PoseDetection", "TransformConfig")->byval_arg;
    static auto* jointData = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.PoseDetection", "TransformJointData")->byval_arg;
    static auto* timeProvider = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::PoseDetection::TransformFeatureStateCollection*), "RegisterConfig", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{transformConfig, jointData, timeProvider});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::PoseDetection::TransformFeatureStateCollection::UnRegisterConfig
// Il2CppName: UnRegisterConfig
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::PoseDetection::TransformFeatureStateCollection::*)(::Oculus::Interaction::PoseDetection::TransformConfig*)>(&Oculus::Interaction::PoseDetection::TransformFeatureStateCollection::UnRegisterConfig)> {
  static const MethodInfo* get() {
    static auto* transformConfig = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.PoseDetection", "TransformConfig")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::PoseDetection::TransformFeatureStateCollection*), "UnRegisterConfig", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{transformConfig});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::PoseDetection::TransformFeatureStateCollection::GetStateProvider
// Il2CppName: GetStateProvider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::PoseDetection::FeatureStateProvider_2<::Oculus::Interaction::PoseDetection::TransformFeature, ::StringW>* (Oculus::Interaction::PoseDetection::TransformFeatureStateCollection::*)(::Oculus::Interaction::PoseDetection::TransformConfig*)>(&Oculus::Interaction::PoseDetection::TransformFeatureStateCollection::GetStateProvider)> {
  static const MethodInfo* get() {
    static auto* transformConfig = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.PoseDetection", "TransformConfig")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::PoseDetection::TransformFeatureStateCollection*), "GetStateProvider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{transformConfig});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::PoseDetection::TransformFeatureStateCollection::SetConfig
// Il2CppName: SetConfig
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::PoseDetection::TransformFeatureStateCollection::*)(int, ::Oculus::Interaction::PoseDetection::TransformConfig*)>(&Oculus::Interaction::PoseDetection::TransformFeatureStateCollection::SetConfig)> {
  static const MethodInfo* get() {
    static auto* configId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* config = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.PoseDetection", "TransformConfig")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::PoseDetection::TransformFeatureStateCollection*), "SetConfig", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{configId, config});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::PoseDetection::TransformFeatureStateCollection::GetConfig
// Il2CppName: GetConfig
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::PoseDetection::TransformConfig* (Oculus::Interaction::PoseDetection::TransformFeatureStateCollection::*)(int)>(&Oculus::Interaction::PoseDetection::TransformFeatureStateCollection::GetConfig)> {
  static const MethodInfo* get() {
    static auto* configId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::PoseDetection::TransformFeatureStateCollection*), "GetConfig", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{configId});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::PoseDetection::TransformFeatureStateCollection::UpdateFeatureStates
// Il2CppName: UpdateFeatureStates
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::PoseDetection::TransformFeatureStateCollection::*)(int, bool)>(&Oculus::Interaction::PoseDetection::TransformFeatureStateCollection::UpdateFeatureStates)> {
  static const MethodInfo* get() {
    static auto* lastUpdatedFrameId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* disableProactiveEvaluation = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::PoseDetection::TransformFeatureStateCollection*), "UpdateFeatureStates", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{lastUpdatedFrameId, disableProactiveEvaluation});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::PoseDetection::TransformFeatureStateCollection::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
