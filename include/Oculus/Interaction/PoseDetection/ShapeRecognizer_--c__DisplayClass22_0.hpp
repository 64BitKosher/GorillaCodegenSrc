// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.PoseDetection.ShapeRecognizer
#include "Oculus/Interaction/PoseDetection/ShapeRecognizer.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: Oculus.Interaction.Input.HandFinger
#include "Oculus/Interaction/Input/HandFinger.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IDictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class IDictionary_2;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::PoseDetection::ShapeRecognizer::$$c__DisplayClass22_0, "Oculus.Interaction.PoseDetection", "ShapeRecognizer/<>c__DisplayClass22_0");
// Type namespace: Oculus.Interaction.PoseDetection
namespace Oculus::Interaction::PoseDetection {
  // Size: 0x8
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.PoseDetection.ShapeRecognizer/<>c__DisplayClass22_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  struct ShapeRecognizer::$$c__DisplayClass22_0/*, public ::System::ValueType*/ {
    public:
    public:
    // public System.Collections.Generic.IDictionary`2<Oculus.Interaction.Input.HandFinger,Oculus.Interaction.PoseDetection.ShapeRecognizer/FingerFeatureConfig[]> fingerFeatureConfigs
    // Size: 0x8
    // Offset: 0x0
    ::System::Collections::Generic::IDictionary_2<::Oculus::Interaction::Input::HandFinger, ::ArrayW<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>>* fingerFeatureConfigs;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::IDictionary_2<::Oculus::Interaction::Input::HandFinger, ::ArrayW<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>>*) == 0x8);
    public:
    // Creating value type constructor for type: $$c__DisplayClass22_0
    constexpr $$c__DisplayClass22_0(::System::Collections::Generic::IDictionary_2<::Oculus::Interaction::Input::HandFinger, ::ArrayW<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>>* fingerFeatureConfigs_ = {}) noexcept : fingerFeatureConfigs{fingerFeatureConfigs_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating conversion operator: operator ::System::Collections::Generic::IDictionary_2<::Oculus::Interaction::Input::HandFinger, ::ArrayW<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>>*
    constexpr operator ::System::Collections::Generic::IDictionary_2<::Oculus::Interaction::Input::HandFinger, ::ArrayW<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>>*() const noexcept {
      return fingerFeatureConfigs;
    }
    // Get instance field reference: public System.Collections.Generic.IDictionary`2<Oculus.Interaction.Input.HandFinger,Oculus.Interaction.PoseDetection.ShapeRecognizer/FingerFeatureConfig[]> fingerFeatureConfigs
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::IDictionary_2<::Oculus::Interaction::Input::HandFinger, ::ArrayW<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>>*& dyn_fingerFeatureConfigs();
  }; // Oculus.Interaction.PoseDetection.ShapeRecognizer/<>c__DisplayClass22_0
  #pragma pack(pop)
  static check_size<sizeof(ShapeRecognizer::$$c__DisplayClass22_0), 0 + sizeof(::System::Collections::Generic::IDictionary_2<::Oculus::Interaction::Input::HandFinger, ::ArrayW<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>>*)> __Oculus_Interaction_PoseDetection_ShapeRecognizer_$$c__DisplayClass22_0SizeCheck;
  static_assert(sizeof(ShapeRecognizer::$$c__DisplayClass22_0) == 0x8);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
