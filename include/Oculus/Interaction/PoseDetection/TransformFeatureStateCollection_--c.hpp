// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.PoseDetection.TransformFeatureStateCollection
#include "Oculus/Interaction/PoseDetection/TransformFeatureStateCollection.hpp"
// Including type: Oculus.Interaction.PoseDetection.TransformFeature
#include "Oculus/Interaction/PoseDetection/TransformFeature.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::PoseDetection::TransformFeatureStateCollection::$$c);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::PoseDetection::TransformFeatureStateCollection::$$c*, "Oculus.Interaction.PoseDetection", "TransformFeatureStateCollection/<>c");
// Type namespace: Oculus.Interaction.PoseDetection
namespace Oculus::Interaction::PoseDetection {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.PoseDetection.TransformFeatureStateCollection/<>c
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class TransformFeatureStateCollection::$$c : public ::Il2CppObject {
    public:
    // Get static field: static public readonly Oculus.Interaction.PoseDetection.TransformFeatureStateCollection/<>c <>9
    static ::Oculus::Interaction::PoseDetection::TransformFeatureStateCollection::$$c* _get_$$9();
    // Set static field: static public readonly Oculus.Interaction.PoseDetection.TransformFeatureStateCollection/<>c <>9
    static void _set_$$9(::Oculus::Interaction::PoseDetection::TransformFeatureStateCollection::$$c* value);
    // Get static field: static public System.Func`2<Oculus.Interaction.PoseDetection.TransformFeature,System.Int32> <>9__2_1
    static ::System::Func_2<::Oculus::Interaction::PoseDetection::TransformFeature, int>* _get_$$9__2_1();
    // Set static field: static public System.Func`2<Oculus.Interaction.PoseDetection.TransformFeature,System.Int32> <>9__2_1
    static void _set_$$9__2_1(::System::Func_2<::Oculus::Interaction::PoseDetection::TransformFeature, int>* value);
    // static private System.Void .cctor()
    // Offset: 0x47F456C
    static void _cctor();
    // public System.Void .ctor()
    // Offset: 0x47F45D4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TransformFeatureStateCollection::$$c* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::TransformFeatureStateCollection::$$c::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TransformFeatureStateCollection::$$c*, creationType>()));
    }
    // System.Int32 <RegisterConfig>b__2_1(Oculus.Interaction.PoseDetection.TransformFeature feature)
    // Offset: 0x47F45DC
    int $RegisterConfig$b__2_1(::Oculus::Interaction::PoseDetection::TransformFeature feature);
  }; // Oculus.Interaction.PoseDetection.TransformFeatureStateCollection/<>c
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::PoseDetection::TransformFeatureStateCollection::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Oculus::Interaction::PoseDetection::TransformFeatureStateCollection::$$c::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::PoseDetection::TransformFeatureStateCollection::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::PoseDetection::TransformFeatureStateCollection::$$c::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Oculus::Interaction::PoseDetection::TransformFeatureStateCollection::$$c::$RegisterConfig$b__2_1
// Il2CppName: <RegisterConfig>b__2_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Oculus::Interaction::PoseDetection::TransformFeatureStateCollection::$$c::*)(::Oculus::Interaction::PoseDetection::TransformFeature)>(&Oculus::Interaction::PoseDetection::TransformFeatureStateCollection::$$c::$RegisterConfig$b__2_1)> {
  static const MethodInfo* get() {
    static auto* feature = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.PoseDetection", "TransformFeature")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::PoseDetection::TransformFeatureStateCollection::$$c*), "<RegisterConfig>b__2_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{feature});
  }
};
