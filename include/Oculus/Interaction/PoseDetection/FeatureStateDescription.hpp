// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: Oculus.Interaction.PoseDetection
namespace Oculus::Interaction::PoseDetection {
  // Forward declaring type: FeatureStateDescription
  class FeatureStateDescription;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::PoseDetection::FeatureStateDescription);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::PoseDetection::FeatureStateDescription*, "Oculus.Interaction.PoseDetection", "FeatureStateDescription");
// Type namespace: Oculus.Interaction.PoseDetection
namespace Oculus::Interaction::PoseDetection {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.PoseDetection.FeatureStateDescription
  // [TokenAttribute] Offset: FFFFFFFF
  class FeatureStateDescription : public ::Il2CppObject {
    public:
    public:
    // private readonly System.String <Id>k__BackingField
    // Size: 0x8
    // Offset: 0x10
    ::StringW Id;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private readonly System.String <Name>k__BackingField
    // Size: 0x8
    // Offset: 0x18
    ::StringW Name;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: private readonly System.String <Id>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$Id$k__BackingField();
    // Get instance field reference: private readonly System.String <Name>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$Name$k__BackingField();
    // public System.Void .ctor(System.String id, System.String name)
    // Offset: 0x47E8790
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static FeatureStateDescription* New_ctor(::StringW id, ::StringW name) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::FeatureStateDescription::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<FeatureStateDescription*, creationType>(id, name)));
    }
    // public System.String get_Id()
    // Offset: 0x47E87D4
    ::StringW get_Id();
    // public System.String get_Name()
    // Offset: 0x47E87DC
    ::StringW get_Name();
  }; // Oculus.Interaction.PoseDetection.FeatureStateDescription
  #pragma pack(pop)
  static check_size<sizeof(FeatureStateDescription), 24 + sizeof(::StringW)> __Oculus_Interaction_PoseDetection_FeatureStateDescriptionSizeCheck;
  static_assert(sizeof(FeatureStateDescription) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::PoseDetection::FeatureStateDescription::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Oculus::Interaction::PoseDetection::FeatureStateDescription::get_Id
// Il2CppName: get_Id
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Oculus::Interaction::PoseDetection::FeatureStateDescription::*)()>(&Oculus::Interaction::PoseDetection::FeatureStateDescription::get_Id)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::PoseDetection::FeatureStateDescription*), "get_Id", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::PoseDetection::FeatureStateDescription::get_Name
// Il2CppName: get_Name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Oculus::Interaction::PoseDetection::FeatureStateDescription::*)()>(&Oculus::Interaction::PoseDetection::FeatureStateDescription::get_Name)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::PoseDetection::FeatureStateDescription*), "get_Name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
