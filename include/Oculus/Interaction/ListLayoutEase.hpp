// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction
namespace Oculus::Interaction {
  // Forward declaring type: ListLayout
  class ListLayout;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: AnimationCurve
  class AnimationCurve;
}
// Completed forward declares
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Forward declaring type: ListLayoutEase
  class ListLayoutEase;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::ListLayoutEase);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::ListLayoutEase*, "Oculus.Interaction", "ListLayoutEase");
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.ListLayoutEase
  // [TokenAttribute] Offset: FFFFFFFF
  class ListLayoutEase : public ::Il2CppObject {
    public:
    // Nested type: ::Oculus::Interaction::ListLayoutEase::ListElementEase
    class ListElementEase;
    public:
    // private Oculus.Interaction.ListLayout _listLayout
    // Size: 0x8
    // Offset: 0x10
    ::Oculus::Interaction::ListLayout* listLayout;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::ListLayout*) == 0x8);
    // private System.Collections.Generic.Dictionary`2<System.Int32,Oculus.Interaction.ListLayoutEase/ListElementEase> _elementDict
    // Size: 0x8
    // Offset: 0x18
    ::System::Collections::Generic::Dictionary_2<int, ::Oculus::Interaction::ListLayoutEase::ListElementEase*>* elementDict;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<int, ::Oculus::Interaction::ListLayoutEase::ListElementEase*>*) == 0x8);
    // private UnityEngine.AnimationCurve _curve
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::AnimationCurve* curve;
    // Field size check
    static_assert(sizeof(::UnityEngine::AnimationCurve*) == 0x8);
    // private System.Single _curveTime
    // Size: 0x4
    // Offset: 0x28
    float curveTime;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single _time
    // Size: 0x4
    // Offset: 0x2C
    float time;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Get instance field reference: private Oculus.Interaction.ListLayout _listLayout
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::ListLayout*& dyn__listLayout();
    // Get instance field reference: private System.Collections.Generic.Dictionary`2<System.Int32,Oculus.Interaction.ListLayoutEase/ListElementEase> _elementDict
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, ::Oculus::Interaction::ListLayoutEase::ListElementEase*>*& dyn__elementDict();
    // Get instance field reference: private UnityEngine.AnimationCurve _curve
    [[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& dyn__curve();
    // Get instance field reference: private System.Single _curveTime
    [[deprecated("Use field access instead!")]] float& dyn__curveTime();
    // Get instance field reference: private System.Single _time
    [[deprecated("Use field access instead!")]] float& dyn__time();
    // public System.Void .ctor(Oculus.Interaction.ListLayout layout, System.Single curveTime, UnityEngine.AnimationCurve curve)
    // Offset: 0x47B82A8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ListLayoutEase* New_ctor(::Oculus::Interaction::ListLayout* layout, float curveTime, ::UnityEngine::AnimationCurve* curve) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayoutEase::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ListLayoutEase*, creationType>(layout, curveTime, curve)));
    }
    // private System.Void HandleElementAdded(System.Int32 id)
    // Offset: 0x47B85A0
    void HandleElementAdded(int id);
    // private System.Void HandleElementUpdated(System.Int32 id, System.Boolean sizeUpdate)
    // Offset: 0x47B86BC
    void HandleElementUpdated(int id, bool sizeUpdate);
    // private System.Void HandleElementRemoved(System.Int32 id)
    // Offset: 0x47B8780
    void HandleElementRemoved(int id);
    // public System.Void UpdateTime(System.Single time)
    // Offset: 0x47B87D8
    void UpdateTime(float time);
    // public System.Single GetPosition(System.Int32 id)
    // Offset: 0x47B89AC
    float GetPosition(int id);
  }; // Oculus.Interaction.ListLayoutEase
  #pragma pack(pop)
  static check_size<sizeof(ListLayoutEase), 44 + sizeof(float)> __Oculus_Interaction_ListLayoutEaseSizeCheck;
  static_assert(sizeof(ListLayoutEase) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::ListLayoutEase::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Oculus::Interaction::ListLayoutEase::HandleElementAdded
// Il2CppName: HandleElementAdded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::ListLayoutEase::*)(int)>(&Oculus::Interaction::ListLayoutEase::HandleElementAdded)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::ListLayoutEase*), "HandleElementAdded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::ListLayoutEase::HandleElementUpdated
// Il2CppName: HandleElementUpdated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::ListLayoutEase::*)(int, bool)>(&Oculus::Interaction::ListLayoutEase::HandleElementUpdated)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* sizeUpdate = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::ListLayoutEase*), "HandleElementUpdated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, sizeUpdate});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::ListLayoutEase::HandleElementRemoved
// Il2CppName: HandleElementRemoved
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::ListLayoutEase::*)(int)>(&Oculus::Interaction::ListLayoutEase::HandleElementRemoved)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::ListLayoutEase*), "HandleElementRemoved", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::ListLayoutEase::UpdateTime
// Il2CppName: UpdateTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::ListLayoutEase::*)(float)>(&Oculus::Interaction::ListLayoutEase::UpdateTime)> {
  static const MethodInfo* get() {
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::ListLayoutEase*), "UpdateTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{time});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::ListLayoutEase::GetPosition
// Il2CppName: GetPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Oculus::Interaction::ListLayoutEase::*)(int)>(&Oculus::Interaction::ListLayoutEase::GetPosition)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::ListLayoutEase*), "GetPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
