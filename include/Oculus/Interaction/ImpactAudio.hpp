// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction
namespace Oculus::Interaction {
  // Forward declaring type: AudioTrigger
  class AudioTrigger;
}
// Completed forward declares
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Forward declaring type: ImpactAudio
  struct ImpactAudio;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::ImpactAudio, "Oculus.Interaction", "ImpactAudio");
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Size: 0x10
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: Oculus.Interaction.ImpactAudio
  // [TokenAttribute] Offset: FFFFFFFF
  struct ImpactAudio/*, public ::System::ValueType*/ {
    public:
    public:
    // private Oculus.Interaction.AudioTrigger _hardCollisionSound
    // Size: 0x8
    // Offset: 0x0
    ::Oculus::Interaction::AudioTrigger* hardCollisionSound;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::AudioTrigger*) == 0x8);
    // private Oculus.Interaction.AudioTrigger _softCollisionSound
    // Size: 0x8
    // Offset: 0x8
    ::Oculus::Interaction::AudioTrigger* softCollisionSound;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::AudioTrigger*) == 0x8);
    public:
    // Creating value type constructor for type: ImpactAudio
    constexpr ImpactAudio(::Oculus::Interaction::AudioTrigger* hardCollisionSound_ = {}, ::Oculus::Interaction::AudioTrigger* softCollisionSound_ = {}) noexcept : hardCollisionSound{hardCollisionSound_}, softCollisionSound{softCollisionSound_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: private Oculus.Interaction.AudioTrigger _hardCollisionSound
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::AudioTrigger*& dyn__hardCollisionSound();
    // Get instance field reference: private Oculus.Interaction.AudioTrigger _softCollisionSound
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::AudioTrigger*& dyn__softCollisionSound();
    // public Oculus.Interaction.AudioTrigger get_HardCollisionSound()
    // Offset: 0x479865C
    ::Oculus::Interaction::AudioTrigger* get_HardCollisionSound();
    // public Oculus.Interaction.AudioTrigger get_SoftCollisionSound()
    // Offset: 0x4798664
    ::Oculus::Interaction::AudioTrigger* get_SoftCollisionSound();
  }; // Oculus.Interaction.ImpactAudio
  #pragma pack(pop)
  static check_size<sizeof(ImpactAudio), 8 + sizeof(::Oculus::Interaction::AudioTrigger*)> __Oculus_Interaction_ImpactAudioSizeCheck;
  static_assert(sizeof(ImpactAudio) == 0x10);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::ImpactAudio::get_HardCollisionSound
// Il2CppName: get_HardCollisionSound
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::AudioTrigger* (Oculus::Interaction::ImpactAudio::*)()>(&Oculus::Interaction::ImpactAudio::get_HardCollisionSound)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::ImpactAudio), "get_HardCollisionSound", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::ImpactAudio::get_SoftCollisionSound
// Il2CppName: get_SoftCollisionSound
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::AudioTrigger* (Oculus::Interaction::ImpactAudio::*)()>(&Oculus::Interaction::ImpactAudio::get_SoftCollisionSound)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::ImpactAudio), "get_SoftCollisionSound", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
