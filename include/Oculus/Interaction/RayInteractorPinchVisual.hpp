// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Object because it is already included!
  // Forward declaring type: SkinnedMeshRenderer
  class SkinnedMeshRenderer;
  // Forward declaring type: AnimationCurve
  class AnimationCurve;
}
// Forward declaring namespace: Oculus::Interaction::Input
namespace Oculus::Interaction::Input {
  // Forward declaring type: IHand
  class IHand;
}
// Forward declaring namespace: Oculus::Interaction
namespace Oculus::Interaction {
  // Forward declaring type: RayInteractor
  class RayInteractor;
  // Forward declaring type: InteractorStateChangeArgs
  struct InteractorStateChangeArgs;
}
// Completed forward declares
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Forward declaring type: RayInteractorPinchVisual
  class RayInteractorPinchVisual;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::RayInteractorPinchVisual);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::RayInteractorPinchVisual*, "Oculus.Interaction", "RayInteractorPinchVisual");
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Size: 0x51
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.RayInteractorPinchVisual
  // [TokenAttribute] Offset: FFFFFFFF
  class RayInteractorPinchVisual : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private UnityEngine.Object _hand
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::Object* hand;
    // Field size check
    static_assert(sizeof(::UnityEngine::Object*) == 0x8);
    // private Oculus.Interaction.Input.IHand Hand
    // Size: 0x8
    // Offset: 0x28
    ::Oculus::Interaction::Input::IHand* Hand;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Input::IHand*) == 0x8);
    // private Oculus.Interaction.RayInteractor _rayInteractor
    // Size: 0x8
    // Offset: 0x30
    ::Oculus::Interaction::RayInteractor* rayInteractor;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::RayInteractor*) == 0x8);
    // private UnityEngine.SkinnedMeshRenderer _skinnedMeshRenderer
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::SkinnedMeshRenderer* skinnedMeshRenderer;
    // Field size check
    static_assert(sizeof(::UnityEngine::SkinnedMeshRenderer*) == 0x8);
    // private UnityEngine.AnimationCurve _remapCurve
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::AnimationCurve* remapCurve;
    // Field size check
    static_assert(sizeof(::UnityEngine::AnimationCurve*) == 0x8);
    // private UnityEngine.Vector2 _alphaRange
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::Vector2 alphaRange;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector2) == 0x8);
    // protected System.Boolean _started
    // Size: 0x1
    // Offset: 0x50
    bool started;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get instance field reference: private UnityEngine.Object _hand
    [[deprecated("Use field access instead!")]] ::UnityEngine::Object*& dyn__hand();
    // Get instance field reference: private Oculus.Interaction.Input.IHand Hand
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IHand*& dyn_Hand();
    // Get instance field reference: private Oculus.Interaction.RayInteractor _rayInteractor
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::RayInteractor*& dyn__rayInteractor();
    // Get instance field reference: private UnityEngine.SkinnedMeshRenderer _skinnedMeshRenderer
    [[deprecated("Use field access instead!")]] ::UnityEngine::SkinnedMeshRenderer*& dyn__skinnedMeshRenderer();
    // Get instance field reference: private UnityEngine.AnimationCurve _remapCurve
    [[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& dyn__remapCurve();
    // Get instance field reference: private UnityEngine.Vector2 _alphaRange
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& dyn__alphaRange();
    // Get instance field reference: protected System.Boolean _started
    [[deprecated("Use field access instead!")]] bool& dyn__started();
    // public UnityEngine.AnimationCurve get_RemapCurve()
    // Offset: 0x47B6C34
    ::UnityEngine::AnimationCurve* get_RemapCurve();
    // public System.Void set_RemapCurve(UnityEngine.AnimationCurve value)
    // Offset: 0x47B6C3C
    void set_RemapCurve(::UnityEngine::AnimationCurve* value);
    // public UnityEngine.Vector2 get_AlphaRange()
    // Offset: 0x47B6C44
    ::UnityEngine::Vector2 get_AlphaRange();
    // public System.Void set_AlphaRange(UnityEngine.Vector2 value)
    // Offset: 0x47B6C4C
    void set_AlphaRange(::UnityEngine::Vector2 value);
    // protected System.Void Awake()
    // Offset: 0x47B6C54
    void Awake();
    // protected System.Void Start()
    // Offset: 0x47B6CBC
    void Start();
    // protected System.Void OnEnable()
    // Offset: 0x47B6CF4
    void OnEnable();
    // protected System.Void OnDisable()
    // Offset: 0x47B73F0
    void OnDisable();
    // private System.Void UpdateVisual()
    // Offset: 0x47B6E28
    void UpdateVisual();
    // private System.Void UpdateVisualState(Oculus.Interaction.InteractorStateChangeArgs args)
    // Offset: 0x47B751C
    void UpdateVisualState(::Oculus::Interaction::InteractorStateChangeArgs args);
    // public System.Void InjectAllRayInteractorPinchVisual(Oculus.Interaction.Input.IHand hand, Oculus.Interaction.RayInteractor rayInteractor, UnityEngine.SkinnedMeshRenderer skinnedMeshRenderer)
    // Offset: 0x47B7520
    void InjectAllRayInteractorPinchVisual(::Oculus::Interaction::Input::IHand* hand, ::Oculus::Interaction::RayInteractor* rayInteractor, ::UnityEngine::SkinnedMeshRenderer* skinnedMeshRenderer);
    // public System.Void InjectHand(Oculus.Interaction.Input.IHand hand)
    // Offset: 0x47B7560
    void InjectHand(::Oculus::Interaction::Input::IHand* hand);
    // public System.Void InjectRayInteractor(Oculus.Interaction.RayInteractor rayInteractor)
    // Offset: 0x47B7630
    void InjectRayInteractor(::Oculus::Interaction::RayInteractor* rayInteractor);
    // public System.Void InjectSkinnedMeshRenderer(UnityEngine.SkinnedMeshRenderer skinnedMeshRenderer)
    // Offset: 0x47B7638
    void InjectSkinnedMeshRenderer(::UnityEngine::SkinnedMeshRenderer* skinnedMeshRenderer);
    // public System.Void .ctor()
    // Offset: 0x47B7640
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RayInteractorPinchVisual* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorPinchVisual::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RayInteractorPinchVisual*, creationType>()));
    }
  }; // Oculus.Interaction.RayInteractorPinchVisual
  #pragma pack(pop)
  static check_size<sizeof(RayInteractorPinchVisual), 80 + sizeof(bool)> __Oculus_Interaction_RayInteractorPinchVisualSizeCheck;
  static_assert(sizeof(RayInteractorPinchVisual) == 0x51);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::RayInteractorPinchVisual::get_RemapCurve
// Il2CppName: get_RemapCurve
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::AnimationCurve* (Oculus::Interaction::RayInteractorPinchVisual::*)()>(&Oculus::Interaction::RayInteractorPinchVisual::get_RemapCurve)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::RayInteractorPinchVisual*), "get_RemapCurve", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::RayInteractorPinchVisual::set_RemapCurve
// Il2CppName: set_RemapCurve
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::RayInteractorPinchVisual::*)(::UnityEngine::AnimationCurve*)>(&Oculus::Interaction::RayInteractorPinchVisual::set_RemapCurve)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "AnimationCurve")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::RayInteractorPinchVisual*), "set_RemapCurve", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::RayInteractorPinchVisual::get_AlphaRange
// Il2CppName: get_AlphaRange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (Oculus::Interaction::RayInteractorPinchVisual::*)()>(&Oculus::Interaction::RayInteractorPinchVisual::get_AlphaRange)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::RayInteractorPinchVisual*), "get_AlphaRange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::RayInteractorPinchVisual::set_AlphaRange
// Il2CppName: set_AlphaRange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::RayInteractorPinchVisual::*)(::UnityEngine::Vector2)>(&Oculus::Interaction::RayInteractorPinchVisual::set_AlphaRange)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::RayInteractorPinchVisual*), "set_AlphaRange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::RayInteractorPinchVisual::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::RayInteractorPinchVisual::*)()>(&Oculus::Interaction::RayInteractorPinchVisual::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::RayInteractorPinchVisual*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::RayInteractorPinchVisual::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::RayInteractorPinchVisual::*)()>(&Oculus::Interaction::RayInteractorPinchVisual::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::RayInteractorPinchVisual*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::RayInteractorPinchVisual::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::RayInteractorPinchVisual::*)()>(&Oculus::Interaction::RayInteractorPinchVisual::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::RayInteractorPinchVisual*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::RayInteractorPinchVisual::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::RayInteractorPinchVisual::*)()>(&Oculus::Interaction::RayInteractorPinchVisual::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::RayInteractorPinchVisual*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::RayInteractorPinchVisual::UpdateVisual
// Il2CppName: UpdateVisual
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::RayInteractorPinchVisual::*)()>(&Oculus::Interaction::RayInteractorPinchVisual::UpdateVisual)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::RayInteractorPinchVisual*), "UpdateVisual", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::RayInteractorPinchVisual::UpdateVisualState
// Il2CppName: UpdateVisualState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::RayInteractorPinchVisual::*)(::Oculus::Interaction::InteractorStateChangeArgs)>(&Oculus::Interaction::RayInteractorPinchVisual::UpdateVisualState)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "InteractorStateChangeArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::RayInteractorPinchVisual*), "UpdateVisualState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::RayInteractorPinchVisual::InjectAllRayInteractorPinchVisual
// Il2CppName: InjectAllRayInteractorPinchVisual
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::RayInteractorPinchVisual::*)(::Oculus::Interaction::Input::IHand*, ::Oculus::Interaction::RayInteractor*, ::UnityEngine::SkinnedMeshRenderer*)>(&Oculus::Interaction::RayInteractorPinchVisual::InjectAllRayInteractorPinchVisual)> {
  static const MethodInfo* get() {
    static auto* hand = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "IHand")->byval_arg;
    static auto* rayInteractor = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "RayInteractor")->byval_arg;
    static auto* skinnedMeshRenderer = &::il2cpp_utils::GetClassFromName("UnityEngine", "SkinnedMeshRenderer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::RayInteractorPinchVisual*), "InjectAllRayInteractorPinchVisual", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{hand, rayInteractor, skinnedMeshRenderer});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::RayInteractorPinchVisual::InjectHand
// Il2CppName: InjectHand
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::RayInteractorPinchVisual::*)(::Oculus::Interaction::Input::IHand*)>(&Oculus::Interaction::RayInteractorPinchVisual::InjectHand)> {
  static const MethodInfo* get() {
    static auto* hand = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "IHand")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::RayInteractorPinchVisual*), "InjectHand", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{hand});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::RayInteractorPinchVisual::InjectRayInteractor
// Il2CppName: InjectRayInteractor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::RayInteractorPinchVisual::*)(::Oculus::Interaction::RayInteractor*)>(&Oculus::Interaction::RayInteractorPinchVisual::InjectRayInteractor)> {
  static const MethodInfo* get() {
    static auto* rayInteractor = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "RayInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::RayInteractorPinchVisual*), "InjectRayInteractor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rayInteractor});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::RayInteractorPinchVisual::InjectSkinnedMeshRenderer
// Il2CppName: InjectSkinnedMeshRenderer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::RayInteractorPinchVisual::*)(::UnityEngine::SkinnedMeshRenderer*)>(&Oculus::Interaction::RayInteractorPinchVisual::InjectSkinnedMeshRenderer)> {
  static const MethodInfo* get() {
    static auto* skinnedMeshRenderer = &::il2cpp_utils::GetClassFromName("UnityEngine", "SkinnedMeshRenderer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::RayInteractorPinchVisual*), "InjectSkinnedMeshRenderer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{skinnedMeshRenderer});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::RayInteractorPinchVisual::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
