// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Object because it is already included!
}
// Forward declaring namespace: Oculus::Interaction
namespace Oculus::Interaction {
  // Forward declaring type: IInteractableView
  class IInteractableView;
  // Forward declaring type: InteractableStateChangeArgs
  struct InteractableStateChangeArgs;
  // Forward declaring type: IInteractorView
  class IInteractorView;
}
// Forward declaring namespace: UnityEngine::Events
namespace UnityEngine::Events {
  // Forward declaring type: UnityEvent
  class UnityEvent;
}
// Completed forward declares
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Forward declaring type: InteractableUnityEventWrapper
  class InteractableUnityEventWrapper;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::InteractableUnityEventWrapper);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::InteractableUnityEventWrapper*, "Oculus.Interaction", "InteractableUnityEventWrapper");
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Size: 0x71
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.InteractableUnityEventWrapper
  // [TokenAttribute] Offset: FFFFFFFF
  class InteractableUnityEventWrapper : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private UnityEngine.Object _interactableView
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::Object* interactableView;
    // Field size check
    static_assert(sizeof(::UnityEngine::Object*) == 0x8);
    // private Oculus.Interaction.IInteractableView InteractableView
    // Size: 0x8
    // Offset: 0x28
    ::Oculus::Interaction::IInteractableView* InteractableView;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::IInteractableView*) == 0x8);
    // private UnityEngine.Events.UnityEvent _whenHover
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::Events::UnityEvent* whenHover;
    // Field size check
    static_assert(sizeof(::UnityEngine::Events::UnityEvent*) == 0x8);
    // private UnityEngine.Events.UnityEvent _whenUnhover
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::Events::UnityEvent* whenUnhover;
    // Field size check
    static_assert(sizeof(::UnityEngine::Events::UnityEvent*) == 0x8);
    // private UnityEngine.Events.UnityEvent _whenSelect
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::Events::UnityEvent* whenSelect;
    // Field size check
    static_assert(sizeof(::UnityEngine::Events::UnityEvent*) == 0x8);
    // private UnityEngine.Events.UnityEvent _whenUnselect
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::Events::UnityEvent* whenUnselect;
    // Field size check
    static_assert(sizeof(::UnityEngine::Events::UnityEvent*) == 0x8);
    // private UnityEngine.Events.UnityEvent _whenInteractorViewAdded
    // Size: 0x8
    // Offset: 0x50
    ::UnityEngine::Events::UnityEvent* whenInteractorViewAdded;
    // Field size check
    static_assert(sizeof(::UnityEngine::Events::UnityEvent*) == 0x8);
    // private UnityEngine.Events.UnityEvent _whenInteractorViewRemoved
    // Size: 0x8
    // Offset: 0x58
    ::UnityEngine::Events::UnityEvent* whenInteractorViewRemoved;
    // Field size check
    static_assert(sizeof(::UnityEngine::Events::UnityEvent*) == 0x8);
    // private UnityEngine.Events.UnityEvent _whenSelectingInteractorViewAdded
    // Size: 0x8
    // Offset: 0x60
    ::UnityEngine::Events::UnityEvent* whenSelectingInteractorViewAdded;
    // Field size check
    static_assert(sizeof(::UnityEngine::Events::UnityEvent*) == 0x8);
    // private UnityEngine.Events.UnityEvent _whenSelectingInteractorViewRemoved
    // Size: 0x8
    // Offset: 0x68
    ::UnityEngine::Events::UnityEvent* whenSelectingInteractorViewRemoved;
    // Field size check
    static_assert(sizeof(::UnityEngine::Events::UnityEvent*) == 0x8);
    // protected System.Boolean _started
    // Size: 0x1
    // Offset: 0x70
    bool started;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get instance field reference: private UnityEngine.Object _interactableView
    [[deprecated("Use field access instead!")]] ::UnityEngine::Object*& dyn__interactableView();
    // Get instance field reference: private Oculus.Interaction.IInteractableView InteractableView
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::IInteractableView*& dyn_InteractableView();
    // Get instance field reference: private UnityEngine.Events.UnityEvent _whenHover
    [[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& dyn__whenHover();
    // Get instance field reference: private UnityEngine.Events.UnityEvent _whenUnhover
    [[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& dyn__whenUnhover();
    // Get instance field reference: private UnityEngine.Events.UnityEvent _whenSelect
    [[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& dyn__whenSelect();
    // Get instance field reference: private UnityEngine.Events.UnityEvent _whenUnselect
    [[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& dyn__whenUnselect();
    // Get instance field reference: private UnityEngine.Events.UnityEvent _whenInteractorViewAdded
    [[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& dyn__whenInteractorViewAdded();
    // Get instance field reference: private UnityEngine.Events.UnityEvent _whenInteractorViewRemoved
    [[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& dyn__whenInteractorViewRemoved();
    // Get instance field reference: private UnityEngine.Events.UnityEvent _whenSelectingInteractorViewAdded
    [[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& dyn__whenSelectingInteractorViewAdded();
    // Get instance field reference: private UnityEngine.Events.UnityEvent _whenSelectingInteractorViewRemoved
    [[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& dyn__whenSelectingInteractorViewRemoved();
    // Get instance field reference: protected System.Boolean _started
    [[deprecated("Use field access instead!")]] bool& dyn__started();
    // public UnityEngine.Events.UnityEvent get_WhenHover()
    // Offset: 0x47D53FC
    ::UnityEngine::Events::UnityEvent* get_WhenHover();
    // public UnityEngine.Events.UnityEvent get_WhenUnhover()
    // Offset: 0x47D5404
    ::UnityEngine::Events::UnityEvent* get_WhenUnhover();
    // public UnityEngine.Events.UnityEvent get_WhenSelect()
    // Offset: 0x47D540C
    ::UnityEngine::Events::UnityEvent* get_WhenSelect();
    // public UnityEngine.Events.UnityEvent get_WhenUnselect()
    // Offset: 0x47D5414
    ::UnityEngine::Events::UnityEvent* get_WhenUnselect();
    // public UnityEngine.Events.UnityEvent get_WhenInteractorViewAdded()
    // Offset: 0x47D541C
    ::UnityEngine::Events::UnityEvent* get_WhenInteractorViewAdded();
    // public UnityEngine.Events.UnityEvent get_WhenInteractorViewRemoved()
    // Offset: 0x47D5424
    ::UnityEngine::Events::UnityEvent* get_WhenInteractorViewRemoved();
    // public UnityEngine.Events.UnityEvent get_WhenSelectingInteractorViewAdded()
    // Offset: 0x47D542C
    ::UnityEngine::Events::UnityEvent* get_WhenSelectingInteractorViewAdded();
    // public UnityEngine.Events.UnityEvent get_WhenSelectingInteractorViewRemoved()
    // Offset: 0x47D5434
    ::UnityEngine::Events::UnityEvent* get_WhenSelectingInteractorViewRemoved();
    // protected System.Void Awake()
    // Offset: 0x47D543C
    void Awake();
    // protected System.Void Start()
    // Offset: 0x47D54A4
    void Start();
    // protected System.Void OnEnable()
    // Offset: 0x47D54DC
    void OnEnable();
    // protected System.Void OnDisable()
    // Offset: 0x47D5868
    void OnDisable();
    // private System.Void HandleStateChanged(Oculus.Interaction.InteractableStateChangeArgs args)
    // Offset: 0x47D5BF4
    void HandleStateChanged(::Oculus::Interaction::InteractableStateChangeArgs args);
    // private System.Void HandleInteractorViewAdded(Oculus.Interaction.IInteractorView interactorView)
    // Offset: 0x47D5C6C
    void HandleInteractorViewAdded(::Oculus::Interaction::IInteractorView* interactorView);
    // private System.Void HandleInteractorViewRemoved(Oculus.Interaction.IInteractorView interactorView)
    // Offset: 0x47D5C88
    void HandleInteractorViewRemoved(::Oculus::Interaction::IInteractorView* interactorView);
    // private System.Void HandleSelectingInteractorViewAdded(Oculus.Interaction.IInteractorView interactorView)
    // Offset: 0x47D5CA4
    void HandleSelectingInteractorViewAdded(::Oculus::Interaction::IInteractorView* interactorView);
    // private System.Void HandleSelectingInteractorViewRemoved(Oculus.Interaction.IInteractorView interactorView)
    // Offset: 0x47D5CC0
    void HandleSelectingInteractorViewRemoved(::Oculus::Interaction::IInteractorView* interactorView);
    // public System.Void InjectAllInteractableUnityEventWrapper(Oculus.Interaction.IInteractableView interactableView)
    // Offset: 0x47D5CDC
    void InjectAllInteractableUnityEventWrapper(::Oculus::Interaction::IInteractableView* interactableView);
    // public System.Void InjectInteractableView(Oculus.Interaction.IInteractableView interactableView)
    // Offset: 0x47D5CE0
    void InjectInteractableView(::Oculus::Interaction::IInteractableView* interactableView);
    // public System.Void .ctor()
    // Offset: 0x47D5DB0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static InteractableUnityEventWrapper* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableUnityEventWrapper::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<InteractableUnityEventWrapper*, creationType>()));
    }
  }; // Oculus.Interaction.InteractableUnityEventWrapper
  #pragma pack(pop)
  static check_size<sizeof(InteractableUnityEventWrapper), 112 + sizeof(bool)> __Oculus_Interaction_InteractableUnityEventWrapperSizeCheck;
  static_assert(sizeof(InteractableUnityEventWrapper) == 0x71);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::InteractableUnityEventWrapper::get_WhenHover
// Il2CppName: get_WhenHover
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Events::UnityEvent* (Oculus::Interaction::InteractableUnityEventWrapper::*)()>(&Oculus::Interaction::InteractableUnityEventWrapper::get_WhenHover)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::InteractableUnityEventWrapper*), "get_WhenHover", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::InteractableUnityEventWrapper::get_WhenUnhover
// Il2CppName: get_WhenUnhover
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Events::UnityEvent* (Oculus::Interaction::InteractableUnityEventWrapper::*)()>(&Oculus::Interaction::InteractableUnityEventWrapper::get_WhenUnhover)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::InteractableUnityEventWrapper*), "get_WhenUnhover", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::InteractableUnityEventWrapper::get_WhenSelect
// Il2CppName: get_WhenSelect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Events::UnityEvent* (Oculus::Interaction::InteractableUnityEventWrapper::*)()>(&Oculus::Interaction::InteractableUnityEventWrapper::get_WhenSelect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::InteractableUnityEventWrapper*), "get_WhenSelect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::InteractableUnityEventWrapper::get_WhenUnselect
// Il2CppName: get_WhenUnselect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Events::UnityEvent* (Oculus::Interaction::InteractableUnityEventWrapper::*)()>(&Oculus::Interaction::InteractableUnityEventWrapper::get_WhenUnselect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::InteractableUnityEventWrapper*), "get_WhenUnselect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::InteractableUnityEventWrapper::get_WhenInteractorViewAdded
// Il2CppName: get_WhenInteractorViewAdded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Events::UnityEvent* (Oculus::Interaction::InteractableUnityEventWrapper::*)()>(&Oculus::Interaction::InteractableUnityEventWrapper::get_WhenInteractorViewAdded)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::InteractableUnityEventWrapper*), "get_WhenInteractorViewAdded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::InteractableUnityEventWrapper::get_WhenInteractorViewRemoved
// Il2CppName: get_WhenInteractorViewRemoved
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Events::UnityEvent* (Oculus::Interaction::InteractableUnityEventWrapper::*)()>(&Oculus::Interaction::InteractableUnityEventWrapper::get_WhenInteractorViewRemoved)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::InteractableUnityEventWrapper*), "get_WhenInteractorViewRemoved", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::InteractableUnityEventWrapper::get_WhenSelectingInteractorViewAdded
// Il2CppName: get_WhenSelectingInteractorViewAdded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Events::UnityEvent* (Oculus::Interaction::InteractableUnityEventWrapper::*)()>(&Oculus::Interaction::InteractableUnityEventWrapper::get_WhenSelectingInteractorViewAdded)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::InteractableUnityEventWrapper*), "get_WhenSelectingInteractorViewAdded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::InteractableUnityEventWrapper::get_WhenSelectingInteractorViewRemoved
// Il2CppName: get_WhenSelectingInteractorViewRemoved
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Events::UnityEvent* (Oculus::Interaction::InteractableUnityEventWrapper::*)()>(&Oculus::Interaction::InteractableUnityEventWrapper::get_WhenSelectingInteractorViewRemoved)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::InteractableUnityEventWrapper*), "get_WhenSelectingInteractorViewRemoved", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::InteractableUnityEventWrapper::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::InteractableUnityEventWrapper::*)()>(&Oculus::Interaction::InteractableUnityEventWrapper::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::InteractableUnityEventWrapper*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::InteractableUnityEventWrapper::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::InteractableUnityEventWrapper::*)()>(&Oculus::Interaction::InteractableUnityEventWrapper::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::InteractableUnityEventWrapper*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::InteractableUnityEventWrapper::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::InteractableUnityEventWrapper::*)()>(&Oculus::Interaction::InteractableUnityEventWrapper::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::InteractableUnityEventWrapper*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::InteractableUnityEventWrapper::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::InteractableUnityEventWrapper::*)()>(&Oculus::Interaction::InteractableUnityEventWrapper::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::InteractableUnityEventWrapper*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::InteractableUnityEventWrapper::HandleStateChanged
// Il2CppName: HandleStateChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::InteractableUnityEventWrapper::*)(::Oculus::Interaction::InteractableStateChangeArgs)>(&Oculus::Interaction::InteractableUnityEventWrapper::HandleStateChanged)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "InteractableStateChangeArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::InteractableUnityEventWrapper*), "HandleStateChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::InteractableUnityEventWrapper::HandleInteractorViewAdded
// Il2CppName: HandleInteractorViewAdded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::InteractableUnityEventWrapper::*)(::Oculus::Interaction::IInteractorView*)>(&Oculus::Interaction::InteractableUnityEventWrapper::HandleInteractorViewAdded)> {
  static const MethodInfo* get() {
    static auto* interactorView = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "IInteractorView")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::InteractableUnityEventWrapper*), "HandleInteractorViewAdded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactorView});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::InteractableUnityEventWrapper::HandleInteractorViewRemoved
// Il2CppName: HandleInteractorViewRemoved
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::InteractableUnityEventWrapper::*)(::Oculus::Interaction::IInteractorView*)>(&Oculus::Interaction::InteractableUnityEventWrapper::HandleInteractorViewRemoved)> {
  static const MethodInfo* get() {
    static auto* interactorView = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "IInteractorView")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::InteractableUnityEventWrapper*), "HandleInteractorViewRemoved", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactorView});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::InteractableUnityEventWrapper::HandleSelectingInteractorViewAdded
// Il2CppName: HandleSelectingInteractorViewAdded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::InteractableUnityEventWrapper::*)(::Oculus::Interaction::IInteractorView*)>(&Oculus::Interaction::InteractableUnityEventWrapper::HandleSelectingInteractorViewAdded)> {
  static const MethodInfo* get() {
    static auto* interactorView = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "IInteractorView")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::InteractableUnityEventWrapper*), "HandleSelectingInteractorViewAdded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactorView});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::InteractableUnityEventWrapper::HandleSelectingInteractorViewRemoved
// Il2CppName: HandleSelectingInteractorViewRemoved
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::InteractableUnityEventWrapper::*)(::Oculus::Interaction::IInteractorView*)>(&Oculus::Interaction::InteractableUnityEventWrapper::HandleSelectingInteractorViewRemoved)> {
  static const MethodInfo* get() {
    static auto* interactorView = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "IInteractorView")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::InteractableUnityEventWrapper*), "HandleSelectingInteractorViewRemoved", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactorView});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::InteractableUnityEventWrapper::InjectAllInteractableUnityEventWrapper
// Il2CppName: InjectAllInteractableUnityEventWrapper
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::InteractableUnityEventWrapper::*)(::Oculus::Interaction::IInteractableView*)>(&Oculus::Interaction::InteractableUnityEventWrapper::InjectAllInteractableUnityEventWrapper)> {
  static const MethodInfo* get() {
    static auto* interactableView = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "IInteractableView")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::InteractableUnityEventWrapper*), "InjectAllInteractableUnityEventWrapper", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactableView});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::InteractableUnityEventWrapper::InjectInteractableView
// Il2CppName: InjectInteractableView
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::InteractableUnityEventWrapper::*)(::Oculus::Interaction::IInteractableView*)>(&Oculus::Interaction::InteractableUnityEventWrapper::InjectInteractableView)> {
  static const MethodInfo* get() {
    static auto* interactableView = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "IInteractableView")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::InteractableUnityEventWrapper*), "InjectInteractableView", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactableView});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::InteractableUnityEventWrapper::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
