// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.IFingerAPI
#include "Oculus/Interaction/IFingerAPI.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction::GrabAPI
namespace Oculus::Interaction::GrabAPI {
}
// Forward declaring namespace: Oculus::Interaction::Input
namespace Oculus::Interaction::Input {
  // Forward declaring type: HandFinger
  struct HandFinger;
  // Forward declaring type: IHand
  class IHand;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Vector3
  struct Vector3;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.GrabAPI
namespace Oculus::Interaction::GrabAPI {
  // Forward declaring type: FingerPalmGrabAPI
  class FingerPalmGrabAPI;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::GrabAPI::FingerPalmGrabAPI);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::GrabAPI::FingerPalmGrabAPI*, "Oculus.Interaction.GrabAPI", "FingerPalmGrabAPI");
// Type namespace: Oculus.Interaction.GrabAPI
namespace Oculus::Interaction::GrabAPI {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.GrabAPI.FingerPalmGrabAPI
  // [TokenAttribute] Offset: FFFFFFFF
  class FingerPalmGrabAPI : public ::Il2CppObject/*, public ::Oculus::Interaction::IFingerAPI*/ {
    public:
    // Nested type: ::Oculus::Interaction::GrabAPI::FingerPalmGrabAPI::HandData
    class HandData;
    // Nested type: ::Oculus::Interaction::GrabAPI::FingerPalmGrabAPI::ReturnValue
    struct ReturnValue;
    public:
    // private System.Int32 apiHandle_
    // Size: 0x4
    // Offset: 0x10
    int apiHandle;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: apiHandle and: handData
    char __padding0[0x4] = {};
    // private Oculus.Interaction.GrabAPI.FingerPalmGrabAPI/HandData handData_
    // Size: 0x8
    // Offset: 0x18
    ::Oculus::Interaction::GrabAPI::FingerPalmGrabAPI::HandData* handData;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::GrabAPI::FingerPalmGrabAPI::HandData*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::Oculus::Interaction::IFingerAPI
    operator ::Oculus::Interaction::IFingerAPI() noexcept {
      return *reinterpret_cast<::Oculus::Interaction::IFingerAPI*>(this);
    }
    // Get instance field reference: private System.Int32 apiHandle_
    [[deprecated("Use field access instead!")]] int& dyn_apiHandle_();
    // Get instance field reference: private Oculus.Interaction.GrabAPI.FingerPalmGrabAPI/HandData handData_
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::GrabAPI::FingerPalmGrabAPI::HandData*& dyn_handData_();
    // static private System.Int32 isdk_FingerPalmGrabAPI_Create()
    // Offset: 0x4838DA0
    static int isdk_FingerPalmGrabAPI_Create();
    // static private Oculus.Interaction.GrabAPI.FingerPalmGrabAPI/ReturnValue isdk_FingerPalmGrabAPI_UpdateHandData(System.Int32 handle, in Oculus.Interaction.GrabAPI.FingerPalmGrabAPI/HandData data)
    // Offset: 0x4838E08
    static ::Oculus::Interaction::GrabAPI::FingerPalmGrabAPI::ReturnValue isdk_FingerPalmGrabAPI_UpdateHandData(int handle, ByRef<::Oculus::Interaction::GrabAPI::FingerPalmGrabAPI::HandData*> data);
    // static private Oculus.Interaction.GrabAPI.FingerPalmGrabAPI/ReturnValue isdk_FingerPalmGrabAPI_GetFingerIsGrabbing(System.Int32 handle, Oculus.Interaction.Input.HandFinger finger, out System.Boolean grabbing)
    // Offset: 0x4838ECC
    static ::Oculus::Interaction::GrabAPI::FingerPalmGrabAPI::ReturnValue isdk_FingerPalmGrabAPI_GetFingerIsGrabbing(int handle, ::Oculus::Interaction::Input::HandFinger finger, ByRef<bool> grabbing);
    // static private Oculus.Interaction.GrabAPI.FingerPalmGrabAPI/ReturnValue isdk_FingerPalmGrabAPI_GetFingerIsGrabbingChanged(System.Int32 handle, Oculus.Interaction.Input.HandFinger finger, System.Boolean targetGrabState, out System.Boolean changed)
    // Offset: 0x4838F74
    static ::Oculus::Interaction::GrabAPI::FingerPalmGrabAPI::ReturnValue isdk_FingerPalmGrabAPI_GetFingerIsGrabbingChanged(int handle, ::Oculus::Interaction::Input::HandFinger finger, bool targetGrabState, ByRef<bool> changed);
    // static private Oculus.Interaction.GrabAPI.FingerPalmGrabAPI/ReturnValue isdk_FingerPalmGrabAPI_GetFingerGrabScore(System.Int32 handle, Oculus.Interaction.Input.HandFinger finger, out System.Single score)
    // Offset: 0x4839024
    static ::Oculus::Interaction::GrabAPI::FingerPalmGrabAPI::ReturnValue isdk_FingerPalmGrabAPI_GetFingerGrabScore(int handle, ::Oculus::Interaction::Input::HandFinger finger, ByRef<float> score);
    // static private Oculus.Interaction.GrabAPI.FingerPalmGrabAPI/ReturnValue isdk_FingerPalmGrabAPI_GetCenterOffset(System.Int32 handle, out UnityEngine.Vector3 score)
    // Offset: 0x48390B8
    static ::Oculus::Interaction::GrabAPI::FingerPalmGrabAPI::ReturnValue isdk_FingerPalmGrabAPI_GetCenterOffset(int handle, ByRef<::UnityEngine::Vector3> score);
    // public System.Void .ctor()
    // Offset: 0x483913C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static FingerPalmGrabAPI* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabAPI::FingerPalmGrabAPI::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<FingerPalmGrabAPI*, creationType>()));
    }
    // private System.Int32 GetHandle()
    // Offset: 0x4839210
    int GetHandle();
    // public System.Boolean GetFingerIsGrabbing(Oculus.Interaction.Input.HandFinger finger)
    // Offset: 0x4839234
    bool GetFingerIsGrabbing(::Oculus::Interaction::Input::HandFinger finger);
    // public System.Boolean GetFingerIsGrabbingChanged(Oculus.Interaction.Input.HandFinger finger, System.Boolean targetGrabState)
    // Offset: 0x4839278
    bool GetFingerIsGrabbingChanged(::Oculus::Interaction::Input::HandFinger finger, bool targetGrabState);
    // public System.Single GetFingerGrabScore(Oculus.Interaction.Input.HandFinger finger)
    // Offset: 0x48392CC
    float GetFingerGrabScore(::Oculus::Interaction::Input::HandFinger finger);
    // public System.Void Update(Oculus.Interaction.Input.IHand hand)
    // Offset: 0x4839310
    void Update(::Oculus::Interaction::Input::IHand* hand);
    // public UnityEngine.Vector3 GetWristOffsetLocal()
    // Offset: 0x48396C0
    ::UnityEngine::Vector3 GetWristOffsetLocal();
  }; // Oculus.Interaction.GrabAPI.FingerPalmGrabAPI
  #pragma pack(pop)
  static check_size<sizeof(FingerPalmGrabAPI), 24 + sizeof(::Oculus::Interaction::GrabAPI::FingerPalmGrabAPI::HandData*)> __Oculus_Interaction_GrabAPI_FingerPalmGrabAPISizeCheck;
  static_assert(sizeof(FingerPalmGrabAPI) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::FingerPalmGrabAPI::isdk_FingerPalmGrabAPI_Create
// Il2CppName: isdk_FingerPalmGrabAPI_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&Oculus::Interaction::GrabAPI::FingerPalmGrabAPI::isdk_FingerPalmGrabAPI_Create)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::FingerPalmGrabAPI*), "isdk_FingerPalmGrabAPI_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::FingerPalmGrabAPI::isdk_FingerPalmGrabAPI_UpdateHandData
// Il2CppName: isdk_FingerPalmGrabAPI_UpdateHandData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::GrabAPI::FingerPalmGrabAPI::ReturnValue (*)(int, ByRef<::Oculus::Interaction::GrabAPI::FingerPalmGrabAPI::HandData*>)>(&Oculus::Interaction::GrabAPI::FingerPalmGrabAPI::isdk_FingerPalmGrabAPI_UpdateHandData)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.GrabAPI", "FingerPalmGrabAPI/HandData")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::FingerPalmGrabAPI*), "isdk_FingerPalmGrabAPI_UpdateHandData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, data});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::FingerPalmGrabAPI::isdk_FingerPalmGrabAPI_GetFingerIsGrabbing
// Il2CppName: isdk_FingerPalmGrabAPI_GetFingerIsGrabbing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::GrabAPI::FingerPalmGrabAPI::ReturnValue (*)(int, ::Oculus::Interaction::Input::HandFinger, ByRef<bool>)>(&Oculus::Interaction::GrabAPI::FingerPalmGrabAPI::isdk_FingerPalmGrabAPI_GetFingerIsGrabbing)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* finger = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "HandFinger")->byval_arg;
    static auto* grabbing = &::il2cpp_utils::GetClassFromName("System", "Boolean")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::FingerPalmGrabAPI*), "isdk_FingerPalmGrabAPI_GetFingerIsGrabbing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, finger, grabbing});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::FingerPalmGrabAPI::isdk_FingerPalmGrabAPI_GetFingerIsGrabbingChanged
// Il2CppName: isdk_FingerPalmGrabAPI_GetFingerIsGrabbingChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::GrabAPI::FingerPalmGrabAPI::ReturnValue (*)(int, ::Oculus::Interaction::Input::HandFinger, bool, ByRef<bool>)>(&Oculus::Interaction::GrabAPI::FingerPalmGrabAPI::isdk_FingerPalmGrabAPI_GetFingerIsGrabbingChanged)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* finger = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "HandFinger")->byval_arg;
    static auto* targetGrabState = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* changed = &::il2cpp_utils::GetClassFromName("System", "Boolean")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::FingerPalmGrabAPI*), "isdk_FingerPalmGrabAPI_GetFingerIsGrabbingChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, finger, targetGrabState, changed});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::FingerPalmGrabAPI::isdk_FingerPalmGrabAPI_GetFingerGrabScore
// Il2CppName: isdk_FingerPalmGrabAPI_GetFingerGrabScore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::GrabAPI::FingerPalmGrabAPI::ReturnValue (*)(int, ::Oculus::Interaction::Input::HandFinger, ByRef<float>)>(&Oculus::Interaction::GrabAPI::FingerPalmGrabAPI::isdk_FingerPalmGrabAPI_GetFingerGrabScore)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* finger = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "HandFinger")->byval_arg;
    static auto* score = &::il2cpp_utils::GetClassFromName("System", "Single")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::FingerPalmGrabAPI*), "isdk_FingerPalmGrabAPI_GetFingerGrabScore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, finger, score});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::FingerPalmGrabAPI::isdk_FingerPalmGrabAPI_GetCenterOffset
// Il2CppName: isdk_FingerPalmGrabAPI_GetCenterOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::GrabAPI::FingerPalmGrabAPI::ReturnValue (*)(int, ByRef<::UnityEngine::Vector3>)>(&Oculus::Interaction::GrabAPI::FingerPalmGrabAPI::isdk_FingerPalmGrabAPI_GetCenterOffset)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* score = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::FingerPalmGrabAPI*), "isdk_FingerPalmGrabAPI_GetCenterOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, score});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::FingerPalmGrabAPI::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::FingerPalmGrabAPI::GetHandle
// Il2CppName: GetHandle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Oculus::Interaction::GrabAPI::FingerPalmGrabAPI::*)()>(&Oculus::Interaction::GrabAPI::FingerPalmGrabAPI::GetHandle)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::FingerPalmGrabAPI*), "GetHandle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::FingerPalmGrabAPI::GetFingerIsGrabbing
// Il2CppName: GetFingerIsGrabbing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::GrabAPI::FingerPalmGrabAPI::*)(::Oculus::Interaction::Input::HandFinger)>(&Oculus::Interaction::GrabAPI::FingerPalmGrabAPI::GetFingerIsGrabbing)> {
  static const MethodInfo* get() {
    static auto* finger = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "HandFinger")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::FingerPalmGrabAPI*), "GetFingerIsGrabbing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{finger});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::FingerPalmGrabAPI::GetFingerIsGrabbingChanged
// Il2CppName: GetFingerIsGrabbingChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::GrabAPI::FingerPalmGrabAPI::*)(::Oculus::Interaction::Input::HandFinger, bool)>(&Oculus::Interaction::GrabAPI::FingerPalmGrabAPI::GetFingerIsGrabbingChanged)> {
  static const MethodInfo* get() {
    static auto* finger = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "HandFinger")->byval_arg;
    static auto* targetGrabState = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::FingerPalmGrabAPI*), "GetFingerIsGrabbingChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{finger, targetGrabState});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::FingerPalmGrabAPI::GetFingerGrabScore
// Il2CppName: GetFingerGrabScore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Oculus::Interaction::GrabAPI::FingerPalmGrabAPI::*)(::Oculus::Interaction::Input::HandFinger)>(&Oculus::Interaction::GrabAPI::FingerPalmGrabAPI::GetFingerGrabScore)> {
  static const MethodInfo* get() {
    static auto* finger = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "HandFinger")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::FingerPalmGrabAPI*), "GetFingerGrabScore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{finger});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::FingerPalmGrabAPI::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::GrabAPI::FingerPalmGrabAPI::*)(::Oculus::Interaction::Input::IHand*)>(&Oculus::Interaction::GrabAPI::FingerPalmGrabAPI::Update)> {
  static const MethodInfo* get() {
    static auto* hand = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "IHand")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::FingerPalmGrabAPI*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{hand});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::FingerPalmGrabAPI::GetWristOffsetLocal
// Il2CppName: GetWristOffsetLocal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (Oculus::Interaction::GrabAPI::FingerPalmGrabAPI::*)()>(&Oculus::Interaction::GrabAPI::FingerPalmGrabAPI::GetWristOffsetLocal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::FingerPalmGrabAPI*), "GetWristOffsetLocal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
