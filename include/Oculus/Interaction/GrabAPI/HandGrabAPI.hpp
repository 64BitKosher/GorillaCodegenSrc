// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Object because it is already included!
  // Skipping declaration: Vector3 because it is already included!
}
// Forward declaring namespace: Oculus::Interaction::Input
namespace Oculus::Interaction::Input {
  // Forward declaring type: IHand
  class IHand;
  // Forward declaring type: IHmd
  class IHmd;
  // Forward declaring type: HandFingerFlags
  struct HandFingerFlags;
  // Forward declaring type: HandFinger
  struct HandFinger;
  // Forward declaring type: PinchGrabParam
  struct PinchGrabParam;
}
// Forward declaring namespace: Oculus::Interaction
namespace Oculus::Interaction {
  // Forward declaring type: IFingerAPI
  class IFingerAPI;
}
// Forward declaring namespace: Oculus::Interaction::GrabAPI
namespace Oculus::Interaction::GrabAPI {
  // Forward declaring type: GrabbingRule
  struct GrabbingRule;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.GrabAPI
namespace Oculus::Interaction::GrabAPI {
  // Forward declaring type: HandGrabAPI
  class HandGrabAPI;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::GrabAPI::HandGrabAPI);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::GrabAPI::HandGrabAPI*, "Oculus.Interaction.GrabAPI", "HandGrabAPI");
// Type namespace: Oculus.Interaction.GrabAPI
namespace Oculus::Interaction::GrabAPI {
  // Size: 0x51
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.GrabAPI.HandGrabAPI
  // [TokenAttribute] Offset: FFFFFFFF
  class HandGrabAPI : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private UnityEngine.Object _hand
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::Object* hand;
    // Field size check
    static_assert(sizeof(::UnityEngine::Object*) == 0x8);
    // private Oculus.Interaction.Input.IHand <Hand>k__BackingField
    // Size: 0x8
    // Offset: 0x28
    ::Oculus::Interaction::Input::IHand* Hand;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Input::IHand*) == 0x8);
    // private UnityEngine.Object _hmd
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::Object* hmd;
    // Field size check
    static_assert(sizeof(::UnityEngine::Object*) == 0x8);
    // private Oculus.Interaction.Input.IHmd <Hmd>k__BackingField
    // Size: 0x8
    // Offset: 0x38
    ::Oculus::Interaction::Input::IHmd* Hmd;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Input::IHmd*) == 0x8);
    // private Oculus.Interaction.IFingerAPI _fingerPinchGrabAPI
    // Size: 0x8
    // Offset: 0x40
    ::Oculus::Interaction::IFingerAPI* fingerPinchGrabAPI;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::IFingerAPI*) == 0x8);
    // private Oculus.Interaction.IFingerAPI _fingerPalmGrabAPI
    // Size: 0x8
    // Offset: 0x48
    ::Oculus::Interaction::IFingerAPI* fingerPalmGrabAPI;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::IFingerAPI*) == 0x8);
    // private System.Boolean _started
    // Size: 0x1
    // Offset: 0x50
    bool started;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get instance field reference: private UnityEngine.Object _hand
    [[deprecated("Use field access instead!")]] ::UnityEngine::Object*& dyn__hand();
    // Get instance field reference: private Oculus.Interaction.Input.IHand <Hand>k__BackingField
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IHand*& dyn_$Hand$k__BackingField();
    // Get instance field reference: private UnityEngine.Object _hmd
    [[deprecated("Use field access instead!")]] ::UnityEngine::Object*& dyn__hmd();
    // Get instance field reference: private Oculus.Interaction.Input.IHmd <Hmd>k__BackingField
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IHmd*& dyn_$Hmd$k__BackingField();
    // Get instance field reference: private Oculus.Interaction.IFingerAPI _fingerPinchGrabAPI
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::IFingerAPI*& dyn__fingerPinchGrabAPI();
    // Get instance field reference: private Oculus.Interaction.IFingerAPI _fingerPalmGrabAPI
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::IFingerAPI*& dyn__fingerPalmGrabAPI();
    // Get instance field reference: private System.Boolean _started
    [[deprecated("Use field access instead!")]] bool& dyn__started();
    // public Oculus.Interaction.Input.IHand get_Hand()
    // Offset: 0x483B2C0
    ::Oculus::Interaction::Input::IHand* get_Hand();
    // private System.Void set_Hand(Oculus.Interaction.Input.IHand value)
    // Offset: 0x483B2C8
    void set_Hand(::Oculus::Interaction::Input::IHand* value);
    // public Oculus.Interaction.Input.IHmd get_Hmd()
    // Offset: 0x483B2D0
    ::Oculus::Interaction::Input::IHmd* get_Hmd();
    // private System.Void set_Hmd(Oculus.Interaction.Input.IHmd value)
    // Offset: 0x483B2D8
    void set_Hmd(::Oculus::Interaction::Input::IHmd* value);
    // protected System.Void Awake()
    // Offset: 0x483B2E0
    void Awake();
    // protected System.Void Start()
    // Offset: 0x483B370
    void Start();
    // private System.Void OnEnable()
    // Offset: 0x483B450
    void OnEnable();
    // private System.Void OnDisable()
    // Offset: 0x483B550
    void OnDisable();
    // private System.Void OnHandUpdated()
    // Offset: 0x483B650
    void OnHandUpdated();
    // public Oculus.Interaction.Input.HandFingerFlags HandPinchGrabbingFingers()
    // Offset: 0x482686C
    ::Oculus::Interaction::Input::HandFingerFlags HandPinchGrabbingFingers();
    // public Oculus.Interaction.Input.HandFingerFlags HandPalmGrabbingFingers()
    // Offset: 0x4826874
    ::Oculus::Interaction::Input::HandFingerFlags HandPalmGrabbingFingers();
    // private Oculus.Interaction.Input.HandFingerFlags HandGrabbingFingers(Oculus.Interaction.IFingerAPI fingerAPI)
    // Offset: 0x483B770
    ::Oculus::Interaction::Input::HandFingerFlags HandGrabbingFingers(::Oculus::Interaction::IFingerAPI* fingerAPI);
    // public System.Boolean IsHandPinchGrabbing(in Oculus.Interaction.GrabAPI.GrabbingRule fingers)
    // Offset: 0x483B848
    bool IsHandPinchGrabbing(ByRef<::Oculus::Interaction::GrabAPI::GrabbingRule> fingers);
    // public System.Boolean IsHandPalmGrabbing(in Oculus.Interaction.GrabAPI.GrabbingRule fingers)
    // Offset: 0x483B86C
    bool IsHandPalmGrabbing(ByRef<::Oculus::Interaction::GrabAPI::GrabbingRule> fingers);
    // public System.Boolean IsSustainingGrab(in Oculus.Interaction.GrabAPI.GrabbingRule fingers, Oculus.Interaction.Input.HandFingerFlags grabbingFingers)
    // Offset: 0x482687C
    bool IsSustainingGrab(ByRef<::Oculus::Interaction::GrabAPI::GrabbingRule> fingers, ::Oculus::Interaction::Input::HandFingerFlags grabbingFingers);
    // public System.Boolean IsHandSelectPinchFingersChanged(in Oculus.Interaction.GrabAPI.GrabbingRule fingers)
    // Offset: 0x48262F4
    bool IsHandSelectPinchFingersChanged(ByRef<::Oculus::Interaction::GrabAPI::GrabbingRule> fingers);
    // public System.Boolean IsHandSelectPalmFingersChanged(in Oculus.Interaction.GrabAPI.GrabbingRule fingers)
    // Offset: 0x48262FC
    bool IsHandSelectPalmFingersChanged(ByRef<::Oculus::Interaction::GrabAPI::GrabbingRule> fingers);
    // public System.Boolean IsHandUnselectPinchFingersChanged(in Oculus.Interaction.GrabAPI.GrabbingRule fingers)
    // Offset: 0x4826A3C
    bool IsHandUnselectPinchFingersChanged(ByRef<::Oculus::Interaction::GrabAPI::GrabbingRule> fingers);
    // public System.Boolean IsHandUnselectPalmFingersChanged(in Oculus.Interaction.GrabAPI.GrabbingRule fingers)
    // Offset: 0x4826AF4
    bool IsHandUnselectPalmFingersChanged(ByRef<::Oculus::Interaction::GrabAPI::GrabbingRule> fingers);
    // private System.Boolean IsHandSelectFingersChanged(in Oculus.Interaction.GrabAPI.GrabbingRule fingers, Oculus.Interaction.IFingerAPI fingerAPI)
    // Offset: 0x483B890
    bool IsHandSelectFingersChanged(ByRef<::Oculus::Interaction::GrabAPI::GrabbingRule> fingers, ::Oculus::Interaction::IFingerAPI* fingerAPI);
    // private System.Boolean IsHandUnselectFingersChanged(in Oculus.Interaction.GrabAPI.GrabbingRule fingers, Oculus.Interaction.IFingerAPI fingerAPI)
    // Offset: 0x483BB34
    bool IsHandUnselectFingersChanged(ByRef<::Oculus::Interaction::GrabAPI::GrabbingRule> fingers, ::Oculus::Interaction::IFingerAPI* fingerAPI);
    // public UnityEngine.Vector3 GetPinchCenter()
    // Offset: 0x483BE68
    ::UnityEngine::Vector3 GetPinchCenter();
    // public UnityEngine.Vector3 GetPalmCenter()
    // Offset: 0x483C124
    ::UnityEngine::Vector3 GetPalmCenter();
    // private UnityEngine.Vector3 WristOffsetToWorldPoint(UnityEngine.Vector3 localOffset)
    // Offset: 0x483BF14
    ::UnityEngine::Vector3 WristOffsetToWorldPoint(::UnityEngine::Vector3 localOffset);
    // public System.Single GetHandPinchScore(in Oculus.Interaction.GrabAPI.GrabbingRule fingers, System.Boolean includePinching)
    // Offset: 0x48260A0
    float GetHandPinchScore(ByRef<::Oculus::Interaction::GrabAPI::GrabbingRule> fingers, bool includePinching);
    // public System.Single GetHandPalmScore(in Oculus.Interaction.GrabAPI.GrabbingRule fingers, System.Boolean includeGrabbing)
    // Offset: 0x48260AC
    float GetHandPalmScore(ByRef<::Oculus::Interaction::GrabAPI::GrabbingRule> fingers, bool includeGrabbing);
    // public System.Single GetFingerPinchStrength(Oculus.Interaction.Input.HandFinger finger)
    // Offset: 0x483C4EC
    float GetFingerPinchStrength(::Oculus::Interaction::Input::HandFinger finger);
    // public System.Single GetFingerPinchPercent(Oculus.Interaction.Input.HandFinger finger)
    // Offset: 0x483C598
    float GetFingerPinchPercent(::Oculus::Interaction::Input::HandFinger finger);
    // public System.Single GetFingerPinchDistance(Oculus.Interaction.Input.HandFinger finger)
    // Offset: 0x483C668
    float GetFingerPinchDistance(::Oculus::Interaction::Input::HandFinger finger);
    // public System.Single GetFingerPalmStrength(Oculus.Interaction.Input.HandFinger finger)
    // Offset: 0x483C738
    float GetFingerPalmStrength(::Oculus::Interaction::Input::HandFinger finger);
    // private System.Single GetHandGrabScore(in Oculus.Interaction.GrabAPI.GrabbingRule fingers, System.Boolean includeGrabbing, Oculus.Interaction.IFingerAPI fingerAPI)
    // Offset: 0x483C1D0
    float GetHandGrabScore(ByRef<::Oculus::Interaction::GrabAPI::GrabbingRule> fingers, bool includeGrabbing, ::Oculus::Interaction::IFingerAPI* fingerAPI);
    // public System.Void SetPinchGrabParam(Oculus.Interaction.Input.PinchGrabParam paramId, System.Single paramVal)
    // Offset: 0x483C7E4
    void SetPinchGrabParam(::Oculus::Interaction::Input::PinchGrabParam paramId, float paramVal);
    // public System.Single GetPinchGrabParam(Oculus.Interaction.Input.PinchGrabParam paramId)
    // Offset: 0x483C88C
    float GetPinchGrabParam(::Oculus::Interaction::Input::PinchGrabParam paramId);
    // public System.Boolean GetFingerIsGrabbing(Oculus.Interaction.Input.HandFinger finger)
    // Offset: 0x483C924
    bool GetFingerIsGrabbing(::Oculus::Interaction::Input::HandFinger finger);
    // public System.Boolean GetFingerIsPalmGrabbing(Oculus.Interaction.Input.HandFinger finger)
    // Offset: 0x483C9CC
    bool GetFingerIsPalmGrabbing(::Oculus::Interaction::Input::HandFinger finger);
    // public System.Void InjectAllHandGrabAPI(Oculus.Interaction.Input.IHand hand)
    // Offset: 0x483CA74
    void InjectAllHandGrabAPI(::Oculus::Interaction::Input::IHand* hand);
    // public System.Void InjectHand(Oculus.Interaction.Input.IHand hand)
    // Offset: 0x483CA78
    void InjectHand(::Oculus::Interaction::Input::IHand* hand);
    // public System.Void InjectOptionalHmd(Oculus.Interaction.Input.IHmd hmd)
    // Offset: 0x483CB48
    void InjectOptionalHmd(::Oculus::Interaction::Input::IHmd* hmd);
    // public System.Void InjectOptionalFingerPinchAPI(Oculus.Interaction.IFingerAPI fingerPinchAPI)
    // Offset: 0x483CC14
    void InjectOptionalFingerPinchAPI(::Oculus::Interaction::IFingerAPI* fingerPinchAPI);
    // public System.Void InjectOptionalFingerGrabAPI(Oculus.Interaction.IFingerAPI fingerGrabAPI)
    // Offset: 0x483CC1C
    void InjectOptionalFingerGrabAPI(::Oculus::Interaction::IFingerAPI* fingerGrabAPI);
    // public System.Void .ctor()
    // Offset: 0x483CC24
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static HandGrabAPI* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabAPI::HandGrabAPI::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<HandGrabAPI*, creationType>()));
    }
  }; // Oculus.Interaction.GrabAPI.HandGrabAPI
  #pragma pack(pop)
  static check_size<sizeof(HandGrabAPI), 80 + sizeof(bool)> __Oculus_Interaction_GrabAPI_HandGrabAPISizeCheck;
  static_assert(sizeof(HandGrabAPI) == 0x51);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::HandGrabAPI::get_Hand
// Il2CppName: get_Hand
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::Input::IHand* (Oculus::Interaction::GrabAPI::HandGrabAPI::*)()>(&Oculus::Interaction::GrabAPI::HandGrabAPI::get_Hand)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::HandGrabAPI*), "get_Hand", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::HandGrabAPI::set_Hand
// Il2CppName: set_Hand
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::GrabAPI::HandGrabAPI::*)(::Oculus::Interaction::Input::IHand*)>(&Oculus::Interaction::GrabAPI::HandGrabAPI::set_Hand)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "IHand")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::HandGrabAPI*), "set_Hand", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::HandGrabAPI::get_Hmd
// Il2CppName: get_Hmd
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::Input::IHmd* (Oculus::Interaction::GrabAPI::HandGrabAPI::*)()>(&Oculus::Interaction::GrabAPI::HandGrabAPI::get_Hmd)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::HandGrabAPI*), "get_Hmd", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::HandGrabAPI::set_Hmd
// Il2CppName: set_Hmd
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::GrabAPI::HandGrabAPI::*)(::Oculus::Interaction::Input::IHmd*)>(&Oculus::Interaction::GrabAPI::HandGrabAPI::set_Hmd)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "IHmd")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::HandGrabAPI*), "set_Hmd", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::HandGrabAPI::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::GrabAPI::HandGrabAPI::*)()>(&Oculus::Interaction::GrabAPI::HandGrabAPI::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::HandGrabAPI*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::HandGrabAPI::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::GrabAPI::HandGrabAPI::*)()>(&Oculus::Interaction::GrabAPI::HandGrabAPI::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::HandGrabAPI*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::HandGrabAPI::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::GrabAPI::HandGrabAPI::*)()>(&Oculus::Interaction::GrabAPI::HandGrabAPI::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::HandGrabAPI*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::HandGrabAPI::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::GrabAPI::HandGrabAPI::*)()>(&Oculus::Interaction::GrabAPI::HandGrabAPI::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::HandGrabAPI*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::HandGrabAPI::OnHandUpdated
// Il2CppName: OnHandUpdated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::GrabAPI::HandGrabAPI::*)()>(&Oculus::Interaction::GrabAPI::HandGrabAPI::OnHandUpdated)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::HandGrabAPI*), "OnHandUpdated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::HandGrabAPI::HandPinchGrabbingFingers
// Il2CppName: HandPinchGrabbingFingers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::Input::HandFingerFlags (Oculus::Interaction::GrabAPI::HandGrabAPI::*)()>(&Oculus::Interaction::GrabAPI::HandGrabAPI::HandPinchGrabbingFingers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::HandGrabAPI*), "HandPinchGrabbingFingers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::HandGrabAPI::HandPalmGrabbingFingers
// Il2CppName: HandPalmGrabbingFingers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::Input::HandFingerFlags (Oculus::Interaction::GrabAPI::HandGrabAPI::*)()>(&Oculus::Interaction::GrabAPI::HandGrabAPI::HandPalmGrabbingFingers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::HandGrabAPI*), "HandPalmGrabbingFingers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::HandGrabAPI::HandGrabbingFingers
// Il2CppName: HandGrabbingFingers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::Input::HandFingerFlags (Oculus::Interaction::GrabAPI::HandGrabAPI::*)(::Oculus::Interaction::IFingerAPI*)>(&Oculus::Interaction::GrabAPI::HandGrabAPI::HandGrabbingFingers)> {
  static const MethodInfo* get() {
    static auto* fingerAPI = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "IFingerAPI")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::HandGrabAPI*), "HandGrabbingFingers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fingerAPI});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::HandGrabAPI::IsHandPinchGrabbing
// Il2CppName: IsHandPinchGrabbing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::GrabAPI::HandGrabAPI::*)(ByRef<::Oculus::Interaction::GrabAPI::GrabbingRule>)>(&Oculus::Interaction::GrabAPI::HandGrabAPI::IsHandPinchGrabbing)> {
  static const MethodInfo* get() {
    static auto* fingers = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.GrabAPI", "GrabbingRule")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::HandGrabAPI*), "IsHandPinchGrabbing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fingers});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::HandGrabAPI::IsHandPalmGrabbing
// Il2CppName: IsHandPalmGrabbing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::GrabAPI::HandGrabAPI::*)(ByRef<::Oculus::Interaction::GrabAPI::GrabbingRule>)>(&Oculus::Interaction::GrabAPI::HandGrabAPI::IsHandPalmGrabbing)> {
  static const MethodInfo* get() {
    static auto* fingers = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.GrabAPI", "GrabbingRule")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::HandGrabAPI*), "IsHandPalmGrabbing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fingers});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::HandGrabAPI::IsSustainingGrab
// Il2CppName: IsSustainingGrab
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::GrabAPI::HandGrabAPI::*)(ByRef<::Oculus::Interaction::GrabAPI::GrabbingRule>, ::Oculus::Interaction::Input::HandFingerFlags)>(&Oculus::Interaction::GrabAPI::HandGrabAPI::IsSustainingGrab)> {
  static const MethodInfo* get() {
    static auto* fingers = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.GrabAPI", "GrabbingRule")->this_arg;
    static auto* grabbingFingers = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "HandFingerFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::HandGrabAPI*), "IsSustainingGrab", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fingers, grabbingFingers});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::HandGrabAPI::IsHandSelectPinchFingersChanged
// Il2CppName: IsHandSelectPinchFingersChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::GrabAPI::HandGrabAPI::*)(ByRef<::Oculus::Interaction::GrabAPI::GrabbingRule>)>(&Oculus::Interaction::GrabAPI::HandGrabAPI::IsHandSelectPinchFingersChanged)> {
  static const MethodInfo* get() {
    static auto* fingers = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.GrabAPI", "GrabbingRule")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::HandGrabAPI*), "IsHandSelectPinchFingersChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fingers});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::HandGrabAPI::IsHandSelectPalmFingersChanged
// Il2CppName: IsHandSelectPalmFingersChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::GrabAPI::HandGrabAPI::*)(ByRef<::Oculus::Interaction::GrabAPI::GrabbingRule>)>(&Oculus::Interaction::GrabAPI::HandGrabAPI::IsHandSelectPalmFingersChanged)> {
  static const MethodInfo* get() {
    static auto* fingers = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.GrabAPI", "GrabbingRule")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::HandGrabAPI*), "IsHandSelectPalmFingersChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fingers});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::HandGrabAPI::IsHandUnselectPinchFingersChanged
// Il2CppName: IsHandUnselectPinchFingersChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::GrabAPI::HandGrabAPI::*)(ByRef<::Oculus::Interaction::GrabAPI::GrabbingRule>)>(&Oculus::Interaction::GrabAPI::HandGrabAPI::IsHandUnselectPinchFingersChanged)> {
  static const MethodInfo* get() {
    static auto* fingers = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.GrabAPI", "GrabbingRule")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::HandGrabAPI*), "IsHandUnselectPinchFingersChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fingers});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::HandGrabAPI::IsHandUnselectPalmFingersChanged
// Il2CppName: IsHandUnselectPalmFingersChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::GrabAPI::HandGrabAPI::*)(ByRef<::Oculus::Interaction::GrabAPI::GrabbingRule>)>(&Oculus::Interaction::GrabAPI::HandGrabAPI::IsHandUnselectPalmFingersChanged)> {
  static const MethodInfo* get() {
    static auto* fingers = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.GrabAPI", "GrabbingRule")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::HandGrabAPI*), "IsHandUnselectPalmFingersChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fingers});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::HandGrabAPI::IsHandSelectFingersChanged
// Il2CppName: IsHandSelectFingersChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::GrabAPI::HandGrabAPI::*)(ByRef<::Oculus::Interaction::GrabAPI::GrabbingRule>, ::Oculus::Interaction::IFingerAPI*)>(&Oculus::Interaction::GrabAPI::HandGrabAPI::IsHandSelectFingersChanged)> {
  static const MethodInfo* get() {
    static auto* fingers = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.GrabAPI", "GrabbingRule")->this_arg;
    static auto* fingerAPI = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "IFingerAPI")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::HandGrabAPI*), "IsHandSelectFingersChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fingers, fingerAPI});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::HandGrabAPI::IsHandUnselectFingersChanged
// Il2CppName: IsHandUnselectFingersChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::GrabAPI::HandGrabAPI::*)(ByRef<::Oculus::Interaction::GrabAPI::GrabbingRule>, ::Oculus::Interaction::IFingerAPI*)>(&Oculus::Interaction::GrabAPI::HandGrabAPI::IsHandUnselectFingersChanged)> {
  static const MethodInfo* get() {
    static auto* fingers = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.GrabAPI", "GrabbingRule")->this_arg;
    static auto* fingerAPI = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "IFingerAPI")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::HandGrabAPI*), "IsHandUnselectFingersChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fingers, fingerAPI});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::HandGrabAPI::GetPinchCenter
// Il2CppName: GetPinchCenter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (Oculus::Interaction::GrabAPI::HandGrabAPI::*)()>(&Oculus::Interaction::GrabAPI::HandGrabAPI::GetPinchCenter)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::HandGrabAPI*), "GetPinchCenter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::HandGrabAPI::GetPalmCenter
// Il2CppName: GetPalmCenter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (Oculus::Interaction::GrabAPI::HandGrabAPI::*)()>(&Oculus::Interaction::GrabAPI::HandGrabAPI::GetPalmCenter)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::HandGrabAPI*), "GetPalmCenter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::HandGrabAPI::WristOffsetToWorldPoint
// Il2CppName: WristOffsetToWorldPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (Oculus::Interaction::GrabAPI::HandGrabAPI::*)(::UnityEngine::Vector3)>(&Oculus::Interaction::GrabAPI::HandGrabAPI::WristOffsetToWorldPoint)> {
  static const MethodInfo* get() {
    static auto* localOffset = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::HandGrabAPI*), "WristOffsetToWorldPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{localOffset});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::HandGrabAPI::GetHandPinchScore
// Il2CppName: GetHandPinchScore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Oculus::Interaction::GrabAPI::HandGrabAPI::*)(ByRef<::Oculus::Interaction::GrabAPI::GrabbingRule>, bool)>(&Oculus::Interaction::GrabAPI::HandGrabAPI::GetHandPinchScore)> {
  static const MethodInfo* get() {
    static auto* fingers = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.GrabAPI", "GrabbingRule")->this_arg;
    static auto* includePinching = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::HandGrabAPI*), "GetHandPinchScore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fingers, includePinching});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::HandGrabAPI::GetHandPalmScore
// Il2CppName: GetHandPalmScore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Oculus::Interaction::GrabAPI::HandGrabAPI::*)(ByRef<::Oculus::Interaction::GrabAPI::GrabbingRule>, bool)>(&Oculus::Interaction::GrabAPI::HandGrabAPI::GetHandPalmScore)> {
  static const MethodInfo* get() {
    static auto* fingers = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.GrabAPI", "GrabbingRule")->this_arg;
    static auto* includeGrabbing = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::HandGrabAPI*), "GetHandPalmScore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fingers, includeGrabbing});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::HandGrabAPI::GetFingerPinchStrength
// Il2CppName: GetFingerPinchStrength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Oculus::Interaction::GrabAPI::HandGrabAPI::*)(::Oculus::Interaction::Input::HandFinger)>(&Oculus::Interaction::GrabAPI::HandGrabAPI::GetFingerPinchStrength)> {
  static const MethodInfo* get() {
    static auto* finger = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "HandFinger")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::HandGrabAPI*), "GetFingerPinchStrength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{finger});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::HandGrabAPI::GetFingerPinchPercent
// Il2CppName: GetFingerPinchPercent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Oculus::Interaction::GrabAPI::HandGrabAPI::*)(::Oculus::Interaction::Input::HandFinger)>(&Oculus::Interaction::GrabAPI::HandGrabAPI::GetFingerPinchPercent)> {
  static const MethodInfo* get() {
    static auto* finger = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "HandFinger")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::HandGrabAPI*), "GetFingerPinchPercent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{finger});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::HandGrabAPI::GetFingerPinchDistance
// Il2CppName: GetFingerPinchDistance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Oculus::Interaction::GrabAPI::HandGrabAPI::*)(::Oculus::Interaction::Input::HandFinger)>(&Oculus::Interaction::GrabAPI::HandGrabAPI::GetFingerPinchDistance)> {
  static const MethodInfo* get() {
    static auto* finger = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "HandFinger")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::HandGrabAPI*), "GetFingerPinchDistance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{finger});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::HandGrabAPI::GetFingerPalmStrength
// Il2CppName: GetFingerPalmStrength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Oculus::Interaction::GrabAPI::HandGrabAPI::*)(::Oculus::Interaction::Input::HandFinger)>(&Oculus::Interaction::GrabAPI::HandGrabAPI::GetFingerPalmStrength)> {
  static const MethodInfo* get() {
    static auto* finger = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "HandFinger")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::HandGrabAPI*), "GetFingerPalmStrength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{finger});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::HandGrabAPI::GetHandGrabScore
// Il2CppName: GetHandGrabScore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Oculus::Interaction::GrabAPI::HandGrabAPI::*)(ByRef<::Oculus::Interaction::GrabAPI::GrabbingRule>, bool, ::Oculus::Interaction::IFingerAPI*)>(&Oculus::Interaction::GrabAPI::HandGrabAPI::GetHandGrabScore)> {
  static const MethodInfo* get() {
    static auto* fingers = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.GrabAPI", "GrabbingRule")->this_arg;
    static auto* includeGrabbing = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* fingerAPI = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "IFingerAPI")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::HandGrabAPI*), "GetHandGrabScore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fingers, includeGrabbing, fingerAPI});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::HandGrabAPI::SetPinchGrabParam
// Il2CppName: SetPinchGrabParam
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::GrabAPI::HandGrabAPI::*)(::Oculus::Interaction::Input::PinchGrabParam, float)>(&Oculus::Interaction::GrabAPI::HandGrabAPI::SetPinchGrabParam)> {
  static const MethodInfo* get() {
    static auto* paramId = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "PinchGrabParam")->byval_arg;
    static auto* paramVal = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::HandGrabAPI*), "SetPinchGrabParam", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{paramId, paramVal});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::HandGrabAPI::GetPinchGrabParam
// Il2CppName: GetPinchGrabParam
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Oculus::Interaction::GrabAPI::HandGrabAPI::*)(::Oculus::Interaction::Input::PinchGrabParam)>(&Oculus::Interaction::GrabAPI::HandGrabAPI::GetPinchGrabParam)> {
  static const MethodInfo* get() {
    static auto* paramId = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "PinchGrabParam")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::HandGrabAPI*), "GetPinchGrabParam", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{paramId});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::HandGrabAPI::GetFingerIsGrabbing
// Il2CppName: GetFingerIsGrabbing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::GrabAPI::HandGrabAPI::*)(::Oculus::Interaction::Input::HandFinger)>(&Oculus::Interaction::GrabAPI::HandGrabAPI::GetFingerIsGrabbing)> {
  static const MethodInfo* get() {
    static auto* finger = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "HandFinger")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::HandGrabAPI*), "GetFingerIsGrabbing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{finger});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::HandGrabAPI::GetFingerIsPalmGrabbing
// Il2CppName: GetFingerIsPalmGrabbing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::GrabAPI::HandGrabAPI::*)(::Oculus::Interaction::Input::HandFinger)>(&Oculus::Interaction::GrabAPI::HandGrabAPI::GetFingerIsPalmGrabbing)> {
  static const MethodInfo* get() {
    static auto* finger = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "HandFinger")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::HandGrabAPI*), "GetFingerIsPalmGrabbing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{finger});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::HandGrabAPI::InjectAllHandGrabAPI
// Il2CppName: InjectAllHandGrabAPI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::GrabAPI::HandGrabAPI::*)(::Oculus::Interaction::Input::IHand*)>(&Oculus::Interaction::GrabAPI::HandGrabAPI::InjectAllHandGrabAPI)> {
  static const MethodInfo* get() {
    static auto* hand = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "IHand")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::HandGrabAPI*), "InjectAllHandGrabAPI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{hand});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::HandGrabAPI::InjectHand
// Il2CppName: InjectHand
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::GrabAPI::HandGrabAPI::*)(::Oculus::Interaction::Input::IHand*)>(&Oculus::Interaction::GrabAPI::HandGrabAPI::InjectHand)> {
  static const MethodInfo* get() {
    static auto* hand = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "IHand")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::HandGrabAPI*), "InjectHand", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{hand});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::HandGrabAPI::InjectOptionalHmd
// Il2CppName: InjectOptionalHmd
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::GrabAPI::HandGrabAPI::*)(::Oculus::Interaction::Input::IHmd*)>(&Oculus::Interaction::GrabAPI::HandGrabAPI::InjectOptionalHmd)> {
  static const MethodInfo* get() {
    static auto* hmd = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "IHmd")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::HandGrabAPI*), "InjectOptionalHmd", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{hmd});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::HandGrabAPI::InjectOptionalFingerPinchAPI
// Il2CppName: InjectOptionalFingerPinchAPI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::GrabAPI::HandGrabAPI::*)(::Oculus::Interaction::IFingerAPI*)>(&Oculus::Interaction::GrabAPI::HandGrabAPI::InjectOptionalFingerPinchAPI)> {
  static const MethodInfo* get() {
    static auto* fingerPinchAPI = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "IFingerAPI")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::HandGrabAPI*), "InjectOptionalFingerPinchAPI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fingerPinchAPI});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::HandGrabAPI::InjectOptionalFingerGrabAPI
// Il2CppName: InjectOptionalFingerGrabAPI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::GrabAPI::HandGrabAPI::*)(::Oculus::Interaction::IFingerAPI*)>(&Oculus::Interaction::GrabAPI::HandGrabAPI::InjectOptionalFingerGrabAPI)> {
  static const MethodInfo* get() {
    static auto* fingerGrabAPI = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "IFingerAPI")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::HandGrabAPI*), "InjectOptionalFingerGrabAPI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fingerGrabAPI});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::HandGrabAPI::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
