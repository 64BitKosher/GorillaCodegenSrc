// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.IFingerAPI
#include "Oculus/Interaction/IFingerAPI.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction::GrabAPI
namespace Oculus::Interaction::GrabAPI {
  // Forward declaring type: HandPinchData
  class HandPinchData;
}
// Forward declaring namespace: Oculus::Interaction::Input
namespace Oculus::Interaction::Input {
  // Forward declaring type: IHmd
  class IHmd;
  // Forward declaring type: HandFinger
  struct HandFinger;
  // Forward declaring type: PinchGrabParam
  struct PinchGrabParam;
  // Forward declaring type: IHand
  class IHand;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Vector3
  struct Vector3;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IntPtr
  struct IntPtr;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.GrabAPI
namespace Oculus::Interaction::GrabAPI {
  // Forward declaring type: FingerPinchGrabAPI
  class FingerPinchGrabAPI;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::GrabAPI::FingerPinchGrabAPI);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::GrabAPI::FingerPinchGrabAPI*, "Oculus.Interaction.GrabAPI", "FingerPinchGrabAPI");
// Type namespace: Oculus.Interaction.GrabAPI
namespace Oculus::Interaction::GrabAPI {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.GrabAPI.FingerPinchGrabAPI
  // [TokenAttribute] Offset: FFFFFFFF
  class FingerPinchGrabAPI : public ::Il2CppObject/*, public ::Oculus::Interaction::IFingerAPI*/ {
    public:
    // Nested type: ::Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::ReturnValue
    struct ReturnValue;
    public:
    // private System.Int32 _fingerPinchGrabApiHandle
    // Size: 0x4
    // Offset: 0x10
    int fingerPinchGrabApiHandle;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: fingerPinchGrabApiHandle and: pinchData
    char __padding0[0x4] = {};
    // private Oculus.Interaction.GrabAPI.HandPinchData _pinchData
    // Size: 0x8
    // Offset: 0x18
    ::Oculus::Interaction::GrabAPI::HandPinchData* pinchData;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::GrabAPI::HandPinchData*) == 0x8);
    // private Oculus.Interaction.Input.IHmd _hmd
    // Size: 0x8
    // Offset: 0x20
    ::Oculus::Interaction::Input::IHmd* hmd;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Input::IHmd*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::Oculus::Interaction::IFingerAPI
    operator ::Oculus::Interaction::IFingerAPI() noexcept {
      return *reinterpret_cast<::Oculus::Interaction::IFingerAPI*>(this);
    }
    // Get instance field reference: private System.Int32 _fingerPinchGrabApiHandle
    [[deprecated("Use field access instead!")]] int& dyn__fingerPinchGrabApiHandle();
    // Get instance field reference: private Oculus.Interaction.GrabAPI.HandPinchData _pinchData
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::GrabAPI::HandPinchData*& dyn__pinchData();
    // Get instance field reference: private Oculus.Interaction.Input.IHmd _hmd
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IHmd*& dyn__hmd();
    // static private System.Int32 isdk_FingerPinchGrabAPI_Create()
    // Offset: 0x483999C
    static int isdk_FingerPinchGrabAPI_Create();
    // static private Oculus.Interaction.GrabAPI.FingerPinchGrabAPI/ReturnValue isdk_FingerPinchGrabAPI_UpdateHandData(System.Int32 handle, in Oculus.Interaction.GrabAPI.HandPinchData data)
    // Offset: 0x4839A04
    static ::Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::ReturnValue isdk_FingerPinchGrabAPI_UpdateHandData(int handle, ByRef<::Oculus::Interaction::GrabAPI::HandPinchData*> data);
    // static private Oculus.Interaction.GrabAPI.FingerPinchGrabAPI/ReturnValue isdk_FingerPinchGrabAPI_UpdateHandWristHMDData(System.Int32 handle, in Oculus.Interaction.GrabAPI.HandPinchData data, in UnityEngine.Vector3 wristForward, in UnityEngine.Vector3 hmdForward)
    // Offset: 0x4839AC8
    static ::Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::ReturnValue isdk_FingerPinchGrabAPI_UpdateHandWristHMDData(int handle, ByRef<::Oculus::Interaction::GrabAPI::HandPinchData*> data, ByRef<::UnityEngine::Vector3> wristForward, ByRef<::UnityEngine::Vector3> hmdForward);
    // static private System.Boolean isdk_FingerPinchGrabAPI_GetString(System.Int32 handle, System.String name, out System.IntPtr val)
    // Offset: 0x4839BA4
    static bool isdk_FingerPinchGrabAPI_GetString(int handle, ::StringW name, ByRef<::System::IntPtr> val);
    // static private Oculus.Interaction.GrabAPI.FingerPinchGrabAPI/ReturnValue isdk_FingerPinchGrabAPI_GetFingerIsGrabbing(System.Int32 handle, System.Int32 index, out System.Boolean grabbing)
    // Offset: 0x4839C58
    static ::Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::ReturnValue isdk_FingerPinchGrabAPI_GetFingerIsGrabbing(int handle, int index, ByRef<bool> grabbing);
    // static private Oculus.Interaction.GrabAPI.FingerPinchGrabAPI/ReturnValue isdk_FingerPinchGrabAPI_GetFingerPinchPercent(System.Int32 handle, System.Int32 index, out System.Single pinchPercent)
    // Offset: 0x4839D00
    static ::Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::ReturnValue isdk_FingerPinchGrabAPI_GetFingerPinchPercent(int handle, int index, ByRef<float> pinchPercent);
    // static private Oculus.Interaction.GrabAPI.FingerPinchGrabAPI/ReturnValue isdk_FingerPinchGrabAPI_GetFingerPinchDistance(System.Int32 handle, System.Int32 index, out System.Single pinchDistance)
    // Offset: 0x4839D94
    static ::Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::ReturnValue isdk_FingerPinchGrabAPI_GetFingerPinchDistance(int handle, int index, ByRef<float> pinchDistance);
    // static private Oculus.Interaction.GrabAPI.FingerPinchGrabAPI/ReturnValue isdk_FingerPinchGrabAPI_GetFingerIsGrabbingChanged(System.Int32 handle, System.Int32 index, System.Boolean targetState, out System.Boolean grabbing)
    // Offset: 0x4839E28
    static ::Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::ReturnValue isdk_FingerPinchGrabAPI_GetFingerIsGrabbingChanged(int handle, int index, bool targetState, ByRef<bool> grabbing);
    // static private Oculus.Interaction.GrabAPI.FingerPinchGrabAPI/ReturnValue isdk_FingerPinchGrabAPI_GetFingerGrabScore(System.Int32 handle, Oculus.Interaction.Input.HandFinger finger, out System.Single outScore)
    // Offset: 0x4839ED8
    static ::Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::ReturnValue isdk_FingerPinchGrabAPI_GetFingerGrabScore(int handle, ::Oculus::Interaction::Input::HandFinger finger, ByRef<float> outScore);
    // static private Oculus.Interaction.GrabAPI.FingerPinchGrabAPI/ReturnValue isdk_FingerPinchGrabAPI_GetCenterOffset(System.Int32 handle, out UnityEngine.Vector3 outCenter)
    // Offset: 0x4839F6C
    static ::Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::ReturnValue isdk_FingerPinchGrabAPI_GetCenterOffset(int handle, ByRef<::UnityEngine::Vector3> outCenter);
    // static private System.Int32 isdk_Common_GetVersion(out System.IntPtr versionStringPtr)
    // Offset: 0x4839FF0
    static int isdk_Common_GetVersion(ByRef<::System::IntPtr> versionStringPtr);
    // static private Oculus.Interaction.GrabAPI.FingerPinchGrabAPI/ReturnValue isdk_FingerPinchGrabAPI_GetPinchGrabParam(System.Int32 handle, Oculus.Interaction.Input.PinchGrabParam paramId, out System.Single outParam)
    // Offset: 0x483A06C
    static ::Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::ReturnValue isdk_FingerPinchGrabAPI_GetPinchGrabParam(int handle, ::Oculus::Interaction::Input::PinchGrabParam paramId, ByRef<float> outParam);
    // static private Oculus.Interaction.GrabAPI.FingerPinchGrabAPI/ReturnValue isdk_FingerPinchGrabAPI_SetPinchGrabParam(System.Int32 handle, Oculus.Interaction.Input.PinchGrabParam paramId, System.Single param)
    // Offset: 0x483A100
    static ::Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::ReturnValue isdk_FingerPinchGrabAPI_SetPinchGrabParam(int handle, ::Oculus::Interaction::Input::PinchGrabParam paramId, float param);
    // static private Oculus.Interaction.GrabAPI.FingerPinchGrabAPI/ReturnValue isdk_FingerPinchGrabAPI_IsPinchVisibilityGood(System.Int32 handle, out System.Boolean outVal)
    // Offset: 0x483A194
    static ::Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::ReturnValue isdk_FingerPinchGrabAPI_IsPinchVisibilityGood(int handle, ByRef<bool> outVal);
    // public System.Void .ctor(Oculus.Interaction.Input.IHmd hmd)
    // Offset: 0x483A22C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static FingerPinchGrabAPI* New_ctor(::Oculus::Interaction::Input::IHmd* hmd) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<FingerPinchGrabAPI*, creationType>(hmd)));
    }
    // private System.Int32 GetHandle()
    // Offset: 0x483A2B8
    int GetHandle();
    // public System.Void SetPinchGrabParam(Oculus.Interaction.Input.PinchGrabParam paramId, System.Single paramVal)
    // Offset: 0x483A2DC
    void SetPinchGrabParam(::Oculus::Interaction::Input::PinchGrabParam paramId, float paramVal);
    // public System.Single GetPinchGrabParam(Oculus.Interaction.Input.PinchGrabParam paramId)
    // Offset: 0x483A320
    float GetPinchGrabParam(::Oculus::Interaction::Input::PinchGrabParam paramId);
    // public System.Boolean GetIsPinchVisibilityGood()
    // Offset: 0x483A364
    bool GetIsPinchVisibilityGood();
    // public System.Boolean GetFingerIsGrabbing(Oculus.Interaction.Input.HandFinger finger)
    // Offset: 0x483A3A0
    bool GetFingerIsGrabbing(::Oculus::Interaction::Input::HandFinger finger);
    // public System.Single GetFingerPinchPercent(Oculus.Interaction.Input.HandFinger finger)
    // Offset: 0x483A3E4
    float GetFingerPinchPercent(::Oculus::Interaction::Input::HandFinger finger);
    // public System.Single GetFingerPinchDistance(Oculus.Interaction.Input.HandFinger finger)
    // Offset: 0x483A428
    float GetFingerPinchDistance(::Oculus::Interaction::Input::HandFinger finger);
    // public UnityEngine.Vector3 GetWristOffsetLocal()
    // Offset: 0x483A46C
    ::UnityEngine::Vector3 GetWristOffsetLocal();
    // public System.Boolean GetFingerIsGrabbingChanged(Oculus.Interaction.Input.HandFinger finger, System.Boolean targetPinchState)
    // Offset: 0x483A4B0
    bool GetFingerIsGrabbingChanged(::Oculus::Interaction::Input::HandFinger finger, bool targetPinchState);
    // public System.Single GetFingerGrabScore(Oculus.Interaction.Input.HandFinger finger)
    // Offset: 0x483A504
    float GetFingerGrabScore(::Oculus::Interaction::Input::HandFinger finger);
    // public System.Void Update(Oculus.Interaction.Input.IHand hand)
    // Offset: 0x483A548
    void Update(::Oculus::Interaction::Input::IHand* hand);
  }; // Oculus.Interaction.GrabAPI.FingerPinchGrabAPI
  #pragma pack(pop)
  static check_size<sizeof(FingerPinchGrabAPI), 32 + sizeof(::Oculus::Interaction::Input::IHmd*)> __Oculus_Interaction_GrabAPI_FingerPinchGrabAPISizeCheck;
  static_assert(sizeof(FingerPinchGrabAPI) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::isdk_FingerPinchGrabAPI_Create
// Il2CppName: isdk_FingerPinchGrabAPI_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::isdk_FingerPinchGrabAPI_Create)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::FingerPinchGrabAPI*), "isdk_FingerPinchGrabAPI_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::isdk_FingerPinchGrabAPI_UpdateHandData
// Il2CppName: isdk_FingerPinchGrabAPI_UpdateHandData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::ReturnValue (*)(int, ByRef<::Oculus::Interaction::GrabAPI::HandPinchData*>)>(&Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::isdk_FingerPinchGrabAPI_UpdateHandData)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.GrabAPI", "HandPinchData")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::FingerPinchGrabAPI*), "isdk_FingerPinchGrabAPI_UpdateHandData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, data});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::isdk_FingerPinchGrabAPI_UpdateHandWristHMDData
// Il2CppName: isdk_FingerPinchGrabAPI_UpdateHandWristHMDData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::ReturnValue (*)(int, ByRef<::Oculus::Interaction::GrabAPI::HandPinchData*>, ByRef<::UnityEngine::Vector3>, ByRef<::UnityEngine::Vector3>)>(&Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::isdk_FingerPinchGrabAPI_UpdateHandWristHMDData)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.GrabAPI", "HandPinchData")->this_arg;
    static auto* wristForward = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    static auto* hmdForward = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::FingerPinchGrabAPI*), "isdk_FingerPinchGrabAPI_UpdateHandWristHMDData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, data, wristForward, hmdForward});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::isdk_FingerPinchGrabAPI_GetString
// Il2CppName: isdk_FingerPinchGrabAPI_GetString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int, ::StringW, ByRef<::System::IntPtr>)>(&Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::isdk_FingerPinchGrabAPI_GetString)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* val = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::FingerPinchGrabAPI*), "isdk_FingerPinchGrabAPI_GetString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, name, val});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::isdk_FingerPinchGrabAPI_GetFingerIsGrabbing
// Il2CppName: isdk_FingerPinchGrabAPI_GetFingerIsGrabbing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::ReturnValue (*)(int, int, ByRef<bool>)>(&Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::isdk_FingerPinchGrabAPI_GetFingerIsGrabbing)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* grabbing = &::il2cpp_utils::GetClassFromName("System", "Boolean")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::FingerPinchGrabAPI*), "isdk_FingerPinchGrabAPI_GetFingerIsGrabbing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, index, grabbing});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::isdk_FingerPinchGrabAPI_GetFingerPinchPercent
// Il2CppName: isdk_FingerPinchGrabAPI_GetFingerPinchPercent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::ReturnValue (*)(int, int, ByRef<float>)>(&Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::isdk_FingerPinchGrabAPI_GetFingerPinchPercent)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* pinchPercent = &::il2cpp_utils::GetClassFromName("System", "Single")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::FingerPinchGrabAPI*), "isdk_FingerPinchGrabAPI_GetFingerPinchPercent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, index, pinchPercent});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::isdk_FingerPinchGrabAPI_GetFingerPinchDistance
// Il2CppName: isdk_FingerPinchGrabAPI_GetFingerPinchDistance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::ReturnValue (*)(int, int, ByRef<float>)>(&Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::isdk_FingerPinchGrabAPI_GetFingerPinchDistance)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* pinchDistance = &::il2cpp_utils::GetClassFromName("System", "Single")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::FingerPinchGrabAPI*), "isdk_FingerPinchGrabAPI_GetFingerPinchDistance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, index, pinchDistance});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::isdk_FingerPinchGrabAPI_GetFingerIsGrabbingChanged
// Il2CppName: isdk_FingerPinchGrabAPI_GetFingerIsGrabbingChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::ReturnValue (*)(int, int, bool, ByRef<bool>)>(&Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::isdk_FingerPinchGrabAPI_GetFingerIsGrabbingChanged)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* targetState = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* grabbing = &::il2cpp_utils::GetClassFromName("System", "Boolean")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::FingerPinchGrabAPI*), "isdk_FingerPinchGrabAPI_GetFingerIsGrabbingChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, index, targetState, grabbing});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::isdk_FingerPinchGrabAPI_GetFingerGrabScore
// Il2CppName: isdk_FingerPinchGrabAPI_GetFingerGrabScore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::ReturnValue (*)(int, ::Oculus::Interaction::Input::HandFinger, ByRef<float>)>(&Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::isdk_FingerPinchGrabAPI_GetFingerGrabScore)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* finger = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "HandFinger")->byval_arg;
    static auto* outScore = &::il2cpp_utils::GetClassFromName("System", "Single")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::FingerPinchGrabAPI*), "isdk_FingerPinchGrabAPI_GetFingerGrabScore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, finger, outScore});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::isdk_FingerPinchGrabAPI_GetCenterOffset
// Il2CppName: isdk_FingerPinchGrabAPI_GetCenterOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::ReturnValue (*)(int, ByRef<::UnityEngine::Vector3>)>(&Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::isdk_FingerPinchGrabAPI_GetCenterOffset)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* outCenter = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::FingerPinchGrabAPI*), "isdk_FingerPinchGrabAPI_GetCenterOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, outCenter});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::isdk_Common_GetVersion
// Il2CppName: isdk_Common_GetVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(ByRef<::System::IntPtr>)>(&Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::isdk_Common_GetVersion)> {
  static const MethodInfo* get() {
    static auto* versionStringPtr = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::FingerPinchGrabAPI*), "isdk_Common_GetVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{versionStringPtr});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::isdk_FingerPinchGrabAPI_GetPinchGrabParam
// Il2CppName: isdk_FingerPinchGrabAPI_GetPinchGrabParam
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::ReturnValue (*)(int, ::Oculus::Interaction::Input::PinchGrabParam, ByRef<float>)>(&Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::isdk_FingerPinchGrabAPI_GetPinchGrabParam)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* paramId = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "PinchGrabParam")->byval_arg;
    static auto* outParam = &::il2cpp_utils::GetClassFromName("System", "Single")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::FingerPinchGrabAPI*), "isdk_FingerPinchGrabAPI_GetPinchGrabParam", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, paramId, outParam});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::isdk_FingerPinchGrabAPI_SetPinchGrabParam
// Il2CppName: isdk_FingerPinchGrabAPI_SetPinchGrabParam
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::ReturnValue (*)(int, ::Oculus::Interaction::Input::PinchGrabParam, float)>(&Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::isdk_FingerPinchGrabAPI_SetPinchGrabParam)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* paramId = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "PinchGrabParam")->byval_arg;
    static auto* param = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::FingerPinchGrabAPI*), "isdk_FingerPinchGrabAPI_SetPinchGrabParam", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, paramId, param});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::isdk_FingerPinchGrabAPI_IsPinchVisibilityGood
// Il2CppName: isdk_FingerPinchGrabAPI_IsPinchVisibilityGood
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::ReturnValue (*)(int, ByRef<bool>)>(&Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::isdk_FingerPinchGrabAPI_IsPinchVisibilityGood)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* outVal = &::il2cpp_utils::GetClassFromName("System", "Boolean")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::FingerPinchGrabAPI*), "isdk_FingerPinchGrabAPI_IsPinchVisibilityGood", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, outVal});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::GetHandle
// Il2CppName: GetHandle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::*)()>(&Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::GetHandle)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::FingerPinchGrabAPI*), "GetHandle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::SetPinchGrabParam
// Il2CppName: SetPinchGrabParam
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::*)(::Oculus::Interaction::Input::PinchGrabParam, float)>(&Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::SetPinchGrabParam)> {
  static const MethodInfo* get() {
    static auto* paramId = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "PinchGrabParam")->byval_arg;
    static auto* paramVal = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::FingerPinchGrabAPI*), "SetPinchGrabParam", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{paramId, paramVal});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::GetPinchGrabParam
// Il2CppName: GetPinchGrabParam
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::*)(::Oculus::Interaction::Input::PinchGrabParam)>(&Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::GetPinchGrabParam)> {
  static const MethodInfo* get() {
    static auto* paramId = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "PinchGrabParam")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::FingerPinchGrabAPI*), "GetPinchGrabParam", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{paramId});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::GetIsPinchVisibilityGood
// Il2CppName: GetIsPinchVisibilityGood
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::*)()>(&Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::GetIsPinchVisibilityGood)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::FingerPinchGrabAPI*), "GetIsPinchVisibilityGood", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::GetFingerIsGrabbing
// Il2CppName: GetFingerIsGrabbing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::*)(::Oculus::Interaction::Input::HandFinger)>(&Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::GetFingerIsGrabbing)> {
  static const MethodInfo* get() {
    static auto* finger = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "HandFinger")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::FingerPinchGrabAPI*), "GetFingerIsGrabbing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{finger});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::GetFingerPinchPercent
// Il2CppName: GetFingerPinchPercent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::*)(::Oculus::Interaction::Input::HandFinger)>(&Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::GetFingerPinchPercent)> {
  static const MethodInfo* get() {
    static auto* finger = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "HandFinger")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::FingerPinchGrabAPI*), "GetFingerPinchPercent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{finger});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::GetFingerPinchDistance
// Il2CppName: GetFingerPinchDistance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::*)(::Oculus::Interaction::Input::HandFinger)>(&Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::GetFingerPinchDistance)> {
  static const MethodInfo* get() {
    static auto* finger = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "HandFinger")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::FingerPinchGrabAPI*), "GetFingerPinchDistance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{finger});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::GetWristOffsetLocal
// Il2CppName: GetWristOffsetLocal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::*)()>(&Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::GetWristOffsetLocal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::FingerPinchGrabAPI*), "GetWristOffsetLocal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::GetFingerIsGrabbingChanged
// Il2CppName: GetFingerIsGrabbingChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::*)(::Oculus::Interaction::Input::HandFinger, bool)>(&Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::GetFingerIsGrabbingChanged)> {
  static const MethodInfo* get() {
    static auto* finger = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "HandFinger")->byval_arg;
    static auto* targetPinchState = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::FingerPinchGrabAPI*), "GetFingerIsGrabbingChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{finger, targetPinchState});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::GetFingerGrabScore
// Il2CppName: GetFingerGrabScore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::*)(::Oculus::Interaction::Input::HandFinger)>(&Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::GetFingerGrabScore)> {
  static const MethodInfo* get() {
    static auto* finger = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "HandFinger")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::FingerPinchGrabAPI*), "GetFingerGrabScore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{finger});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::*)(::Oculus::Interaction::Input::IHand*)>(&Oculus::Interaction::GrabAPI::FingerPinchGrabAPI::Update)> {
  static const MethodInfo* get() {
    static auto* hand = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "IHand")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::GrabAPI::FingerPinchGrabAPI*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{hand});
  }
};
