// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Light
  class Light;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.Demo
namespace Oculus::Interaction::Demo {
  // Forward declaring type: BasicPBRGlobals
  class BasicPBRGlobals;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::Demo::BasicPBRGlobals);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::Demo::BasicPBRGlobals*, "Oculus.Interaction.Demo", "BasicPBRGlobals");
// Type namespace: Oculus.Interaction.Demo
namespace Oculus::Interaction::Demo {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.Demo.BasicPBRGlobals
  // [TokenAttribute] Offset: FFFFFFFF
  class BasicPBRGlobals : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private UnityEngine.Light _mainlight
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::Light* mainlight;
    // Field size check
    static_assert(sizeof(::UnityEngine::Light*) == 0x8);
    public:
    // Get instance field reference: private UnityEngine.Light _mainlight
    [[deprecated("Use field access instead!")]] ::UnityEngine::Light*& dyn__mainlight();
    // private System.Void Update()
    // Offset: 0x479C004
    void Update();
    // private System.Void UpateShaderGlobals()
    // Offset: 0x479C008
    void UpateShaderGlobals();
    // public System.Void .ctor()
    // Offset: 0x479C16C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BasicPBRGlobals* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::BasicPBRGlobals::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BasicPBRGlobals*, creationType>()));
    }
  }; // Oculus.Interaction.Demo.BasicPBRGlobals
  #pragma pack(pop)
  static check_size<sizeof(BasicPBRGlobals), 32 + sizeof(::UnityEngine::Light*)> __Oculus_Interaction_Demo_BasicPBRGlobalsSizeCheck;
  static_assert(sizeof(BasicPBRGlobals) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::Demo::BasicPBRGlobals::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Demo::BasicPBRGlobals::*)()>(&Oculus::Interaction::Demo::BasicPBRGlobals::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Demo::BasicPBRGlobals*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Demo::BasicPBRGlobals::UpateShaderGlobals
// Il2CppName: UpateShaderGlobals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Demo::BasicPBRGlobals::*)()>(&Oculus::Interaction::Demo::BasicPBRGlobals::UpateShaderGlobals)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Demo::BasicPBRGlobals*), "UpateShaderGlobals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Demo::BasicPBRGlobals::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
