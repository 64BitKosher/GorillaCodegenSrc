// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.Interactor`2
#include "Oculus/Interaction/Interactor_2.hpp"
// Including type: Oculus.Interaction.PointerEventType
#include "Oculus/Interaction/PointerEventType.hpp"
// Including type: Oculus.Interaction.PointerEvent
#include "Oculus/Interaction/PointerEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction
namespace Oculus::Interaction {
  // Forward declaring type: PointerInteractable`2<TInteractor, TInteractable>
  template<typename TInteractor, typename TInteractable>
  class PointerInteractable_2;
}
// Completed forward declares
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Forward declaring type: PointerInteractor`2<TInteractor, TInteractable>
  template<typename TInteractor, typename TInteractable>
  class PointerInteractor_2;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::Oculus::Interaction::PointerInteractor_2, "Oculus.Interaction", "PointerInteractor`2");
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // WARNING Size may be invalid!
  // Autogenerated type: Oculus.Interaction.PointerInteractor`2
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename TInteractor, typename TInteractable>
  class PointerInteractor_2 : public ::Oculus::Interaction::Interactor_2<TInteractor, TInteractable> {
    public:
    // protected System.Void GeneratePointerEvent(Oculus.Interaction.PointerEventType pointerEventType, TInteractable interactable)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void GeneratePointerEvent(::Oculus::Interaction::PointerEventType pointerEventType, TInteractable interactable) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointerInteractor_2::GeneratePointerEvent");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GeneratePointerEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerEventType), ::il2cpp_utils::ExtractType(interactable)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pointerEventType, interactable);
    }
    // protected System.Void HandlePointerEventRaised(Oculus.Interaction.PointerEvent evt)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void HandlePointerEventRaised(::Oculus::Interaction::PointerEvent evt) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointerInteractor_2::HandlePointerEventRaised");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointerInteractor_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, evt);
    }
    // protected UnityEngine.Pose ComputePointerPose()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::Pose ComputePointerPose() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointerInteractor_2::ComputePointerPose");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointerInteractor_2<TInteractor, TInteractable>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method);
    }
    // protected override System.Void InteractableSet(TInteractable interactable)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: Oculus.Interaction.Interactor`2
    // Base method: System.Void Interactor_2::InteractableSet(TInteractable interactable)
    void InteractableSet(TInteractable interactable) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointerInteractor_2::InteractableSet");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
    }
    // protected override System.Void InteractableUnset(TInteractable interactable)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: Oculus.Interaction.Interactor`2
    // Base method: System.Void Interactor_2::InteractableUnset(TInteractable interactable)
    void InteractableUnset(TInteractable interactable) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointerInteractor_2::InteractableUnset");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
    }
    // protected override System.Void InteractableSelected(TInteractable interactable)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: Oculus.Interaction.Interactor`2
    // Base method: System.Void Interactor_2::InteractableSelected(TInteractable interactable)
    void InteractableSelected(TInteractable interactable) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointerInteractor_2::InteractableSelected");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
    }
    // protected override System.Void InteractableUnselected(TInteractable interactable)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: Oculus.Interaction.Interactor`2
    // Base method: System.Void Interactor_2::InteractableUnselected(TInteractable interactable)
    void InteractableUnselected(TInteractable interactable) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointerInteractor_2::InteractableUnselected");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
    }
    // protected override System.Void DoPostprocess()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: Oculus.Interaction.Interactor`2
    // Base method: System.Void Interactor_2::DoPostprocess()
    void DoPostprocess() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointerInteractor_2::DoPostprocess");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // protected System.Void .ctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: Oculus.Interaction.Interactor`2
    // Base method: System.Void Interactor_2::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PointerInteractor_2<TInteractor, TInteractable>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointerInteractor_2::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PointerInteractor_2<TInteractor, TInteractable>*, creationType>()));
    }
  }; // Oculus.Interaction.PointerInteractor`2
  // Could not write size check! Type: Oculus.Interaction.PointerInteractor`2 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
