// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.OVR.Input.OVRAxis1D
#include "Oculus/Interaction/OVR/Input/OVRAxis1D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: AnimationCurve
  class AnimationCurve;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::OVR::Input::OVRAxis1D::RemapConfig);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::OVR::Input::OVRAxis1D::RemapConfig*, "Oculus.Interaction.OVR.Input", "OVRAxis1D/RemapConfig");
// Type namespace: Oculus.Interaction.OVR.Input
namespace Oculus::Interaction::OVR::Input {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.OVR.Input.OVRAxis1D/RemapConfig
  // [TokenAttribute] Offset: FFFFFFFF
  class OVRAxis1D::RemapConfig : public ::Il2CppObject {
    public:
    public:
    // public System.Boolean Enabled
    // Size: 0x1
    // Offset: 0x10
    bool Enabled;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: Enabled and: Curve
    char __padding0[0x7] = {};
    // public UnityEngine.AnimationCurve Curve
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::AnimationCurve* Curve;
    // Field size check
    static_assert(sizeof(::UnityEngine::AnimationCurve*) == 0x8);
    public:
    // Get instance field reference: public System.Boolean Enabled
    [[deprecated("Use field access instead!")]] bool& dyn_Enabled();
    // Get instance field reference: public UnityEngine.AnimationCurve Curve
    [[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& dyn_Curve();
    // public System.Void .ctor()
    // Offset: 0x478E8EC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static OVRAxis1D::RemapConfig* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OVR::Input::OVRAxis1D::RemapConfig::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<OVRAxis1D::RemapConfig*, creationType>()));
    }
  }; // Oculus.Interaction.OVR.Input.OVRAxis1D/RemapConfig
  #pragma pack(pop)
  static check_size<sizeof(OVRAxis1D::RemapConfig), 24 + sizeof(::UnityEngine::AnimationCurve*)> __Oculus_Interaction_OVR_Input_OVRAxis1D_RemapConfigSizeCheck;
  static_assert(sizeof(OVRAxis1D::RemapConfig) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::OVR::Input::OVRAxis1D::RemapConfig::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
