// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.InteractorGroup
#include "Oculus/Interaction/InteractorGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction
namespace Oculus::Interaction {
  // Skipping declaration: IInteractor because it is already included!
  // Skipping declaration: InteractorStateChangeArgs because it is already included!
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Forward declaring type: BestSelectInteractorGroup
  class BestSelectInteractorGroup;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::BestSelectInteractorGroup);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::BestSelectInteractorGroup*, "Oculus.Interaction", "BestSelectInteractorGroup");
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Size: 0x98
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.BestSelectInteractorGroup
  // [TokenAttribute] Offset: FFFFFFFF
  class BestSelectInteractorGroup : public ::Oculus::Interaction::InteractorGroup {
    public:
    // Writing base type padding for base size: 0x89 to desired offset: 0x90
    char ___base_padding[0x7] = {};
    // Nested type: ::Oculus::Interaction::BestSelectInteractorGroup::$$c
    class $$c;
    public:
    // private Oculus.Interaction.IInteractor _bestInteractor
    // Size: 0x8
    // Offset: 0x90
    ::Oculus::Interaction::IInteractor* bestInteractor;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::IInteractor*) == 0x8);
    public:
    // Get static field: static private readonly Oculus.Interaction.InteractorGroup/InteractorPredicate IsNormalAndShouldHoverPredicate
    static ::Oculus::Interaction::InteractorGroup::InteractorPredicate* _get_IsNormalAndShouldHoverPredicate();
    // Set static field: static private readonly Oculus.Interaction.InteractorGroup/InteractorPredicate IsNormalAndShouldHoverPredicate
    static void _set_IsNormalAndShouldHoverPredicate(::Oculus::Interaction::InteractorGroup::InteractorPredicate* value);
    // Get static field: static private readonly Oculus.Interaction.InteractorGroup/InteractorPredicate IsHoverAndShouldUnhoverPredicate
    static ::Oculus::Interaction::InteractorGroup::InteractorPredicate* _get_IsHoverAndShouldUnhoverPredicate();
    // Set static field: static private readonly Oculus.Interaction.InteractorGroup/InteractorPredicate IsHoverAndShouldUnhoverPredicate
    static void _set_IsHoverAndShouldUnhoverPredicate(::Oculus::Interaction::InteractorGroup::InteractorPredicate* value);
    // Get static field: static private readonly Oculus.Interaction.InteractorGroup/InteractorPredicate IsHoverAndShoulSelectPredicate
    static ::Oculus::Interaction::InteractorGroup::InteractorPredicate* _get_IsHoverAndShoulSelectPredicate();
    // Set static field: static private readonly Oculus.Interaction.InteractorGroup/InteractorPredicate IsHoverAndShoulSelectPredicate
    static void _set_IsHoverAndShoulSelectPredicate(::Oculus::Interaction::InteractorGroup::InteractorPredicate* value);
    // Get static field: static private readonly Oculus.Interaction.InteractorGroup/InteractorPredicate IsHover
    static ::Oculus::Interaction::InteractorGroup::InteractorPredicate* _get_IsHover();
    // Set static field: static private readonly Oculus.Interaction.InteractorGroup/InteractorPredicate IsHover
    static void _set_IsHover(::Oculus::Interaction::InteractorGroup::InteractorPredicate* value);
    // Get instance field reference: private Oculus.Interaction.IInteractor _bestInteractor
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::IInteractor*& dyn__bestInteractor();
    // private System.Boolean TryHover(System.Action`1<Oculus.Interaction.IInteractor> whenHover)
    // Offset: 0x477F914
    bool TryHover(::System::Action_1<::Oculus::Interaction::IInteractor*>* whenHover);
    // private System.Void UnsuscribeBestInteractor()
    // Offset: 0x478070C
    void UnsuscribeBestInteractor();
    // private System.Void HandleBestInteractorStateChanged(Oculus.Interaction.InteractorStateChangeArgs stateChange)
    // Offset: 0x4780820
    void HandleBestInteractorStateChanged(::Oculus::Interaction::InteractorStateChangeArgs stateChange);
    // public System.Void InjectAllInteractorGroupBestSelect(System.Collections.Generic.List`1<Oculus.Interaction.IInteractor> interactors)
    // Offset: 0x4780CFC
    void InjectAllInteractorGroupBestSelect(::System::Collections::Generic::List_1<::Oculus::Interaction::IInteractor*>* interactors);
    // public override System.Boolean get_ShouldHover()
    // Offset: 0x477F688
    // Implemented from: Oculus.Interaction.InteractorGroup
    // Base method: System.Boolean InteractorGroup::get_ShouldHover()
    bool get_ShouldHover();
    // public override System.Boolean get_ShouldUnhover()
    // Offset: 0x477F700
    // Implemented from: Oculus.Interaction.InteractorGroup
    // Base method: System.Boolean InteractorGroup::get_ShouldUnhover()
    bool get_ShouldUnhover();
    // public override System.Boolean get_ShouldSelect()
    // Offset: 0x477F7B0
    // Implemented from: Oculus.Interaction.InteractorGroup
    // Base method: System.Boolean InteractorGroup::get_ShouldSelect()
    bool get_ShouldSelect();
    // public override System.Boolean get_ShouldUnselect()
    // Offset: 0x477F82C
    // Implemented from: Oculus.Interaction.InteractorGroup
    // Base method: System.Boolean InteractorGroup::get_ShouldUnselect()
    bool get_ShouldUnselect();
    // public override System.Void Hover()
    // Offset: 0x477F8E8
    // Implemented from: Oculus.Interaction.InteractorGroup
    // Base method: System.Void InteractorGroup::Hover()
    void Hover();
    // public override System.Void Unhover()
    // Offset: 0x477FB34
    // Implemented from: Oculus.Interaction.InteractorGroup
    // Base method: System.Void InteractorGroup::Unhover()
    void Unhover();
    // public override System.Void Select()
    // Offset: 0x477FCF8
    // Implemented from: Oculus.Interaction.InteractorGroup
    // Base method: System.Void InteractorGroup::Select()
    void Select();
    // public override System.Void Unselect()
    // Offset: 0x477FF58
    // Implemented from: Oculus.Interaction.InteractorGroup
    // Base method: System.Void InteractorGroup::Unselect()
    void Unselect();
    // public override System.Void Preprocess()
    // Offset: 0x478009C
    // Implemented from: Oculus.Interaction.InteractorGroup
    // Base method: System.Void InteractorGroup::Preprocess()
    void Preprocess();
    // public override System.Void Process()
    // Offset: 0x47802B4
    // Implemented from: Oculus.Interaction.InteractorGroup
    // Base method: System.Void InteractorGroup::Process()
    void Process();
    // public override System.Void Enable()
    // Offset: 0x4780644
    // Implemented from: Oculus.Interaction.InteractorGroup
    // Base method: System.Void InteractorGroup::Enable()
    void Enable();
    // public override System.Void Disable()
    // Offset: 0x47806F4
    // Implemented from: Oculus.Interaction.InteractorGroup
    // Base method: System.Void InteractorGroup::Disable()
    void Disable();
    // public override System.Boolean get_HasCandidate()
    // Offset: 0x478085C
    // Implemented from: Oculus.Interaction.InteractorGroup
    // Base method: System.Boolean InteractorGroup::get_HasCandidate()
    bool get_HasCandidate();
    // public override System.Boolean get_HasInteractable()
    // Offset: 0x4780948
    // Implemented from: Oculus.Interaction.InteractorGroup
    // Base method: System.Boolean InteractorGroup::get_HasInteractable()
    bool get_HasInteractable();
    // public override System.Boolean get_HasSelectedInteractable()
    // Offset: 0x4780A28
    // Implemented from: Oculus.Interaction.InteractorGroup
    // Base method: System.Boolean InteractorGroup::get_HasSelectedInteractable()
    bool get_HasSelectedInteractable();
    // public override System.Object get_CandidateProperties()
    // Offset: 0x4780AD8
    // Implemented from: Oculus.Interaction.InteractorGroup
    // Base method: System.Object InteractorGroup::get_CandidateProperties()
    ::Il2CppObject* get_CandidateProperties();
    // public System.Void .ctor()
    // Offset: 0x4780D04
    // Implemented from: Oculus.Interaction.InteractorGroup
    // Base method: System.Void InteractorGroup::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BestSelectInteractorGroup* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestSelectInteractorGroup::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BestSelectInteractorGroup*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x4780D58
    // Implemented from: Oculus.Interaction.InteractorGroup
    // Base method: System.Void InteractorGroup::.cctor()
    static void _cctor();
  }; // Oculus.Interaction.BestSelectInteractorGroup
  #pragma pack(pop)
  static check_size<sizeof(BestSelectInteractorGroup), 144 + sizeof(::Oculus::Interaction::IInteractor*)> __Oculus_Interaction_BestSelectInteractorGroupSizeCheck;
  static_assert(sizeof(BestSelectInteractorGroup) == 0x98);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::BestSelectInteractorGroup::TryHover
// Il2CppName: TryHover
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::BestSelectInteractorGroup::*)(::System::Action_1<::Oculus::Interaction::IInteractor*>*)>(&Oculus::Interaction::BestSelectInteractorGroup::TryHover)> {
  static const MethodInfo* get() {
    static auto* whenHover = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Oculus.Interaction", "IInteractor")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::BestSelectInteractorGroup*), "TryHover", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{whenHover});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::BestSelectInteractorGroup::UnsuscribeBestInteractor
// Il2CppName: UnsuscribeBestInteractor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::BestSelectInteractorGroup::*)()>(&Oculus::Interaction::BestSelectInteractorGroup::UnsuscribeBestInteractor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::BestSelectInteractorGroup*), "UnsuscribeBestInteractor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::BestSelectInteractorGroup::HandleBestInteractorStateChanged
// Il2CppName: HandleBestInteractorStateChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::BestSelectInteractorGroup::*)(::Oculus::Interaction::InteractorStateChangeArgs)>(&Oculus::Interaction::BestSelectInteractorGroup::HandleBestInteractorStateChanged)> {
  static const MethodInfo* get() {
    static auto* stateChange = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "InteractorStateChangeArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::BestSelectInteractorGroup*), "HandleBestInteractorStateChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stateChange});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::BestSelectInteractorGroup::InjectAllInteractorGroupBestSelect
// Il2CppName: InjectAllInteractorGroupBestSelect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::BestSelectInteractorGroup::*)(::System::Collections::Generic::List_1<::Oculus::Interaction::IInteractor*>*)>(&Oculus::Interaction::BestSelectInteractorGroup::InjectAllInteractorGroupBestSelect)> {
  static const MethodInfo* get() {
    static auto* interactors = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Oculus.Interaction", "IInteractor")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::BestSelectInteractorGroup*), "InjectAllInteractorGroupBestSelect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactors});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::BestSelectInteractorGroup::get_ShouldHover
// Il2CppName: get_ShouldHover
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::BestSelectInteractorGroup::*)()>(&Oculus::Interaction::BestSelectInteractorGroup::get_ShouldHover)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::BestSelectInteractorGroup*), "get_ShouldHover", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::BestSelectInteractorGroup::get_ShouldUnhover
// Il2CppName: get_ShouldUnhover
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::BestSelectInteractorGroup::*)()>(&Oculus::Interaction::BestSelectInteractorGroup::get_ShouldUnhover)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::BestSelectInteractorGroup*), "get_ShouldUnhover", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::BestSelectInteractorGroup::get_ShouldSelect
// Il2CppName: get_ShouldSelect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::BestSelectInteractorGroup::*)()>(&Oculus::Interaction::BestSelectInteractorGroup::get_ShouldSelect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::BestSelectInteractorGroup*), "get_ShouldSelect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::BestSelectInteractorGroup::get_ShouldUnselect
// Il2CppName: get_ShouldUnselect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::BestSelectInteractorGroup::*)()>(&Oculus::Interaction::BestSelectInteractorGroup::get_ShouldUnselect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::BestSelectInteractorGroup*), "get_ShouldUnselect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::BestSelectInteractorGroup::Hover
// Il2CppName: Hover
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::BestSelectInteractorGroup::*)()>(&Oculus::Interaction::BestSelectInteractorGroup::Hover)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::BestSelectInteractorGroup*), "Hover", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::BestSelectInteractorGroup::Unhover
// Il2CppName: Unhover
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::BestSelectInteractorGroup::*)()>(&Oculus::Interaction::BestSelectInteractorGroup::Unhover)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::BestSelectInteractorGroup*), "Unhover", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::BestSelectInteractorGroup::Select
// Il2CppName: Select
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::BestSelectInteractorGroup::*)()>(&Oculus::Interaction::BestSelectInteractorGroup::Select)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::BestSelectInteractorGroup*), "Select", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::BestSelectInteractorGroup::Unselect
// Il2CppName: Unselect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::BestSelectInteractorGroup::*)()>(&Oculus::Interaction::BestSelectInteractorGroup::Unselect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::BestSelectInteractorGroup*), "Unselect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::BestSelectInteractorGroup::Preprocess
// Il2CppName: Preprocess
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::BestSelectInteractorGroup::*)()>(&Oculus::Interaction::BestSelectInteractorGroup::Preprocess)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::BestSelectInteractorGroup*), "Preprocess", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::BestSelectInteractorGroup::Process
// Il2CppName: Process
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::BestSelectInteractorGroup::*)()>(&Oculus::Interaction::BestSelectInteractorGroup::Process)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::BestSelectInteractorGroup*), "Process", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::BestSelectInteractorGroup::Enable
// Il2CppName: Enable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::BestSelectInteractorGroup::*)()>(&Oculus::Interaction::BestSelectInteractorGroup::Enable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::BestSelectInteractorGroup*), "Enable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::BestSelectInteractorGroup::Disable
// Il2CppName: Disable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::BestSelectInteractorGroup::*)()>(&Oculus::Interaction::BestSelectInteractorGroup::Disable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::BestSelectInteractorGroup*), "Disable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::BestSelectInteractorGroup::get_HasCandidate
// Il2CppName: get_HasCandidate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::BestSelectInteractorGroup::*)()>(&Oculus::Interaction::BestSelectInteractorGroup::get_HasCandidate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::BestSelectInteractorGroup*), "get_HasCandidate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::BestSelectInteractorGroup::get_HasInteractable
// Il2CppName: get_HasInteractable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::BestSelectInteractorGroup::*)()>(&Oculus::Interaction::BestSelectInteractorGroup::get_HasInteractable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::BestSelectInteractorGroup*), "get_HasInteractable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::BestSelectInteractorGroup::get_HasSelectedInteractable
// Il2CppName: get_HasSelectedInteractable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::BestSelectInteractorGroup::*)()>(&Oculus::Interaction::BestSelectInteractorGroup::get_HasSelectedInteractable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::BestSelectInteractorGroup*), "get_HasSelectedInteractable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::BestSelectInteractorGroup::get_CandidateProperties
// Il2CppName: get_CandidateProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (Oculus::Interaction::BestSelectInteractorGroup::*)()>(&Oculus::Interaction::BestSelectInteractorGroup::get_CandidateProperties)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::BestSelectInteractorGroup*), "get_CandidateProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::BestSelectInteractorGroup::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Oculus::Interaction::BestSelectInteractorGroup::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Oculus::Interaction::BestSelectInteractorGroup::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::BestSelectInteractorGroup*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
