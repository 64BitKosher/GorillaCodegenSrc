// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IEnumerable`1<T>
  template<typename T>
  class IEnumerable_1;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.DebugTree
namespace Oculus::Interaction::DebugTree {
  // Forward declaring type: ITreeNode`1<TLeaf>
  template<typename TLeaf>
  class ITreeNode_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::Oculus::Interaction::DebugTree::ITreeNode_1, "Oculus.Interaction.DebugTree", "ITreeNode`1");
// Type namespace: Oculus.Interaction.DebugTree
namespace Oculus::Interaction::DebugTree {
  // WARNING Size may be invalid!
  // Autogenerated type: Oculus.Interaction.DebugTree.ITreeNode`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename TLeaf>
  class ITreeNode_1 {
    public:
    // public TLeaf get_Value()
    // Offset: 0xFFFFFFFFFFFFFFFF
    TLeaf get_Value() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugTree::ITreeNode_1::get_Value");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::DebugTree::ITreeNode_1<TLeaf>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<TLeaf, false>(this, ___internal__method);
    }
    // public System.Collections.Generic.IEnumerable`1<Oculus.Interaction.DebugTree.ITreeNode`1<TLeaf>> get_Children()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::DebugTree::ITreeNode_1<TLeaf>*>* get_Children() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugTree::ITreeNode_1::get_Children");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::DebugTree::ITreeNode_1<TLeaf>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::DebugTree::ITreeNode_1<TLeaf>*>*, false>(this, ___internal__method);
    }
  }; // Oculus.Interaction.DebugTree.ITreeNode`1
  // Could not write size check! Type: Oculus.Interaction.DebugTree.ITreeNode`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
