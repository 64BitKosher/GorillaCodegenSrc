// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: RectTransform
  class RectTransform;
}
// Forward declaring namespace: Oculus::Interaction::DebugTree
namespace Oculus::Interaction::DebugTree {
  // Forward declaring type: ITreeNode`1<TLeaf>
  template<typename TLeaf>
  class ITreeNode_1;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.DebugTree
namespace Oculus::Interaction::DebugTree {
  // Forward declaring type: INodeUI`1<TLeaf>
  template<typename TLeaf>
  class INodeUI_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::Oculus::Interaction::DebugTree::INodeUI_1, "Oculus.Interaction.DebugTree", "INodeUI`1");
// Type namespace: Oculus.Interaction.DebugTree
namespace Oculus::Interaction::DebugTree {
  // WARNING Size may be invalid!
  // Autogenerated type: Oculus.Interaction.DebugTree.INodeUI`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename TLeaf>
  class INodeUI_1 {
    public:
    // public UnityEngine.RectTransform get_ChildArea()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::RectTransform* get_ChildArea() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugTree::INodeUI_1::get_ChildArea");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::DebugTree::INodeUI_1<TLeaf>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method);
    }
    // public System.Void Bind(Oculus.Interaction.DebugTree.ITreeNode`1<TLeaf> node, System.Boolean isRoot, System.Boolean isDuplicate)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Bind(::Oculus::Interaction::DebugTree::ITreeNode_1<TLeaf>* node, bool isRoot, bool isDuplicate) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugTree::INodeUI_1::Bind");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::DebugTree::INodeUI_1<TLeaf>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node, isRoot, isDuplicate);
    }
  }; // Oculus.Interaction.DebugTree.INodeUI`1
  // Could not write size check! Type: Oculus.Interaction.DebugTree.INodeUI`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
