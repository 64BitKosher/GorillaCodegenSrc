// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.DebugTree.DebugTreeUI`1
#include "Oculus/Interaction/DebugTree/DebugTreeUI_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction::DebugTree
namespace Oculus::Interaction::DebugTree {
  // Forward declaring type: INodeUI`1<TLeaf>
  template<typename TLeaf>
  class INodeUI_1;
  // Forward declaring type: DebugTree`1<TLeaf>
  template<typename TLeaf>
  class DebugTree_1;
}
// Forward declaring namespace: Oculus::Interaction
namespace Oculus::Interaction {
  // Forward declaring type: IInteractor
  class IInteractor;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Object because it is already included!
  // Skipping declaration: Component because it is already included!
}
// Completed forward declares
// Type namespace: Oculus.Interaction.DebugTree
namespace Oculus::Interaction::DebugTree {
  // Forward declaring type: InteractorGroupDebugTreeUI
  class InteractorGroupDebugTreeUI;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::DebugTree::InteractorGroupDebugTreeUI);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::DebugTree::InteractorGroupDebugTreeUI*, "Oculus.Interaction.DebugTree", "InteractorGroupDebugTreeUI");
// Type namespace: Oculus.Interaction.DebugTree
namespace Oculus::Interaction::DebugTree {
  // WARNING Size may be invalid!
  // Autogenerated type: Oculus.Interaction.DebugTree.InteractorGroupDebugTreeUI
  // [TokenAttribute] Offset: FFFFFFFF
  class InteractorGroupDebugTreeUI : public ::Oculus::Interaction::DebugTree::DebugTreeUI_1<::Oculus::Interaction::IInteractor*> {
    public:
    // Nested type: ::Oculus::Interaction::DebugTree::InteractorGroupDebugTreeUI::InteractorGroupDebugTree
    class InteractorGroupDebugTree;
    public:
    // private UnityEngine.Object _root
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::Object* root;
    // Field size check
    static_assert(sizeof(::UnityEngine::Object*) == 0x8);
    // private UnityEngine.Component _nodePrefab
    // Size: 0x8
    // Offset: 0x50
    ::UnityEngine::Component* nodePrefab;
    // Field size check
    static_assert(sizeof(::UnityEngine::Component*) == 0x8);
    public:
    // Get instance field reference: private UnityEngine.Object _root
    [[deprecated("Use field access instead!")]] ::UnityEngine::Object*& dyn__root();
    // Get instance field reference: private UnityEngine.Component _nodePrefab
    [[deprecated("Use field access instead!")]] ::UnityEngine::Component*& dyn__nodePrefab();
    // protected Oculus.Interaction.IInteractor get_Value()
    // Offset: 0x47FECA8
    ::Oculus::Interaction::IInteractor* get_Value();
    // protected Oculus.Interaction.DebugTree.INodeUI`1<Oculus.Interaction.IInteractor> get_NodePrefab()
    // Offset: 0x47FECF0
    ::Oculus::Interaction::DebugTree::INodeUI_1<::Oculus::Interaction::IInteractor*>* get_NodePrefab();
    // protected Oculus.Interaction.DebugTree.DebugTree`1<Oculus.Interaction.IInteractor> InstantiateTree(Oculus.Interaction.IInteractor value)
    // Offset: 0x47FED38
    ::Oculus::Interaction::DebugTree::DebugTree_1<::Oculus::Interaction::IInteractor*>* InstantiateTree(::Oculus::Interaction::IInteractor* value);
    // protected System.String TitleForValue(Oculus.Interaction.IInteractor value)
    // Offset: 0x47FEDE8
    ::StringW TitleForValue(::Oculus::Interaction::IInteractor* value);
    // public System.Void .ctor()
    // Offset: 0x47FEEB4
    // Implemented from: Oculus.Interaction.DebugTree.DebugTreeUI`1
    // Base method: System.Void DebugTreeUI_1::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static InteractorGroupDebugTreeUI* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugTree::InteractorGroupDebugTreeUI::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<InteractorGroupDebugTreeUI*, creationType>()));
    }
  }; // Oculus.Interaction.DebugTree.InteractorGroupDebugTreeUI
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::DebugTree::InteractorGroupDebugTreeUI::get_Value
// Il2CppName: get_Value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::IInteractor* (Oculus::Interaction::DebugTree::InteractorGroupDebugTreeUI::*)()>(&Oculus::Interaction::DebugTree::InteractorGroupDebugTreeUI::get_Value)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DebugTree::InteractorGroupDebugTreeUI*), "get_Value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DebugTree::InteractorGroupDebugTreeUI::get_NodePrefab
// Il2CppName: get_NodePrefab
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::DebugTree::INodeUI_1<::Oculus::Interaction::IInteractor*>* (Oculus::Interaction::DebugTree::InteractorGroupDebugTreeUI::*)()>(&Oculus::Interaction::DebugTree::InteractorGroupDebugTreeUI::get_NodePrefab)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DebugTree::InteractorGroupDebugTreeUI*), "get_NodePrefab", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DebugTree::InteractorGroupDebugTreeUI::InstantiateTree
// Il2CppName: InstantiateTree
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::DebugTree::DebugTree_1<::Oculus::Interaction::IInteractor*>* (Oculus::Interaction::DebugTree::InteractorGroupDebugTreeUI::*)(::Oculus::Interaction::IInteractor*)>(&Oculus::Interaction::DebugTree::InteractorGroupDebugTreeUI::InstantiateTree)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "IInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DebugTree::InteractorGroupDebugTreeUI*), "InstantiateTree", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DebugTree::InteractorGroupDebugTreeUI::TitleForValue
// Il2CppName: TitleForValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Oculus::Interaction::DebugTree::InteractorGroupDebugTreeUI::*)(::Oculus::Interaction::IInteractor*)>(&Oculus::Interaction::DebugTree::InteractorGroupDebugTreeUI::TitleForValue)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "IInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DebugTree::InteractorGroupDebugTreeUI*), "TitleForValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DebugTree::InteractorGroupDebugTreeUI::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
