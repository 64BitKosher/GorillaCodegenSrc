// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: Oculus.Interaction.Collections.IEnumerableHashSet`1
#include "Oculus/Interaction/Collections/IEnumerableHashSet_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Skipping declaration: IEnumerable`1 because it is already included!
}
// Completed forward declares
// Type namespace: Oculus.Interaction.Collections
namespace Oculus::Interaction::Collections {
  // Forward declaring type: EnumerableHashSet`1<T>
  template<typename T>
  class EnumerableHashSet_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::Oculus::Interaction::Collections::EnumerableHashSet_1, "Oculus.Interaction.Collections", "EnumerableHashSet`1");
// Type namespace: Oculus.Interaction.Collections
namespace Oculus::Interaction::Collections {
  // WARNING Size may be invalid!
  // Autogenerated type: Oculus.Interaction.Collections.EnumerableHashSet`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename T>
  class EnumerableHashSet_1 : public ::System::Collections::Generic::HashSet_1<T>/*, public ::Oculus::Interaction::Collections::IEnumerableHashSet_1<T>*/ {
    public:
    // Creating interface conversion operator: operator ::Oculus::Interaction::Collections::IEnumerableHashSet_1<T>
    operator ::Oculus::Interaction::Collections::IEnumerableHashSet_1<T>() noexcept {
      return *reinterpret_cast<::Oculus::Interaction::Collections::IEnumerableHashSet_1<T>*>(this);
    }
    // public System.Void .ctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static EnumerableHashSet_1<T>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Collections::EnumerableHashSet_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<EnumerableHashSet_1<T>*, creationType>()));
    }
    // public System.Void .ctor(System.Collections.Generic.IEnumerable`1<T> values)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static EnumerableHashSet_1<T>* New_ctor(::System::Collections::Generic::IEnumerable_1<T>* values) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Collections::EnumerableHashSet_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<EnumerableHashSet_1<T>*, creationType>(values)));
    }
    // private System.Collections.Generic.HashSet`1/Enumerator<T> Oculus.Interaction.Collections.IEnumerableHashSet<T>.GetEnumerator()
    // Offset: 0xFFFFFFFFFFFFFFFF
    typename ::System::Collections::Generic::HashSet_1<T>::Enumerator Oculus_Interaction_Collections_IEnumerableHashSet$T$_GetEnumerator() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Collections::EnumerableHashSet_1::Oculus.Interaction.Collections.IEnumerableHashSet<T>.GetEnumerator");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Collections::EnumerableHashSet_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<typename ::System::Collections::Generic::HashSet_1<T>::Enumerator, false>(this, ___internal__method);
    }
  }; // Oculus.Interaction.Collections.EnumerableHashSet`1
  // Could not write size check! Type: Oculus.Interaction.Collections.EnumerableHashSet`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
