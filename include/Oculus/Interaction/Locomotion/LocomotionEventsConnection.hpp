// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: Oculus.Interaction.Locomotion.ILocomotionEventHandler
#include "Oculus/Interaction/Locomotion/ILocomotionEventHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction::Locomotion
namespace Oculus::Interaction::Locomotion {
  // Forward declaring type: ILocomotionEventBroadcaster
  class ILocomotionEventBroadcaster;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: IEnumerable`1<T>
  template<typename T>
  class IEnumerable_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Object because it is already included!
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.Locomotion
namespace Oculus::Interaction::Locomotion {
  // Forward declaring type: LocomotionEventsConnection
  class LocomotionEventsConnection;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::Locomotion::LocomotionEventsConnection);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::Locomotion::LocomotionEventsConnection*, "Oculus.Interaction.Locomotion", "LocomotionEventsConnection");
// Type namespace: Oculus.Interaction.Locomotion
namespace Oculus::Interaction::Locomotion {
  // Size: 0x41
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.Locomotion.LocomotionEventsConnection
  // [TokenAttribute] Offset: FFFFFFFF
  class LocomotionEventsConnection : public ::UnityEngine::MonoBehaviour/*, public ::Oculus::Interaction::Locomotion::ILocomotionEventHandler*/ {
    public:
    // Nested type: ::Oculus::Interaction::Locomotion::LocomotionEventsConnection::$$c
    class $$c;
    public:
    // private System.Collections.Generic.List`1<UnityEngine.Object> _broadcasters
    // Size: 0x8
    // Offset: 0x20
    ::System::Collections::Generic::List_1<::UnityEngine::Object*>* broadcasters;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::Object*>*) == 0x8);
    // private System.Collections.Generic.IEnumerable`1<Oculus.Interaction.Locomotion.ILocomotionEventBroadcaster> <Broadcasters>k__BackingField
    // Size: 0x8
    // Offset: 0x28
    ::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::Locomotion::ILocomotionEventBroadcaster*>* Broadcasters;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::Locomotion::ILocomotionEventBroadcaster*>*) == 0x8);
    // private UnityEngine.Object _handler
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::Object* handler;
    // Field size check
    static_assert(sizeof(::UnityEngine::Object*) == 0x8);
    // private Oculus.Interaction.Locomotion.ILocomotionEventHandler <Handler>k__BackingField
    // Size: 0x8
    // Offset: 0x38
    ::Oculus::Interaction::Locomotion::ILocomotionEventHandler* Handler;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Locomotion::ILocomotionEventHandler*) == 0x8);
    // private System.Boolean _started
    // Size: 0x1
    // Offset: 0x40
    bool started;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating interface conversion operator: operator ::Oculus::Interaction::Locomotion::ILocomotionEventHandler
    operator ::Oculus::Interaction::Locomotion::ILocomotionEventHandler() noexcept {
      return *reinterpret_cast<::Oculus::Interaction::Locomotion::ILocomotionEventHandler*>(this);
    }
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.Object> _broadcasters
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Object*>*& dyn__broadcasters();
    // Get instance field reference: private System.Collections.Generic.IEnumerable`1<Oculus.Interaction.Locomotion.ILocomotionEventBroadcaster> <Broadcasters>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::Locomotion::ILocomotionEventBroadcaster*>*& dyn_$Broadcasters$k__BackingField();
    // Get instance field reference: private UnityEngine.Object _handler
    [[deprecated("Use field access instead!")]] ::UnityEngine::Object*& dyn__handler();
    // Get instance field reference: private Oculus.Interaction.Locomotion.ILocomotionEventHandler <Handler>k__BackingField
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Locomotion::ILocomotionEventHandler*& dyn_$Handler$k__BackingField();
    // Get instance field reference: private System.Boolean _started
    [[deprecated("Use field access instead!")]] bool& dyn__started();
    // private System.Collections.Generic.IEnumerable`1<Oculus.Interaction.Locomotion.ILocomotionEventBroadcaster> get_Broadcasters()
    // Offset: 0x4805230
    ::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::Locomotion::ILocomotionEventBroadcaster*>* get_Broadcasters();
    // private System.Void set_Broadcasters(System.Collections.Generic.IEnumerable`1<Oculus.Interaction.Locomotion.ILocomotionEventBroadcaster> value)
    // Offset: 0x4805238
    void set_Broadcasters(::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::Locomotion::ILocomotionEventBroadcaster*>* value);
    // private Oculus.Interaction.Locomotion.ILocomotionEventHandler get_Handler()
    // Offset: 0x4805240
    ::Oculus::Interaction::Locomotion::ILocomotionEventHandler* get_Handler();
    // private System.Void set_Handler(Oculus.Interaction.Locomotion.ILocomotionEventHandler value)
    // Offset: 0x4805248
    void set_Handler(::Oculus::Interaction::Locomotion::ILocomotionEventHandler* value);
    // public System.Void add_WhenLocomotionEventHandled(System.Action`2<Oculus.Interaction.Locomotion.LocomotionEvent,UnityEngine.Pose> value)
    // Offset: 0x4805250
    void add_WhenLocomotionEventHandled(::System::Action_2<::Oculus::Interaction::Locomotion::LocomotionEvent, ::UnityEngine::Pose>* value);
    // public System.Void remove_WhenLocomotionEventHandled(System.Action`2<Oculus.Interaction.Locomotion.LocomotionEvent,UnityEngine.Pose> value)
    // Offset: 0x48052FC
    void remove_WhenLocomotionEventHandled(::System::Action_2<::Oculus::Interaction::Locomotion::LocomotionEvent, ::UnityEngine::Pose>* value);
    // protected System.Void Awake()
    // Offset: 0x48053A8
    void Awake();
    // protected System.Void Start()
    // Offset: 0x48054EC
    void Start();
    // protected System.Void OnEnable()
    // Offset: 0x4805524
    void OnEnable();
    // protected System.Void OnDisable()
    // Offset: 0x48058C0
    void OnDisable();
    // public System.Void HandleLocomotionEvent(Oculus.Interaction.Locomotion.LocomotionEvent locomotionEvent)
    // Offset: 0x4805C60
    void HandleLocomotionEvent(::Oculus::Interaction::Locomotion::LocomotionEvent locomotionEvent);
    // public System.Void InjectAllLocomotionBroadcastersHandlerConnection(System.Collections.Generic.IEnumerable`1<Oculus.Interaction.Locomotion.ILocomotionEventBroadcaster> broadcasters, Oculus.Interaction.Locomotion.ILocomotionEventHandler handler)
    // Offset: 0x4805D48
    void InjectAllLocomotionBroadcastersHandlerConnection(::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::Locomotion::ILocomotionEventBroadcaster*>* broadcasters, ::Oculus::Interaction::Locomotion::ILocomotionEventHandler* handler);
    // public System.Void InjectBroadcasters(System.Collections.Generic.IEnumerable`1<Oculus.Interaction.Locomotion.ILocomotionEventBroadcaster> broadcasters)
    // Offset: 0x4805D74
    void InjectBroadcasters(::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::Locomotion::ILocomotionEventBroadcaster*>* broadcasters);
    // public System.Void InjectHandler(Oculus.Interaction.Locomotion.ILocomotionEventHandler handler)
    // Offset: 0x4805D7C
    void InjectHandler(::Oculus::Interaction::Locomotion::ILocomotionEventHandler* handler);
    // public System.Void .ctor()
    // Offset: 0x4805E4C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LocomotionEventsConnection* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEventsConnection::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LocomotionEventsConnection*, creationType>()));
    }
  }; // Oculus.Interaction.Locomotion.LocomotionEventsConnection
  #pragma pack(pop)
  static check_size<sizeof(LocomotionEventsConnection), 64 + sizeof(bool)> __Oculus_Interaction_Locomotion_LocomotionEventsConnectionSizeCheck;
  static_assert(sizeof(LocomotionEventsConnection) == 0x41);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionEventsConnection::get_Broadcasters
// Il2CppName: get_Broadcasters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::Locomotion::ILocomotionEventBroadcaster*>* (Oculus::Interaction::Locomotion::LocomotionEventsConnection::*)()>(&Oculus::Interaction::Locomotion::LocomotionEventsConnection::get_Broadcasters)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionEventsConnection*), "get_Broadcasters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionEventsConnection::set_Broadcasters
// Il2CppName: set_Broadcasters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Locomotion::LocomotionEventsConnection::*)(::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::Locomotion::ILocomotionEventBroadcaster*>*)>(&Oculus::Interaction::Locomotion::LocomotionEventsConnection::set_Broadcasters)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IEnumerable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Oculus.Interaction.Locomotion", "ILocomotionEventBroadcaster")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionEventsConnection*), "set_Broadcasters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionEventsConnection::get_Handler
// Il2CppName: get_Handler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::Locomotion::ILocomotionEventHandler* (Oculus::Interaction::Locomotion::LocomotionEventsConnection::*)()>(&Oculus::Interaction::Locomotion::LocomotionEventsConnection::get_Handler)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionEventsConnection*), "get_Handler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionEventsConnection::set_Handler
// Il2CppName: set_Handler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Locomotion::LocomotionEventsConnection::*)(::Oculus::Interaction::Locomotion::ILocomotionEventHandler*)>(&Oculus::Interaction::Locomotion::LocomotionEventsConnection::set_Handler)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Locomotion", "ILocomotionEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionEventsConnection*), "set_Handler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionEventsConnection::add_WhenLocomotionEventHandled
// Il2CppName: add_WhenLocomotionEventHandled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Locomotion::LocomotionEventsConnection::*)(::System::Action_2<::Oculus::Interaction::Locomotion::LocomotionEvent, ::UnityEngine::Pose>*)>(&Oculus::Interaction::Locomotion::LocomotionEventsConnection::add_WhenLocomotionEventHandled)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Oculus.Interaction.Locomotion", "LocomotionEvent"), ::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionEventsConnection*), "add_WhenLocomotionEventHandled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionEventsConnection::remove_WhenLocomotionEventHandled
// Il2CppName: remove_WhenLocomotionEventHandled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Locomotion::LocomotionEventsConnection::*)(::System::Action_2<::Oculus::Interaction::Locomotion::LocomotionEvent, ::UnityEngine::Pose>*)>(&Oculus::Interaction::Locomotion::LocomotionEventsConnection::remove_WhenLocomotionEventHandled)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Oculus.Interaction.Locomotion", "LocomotionEvent"), ::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionEventsConnection*), "remove_WhenLocomotionEventHandled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionEventsConnection::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Locomotion::LocomotionEventsConnection::*)()>(&Oculus::Interaction::Locomotion::LocomotionEventsConnection::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionEventsConnection*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionEventsConnection::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Locomotion::LocomotionEventsConnection::*)()>(&Oculus::Interaction::Locomotion::LocomotionEventsConnection::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionEventsConnection*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionEventsConnection::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Locomotion::LocomotionEventsConnection::*)()>(&Oculus::Interaction::Locomotion::LocomotionEventsConnection::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionEventsConnection*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionEventsConnection::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Locomotion::LocomotionEventsConnection::*)()>(&Oculus::Interaction::Locomotion::LocomotionEventsConnection::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionEventsConnection*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionEventsConnection::HandleLocomotionEvent
// Il2CppName: HandleLocomotionEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Locomotion::LocomotionEventsConnection::*)(::Oculus::Interaction::Locomotion::LocomotionEvent)>(&Oculus::Interaction::Locomotion::LocomotionEventsConnection::HandleLocomotionEvent)> {
  static const MethodInfo* get() {
    static auto* locomotionEvent = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Locomotion", "LocomotionEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionEventsConnection*), "HandleLocomotionEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{locomotionEvent});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionEventsConnection::InjectAllLocomotionBroadcastersHandlerConnection
// Il2CppName: InjectAllLocomotionBroadcastersHandlerConnection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Locomotion::LocomotionEventsConnection::*)(::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::Locomotion::ILocomotionEventBroadcaster*>*, ::Oculus::Interaction::Locomotion::ILocomotionEventHandler*)>(&Oculus::Interaction::Locomotion::LocomotionEventsConnection::InjectAllLocomotionBroadcastersHandlerConnection)> {
  static const MethodInfo* get() {
    static auto* broadcasters = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IEnumerable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Oculus.Interaction.Locomotion", "ILocomotionEventBroadcaster")})->byval_arg;
    static auto* handler = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Locomotion", "ILocomotionEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionEventsConnection*), "InjectAllLocomotionBroadcastersHandlerConnection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{broadcasters, handler});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionEventsConnection::InjectBroadcasters
// Il2CppName: InjectBroadcasters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Locomotion::LocomotionEventsConnection::*)(::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::Locomotion::ILocomotionEventBroadcaster*>*)>(&Oculus::Interaction::Locomotion::LocomotionEventsConnection::InjectBroadcasters)> {
  static const MethodInfo* get() {
    static auto* broadcasters = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IEnumerable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Oculus.Interaction.Locomotion", "ILocomotionEventBroadcaster")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionEventsConnection*), "InjectBroadcasters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{broadcasters});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionEventsConnection::InjectHandler
// Il2CppName: InjectHandler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Locomotion::LocomotionEventsConnection::*)(::Oculus::Interaction::Locomotion::ILocomotionEventHandler*)>(&Oculus::Interaction::Locomotion::LocomotionEventsConnection::InjectHandler)> {
  static const MethodInfo* get() {
    static auto* handler = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Locomotion", "ILocomotionEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionEventsConnection*), "InjectHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handler});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionEventsConnection::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
