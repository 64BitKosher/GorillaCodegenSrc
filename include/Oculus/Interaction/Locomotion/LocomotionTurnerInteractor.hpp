// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.Interactor`2
#include "Oculus/Interaction/Interactor_2.hpp"
// Including type: Oculus.Interaction.Input.IAxis1D
#include "Oculus/Interaction/Input/IAxis1D.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction::Locomotion
namespace Oculus::Interaction::Locomotion {
  // Forward declaring type: LocomotionTurnerInteractable
  class LocomotionTurnerInteractable;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
  // Skipping declaration: Object because it is already included!
}
// Forward declaring namespace: Oculus::Interaction::Input
namespace Oculus::Interaction::Input {
  // Forward declaring type: ITrackingToWorldTransformer
  class ITrackingToWorldTransformer;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Forward declaring namespace: Oculus::Interaction
namespace Oculus::Interaction {
  // Forward declaring type: ISelector
  class ISelector;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.Locomotion
namespace Oculus::Interaction::Locomotion {
  // Forward declaring type: LocomotionTurnerInteractor
  class LocomotionTurnerInteractor;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor*, "Oculus.Interaction.Locomotion", "LocomotionTurnerInteractor");
// Type namespace: Oculus.Interaction.Locomotion
namespace Oculus::Interaction::Locomotion {
  // WARNING Size may be invalid!
  // Autogenerated type: Oculus.Interaction.Locomotion.LocomotionTurnerInteractor
  // [TokenAttribute] Offset: FFFFFFFF
  class LocomotionTurnerInteractor : public ::Oculus::Interaction::Interactor_2<::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor*, ::Oculus::Interaction::Locomotion::LocomotionTurnerInteractable*>/*, public ::Oculus::Interaction::Input::IAxis1D*/ {
    public:
    // Nested type: ::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::$$c
    class $$c;
    public:
    // private UnityEngine.Transform _origin
    // Size: 0x8
    // Offset: 0x118
    ::UnityEngine::Transform* origin;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private UnityEngine.Object _selector
    // Size: 0x8
    // Offset: 0x120
    ::UnityEngine::Object* selector;
    // Field size check
    static_assert(sizeof(::UnityEngine::Object*) == 0x8);
    // private UnityEngine.Transform _stabilizationPoint
    // Size: 0x8
    // Offset: 0x128
    ::UnityEngine::Transform* stabilizationPoint;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private UnityEngine.Object _transformer
    // Size: 0x8
    // Offset: 0x130
    ::UnityEngine::Object* transformer;
    // Field size check
    static_assert(sizeof(::UnityEngine::Object*) == 0x8);
    // public Oculus.Interaction.Input.ITrackingToWorldTransformer Transformer
    // Size: 0x8
    // Offset: 0x138
    ::Oculus::Interaction::Input::ITrackingToWorldTransformer* Transformer;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Input::ITrackingToWorldTransformer*) == 0x8);
    // private System.Single _dragThresold
    // Size: 0x4
    // Offset: 0x140
    float dragThresold;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.Pose _midPoint
    // Size: 0x1C
    // Offset: 0x144
    ::UnityEngine::Pose midPoint;
    // Field size check
    static_assert(sizeof(::UnityEngine::Pose) == 0x1C);
    // private System.Single _axisValue
    // Size: 0x4
    // Offset: 0x160
    float axisValue;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Action`1<System.Single> _whenTurnDirectionChanged
    // Size: 0x8
    // Offset: 0x168
    ::System::Action_1<float>* whenTurnDirectionChanged;
    // Field size check
    static_assert(sizeof(::System::Action_1<float>*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::Oculus::Interaction::Input::IAxis1D
    operator ::Oculus::Interaction::Input::IAxis1D() noexcept {
      return *reinterpret_cast<::Oculus::Interaction::Input::IAxis1D*>(this);
    }
    // Get instance field reference: private UnityEngine.Transform _origin
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn__origin();
    // Get instance field reference: private UnityEngine.Object _selector
    [[deprecated("Use field access instead!")]] ::UnityEngine::Object*& dyn__selector();
    // Get instance field reference: private UnityEngine.Transform _stabilizationPoint
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn__stabilizationPoint();
    // Get instance field reference: private UnityEngine.Object _transformer
    [[deprecated("Use field access instead!")]] ::UnityEngine::Object*& dyn__transformer();
    // Get instance field reference: public Oculus.Interaction.Input.ITrackingToWorldTransformer Transformer
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::ITrackingToWorldTransformer*& dyn_Transformer();
    // Get instance field reference: private System.Single _dragThresold
    [[deprecated("Use field access instead!")]] float& dyn__dragThresold();
    // Get instance field reference: private UnityEngine.Pose _midPoint
    [[deprecated("Use field access instead!")]] ::UnityEngine::Pose& dyn__midPoint();
    // Get instance field reference: private System.Single _axisValue
    [[deprecated("Use field access instead!")]] float& dyn__axisValue();
    // Get instance field reference: private System.Action`1<System.Single> _whenTurnDirectionChanged
    [[deprecated("Use field access instead!")]] ::System::Action_1<float>*& dyn__whenTurnDirectionChanged();
    // public System.Single get_DragThresold()
    // Offset: 0x480DCC4
    float get_DragThresold();
    // public System.Void set_DragThresold(System.Single value)
    // Offset: 0x480DCCC
    void set_DragThresold(float value);
    // public UnityEngine.Pose get_MidPoint()
    // Offset: 0x480DCD4
    ::UnityEngine::Pose get_MidPoint();
    // public UnityEngine.Pose get_Origin()
    // Offset: 0x480DDD8
    ::UnityEngine::Pose get_Origin();
    // public System.Void add_WhenTurnDirectionChanged(System.Action`1<System.Single> value)
    // Offset: 0x480DE14
    void add_WhenTurnDirectionChanged(::System::Action_1<float>* value);
    // public System.Void remove_WhenTurnDirectionChanged(System.Action`1<System.Single> value)
    // Offset: 0x480DEC0
    void remove_WhenTurnDirectionChanged(::System::Action_1<float>* value);
    // private System.Void UpdatePointers()
    // Offset: 0x480E55C
    void UpdatePointers();
    // private System.Void InitializeMidPoint(UnityEngine.Pose pointer)
    // Offset: 0x480E1C8
    void InitializeMidPoint(::UnityEngine::Pose pointer);
    // private System.Void UpdateMidPoint(UnityEngine.Pose pointer, UnityEngine.Pose midPoint)
    // Offset: 0x480E664
    void UpdateMidPoint(::UnityEngine::Pose pointer, ::UnityEngine::Pose midPoint);
    // private System.Void DragMidPoint(UnityEngine.Pose worldMidPoint)
    // Offset: 0x480E92C
    void DragMidPoint(::UnityEngine::Pose worldMidPoint);
    // private System.Void UpdateAxisValue(UnityEngine.Pose pointer, UnityEngine.Pose origin)
    // Offset: 0x480ED50
    void UpdateAxisValue(::UnityEngine::Pose pointer, ::UnityEngine::Pose origin);
    // public System.Single Value()
    // Offset: 0x480EF70
    float Value();
    // protected Oculus.Interaction.Locomotion.LocomotionTurnerInteractable ComputeCandidate()
    // Offset: 0x480EFC0
    ::Oculus::Interaction::Locomotion::LocomotionTurnerInteractable* ComputeCandidate();
    // public System.Void InjectAllLocomotionTurnerInteractor(UnityEngine.Transform origin, Oculus.Interaction.ISelector selector, UnityEngine.Transform stabilizationPoint, Oculus.Interaction.Input.ITrackingToWorldTransformer transformer)
    // Offset: 0x480EFC8
    void InjectAllLocomotionTurnerInteractor(::UnityEngine::Transform* origin, ::Oculus::Interaction::ISelector* selector, ::UnityEngine::Transform* stabilizationPoint, ::Oculus::Interaction::Input::ITrackingToWorldTransformer* transformer);
    // public System.Void InjectOrigin(UnityEngine.Transform origin)
    // Offset: 0x480F1D8
    void InjectOrigin(::UnityEngine::Transform* origin);
    // public System.Void InjectSelector(Oculus.Interaction.ISelector selector)
    // Offset: 0x480F024
    void InjectSelector(::Oculus::Interaction::ISelector* selector);
    // public System.Void InjectStabilizationPoint(UnityEngine.Transform stabilizationPoint)
    // Offset: 0x480F1E8
    void InjectStabilizationPoint(::UnityEngine::Transform* stabilizationPoint);
    // public System.Void InjectTransformer(Oculus.Interaction.Input.ITrackingToWorldTransformer transformer)
    // Offset: 0x480F108
    void InjectTransformer(::Oculus::Interaction::Input::ITrackingToWorldTransformer* transformer);
    // private System.Void <Start>b__24_0()
    // Offset: 0x480F368
    void $Start$b__24_0();
    // public override System.Boolean get_ShouldHover()
    // Offset: 0x480DF6C
    // Implemented from: Oculus.Interaction.Interactor`2
    // Base method: System.Boolean Interactor_2::get_ShouldHover()
    bool get_ShouldHover();
    // public override System.Boolean get_ShouldUnhover()
    // Offset: 0x480DFB0
    // Implemented from: Oculus.Interaction.Interactor`2
    // Base method: System.Boolean Interactor_2::get_ShouldUnhover()
    bool get_ShouldUnhover();
    // protected override System.Void Awake()
    // Offset: 0x480DFB8
    // Implemented from: Oculus.Interaction.Interactor`2
    // Base method: System.Void Interactor_2::Awake()
    void Awake();
    // protected override System.Void Start()
    // Offset: 0x480E098
    // Implemented from: Oculus.Interaction.Interactor`2
    // Base method: System.Void Interactor_2::Start()
    void Start();
    // protected override System.Void HandleEnabled()
    // Offset: 0x480E134
    // Implemented from: Oculus.Interaction.Interactor`2
    // Base method: System.Void Interactor_2::HandleEnabled()
    void HandleEnabled();
    // protected override System.Void DoHoverUpdate()
    // Offset: 0x480E50C
    // Implemented from: Oculus.Interaction.Interactor`2
    // Base method: System.Void Interactor_2::DoHoverUpdate()
    void DoHoverUpdate();
    // protected override System.Void DoSelectUpdate()
    // Offset: 0x480E614
    // Implemented from: Oculus.Interaction.Interactor`2
    // Base method: System.Void Interactor_2::DoSelectUpdate()
    void DoSelectUpdate();
    // public System.Void .ctor()
    // Offset: 0x480F1F8
    // Implemented from: Oculus.Interaction.Interactor`2
    // Base method: System.Void Interactor_2::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LocomotionTurnerInteractor* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LocomotionTurnerInteractor*, creationType>()));
    }
  }; // Oculus.Interaction.Locomotion.LocomotionTurnerInteractor
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::get_DragThresold
// Il2CppName: get_DragThresold
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::*)()>(&Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::get_DragThresold)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionTurnerInteractor*), "get_DragThresold", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::set_DragThresold
// Il2CppName: set_DragThresold
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::*)(float)>(&Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::set_DragThresold)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionTurnerInteractor*), "set_DragThresold", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::get_MidPoint
// Il2CppName: get_MidPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Pose (Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::*)()>(&Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::get_MidPoint)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionTurnerInteractor*), "get_MidPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::get_Origin
// Il2CppName: get_Origin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Pose (Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::*)()>(&Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::get_Origin)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionTurnerInteractor*), "get_Origin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::add_WhenTurnDirectionChanged
// Il2CppName: add_WhenTurnDirectionChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::*)(::System::Action_1<float>*)>(&Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::add_WhenTurnDirectionChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionTurnerInteractor*), "add_WhenTurnDirectionChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::remove_WhenTurnDirectionChanged
// Il2CppName: remove_WhenTurnDirectionChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::*)(::System::Action_1<float>*)>(&Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::remove_WhenTurnDirectionChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionTurnerInteractor*), "remove_WhenTurnDirectionChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::UpdatePointers
// Il2CppName: UpdatePointers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::*)()>(&Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::UpdatePointers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionTurnerInteractor*), "UpdatePointers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::InitializeMidPoint
// Il2CppName: InitializeMidPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::*)(::UnityEngine::Pose)>(&Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::InitializeMidPoint)> {
  static const MethodInfo* get() {
    static auto* pointer = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionTurnerInteractor*), "InitializeMidPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pointer});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::UpdateMidPoint
// Il2CppName: UpdateMidPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::*)(::UnityEngine::Pose, ::UnityEngine::Pose)>(&Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::UpdateMidPoint)> {
  static const MethodInfo* get() {
    static auto* pointer = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->byval_arg;
    static auto* midPoint = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionTurnerInteractor*), "UpdateMidPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pointer, midPoint});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::DragMidPoint
// Il2CppName: DragMidPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::*)(::UnityEngine::Pose)>(&Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::DragMidPoint)> {
  static const MethodInfo* get() {
    static auto* worldMidPoint = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionTurnerInteractor*), "DragMidPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{worldMidPoint});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::UpdateAxisValue
// Il2CppName: UpdateAxisValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::*)(::UnityEngine::Pose, ::UnityEngine::Pose)>(&Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::UpdateAxisValue)> {
  static const MethodInfo* get() {
    static auto* pointer = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->byval_arg;
    static auto* origin = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionTurnerInteractor*), "UpdateAxisValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pointer, origin});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::Value
// Il2CppName: Value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::*)()>(&Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::Value)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionTurnerInteractor*), "Value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::ComputeCandidate
// Il2CppName: ComputeCandidate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::Locomotion::LocomotionTurnerInteractable* (Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::*)()>(&Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::ComputeCandidate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionTurnerInteractor*), "ComputeCandidate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::InjectAllLocomotionTurnerInteractor
// Il2CppName: InjectAllLocomotionTurnerInteractor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::*)(::UnityEngine::Transform*, ::Oculus::Interaction::ISelector*, ::UnityEngine::Transform*, ::Oculus::Interaction::Input::ITrackingToWorldTransformer*)>(&Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::InjectAllLocomotionTurnerInteractor)> {
  static const MethodInfo* get() {
    static auto* origin = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* selector = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "ISelector")->byval_arg;
    static auto* stabilizationPoint = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* transformer = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "ITrackingToWorldTransformer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionTurnerInteractor*), "InjectAllLocomotionTurnerInteractor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{origin, selector, stabilizationPoint, transformer});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::InjectOrigin
// Il2CppName: InjectOrigin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::*)(::UnityEngine::Transform*)>(&Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::InjectOrigin)> {
  static const MethodInfo* get() {
    static auto* origin = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionTurnerInteractor*), "InjectOrigin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{origin});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::InjectSelector
// Il2CppName: InjectSelector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::*)(::Oculus::Interaction::ISelector*)>(&Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::InjectSelector)> {
  static const MethodInfo* get() {
    static auto* selector = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "ISelector")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionTurnerInteractor*), "InjectSelector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{selector});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::InjectStabilizationPoint
// Il2CppName: InjectStabilizationPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::*)(::UnityEngine::Transform*)>(&Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::InjectStabilizationPoint)> {
  static const MethodInfo* get() {
    static auto* stabilizationPoint = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionTurnerInteractor*), "InjectStabilizationPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stabilizationPoint});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::InjectTransformer
// Il2CppName: InjectTransformer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::*)(::Oculus::Interaction::Input::ITrackingToWorldTransformer*)>(&Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::InjectTransformer)> {
  static const MethodInfo* get() {
    static auto* transformer = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "ITrackingToWorldTransformer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionTurnerInteractor*), "InjectTransformer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{transformer});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::$Start$b__24_0
// Il2CppName: <Start>b__24_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::*)()>(&Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::$Start$b__24_0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionTurnerInteractor*), "<Start>b__24_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::get_ShouldHover
// Il2CppName: get_ShouldHover
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::*)()>(&Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::get_ShouldHover)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionTurnerInteractor*), "get_ShouldHover", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::get_ShouldUnhover
// Il2CppName: get_ShouldUnhover
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::*)()>(&Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::get_ShouldUnhover)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionTurnerInteractor*), "get_ShouldUnhover", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::*)()>(&Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionTurnerInteractor*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::*)()>(&Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionTurnerInteractor*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::HandleEnabled
// Il2CppName: HandleEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::*)()>(&Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::HandleEnabled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionTurnerInteractor*), "HandleEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::DoHoverUpdate
// Il2CppName: DoHoverUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::*)()>(&Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::DoHoverUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionTurnerInteractor*), "DoHoverUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::DoSelectUpdate
// Il2CppName: DoSelectUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::*)()>(&Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::DoSelectUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionTurnerInteractor*), "DoSelectUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
