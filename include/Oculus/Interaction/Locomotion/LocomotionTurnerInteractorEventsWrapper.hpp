// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction::Locomotion
namespace Oculus::Interaction::Locomotion {
  // Forward declaring type: LocomotionTurnerInteractor
  class LocomotionTurnerInteractor;
}
// Forward declaring namespace: UnityEngine::Events
namespace UnityEngine::Events {
  // Forward declaring type: UnityEvent
  class UnityEvent;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.Locomotion
namespace Oculus::Interaction::Locomotion {
  // Forward declaring type: LocomotionTurnerInteractorEventsWrapper
  class LocomotionTurnerInteractorEventsWrapper;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper*, "Oculus.Interaction.Locomotion", "LocomotionTurnerInteractorEventsWrapper");
// Type namespace: Oculus.Interaction.Locomotion
namespace Oculus::Interaction::Locomotion {
  // Size: 0x39
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorEventsWrapper
  // [TokenAttribute] Offset: FFFFFFFF
  class LocomotionTurnerInteractorEventsWrapper : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private Oculus.Interaction.Locomotion.LocomotionTurnerInteractor _turner
    // Size: 0x8
    // Offset: 0x20
    ::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor* turner;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor*) == 0x8);
    // private UnityEngine.Events.UnityEvent _whenTurnDirectionLeft
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::Events::UnityEvent* whenTurnDirectionLeft;
    // Field size check
    static_assert(sizeof(::UnityEngine::Events::UnityEvent*) == 0x8);
    // private UnityEngine.Events.UnityEvent _whenTurnDirectionRight
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::Events::UnityEvent* whenTurnDirectionRight;
    // Field size check
    static_assert(sizeof(::UnityEngine::Events::UnityEvent*) == 0x8);
    // protected System.Boolean _started
    // Size: 0x1
    // Offset: 0x38
    bool started;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get instance field reference: private Oculus.Interaction.Locomotion.LocomotionTurnerInteractor _turner
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor*& dyn__turner();
    // Get instance field reference: private UnityEngine.Events.UnityEvent _whenTurnDirectionLeft
    [[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& dyn__whenTurnDirectionLeft();
    // Get instance field reference: private UnityEngine.Events.UnityEvent _whenTurnDirectionRight
    [[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& dyn__whenTurnDirectionRight();
    // Get instance field reference: protected System.Boolean _started
    [[deprecated("Use field access instead!")]] bool& dyn__started();
    // public UnityEngine.Events.UnityEvent get_WhenTurnDirectionLeft()
    // Offset: 0x480F490
    ::UnityEngine::Events::UnityEvent* get_WhenTurnDirectionLeft();
    // public UnityEngine.Events.UnityEvent get_WhenTurnDirectionRight()
    // Offset: 0x480F498
    ::UnityEngine::Events::UnityEvent* get_WhenTurnDirectionRight();
    // protected System.Void Start()
    // Offset: 0x480F4A0
    void Start();
    // protected System.Void OnEnable()
    // Offset: 0x480F4D8
    void OnEnable();
    // protected System.Void OnDisable()
    // Offset: 0x480F570
    void OnDisable();
    // private System.Void HandleTurnDirectionChanged(System.Single dir)
    // Offset: 0x480F608
    void HandleTurnDirectionChanged(float dir);
    // public System.Void InjectAllLocomotionTurnerInteractorEventsWrapper(Oculus.Interaction.Locomotion.LocomotionTurnerInteractor turner)
    // Offset: 0x480F640
    void InjectAllLocomotionTurnerInteractorEventsWrapper(::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor* turner);
    // public System.Void InjectTurner(Oculus.Interaction.Locomotion.LocomotionTurnerInteractor turner)
    // Offset: 0x480F648
    void InjectTurner(::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor* turner);
    // public System.Void .ctor()
    // Offset: 0x480F650
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LocomotionTurnerInteractorEventsWrapper* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LocomotionTurnerInteractorEventsWrapper*, creationType>()));
    }
  }; // Oculus.Interaction.Locomotion.LocomotionTurnerInteractorEventsWrapper
  #pragma pack(pop)
  static check_size<sizeof(LocomotionTurnerInteractorEventsWrapper), 56 + sizeof(bool)> __Oculus_Interaction_Locomotion_LocomotionTurnerInteractorEventsWrapperSizeCheck;
  static_assert(sizeof(LocomotionTurnerInteractorEventsWrapper) == 0x39);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper::get_WhenTurnDirectionLeft
// Il2CppName: get_WhenTurnDirectionLeft
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Events::UnityEvent* (Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper::*)()>(&Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper::get_WhenTurnDirectionLeft)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper*), "get_WhenTurnDirectionLeft", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper::get_WhenTurnDirectionRight
// Il2CppName: get_WhenTurnDirectionRight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Events::UnityEvent* (Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper::*)()>(&Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper::get_WhenTurnDirectionRight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper*), "get_WhenTurnDirectionRight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper::*)()>(&Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper::*)()>(&Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper::*)()>(&Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper::HandleTurnDirectionChanged
// Il2CppName: HandleTurnDirectionChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper::*)(float)>(&Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper::HandleTurnDirectionChanged)> {
  static const MethodInfo* get() {
    static auto* dir = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper*), "HandleTurnDirectionChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dir});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper::InjectAllLocomotionTurnerInteractorEventsWrapper
// Il2CppName: InjectAllLocomotionTurnerInteractorEventsWrapper
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper::*)(::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor*)>(&Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper::InjectAllLocomotionTurnerInteractorEventsWrapper)> {
  static const MethodInfo* get() {
    static auto* turner = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Locomotion", "LocomotionTurnerInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper*), "InjectAllLocomotionTurnerInteractorEventsWrapper", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{turner});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper::InjectTurner
// Il2CppName: InjectTurner
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper::*)(::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor*)>(&Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper::InjectTurner)> {
  static const MethodInfo* get() {
    static auto* turner = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Locomotion", "LocomotionTurnerInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper*), "InjectTurner", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{turner});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
