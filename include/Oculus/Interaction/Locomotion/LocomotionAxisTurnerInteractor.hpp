// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.Interactor`2
#include "Oculus/Interaction/Interactor_2.hpp"
// Including type: Oculus.Interaction.Input.IAxis1D
#include "Oculus/Interaction/Input/IAxis1D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction::Locomotion
namespace Oculus::Interaction::Locomotion {
  // Forward declaring type: LocomotionAxisTurnerInteractable
  class LocomotionAxisTurnerInteractable;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Object because it is already included!
}
// Forward declaring namespace: Oculus::Interaction::Input
namespace Oculus::Interaction::Input {
  // Forward declaring type: IAxis2D
  class IAxis2D;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.Locomotion
namespace Oculus::Interaction::Locomotion {
  // Forward declaring type: LocomotionAxisTurnerInteractor
  class LocomotionAxisTurnerInteractor;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor*, "Oculus.Interaction.Locomotion", "LocomotionAxisTurnerInteractor");
// Type namespace: Oculus.Interaction.Locomotion
namespace Oculus::Interaction::Locomotion {
  // WARNING Size may be invalid!
  // Autogenerated type: Oculus.Interaction.Locomotion.LocomotionAxisTurnerInteractor
  // [TokenAttribute] Offset: FFFFFFFF
  class LocomotionAxisTurnerInteractor : public ::Oculus::Interaction::Interactor_2<::Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor*, ::Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractable*>/*, public ::Oculus::Interaction::Input::IAxis1D*/ {
    public:
    public:
    // private UnityEngine.Object _axis2D
    // Size: 0x8
    // Offset: 0x118
    ::UnityEngine::Object* axis2D;
    // Field size check
    static_assert(sizeof(::UnityEngine::Object*) == 0x8);
    // private Oculus.Interaction.Input.IAxis2D Axis2D
    // Size: 0x8
    // Offset: 0x120
    ::Oculus::Interaction::Input::IAxis2D* Axis2D;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Input::IAxis2D*) == 0x8);
    // private System.Single _deadZone
    // Size: 0x4
    // Offset: 0x128
    float deadZone;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single _horizontalAxisValue
    // Size: 0x4
    // Offset: 0x12C
    float horizontalAxisValue;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Creating interface conversion operator: operator ::Oculus::Interaction::Input::IAxis1D
    operator ::Oculus::Interaction::Input::IAxis1D() noexcept {
      return *reinterpret_cast<::Oculus::Interaction::Input::IAxis1D*>(this);
    }
    // Get instance field reference: private UnityEngine.Object _axis2D
    [[deprecated("Use field access instead!")]] ::UnityEngine::Object*& dyn__axis2D();
    // Get instance field reference: private Oculus.Interaction.Input.IAxis2D Axis2D
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IAxis2D*& dyn_Axis2D();
    // Get instance field reference: private System.Single _deadZone
    [[deprecated("Use field access instead!")]] float& dyn__deadZone();
    // Get instance field reference: private System.Single _horizontalAxisValue
    [[deprecated("Use field access instead!")]] float& dyn__horizontalAxisValue();
    // public System.Single get_DeadZone()
    // Offset: 0x480D824
    float get_DeadZone();
    // public System.Void set_DeadZone(System.Single value)
    // Offset: 0x480D82C
    void set_DeadZone(float value);
    // protected Oculus.Interaction.Locomotion.LocomotionAxisTurnerInteractable ComputeCandidate()
    // Offset: 0x480DADC
    ::Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractable* ComputeCandidate();
    // public System.Single Value()
    // Offset: 0x480DAE4
    float Value();
    // public System.Void InjectAllLocomotionAxisTurner(Oculus.Interaction.Input.IAxis2D axis2D)
    // Offset: 0x480DAEC
    void InjectAllLocomotionAxisTurner(::Oculus::Interaction::Input::IAxis2D* axis2D);
    // public System.Void InjectAxis2D(Oculus.Interaction.Input.IAxis2D axis2D)
    // Offset: 0x480DAF0
    void InjectAxis2D(::Oculus::Interaction::Input::IAxis2D* axis2D);
    // private System.Void <Start>b__15_0()
    // Offset: 0x480DC10
    void $Start$b__15_0();
    // public override System.Boolean get_ShouldHover()
    // Offset: 0x480D834
    // Implemented from: Oculus.Interaction.Interactor`2
    // Base method: System.Boolean Interactor_2::get_ShouldHover()
    bool get_ShouldHover();
    // public override System.Boolean get_ShouldUnhover()
    // Offset: 0x480D84C
    // Implemented from: Oculus.Interaction.Interactor`2
    // Base method: System.Boolean Interactor_2::get_ShouldUnhover()
    bool get_ShouldUnhover();
    // protected override System.Boolean ComputeShouldSelect()
    // Offset: 0x480D870
    // Implemented from: Oculus.Interaction.Interactor`2
    // Base method: System.Boolean Interactor_2::ComputeShouldSelect()
    bool ComputeShouldSelect();
    // protected override System.Boolean ComputeShouldUnselect()
    // Offset: 0x480D880
    // Implemented from: Oculus.Interaction.Interactor`2
    // Base method: System.Boolean Interactor_2::ComputeShouldUnselect()
    bool ComputeShouldUnselect();
    // protected override System.Void Awake()
    // Offset: 0x480D890
    // Implemented from: Oculus.Interaction.Interactor`2
    // Base method: System.Void Interactor_2::Awake()
    void Awake();
    // protected override System.Void OnDisable()
    // Offset: 0x480D924
    // Implemented from: Oculus.Interaction.Interactor`2
    // Base method: System.Void Interactor_2::OnDisable()
    void OnDisable();
    // protected override System.Void Start()
    // Offset: 0x480D978
    // Implemented from: Oculus.Interaction.Interactor`2
    // Base method: System.Void Interactor_2::Start()
    void Start();
    // protected override System.Void DoPreprocess()
    // Offset: 0x480DA14
    // Implemented from: Oculus.Interaction.Interactor`2
    // Base method: System.Void Interactor_2::DoPreprocess()
    void DoPreprocess();
    // public System.Void .ctor()
    // Offset: 0x480DBC0
    // Implemented from: Oculus.Interaction.Interactor`2
    // Base method: System.Void Interactor_2::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LocomotionAxisTurnerInteractor* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LocomotionAxisTurnerInteractor*, creationType>()));
    }
  }; // Oculus.Interaction.Locomotion.LocomotionAxisTurnerInteractor
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::get_DeadZone
// Il2CppName: get_DeadZone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::*)()>(&Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::get_DeadZone)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor*), "get_DeadZone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::set_DeadZone
// Il2CppName: set_DeadZone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::*)(float)>(&Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::set_DeadZone)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor*), "set_DeadZone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::ComputeCandidate
// Il2CppName: ComputeCandidate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractable* (Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::*)()>(&Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::ComputeCandidate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor*), "ComputeCandidate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::Value
// Il2CppName: Value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::*)()>(&Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::Value)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor*), "Value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::InjectAllLocomotionAxisTurner
// Il2CppName: InjectAllLocomotionAxisTurner
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::*)(::Oculus::Interaction::Input::IAxis2D*)>(&Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::InjectAllLocomotionAxisTurner)> {
  static const MethodInfo* get() {
    static auto* axis2D = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "IAxis2D")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor*), "InjectAllLocomotionAxisTurner", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{axis2D});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::InjectAxis2D
// Il2CppName: InjectAxis2D
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::*)(::Oculus::Interaction::Input::IAxis2D*)>(&Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::InjectAxis2D)> {
  static const MethodInfo* get() {
    static auto* axis2D = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "IAxis2D")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor*), "InjectAxis2D", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{axis2D});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::$Start$b__15_0
// Il2CppName: <Start>b__15_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::*)()>(&Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::$Start$b__15_0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor*), "<Start>b__15_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::get_ShouldHover
// Il2CppName: get_ShouldHover
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::*)()>(&Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::get_ShouldHover)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor*), "get_ShouldHover", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::get_ShouldUnhover
// Il2CppName: get_ShouldUnhover
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::*)()>(&Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::get_ShouldUnhover)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor*), "get_ShouldUnhover", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::ComputeShouldSelect
// Il2CppName: ComputeShouldSelect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::*)()>(&Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::ComputeShouldSelect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor*), "ComputeShouldSelect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::ComputeShouldUnselect
// Il2CppName: ComputeShouldUnselect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::*)()>(&Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::ComputeShouldUnselect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor*), "ComputeShouldUnselect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::*)()>(&Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::*)()>(&Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::*)()>(&Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::DoPreprocess
// Il2CppName: DoPreprocess
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::*)()>(&Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::DoPreprocess)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor*), "DoPreprocess", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
