// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.Locomotion.LocomotionEvent
#include "Oculus/Interaction/Locomotion/LocomotionEvent.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.Locomotion
namespace Oculus::Interaction::Locomotion {
  // Forward declaring type: ILocomotionEventHandler
  class ILocomotionEventHandler;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::Locomotion::ILocomotionEventHandler);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::Locomotion::ILocomotionEventHandler*, "Oculus.Interaction.Locomotion", "ILocomotionEventHandler");
// Type namespace: Oculus.Interaction.Locomotion
namespace Oculus::Interaction::Locomotion {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.Locomotion.ILocomotionEventHandler
  // [TokenAttribute] Offset: FFFFFFFF
  class ILocomotionEventHandler {
    public:
    // public System.Void HandleLocomotionEvent(Oculus.Interaction.Locomotion.LocomotionEvent locomotionEvent)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void HandleLocomotionEvent(::Oculus::Interaction::Locomotion::LocomotionEvent locomotionEvent);
    // public System.Void add_WhenLocomotionEventHandled(System.Action`2<Oculus.Interaction.Locomotion.LocomotionEvent,UnityEngine.Pose> value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void add_WhenLocomotionEventHandled(::System::Action_2<::Oculus::Interaction::Locomotion::LocomotionEvent, ::UnityEngine::Pose>* value);
    // public System.Void remove_WhenLocomotionEventHandled(System.Action`2<Oculus.Interaction.Locomotion.LocomotionEvent,UnityEngine.Pose> value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void remove_WhenLocomotionEventHandled(::System::Action_2<::Oculus::Interaction::Locomotion::LocomotionEvent, ::UnityEngine::Pose>* value);
  }; // Oculus.Interaction.Locomotion.ILocomotionEventHandler
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::ILocomotionEventHandler::HandleLocomotionEvent
// Il2CppName: HandleLocomotionEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Locomotion::ILocomotionEventHandler::*)(::Oculus::Interaction::Locomotion::LocomotionEvent)>(&Oculus::Interaction::Locomotion::ILocomotionEventHandler::HandleLocomotionEvent)> {
  static const MethodInfo* get() {
    static auto* locomotionEvent = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Locomotion", "LocomotionEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::ILocomotionEventHandler*), "HandleLocomotionEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{locomotionEvent});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::ILocomotionEventHandler::add_WhenLocomotionEventHandled
// Il2CppName: add_WhenLocomotionEventHandled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Locomotion::ILocomotionEventHandler::*)(::System::Action_2<::Oculus::Interaction::Locomotion::LocomotionEvent, ::UnityEngine::Pose>*)>(&Oculus::Interaction::Locomotion::ILocomotionEventHandler::add_WhenLocomotionEventHandled)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Oculus.Interaction.Locomotion", "LocomotionEvent"), ::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::ILocomotionEventHandler*), "add_WhenLocomotionEventHandled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Locomotion::ILocomotionEventHandler::remove_WhenLocomotionEventHandled
// Il2CppName: remove_WhenLocomotionEventHandled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Locomotion::ILocomotionEventHandler::*)(::System::Action_2<::Oculus::Interaction::Locomotion::LocomotionEvent, ::UnityEngine::Pose>*)>(&Oculus::Interaction::Locomotion::ILocomotionEventHandler::remove_WhenLocomotionEventHandled)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Oculus.Interaction.Locomotion", "LocomotionEvent"), ::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Locomotion::ILocomotionEventHandler*), "remove_WhenLocomotionEventHandled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
