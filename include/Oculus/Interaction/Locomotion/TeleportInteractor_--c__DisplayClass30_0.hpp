// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.Locomotion.TeleportInteractor
#include "Oculus/Interaction/Locomotion/TeleportInteractor.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
// Including type: Oculus.Interaction.Locomotion.TeleportHit
#include "Oculus/Interaction/Locomotion/TeleportHit.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction::Locomotion
namespace Oculus::Interaction::Locomotion {
  // Forward declaring type: TeleportInteractable
  class TeleportInteractable;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::Locomotion::TeleportInteractor::$$c__DisplayClass30_0, "Oculus.Interaction.Locomotion", "TeleportInteractor/<>c__DisplayClass30_0");
// Type namespace: Oculus.Interaction.Locomotion
namespace Oculus::Interaction::Locomotion {
  // Size: 0x58
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.Locomotion.TeleportInteractor/<>c__DisplayClass30_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  struct TeleportInteractor::$$c__DisplayClass30_0/*, public ::System::ValueType*/ {
    public:
    public:
    // public UnityEngine.Pose origin
    // Size: 0x1C
    // Offset: 0x0
    ::UnityEngine::Pose origin;
    // Field size check
    static_assert(sizeof(::UnityEngine::Pose) == 0x1C);
    // public System.Single bestScore
    // Size: 0x4
    // Offset: 0x1C
    float bestScore;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public Oculus.Interaction.Locomotion.TeleportInteractor <>4__this
    // Size: 0x8
    // Offset: 0x20
    ::Oculus::Interaction::Locomotion::TeleportInteractor* $$4__this;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Locomotion::TeleportInteractor*) == 0x8);
    // public Oculus.Interaction.Locomotion.TeleportInteractable bestCandidate
    // Size: 0x8
    // Offset: 0x28
    ::Oculus::Interaction::Locomotion::TeleportInteractable* bestCandidate;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Locomotion::TeleportInteractable*) == 0x8);
    // public Oculus.Interaction.Locomotion.TeleportHit bestHit
    // Size: 0x28
    // Offset: 0x30
    ::Oculus::Interaction::Locomotion::TeleportHit bestHit;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Locomotion::TeleportHit) == 0x28);
    public:
    // Creating value type constructor for type: $$c__DisplayClass30_0
    constexpr $$c__DisplayClass30_0(::UnityEngine::Pose origin_ = {}, float bestScore_ = {}, ::Oculus::Interaction::Locomotion::TeleportInteractor* $$4__this_ = {}, ::Oculus::Interaction::Locomotion::TeleportInteractable* bestCandidate_ = {}, ::Oculus::Interaction::Locomotion::TeleportHit bestHit_ = {}) noexcept : origin{origin_}, bestScore{bestScore_}, $$4__this{$$4__this_}, bestCandidate{bestCandidate_}, bestHit{bestHit_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public UnityEngine.Pose origin
    [[deprecated("Use field access instead!")]] ::UnityEngine::Pose& dyn_origin();
    // Get instance field reference: public System.Single bestScore
    [[deprecated("Use field access instead!")]] float& dyn_bestScore();
    // Get instance field reference: public Oculus.Interaction.Locomotion.TeleportInteractor <>4__this
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Locomotion::TeleportInteractor*& dyn_$$4__this();
    // Get instance field reference: public Oculus.Interaction.Locomotion.TeleportInteractable bestCandidate
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Locomotion::TeleportInteractable*& dyn_bestCandidate();
    // Get instance field reference: public Oculus.Interaction.Locomotion.TeleportHit bestHit
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Locomotion::TeleportHit& dyn_bestHit();
  }; // Oculus.Interaction.Locomotion.TeleportInteractor/<>c__DisplayClass30_0
  #pragma pack(pop)
  static check_size<sizeof(TeleportInteractor::$$c__DisplayClass30_0), 48 + sizeof(::Oculus::Interaction::Locomotion::TeleportHit)> __Oculus_Interaction_Locomotion_TeleportInteractor_$$c__DisplayClass30_0SizeCheck;
  static_assert(sizeof(TeleportInteractor::$$c__DisplayClass30_0) == 0x58);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
