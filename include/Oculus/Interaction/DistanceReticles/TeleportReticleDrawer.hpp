// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.DistanceReticles.InteractorReticle`1
#include "Oculus/Interaction/DistanceReticles/InteractorReticle_1.hpp"
// Including type: Oculus.Interaction.DistanceReticles.ReticleDataTeleport
#include "Oculus/Interaction/DistanceReticles/ReticleDataTeleport.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Component because it is already included!
  // Forward declaring type: Renderer
  class Renderer;
  // Skipping declaration: Object because it is already included!
}
// Forward declaring namespace: Oculus::Interaction::Locomotion
namespace Oculus::Interaction::Locomotion {
  // Forward declaring type: TeleportInteractor
  class TeleportInteractor;
}
// Forward declaring namespace: Oculus::Interaction::Input
namespace Oculus::Interaction::Input {
  // Forward declaring type: IAxis1D
  class IAxis1D;
}
// Forward declaring namespace: Oculus::Interaction
namespace Oculus::Interaction {
  // Forward declaring type: IActiveState
  class IActiveState;
  // Forward declaring type: IInteractorView
  class IInteractorView;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.DistanceReticles
namespace Oculus::Interaction::DistanceReticles {
  // Forward declaring type: TeleportReticleDrawer
  class TeleportReticleDrawer;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::DistanceReticles::TeleportReticleDrawer);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::DistanceReticles::TeleportReticleDrawer*, "Oculus.Interaction.DistanceReticles", "TeleportReticleDrawer");
// Type namespace: Oculus.Interaction.DistanceReticles
namespace Oculus::Interaction::DistanceReticles {
  // WARNING Size may be invalid!
  // Autogenerated type: Oculus.Interaction.DistanceReticles.TeleportReticleDrawer
  // [TokenAttribute] Offset: FFFFFFFF
  class TeleportReticleDrawer : public ::Oculus::Interaction::DistanceReticles::InteractorReticle_1<::Oculus::Interaction::DistanceReticles::ReticleDataTeleport*> {
    public:
    public:
    // private Oculus.Interaction.Locomotion.TeleportInteractor _interactor
    // Size: 0x8
    // Offset: 0x38
    ::Oculus::Interaction::Locomotion::TeleportInteractor* interactor;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Locomotion::TeleportInteractor*) == 0x8);
    // private UnityEngine.Renderer _validTargetRenderer
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::Renderer* validTargetRenderer;
    // Field size check
    static_assert(sizeof(::UnityEngine::Renderer*) == 0x8);
    // private UnityEngine.Renderer _invalidTargetRenderer
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::Renderer* invalidTargetRenderer;
    // Field size check
    static_assert(sizeof(::UnityEngine::Renderer*) == 0x8);
    // private UnityEngine.Object _progress
    // Size: 0x8
    // Offset: 0x50
    ::UnityEngine::Object* progress;
    // Field size check
    static_assert(sizeof(::UnityEngine::Object*) == 0x8);
    // private Oculus.Interaction.Input.IAxis1D Progress
    // Size: 0x8
    // Offset: 0x58
    ::Oculus::Interaction::Input::IAxis1D* Progress;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Input::IAxis1D*) == 0x8);
    // private UnityEngine.Object _highlightState
    // Size: 0x8
    // Offset: 0x60
    ::UnityEngine::Object* highlightState;
    // Field size check
    static_assert(sizeof(::UnityEngine::Object*) == 0x8);
    // private Oculus.Interaction.IActiveState HighlightState
    // Size: 0x8
    // Offset: 0x68
    ::Oculus::Interaction::IActiveState* HighlightState;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::IActiveState*) == 0x8);
    // private Oculus.Interaction.IInteractorView <Interactor>k__BackingField
    // Size: 0x8
    // Offset: 0x70
    ::Oculus::Interaction::IInteractorView* Interactor;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::IInteractorView*) == 0x8);
    public:
    // Get static field: static private readonly System.Int32 _progressKey
    static int _get__progressKey();
    // Set static field: static private readonly System.Int32 _progressKey
    static void _set__progressKey(int value);
    // Get static field: static private readonly System.Int32 _highlightKey
    static int _get__highlightKey();
    // Set static field: static private readonly System.Int32 _highlightKey
    static void _set__highlightKey(int value);
    // Get instance field reference: private Oculus.Interaction.Locomotion.TeleportInteractor _interactor
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Locomotion::TeleportInteractor*& dyn__interactor();
    // Get instance field reference: private UnityEngine.Renderer _validTargetRenderer
    [[deprecated("Use field access instead!")]] ::UnityEngine::Renderer*& dyn__validTargetRenderer();
    // Get instance field reference: private UnityEngine.Renderer _invalidTargetRenderer
    [[deprecated("Use field access instead!")]] ::UnityEngine::Renderer*& dyn__invalidTargetRenderer();
    // Get instance field reference: private UnityEngine.Object _progress
    [[deprecated("Use field access instead!")]] ::UnityEngine::Object*& dyn__progress();
    // Get instance field reference: private Oculus.Interaction.Input.IAxis1D Progress
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IAxis1D*& dyn_Progress();
    // Get instance field reference: private UnityEngine.Object _highlightState
    [[deprecated("Use field access instead!")]] ::UnityEngine::Object*& dyn__highlightState();
    // Get instance field reference: private Oculus.Interaction.IActiveState HighlightState
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::IActiveState*& dyn_HighlightState();
    // Get instance field reference: private Oculus.Interaction.IInteractorView <Interactor>k__BackingField
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::IInteractorView*& dyn_$Interactor$k__BackingField();
    // protected System.Void Awake()
    // Offset: 0x4840510
    void Awake();
    // protected System.Void Align(Oculus.Interaction.DistanceReticles.ReticleDataTeleport data)
    // Offset: 0x48406A4
    void Align(::Oculus::Interaction::DistanceReticles::ReticleDataTeleport* data);
    // protected System.Void Draw(Oculus.Interaction.DistanceReticles.ReticleDataTeleport data)
    // Offset: 0x4840B6C
    void Draw(::Oculus::Interaction::DistanceReticles::ReticleDataTeleport* data);
    // private System.Void SetReticleProgress(UnityEngine.Renderer reticle, System.Single progress)
    // Offset: 0x4840A40
    void SetReticleProgress(::UnityEngine::Renderer* reticle, float progress);
    // private System.Void SetReticleHighlight(UnityEngine.Renderer reticle, System.Boolean highlight)
    // Offset: 0x4840AD4
    void SetReticleHighlight(::UnityEngine::Renderer* reticle, bool highlight);
    // private System.Void UpdateReticle(Oculus.Interaction.DistanceReticles.ReticleDataTeleport/TeleportReticleMode reticleMode)
    // Offset: 0x4840964
    void UpdateReticle(::Oculus::Interaction::DistanceReticles::ReticleDataTeleport::TeleportReticleMode reticleMode);
    // public System.Void InjectAllTeleportReticleDrawer(Oculus.Interaction.Locomotion.TeleportInteractor interactor)
    // Offset: 0x4840C80
    void InjectAllTeleportReticleDrawer(::Oculus::Interaction::Locomotion::TeleportInteractor* interactor);
    // public System.Void InjectInteractor(Oculus.Interaction.Locomotion.TeleportInteractor interactor)
    // Offset: 0x4840C88
    void InjectInteractor(::Oculus::Interaction::Locomotion::TeleportInteractor* interactor);
    // public System.Void InjectOptionalValidTargetRenderer(UnityEngine.Renderer validTargetRenderer)
    // Offset: 0x4840C90
    void InjectOptionalValidTargetRenderer(::UnityEngine::Renderer* validTargetRenderer);
    // public System.Void InjectOptionalInalidTargetRenderer(UnityEngine.Renderer invalidTargetRenderer)
    // Offset: 0x4840C98
    void InjectOptionalInalidTargetRenderer(::UnityEngine::Renderer* invalidTargetRenderer);
    // public System.Void InjectOptionalProgress(Oculus.Interaction.Input.IAxis1D progress)
    // Offset: 0x4840CA0
    void InjectOptionalProgress(::Oculus::Interaction::Input::IAxis1D* progress);
    // static private System.Void .cctor()
    // Offset: 0x4840DB8
    static void _cctor();
    // private System.Void <Start>b__16_0()
    // Offset: 0x4840E54
    void $Start$b__16_0();
    // protected override Oculus.Interaction.IInteractorView get_Interactor()
    // Offset: 0x48404B8
    // Implemented from: Oculus.Interaction.DistanceReticles.InteractorReticle`1
    // Base method: Oculus.Interaction.IInteractorView InteractorReticle_1::get_Interactor()
    ::Oculus::Interaction::IInteractorView* get_Interactor();
    // protected override System.Void set_Interactor(Oculus.Interaction.IInteractorView value)
    // Offset: 0x48404C0
    // Implemented from: Oculus.Interaction.DistanceReticles.InteractorReticle`1
    // Base method: System.Void InteractorReticle_1::set_Interactor(Oculus.Interaction.IInteractorView value)
    void set_Interactor(::Oculus::Interaction::IInteractorView* value);
    // protected override UnityEngine.Component get_InteractableComponent()
    // Offset: 0x48404C8
    // Implemented from: Oculus.Interaction.DistanceReticles.InteractorReticle`1
    // Base method: UnityEngine.Component InteractorReticle_1::get_InteractableComponent()
    ::UnityEngine::Component* get_InteractableComponent();
    // protected override System.Void Start()
    // Offset: 0x48405DC
    // Implemented from: Oculus.Interaction.DistanceReticles.InteractorReticle`1
    // Base method: System.Void InteractorReticle_1::Start()
    void Start();
    // protected override System.Void Hide()
    // Offset: 0x4840B84
    // Implemented from: Oculus.Interaction.DistanceReticles.InteractorReticle`1
    // Base method: System.Void InteractorReticle_1::Hide()
    void Hide();
    // public System.Void .ctor()
    // Offset: 0x4840D70
    // Implemented from: Oculus.Interaction.DistanceReticles.InteractorReticle`1
    // Base method: System.Void InteractorReticle_1::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TeleportReticleDrawer* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TeleportReticleDrawer*, creationType>()));
    }
  }; // Oculus.Interaction.DistanceReticles.TeleportReticleDrawer
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::*)()>(&Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceReticles::TeleportReticleDrawer*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::Align
// Il2CppName: Align
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::*)(::Oculus::Interaction::DistanceReticles::ReticleDataTeleport*)>(&Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::Align)> {
  static const MethodInfo* get() {
    static auto* data = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.DistanceReticles", "ReticleDataTeleport")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceReticles::TeleportReticleDrawer*), "Align", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::Draw
// Il2CppName: Draw
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::*)(::Oculus::Interaction::DistanceReticles::ReticleDataTeleport*)>(&Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::Draw)> {
  static const MethodInfo* get() {
    static auto* data = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.DistanceReticles", "ReticleDataTeleport")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceReticles::TeleportReticleDrawer*), "Draw", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::SetReticleProgress
// Il2CppName: SetReticleProgress
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::*)(::UnityEngine::Renderer*, float)>(&Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::SetReticleProgress)> {
  static const MethodInfo* get() {
    static auto* reticle = &::il2cpp_utils::GetClassFromName("UnityEngine", "Renderer")->byval_arg;
    static auto* progress = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceReticles::TeleportReticleDrawer*), "SetReticleProgress", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{reticle, progress});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::SetReticleHighlight
// Il2CppName: SetReticleHighlight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::*)(::UnityEngine::Renderer*, bool)>(&Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::SetReticleHighlight)> {
  static const MethodInfo* get() {
    static auto* reticle = &::il2cpp_utils::GetClassFromName("UnityEngine", "Renderer")->byval_arg;
    static auto* highlight = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceReticles::TeleportReticleDrawer*), "SetReticleHighlight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{reticle, highlight});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::UpdateReticle
// Il2CppName: UpdateReticle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::*)(::Oculus::Interaction::DistanceReticles::ReticleDataTeleport::TeleportReticleMode)>(&Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::UpdateReticle)> {
  static const MethodInfo* get() {
    static auto* reticleMode = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.DistanceReticles", "ReticleDataTeleport/TeleportReticleMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceReticles::TeleportReticleDrawer*), "UpdateReticle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{reticleMode});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::InjectAllTeleportReticleDrawer
// Il2CppName: InjectAllTeleportReticleDrawer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::*)(::Oculus::Interaction::Locomotion::TeleportInteractor*)>(&Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::InjectAllTeleportReticleDrawer)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Locomotion", "TeleportInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceReticles::TeleportReticleDrawer*), "InjectAllTeleportReticleDrawer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::InjectInteractor
// Il2CppName: InjectInteractor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::*)(::Oculus::Interaction::Locomotion::TeleportInteractor*)>(&Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::InjectInteractor)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Locomotion", "TeleportInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceReticles::TeleportReticleDrawer*), "InjectInteractor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::InjectOptionalValidTargetRenderer
// Il2CppName: InjectOptionalValidTargetRenderer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::*)(::UnityEngine::Renderer*)>(&Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::InjectOptionalValidTargetRenderer)> {
  static const MethodInfo* get() {
    static auto* validTargetRenderer = &::il2cpp_utils::GetClassFromName("UnityEngine", "Renderer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceReticles::TeleportReticleDrawer*), "InjectOptionalValidTargetRenderer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{validTargetRenderer});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::InjectOptionalInalidTargetRenderer
// Il2CppName: InjectOptionalInalidTargetRenderer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::*)(::UnityEngine::Renderer*)>(&Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::InjectOptionalInalidTargetRenderer)> {
  static const MethodInfo* get() {
    static auto* invalidTargetRenderer = &::il2cpp_utils::GetClassFromName("UnityEngine", "Renderer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceReticles::TeleportReticleDrawer*), "InjectOptionalInalidTargetRenderer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{invalidTargetRenderer});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::InjectOptionalProgress
// Il2CppName: InjectOptionalProgress
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::*)(::Oculus::Interaction::Input::IAxis1D*)>(&Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::InjectOptionalProgress)> {
  static const MethodInfo* get() {
    static auto* progress = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "IAxis1D")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceReticles::TeleportReticleDrawer*), "InjectOptionalProgress", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{progress});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceReticles::TeleportReticleDrawer*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::$Start$b__16_0
// Il2CppName: <Start>b__16_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::*)()>(&Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::$Start$b__16_0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceReticles::TeleportReticleDrawer*), "<Start>b__16_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::get_Interactor
// Il2CppName: get_Interactor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::IInteractorView* (Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::*)()>(&Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::get_Interactor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceReticles::TeleportReticleDrawer*), "get_Interactor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::set_Interactor
// Il2CppName: set_Interactor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::*)(::Oculus::Interaction::IInteractorView*)>(&Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::set_Interactor)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "IInteractorView")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceReticles::TeleportReticleDrawer*), "set_Interactor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::get_InteractableComponent
// Il2CppName: get_InteractableComponent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Component* (Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::*)()>(&Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::get_InteractableComponent)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceReticles::TeleportReticleDrawer*), "get_InteractableComponent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::*)()>(&Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceReticles::TeleportReticleDrawer*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::Hide
// Il2CppName: Hide
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::*)()>(&Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::Hide)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceReticles::TeleportReticleDrawer*), "Hide", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceReticles::TeleportReticleDrawer::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
