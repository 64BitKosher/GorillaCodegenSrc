// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.DistanceReticles.DistantInteractionLineVisual
#include "Oculus/Interaction/DistanceReticles/DistantInteractionLineVisual.hpp"
// Including type: Oculus.Interaction.TubePoint
#include "Oculus/Interaction/TubePoint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction
namespace Oculus::Interaction {
  // Forward declaring type: TubeRenderer
  class TubeRenderer;
  // Forward declaring type: IDistanceInteractor
  class IDistanceInteractor;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.DistanceReticles
namespace Oculus::Interaction::DistanceReticles {
  // Forward declaring type: DistantInteractionTubeVisual
  class DistantInteractionTubeVisual;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::DistanceReticles::DistantInteractionTubeVisual);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::DistanceReticles::DistantInteractionTubeVisual*, "Oculus.Interaction.DistanceReticles", "DistantInteractionTubeVisual");
// Type namespace: Oculus.Interaction.DistanceReticles
namespace Oculus::Interaction::DistanceReticles {
  // Size: 0x78
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.DistanceReticles.DistantInteractionTubeVisual
  // [TokenAttribute] Offset: FFFFFFFF
  class DistantInteractionTubeVisual : public ::Oculus::Interaction::DistanceReticles::DistantInteractionLineVisual {
    public:
    public:
    // private Oculus.Interaction.TubeRenderer _tubeRenderer
    // Size: 0x8
    // Offset: 0x68
    ::Oculus::Interaction::TubeRenderer* tubeRenderer;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::TubeRenderer*) == 0x8);
    // private Oculus.Interaction.TubePoint[] _tubePoints
    // Size: 0x8
    // Offset: 0x70
    ::ArrayW<::Oculus::Interaction::TubePoint> tubePoints;
    // Field size check
    static_assert(sizeof(::ArrayW<::Oculus::Interaction::TubePoint>) == 0x8);
    public:
    // Get instance field reference: private Oculus.Interaction.TubeRenderer _tubeRenderer
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::TubeRenderer*& dyn__tubeRenderer();
    // Get instance field reference: private Oculus.Interaction.TubePoint[] _tubePoints
    [[deprecated("Use field access instead!")]] ::ArrayW<::Oculus::Interaction::TubePoint>& dyn__tubePoints();
    // private System.Void InitializeArcPoints(UnityEngine.Vector3[] linePoints)
    // Offset: 0x483DE7C
    void InitializeArcPoints(::ArrayW<::UnityEngine::Vector3> linePoints);
    // public System.Void InjectAllDistantInteractionPolylineVisual(Oculus.Interaction.IDistanceInteractor interactor)
    // Offset: 0x483E188
    void InjectAllDistantInteractionPolylineVisual(::Oculus::Interaction::IDistanceInteractor* interactor);
    // protected override System.Void Start()
    // Offset: 0x483DE4C
    // Implemented from: Oculus.Interaction.DistanceReticles.DistantInteractionLineVisual
    // Base method: System.Void DistantInteractionLineVisual::Start()
    void Start();
    // protected override System.Void RenderLine(UnityEngine.Vector3[] linePoints)
    // Offset: 0x483DE50
    // Implemented from: Oculus.Interaction.DistanceReticles.DistantInteractionLineVisual
    // Base method: System.Void DistantInteractionLineVisual::RenderLine(UnityEngine.Vector3[] linePoints)
    void RenderLine(::ArrayW<::UnityEngine::Vector3> linePoints);
    // protected override System.Void HideLine()
    // Offset: 0x483E16C
    // Implemented from: Oculus.Interaction.DistanceReticles.DistantInteractionLineVisual
    // Base method: System.Void DistantInteractionLineVisual::HideLine()
    void HideLine();
    // public System.Void .ctor()
    // Offset: 0x483E18C
    // Implemented from: Oculus.Interaction.DistanceReticles.DistantInteractionLineVisual
    // Base method: System.Void DistantInteractionLineVisual::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DistantInteractionTubeVisual* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceReticles::DistantInteractionTubeVisual::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DistantInteractionTubeVisual*, creationType>()));
    }
  }; // Oculus.Interaction.DistanceReticles.DistantInteractionTubeVisual
  #pragma pack(pop)
  static check_size<sizeof(DistantInteractionTubeVisual), 112 + sizeof(::ArrayW<::Oculus::Interaction::TubePoint>)> __Oculus_Interaction_DistanceReticles_DistantInteractionTubeVisualSizeCheck;
  static_assert(sizeof(DistantInteractionTubeVisual) == 0x78);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::DistanceReticles::DistantInteractionTubeVisual::InitializeArcPoints
// Il2CppName: InitializeArcPoints
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceReticles::DistantInteractionTubeVisual::*)(::ArrayW<::UnityEngine::Vector3>)>(&Oculus::Interaction::DistanceReticles::DistantInteractionTubeVisual::InitializeArcPoints)> {
  static const MethodInfo* get() {
    static auto* linePoints = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceReticles::DistantInteractionTubeVisual*), "InitializeArcPoints", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{linePoints});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceReticles::DistantInteractionTubeVisual::InjectAllDistantInteractionPolylineVisual
// Il2CppName: InjectAllDistantInteractionPolylineVisual
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceReticles::DistantInteractionTubeVisual::*)(::Oculus::Interaction::IDistanceInteractor*)>(&Oculus::Interaction::DistanceReticles::DistantInteractionTubeVisual::InjectAllDistantInteractionPolylineVisual)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "IDistanceInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceReticles::DistantInteractionTubeVisual*), "InjectAllDistantInteractionPolylineVisual", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceReticles::DistantInteractionTubeVisual::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceReticles::DistantInteractionTubeVisual::*)()>(&Oculus::Interaction::DistanceReticles::DistantInteractionTubeVisual::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceReticles::DistantInteractionTubeVisual*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceReticles::DistantInteractionTubeVisual::RenderLine
// Il2CppName: RenderLine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceReticles::DistantInteractionTubeVisual::*)(::ArrayW<::UnityEngine::Vector3>)>(&Oculus::Interaction::DistanceReticles::DistantInteractionTubeVisual::RenderLine)> {
  static const MethodInfo* get() {
    static auto* linePoints = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceReticles::DistantInteractionTubeVisual*), "RenderLine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{linePoints});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceReticles::DistantInteractionTubeVisual::HideLine
// Il2CppName: HideLine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceReticles::DistantInteractionTubeVisual::*)()>(&Oculus::Interaction::DistanceReticles::DistantInteractionTubeVisual::HideLine)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceReticles::DistantInteractionTubeVisual*), "HideLine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceReticles::DistantInteractionTubeVisual::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
