// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.DistanceReticles.InteractorReticle`1
#include "Oculus/Interaction/DistanceReticles/InteractorReticle_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction::DistanceReticles
namespace Oculus::Interaction::DistanceReticles {
  // Forward declaring type: ReticleDataGhost
  class ReticleDataGhost;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Object because it is already included!
  // Skipping declaration: Component because it is already included!
}
// Forward declaring namespace: Oculus::Interaction::HandGrab
namespace Oculus::Interaction::HandGrab {
  // Forward declaring type: IHandGrabInteractor
  class IHandGrabInteractor;
  // Forward declaring type: IHandGrabState
  class IHandGrabState;
  // Forward declaring type: HandPose
  class HandPose;
}
// Forward declaring namespace: Oculus::Interaction::Input
namespace Oculus::Interaction::Input {
  // Forward declaring type: SyntheticHand
  class SyntheticHand;
  // Forward declaring type: ITrackingToWorldTransformer
  class ITrackingToWorldTransformer;
  // Forward declaring type: HandFingerFlags
  struct HandFingerFlags;
}
// Forward declaring namespace: Oculus::Interaction
namespace Oculus::Interaction {
  // Forward declaring type: IHandVisual
  class IHandVisual;
  // Forward declaring type: IInteractorView
  class IInteractorView;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.DistanceReticles
namespace Oculus::Interaction::DistanceReticles {
  // Forward declaring type: ReticleGhostDrawer
  class ReticleGhostDrawer;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::DistanceReticles::ReticleGhostDrawer);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::DistanceReticles::ReticleGhostDrawer*, "Oculus.Interaction.DistanceReticles", "ReticleGhostDrawer");
// Type namespace: Oculus.Interaction.DistanceReticles
namespace Oculus::Interaction::DistanceReticles {
  // WARNING Size may be invalid!
  // Autogenerated type: Oculus.Interaction.DistanceReticles.ReticleGhostDrawer
  // [TokenAttribute] Offset: FFFFFFFF
  class ReticleGhostDrawer : public ::Oculus::Interaction::DistanceReticles::InteractorReticle_1<::Oculus::Interaction::DistanceReticles::ReticleDataGhost*> {
    public:
    public:
    // private UnityEngine.Object _handGrabInteractor
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::Object* handGrabInteractor;
    // Field size check
    static_assert(sizeof(::UnityEngine::Object*) == 0x8);
    // private Oculus.Interaction.HandGrab.IHandGrabInteractor <HandGrabInteractor>k__BackingField
    // Size: 0x8
    // Offset: 0x40
    ::Oculus::Interaction::HandGrab::IHandGrabInteractor* HandGrabInteractor;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::HandGrab::IHandGrabInteractor*) == 0x8);
    // private Oculus.Interaction.Input.SyntheticHand _syntheticHand
    // Size: 0x8
    // Offset: 0x48
    ::Oculus::Interaction::Input::SyntheticHand* syntheticHand;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Input::SyntheticHand*) == 0x8);
    // private UnityEngine.Object _handVisual
    // Size: 0x8
    // Offset: 0x50
    ::UnityEngine::Object* handVisual;
    // Field size check
    static_assert(sizeof(::UnityEngine::Object*) == 0x8);
    // private Oculus.Interaction.IHandVisual HandVisual
    // Size: 0x8
    // Offset: 0x58
    ::Oculus::Interaction::IHandVisual* HandVisual;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::IHandVisual*) == 0x8);
    // private System.Boolean _areFingersFree
    // Size: 0x1
    // Offset: 0x60
    bool areFingersFree;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _isWristFree
    // Size: 0x1
    // Offset: 0x61
    bool isWristFree;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private Oculus.Interaction.IInteractorView <Interactor>k__BackingField
    // Size: 0x8
    // Offset: 0x68
    ::Oculus::Interaction::IInteractorView* Interactor;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::IInteractorView*) == 0x8);
    // private Oculus.Interaction.Input.ITrackingToWorldTransformer Transformer
    // Size: 0x8
    // Offset: 0x70
    ::Oculus::Interaction::Input::ITrackingToWorldTransformer* Transformer;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Input::ITrackingToWorldTransformer*) == 0x8);
    public:
    // Get instance field reference: private UnityEngine.Object _handGrabInteractor
    [[deprecated("Use field access instead!")]] ::UnityEngine::Object*& dyn__handGrabInteractor();
    // Get instance field reference: private Oculus.Interaction.HandGrab.IHandGrabInteractor <HandGrabInteractor>k__BackingField
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::IHandGrabInteractor*& dyn_$HandGrabInteractor$k__BackingField();
    // Get instance field reference: private Oculus.Interaction.Input.SyntheticHand _syntheticHand
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::SyntheticHand*& dyn__syntheticHand();
    // Get instance field reference: private UnityEngine.Object _handVisual
    [[deprecated("Use field access instead!")]] ::UnityEngine::Object*& dyn__handVisual();
    // Get instance field reference: private Oculus.Interaction.IHandVisual HandVisual
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::IHandVisual*& dyn_HandVisual();
    // Get instance field reference: private System.Boolean _areFingersFree
    [[deprecated("Use field access instead!")]] bool& dyn__areFingersFree();
    // Get instance field reference: private System.Boolean _isWristFree
    [[deprecated("Use field access instead!")]] bool& dyn__isWristFree();
    // Get instance field reference: private Oculus.Interaction.IInteractorView <Interactor>k__BackingField
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::IInteractorView*& dyn_$Interactor$k__BackingField();
    // Get instance field reference: private Oculus.Interaction.Input.ITrackingToWorldTransformer Transformer
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::ITrackingToWorldTransformer*& dyn_Transformer();
    // private Oculus.Interaction.HandGrab.IHandGrabInteractor get_HandGrabInteractor()
    // Offset: 0x483E3E4
    ::Oculus::Interaction::HandGrab::IHandGrabInteractor* get_HandGrabInteractor();
    // private System.Void set_HandGrabInteractor(Oculus.Interaction.HandGrab.IHandGrabInteractor value)
    // Offset: 0x483E3EC
    void set_HandGrabInteractor(::Oculus::Interaction::HandGrab::IHandGrabInteractor* value);
    // protected System.Void Awake()
    // Offset: 0x483E4F8
    void Awake();
    // private System.Void UpdateHandPose(Oculus.Interaction.HandGrab.IHandGrabState snapper)
    // Offset: 0x483E6C8
    void UpdateHandPose(::Oculus::Interaction::HandGrab::IHandGrabState* snapper);
    // private System.Void UpdateFingers(Oculus.Interaction.HandGrab.HandPose handPose, Oculus.Interaction.Input.HandFingerFlags grabbingFingers)
    // Offset: 0x483E9B4
    void UpdateFingers(::Oculus::Interaction::HandGrab::HandPose* handPose, ::Oculus::Interaction::Input::HandFingerFlags grabbingFingers);
    // private System.Boolean FreeFingers()
    // Offset: 0x483E928
    bool FreeFingers();
    // private System.Boolean FreeWrist()
    // Offset: 0x483E96C
    bool FreeWrist();
    // protected System.Void Align(Oculus.Interaction.DistanceReticles.ReticleDataGhost data)
    // Offset: 0x483EA88
    void Align(::Oculus::Interaction::DistanceReticles::ReticleDataGhost* data);
    // protected System.Void Draw(Oculus.Interaction.DistanceReticles.ReticleDataGhost data)
    // Offset: 0x483EAB8
    void Draw(::Oculus::Interaction::DistanceReticles::ReticleDataGhost* data);
    // public System.Void InjectAllReticleGhostDrawer(Oculus.Interaction.HandGrab.IHandGrabInteractor handGrabInteractor, Oculus.Interaction.Input.SyntheticHand syntheticHand, Oculus.Interaction.IHandVisual visualHand)
    // Offset: 0x483EC20
    void InjectAllReticleGhostDrawer(::Oculus::Interaction::HandGrab::IHandGrabInteractor* handGrabInteractor, ::Oculus::Interaction::Input::SyntheticHand* syntheticHand, ::Oculus::Interaction::IHandVisual* visualHand);
    // public System.Void InjectHandGrabInteractor(Oculus.Interaction.HandGrab.IHandGrabInteractor handGrabInteractor)
    // Offset: 0x483EC5C
    void InjectHandGrabInteractor(::Oculus::Interaction::HandGrab::IHandGrabInteractor* handGrabInteractor);
    // public System.Void InjectSyntheticHand(Oculus.Interaction.Input.SyntheticHand syntheticHand)
    // Offset: 0x483EE30
    void InjectSyntheticHand(::Oculus::Interaction::Input::SyntheticHand* syntheticHand);
    // public System.Void InjectVisualHand(Oculus.Interaction.IHandVisual visualHand)
    // Offset: 0x483ED60
    void InjectVisualHand(::Oculus::Interaction::IHandVisual* visualHand);
    // private System.Void <Start>b__18_0()
    // Offset: 0x483EE88
    void $Start$b__18_0();
    // protected override Oculus.Interaction.IInteractorView get_Interactor()
    // Offset: 0x483E3F4
    // Implemented from: Oculus.Interaction.DistanceReticles.InteractorReticle`1
    // Base method: Oculus.Interaction.IInteractorView InteractorReticle_1::get_Interactor()
    ::Oculus::Interaction::IInteractorView* get_Interactor();
    // protected override System.Void set_Interactor(Oculus.Interaction.IInteractorView value)
    // Offset: 0x483E3FC
    // Implemented from: Oculus.Interaction.DistanceReticles.InteractorReticle`1
    // Base method: System.Void InteractorReticle_1::set_Interactor(Oculus.Interaction.IInteractorView value)
    void set_Interactor(::Oculus::Interaction::IInteractorView* value);
    // protected override UnityEngine.Component get_InteractableComponent()
    // Offset: 0x483E404
    // Implemented from: Oculus.Interaction.DistanceReticles.InteractorReticle`1
    // Base method: UnityEngine.Component InteractorReticle_1::get_InteractableComponent()
    ::UnityEngine::Component* get_InteractableComponent();
    // protected override System.Void Start()
    // Offset: 0x483E5D8
    // Implemented from: Oculus.Interaction.DistanceReticles.InteractorReticle`1
    // Base method: System.Void InteractorReticle_1::Start()
    void Start();
    // protected override System.Void Hide()
    // Offset: 0x483EB60
    // Implemented from: Oculus.Interaction.DistanceReticles.InteractorReticle`1
    // Base method: System.Void InteractorReticle_1::Hide()
    void Hide();
    // public System.Void .ctor()
    // Offset: 0x483EE38
    // Implemented from: Oculus.Interaction.DistanceReticles.InteractorReticle`1
    // Base method: System.Void InteractorReticle_1::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ReticleGhostDrawer* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ReticleGhostDrawer*, creationType>()));
    }
  }; // Oculus.Interaction.DistanceReticles.ReticleGhostDrawer
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::get_HandGrabInteractor
// Il2CppName: get_HandGrabInteractor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::HandGrab::IHandGrabInteractor* (Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::*)()>(&Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::get_HandGrabInteractor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceReticles::ReticleGhostDrawer*), "get_HandGrabInteractor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::set_HandGrabInteractor
// Il2CppName: set_HandGrabInteractor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::*)(::Oculus::Interaction::HandGrab::IHandGrabInteractor*)>(&Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::set_HandGrabInteractor)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "IHandGrabInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceReticles::ReticleGhostDrawer*), "set_HandGrabInteractor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::*)()>(&Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceReticles::ReticleGhostDrawer*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::UpdateHandPose
// Il2CppName: UpdateHandPose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::*)(::Oculus::Interaction::HandGrab::IHandGrabState*)>(&Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::UpdateHandPose)> {
  static const MethodInfo* get() {
    static auto* snapper = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "IHandGrabState")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceReticles::ReticleGhostDrawer*), "UpdateHandPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{snapper});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::UpdateFingers
// Il2CppName: UpdateFingers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::*)(::Oculus::Interaction::HandGrab::HandPose*, ::Oculus::Interaction::Input::HandFingerFlags)>(&Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::UpdateFingers)> {
  static const MethodInfo* get() {
    static auto* handPose = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "HandPose")->byval_arg;
    static auto* grabbingFingers = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "HandFingerFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceReticles::ReticleGhostDrawer*), "UpdateFingers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handPose, grabbingFingers});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::FreeFingers
// Il2CppName: FreeFingers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::*)()>(&Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::FreeFingers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceReticles::ReticleGhostDrawer*), "FreeFingers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::FreeWrist
// Il2CppName: FreeWrist
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::*)()>(&Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::FreeWrist)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceReticles::ReticleGhostDrawer*), "FreeWrist", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::Align
// Il2CppName: Align
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::*)(::Oculus::Interaction::DistanceReticles::ReticleDataGhost*)>(&Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::Align)> {
  static const MethodInfo* get() {
    static auto* data = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.DistanceReticles", "ReticleDataGhost")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceReticles::ReticleGhostDrawer*), "Align", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::Draw
// Il2CppName: Draw
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::*)(::Oculus::Interaction::DistanceReticles::ReticleDataGhost*)>(&Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::Draw)> {
  static const MethodInfo* get() {
    static auto* data = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.DistanceReticles", "ReticleDataGhost")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceReticles::ReticleGhostDrawer*), "Draw", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::InjectAllReticleGhostDrawer
// Il2CppName: InjectAllReticleGhostDrawer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::*)(::Oculus::Interaction::HandGrab::IHandGrabInteractor*, ::Oculus::Interaction::Input::SyntheticHand*, ::Oculus::Interaction::IHandVisual*)>(&Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::InjectAllReticleGhostDrawer)> {
  static const MethodInfo* get() {
    static auto* handGrabInteractor = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "IHandGrabInteractor")->byval_arg;
    static auto* syntheticHand = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "SyntheticHand")->byval_arg;
    static auto* visualHand = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "IHandVisual")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceReticles::ReticleGhostDrawer*), "InjectAllReticleGhostDrawer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handGrabInteractor, syntheticHand, visualHand});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::InjectHandGrabInteractor
// Il2CppName: InjectHandGrabInteractor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::*)(::Oculus::Interaction::HandGrab::IHandGrabInteractor*)>(&Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::InjectHandGrabInteractor)> {
  static const MethodInfo* get() {
    static auto* handGrabInteractor = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.HandGrab", "IHandGrabInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceReticles::ReticleGhostDrawer*), "InjectHandGrabInteractor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handGrabInteractor});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::InjectSyntheticHand
// Il2CppName: InjectSyntheticHand
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::*)(::Oculus::Interaction::Input::SyntheticHand*)>(&Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::InjectSyntheticHand)> {
  static const MethodInfo* get() {
    static auto* syntheticHand = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "SyntheticHand")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceReticles::ReticleGhostDrawer*), "InjectSyntheticHand", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{syntheticHand});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::InjectVisualHand
// Il2CppName: InjectVisualHand
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::*)(::Oculus::Interaction::IHandVisual*)>(&Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::InjectVisualHand)> {
  static const MethodInfo* get() {
    static auto* visualHand = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "IHandVisual")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceReticles::ReticleGhostDrawer*), "InjectVisualHand", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{visualHand});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::$Start$b__18_0
// Il2CppName: <Start>b__18_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::*)()>(&Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::$Start$b__18_0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceReticles::ReticleGhostDrawer*), "<Start>b__18_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::get_Interactor
// Il2CppName: get_Interactor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::IInteractorView* (Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::*)()>(&Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::get_Interactor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceReticles::ReticleGhostDrawer*), "get_Interactor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::set_Interactor
// Il2CppName: set_Interactor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::*)(::Oculus::Interaction::IInteractorView*)>(&Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::set_Interactor)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "IInteractorView")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceReticles::ReticleGhostDrawer*), "set_Interactor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::get_InteractableComponent
// Il2CppName: get_InteractableComponent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Component* (Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::*)()>(&Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::get_InteractableComponent)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceReticles::ReticleGhostDrawer*), "get_InteractableComponent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::*)()>(&Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceReticles::ReticleGhostDrawer*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::Hide
// Il2CppName: Hide
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::*)()>(&Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::Hide)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceReticles::ReticleGhostDrawer*), "Hide", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceReticles::ReticleGhostDrawer::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
