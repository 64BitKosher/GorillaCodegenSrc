// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: Oculus.Interaction.InteractorStateChangeArgs
#include "Oculus/Interaction/InteractorStateChangeArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction::DistanceReticles
namespace Oculus::Interaction::DistanceReticles {
  // Forward declaring type: IReticleData
  class IReticleData;
}
// Forward declaring namespace: Oculus::Interaction
namespace Oculus::Interaction {
  // Forward declaring type: IInteractorView
  class IInteractorView;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Component because it is already included!
}
// Completed forward declares
// Type namespace: Oculus.Interaction.DistanceReticles
namespace Oculus::Interaction::DistanceReticles {
  // Forward declaring type: InteractorReticle`1<TReticleData>
  template<typename TReticleData>
  class InteractorReticle_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::Oculus::Interaction::DistanceReticles::InteractorReticle_1, "Oculus.Interaction.DistanceReticles", "InteractorReticle`1");
// Type namespace: Oculus.Interaction.DistanceReticles
namespace Oculus::Interaction::DistanceReticles {
  // WARNING Size may be invalid!
  // Autogenerated type: Oculus.Interaction.DistanceReticles.InteractorReticle`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename TReticleData>
  class InteractorReticle_1 : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private System.Boolean _visibleDuringSelect
    // Size: 0x1
    // Offset: 0x0
    bool visibleDuringSelect;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // protected System.Boolean _started
    // Size: 0x1
    // Offset: 0x0
    bool started;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // protected TReticleData _targetData
    // Size: 0xFFFFFFFF
    // Offset: 0x0
    TReticleData targetData;
    // private System.Boolean _drawn
    // Size: 0x1
    // Offset: 0x0
    bool drawn;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Autogenerated instance field getter
    // Get instance field: private System.Boolean _visibleDuringSelect
    [[deprecated("Use field access instead!")]] bool& dyn__visibleDuringSelect() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceReticles::InteractorReticle_1::dyn__visibleDuringSelect");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_visibleDuringSelect"))->offset;
      return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: protected System.Boolean _started
    [[deprecated("Use field access instead!")]] bool& dyn__started() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceReticles::InteractorReticle_1::dyn__started");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
      return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: protected TReticleData _targetData
    [[deprecated("Use field access instead!")]] TReticleData& dyn__targetData() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceReticles::InteractorReticle_1::dyn__targetData");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetData"))->offset;
      return *reinterpret_cast<TReticleData*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Boolean _drawn
    [[deprecated("Use field access instead!")]] bool& dyn__drawn() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceReticles::InteractorReticle_1::dyn__drawn");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_drawn"))->offset;
      return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // private System.Boolean get_VisibleDuringSelect()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_VisibleDuringSelect() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceReticles::InteractorReticle_1::get_VisibleDuringSelect");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_VisibleDuringSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // private System.Void set_VisibleDuringSelect(System.Boolean value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_VisibleDuringSelect(bool value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceReticles::InteractorReticle_1::set_VisibleDuringSelect");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_VisibleDuringSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // protected Oculus.Interaction.IInteractorView get_Interactor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Oculus::Interaction::IInteractorView* get_Interactor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceReticles::InteractorReticle_1::get_Interactor");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::DistanceReticles::InteractorReticle_1<TReticleData>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::IInteractorView*, false>(this, ___internal__method);
    }
    // protected System.Void set_Interactor(Oculus.Interaction.IInteractorView value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_Interactor(::Oculus::Interaction::IInteractorView* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceReticles::InteractorReticle_1::set_Interactor");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::DistanceReticles::InteractorReticle_1<TReticleData>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // protected UnityEngine.Component get_InteractableComponent()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::Component* get_InteractableComponent() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceReticles::InteractorReticle_1::get_InteractableComponent");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::DistanceReticles::InteractorReticle_1<TReticleData>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Component*, false>(this, ___internal__method);
    }
    // protected System.Void Start()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Start() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceReticles::InteractorReticle_1::Start");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::DistanceReticles::InteractorReticle_1<TReticleData>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // protected System.Void OnEnable()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void OnEnable() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceReticles::InteractorReticle_1::OnEnable");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::DistanceReticles::InteractorReticle_1<TReticleData>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // protected System.Void OnDisable()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void OnDisable() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceReticles::InteractorReticle_1::OnDisable");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::DistanceReticles::InteractorReticle_1<TReticleData>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // private System.Void HandleStateChanged(Oculus.Interaction.InteractorStateChangeArgs args)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void HandleStateChanged(::Oculus::Interaction::InteractorStateChangeArgs args) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceReticles::InteractorReticle_1::HandleStateChanged");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
    }
    // private System.Void HandlePostProcessed()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void HandlePostProcessed() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceReticles::InteractorReticle_1::HandlePostProcessed");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePostProcessed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // private System.Void InteractableSet(UnityEngine.Component interactable)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void InteractableSet(::UnityEngine::Component* interactable) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceReticles::InteractorReticle_1::InteractableSet");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InteractableSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
    }
    // private System.Void InteractableUnset()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void InteractableUnset() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceReticles::InteractorReticle_1::InteractableUnset");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InteractableUnset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // protected System.Void Draw(TReticleData data)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Draw(TReticleData data) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceReticles::InteractorReticle_1::Draw");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::DistanceReticles::InteractorReticle_1<TReticleData>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
    }
    // protected System.Void Align(TReticleData data)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Align(TReticleData data) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceReticles::InteractorReticle_1::Align");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::DistanceReticles::InteractorReticle_1<TReticleData>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
    }
    // protected System.Void Hide()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Hide() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceReticles::InteractorReticle_1::Hide");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::DistanceReticles::InteractorReticle_1<TReticleData>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // protected System.Void .ctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static InteractorReticle_1<TReticleData>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceReticles::InteractorReticle_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<InteractorReticle_1<TReticleData>*, creationType>()));
    }
  }; // Oculus.Interaction.DistanceReticles.InteractorReticle`1
  // Could not write size check! Type: Oculus.Interaction.DistanceReticles.InteractorReticle`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
