// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.PokeInteractable
#include "Oculus/Interaction/PokeInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: AnimationCurve
  class AnimationCurve;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::PokeInteractable::RecoilAssistConfig);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::PokeInteractable::RecoilAssistConfig*, "Oculus.Interaction", "PokeInteractable/RecoilAssistConfig");
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Size: 0x3C
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.PokeInteractable/RecoilAssistConfig
  // [TokenAttribute] Offset: FFFFFFFF
  class PokeInteractable::RecoilAssistConfig : public ::Il2CppObject {
    public:
    public:
    // public System.Boolean Enabled
    // Size: 0x1
    // Offset: 0x10
    bool Enabled;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean UseDynamicDecay
    // Size: 0x1
    // Offset: 0x11
    bool UseDynamicDecay;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: UseDynamicDecay and: DynamicDecayCurve
    char __padding1[0x6] = {};
    // public UnityEngine.AnimationCurve DynamicDecayCurve
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::AnimationCurve* DynamicDecayCurve;
    // Field size check
    static_assert(sizeof(::UnityEngine::AnimationCurve*) == 0x8);
    // public System.Boolean UseVelocityExpansion
    // Size: 0x1
    // Offset: 0x20
    bool UseVelocityExpansion;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: UseVelocityExpansion and: VelocityExpansionMinSpeed
    char __padding3[0x3] = {};
    // public System.Single VelocityExpansionMinSpeed
    // Size: 0x4
    // Offset: 0x24
    float VelocityExpansionMinSpeed;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Single VelocityExpansionMaxSpeed
    // Size: 0x4
    // Offset: 0x28
    float VelocityExpansionMaxSpeed;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Single VelocityExpansionDistance
    // Size: 0x4
    // Offset: 0x2C
    float VelocityExpansionDistance;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Single VelocityExpansionDecayRate
    // Size: 0x4
    // Offset: 0x30
    float VelocityExpansionDecayRate;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Single ExitDistance
    // Size: 0x4
    // Offset: 0x34
    float ExitDistance;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Single ReEnterDistance
    // Size: 0x4
    // Offset: 0x38
    float ReEnterDistance;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Get instance field reference: public System.Boolean Enabled
    [[deprecated("Use field access instead!")]] bool& dyn_Enabled();
    // Get instance field reference: public System.Boolean UseDynamicDecay
    [[deprecated("Use field access instead!")]] bool& dyn_UseDynamicDecay();
    // Get instance field reference: public UnityEngine.AnimationCurve DynamicDecayCurve
    [[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& dyn_DynamicDecayCurve();
    // Get instance field reference: public System.Boolean UseVelocityExpansion
    [[deprecated("Use field access instead!")]] bool& dyn_UseVelocityExpansion();
    // Get instance field reference: public System.Single VelocityExpansionMinSpeed
    [[deprecated("Use field access instead!")]] float& dyn_VelocityExpansionMinSpeed();
    // Get instance field reference: public System.Single VelocityExpansionMaxSpeed
    [[deprecated("Use field access instead!")]] float& dyn_VelocityExpansionMaxSpeed();
    // Get instance field reference: public System.Single VelocityExpansionDistance
    [[deprecated("Use field access instead!")]] float& dyn_VelocityExpansionDistance();
    // Get instance field reference: public System.Single VelocityExpansionDecayRate
    [[deprecated("Use field access instead!")]] float& dyn_VelocityExpansionDecayRate();
    // Get instance field reference: public System.Single ExitDistance
    [[deprecated("Use field access instead!")]] float& dyn_ExitDistance();
    // Get instance field reference: public System.Single ReEnterDistance
    [[deprecated("Use field access instead!")]] float& dyn_ReEnterDistance();
    // public System.Void .ctor()
    // Offset: 0x47AD818
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PokeInteractable::RecoilAssistConfig* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::RecoilAssistConfig::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PokeInteractable::RecoilAssistConfig*, creationType>()));
    }
  }; // Oculus.Interaction.PokeInteractable/RecoilAssistConfig
  #pragma pack(pop)
  static check_size<sizeof(PokeInteractable::RecoilAssistConfig), 56 + sizeof(float)> __Oculus_Interaction_PokeInteractable_RecoilAssistConfigSizeCheck;
  static_assert(sizeof(PokeInteractable::RecoilAssistConfig) == 0x3C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::PokeInteractable::RecoilAssistConfig::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
