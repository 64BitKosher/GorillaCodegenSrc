// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.ListLayout
#include "Oculus/Interaction/ListLayout.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::ListLayout::ListElement);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::ListLayout::ListElement*, "Oculus.Interaction", "ListLayout/ListElement");
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.ListLayout/ListElement
  // [TokenAttribute] Offset: FFFFFFFF
  class ListLayout::ListElement : public ::Il2CppObject {
    public:
    public:
    // public System.Int32 id
    // Size: 0x4
    // Offset: 0x10
    int id;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Single pos
    // Size: 0x4
    // Offset: 0x14
    float pos;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Single halfSize
    // Size: 0x4
    // Offset: 0x18
    float halfSize;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Padding between fields: halfSize and: prev
    char __padding2[0x4] = {};
    // public Oculus.Interaction.ListLayout/ListElement prev
    // Size: 0x8
    // Offset: 0x20
    ::Oculus::Interaction::ListLayout::ListElement* prev;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::ListLayout::ListElement*) == 0x8);
    // public Oculus.Interaction.ListLayout/ListElement next
    // Size: 0x8
    // Offset: 0x28
    ::Oculus::Interaction::ListLayout::ListElement* next;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::ListLayout::ListElement*) == 0x8);
    public:
    // Get instance field reference: public System.Int32 id
    [[deprecated("Use field access instead!")]] int& dyn_id();
    // Get instance field reference: public System.Single pos
    [[deprecated("Use field access instead!")]] float& dyn_pos();
    // Get instance field reference: public System.Single halfSize
    [[deprecated("Use field access instead!")]] float& dyn_halfSize();
    // Get instance field reference: public Oculus.Interaction.ListLayout/ListElement prev
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::ListLayout::ListElement*& dyn_prev();
    // Get instance field reference: public Oculus.Interaction.ListLayout/ListElement next
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::ListLayout::ListElement*& dyn_next();
    // public System.Void .ctor(System.Int32 id, System.Single size)
    // Offset: 0x47B7A94
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ListLayout::ListElement* New_ctor(int id, float size) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayout::ListElement::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ListLayout::ListElement*, creationType>(id, size)));
    }
  }; // Oculus.Interaction.ListLayout/ListElement
  #pragma pack(pop)
  static check_size<sizeof(ListLayout::ListElement), 40 + sizeof(::Oculus::Interaction::ListLayout::ListElement*)> __Oculus_Interaction_ListLayout_ListElementSizeCheck;
  static_assert(sizeof(ListLayout::ListElement) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::ListLayout::ListElement::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
