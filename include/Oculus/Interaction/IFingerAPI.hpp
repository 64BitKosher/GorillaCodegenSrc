// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction::Input
namespace Oculus::Interaction::Input {
  // Forward declaring type: HandFinger
  struct HandFinger;
  // Forward declaring type: IHand
  class IHand;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Vector3
  struct Vector3;
}
// Completed forward declares
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Forward declaring type: IFingerAPI
  class IFingerAPI;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::IFingerAPI);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::IFingerAPI*, "Oculus.Interaction", "IFingerAPI");
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.IFingerAPI
  // [TokenAttribute] Offset: FFFFFFFF
  class IFingerAPI {
    public:
    // public System.Boolean GetFingerIsGrabbing(Oculus.Interaction.Input.HandFinger finger)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool GetFingerIsGrabbing(::Oculus::Interaction::Input::HandFinger finger);
    // public System.Boolean GetFingerIsGrabbingChanged(Oculus.Interaction.Input.HandFinger finger, System.Boolean targetPinchState)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool GetFingerIsGrabbingChanged(::Oculus::Interaction::Input::HandFinger finger, bool targetPinchState);
    // public System.Single GetFingerGrabScore(Oculus.Interaction.Input.HandFinger finger)
    // Offset: 0xFFFFFFFFFFFFFFFF
    float GetFingerGrabScore(::Oculus::Interaction::Input::HandFinger finger);
    // public UnityEngine.Vector3 GetWristOffsetLocal()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::Vector3 GetWristOffsetLocal();
    // public System.Void Update(Oculus.Interaction.Input.IHand hand)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Update(::Oculus::Interaction::Input::IHand* hand);
  }; // Oculus.Interaction.IFingerAPI
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::IFingerAPI::GetFingerIsGrabbing
// Il2CppName: GetFingerIsGrabbing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::IFingerAPI::*)(::Oculus::Interaction::Input::HandFinger)>(&Oculus::Interaction::IFingerAPI::GetFingerIsGrabbing)> {
  static const MethodInfo* get() {
    static auto* finger = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "HandFinger")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::IFingerAPI*), "GetFingerIsGrabbing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{finger});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::IFingerAPI::GetFingerIsGrabbingChanged
// Il2CppName: GetFingerIsGrabbingChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::IFingerAPI::*)(::Oculus::Interaction::Input::HandFinger, bool)>(&Oculus::Interaction::IFingerAPI::GetFingerIsGrabbingChanged)> {
  static const MethodInfo* get() {
    static auto* finger = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "HandFinger")->byval_arg;
    static auto* targetPinchState = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::IFingerAPI*), "GetFingerIsGrabbingChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{finger, targetPinchState});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::IFingerAPI::GetFingerGrabScore
// Il2CppName: GetFingerGrabScore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Oculus::Interaction::IFingerAPI::*)(::Oculus::Interaction::Input::HandFinger)>(&Oculus::Interaction::IFingerAPI::GetFingerGrabScore)> {
  static const MethodInfo* get() {
    static auto* finger = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "HandFinger")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::IFingerAPI*), "GetFingerGrabScore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{finger});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::IFingerAPI::GetWristOffsetLocal
// Il2CppName: GetWristOffsetLocal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (Oculus::Interaction::IFingerAPI::*)()>(&Oculus::Interaction::IFingerAPI::GetWristOffsetLocal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::IFingerAPI*), "GetWristOffsetLocal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::IFingerAPI::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::IFingerAPI::*)(::Oculus::Interaction::Input::IHand*)>(&Oculus::Interaction::IFingerAPI::Update)> {
  static const MethodInfo* get() {
    static auto* hand = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "IHand")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::IFingerAPI*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{hand});
  }
};
