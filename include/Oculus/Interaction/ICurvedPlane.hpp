// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction
namespace Oculus::Interaction {
  // Forward declaring type: Cylinder
  class Cylinder;
}
// Completed forward declares
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Forward declaring type: ICurvedPlane
  class ICurvedPlane;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::ICurvedPlane);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::ICurvedPlane*, "Oculus.Interaction", "ICurvedPlane");
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.ICurvedPlane
  // [TokenAttribute] Offset: FFFFFFFF
  class ICurvedPlane {
    public:
    // public Oculus.Interaction.Cylinder get_Cylinder()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Oculus::Interaction::Cylinder* get_Cylinder();
    // public System.Single get_ArcDegrees()
    // Offset: 0xFFFFFFFFFFFFFFFF
    float get_ArcDegrees();
    // public System.Single get_Rotation()
    // Offset: 0xFFFFFFFFFFFFFFFF
    float get_Rotation();
    // public System.Single get_Bottom()
    // Offset: 0xFFFFFFFFFFFFFFFF
    float get_Bottom();
    // public System.Single get_Top()
    // Offset: 0xFFFFFFFFFFFFFFFF
    float get_Top();
  }; // Oculus.Interaction.ICurvedPlane
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::ICurvedPlane::get_Cylinder
// Il2CppName: get_Cylinder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::Cylinder* (Oculus::Interaction::ICurvedPlane::*)()>(&Oculus::Interaction::ICurvedPlane::get_Cylinder)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::ICurvedPlane*), "get_Cylinder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::ICurvedPlane::get_ArcDegrees
// Il2CppName: get_ArcDegrees
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Oculus::Interaction::ICurvedPlane::*)()>(&Oculus::Interaction::ICurvedPlane::get_ArcDegrees)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::ICurvedPlane*), "get_ArcDegrees", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::ICurvedPlane::get_Rotation
// Il2CppName: get_Rotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Oculus::Interaction::ICurvedPlane::*)()>(&Oculus::Interaction::ICurvedPlane::get_Rotation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::ICurvedPlane*), "get_Rotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::ICurvedPlane::get_Bottom
// Il2CppName: get_Bottom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Oculus::Interaction::ICurvedPlane::*)()>(&Oculus::Interaction::ICurvedPlane::get_Bottom)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::ICurvedPlane*), "get_Bottom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::ICurvedPlane::get_Top
// Il2CppName: get_Top
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Oculus::Interaction::ICurvedPlane::*)()>(&Oculus::Interaction::ICurvedPlane::get_Top)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::ICurvedPlane*), "get_Top", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
