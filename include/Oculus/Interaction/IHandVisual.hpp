// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction::Input
namespace Oculus::Interaction::Input {
  // Forward declaring type: IHand
  class IHand;
  // Forward declaring type: HandJointId
  struct HandJointId;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Pose
  struct Pose;
  // Forward declaring type: Space
  struct Space;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
}
// Completed forward declares
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Forward declaring type: IHandVisual
  class IHandVisual;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::IHandVisual);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::IHandVisual*, "Oculus.Interaction", "IHandVisual");
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.IHandVisual
  // [TokenAttribute] Offset: FFFFFFFF
  class IHandVisual {
    public:
    // public Oculus.Interaction.Input.IHand get_Hand()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Oculus::Interaction::Input::IHand* get_Hand();
    // public System.Boolean get_IsVisible()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_IsVisible();
    // public System.Boolean get_ForceOffVisibility()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_ForceOffVisibility();
    // public System.Void set_ForceOffVisibility(System.Boolean value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_ForceOffVisibility(bool value);
    // public UnityEngine.Pose GetJointPose(Oculus.Interaction.Input.HandJointId jointId, UnityEngine.Space space)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::Pose GetJointPose(::Oculus::Interaction::Input::HandJointId jointId, ::UnityEngine::Space space);
    // public System.Void add_WhenHandVisualUpdated(System.Action value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void add_WhenHandVisualUpdated(::System::Action* value);
    // public System.Void remove_WhenHandVisualUpdated(System.Action value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void remove_WhenHandVisualUpdated(::System::Action* value);
  }; // Oculus.Interaction.IHandVisual
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::IHandVisual::get_Hand
// Il2CppName: get_Hand
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::Input::IHand* (Oculus::Interaction::IHandVisual::*)()>(&Oculus::Interaction::IHandVisual::get_Hand)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::IHandVisual*), "get_Hand", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::IHandVisual::get_IsVisible
// Il2CppName: get_IsVisible
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::IHandVisual::*)()>(&Oculus::Interaction::IHandVisual::get_IsVisible)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::IHandVisual*), "get_IsVisible", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::IHandVisual::get_ForceOffVisibility
// Il2CppName: get_ForceOffVisibility
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::IHandVisual::*)()>(&Oculus::Interaction::IHandVisual::get_ForceOffVisibility)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::IHandVisual*), "get_ForceOffVisibility", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::IHandVisual::set_ForceOffVisibility
// Il2CppName: set_ForceOffVisibility
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::IHandVisual::*)(bool)>(&Oculus::Interaction::IHandVisual::set_ForceOffVisibility)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::IHandVisual*), "set_ForceOffVisibility", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::IHandVisual::GetJointPose
// Il2CppName: GetJointPose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Pose (Oculus::Interaction::IHandVisual::*)(::Oculus::Interaction::Input::HandJointId, ::UnityEngine::Space)>(&Oculus::Interaction::IHandVisual::GetJointPose)> {
  static const MethodInfo* get() {
    static auto* jointId = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "HandJointId")->byval_arg;
    static auto* space = &::il2cpp_utils::GetClassFromName("UnityEngine", "Space")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::IHandVisual*), "GetJointPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{jointId, space});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::IHandVisual::add_WhenHandVisualUpdated
// Il2CppName: add_WhenHandVisualUpdated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::IHandVisual::*)(::System::Action*)>(&Oculus::Interaction::IHandVisual::add_WhenHandVisualUpdated)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::IHandVisual*), "add_WhenHandVisualUpdated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::IHandVisual::remove_WhenHandVisualUpdated
// Il2CppName: remove_WhenHandVisualUpdated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::IHandVisual::*)(::System::Action*)>(&Oculus::Interaction::IHandVisual::remove_WhenHandVisualUpdated)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::IHandVisual*), "remove_WhenHandVisualUpdated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
