// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction
namespace Oculus::Interaction {
  // Forward declaring type: ConicalFrustum
  class ConicalFrustum;
}
// Completed forward declares
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Forward declaring type: DistantPointDetectorFrustums
  struct DistantPointDetectorFrustums;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::DistantPointDetectorFrustums, "Oculus.Interaction", "DistantPointDetectorFrustums");
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Size: 0x1C
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: Oculus.Interaction.DistantPointDetectorFrustums
  // [TokenAttribute] Offset: FFFFFFFF
  struct DistantPointDetectorFrustums/*, public ::System::ValueType*/ {
    public:
    public:
    // private Oculus.Interaction.ConicalFrustum _selectionFrustum
    // Size: 0x8
    // Offset: 0x0
    ::Oculus::Interaction::ConicalFrustum* selectionFrustum;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::ConicalFrustum*) == 0x8);
    // private Oculus.Interaction.ConicalFrustum _deselectionFrustum
    // Size: 0x8
    // Offset: 0x8
    ::Oculus::Interaction::ConicalFrustum* deselectionFrustum;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::ConicalFrustum*) == 0x8);
    // private Oculus.Interaction.ConicalFrustum _aidFrustum
    // Size: 0x8
    // Offset: 0x10
    ::Oculus::Interaction::ConicalFrustum* aidFrustum;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::ConicalFrustum*) == 0x8);
    // private System.Single _aidBlending
    // Size: 0x4
    // Offset: 0x18
    float aidBlending;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Creating value type constructor for type: DistantPointDetectorFrustums
    constexpr DistantPointDetectorFrustums(::Oculus::Interaction::ConicalFrustum* selectionFrustum_ = {}, ::Oculus::Interaction::ConicalFrustum* deselectionFrustum_ = {}, ::Oculus::Interaction::ConicalFrustum* aidFrustum_ = {}, float aidBlending_ = {}) noexcept : selectionFrustum{selectionFrustum_}, deselectionFrustum{deselectionFrustum_}, aidFrustum{aidFrustum_}, aidBlending{aidBlending_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: private Oculus.Interaction.ConicalFrustum _selectionFrustum
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::ConicalFrustum*& dyn__selectionFrustum();
    // Get instance field reference: private Oculus.Interaction.ConicalFrustum _deselectionFrustum
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::ConicalFrustum*& dyn__deselectionFrustum();
    // Get instance field reference: private Oculus.Interaction.ConicalFrustum _aidFrustum
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::ConicalFrustum*& dyn__aidFrustum();
    // Get instance field reference: private System.Single _aidBlending
    [[deprecated("Use field access instead!")]] float& dyn__aidBlending();
    // public Oculus.Interaction.ConicalFrustum get_SelectionFrustum()
    // Offset: 0x4770CF0
    ::Oculus::Interaction::ConicalFrustum* get_SelectionFrustum();
    // public Oculus.Interaction.ConicalFrustum get_DeselectionFrustum()
    // Offset: 0x4770CF8
    ::Oculus::Interaction::ConicalFrustum* get_DeselectionFrustum();
    // public Oculus.Interaction.ConicalFrustum get_AidFrustum()
    // Offset: 0x4770D00
    ::Oculus::Interaction::ConicalFrustum* get_AidFrustum();
    // public System.Single get_AidBlending()
    // Offset: 0x4770D08
    float get_AidBlending();
    // public System.Void .ctor(Oculus.Interaction.ConicalFrustum selection, Oculus.Interaction.ConicalFrustum deselection, Oculus.Interaction.ConicalFrustum aid, System.Single blend)
    // Offset: 0x4770D10
    // ABORTED: conflicts with another method.  DistantPointDetectorFrustums(::Oculus::Interaction::ConicalFrustum* selection, ::Oculus::Interaction::ConicalFrustum* deselection, ::Oculus::Interaction::ConicalFrustum* aid, float blend);
  }; // Oculus.Interaction.DistantPointDetectorFrustums
  #pragma pack(pop)
  static check_size<sizeof(DistantPointDetectorFrustums), 24 + sizeof(float)> __Oculus_Interaction_DistantPointDetectorFrustumsSizeCheck;
  static_assert(sizeof(DistantPointDetectorFrustums) == 0x1C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::DistantPointDetectorFrustums::get_SelectionFrustum
// Il2CppName: get_SelectionFrustum
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::ConicalFrustum* (Oculus::Interaction::DistantPointDetectorFrustums::*)()>(&Oculus::Interaction::DistantPointDetectorFrustums::get_SelectionFrustum)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistantPointDetectorFrustums), "get_SelectionFrustum", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistantPointDetectorFrustums::get_DeselectionFrustum
// Il2CppName: get_DeselectionFrustum
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::ConicalFrustum* (Oculus::Interaction::DistantPointDetectorFrustums::*)()>(&Oculus::Interaction::DistantPointDetectorFrustums::get_DeselectionFrustum)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistantPointDetectorFrustums), "get_DeselectionFrustum", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistantPointDetectorFrustums::get_AidFrustum
// Il2CppName: get_AidFrustum
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::ConicalFrustum* (Oculus::Interaction::DistantPointDetectorFrustums::*)()>(&Oculus::Interaction::DistantPointDetectorFrustums::get_AidFrustum)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistantPointDetectorFrustums), "get_AidFrustum", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistantPointDetectorFrustums::get_AidBlending
// Il2CppName: get_AidBlending
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Oculus::Interaction::DistantPointDetectorFrustums::*)()>(&Oculus::Interaction::DistantPointDetectorFrustums::get_AidBlending)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistantPointDetectorFrustums), "get_AidBlending", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistantPointDetectorFrustums::DistantPointDetectorFrustums
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
