// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: Oculus.Interaction.Deprecated
namespace Oculus::Interaction::Deprecated {
  // Forward declaring type: PolylineGizmos
  class PolylineGizmos;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::Deprecated::PolylineGizmos);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::Deprecated::PolylineGizmos*, "Oculus.Interaction.Deprecated", "PolylineGizmos");
// Type namespace: Oculus.Interaction.Deprecated
namespace Oculus::Interaction::Deprecated {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.Deprecated.PolylineGizmos
  // [TokenAttribute] Offset: FFFFFFFF
  // [ObsoleteAttribute] Offset: FFFFFFFF
  class PolylineGizmos : public ::Il2CppObject {
    public:
    // public System.Void .ctor()
    // Offset: 0x4805034
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PolylineGizmos* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Deprecated::PolylineGizmos::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PolylineGizmos*, creationType>()));
    }
  }; // Oculus.Interaction.Deprecated.PolylineGizmos
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::Deprecated::PolylineGizmos::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
