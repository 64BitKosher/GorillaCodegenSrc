// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Vector3
  struct Vector3;
}
// Completed forward declares
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Forward declaring type: ICandidatePosition
  class ICandidatePosition;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::ICandidatePosition);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::ICandidatePosition*, "Oculus.Interaction", "ICandidatePosition");
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.ICandidatePosition
  // [TokenAttribute] Offset: FFFFFFFF
  class ICandidatePosition {
    public:
    // public UnityEngine.Vector3 get_CandidatePosition()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::Vector3 get_CandidatePosition();
  }; // Oculus.Interaction.ICandidatePosition
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::ICandidatePosition::get_CandidatePosition
// Il2CppName: get_CandidatePosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (Oculus::Interaction::ICandidatePosition::*)()>(&Oculus::Interaction::ICandidatePosition::get_CandidatePosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::ICandidatePosition*), "get_CandidatePosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
