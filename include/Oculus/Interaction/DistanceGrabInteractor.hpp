// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.PointerInteractor`2
#include "Oculus/Interaction/PointerInteractor_2.hpp"
// Including type: Oculus.Interaction.IDistanceInteractor
#include "Oculus/Interaction/IDistanceInteractor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction
namespace Oculus::Interaction {
  // Forward declaring type: DistanceGrabInteractable
  class DistanceGrabInteractable;
  // Forward declaring type: DistantCandidateComputer`2<TInteractor, TInteractable>
  template<typename TInteractor, typename TInteractable>
  class DistantCandidateComputer_2;
  // Forward declaring type: IMovement
  class IMovement;
  // Forward declaring type: IRelativeToRef
  class IRelativeToRef;
  // Skipping declaration: PointerEvent because it is already included!
  // Forward declaring type: ISelector
  class ISelector;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Object because it is already included!
  // Forward declaring type: Transform
  class Transform;
  // Skipping declaration: Pose because it is already included!
}
// Forward declaring namespace: Oculus::Interaction::Throw
namespace Oculus::Interaction::Throw {
  // Forward declaring type: IVelocityCalculator
  class IVelocityCalculator;
}
// Completed forward declares
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Forward declaring type: DistanceGrabInteractor
  class DistanceGrabInteractor;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::DistanceGrabInteractor);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::DistanceGrabInteractor*, "Oculus.Interaction", "DistanceGrabInteractor");
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // WARNING Size may be invalid!
  // Autogenerated type: Oculus.Interaction.DistanceGrabInteractor
  // [TokenAttribute] Offset: FFFFFFFF
  class DistanceGrabInteractor : public ::Oculus::Interaction::PointerInteractor_2<::Oculus::Interaction::DistanceGrabInteractor*, ::Oculus::Interaction::DistanceGrabInteractable*>/*, public ::Oculus::Interaction::IDistanceInteractor*/ {
    public:
    public:
    // private UnityEngine.Object _selector
    // Size: 0x8
    // Offset: 0x118
    ::UnityEngine::Object* selector;
    // Field size check
    static_assert(sizeof(::UnityEngine::Object*) == 0x8);
    // private UnityEngine.Transform _grabCenter
    // Size: 0x8
    // Offset: 0x120
    ::UnityEngine::Transform* grabCenter;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private UnityEngine.Transform _grabTarget
    // Size: 0x8
    // Offset: 0x128
    ::UnityEngine::Transform* grabTarget;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private UnityEngine.Object _velocityCalculator
    // Size: 0x8
    // Offset: 0x130
    ::UnityEngine::Object* velocityCalculator;
    // Field size check
    static_assert(sizeof(::UnityEngine::Object*) == 0x8);
    // private Oculus.Interaction.Throw.IVelocityCalculator <VelocityCalculator>k__BackingField
    // Size: 0x8
    // Offset: 0x138
    ::Oculus::Interaction::Throw::IVelocityCalculator* VelocityCalculator;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Throw::IVelocityCalculator*) == 0x8);
    // private Oculus.Interaction.DistantCandidateComputer`2<Oculus.Interaction.DistanceGrabInteractor,Oculus.Interaction.DistanceGrabInteractable> _distantCandidateComputer
    // Size: 0x8
    // Offset: 0x140
    ::Oculus::Interaction::DistantCandidateComputer_2<::Oculus::Interaction::DistanceGrabInteractor*, ::Oculus::Interaction::DistanceGrabInteractable*>* distantCandidateComputer;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::DistantCandidateComputer_2<::Oculus::Interaction::DistanceGrabInteractor*, ::Oculus::Interaction::DistanceGrabInteractable*>*) == 0x8);
    // private Oculus.Interaction.IMovement _movement
    // Size: 0x8
    // Offset: 0x148
    ::Oculus::Interaction::IMovement* movement;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::IMovement*) == 0x8);
    // private UnityEngine.Vector3 <HitPoint>k__BackingField
    // Size: 0xC
    // Offset: 0x150
    ::UnityEngine::Vector3 HitPoint;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private System.Single <BestInteractableWeight>k__BackingField
    // Size: 0x4
    // Offset: 0x15C
    float BestInteractableWeight;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Creating interface conversion operator: operator ::Oculus::Interaction::IDistanceInteractor
    operator ::Oculus::Interaction::IDistanceInteractor() noexcept {
      return *reinterpret_cast<::Oculus::Interaction::IDistanceInteractor*>(this);
    }
    // Get instance field reference: private UnityEngine.Object _selector
    [[deprecated("Use field access instead!")]] ::UnityEngine::Object*& dyn__selector();
    // Get instance field reference: private UnityEngine.Transform _grabCenter
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn__grabCenter();
    // Get instance field reference: private UnityEngine.Transform _grabTarget
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn__grabTarget();
    // Get instance field reference: private UnityEngine.Object _velocityCalculator
    [[deprecated("Use field access instead!")]] ::UnityEngine::Object*& dyn__velocityCalculator();
    // Get instance field reference: private Oculus.Interaction.Throw.IVelocityCalculator <VelocityCalculator>k__BackingField
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Throw::IVelocityCalculator*& dyn_$VelocityCalculator$k__BackingField();
    // Get instance field reference: private Oculus.Interaction.DistantCandidateComputer`2<Oculus.Interaction.DistanceGrabInteractor,Oculus.Interaction.DistanceGrabInteractable> _distantCandidateComputer
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::DistantCandidateComputer_2<::Oculus::Interaction::DistanceGrabInteractor*, ::Oculus::Interaction::DistanceGrabInteractable*>*& dyn__distantCandidateComputer();
    // Get instance field reference: private Oculus.Interaction.IMovement _movement
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::IMovement*& dyn__movement();
    // Get instance field reference: private UnityEngine.Vector3 <HitPoint>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_$HitPoint$k__BackingField();
    // Get instance field reference: private System.Single <BestInteractableWeight>k__BackingField
    [[deprecated("Use field access instead!")]] float& dyn_$BestInteractableWeight$k__BackingField();
    // public Oculus.Interaction.Throw.IVelocityCalculator get_VelocityCalculator()
    // Offset: 0x47A85E4
    ::Oculus::Interaction::Throw::IVelocityCalculator* get_VelocityCalculator();
    // public System.Void set_VelocityCalculator(Oculus.Interaction.Throw.IVelocityCalculator value)
    // Offset: 0x47A85EC
    void set_VelocityCalculator(::Oculus::Interaction::Throw::IVelocityCalculator* value);
    // public UnityEngine.Pose get_Origin()
    // Offset: 0x47A85FC
    ::UnityEngine::Pose get_Origin();
    // public UnityEngine.Vector3 get_HitPoint()
    // Offset: 0x47A8640
    ::UnityEngine::Vector3 get_HitPoint();
    // private System.Void set_HitPoint(UnityEngine.Vector3 value)
    // Offset: 0x47A8650
    void set_HitPoint(::UnityEngine::Vector3 value);
    // public Oculus.Interaction.IRelativeToRef get_DistanceInteractable()
    // Offset: 0x47A8660
    ::Oculus::Interaction::IRelativeToRef* get_DistanceInteractable();
    // public System.Single get_BestInteractableWeight()
    // Offset: 0x47A869C
    float get_BestInteractableWeight();
    // private System.Void set_BestInteractableWeight(System.Single value)
    // Offset: 0x47A86A4
    void set_BestInteractableWeight(float value);
    // protected Oculus.Interaction.DistanceGrabInteractable ComputeCandidate()
    // Offset: 0x47A8948
    ::Oculus::Interaction::DistanceGrabInteractable* ComputeCandidate();
    // protected System.Void InteractableSelected(Oculus.Interaction.DistanceGrabInteractable interactable)
    // Offset: 0x47A8A50
    void InteractableSelected(::Oculus::Interaction::DistanceGrabInteractable* interactable);
    // protected System.Void InteractableUnselected(Oculus.Interaction.DistanceGrabInteractable interactable)
    // Offset: 0x47A8B6C
    void InteractableUnselected(::Oculus::Interaction::DistanceGrabInteractable* interactable);
    // private System.Void HandleOtherPointerEventRaised(Oculus.Interaction.PointerEvent evt)
    // Offset: 0x47A8E68
    void HandleOtherPointerEventRaised(::Oculus::Interaction::PointerEvent evt);
    // public System.Void InjectAllDistanceGrabInteractor(Oculus.Interaction.ISelector selector, Oculus.Interaction.DistantCandidateComputer`2<Oculus.Interaction.DistanceGrabInteractor,Oculus.Interaction.DistanceGrabInteractable> distantCandidateComputer)
    // Offset: 0x47A9450
    void InjectAllDistanceGrabInteractor(::Oculus::Interaction::ISelector* selector, ::Oculus::Interaction::DistantCandidateComputer_2<::Oculus::Interaction::DistanceGrabInteractor*, ::Oculus::Interaction::DistanceGrabInteractable*>* distantCandidateComputer);
    // public System.Void InjectSelector(Oculus.Interaction.ISelector selector)
    // Offset: 0x47A947C
    void InjectSelector(::Oculus::Interaction::ISelector* selector);
    // public System.Void InjectDistantCandidateComputer(Oculus.Interaction.DistantCandidateComputer`2<Oculus.Interaction.DistanceGrabInteractor,Oculus.Interaction.DistanceGrabInteractable> distantCandidateComputer)
    // Offset: 0x47A9560
    void InjectDistantCandidateComputer(::Oculus::Interaction::DistantCandidateComputer_2<::Oculus::Interaction::DistanceGrabInteractor*, ::Oculus::Interaction::DistanceGrabInteractable*>* distantCandidateComputer);
    // public System.Void InjectOptionalGrabCenter(UnityEngine.Transform grabCenter)
    // Offset: 0x47A9570
    void InjectOptionalGrabCenter(::UnityEngine::Transform* grabCenter);
    // public System.Void InjectOptionalGrabTarget(UnityEngine.Transform grabTarget)
    // Offset: 0x47A9580
    void InjectOptionalGrabTarget(::UnityEngine::Transform* grabTarget);
    // public System.Void InjectOptionalVelocityCalculator(Oculus.Interaction.Throw.IVelocityCalculator velocityCalculator)
    // Offset: 0x47A9590
    void InjectOptionalVelocityCalculator(::Oculus::Interaction::Throw::IVelocityCalculator* velocityCalculator);
    // private System.Void <Start>b__23_0()
    // Offset: 0x47A9704
    void $Start$b__23_0();
    // protected override System.Void Awake()
    // Offset: 0x47A86AC
    // Implemented from: Oculus.Interaction.Interactor`2
    // Base method: System.Void Interactor_2::Awake()
    void Awake();
    // protected override System.Void Start()
    // Offset: 0x47A8778
    // Implemented from: Oculus.Interaction.Interactor`2
    // Base method: System.Void Interactor_2::Start()
    void Start();
    // protected override System.Void DoPreprocess()
    // Offset: 0x47A88CC
    // Implemented from: Oculus.Interaction.Interactor`2
    // Base method: System.Void Interactor_2::DoPreprocess()
    void DoPreprocess();
    // protected override UnityEngine.Pose ComputePointerPose()
    // Offset: 0x47A9188
    // Implemented from: Oculus.Interaction.PointerInteractor`2
    // Base method: UnityEngine.Pose PointerInteractor_2::ComputePointerPose()
    ::UnityEngine::Pose ComputePointerPose();
    // protected override System.Void DoSelectUpdate()
    // Offset: 0x47A92B4
    // Implemented from: Oculus.Interaction.Interactor`2
    // Base method: System.Void Interactor_2::DoSelectUpdate()
    void DoSelectUpdate();
    // public System.Void .ctor()
    // Offset: 0x47A9660
    // Implemented from: Oculus.Interaction.PointerInteractor`2
    // Base method: System.Void PointerInteractor_2::.ctor()
    // Base method: System.Void Interactor_2::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DistanceGrabInteractor* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractor::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DistanceGrabInteractor*, creationType>()));
    }
  }; // Oculus.Interaction.DistanceGrabInteractor
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::DistanceGrabInteractor::get_VelocityCalculator
// Il2CppName: get_VelocityCalculator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::Throw::IVelocityCalculator* (Oculus::Interaction::DistanceGrabInteractor::*)()>(&Oculus::Interaction::DistanceGrabInteractor::get_VelocityCalculator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceGrabInteractor*), "get_VelocityCalculator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceGrabInteractor::set_VelocityCalculator
// Il2CppName: set_VelocityCalculator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceGrabInteractor::*)(::Oculus::Interaction::Throw::IVelocityCalculator*)>(&Oculus::Interaction::DistanceGrabInteractor::set_VelocityCalculator)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Throw", "IVelocityCalculator")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceGrabInteractor*), "set_VelocityCalculator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceGrabInteractor::get_Origin
// Il2CppName: get_Origin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Pose (Oculus::Interaction::DistanceGrabInteractor::*)()>(&Oculus::Interaction::DistanceGrabInteractor::get_Origin)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceGrabInteractor*), "get_Origin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceGrabInteractor::get_HitPoint
// Il2CppName: get_HitPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (Oculus::Interaction::DistanceGrabInteractor::*)()>(&Oculus::Interaction::DistanceGrabInteractor::get_HitPoint)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceGrabInteractor*), "get_HitPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceGrabInteractor::set_HitPoint
// Il2CppName: set_HitPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceGrabInteractor::*)(::UnityEngine::Vector3)>(&Oculus::Interaction::DistanceGrabInteractor::set_HitPoint)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceGrabInteractor*), "set_HitPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceGrabInteractor::get_DistanceInteractable
// Il2CppName: get_DistanceInteractable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::IRelativeToRef* (Oculus::Interaction::DistanceGrabInteractor::*)()>(&Oculus::Interaction::DistanceGrabInteractor::get_DistanceInteractable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceGrabInteractor*), "get_DistanceInteractable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceGrabInteractor::get_BestInteractableWeight
// Il2CppName: get_BestInteractableWeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Oculus::Interaction::DistanceGrabInteractor::*)()>(&Oculus::Interaction::DistanceGrabInteractor::get_BestInteractableWeight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceGrabInteractor*), "get_BestInteractableWeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceGrabInteractor::set_BestInteractableWeight
// Il2CppName: set_BestInteractableWeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceGrabInteractor::*)(float)>(&Oculus::Interaction::DistanceGrabInteractor::set_BestInteractableWeight)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceGrabInteractor*), "set_BestInteractableWeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceGrabInteractor::ComputeCandidate
// Il2CppName: ComputeCandidate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::DistanceGrabInteractable* (Oculus::Interaction::DistanceGrabInteractor::*)()>(&Oculus::Interaction::DistanceGrabInteractor::ComputeCandidate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceGrabInteractor*), "ComputeCandidate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceGrabInteractor::InteractableSelected
// Il2CppName: InteractableSelected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceGrabInteractor::*)(::Oculus::Interaction::DistanceGrabInteractable*)>(&Oculus::Interaction::DistanceGrabInteractor::InteractableSelected)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "DistanceGrabInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceGrabInteractor*), "InteractableSelected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceGrabInteractor::InteractableUnselected
// Il2CppName: InteractableUnselected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceGrabInteractor::*)(::Oculus::Interaction::DistanceGrabInteractable*)>(&Oculus::Interaction::DistanceGrabInteractor::InteractableUnselected)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "DistanceGrabInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceGrabInteractor*), "InteractableUnselected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceGrabInteractor::HandleOtherPointerEventRaised
// Il2CppName: HandleOtherPointerEventRaised
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceGrabInteractor::*)(::Oculus::Interaction::PointerEvent)>(&Oculus::Interaction::DistanceGrabInteractor::HandleOtherPointerEventRaised)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "PointerEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceGrabInteractor*), "HandleOtherPointerEventRaised", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceGrabInteractor::InjectAllDistanceGrabInteractor
// Il2CppName: InjectAllDistanceGrabInteractor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceGrabInteractor::*)(::Oculus::Interaction::ISelector*, ::Oculus::Interaction::DistantCandidateComputer_2<::Oculus::Interaction::DistanceGrabInteractor*, ::Oculus::Interaction::DistanceGrabInteractable*>*)>(&Oculus::Interaction::DistanceGrabInteractor::InjectAllDistanceGrabInteractor)> {
  static const MethodInfo* get() {
    static auto* selector = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "ISelector")->byval_arg;
    static auto* distantCandidateComputer = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("Oculus.Interaction", "DistantCandidateComputer`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Oculus.Interaction", "DistanceGrabInteractor"), ::il2cpp_utils::GetClassFromName("Oculus.Interaction", "DistanceGrabInteractable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceGrabInteractor*), "InjectAllDistanceGrabInteractor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{selector, distantCandidateComputer});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceGrabInteractor::InjectSelector
// Il2CppName: InjectSelector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceGrabInteractor::*)(::Oculus::Interaction::ISelector*)>(&Oculus::Interaction::DistanceGrabInteractor::InjectSelector)> {
  static const MethodInfo* get() {
    static auto* selector = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "ISelector")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceGrabInteractor*), "InjectSelector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{selector});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceGrabInteractor::InjectDistantCandidateComputer
// Il2CppName: InjectDistantCandidateComputer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceGrabInteractor::*)(::Oculus::Interaction::DistantCandidateComputer_2<::Oculus::Interaction::DistanceGrabInteractor*, ::Oculus::Interaction::DistanceGrabInteractable*>*)>(&Oculus::Interaction::DistanceGrabInteractor::InjectDistantCandidateComputer)> {
  static const MethodInfo* get() {
    static auto* distantCandidateComputer = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("Oculus.Interaction", "DistantCandidateComputer`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Oculus.Interaction", "DistanceGrabInteractor"), ::il2cpp_utils::GetClassFromName("Oculus.Interaction", "DistanceGrabInteractable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceGrabInteractor*), "InjectDistantCandidateComputer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{distantCandidateComputer});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceGrabInteractor::InjectOptionalGrabCenter
// Il2CppName: InjectOptionalGrabCenter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceGrabInteractor::*)(::UnityEngine::Transform*)>(&Oculus::Interaction::DistanceGrabInteractor::InjectOptionalGrabCenter)> {
  static const MethodInfo* get() {
    static auto* grabCenter = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceGrabInteractor*), "InjectOptionalGrabCenter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{grabCenter});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceGrabInteractor::InjectOptionalGrabTarget
// Il2CppName: InjectOptionalGrabTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceGrabInteractor::*)(::UnityEngine::Transform*)>(&Oculus::Interaction::DistanceGrabInteractor::InjectOptionalGrabTarget)> {
  static const MethodInfo* get() {
    static auto* grabTarget = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceGrabInteractor*), "InjectOptionalGrabTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{grabTarget});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceGrabInteractor::InjectOptionalVelocityCalculator
// Il2CppName: InjectOptionalVelocityCalculator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceGrabInteractor::*)(::Oculus::Interaction::Throw::IVelocityCalculator*)>(&Oculus::Interaction::DistanceGrabInteractor::InjectOptionalVelocityCalculator)> {
  static const MethodInfo* get() {
    static auto* velocityCalculator = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Throw", "IVelocityCalculator")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceGrabInteractor*), "InjectOptionalVelocityCalculator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{velocityCalculator});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceGrabInteractor::$Start$b__23_0
// Il2CppName: <Start>b__23_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceGrabInteractor::*)()>(&Oculus::Interaction::DistanceGrabInteractor::$Start$b__23_0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceGrabInteractor*), "<Start>b__23_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceGrabInteractor::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceGrabInteractor::*)()>(&Oculus::Interaction::DistanceGrabInteractor::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceGrabInteractor*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceGrabInteractor::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceGrabInteractor::*)()>(&Oculus::Interaction::DistanceGrabInteractor::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceGrabInteractor*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceGrabInteractor::DoPreprocess
// Il2CppName: DoPreprocess
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceGrabInteractor::*)()>(&Oculus::Interaction::DistanceGrabInteractor::DoPreprocess)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceGrabInteractor*), "DoPreprocess", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceGrabInteractor::ComputePointerPose
// Il2CppName: ComputePointerPose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Pose (Oculus::Interaction::DistanceGrabInteractor::*)()>(&Oculus::Interaction::DistanceGrabInteractor::ComputePointerPose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceGrabInteractor*), "ComputePointerPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceGrabInteractor::DoSelectUpdate
// Il2CppName: DoSelectUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::DistanceGrabInteractor::*)()>(&Oculus::Interaction::DistanceGrabInteractor::DoSelectUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::DistanceGrabInteractor*), "DoSelectUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::DistanceGrabInteractor::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
