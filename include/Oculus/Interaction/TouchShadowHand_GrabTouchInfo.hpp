// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.TouchShadowHand
#include "Oculus/Interaction/TouchShadowHand.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::TouchShadowHand::GrabTouchInfo);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::TouchShadowHand::GrabTouchInfo*, "Oculus.Interaction", "TouchShadowHand/GrabTouchInfo");
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Size: 0x2C
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.TouchShadowHand/GrabTouchInfo
  // [TokenAttribute] Offset: FFFFFFFF
  class TouchShadowHand::GrabTouchInfo : public ::Il2CppObject {
    public:
    public:
    // public UnityEngine.Vector3 offset
    // Size: 0xC
    // Offset: 0x10
    ::UnityEngine::Vector3 offset;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // public System.Boolean grabbing
    // Size: 0x1
    // Offset: 0x1C
    bool grabbing;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: grabbing and: grabbingFingers
    char __padding1[0x3] = {};
    // public System.Boolean[] grabbingFingers
    // Size: 0x8
    // Offset: 0x20
    ::ArrayW<bool> grabbingFingers;
    // Field size check
    static_assert(sizeof(::ArrayW<bool>) == 0x8);
    // public System.Single grabT
    // Size: 0x4
    // Offset: 0x28
    float grabT;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Get instance field reference: public UnityEngine.Vector3 offset
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_offset();
    // Get instance field reference: public System.Boolean grabbing
    [[deprecated("Use field access instead!")]] bool& dyn_grabbing();
    // Get instance field reference: public System.Boolean[] grabbingFingers
    [[deprecated("Use field access instead!")]] ::ArrayW<bool>& dyn_grabbingFingers();
    // Get instance field reference: public System.Single grabT
    [[deprecated("Use field access instead!")]] float& dyn_grabT();
    // public System.Void .ctor()
    // Offset: 0x47BE480
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TouchShadowHand::GrabTouchInfo* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchShadowHand::GrabTouchInfo::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TouchShadowHand::GrabTouchInfo*, creationType>()));
    }
  }; // Oculus.Interaction.TouchShadowHand/GrabTouchInfo
  #pragma pack(pop)
  static check_size<sizeof(TouchShadowHand::GrabTouchInfo), 40 + sizeof(float)> __Oculus_Interaction_TouchShadowHand_GrabTouchInfoSizeCheck;
  static_assert(sizeof(TouchShadowHand::GrabTouchInfo) == 0x2C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::TouchShadowHand::GrabTouchInfo::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
