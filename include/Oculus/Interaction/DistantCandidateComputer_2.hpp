// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.DistantPointDetectorFrustums
#include "Oculus/Interaction/DistantPointDetectorFrustums.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction
namespace Oculus::Interaction {
  // Forward declaring type: Interactor`2<TInteractor, TInteractable>
  template<typename TInteractor, typename TInteractable>
  class Interactor_2;
  // Forward declaring type: Interactable`2<TInteractor, TInteractable>
  template<typename TInteractor, typename TInteractable>
  class Interactable_2;
  // Forward declaring type: ICollidersRef
  class ICollidersRef;
  // Forward declaring type: DistantPointDetector
  class DistantPointDetector;
  // Forward declaring type: InteractableRegistry`2<TInteractor, TInteractable>
  template<typename TInteractor, typename TInteractable>
  class InteractableRegistry_2;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IEnumerable`1<T>
  template<typename T>
  class IEnumerable_1;
}
// Completed forward declares
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Forward declaring type: DistantCandidateComputer`2<TInteractor, TInteractable>
  template<typename TInteractor, typename TInteractable>
  class DistantCandidateComputer_2;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::Oculus::Interaction::DistantCandidateComputer_2, "Oculus.Interaction", "DistantCandidateComputer`2");
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // WARNING Size may be invalid!
  // Autogenerated type: Oculus.Interaction.DistantCandidateComputer`2
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename TInteractor, typename TInteractable>
  class DistantCandidateComputer_2 : public ::Il2CppObject {
    public:
    public:
    // private Oculus.Interaction.DistantPointDetectorFrustums _detectionFrustums
    // Size: 0x1C
    // Offset: 0x0
    ::Oculus::Interaction::DistantPointDetectorFrustums detectionFrustums;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::DistantPointDetectorFrustums) == 0x1C);
    // private System.Single _detectionDelay
    // Size: 0x4
    // Offset: 0x0
    float detectionDelay;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single _hoverStartTime
    // Size: 0x4
    // Offset: 0x0
    float hoverStartTime;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private Oculus.Interaction.DistantPointDetector _detector
    // Size: 0x8
    // Offset: 0x0
    ::Oculus::Interaction::DistantPointDetector* detector;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::DistantPointDetector*) == 0x8);
    // private TInteractable _stableCandidate
    // Size: 0xFFFFFFFF
    // Offset: 0x0
    TInteractable stableCandidate;
    // private TInteractable _pointedCandidate
    // Size: 0xFFFFFFFF
    // Offset: 0x0
    TInteractable pointedCandidate;
    public:
    // Autogenerated instance field getter
    // Get instance field: private Oculus.Interaction.DistantPointDetectorFrustums _detectionFrustums
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::DistantPointDetectorFrustums& dyn__detectionFrustums() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistantCandidateComputer_2::dyn__detectionFrustums");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_detectionFrustums"))->offset;
      return *reinterpret_cast<::Oculus::Interaction::DistantPointDetectorFrustums*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Single _detectionDelay
    [[deprecated("Use field access instead!")]] float& dyn__detectionDelay() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistantCandidateComputer_2::dyn__detectionDelay");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_detectionDelay"))->offset;
      return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Single _hoverStartTime
    [[deprecated("Use field access instead!")]] float& dyn__hoverStartTime() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistantCandidateComputer_2::dyn__hoverStartTime");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hoverStartTime"))->offset;
      return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private Oculus.Interaction.DistantPointDetector _detector
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::DistantPointDetector*& dyn__detector() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistantCandidateComputer_2::dyn__detector");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_detector"))->offset;
      return *reinterpret_cast<::Oculus::Interaction::DistantPointDetector**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private TInteractable _stableCandidate
    [[deprecated("Use field access instead!")]] TInteractable& dyn__stableCandidate() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistantCandidateComputer_2::dyn__stableCandidate");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stableCandidate"))->offset;
      return *reinterpret_cast<TInteractable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private TInteractable _pointedCandidate
    [[deprecated("Use field access instead!")]] TInteractable& dyn__pointedCandidate() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistantCandidateComputer_2::dyn__pointedCandidate");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pointedCandidate"))->offset;
      return *reinterpret_cast<TInteractable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // public Oculus.Interaction.DistantPointDetectorFrustums get_DetectionFrustums()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Oculus::Interaction::DistantPointDetectorFrustums get_DetectionFrustums() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistantCandidateComputer_2::get_DetectionFrustums");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DetectionFrustums", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::DistantPointDetectorFrustums, false>(this, ___internal__method);
    }
    // public System.Void set_DetectionFrustums(Oculus.Interaction.DistantPointDetectorFrustums value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_DetectionFrustums(::Oculus::Interaction::DistantPointDetectorFrustums value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistantCandidateComputer_2::set_DetectionFrustums");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DetectionFrustums", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public System.Single get_DetectionDelay()
    // Offset: 0xFFFFFFFFFFFFFFFF
    float get_DetectionDelay() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistantCandidateComputer_2::get_DetectionDelay");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DetectionDelay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
    }
    // public System.Void set_DetectionDelay(System.Single value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_DetectionDelay(float value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistantCandidateComputer_2::set_DetectionDelay");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DetectionDelay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public UnityEngine.Pose get_Origin()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::Pose get_Origin() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistantCandidateComputer_2::get_Origin");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::DistantCandidateComputer_2<TInteractor, TInteractable>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method);
    }
    // public TInteractable ComputeCandidate(Oculus.Interaction.InteractableRegistry`2<TInteractor,TInteractable> registry, TInteractor interactor, out UnityEngine.Vector3 bestHitPoint)
    // Offset: 0xFFFFFFFFFFFFFFFF
    TInteractable ComputeCandidate(::Oculus::Interaction::InteractableRegistry_2<TInteractor, TInteractable>* registry, TInteractor interactor, ByRef<::UnityEngine::Vector3> bestHitPoint) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistantCandidateComputer_2::ComputeCandidate");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::DistantCandidateComputer_2<TInteractor, TInteractable>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<TInteractable, false>(this, ___internal__method, registry, interactor, byref(bestHitPoint));
    }
    // private TInteractable ComputeBestInteractable(System.Collections.Generic.IEnumerable`1<TInteractable> candidates, System.Boolean narrowSearch, out UnityEngine.Vector3 bestHitPoint)
    // Offset: 0xFFFFFFFFFFFFFFFF
    TInteractable ComputeBestInteractable(::System::Collections::Generic::IEnumerable_1<TInteractable>* candidates, bool narrowSearch, ByRef<::UnityEngine::Vector3> bestHitPoint) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistantCandidateComputer_2::ComputeBestInteractable");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeBestInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(candidates), ::il2cpp_utils::ExtractType(narrowSearch), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
      return ::il2cpp_utils::RunMethodRethrow<TInteractable, false>(this, ___internal__method, candidates, narrowSearch, byref(bestHitPoint));
    }
    // public System.Void .ctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DistantCandidateComputer_2<TInteractor, TInteractable>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistantCandidateComputer_2::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DistantCandidateComputer_2<TInteractor, TInteractable>*, creationType>()));
    }
  }; // Oculus.Interaction.DistantCandidateComputer`2
  // Could not write size check! Type: Oculus.Interaction.DistantCandidateComputer`2 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
