// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.ActiveStateNot
#include "Oculus/Interaction/ActiveStateNot.hpp"
// Including type: Oculus.Interaction.PoseDetection.Debug.ActiveStateModel`1
#include "Oculus/Interaction/PoseDetection/Debug/ActiveStateModel_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IEnumerable`1<T>
  template<typename T>
  class IEnumerable_1;
}
// Forward declaring namespace: Oculus::Interaction
namespace Oculus::Interaction {
  // Forward declaring type: IActiveState
  class IActiveState;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::ActiveStateNot::DebugModel);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::ActiveStateNot::DebugModel*, "Oculus.Interaction", "ActiveStateNot/DebugModel");
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // WARNING Size may be invalid!
  // Autogenerated type: Oculus.Interaction.ActiveStateNot/DebugModel
  // [TokenAttribute] Offset: FFFFFFFF
  class ActiveStateNot::DebugModel : public ::Oculus::Interaction::PoseDetection::Debug::ActiveStateModel_1<::Oculus::Interaction::ActiveStateNot*> {
    public:
    // protected System.Collections.Generic.IEnumerable`1<Oculus.Interaction.IActiveState> GetChildren(Oculus.Interaction.ActiveStateNot activeState)
    // Offset: 0x4779944
    ::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::IActiveState*>* GetChildren(::Oculus::Interaction::ActiveStateNot* activeState);
    // public System.Void .ctor()
    // Offset: 0x4779820
    // Implemented from: Oculus.Interaction.PoseDetection.Debug.ActiveStateModel`1
    // Base method: System.Void ActiveStateModel_1::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ActiveStateNot::DebugModel* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateNot::DebugModel::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ActiveStateNot::DebugModel*, creationType>()));
    }
  }; // Oculus.Interaction.ActiveStateNot/DebugModel
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::ActiveStateNot::DebugModel::GetChildren
// Il2CppName: GetChildren
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::IActiveState*>* (Oculus::Interaction::ActiveStateNot::DebugModel::*)(::Oculus::Interaction::ActiveStateNot*)>(&Oculus::Interaction::ActiveStateNot::DebugModel::GetChildren)> {
  static const MethodInfo* get() {
    static auto* activeState = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "ActiveStateNot")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::ActiveStateNot::DebugModel*), "GetChildren", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{activeState});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::ActiveStateNot::DebugModel::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
