// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.Throw.ReleaseVelocityInformation
#include "Oculus/Interaction/Throw/ReleaseVelocityInformation.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: IReadOnlyList`1<T>
  template<typename T>
  class IReadOnlyList_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.Throw
namespace Oculus::Interaction::Throw {
  // Forward declaring type: IVelocityCalculator
  class IVelocityCalculator;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::Throw::IVelocityCalculator);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::Throw::IVelocityCalculator*, "Oculus.Interaction.Throw", "IVelocityCalculator");
// Type namespace: Oculus.Interaction.Throw
namespace Oculus::Interaction::Throw {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.Throw.IVelocityCalculator
  // [TokenAttribute] Offset: FFFFFFFF
  class IVelocityCalculator {
    public:
    // public System.Single get_UpdateFrequency()
    // Offset: 0xFFFFFFFFFFFFFFFF
    float get_UpdateFrequency();
    // public System.Void add_WhenThrowVelocitiesChanged(System.Action`1<System.Collections.Generic.List`1<Oculus.Interaction.Throw.ReleaseVelocityInformation>> value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void add_WhenThrowVelocitiesChanged(::System::Action_1<::System::Collections::Generic::List_1<::Oculus::Interaction::Throw::ReleaseVelocityInformation>*>* value);
    // public System.Void remove_WhenThrowVelocitiesChanged(System.Action`1<System.Collections.Generic.List`1<Oculus.Interaction.Throw.ReleaseVelocityInformation>> value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void remove_WhenThrowVelocitiesChanged(::System::Action_1<::System::Collections::Generic::List_1<::Oculus::Interaction::Throw::ReleaseVelocityInformation>*>* value);
    // public System.Void add_WhenNewSampleAvailable(System.Action`1<Oculus.Interaction.Throw.ReleaseVelocityInformation> value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void add_WhenNewSampleAvailable(::System::Action_1<::Oculus::Interaction::Throw::ReleaseVelocityInformation>* value);
    // public System.Void remove_WhenNewSampleAvailable(System.Action`1<Oculus.Interaction.Throw.ReleaseVelocityInformation> value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void remove_WhenNewSampleAvailable(::System::Action_1<::Oculus::Interaction::Throw::ReleaseVelocityInformation>* value);
    // public Oculus.Interaction.Throw.ReleaseVelocityInformation CalculateThrowVelocity(UnityEngine.Transform objectThrown)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Oculus::Interaction::Throw::ReleaseVelocityInformation CalculateThrowVelocity(::UnityEngine::Transform* objectThrown);
    // public System.Collections.Generic.IReadOnlyList`1<Oculus.Interaction.Throw.ReleaseVelocityInformation> LastThrowVelocities()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::Throw::ReleaseVelocityInformation>* LastThrowVelocities();
    // public System.Void SetUpdateFrequency(System.Single frequency)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void SetUpdateFrequency(float frequency);
  }; // Oculus.Interaction.Throw.IVelocityCalculator
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::Throw::IVelocityCalculator::get_UpdateFrequency
// Il2CppName: get_UpdateFrequency
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Oculus::Interaction::Throw::IVelocityCalculator::*)()>(&Oculus::Interaction::Throw::IVelocityCalculator::get_UpdateFrequency)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Throw::IVelocityCalculator*), "get_UpdateFrequency", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Throw::IVelocityCalculator::add_WhenThrowVelocitiesChanged
// Il2CppName: add_WhenThrowVelocitiesChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Throw::IVelocityCalculator::*)(::System::Action_1<::System::Collections::Generic::List_1<::Oculus::Interaction::Throw::ReleaseVelocityInformation>*>*)>(&Oculus::Interaction::Throw::IVelocityCalculator::add_WhenThrowVelocitiesChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Oculus.Interaction.Throw", "ReleaseVelocityInformation")})})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Throw::IVelocityCalculator*), "add_WhenThrowVelocitiesChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Throw::IVelocityCalculator::remove_WhenThrowVelocitiesChanged
// Il2CppName: remove_WhenThrowVelocitiesChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Throw::IVelocityCalculator::*)(::System::Action_1<::System::Collections::Generic::List_1<::Oculus::Interaction::Throw::ReleaseVelocityInformation>*>*)>(&Oculus::Interaction::Throw::IVelocityCalculator::remove_WhenThrowVelocitiesChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Oculus.Interaction.Throw", "ReleaseVelocityInformation")})})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Throw::IVelocityCalculator*), "remove_WhenThrowVelocitiesChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Throw::IVelocityCalculator::add_WhenNewSampleAvailable
// Il2CppName: add_WhenNewSampleAvailable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Throw::IVelocityCalculator::*)(::System::Action_1<::Oculus::Interaction::Throw::ReleaseVelocityInformation>*)>(&Oculus::Interaction::Throw::IVelocityCalculator::add_WhenNewSampleAvailable)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Oculus.Interaction.Throw", "ReleaseVelocityInformation")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Throw::IVelocityCalculator*), "add_WhenNewSampleAvailable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Throw::IVelocityCalculator::remove_WhenNewSampleAvailable
// Il2CppName: remove_WhenNewSampleAvailable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Throw::IVelocityCalculator::*)(::System::Action_1<::Oculus::Interaction::Throw::ReleaseVelocityInformation>*)>(&Oculus::Interaction::Throw::IVelocityCalculator::remove_WhenNewSampleAvailable)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Oculus.Interaction.Throw", "ReleaseVelocityInformation")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Throw::IVelocityCalculator*), "remove_WhenNewSampleAvailable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Throw::IVelocityCalculator::CalculateThrowVelocity
// Il2CppName: CalculateThrowVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::Throw::ReleaseVelocityInformation (Oculus::Interaction::Throw::IVelocityCalculator::*)(::UnityEngine::Transform*)>(&Oculus::Interaction::Throw::IVelocityCalculator::CalculateThrowVelocity)> {
  static const MethodInfo* get() {
    static auto* objectThrown = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Throw::IVelocityCalculator*), "CalculateThrowVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{objectThrown});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Throw::IVelocityCalculator::LastThrowVelocities
// Il2CppName: LastThrowVelocities
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::Throw::ReleaseVelocityInformation>* (Oculus::Interaction::Throw::IVelocityCalculator::*)()>(&Oculus::Interaction::Throw::IVelocityCalculator::LastThrowVelocities)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Throw::IVelocityCalculator*), "LastThrowVelocities", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Throw::IVelocityCalculator::SetUpdateFrequency
// Il2CppName: SetUpdateFrequency
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Throw::IVelocityCalculator::*)(float)>(&Oculus::Interaction::Throw::IVelocityCalculator::SetUpdateFrequency)> {
  static const MethodInfo* get() {
    static auto* frequency = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Throw::IVelocityCalculator*), "SetUpdateFrequency", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{frequency});
  }
};
