// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.Throw.HandPoseInputDevice
#include "Oculus/Interaction/Throw/HandPoseInputDevice.hpp"
// Including type: Oculus.Interaction.Input.HandFinger
#include "Oculus/Interaction/Input/HandFinger.hpp"
// Including type: Oculus.Interaction.Input.HandJointId
#include "Oculus/Interaction/Input/HandJointId.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Pose
  struct Pose;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::Throw::HandPoseInputDevice::HandJointPoseMetaData);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::Throw::HandPoseInputDevice::HandJointPoseMetaData*, "Oculus.Interaction.Throw", "HandPoseInputDevice/HandJointPoseMetaData");
// Type namespace: Oculus.Interaction.Throw
namespace Oculus::Interaction::Throw {
  // WARNING Size may be invalid!
  // Autogenerated type: Oculus.Interaction.Throw.HandPoseInputDevice/HandJointPoseMetaData
  // [TokenAttribute] Offset: FFFFFFFF
  class HandPoseInputDevice::HandJointPoseMetaData : public ::Il2CppObject {
    public:
    public:
    // public readonly Oculus.Interaction.Input.HandFinger Finger
    // Size: 0x4
    // Offset: 0x10
    ::Oculus::Interaction::Input::HandFinger Finger;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Input::HandFinger) == 0x4);
    // public readonly Oculus.Interaction.Input.HandJointId JointId
    // Size: 0x4
    // Offset: 0x14
    ::Oculus::Interaction::Input::HandJointId JointId;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Input::HandJointId) == 0x4);
    // public readonly System.Collections.Generic.List`1<UnityEngine.Vector3> Velocities
    // Size: 0x8
    // Offset: 0x18
    ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* Velocities;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::Vector3>*) == 0x8);
    // private System.Nullable`1<UnityEngine.Vector3> _previousPosition
    // Size: 0xFFFFFFFF
    // Offset: 0x20
    ::System::Nullable_1<::UnityEngine::Vector3> previousPosition;
    // private System.Int32 _lastWritePos
    // Size: 0x4
    // Offset: 0x30
    int lastWritePos;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 _bufferLength
    // Size: 0x4
    // Offset: 0x34
    int bufferLength;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Get instance field reference: public readonly Oculus.Interaction.Input.HandFinger Finger
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::HandFinger& dyn_Finger();
    // Get instance field reference: public readonly Oculus.Interaction.Input.HandJointId JointId
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::HandJointId& dyn_JointId();
    // Get instance field reference: public readonly System.Collections.Generic.List`1<UnityEngine.Vector3> Velocities
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector3>*& dyn_Velocities();
    // Get instance field reference: private System.Nullable`1<UnityEngine.Vector3> _previousPosition
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<::UnityEngine::Vector3>& dyn__previousPosition();
    // Get instance field reference: private System.Int32 _lastWritePos
    [[deprecated("Use field access instead!")]] int& dyn__lastWritePos();
    // Get instance field reference: private System.Int32 _bufferLength
    [[deprecated("Use field access instead!")]] int& dyn__bufferLength();
    // public System.Void .ctor(Oculus.Interaction.Input.HandFinger finger, Oculus.Interaction.Input.HandJointId joint, System.Int32 bufferLength)
    // Offset: 0x47E2258
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static HandPoseInputDevice::HandJointPoseMetaData* New_ctor(::Oculus::Interaction::Input::HandFinger finger, ::Oculus::Interaction::Input::HandJointId joint, int bufferLength) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::HandPoseInputDevice::HandJointPoseMetaData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<HandPoseInputDevice::HandJointPoseMetaData*, creationType>(finger, joint, bufferLength)));
    }
    // public System.Void BufferNewValue(UnityEngine.Pose newPose, System.Single delta)
    // Offset: 0x47E25C4
    void BufferNewValue(::UnityEngine::Pose newPose, float delta);
    // public UnityEngine.Vector3 GetAverageVelocityVector()
    // Offset: 0x47E29A4
    ::UnityEngine::Vector3 GetAverageVelocityVector();
    // public System.Void ResetSpeedsBuffer()
    // Offset: 0x47E2B78
    void ResetSpeedsBuffer();
  }; // Oculus.Interaction.Throw.HandPoseInputDevice/HandJointPoseMetaData
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::Throw::HandPoseInputDevice::HandJointPoseMetaData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Oculus::Interaction::Throw::HandPoseInputDevice::HandJointPoseMetaData::BufferNewValue
// Il2CppName: BufferNewValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Throw::HandPoseInputDevice::HandJointPoseMetaData::*)(::UnityEngine::Pose, float)>(&Oculus::Interaction::Throw::HandPoseInputDevice::HandJointPoseMetaData::BufferNewValue)> {
  static const MethodInfo* get() {
    static auto* newPose = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->byval_arg;
    static auto* delta = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Throw::HandPoseInputDevice::HandJointPoseMetaData*), "BufferNewValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newPose, delta});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Throw::HandPoseInputDevice::HandJointPoseMetaData::GetAverageVelocityVector
// Il2CppName: GetAverageVelocityVector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (Oculus::Interaction::Throw::HandPoseInputDevice::HandJointPoseMetaData::*)()>(&Oculus::Interaction::Throw::HandPoseInputDevice::HandJointPoseMetaData::GetAverageVelocityVector)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Throw::HandPoseInputDevice::HandJointPoseMetaData*), "GetAverageVelocityVector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Throw::HandPoseInputDevice::HandJointPoseMetaData::ResetSpeedsBuffer
// Il2CppName: ResetSpeedsBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Throw::HandPoseInputDevice::HandJointPoseMetaData::*)()>(&Oculus::Interaction::Throw::HandPoseInputDevice::HandJointPoseMetaData::ResetSpeedsBuffer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Throw::HandPoseInputDevice::HandJointPoseMetaData*), "ResetSpeedsBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
