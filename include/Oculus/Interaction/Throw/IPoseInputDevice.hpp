// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Pose
  struct Pose;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: ValueTuple`2<T1, T2>
  template<typename T1, typename T2>
  struct ValueTuple_2;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.Throw
namespace Oculus::Interaction::Throw {
  // Forward declaring type: IPoseInputDevice
  class IPoseInputDevice;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::Throw::IPoseInputDevice);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::Throw::IPoseInputDevice*, "Oculus.Interaction.Throw", "IPoseInputDevice");
// Type namespace: Oculus.Interaction.Throw
namespace Oculus::Interaction::Throw {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.Throw.IPoseInputDevice
  // [TokenAttribute] Offset: FFFFFFFF
  class IPoseInputDevice {
    public:
    // public System.Boolean get_IsInputValid()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_IsInputValid();
    // public System.Boolean get_IsHighConfidence()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_IsHighConfidence();
    // public System.Boolean GetRootPose(out UnityEngine.Pose pose)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool GetRootPose(ByRef<::UnityEngine::Pose> pose);
    // public System.ValueTuple`2<UnityEngine.Vector3,UnityEngine.Vector3> GetExternalVelocities()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::ValueTuple_2<::UnityEngine::Vector3, ::UnityEngine::Vector3> GetExternalVelocities();
  }; // Oculus.Interaction.Throw.IPoseInputDevice
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::Throw::IPoseInputDevice::get_IsInputValid
// Il2CppName: get_IsInputValid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Throw::IPoseInputDevice::*)()>(&Oculus::Interaction::Throw::IPoseInputDevice::get_IsInputValid)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Throw::IPoseInputDevice*), "get_IsInputValid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Throw::IPoseInputDevice::get_IsHighConfidence
// Il2CppName: get_IsHighConfidence
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Throw::IPoseInputDevice::*)()>(&Oculus::Interaction::Throw::IPoseInputDevice::get_IsHighConfidence)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Throw::IPoseInputDevice*), "get_IsHighConfidence", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Throw::IPoseInputDevice::GetRootPose
// Il2CppName: GetRootPose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Throw::IPoseInputDevice::*)(ByRef<::UnityEngine::Pose>)>(&Oculus::Interaction::Throw::IPoseInputDevice::GetRootPose)> {
  static const MethodInfo* get() {
    static auto* pose = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Throw::IPoseInputDevice*), "GetRootPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pose});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Throw::IPoseInputDevice::GetExternalVelocities
// Il2CppName: GetExternalVelocities
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::ValueTuple_2<::UnityEngine::Vector3, ::UnityEngine::Vector3> (Oculus::Interaction::Throw::IPoseInputDevice::*)()>(&Oculus::Interaction::Throw::IPoseInputDevice::GetExternalVelocities)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Throw::IPoseInputDevice*), "GetExternalVelocities", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
