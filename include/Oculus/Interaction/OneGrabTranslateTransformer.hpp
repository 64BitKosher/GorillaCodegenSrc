// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: Oculus.Interaction.ITransformer
#include "Oculus/Interaction/ITransformer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction
namespace Oculus::Interaction {
  // Forward declaring type: IGrabbable
  class IGrabbable;
}
// Completed forward declares
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Forward declaring type: OneGrabTranslateTransformer
  class OneGrabTranslateTransformer;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::OneGrabTranslateTransformer);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::OneGrabTranslateTransformer*, "Oculus.Interaction", "OneGrabTranslateTransformer");
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Size: 0x50
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.OneGrabTranslateTransformer
  // [TokenAttribute] Offset: FFFFFFFF
  class OneGrabTranslateTransformer : public ::UnityEngine::MonoBehaviour/*, public ::Oculus::Interaction::ITransformer*/ {
    public:
    // Nested type: ::Oculus::Interaction::OneGrabTranslateTransformer::OneGrabTranslateConstraints
    class OneGrabTranslateConstraints;
    public:
    // private Oculus.Interaction.OneGrabTranslateTransformer/OneGrabTranslateConstraints _constraints
    // Size: 0x8
    // Offset: 0x20
    ::Oculus::Interaction::OneGrabTranslateTransformer::OneGrabTranslateConstraints* constraints;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::OneGrabTranslateTransformer::OneGrabTranslateConstraints*) == 0x8);
    // private Oculus.Interaction.OneGrabTranslateTransformer/OneGrabTranslateConstraints _parentConstraints
    // Size: 0x8
    // Offset: 0x28
    ::Oculus::Interaction::OneGrabTranslateTransformer::OneGrabTranslateConstraints* parentConstraints;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::OneGrabTranslateTransformer::OneGrabTranslateConstraints*) == 0x8);
    // private UnityEngine.Vector3 _initialPosition
    // Size: 0xC
    // Offset: 0x30
    ::UnityEngine::Vector3 initialPosition;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.Vector3 _grabOffsetInLocalSpace
    // Size: 0xC
    // Offset: 0x3C
    ::UnityEngine::Vector3 grabOffsetInLocalSpace;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private Oculus.Interaction.IGrabbable _grabbable
    // Size: 0x8
    // Offset: 0x48
    ::Oculus::Interaction::IGrabbable* grabbable;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::IGrabbable*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::Oculus::Interaction::ITransformer
    operator ::Oculus::Interaction::ITransformer() noexcept {
      return *reinterpret_cast<::Oculus::Interaction::ITransformer*>(this);
    }
    // Get instance field reference: private Oculus.Interaction.OneGrabTranslateTransformer/OneGrabTranslateConstraints _constraints
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::OneGrabTranslateTransformer::OneGrabTranslateConstraints*& dyn__constraints();
    // Get instance field reference: private Oculus.Interaction.OneGrabTranslateTransformer/OneGrabTranslateConstraints _parentConstraints
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::OneGrabTranslateTransformer::OneGrabTranslateConstraints*& dyn__parentConstraints();
    // Get instance field reference: private UnityEngine.Vector3 _initialPosition
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn__initialPosition();
    // Get instance field reference: private UnityEngine.Vector3 _grabOffsetInLocalSpace
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn__grabOffsetInLocalSpace();
    // Get instance field reference: private Oculus.Interaction.IGrabbable _grabbable
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::IGrabbable*& dyn__grabbable();
    // public Oculus.Interaction.OneGrabTranslateTransformer/OneGrabTranslateConstraints get_Constraints()
    // Offset: 0x47A50DC
    ::Oculus::Interaction::OneGrabTranslateTransformer::OneGrabTranslateConstraints* get_Constraints();
    // public System.Void set_Constraints(Oculus.Interaction.OneGrabTranslateTransformer/OneGrabTranslateConstraints value)
    // Offset: 0x47A50E4
    void set_Constraints(::Oculus::Interaction::OneGrabTranslateTransformer::OneGrabTranslateConstraints* value);
    // public System.Void Initialize(Oculus.Interaction.IGrabbable grabbable)
    // Offset: 0x47A5410
    void Initialize(::Oculus::Interaction::IGrabbable* grabbable);
    // private System.Void GenerateParentConstraints()
    // Offset: 0x47A5100
    void GenerateParentConstraints();
    // public System.Void BeginTransform()
    // Offset: 0x47A54F0
    void BeginTransform();
    // public System.Void UpdateTransform()
    // Offset: 0x47A5670
    void UpdateTransform();
    // public System.Void EndTransform()
    // Offset: 0x47A59AC
    void EndTransform();
    // public System.Void InjectOptionalConstraints(Oculus.Interaction.OneGrabTranslateTransformer/OneGrabTranslateConstraints constraints)
    // Offset: 0x47A59B0
    void InjectOptionalConstraints(::Oculus::Interaction::OneGrabTranslateTransformer::OneGrabTranslateConstraints* constraints);
    // public System.Void .ctor()
    // Offset: 0x47A59B8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static OneGrabTranslateTransformer* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabTranslateTransformer::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<OneGrabTranslateTransformer*, creationType>()));
    }
  }; // Oculus.Interaction.OneGrabTranslateTransformer
  #pragma pack(pop)
  static check_size<sizeof(OneGrabTranslateTransformer), 72 + sizeof(::Oculus::Interaction::IGrabbable*)> __Oculus_Interaction_OneGrabTranslateTransformerSizeCheck;
  static_assert(sizeof(OneGrabTranslateTransformer) == 0x50);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::OneGrabTranslateTransformer::get_Constraints
// Il2CppName: get_Constraints
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::OneGrabTranslateTransformer::OneGrabTranslateConstraints* (Oculus::Interaction::OneGrabTranslateTransformer::*)()>(&Oculus::Interaction::OneGrabTranslateTransformer::get_Constraints)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::OneGrabTranslateTransformer*), "get_Constraints", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::OneGrabTranslateTransformer::set_Constraints
// Il2CppName: set_Constraints
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::OneGrabTranslateTransformer::*)(::Oculus::Interaction::OneGrabTranslateTransformer::OneGrabTranslateConstraints*)>(&Oculus::Interaction::OneGrabTranslateTransformer::set_Constraints)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "OneGrabTranslateTransformer/OneGrabTranslateConstraints")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::OneGrabTranslateTransformer*), "set_Constraints", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::OneGrabTranslateTransformer::Initialize
// Il2CppName: Initialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::OneGrabTranslateTransformer::*)(::Oculus::Interaction::IGrabbable*)>(&Oculus::Interaction::OneGrabTranslateTransformer::Initialize)> {
  static const MethodInfo* get() {
    static auto* grabbable = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "IGrabbable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::OneGrabTranslateTransformer*), "Initialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{grabbable});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::OneGrabTranslateTransformer::GenerateParentConstraints
// Il2CppName: GenerateParentConstraints
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::OneGrabTranslateTransformer::*)()>(&Oculus::Interaction::OneGrabTranslateTransformer::GenerateParentConstraints)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::OneGrabTranslateTransformer*), "GenerateParentConstraints", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::OneGrabTranslateTransformer::BeginTransform
// Il2CppName: BeginTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::OneGrabTranslateTransformer::*)()>(&Oculus::Interaction::OneGrabTranslateTransformer::BeginTransform)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::OneGrabTranslateTransformer*), "BeginTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::OneGrabTranslateTransformer::UpdateTransform
// Il2CppName: UpdateTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::OneGrabTranslateTransformer::*)()>(&Oculus::Interaction::OneGrabTranslateTransformer::UpdateTransform)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::OneGrabTranslateTransformer*), "UpdateTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::OneGrabTranslateTransformer::EndTransform
// Il2CppName: EndTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::OneGrabTranslateTransformer::*)()>(&Oculus::Interaction::OneGrabTranslateTransformer::EndTransform)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::OneGrabTranslateTransformer*), "EndTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::OneGrabTranslateTransformer::InjectOptionalConstraints
// Il2CppName: InjectOptionalConstraints
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::OneGrabTranslateTransformer::*)(::Oculus::Interaction::OneGrabTranslateTransformer::OneGrabTranslateConstraints*)>(&Oculus::Interaction::OneGrabTranslateTransformer::InjectOptionalConstraints)> {
  static const MethodInfo* get() {
    static auto* constraints = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "OneGrabTranslateTransformer/OneGrabTranslateConstraints")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::OneGrabTranslateTransformer*), "InjectOptionalConstraints", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{constraints});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::OneGrabTranslateTransformer::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
