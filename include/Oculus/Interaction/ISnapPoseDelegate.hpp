// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Pose
  struct Pose;
}
// Completed forward declares
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Forward declaring type: ISnapPoseDelegate
  class ISnapPoseDelegate;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::ISnapPoseDelegate);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::ISnapPoseDelegate*, "Oculus.Interaction", "ISnapPoseDelegate");
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.ISnapPoseDelegate
  // [TokenAttribute] Offset: FFFFFFFF
  class ISnapPoseDelegate {
    public:
    // public System.Void TrackElement(System.Int32 id, UnityEngine.Pose p)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void TrackElement(int id, ::UnityEngine::Pose p);
    // public System.Void UntrackElement(System.Int32 id)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void UntrackElement(int id);
    // public System.Void SnapElement(System.Int32 id, UnityEngine.Pose pose)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void SnapElement(int id, ::UnityEngine::Pose pose);
    // public System.Void UnsnapElement(System.Int32 id)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void UnsnapElement(int id);
    // public System.Void MoveTrackedElement(System.Int32 id, UnityEngine.Pose p)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void MoveTrackedElement(int id, ::UnityEngine::Pose p);
    // public System.Boolean SnapPoseForElement(System.Int32 id, UnityEngine.Pose pose, out UnityEngine.Pose result)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool SnapPoseForElement(int id, ::UnityEngine::Pose pose, ByRef<::UnityEngine::Pose> result);
  }; // Oculus.Interaction.ISnapPoseDelegate
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::ISnapPoseDelegate::TrackElement
// Il2CppName: TrackElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::ISnapPoseDelegate::*)(int, ::UnityEngine::Pose)>(&Oculus::Interaction::ISnapPoseDelegate::TrackElement)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* p = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::ISnapPoseDelegate*), "TrackElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, p});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::ISnapPoseDelegate::UntrackElement
// Il2CppName: UntrackElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::ISnapPoseDelegate::*)(int)>(&Oculus::Interaction::ISnapPoseDelegate::UntrackElement)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::ISnapPoseDelegate*), "UntrackElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::ISnapPoseDelegate::SnapElement
// Il2CppName: SnapElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::ISnapPoseDelegate::*)(int, ::UnityEngine::Pose)>(&Oculus::Interaction::ISnapPoseDelegate::SnapElement)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* pose = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::ISnapPoseDelegate*), "SnapElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, pose});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::ISnapPoseDelegate::UnsnapElement
// Il2CppName: UnsnapElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::ISnapPoseDelegate::*)(int)>(&Oculus::Interaction::ISnapPoseDelegate::UnsnapElement)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::ISnapPoseDelegate*), "UnsnapElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::ISnapPoseDelegate::MoveTrackedElement
// Il2CppName: MoveTrackedElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::ISnapPoseDelegate::*)(int, ::UnityEngine::Pose)>(&Oculus::Interaction::ISnapPoseDelegate::MoveTrackedElement)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* p = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::ISnapPoseDelegate*), "MoveTrackedElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, p});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::ISnapPoseDelegate::SnapPoseForElement
// Il2CppName: SnapPoseForElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::ISnapPoseDelegate::*)(int, ::UnityEngine::Pose, ByRef<::UnityEngine::Pose>)>(&Oculus::Interaction::ISnapPoseDelegate::SnapPoseForElement)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* pose = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::ISnapPoseDelegate*), "SnapPoseForElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, pose, result});
  }
};
