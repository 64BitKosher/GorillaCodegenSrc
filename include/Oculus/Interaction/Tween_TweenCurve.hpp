// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.Tween
#include "Oculus/Interaction/Tween.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction
namespace Oculus::Interaction {
  // Forward declaring type: ProgressCurve
  class ProgressCurve;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::Tween::TweenCurve);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::Tween::TweenCurve*, "Oculus.Interaction", "Tween/TweenCurve");
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Size: 0x54
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.Tween/TweenCurve
  // [TokenAttribute] Offset: FFFFFFFF
  class Tween::TweenCurve : public ::Il2CppObject {
    public:
    public:
    // public Oculus.Interaction.ProgressCurve Curve
    // Size: 0x8
    // Offset: 0x10
    ::Oculus::Interaction::ProgressCurve* Curve;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::ProgressCurve*) == 0x8);
    // public System.Single PrevProgress
    // Size: 0x4
    // Offset: 0x18
    float PrevProgress;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public UnityEngine.Pose Current
    // Size: 0x1C
    // Offset: 0x1C
    ::UnityEngine::Pose Current;
    // Field size check
    static_assert(sizeof(::UnityEngine::Pose) == 0x1C);
    // public UnityEngine.Pose Target
    // Size: 0x1C
    // Offset: 0x38
    ::UnityEngine::Pose Target;
    // Field size check
    static_assert(sizeof(::UnityEngine::Pose) == 0x1C);
    public:
    // Get instance field reference: public Oculus.Interaction.ProgressCurve Curve
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::ProgressCurve*& dyn_Curve();
    // Get instance field reference: public System.Single PrevProgress
    [[deprecated("Use field access instead!")]] float& dyn_PrevProgress();
    // Get instance field reference: public UnityEngine.Pose Current
    [[deprecated("Use field access instead!")]] ::UnityEngine::Pose& dyn_Current();
    // Get instance field reference: public UnityEngine.Pose Target
    [[deprecated("Use field access instead!")]] ::UnityEngine::Pose& dyn_Target();
    // public System.Void .ctor()
    // Offset: 0x47ABCF4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Tween::TweenCurve* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Tween::TweenCurve::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Tween::TweenCurve*, creationType>()));
    }
  }; // Oculus.Interaction.Tween/TweenCurve
  #pragma pack(pop)
  static check_size<sizeof(Tween::TweenCurve), 56 + sizeof(::UnityEngine::Pose)> __Oculus_Interaction_Tween_TweenCurveSizeCheck;
  static_assert(sizeof(Tween::TweenCurve) == 0x54);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::Tween::TweenCurve::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
