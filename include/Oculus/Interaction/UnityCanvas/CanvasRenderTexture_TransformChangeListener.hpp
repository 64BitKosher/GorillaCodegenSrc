// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.UnityCanvas.CanvasRenderTexture
#include "Oculus/Interaction/UnityCanvas/CanvasRenderTexture.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction::UnityCanvas
namespace Oculus::Interaction::UnityCanvas {
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::TransformChangeListener);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::TransformChangeListener*, "Oculus.Interaction.UnityCanvas", "CanvasRenderTexture/TransformChangeListener");
// Type namespace: Oculus.Interaction.UnityCanvas
namespace Oculus::Interaction::UnityCanvas {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.UnityCanvas.CanvasRenderTexture/TransformChangeListener
  // [TokenAttribute] Offset: FFFFFFFF
  class CanvasRenderTexture::TransformChangeListener : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::TransformChangeListener::$$c
    class $$c;
    public:
    // private System.Action WhenRectTransformDimensionsChanged
    // Size: 0x8
    // Offset: 0x20
    ::System::Action* WhenRectTransformDimensionsChanged;
    // Field size check
    static_assert(sizeof(::System::Action*) == 0x8);
    public:
    // Get instance field reference: private System.Action WhenRectTransformDimensionsChanged
    [[deprecated("Use field access instead!")]] ::System::Action*& dyn_WhenRectTransformDimensionsChanged();
    // public System.Void add_WhenRectTransformDimensionsChanged(System.Action value)
    // Offset: 0x47E079C
    void add_WhenRectTransformDimensionsChanged(::System::Action* value);
    // public System.Void remove_WhenRectTransformDimensionsChanged(System.Action value)
    // Offset: 0x47E09CC
    void remove_WhenRectTransformDimensionsChanged(::System::Action* value);
    // private System.Void OnRectTransformDimensionsChange()
    // Offset: 0x47E11F0
    void OnRectTransformDimensionsChange();
    // public System.Void .ctor()
    // Offset: 0x47E1214
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CanvasRenderTexture::TransformChangeListener* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::TransformChangeListener::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CanvasRenderTexture::TransformChangeListener*, creationType>()));
    }
  }; // Oculus.Interaction.UnityCanvas.CanvasRenderTexture/TransformChangeListener
  #pragma pack(pop)
  static check_size<sizeof(CanvasRenderTexture::TransformChangeListener), 32 + sizeof(::System::Action*)> __Oculus_Interaction_UnityCanvas_CanvasRenderTexture_TransformChangeListenerSizeCheck;
  static_assert(sizeof(CanvasRenderTexture::TransformChangeListener) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::UnityCanvas::CanvasRenderTexture::TransformChangeListener::add_WhenRectTransformDimensionsChanged
// Il2CppName: add_WhenRectTransformDimensionsChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::UnityCanvas::CanvasRenderTexture::TransformChangeListener::*)(::System::Action*)>(&Oculus::Interaction::UnityCanvas::CanvasRenderTexture::TransformChangeListener::add_WhenRectTransformDimensionsChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::UnityCanvas::CanvasRenderTexture::TransformChangeListener*), "add_WhenRectTransformDimensionsChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::UnityCanvas::CanvasRenderTexture::TransformChangeListener::remove_WhenRectTransformDimensionsChanged
// Il2CppName: remove_WhenRectTransformDimensionsChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::UnityCanvas::CanvasRenderTexture::TransformChangeListener::*)(::System::Action*)>(&Oculus::Interaction::UnityCanvas::CanvasRenderTexture::TransformChangeListener::remove_WhenRectTransformDimensionsChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::UnityCanvas::CanvasRenderTexture::TransformChangeListener*), "remove_WhenRectTransformDimensionsChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::UnityCanvas::CanvasRenderTexture::TransformChangeListener::OnRectTransformDimensionsChange
// Il2CppName: OnRectTransformDimensionsChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::UnityCanvas::CanvasRenderTexture::TransformChangeListener::*)()>(&Oculus::Interaction::UnityCanvas::CanvasRenderTexture::TransformChangeListener::OnRectTransformDimensionsChange)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::UnityCanvas::CanvasRenderTexture::TransformChangeListener*), "OnRectTransformDimensionsChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::UnityCanvas::CanvasRenderTexture::TransformChangeListener::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
