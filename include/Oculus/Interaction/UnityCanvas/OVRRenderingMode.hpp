// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: Oculus.Interaction.UnityCanvas
namespace Oculus::Interaction::UnityCanvas {
  // Forward declaring type: OVRRenderingMode
  struct OVRRenderingMode;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::UnityCanvas::OVRRenderingMode, "Oculus.Interaction.UnityCanvas", "OVRRenderingMode");
// Type namespace: Oculus.Interaction.UnityCanvas
namespace Oculus::Interaction::UnityCanvas {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.UnityCanvas.OVRRenderingMode
  // [TokenAttribute] Offset: FFFFFFFF
  struct OVRRenderingMode/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: OVRRenderingMode
    constexpr OVRRenderingMode(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public Oculus.Interaction.UnityCanvas.OVRRenderingMode AlphaBlended
    static constexpr const int AlphaBlended = 0;
    // Get static field: static public Oculus.Interaction.UnityCanvas.OVRRenderingMode AlphaBlended
    static ::Oculus::Interaction::UnityCanvas::OVRRenderingMode _get_AlphaBlended();
    // Set static field: static public Oculus.Interaction.UnityCanvas.OVRRenderingMode AlphaBlended
    static void _set_AlphaBlended(::Oculus::Interaction::UnityCanvas::OVRRenderingMode value);
    // static field const value: static public Oculus.Interaction.UnityCanvas.OVRRenderingMode AlphaCutout
    static constexpr const int AlphaCutout = 1;
    // Get static field: static public Oculus.Interaction.UnityCanvas.OVRRenderingMode AlphaCutout
    static ::Oculus::Interaction::UnityCanvas::OVRRenderingMode _get_AlphaCutout();
    // Set static field: static public Oculus.Interaction.UnityCanvas.OVRRenderingMode AlphaCutout
    static void _set_AlphaCutout(::Oculus::Interaction::UnityCanvas::OVRRenderingMode value);
    // static field const value: static public Oculus.Interaction.UnityCanvas.OVRRenderingMode Opaque
    static constexpr const int Opaque = 2;
    // Get static field: static public Oculus.Interaction.UnityCanvas.OVRRenderingMode Opaque
    static ::Oculus::Interaction::UnityCanvas::OVRRenderingMode _get_Opaque();
    // Set static field: static public Oculus.Interaction.UnityCanvas.OVRRenderingMode Opaque
    static void _set_Opaque(::Oculus::Interaction::UnityCanvas::OVRRenderingMode value);
    // static field const value: static public Oculus.Interaction.UnityCanvas.OVRRenderingMode Overlay
    static constexpr const int Overlay = 100;
    // Get static field: static public Oculus.Interaction.UnityCanvas.OVRRenderingMode Overlay
    static ::Oculus::Interaction::UnityCanvas::OVRRenderingMode _get_Overlay();
    // Set static field: static public Oculus.Interaction.UnityCanvas.OVRRenderingMode Overlay
    static void _set_Overlay(::Oculus::Interaction::UnityCanvas::OVRRenderingMode value);
    // static field const value: static public Oculus.Interaction.UnityCanvas.OVRRenderingMode Underlay
    static constexpr const int Underlay = 101;
    // Get static field: static public Oculus.Interaction.UnityCanvas.OVRRenderingMode Underlay
    static ::Oculus::Interaction::UnityCanvas::OVRRenderingMode _get_Underlay();
    // Set static field: static public Oculus.Interaction.UnityCanvas.OVRRenderingMode Underlay
    static void _set_Underlay(::Oculus::Interaction::UnityCanvas::OVRRenderingMode value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // Oculus.Interaction.UnityCanvas.OVRRenderingMode
  #pragma pack(pop)
  static check_size<sizeof(OVRRenderingMode), 0 + sizeof(int)> __Oculus_Interaction_UnityCanvas_OVRRenderingModeSizeCheck;
  static_assert(sizeof(OVRRenderingMode) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
