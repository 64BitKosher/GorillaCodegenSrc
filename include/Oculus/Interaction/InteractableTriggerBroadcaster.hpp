// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction
namespace Oculus::Interaction {
  // Forward declaring type: IInteractable
  class IInteractable;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Rigidbody
  class Rigidbody;
  // Forward declaring type: Collider
  class Collider;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: HashSet`1<T>
  template<typename T>
  class HashSet_1;
}
// Completed forward declares
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Forward declaring type: InteractableTriggerBroadcaster
  class InteractableTriggerBroadcaster;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::InteractableTriggerBroadcaster);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::InteractableTriggerBroadcaster*, "Oculus.Interaction", "InteractableTriggerBroadcaster");
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Size: 0x4B
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.InteractableTriggerBroadcaster
  // [TokenAttribute] Offset: FFFFFFFF
  class InteractableTriggerBroadcaster : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::Oculus::Interaction::InteractableTriggerBroadcaster::$$c
    class $$c;
    public:
    // public System.Action`2<Oculus.Interaction.IInteractable,UnityEngine.Rigidbody> WhenTriggerEntered
    // Size: 0x8
    // Offset: 0x20
    ::System::Action_2<::Oculus::Interaction::IInteractable*, ::UnityEngine::Rigidbody*>* WhenTriggerEntered;
    // Field size check
    static_assert(sizeof(::System::Action_2<::Oculus::Interaction::IInteractable*, ::UnityEngine::Rigidbody*>*) == 0x8);
    // public System.Action`2<Oculus.Interaction.IInteractable,UnityEngine.Rigidbody> WhenTriggerExited
    // Size: 0x8
    // Offset: 0x28
    ::System::Action_2<::Oculus::Interaction::IInteractable*, ::UnityEngine::Rigidbody*>* WhenTriggerExited;
    // Field size check
    static_assert(sizeof(::System::Action_2<::Oculus::Interaction::IInteractable*, ::UnityEngine::Rigidbody*>*) == 0x8);
    // private Oculus.Interaction.IInteractable _interactable
    // Size: 0x8
    // Offset: 0x30
    ::Oculus::Interaction::IInteractable* interactable;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::IInteractable*) == 0x8);
    // private System.Collections.Generic.Dictionary`2<UnityEngine.Rigidbody,System.Boolean> _rigidbodyTriggers
    // Size: 0x8
    // Offset: 0x38
    ::System::Collections::Generic::Dictionary_2<::UnityEngine::Rigidbody*, bool>* rigidbodyTriggers;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::UnityEngine::Rigidbody*, bool>*) == 0x8);
    // private System.Collections.Generic.List`1<UnityEngine.Rigidbody> _rigidbodies
    // Size: 0x8
    // Offset: 0x40
    ::System::Collections::Generic::List_1<::UnityEngine::Rigidbody*>* rigidbodies;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::Rigidbody*>*) == 0x8);
    // protected System.Boolean _started
    // Size: 0x1
    // Offset: 0x48
    bool started;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _skippedPhysics
    // Size: 0x1
    // Offset: 0x49
    bool skippedPhysics;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _forcedGlobalPhysicsUpdate
    // Size: 0x1
    // Offset: 0x4A
    bool forcedGlobalPhysicsUpdate;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get static field: static private System.Collections.Generic.HashSet`1<Oculus.Interaction.InteractableTriggerBroadcaster> _broadcasters
    static ::System::Collections::Generic::HashSet_1<::Oculus::Interaction::InteractableTriggerBroadcaster*>* _get__broadcasters();
    // Set static field: static private System.Collections.Generic.HashSet`1<Oculus.Interaction.InteractableTriggerBroadcaster> _broadcasters
    static void _set__broadcasters(::System::Collections::Generic::HashSet_1<::Oculus::Interaction::InteractableTriggerBroadcaster*>* value);
    // Get instance field reference: public System.Action`2<Oculus.Interaction.IInteractable,UnityEngine.Rigidbody> WhenTriggerEntered
    [[deprecated("Use field access instead!")]] ::System::Action_2<::Oculus::Interaction::IInteractable*, ::UnityEngine::Rigidbody*>*& dyn_WhenTriggerEntered();
    // Get instance field reference: public System.Action`2<Oculus.Interaction.IInteractable,UnityEngine.Rigidbody> WhenTriggerExited
    [[deprecated("Use field access instead!")]] ::System::Action_2<::Oculus::Interaction::IInteractable*, ::UnityEngine::Rigidbody*>*& dyn_WhenTriggerExited();
    // Get instance field reference: private Oculus.Interaction.IInteractable _interactable
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::IInteractable*& dyn__interactable();
    // Get instance field reference: private System.Collections.Generic.Dictionary`2<UnityEngine.Rigidbody,System.Boolean> _rigidbodyTriggers
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::Rigidbody*, bool>*& dyn__rigidbodyTriggers();
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.Rigidbody> _rigidbodies
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Rigidbody*>*& dyn__rigidbodies();
    // Get instance field reference: protected System.Boolean _started
    [[deprecated("Use field access instead!")]] bool& dyn__started();
    // Get instance field reference: private System.Boolean _skippedPhysics
    [[deprecated("Use field access instead!")]] bool& dyn__skippedPhysics();
    // Get instance field reference: private System.Boolean _forcedGlobalPhysicsUpdate
    [[deprecated("Use field access instead!")]] bool& dyn__forcedGlobalPhysicsUpdate();
    // protected System.Void Start()
    // Offset: 0x4786FB4
    void Start();
    // protected System.Void OnTriggerStay(UnityEngine.Collider collider)
    // Offset: 0x47870A8
    void OnTriggerStay(::UnityEngine::Collider* collider);
    // protected System.Void OnEnable()
    // Offset: 0x47871E8
    void OnEnable();
    // protected System.Void FixedUpdate()
    // Offset: 0x478727C
    void FixedUpdate();
    // private System.Void UpdateTriggers()
    // Offset: 0x47872F0
    void UpdateTriggers();
    // protected System.Void OnDisable()
    // Offset: 0x4787590
    void OnDisable();
    // protected System.Void OnDestroy()
    // Offset: 0x47877A8
    void OnDestroy();
    // static public System.Void ForceGlobalUpdateTriggers()
    // Offset: 0x47877E0
    static void ForceGlobalUpdateTriggers();
    // public System.Void InjectAllInteractableTriggerBroadcaster(Oculus.Interaction.IInteractable interactable)
    // Offset: 0x4787958
    void InjectAllInteractableTriggerBroadcaster(::Oculus::Interaction::IInteractable* interactable);
    // public System.Void InjectInteractable(Oculus.Interaction.IInteractable interactable)
    // Offset: 0x4787960
    void InjectInteractable(::Oculus::Interaction::IInteractable* interactable);
    // public System.Void .ctor()
    // Offset: 0x4787968
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static InteractableTriggerBroadcaster* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableTriggerBroadcaster::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<InteractableTriggerBroadcaster*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x4787AF4
    static void _cctor();
  }; // Oculus.Interaction.InteractableTriggerBroadcaster
  #pragma pack(pop)
  static check_size<sizeof(InteractableTriggerBroadcaster), 74 + sizeof(bool)> __Oculus_Interaction_InteractableTriggerBroadcasterSizeCheck;
  static_assert(sizeof(InteractableTriggerBroadcaster) == 0x4B);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::InteractableTriggerBroadcaster::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::InteractableTriggerBroadcaster::*)()>(&Oculus::Interaction::InteractableTriggerBroadcaster::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::InteractableTriggerBroadcaster*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::InteractableTriggerBroadcaster::OnTriggerStay
// Il2CppName: OnTriggerStay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::InteractableTriggerBroadcaster::*)(::UnityEngine::Collider*)>(&Oculus::Interaction::InteractableTriggerBroadcaster::OnTriggerStay)> {
  static const MethodInfo* get() {
    static auto* collider = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::InteractableTriggerBroadcaster*), "OnTriggerStay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{collider});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::InteractableTriggerBroadcaster::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::InteractableTriggerBroadcaster::*)()>(&Oculus::Interaction::InteractableTriggerBroadcaster::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::InteractableTriggerBroadcaster*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::InteractableTriggerBroadcaster::FixedUpdate
// Il2CppName: FixedUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::InteractableTriggerBroadcaster::*)()>(&Oculus::Interaction::InteractableTriggerBroadcaster::FixedUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::InteractableTriggerBroadcaster*), "FixedUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::InteractableTriggerBroadcaster::UpdateTriggers
// Il2CppName: UpdateTriggers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::InteractableTriggerBroadcaster::*)()>(&Oculus::Interaction::InteractableTriggerBroadcaster::UpdateTriggers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::InteractableTriggerBroadcaster*), "UpdateTriggers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::InteractableTriggerBroadcaster::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::InteractableTriggerBroadcaster::*)()>(&Oculus::Interaction::InteractableTriggerBroadcaster::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::InteractableTriggerBroadcaster*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::InteractableTriggerBroadcaster::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::InteractableTriggerBroadcaster::*)()>(&Oculus::Interaction::InteractableTriggerBroadcaster::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::InteractableTriggerBroadcaster*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::InteractableTriggerBroadcaster::ForceGlobalUpdateTriggers
// Il2CppName: ForceGlobalUpdateTriggers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Oculus::Interaction::InteractableTriggerBroadcaster::ForceGlobalUpdateTriggers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::InteractableTriggerBroadcaster*), "ForceGlobalUpdateTriggers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::InteractableTriggerBroadcaster::InjectAllInteractableTriggerBroadcaster
// Il2CppName: InjectAllInteractableTriggerBroadcaster
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::InteractableTriggerBroadcaster::*)(::Oculus::Interaction::IInteractable*)>(&Oculus::Interaction::InteractableTriggerBroadcaster::InjectAllInteractableTriggerBroadcaster)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "IInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::InteractableTriggerBroadcaster*), "InjectAllInteractableTriggerBroadcaster", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::InteractableTriggerBroadcaster::InjectInteractable
// Il2CppName: InjectInteractable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::InteractableTriggerBroadcaster::*)(::Oculus::Interaction::IInteractable*)>(&Oculus::Interaction::InteractableTriggerBroadcaster::InjectInteractable)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "IInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::InteractableTriggerBroadcaster*), "InjectInteractable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::InteractableTriggerBroadcaster::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Oculus::Interaction::InteractableTriggerBroadcaster::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Oculus::Interaction::InteractableTriggerBroadcaster::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::InteractableTriggerBroadcaster*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
