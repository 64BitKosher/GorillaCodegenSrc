// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction
namespace Oculus::Interaction {
  // Forward declaring type: RayInteractor
  class RayInteractor;
}
// Completed forward declares
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Forward declaring type: RayInteractorDebugGizmos
  class RayInteractorDebugGizmos;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::RayInteractorDebugGizmos);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::RayInteractorDebugGizmos*, "Oculus.Interaction", "RayInteractorDebugGizmos");
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Size: 0x5C
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.RayInteractorDebugGizmos
  // [TokenAttribute] Offset: FFFFFFFF
  class RayInteractorDebugGizmos : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private Oculus.Interaction.RayInteractor _rayInteractor
    // Size: 0x8
    // Offset: 0x20
    ::Oculus::Interaction::RayInteractor* rayInteractor;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::RayInteractor*) == 0x8);
    // private System.Single _rayWidth
    // Size: 0x4
    // Offset: 0x28
    float rayWidth;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.Color _normalColor
    // Size: 0x10
    // Offset: 0x2C
    ::UnityEngine::Color normalColor;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // private UnityEngine.Color _hoverColor
    // Size: 0x10
    // Offset: 0x3C
    ::UnityEngine::Color hoverColor;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // private UnityEngine.Color _selectColor
    // Size: 0x10
    // Offset: 0x4C
    ::UnityEngine::Color selectColor;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    public:
    // Get instance field reference: private Oculus.Interaction.RayInteractor _rayInteractor
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::RayInteractor*& dyn__rayInteractor();
    // Get instance field reference: private System.Single _rayWidth
    [[deprecated("Use field access instead!")]] float& dyn__rayWidth();
    // Get instance field reference: private UnityEngine.Color _normalColor
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn__normalColor();
    // Get instance field reference: private UnityEngine.Color _hoverColor
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn__hoverColor();
    // Get instance field reference: private UnityEngine.Color _selectColor
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn__selectColor();
    // public System.Single get_RayWidth()
    // Offset: 0x47B6A60
    float get_RayWidth();
    // public System.Void set_RayWidth(System.Single value)
    // Offset: 0x47B6A68
    void set_RayWidth(float value);
    // public UnityEngine.Color get_NormalColor()
    // Offset: 0x47B6A70
    ::UnityEngine::Color get_NormalColor();
    // public System.Void set_NormalColor(UnityEngine.Color value)
    // Offset: 0x47B6A7C
    void set_NormalColor(::UnityEngine::Color value);
    // public UnityEngine.Color get_HoverColor()
    // Offset: 0x47B6A88
    ::UnityEngine::Color get_HoverColor();
    // public System.Void set_HoverColor(UnityEngine.Color value)
    // Offset: 0x47B6A94
    void set_HoverColor(::UnityEngine::Color value);
    // public UnityEngine.Color get_SelectColor()
    // Offset: 0x47B6AA0
    ::UnityEngine::Color get_SelectColor();
    // public System.Void set_SelectColor(UnityEngine.Color value)
    // Offset: 0x47B6AAC
    void set_SelectColor(::UnityEngine::Color value);
    // protected System.Void Start()
    // Offset: 0x47B6AB8
    void Start();
    // private System.Void LateUpdate()
    // Offset: 0x47B6ABC
    void LateUpdate();
    // public System.Void InjectAllRayInteractorDebugGizmos(Oculus.Interaction.RayInteractor rayInteractor)
    // Offset: 0x47B6BF0
    void InjectAllRayInteractorDebugGizmos(::Oculus::Interaction::RayInteractor* rayInteractor);
    // public System.Void InjectRayInteractor(Oculus.Interaction.RayInteractor rayInteractor)
    // Offset: 0x47B6BF8
    void InjectRayInteractor(::Oculus::Interaction::RayInteractor* rayInteractor);
    // public System.Void .ctor()
    // Offset: 0x47B6C00
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RayInteractorDebugGizmos* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorDebugGizmos::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RayInteractorDebugGizmos*, creationType>()));
    }
  }; // Oculus.Interaction.RayInteractorDebugGizmos
  #pragma pack(pop)
  static check_size<sizeof(RayInteractorDebugGizmos), 76 + sizeof(::UnityEngine::Color)> __Oculus_Interaction_RayInteractorDebugGizmosSizeCheck;
  static_assert(sizeof(RayInteractorDebugGizmos) == 0x5C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::RayInteractorDebugGizmos::get_RayWidth
// Il2CppName: get_RayWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Oculus::Interaction::RayInteractorDebugGizmos::*)()>(&Oculus::Interaction::RayInteractorDebugGizmos::get_RayWidth)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::RayInteractorDebugGizmos*), "get_RayWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::RayInteractorDebugGizmos::set_RayWidth
// Il2CppName: set_RayWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::RayInteractorDebugGizmos::*)(float)>(&Oculus::Interaction::RayInteractorDebugGizmos::set_RayWidth)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::RayInteractorDebugGizmos*), "set_RayWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::RayInteractorDebugGizmos::get_NormalColor
// Il2CppName: get_NormalColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (Oculus::Interaction::RayInteractorDebugGizmos::*)()>(&Oculus::Interaction::RayInteractorDebugGizmos::get_NormalColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::RayInteractorDebugGizmos*), "get_NormalColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::RayInteractorDebugGizmos::set_NormalColor
// Il2CppName: set_NormalColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::RayInteractorDebugGizmos::*)(::UnityEngine::Color)>(&Oculus::Interaction::RayInteractorDebugGizmos::set_NormalColor)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::RayInteractorDebugGizmos*), "set_NormalColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::RayInteractorDebugGizmos::get_HoverColor
// Il2CppName: get_HoverColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (Oculus::Interaction::RayInteractorDebugGizmos::*)()>(&Oculus::Interaction::RayInteractorDebugGizmos::get_HoverColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::RayInteractorDebugGizmos*), "get_HoverColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::RayInteractorDebugGizmos::set_HoverColor
// Il2CppName: set_HoverColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::RayInteractorDebugGizmos::*)(::UnityEngine::Color)>(&Oculus::Interaction::RayInteractorDebugGizmos::set_HoverColor)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::RayInteractorDebugGizmos*), "set_HoverColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::RayInteractorDebugGizmos::get_SelectColor
// Il2CppName: get_SelectColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (Oculus::Interaction::RayInteractorDebugGizmos::*)()>(&Oculus::Interaction::RayInteractorDebugGizmos::get_SelectColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::RayInteractorDebugGizmos*), "get_SelectColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::RayInteractorDebugGizmos::set_SelectColor
// Il2CppName: set_SelectColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::RayInteractorDebugGizmos::*)(::UnityEngine::Color)>(&Oculus::Interaction::RayInteractorDebugGizmos::set_SelectColor)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::RayInteractorDebugGizmos*), "set_SelectColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::RayInteractorDebugGizmos::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::RayInteractorDebugGizmos::*)()>(&Oculus::Interaction::RayInteractorDebugGizmos::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::RayInteractorDebugGizmos*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::RayInteractorDebugGizmos::LateUpdate
// Il2CppName: LateUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::RayInteractorDebugGizmos::*)()>(&Oculus::Interaction::RayInteractorDebugGizmos::LateUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::RayInteractorDebugGizmos*), "LateUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::RayInteractorDebugGizmos::InjectAllRayInteractorDebugGizmos
// Il2CppName: InjectAllRayInteractorDebugGizmos
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::RayInteractorDebugGizmos::*)(::Oculus::Interaction::RayInteractor*)>(&Oculus::Interaction::RayInteractorDebugGizmos::InjectAllRayInteractorDebugGizmos)> {
  static const MethodInfo* get() {
    static auto* rayInteractor = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "RayInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::RayInteractorDebugGizmos*), "InjectAllRayInteractorDebugGizmos", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rayInteractor});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::RayInteractorDebugGizmos::InjectRayInteractor
// Il2CppName: InjectRayInteractor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::RayInteractorDebugGizmos::*)(::Oculus::Interaction::RayInteractor*)>(&Oculus::Interaction::RayInteractorDebugGizmos::InjectRayInteractor)> {
  static const MethodInfo* get() {
    static auto* rayInteractor = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "RayInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::RayInteractorDebugGizmos*), "InjectRayInteractor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rayInteractor});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::RayInteractorDebugGizmos::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
