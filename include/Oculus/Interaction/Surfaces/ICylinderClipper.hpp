// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction::Surfaces
namespace Oculus::Interaction::Surfaces {
  // Forward declaring type: CylinderSegment
  struct CylinderSegment;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.Surfaces
namespace Oculus::Interaction::Surfaces {
  // Forward declaring type: ICylinderClipper
  class ICylinderClipper;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::Surfaces::ICylinderClipper);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::Surfaces::ICylinderClipper*, "Oculus.Interaction.Surfaces", "ICylinderClipper");
// Type namespace: Oculus.Interaction.Surfaces
namespace Oculus::Interaction::Surfaces {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.Surfaces.ICylinderClipper
  // [TokenAttribute] Offset: FFFFFFFF
  class ICylinderClipper {
    public:
    // public System.Boolean GetCylinderSegment(out Oculus.Interaction.Surfaces.CylinderSegment segment)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool GetCylinderSegment(ByRef<::Oculus::Interaction::Surfaces::CylinderSegment> segment);
  }; // Oculus.Interaction.Surfaces.ICylinderClipper
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::Surfaces::ICylinderClipper::GetCylinderSegment
// Il2CppName: GetCylinderSegment
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Surfaces::ICylinderClipper::*)(ByRef<::Oculus::Interaction::Surfaces::CylinderSegment>)>(&Oculus::Interaction::Surfaces::ICylinderClipper::GetCylinderSegment)> {
  static const MethodInfo* get() {
    static auto* segment = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Surfaces", "CylinderSegment")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Surfaces::ICylinderClipper*), "GetCylinderSegment", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{segment});
  }
};
