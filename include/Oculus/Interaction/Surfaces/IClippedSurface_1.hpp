// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.Surfaces.ISurfacePatch
#include "Oculus/Interaction/Surfaces/ISurfacePatch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IReadOnlyList`1<T>
  template<typename T>
  class IReadOnlyList_1;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.Surfaces
namespace Oculus::Interaction::Surfaces {
  // Forward declaring type: IClippedSurface`1<TClipper>
  template<typename TClipper>
  class IClippedSurface_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::Oculus::Interaction::Surfaces::IClippedSurface_1, "Oculus.Interaction.Surfaces", "IClippedSurface`1");
// Type namespace: Oculus.Interaction.Surfaces
namespace Oculus::Interaction::Surfaces {
  // WARNING Size may be invalid!
  // Autogenerated type: Oculus.Interaction.Surfaces.IClippedSurface`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename TClipper>
  class IClippedSurface_1/*, public ::Oculus::Interaction::Surfaces::ISurfacePatch*/ {
    public:
    // Creating interface conversion operator: operator ::Oculus::Interaction::Surfaces::ISurfacePatch
    operator ::Oculus::Interaction::Surfaces::ISurfacePatch() noexcept {
      return *reinterpret_cast<::Oculus::Interaction::Surfaces::ISurfacePatch*>(this);
    }
    // public System.Collections.Generic.IReadOnlyList`1<TClipper> GetClippers()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Collections::Generic::IReadOnlyList_1<TClipper>* GetClippers() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::IClippedSurface_1::GetClippers");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Surfaces::IClippedSurface_1<TClipper>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyList_1<TClipper>*, false>(this, ___internal__method);
    }
  }; // Oculus.Interaction.Surfaces.IClippedSurface`1
  // Could not write size check! Type: Oculus.Interaction.Surfaces.IClippedSurface`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
