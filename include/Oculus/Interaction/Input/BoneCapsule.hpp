// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.Input.HandJointId
#include "Oculus/Interaction/Input/HandJointId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Rigidbody
  class Rigidbody;
  // Forward declaring type: CapsuleCollider
  class CapsuleCollider;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.Input
namespace Oculus::Interaction::Input {
  // Forward declaring type: BoneCapsule
  class BoneCapsule;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::Input::BoneCapsule);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::Input::BoneCapsule*, "Oculus.Interaction.Input", "BoneCapsule");
// Type namespace: Oculus.Interaction.Input
namespace Oculus::Interaction::Input {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.Input.BoneCapsule
  // [TokenAttribute] Offset: FFFFFFFF
  class BoneCapsule : public ::Il2CppObject {
    public:
    public:
    // private Oculus.Interaction.Input.HandJointId <StartJoint>k__BackingField
    // Size: 0x4
    // Offset: 0x10
    ::Oculus::Interaction::Input::HandJointId StartJoint;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Input::HandJointId) == 0x4);
    // private Oculus.Interaction.Input.HandJointId <EndJoint>k__BackingField
    // Size: 0x4
    // Offset: 0x14
    ::Oculus::Interaction::Input::HandJointId EndJoint;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Input::HandJointId) == 0x4);
    // private UnityEngine.Rigidbody <CapsuleRigidbody>k__BackingField
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::Rigidbody* CapsuleRigidbody;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rigidbody*) == 0x8);
    // private UnityEngine.CapsuleCollider <CapsuleCollider>k__BackingField
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::CapsuleCollider* CapsuleCollider;
    // Field size check
    static_assert(sizeof(::UnityEngine::CapsuleCollider*) == 0x8);
    public:
    // Get instance field reference: private Oculus.Interaction.Input.HandJointId <StartJoint>k__BackingField
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::HandJointId& dyn_$StartJoint$k__BackingField();
    // Get instance field reference: private Oculus.Interaction.Input.HandJointId <EndJoint>k__BackingField
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::HandJointId& dyn_$EndJoint$k__BackingField();
    // Get instance field reference: private UnityEngine.Rigidbody <CapsuleRigidbody>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& dyn_$CapsuleRigidbody$k__BackingField();
    // Get instance field reference: private UnityEngine.CapsuleCollider <CapsuleCollider>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::CapsuleCollider*& dyn_$CapsuleCollider$k__BackingField();
    // public Oculus.Interaction.Input.HandJointId get_StartJoint()
    // Offset: 0x481A2B0
    ::Oculus::Interaction::Input::HandJointId get_StartJoint();
    // private System.Void set_StartJoint(Oculus.Interaction.Input.HandJointId value)
    // Offset: 0x481A2B8
    void set_StartJoint(::Oculus::Interaction::Input::HandJointId value);
    // public Oculus.Interaction.Input.HandJointId get_EndJoint()
    // Offset: 0x481A2C0
    ::Oculus::Interaction::Input::HandJointId get_EndJoint();
    // private System.Void set_EndJoint(Oculus.Interaction.Input.HandJointId value)
    // Offset: 0x481A2C8
    void set_EndJoint(::Oculus::Interaction::Input::HandJointId value);
    // public UnityEngine.Rigidbody get_CapsuleRigidbody()
    // Offset: 0x481A2D0
    ::UnityEngine::Rigidbody* get_CapsuleRigidbody();
    // private System.Void set_CapsuleRigidbody(UnityEngine.Rigidbody value)
    // Offset: 0x481A2D8
    void set_CapsuleRigidbody(::UnityEngine::Rigidbody* value);
    // public UnityEngine.CapsuleCollider get_CapsuleCollider()
    // Offset: 0x481A2E0
    ::UnityEngine::CapsuleCollider* get_CapsuleCollider();
    // private System.Void set_CapsuleCollider(UnityEngine.CapsuleCollider value)
    // Offset: 0x481A2E8
    void set_CapsuleCollider(::UnityEngine::CapsuleCollider* value);
    // public System.Void .ctor(Oculus.Interaction.Input.HandJointId fromJoint, Oculus.Interaction.Input.HandJointId toJoint, UnityEngine.Rigidbody body, UnityEngine.CapsuleCollider collider)
    // Offset: 0x48198D4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BoneCapsule* New_ctor(::Oculus::Interaction::Input::HandJointId fromJoint, ::Oculus::Interaction::Input::HandJointId toJoint, ::UnityEngine::Rigidbody* body, ::UnityEngine::CapsuleCollider* collider) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::BoneCapsule::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BoneCapsule*, creationType>(fromJoint, toJoint, body, collider)));
    }
  }; // Oculus.Interaction.Input.BoneCapsule
  #pragma pack(pop)
  static check_size<sizeof(BoneCapsule), 32 + sizeof(::UnityEngine::CapsuleCollider*)> __Oculus_Interaction_Input_BoneCapsuleSizeCheck;
  static_assert(sizeof(BoneCapsule) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::Input::BoneCapsule::get_StartJoint
// Il2CppName: get_StartJoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::Input::HandJointId (Oculus::Interaction::Input::BoneCapsule::*)()>(&Oculus::Interaction::Input::BoneCapsule::get_StartJoint)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::BoneCapsule*), "get_StartJoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::BoneCapsule::set_StartJoint
// Il2CppName: set_StartJoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Input::BoneCapsule::*)(::Oculus::Interaction::Input::HandJointId)>(&Oculus::Interaction::Input::BoneCapsule::set_StartJoint)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "HandJointId")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::BoneCapsule*), "set_StartJoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::BoneCapsule::get_EndJoint
// Il2CppName: get_EndJoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::Input::HandJointId (Oculus::Interaction::Input::BoneCapsule::*)()>(&Oculus::Interaction::Input::BoneCapsule::get_EndJoint)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::BoneCapsule*), "get_EndJoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::BoneCapsule::set_EndJoint
// Il2CppName: set_EndJoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Input::BoneCapsule::*)(::Oculus::Interaction::Input::HandJointId)>(&Oculus::Interaction::Input::BoneCapsule::set_EndJoint)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "HandJointId")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::BoneCapsule*), "set_EndJoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::BoneCapsule::get_CapsuleRigidbody
// Il2CppName: get_CapsuleRigidbody
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rigidbody* (Oculus::Interaction::Input::BoneCapsule::*)()>(&Oculus::Interaction::Input::BoneCapsule::get_CapsuleRigidbody)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::BoneCapsule*), "get_CapsuleRigidbody", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::BoneCapsule::set_CapsuleRigidbody
// Il2CppName: set_CapsuleRigidbody
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Input::BoneCapsule::*)(::UnityEngine::Rigidbody*)>(&Oculus::Interaction::Input::BoneCapsule::set_CapsuleRigidbody)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rigidbody")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::BoneCapsule*), "set_CapsuleRigidbody", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::BoneCapsule::get_CapsuleCollider
// Il2CppName: get_CapsuleCollider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::CapsuleCollider* (Oculus::Interaction::Input::BoneCapsule::*)()>(&Oculus::Interaction::Input::BoneCapsule::get_CapsuleCollider)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::BoneCapsule*), "get_CapsuleCollider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::BoneCapsule::set_CapsuleCollider
// Il2CppName: set_CapsuleCollider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Input::BoneCapsule::*)(::UnityEngine::CapsuleCollider*)>(&Oculus::Interaction::Input::BoneCapsule::set_CapsuleCollider)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "CapsuleCollider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::BoneCapsule*), "set_CapsuleCollider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::BoneCapsule::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
