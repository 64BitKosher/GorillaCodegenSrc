// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction::Input
namespace Oculus::Interaction::Input {
  // Forward declaring type: Handedness
  struct Handedness;
  // Forward declaring type: HandFinger
  struct HandFinger;
  // Forward declaring type: HandJointId
  struct HandJointId;
  // Forward declaring type: ReadOnlyHandJointPoses
  class ReadOnlyHandJointPoses;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Pose
  struct Pose;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.Input
namespace Oculus::Interaction::Input {
  // Forward declaring type: IHand
  class IHand;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::Input::IHand);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::Input::IHand*, "Oculus.Interaction.Input", "IHand");
// Type namespace: Oculus.Interaction.Input
namespace Oculus::Interaction::Input {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.Input.IHand
  // [TokenAttribute] Offset: FFFFFFFF
  class IHand {
    public:
    // public Oculus.Interaction.Input.Handedness get_Handedness()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Oculus::Interaction::Input::Handedness get_Handedness();
    // public System.Boolean get_IsConnected()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_IsConnected();
    // public System.Boolean get_IsHighConfidence()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_IsHighConfidence();
    // public System.Boolean get_IsDominantHand()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_IsDominantHand();
    // public System.Single get_Scale()
    // Offset: 0xFFFFFFFFFFFFFFFF
    float get_Scale();
    // public System.Boolean GetFingerIsPinching(Oculus.Interaction.Input.HandFinger finger)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool GetFingerIsPinching(::Oculus::Interaction::Input::HandFinger finger);
    // public System.Boolean GetIndexFingerIsPinching()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool GetIndexFingerIsPinching();
    // public System.Boolean get_IsPointerPoseValid()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_IsPointerPoseValid();
    // public System.Boolean GetPointerPose(out UnityEngine.Pose pose)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool GetPointerPose(ByRef<::UnityEngine::Pose> pose);
    // public System.Boolean GetJointPose(Oculus.Interaction.Input.HandJointId handJointId, out UnityEngine.Pose pose)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool GetJointPose(::Oculus::Interaction::Input::HandJointId handJointId, ByRef<::UnityEngine::Pose> pose);
    // public System.Boolean GetJointPoseLocal(Oculus.Interaction.Input.HandJointId handJointId, out UnityEngine.Pose pose)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool GetJointPoseLocal(::Oculus::Interaction::Input::HandJointId handJointId, ByRef<::UnityEngine::Pose> pose);
    // public System.Boolean GetJointPosesLocal(out Oculus.Interaction.Input.ReadOnlyHandJointPoses localJointPoses)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool GetJointPosesLocal(ByRef<::Oculus::Interaction::Input::ReadOnlyHandJointPoses*> localJointPoses);
    // public System.Boolean GetJointPoseFromWrist(Oculus.Interaction.Input.HandJointId handJointId, out UnityEngine.Pose pose)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool GetJointPoseFromWrist(::Oculus::Interaction::Input::HandJointId handJointId, ByRef<::UnityEngine::Pose> pose);
    // public System.Boolean GetJointPosesFromWrist(out Oculus.Interaction.Input.ReadOnlyHandJointPoses jointPosesFromWrist)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool GetJointPosesFromWrist(ByRef<::Oculus::Interaction::Input::ReadOnlyHandJointPoses*> jointPosesFromWrist);
    // public System.Boolean GetPalmPoseLocal(out UnityEngine.Pose pose)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool GetPalmPoseLocal(ByRef<::UnityEngine::Pose> pose);
    // public System.Boolean GetFingerIsHighConfidence(Oculus.Interaction.Input.HandFinger finger)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool GetFingerIsHighConfidence(::Oculus::Interaction::Input::HandFinger finger);
    // public System.Single GetFingerPinchStrength(Oculus.Interaction.Input.HandFinger finger)
    // Offset: 0xFFFFFFFFFFFFFFFF
    float GetFingerPinchStrength(::Oculus::Interaction::Input::HandFinger finger);
    // public System.Boolean get_IsTrackedDataValid()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_IsTrackedDataValid();
    // public System.Boolean GetRootPose(out UnityEngine.Pose pose)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool GetRootPose(ByRef<::UnityEngine::Pose> pose);
    // public System.Int32 get_CurrentDataVersion()
    // Offset: 0xFFFFFFFFFFFFFFFF
    int get_CurrentDataVersion();
    // public System.Void add_WhenHandUpdated(System.Action value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void add_WhenHandUpdated(::System::Action* value);
    // public System.Void remove_WhenHandUpdated(System.Action value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void remove_WhenHandUpdated(::System::Action* value);
  }; // Oculus.Interaction.Input.IHand
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::Input::IHand::get_Handedness
// Il2CppName: get_Handedness
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::Input::Handedness (Oculus::Interaction::Input::IHand::*)()>(&Oculus::Interaction::Input::IHand::get_Handedness)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::IHand*), "get_Handedness", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::IHand::get_IsConnected
// Il2CppName: get_IsConnected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Input::IHand::*)()>(&Oculus::Interaction::Input::IHand::get_IsConnected)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::IHand*), "get_IsConnected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::IHand::get_IsHighConfidence
// Il2CppName: get_IsHighConfidence
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Input::IHand::*)()>(&Oculus::Interaction::Input::IHand::get_IsHighConfidence)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::IHand*), "get_IsHighConfidence", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::IHand::get_IsDominantHand
// Il2CppName: get_IsDominantHand
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Input::IHand::*)()>(&Oculus::Interaction::Input::IHand::get_IsDominantHand)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::IHand*), "get_IsDominantHand", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::IHand::get_Scale
// Il2CppName: get_Scale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Oculus::Interaction::Input::IHand::*)()>(&Oculus::Interaction::Input::IHand::get_Scale)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::IHand*), "get_Scale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::IHand::GetFingerIsPinching
// Il2CppName: GetFingerIsPinching
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Input::IHand::*)(::Oculus::Interaction::Input::HandFinger)>(&Oculus::Interaction::Input::IHand::GetFingerIsPinching)> {
  static const MethodInfo* get() {
    static auto* finger = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "HandFinger")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::IHand*), "GetFingerIsPinching", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{finger});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::IHand::GetIndexFingerIsPinching
// Il2CppName: GetIndexFingerIsPinching
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Input::IHand::*)()>(&Oculus::Interaction::Input::IHand::GetIndexFingerIsPinching)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::IHand*), "GetIndexFingerIsPinching", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::IHand::get_IsPointerPoseValid
// Il2CppName: get_IsPointerPoseValid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Input::IHand::*)()>(&Oculus::Interaction::Input::IHand::get_IsPointerPoseValid)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::IHand*), "get_IsPointerPoseValid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::IHand::GetPointerPose
// Il2CppName: GetPointerPose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Input::IHand::*)(ByRef<::UnityEngine::Pose>)>(&Oculus::Interaction::Input::IHand::GetPointerPose)> {
  static const MethodInfo* get() {
    static auto* pose = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::IHand*), "GetPointerPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pose});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::IHand::GetJointPose
// Il2CppName: GetJointPose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Input::IHand::*)(::Oculus::Interaction::Input::HandJointId, ByRef<::UnityEngine::Pose>)>(&Oculus::Interaction::Input::IHand::GetJointPose)> {
  static const MethodInfo* get() {
    static auto* handJointId = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "HandJointId")->byval_arg;
    static auto* pose = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::IHand*), "GetJointPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handJointId, pose});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::IHand::GetJointPoseLocal
// Il2CppName: GetJointPoseLocal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Input::IHand::*)(::Oculus::Interaction::Input::HandJointId, ByRef<::UnityEngine::Pose>)>(&Oculus::Interaction::Input::IHand::GetJointPoseLocal)> {
  static const MethodInfo* get() {
    static auto* handJointId = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "HandJointId")->byval_arg;
    static auto* pose = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::IHand*), "GetJointPoseLocal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handJointId, pose});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::IHand::GetJointPosesLocal
// Il2CppName: GetJointPosesLocal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Input::IHand::*)(ByRef<::Oculus::Interaction::Input::ReadOnlyHandJointPoses*>)>(&Oculus::Interaction::Input::IHand::GetJointPosesLocal)> {
  static const MethodInfo* get() {
    static auto* localJointPoses = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "ReadOnlyHandJointPoses")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::IHand*), "GetJointPosesLocal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{localJointPoses});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::IHand::GetJointPoseFromWrist
// Il2CppName: GetJointPoseFromWrist
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Input::IHand::*)(::Oculus::Interaction::Input::HandJointId, ByRef<::UnityEngine::Pose>)>(&Oculus::Interaction::Input::IHand::GetJointPoseFromWrist)> {
  static const MethodInfo* get() {
    static auto* handJointId = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "HandJointId")->byval_arg;
    static auto* pose = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::IHand*), "GetJointPoseFromWrist", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handJointId, pose});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::IHand::GetJointPosesFromWrist
// Il2CppName: GetJointPosesFromWrist
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Input::IHand::*)(ByRef<::Oculus::Interaction::Input::ReadOnlyHandJointPoses*>)>(&Oculus::Interaction::Input::IHand::GetJointPosesFromWrist)> {
  static const MethodInfo* get() {
    static auto* jointPosesFromWrist = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "ReadOnlyHandJointPoses")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::IHand*), "GetJointPosesFromWrist", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{jointPosesFromWrist});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::IHand::GetPalmPoseLocal
// Il2CppName: GetPalmPoseLocal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Input::IHand::*)(ByRef<::UnityEngine::Pose>)>(&Oculus::Interaction::Input::IHand::GetPalmPoseLocal)> {
  static const MethodInfo* get() {
    static auto* pose = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::IHand*), "GetPalmPoseLocal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pose});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::IHand::GetFingerIsHighConfidence
// Il2CppName: GetFingerIsHighConfidence
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Input::IHand::*)(::Oculus::Interaction::Input::HandFinger)>(&Oculus::Interaction::Input::IHand::GetFingerIsHighConfidence)> {
  static const MethodInfo* get() {
    static auto* finger = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "HandFinger")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::IHand*), "GetFingerIsHighConfidence", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{finger});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::IHand::GetFingerPinchStrength
// Il2CppName: GetFingerPinchStrength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Oculus::Interaction::Input::IHand::*)(::Oculus::Interaction::Input::HandFinger)>(&Oculus::Interaction::Input::IHand::GetFingerPinchStrength)> {
  static const MethodInfo* get() {
    static auto* finger = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "HandFinger")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::IHand*), "GetFingerPinchStrength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{finger});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::IHand::get_IsTrackedDataValid
// Il2CppName: get_IsTrackedDataValid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Input::IHand::*)()>(&Oculus::Interaction::Input::IHand::get_IsTrackedDataValid)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::IHand*), "get_IsTrackedDataValid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::IHand::GetRootPose
// Il2CppName: GetRootPose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Input::IHand::*)(ByRef<::UnityEngine::Pose>)>(&Oculus::Interaction::Input::IHand::GetRootPose)> {
  static const MethodInfo* get() {
    static auto* pose = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::IHand*), "GetRootPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pose});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::IHand::get_CurrentDataVersion
// Il2CppName: get_CurrentDataVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Oculus::Interaction::Input::IHand::*)()>(&Oculus::Interaction::Input::IHand::get_CurrentDataVersion)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::IHand*), "get_CurrentDataVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::IHand::add_WhenHandUpdated
// Il2CppName: add_WhenHandUpdated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Input::IHand::*)(::System::Action*)>(&Oculus::Interaction::Input::IHand::add_WhenHandUpdated)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::IHand*), "add_WhenHandUpdated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::IHand::remove_WhenHandUpdated
// Il2CppName: remove_WhenHandUpdated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Input::IHand::*)(::System::Action*)>(&Oculus::Interaction::Input::IHand::remove_WhenHandUpdated)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::IHand*), "remove_WhenHandUpdated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
