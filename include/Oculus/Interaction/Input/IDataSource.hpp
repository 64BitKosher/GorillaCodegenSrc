// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.Input
namespace Oculus::Interaction::Input {
  // Forward declaring type: IDataSource
  class IDataSource;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::Input::IDataSource);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::Input::IDataSource*, "Oculus.Interaction.Input", "IDataSource");
// Type namespace: Oculus.Interaction.Input
namespace Oculus::Interaction::Input {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.Input.IDataSource
  // [TokenAttribute] Offset: FFFFFFFF
  class IDataSource {
    public:
    // public System.Int32 get_CurrentDataVersion()
    // Offset: 0xFFFFFFFFFFFFFFFF
    int get_CurrentDataVersion();
    // public System.Void MarkInputDataRequiresUpdate()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void MarkInputDataRequiresUpdate();
    // public System.Void add_InputDataAvailable(System.Action value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void add_InputDataAvailable(::System::Action* value);
    // public System.Void remove_InputDataAvailable(System.Action value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void remove_InputDataAvailable(::System::Action* value);
  }; // Oculus.Interaction.Input.IDataSource
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::Input::IDataSource::get_CurrentDataVersion
// Il2CppName: get_CurrentDataVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Oculus::Interaction::Input::IDataSource::*)()>(&Oculus::Interaction::Input::IDataSource::get_CurrentDataVersion)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::IDataSource*), "get_CurrentDataVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::IDataSource::MarkInputDataRequiresUpdate
// Il2CppName: MarkInputDataRequiresUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Input::IDataSource::*)()>(&Oculus::Interaction::Input::IDataSource::MarkInputDataRequiresUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::IDataSource*), "MarkInputDataRequiresUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::IDataSource::add_InputDataAvailable
// Il2CppName: add_InputDataAvailable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Input::IDataSource::*)(::System::Action*)>(&Oculus::Interaction::Input::IDataSource::add_InputDataAvailable)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::IDataSource*), "add_InputDataAvailable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::IDataSource::remove_InputDataAvailable
// Il2CppName: remove_InputDataAvailable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Input::IDataSource::*)(::System::Action*)>(&Oculus::Interaction::Input::IDataSource::remove_InputDataAvailable)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::IDataSource*), "remove_InputDataAvailable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
