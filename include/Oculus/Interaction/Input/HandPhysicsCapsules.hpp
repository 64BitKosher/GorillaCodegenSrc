// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: Oculus.Interaction.Input.HandFingerJointFlags
#include "Oculus/Interaction/Input/HandFingerJointFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction::Input
namespace Oculus::Interaction::Input {
  // Forward declaring type: JointsRadiusFeature
  class JointsRadiusFeature;
  // Forward declaring type: BoneCapsule
  class BoneCapsule;
  // Forward declaring type: HandJointId
  struct HandJointId;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Object because it is already included!
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: Rigidbody
  class Rigidbody;
  // Forward declaring type: Pose
  struct Pose;
  // Forward declaring type: CapsuleCollider
  class CapsuleCollider;
  // Skipping declaration: Vector3 because it is already included!
}
// Forward declaring namespace: Oculus::Interaction
namespace Oculus::Interaction {
  // Forward declaring type: IHandVisual
  class IHandVisual;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: IList`1<T>
  template<typename T>
  class IList_1;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.Input
namespace Oculus::Interaction::Input {
  // Forward declaring type: HandPhysicsCapsules
  class HandPhysicsCapsules;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::Input::HandPhysicsCapsules);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::Input::HandPhysicsCapsules*, "Oculus.Interaction.Input", "HandPhysicsCapsules");
// Type namespace: Oculus.Interaction.Input
namespace Oculus::Interaction::Input {
  // Size: 0x73
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.Input.HandPhysicsCapsules
  // [TokenAttribute] Offset: FFFFFFFF
  class HandPhysicsCapsules : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::Oculus::Interaction::Input::HandPhysicsCapsules::$$c
    class $$c;
    public:
    // private UnityEngine.Object _handVisual
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::Object* handVisual;
    // Field size check
    static_assert(sizeof(::UnityEngine::Object*) == 0x8);
    // private Oculus.Interaction.IHandVisual HandVisual
    // Size: 0x8
    // Offset: 0x28
    ::Oculus::Interaction::IHandVisual* HandVisual;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::IHandVisual*) == 0x8);
    // private Oculus.Interaction.Input.JointsRadiusFeature _jointsRadiusFeature
    // Size: 0x8
    // Offset: 0x30
    ::Oculus::Interaction::Input::JointsRadiusFeature* jointsRadiusFeature;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Input::JointsRadiusFeature*) == 0x8);
    // private System.Boolean _asTriggers
    // Size: 0x1
    // Offset: 0x38
    bool asTriggers;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: asTriggers and: useLayer
    char __padding3[0x3] = {};
    // private System.Int32 _useLayer
    // Size: 0x4
    // Offset: 0x3C
    int useLayer;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private Oculus.Interaction.Input.HandFingerJointFlags _mask
    // Size: 0x4
    // Offset: 0x40
    ::Oculus::Interaction::Input::HandFingerJointFlags mask;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Input::HandFingerJointFlags) == 0x4);
    // Padding between fields: mask and: whenCapsulesGenerated
    char __padding5[0x4] = {};
    // private System.Action _whenCapsulesGenerated
    // Size: 0x8
    // Offset: 0x48
    ::System::Action* whenCapsulesGenerated;
    // Field size check
    static_assert(sizeof(::System::Action*) == 0x8);
    // private UnityEngine.Transform _rootTransform
    // Size: 0x8
    // Offset: 0x50
    ::UnityEngine::Transform* rootTransform;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private System.Collections.Generic.List`1<Oculus.Interaction.Input.BoneCapsule> _capsules
    // Size: 0x8
    // Offset: 0x58
    ::System::Collections::Generic::List_1<::Oculus::Interaction::Input::BoneCapsule*>* capsules;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::Oculus::Interaction::Input::BoneCapsule*>*) == 0x8);
    // private System.Collections.Generic.IList`1<Oculus.Interaction.Input.BoneCapsule> <Capsules>k__BackingField
    // Size: 0x8
    // Offset: 0x60
    ::System::Collections::Generic::IList_1<::Oculus::Interaction::Input::BoneCapsule*>* Capsules;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::IList_1<::Oculus::Interaction::Input::BoneCapsule*>*) == 0x8);
    // private UnityEngine.Rigidbody[] _rigidbodies
    // Size: 0x8
    // Offset: 0x68
    ::ArrayW<::UnityEngine::Rigidbody*> rigidbodies;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Rigidbody*>) == 0x8);
    // private System.Boolean _capsulesAreActive
    // Size: 0x1
    // Offset: 0x70
    bool capsulesAreActive;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _capsulesGenerated
    // Size: 0x1
    // Offset: 0x71
    bool capsulesGenerated;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // protected System.Boolean _started
    // Size: 0x1
    // Offset: 0x72
    bool started;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get instance field reference: private UnityEngine.Object _handVisual
    [[deprecated("Use field access instead!")]] ::UnityEngine::Object*& dyn__handVisual();
    // Get instance field reference: private Oculus.Interaction.IHandVisual HandVisual
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::IHandVisual*& dyn_HandVisual();
    // Get instance field reference: private Oculus.Interaction.Input.JointsRadiusFeature _jointsRadiusFeature
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::JointsRadiusFeature*& dyn__jointsRadiusFeature();
    // Get instance field reference: private System.Boolean _asTriggers
    [[deprecated("Use field access instead!")]] bool& dyn__asTriggers();
    // Get instance field reference: private System.Int32 _useLayer
    [[deprecated("Use field access instead!")]] int& dyn__useLayer();
    // Get instance field reference: private Oculus.Interaction.Input.HandFingerJointFlags _mask
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::HandFingerJointFlags& dyn__mask();
    // Get instance field reference: private System.Action _whenCapsulesGenerated
    [[deprecated("Use field access instead!")]] ::System::Action*& dyn__whenCapsulesGenerated();
    // Get instance field reference: private UnityEngine.Transform _rootTransform
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn__rootTransform();
    // Get instance field reference: private System.Collections.Generic.List`1<Oculus.Interaction.Input.BoneCapsule> _capsules
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Oculus::Interaction::Input::BoneCapsule*>*& dyn__capsules();
    // Get instance field reference: private System.Collections.Generic.IList`1<Oculus.Interaction.Input.BoneCapsule> <Capsules>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::IList_1<::Oculus::Interaction::Input::BoneCapsule*>*& dyn_$Capsules$k__BackingField();
    // Get instance field reference: private UnityEngine.Rigidbody[] _rigidbodies
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Rigidbody*>& dyn__rigidbodies();
    // Get instance field reference: private System.Boolean _capsulesAreActive
    [[deprecated("Use field access instead!")]] bool& dyn__capsulesAreActive();
    // Get instance field reference: private System.Boolean _capsulesGenerated
    [[deprecated("Use field access instead!")]] bool& dyn__capsulesGenerated();
    // Get instance field reference: protected System.Boolean _started
    [[deprecated("Use field access instead!")]] bool& dyn__started();
    // public System.Void add_WhenCapsulesGenerated(System.Action value)
    // Offset: 0x4818B10
    void add_WhenCapsulesGenerated(::System::Action* value);
    // public System.Void remove_WhenCapsulesGenerated(System.Action value)
    // Offset: 0x4818BD0
    void remove_WhenCapsulesGenerated(::System::Action* value);
    // public UnityEngine.Transform get_RootTransform()
    // Offset: 0x4818C60
    ::UnityEngine::Transform* get_RootTransform();
    // public System.Collections.Generic.IList`1<Oculus.Interaction.Input.BoneCapsule> get_Capsules()
    // Offset: 0x4818C68
    ::System::Collections::Generic::IList_1<::Oculus::Interaction::Input::BoneCapsule*>* get_Capsules();
    // private System.Void set_Capsules(System.Collections.Generic.IList`1<Oculus.Interaction.Input.BoneCapsule> value)
    // Offset: 0x4818C70
    void set_Capsules(::System::Collections::Generic::IList_1<::Oculus::Interaction::Input::BoneCapsule*>* value);
    // protected System.Void Reset()
    // Offset: 0x4818C78
    void Reset();
    // protected System.Void Awake()
    // Offset: 0x4818CE4
    void Awake();
    // protected System.Void Start()
    // Offset: 0x4818D4C
    void Start();
    // private System.Void GenerateCapsules()
    // Offset: 0x4818D8C
    void GenerateCapsules();
    // private System.Void IgnoreSelfCollisions()
    // Offset: 0x481992C
    void IgnoreSelfCollisions();
    // private System.Boolean TryGetJointRigidbody(Oculus.Interaction.Input.HandJointId joint, out UnityEngine.Rigidbody body)
    // Offset: 0x4819344
    bool TryGetJointRigidbody(::Oculus::Interaction::Input::HandJointId joint, ByRef<::UnityEngine::Rigidbody*> body);
    // private UnityEngine.Rigidbody CreateJointRigidbody(Oculus.Interaction.Input.HandJointId joint, UnityEngine.Transform holder, UnityEngine.Pose pose)
    // Offset: 0x48193E4
    ::UnityEngine::Rigidbody* CreateJointRigidbody(::Oculus::Interaction::Input::HandJointId joint, ::UnityEngine::Transform* holder, ::UnityEngine::Pose pose);
    // private UnityEngine.CapsuleCollider CreateCollider(System.String name, UnityEngine.Transform from, UnityEngine.Vector3 to, System.Single radius, System.Single offset)
    // Offset: 0x4819658
    ::UnityEngine::CapsuleCollider* CreateCollider(::StringW name, ::UnityEngine::Transform* from, ::UnityEngine::Vector3 to, float radius, float offset);
    // protected System.Void OnEnable()
    // Offset: 0x4819A50
    void OnEnable();
    // protected System.Void OnDisable()
    // Offset: 0x4819B50
    void OnDisable();
    // protected System.Void LateUpdate()
    // Offset: 0x4819C80
    void LateUpdate();
    // private System.Void EnableRigidbodies(System.Boolean enable)
    // Offset: 0x4819C58
    void EnableRigidbodies(bool enable);
    // private System.Void HandleHandVisualUpdated()
    // Offset: 0x4819D44
    void HandleHandVisualUpdated();
    // public System.Void InjectAllOVRHandPhysicsCapsules(Oculus.Interaction.IHandVisual handVisual, System.Boolean asTriggers, System.Int32 useLayer)
    // Offset: 0x481A030
    void InjectAllOVRHandPhysicsCapsules(::Oculus::Interaction::IHandVisual* handVisual, bool asTriggers, int useLayer);
    // public System.Void InjectHandVisual(Oculus.Interaction.IHandVisual handVisual)
    // Offset: 0x481A060
    void InjectHandVisual(::Oculus::Interaction::IHandVisual* handVisual);
    // public System.Void InjectAsTriggers(System.Boolean asTriggers)
    // Offset: 0x481A130
    void InjectAsTriggers(bool asTriggers);
    // public System.Void InjectUseLayer(System.Int32 useLayer)
    // Offset: 0x481A13C
    void InjectUseLayer(int useLayer);
    // public System.Void .ctor()
    // Offset: 0x481A144
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static HandPhysicsCapsules* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandPhysicsCapsules::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<HandPhysicsCapsules*, creationType>()));
    }
  }; // Oculus.Interaction.Input.HandPhysicsCapsules
  #pragma pack(pop)
  static check_size<sizeof(HandPhysicsCapsules), 114 + sizeof(bool)> __Oculus_Interaction_Input_HandPhysicsCapsulesSizeCheck;
  static_assert(sizeof(HandPhysicsCapsules) == 0x73);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandPhysicsCapsules::add_WhenCapsulesGenerated
// Il2CppName: add_WhenCapsulesGenerated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Input::HandPhysicsCapsules::*)(::System::Action*)>(&Oculus::Interaction::Input::HandPhysicsCapsules::add_WhenCapsulesGenerated)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandPhysicsCapsules*), "add_WhenCapsulesGenerated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandPhysicsCapsules::remove_WhenCapsulesGenerated
// Il2CppName: remove_WhenCapsulesGenerated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Input::HandPhysicsCapsules::*)(::System::Action*)>(&Oculus::Interaction::Input::HandPhysicsCapsules::remove_WhenCapsulesGenerated)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandPhysicsCapsules*), "remove_WhenCapsulesGenerated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandPhysicsCapsules::get_RootTransform
// Il2CppName: get_RootTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (Oculus::Interaction::Input::HandPhysicsCapsules::*)()>(&Oculus::Interaction::Input::HandPhysicsCapsules::get_RootTransform)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandPhysicsCapsules*), "get_RootTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandPhysicsCapsules::get_Capsules
// Il2CppName: get_Capsules
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IList_1<::Oculus::Interaction::Input::BoneCapsule*>* (Oculus::Interaction::Input::HandPhysicsCapsules::*)()>(&Oculus::Interaction::Input::HandPhysicsCapsules::get_Capsules)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandPhysicsCapsules*), "get_Capsules", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandPhysicsCapsules::set_Capsules
// Il2CppName: set_Capsules
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Input::HandPhysicsCapsules::*)(::System::Collections::Generic::IList_1<::Oculus::Interaction::Input::BoneCapsule*>*)>(&Oculus::Interaction::Input::HandPhysicsCapsules::set_Capsules)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IList`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "BoneCapsule")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandPhysicsCapsules*), "set_Capsules", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandPhysicsCapsules::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Input::HandPhysicsCapsules::*)()>(&Oculus::Interaction::Input::HandPhysicsCapsules::Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandPhysicsCapsules*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandPhysicsCapsules::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Input::HandPhysicsCapsules::*)()>(&Oculus::Interaction::Input::HandPhysicsCapsules::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandPhysicsCapsules*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandPhysicsCapsules::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Input::HandPhysicsCapsules::*)()>(&Oculus::Interaction::Input::HandPhysicsCapsules::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandPhysicsCapsules*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandPhysicsCapsules::GenerateCapsules
// Il2CppName: GenerateCapsules
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Input::HandPhysicsCapsules::*)()>(&Oculus::Interaction::Input::HandPhysicsCapsules::GenerateCapsules)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandPhysicsCapsules*), "GenerateCapsules", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandPhysicsCapsules::IgnoreSelfCollisions
// Il2CppName: IgnoreSelfCollisions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Input::HandPhysicsCapsules::*)()>(&Oculus::Interaction::Input::HandPhysicsCapsules::IgnoreSelfCollisions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandPhysicsCapsules*), "IgnoreSelfCollisions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandPhysicsCapsules::TryGetJointRigidbody
// Il2CppName: TryGetJointRigidbody
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Input::HandPhysicsCapsules::*)(::Oculus::Interaction::Input::HandJointId, ByRef<::UnityEngine::Rigidbody*>)>(&Oculus::Interaction::Input::HandPhysicsCapsules::TryGetJointRigidbody)> {
  static const MethodInfo* get() {
    static auto* joint = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "HandJointId")->byval_arg;
    static auto* body = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rigidbody")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandPhysicsCapsules*), "TryGetJointRigidbody", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{joint, body});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandPhysicsCapsules::CreateJointRigidbody
// Il2CppName: CreateJointRigidbody
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rigidbody* (Oculus::Interaction::Input::HandPhysicsCapsules::*)(::Oculus::Interaction::Input::HandJointId, ::UnityEngine::Transform*, ::UnityEngine::Pose)>(&Oculus::Interaction::Input::HandPhysicsCapsules::CreateJointRigidbody)> {
  static const MethodInfo* get() {
    static auto* joint = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "HandJointId")->byval_arg;
    static auto* holder = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* pose = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandPhysicsCapsules*), "CreateJointRigidbody", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{joint, holder, pose});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandPhysicsCapsules::CreateCollider
// Il2CppName: CreateCollider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::CapsuleCollider* (Oculus::Interaction::Input::HandPhysicsCapsules::*)(::StringW, ::UnityEngine::Transform*, ::UnityEngine::Vector3, float, float)>(&Oculus::Interaction::Input::HandPhysicsCapsules::CreateCollider)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* from = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* radius = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandPhysicsCapsules*), "CreateCollider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, from, to, radius, offset});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandPhysicsCapsules::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Input::HandPhysicsCapsules::*)()>(&Oculus::Interaction::Input::HandPhysicsCapsules::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandPhysicsCapsules*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandPhysicsCapsules::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Input::HandPhysicsCapsules::*)()>(&Oculus::Interaction::Input::HandPhysicsCapsules::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandPhysicsCapsules*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandPhysicsCapsules::LateUpdate
// Il2CppName: LateUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Input::HandPhysicsCapsules::*)()>(&Oculus::Interaction::Input::HandPhysicsCapsules::LateUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandPhysicsCapsules*), "LateUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandPhysicsCapsules::EnableRigidbodies
// Il2CppName: EnableRigidbodies
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Input::HandPhysicsCapsules::*)(bool)>(&Oculus::Interaction::Input::HandPhysicsCapsules::EnableRigidbodies)> {
  static const MethodInfo* get() {
    static auto* enable = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandPhysicsCapsules*), "EnableRigidbodies", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{enable});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandPhysicsCapsules::HandleHandVisualUpdated
// Il2CppName: HandleHandVisualUpdated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Input::HandPhysicsCapsules::*)()>(&Oculus::Interaction::Input::HandPhysicsCapsules::HandleHandVisualUpdated)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandPhysicsCapsules*), "HandleHandVisualUpdated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandPhysicsCapsules::InjectAllOVRHandPhysicsCapsules
// Il2CppName: InjectAllOVRHandPhysicsCapsules
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Input::HandPhysicsCapsules::*)(::Oculus::Interaction::IHandVisual*, bool, int)>(&Oculus::Interaction::Input::HandPhysicsCapsules::InjectAllOVRHandPhysicsCapsules)> {
  static const MethodInfo* get() {
    static auto* handVisual = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "IHandVisual")->byval_arg;
    static auto* asTriggers = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* useLayer = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandPhysicsCapsules*), "InjectAllOVRHandPhysicsCapsules", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handVisual, asTriggers, useLayer});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandPhysicsCapsules::InjectHandVisual
// Il2CppName: InjectHandVisual
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Input::HandPhysicsCapsules::*)(::Oculus::Interaction::IHandVisual*)>(&Oculus::Interaction::Input::HandPhysicsCapsules::InjectHandVisual)> {
  static const MethodInfo* get() {
    static auto* handVisual = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "IHandVisual")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandPhysicsCapsules*), "InjectHandVisual", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handVisual});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandPhysicsCapsules::InjectAsTriggers
// Il2CppName: InjectAsTriggers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Input::HandPhysicsCapsules::*)(bool)>(&Oculus::Interaction::Input::HandPhysicsCapsules::InjectAsTriggers)> {
  static const MethodInfo* get() {
    static auto* asTriggers = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandPhysicsCapsules*), "InjectAsTriggers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{asTriggers});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandPhysicsCapsules::InjectUseLayer
// Il2CppName: InjectUseLayer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Input::HandPhysicsCapsules::*)(int)>(&Oculus::Interaction::Input::HandPhysicsCapsules::InjectUseLayer)> {
  static const MethodInfo* get() {
    static auto* useLayer = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandPhysicsCapsules*), "InjectUseLayer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{useLayer});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandPhysicsCapsules::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
