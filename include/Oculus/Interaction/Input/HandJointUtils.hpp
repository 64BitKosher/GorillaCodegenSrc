// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.Input.HandJointId
#include "Oculus/Interaction/Input/HandJointId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: Oculus::Interaction::Input
namespace Oculus::Interaction::Input {
  // Forward declaring type: HandFinger
  struct HandFinger;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.Input
namespace Oculus::Interaction::Input {
  // Forward declaring type: HandJointUtils
  class HandJointUtils;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::Input::HandJointUtils);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::Input::HandJointUtils*, "Oculus.Interaction.Input", "HandJointUtils");
// Type namespace: Oculus.Interaction.Input
namespace Oculus::Interaction::Input {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.Input.HandJointUtils
  // [TokenAttribute] Offset: FFFFFFFF
  class HandJointUtils : public ::Il2CppObject {
    public:
    // Get static field: static public System.Collections.Generic.List`1<Oculus.Interaction.Input.HandJointId[]> FingerToJointList
    static ::System::Collections::Generic::List_1<::ArrayW<::Oculus::Interaction::Input::HandJointId>>* _get_FingerToJointList();
    // Set static field: static public System.Collections.Generic.List`1<Oculus.Interaction.Input.HandJointId[]> FingerToJointList
    static void _set_FingerToJointList(::System::Collections::Generic::List_1<::ArrayW<::Oculus::Interaction::Input::HandJointId>>* value);
    // Get static field: static public Oculus.Interaction.Input.HandJointId[] JointParentList
    static ::ArrayW<::Oculus::Interaction::Input::HandJointId> _get_JointParentList();
    // Set static field: static public Oculus.Interaction.Input.HandJointId[] JointParentList
    static void _set_JointParentList(::ArrayW<::Oculus::Interaction::Input::HandJointId> value);
    // Get static field: static public Oculus.Interaction.Input.HandJointId[][] JointChildrenList
    static ::ArrayW<::ArrayW<::Oculus::Interaction::Input::HandJointId>> _get_JointChildrenList();
    // Set static field: static public Oculus.Interaction.Input.HandJointId[][] JointChildrenList
    static void _set_JointChildrenList(::ArrayW<::ArrayW<::Oculus::Interaction::Input::HandJointId>> value);
    // Get static field: static public System.Collections.Generic.List`1<Oculus.Interaction.Input.HandJointId> JointIds
    static ::System::Collections::Generic::List_1<::Oculus::Interaction::Input::HandJointId>* _get_JointIds();
    // Set static field: static public System.Collections.Generic.List`1<Oculus.Interaction.Input.HandJointId> JointIds
    static void _set_JointIds(::System::Collections::Generic::List_1<::Oculus::Interaction::Input::HandJointId>* value);
    // Get static field: static private readonly Oculus.Interaction.Input.HandJointId[] _handFingerProximals
    static ::ArrayW<::Oculus::Interaction::Input::HandJointId> _get__handFingerProximals();
    // Set static field: static private readonly Oculus.Interaction.Input.HandJointId[] _handFingerProximals
    static void _set__handFingerProximals(::ArrayW<::Oculus::Interaction::Input::HandJointId> value);
    // static public Oculus.Interaction.Input.HandJointId GetHandFingerTip(Oculus.Interaction.Input.HandFinger finger)
    // Offset: 0x481A2FC
    static ::Oculus::Interaction::Input::HandJointId GetHandFingerTip(::Oculus::Interaction::Input::HandFinger finger);
    // static public Oculus.Interaction.Input.HandJointId GetHandFingerProximal(Oculus.Interaction.Input.HandFinger finger)
    // Offset: 0x481A304
    static ::Oculus::Interaction::Input::HandJointId GetHandFingerProximal(::Oculus::Interaction::Input::HandFinger finger);
    // public System.Void .ctor()
    // Offset: 0x481A380
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static HandJointUtils* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointUtils::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<HandJointUtils*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x481A388
    static void _cctor();
  }; // Oculus.Interaction.Input.HandJointUtils
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandJointUtils::GetHandFingerTip
// Il2CppName: GetHandFingerTip
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::Input::HandJointId (*)(::Oculus::Interaction::Input::HandFinger)>(&Oculus::Interaction::Input::HandJointUtils::GetHandFingerTip)> {
  static const MethodInfo* get() {
    static auto* finger = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "HandFinger")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandJointUtils*), "GetHandFingerTip", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{finger});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandJointUtils::GetHandFingerProximal
// Il2CppName: GetHandFingerProximal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::Input::HandJointId (*)(::Oculus::Interaction::Input::HandFinger)>(&Oculus::Interaction::Input::HandJointUtils::GetHandFingerProximal)> {
  static const MethodInfo* get() {
    static auto* finger = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "HandFinger")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandJointUtils*), "GetHandFingerProximal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{finger});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandJointUtils::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandJointUtils::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Oculus::Interaction::Input::HandJointUtils::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandJointUtils*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
