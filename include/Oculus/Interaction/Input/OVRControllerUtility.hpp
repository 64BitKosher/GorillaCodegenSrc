// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: OVRInput
#include "GlobalNamespace/OVRInput.hpp"
// Completed includes
// Type namespace: Oculus.Interaction.Input
namespace Oculus::Interaction::Input {
  // Forward declaring type: OVRControllerUtility
  class OVRControllerUtility;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::Input::OVRControllerUtility);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::Input::OVRControllerUtility*, "Oculus.Interaction.Input", "OVRControllerUtility");
// Type namespace: Oculus.Interaction.Input
namespace Oculus::Interaction::Input {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.Input.OVRControllerUtility
  // [TokenAttribute] Offset: FFFFFFFF
  class OVRControllerUtility : public ::Il2CppObject {
    public:
    // static public System.Single GetPinchAmount(OVRInput/Controller ovrController)
    // Offset: 0x4793BF8
    static float GetPinchAmount(::GlobalNamespace::OVRInput::Controller ovrController);
    // static public System.Single GetIndexCurl(OVRInput/Controller ovrController)
    // Offset: 0x478F014
    static float GetIndexCurl(::GlobalNamespace::OVRInput::Controller ovrController);
    // static public System.Single GetIndexSlide(OVRInput/Controller ovrController)
    // Offset: 0x478F0DC
    static float GetIndexSlide(::GlobalNamespace::OVRInput::Controller ovrController);
    // static private System.Boolean SupportsAnalogIndex(OVRInput/Controller ovrController)
    // Offset: 0x4793C54
    static bool SupportsAnalogIndex(::GlobalNamespace::OVRInput::Controller ovrController);
  }; // Oculus.Interaction.Input.OVRControllerUtility
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::Input::OVRControllerUtility::GetPinchAmount
// Il2CppName: GetPinchAmount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(::GlobalNamespace::OVRInput::Controller)>(&Oculus::Interaction::Input::OVRControllerUtility::GetPinchAmount)> {
  static const MethodInfo* get() {
    static auto* ovrController = &::il2cpp_utils::GetClassFromName("", "OVRInput/Controller")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::OVRControllerUtility*), "GetPinchAmount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ovrController});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::OVRControllerUtility::GetIndexCurl
// Il2CppName: GetIndexCurl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(::GlobalNamespace::OVRInput::Controller)>(&Oculus::Interaction::Input::OVRControllerUtility::GetIndexCurl)> {
  static const MethodInfo* get() {
    static auto* ovrController = &::il2cpp_utils::GetClassFromName("", "OVRInput/Controller")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::OVRControllerUtility*), "GetIndexCurl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ovrController});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::OVRControllerUtility::GetIndexSlide
// Il2CppName: GetIndexSlide
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(::GlobalNamespace::OVRInput::Controller)>(&Oculus::Interaction::Input::OVRControllerUtility::GetIndexSlide)> {
  static const MethodInfo* get() {
    static auto* ovrController = &::il2cpp_utils::GetClassFromName("", "OVRInput/Controller")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::OVRControllerUtility*), "GetIndexSlide", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ovrController});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::OVRControllerUtility::SupportsAnalogIndex
// Il2CppName: SupportsAnalogIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::OVRInput::Controller)>(&Oculus::Interaction::Input::OVRControllerUtility::SupportsAnalogIndex)> {
  static const MethodInfo* get() {
    static auto* ovrController = &::il2cpp_utils::GetClassFromName("", "OVRInput/Controller")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::OVRControllerUtility*), "SupportsAnalogIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ovrController});
  }
};
