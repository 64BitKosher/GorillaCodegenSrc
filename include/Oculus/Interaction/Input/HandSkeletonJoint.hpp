// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
// Completed includes
// Type namespace: Oculus.Interaction.Input
namespace Oculus::Interaction::Input {
  // Forward declaring type: HandSkeletonJoint
  struct HandSkeletonJoint;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::Input::HandSkeletonJoint, "Oculus.Interaction.Input", "HandSkeletonJoint");
// Type namespace: Oculus.Interaction.Input
namespace Oculus::Interaction::Input {
  // Size: 0x24
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: Oculus.Interaction.Input.HandSkeletonJoint
  // [TokenAttribute] Offset: FFFFFFFF
  struct HandSkeletonJoint/*, public ::System::ValueType*/ {
    public:
    public:
    // public System.Int32 parent
    // Size: 0x4
    // Offset: 0x0
    int parent;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public UnityEngine.Pose pose
    // Size: 0x1C
    // Offset: 0x4
    ::UnityEngine::Pose pose;
    // Field size check
    static_assert(sizeof(::UnityEngine::Pose) == 0x1C);
    // public System.Single radius
    // Size: 0x4
    // Offset: 0x20
    float radius;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Creating value type constructor for type: HandSkeletonJoint
    constexpr HandSkeletonJoint(int parent_ = {}, ::UnityEngine::Pose pose_ = {}, float radius_ = {}) noexcept : parent{parent_}, pose{pose_}, radius{radius_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public System.Int32 parent
    [[deprecated("Use field access instead!")]] int& dyn_parent();
    // Get instance field reference: public UnityEngine.Pose pose
    [[deprecated("Use field access instead!")]] ::UnityEngine::Pose& dyn_pose();
    // Get instance field reference: public System.Single radius
    [[deprecated("Use field access instead!")]] float& dyn_radius();
  }; // Oculus.Interaction.Input.HandSkeletonJoint
  #pragma pack(pop)
  static check_size<sizeof(HandSkeletonJoint), 32 + sizeof(float)> __Oculus_Interaction_Input_HandSkeletonJointSizeCheck;
  static_assert(sizeof(HandSkeletonJoint) == 0x24);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
