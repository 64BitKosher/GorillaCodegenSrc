// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction::Input
namespace Oculus::Interaction::Input {
  // Forward declaring type: ShadowHand
  class ShadowHand;
  // Forward declaring type: IHand
  class IHand;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.Input
namespace Oculus::Interaction::Input {
  // Forward declaring type: ShadowHandExtensions
  class ShadowHandExtensions;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::Input::ShadowHandExtensions);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::Input::ShadowHandExtensions*, "Oculus.Interaction.Input", "ShadowHandExtensions");
// Type namespace: Oculus.Interaction.Input
namespace Oculus::Interaction::Input {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.Input.ShadowHandExtensions
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class ShadowHandExtensions : public ::Il2CppObject {
    public:
    // static public System.Void FromHandRoot(Oculus.Interaction.Input.ShadowHand shadow, Oculus.Interaction.Input.IHand hand)
    // Offset: 0x481DF08
    static void FromHandRoot(::Oculus::Interaction::Input::ShadowHand* shadow, ::Oculus::Interaction::Input::IHand* hand);
    // static public System.Void FromHandFingers(Oculus.Interaction.Input.ShadowHand shadow, Oculus.Interaction.Input.IHand hand, System.Boolean flipHandedness)
    // Offset: 0x481E064
    static void FromHandFingers(::Oculus::Interaction::Input::ShadowHand* shadow, ::Oculus::Interaction::Input::IHand* hand, bool flipHandedness);
    // static public System.Void FromHand(Oculus.Interaction.Input.ShadowHand shadow, Oculus.Interaction.Input.IHand hand, System.Boolean flipHandedness)
    // Offset: 0x481E1D0
    static void FromHand(::Oculus::Interaction::Input::ShadowHand* shadow, ::Oculus::Interaction::Input::IHand* hand, bool flipHandedness);
  }; // Oculus.Interaction.Input.ShadowHandExtensions
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::Input::ShadowHandExtensions::FromHandRoot
// Il2CppName: FromHandRoot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Oculus::Interaction::Input::ShadowHand*, ::Oculus::Interaction::Input::IHand*)>(&Oculus::Interaction::Input::ShadowHandExtensions::FromHandRoot)> {
  static const MethodInfo* get() {
    static auto* shadow = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "ShadowHand")->byval_arg;
    static auto* hand = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "IHand")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::ShadowHandExtensions*), "FromHandRoot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{shadow, hand});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::ShadowHandExtensions::FromHandFingers
// Il2CppName: FromHandFingers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Oculus::Interaction::Input::ShadowHand*, ::Oculus::Interaction::Input::IHand*, bool)>(&Oculus::Interaction::Input::ShadowHandExtensions::FromHandFingers)> {
  static const MethodInfo* get() {
    static auto* shadow = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "ShadowHand")->byval_arg;
    static auto* hand = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "IHand")->byval_arg;
    static auto* flipHandedness = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::ShadowHandExtensions*), "FromHandFingers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{shadow, hand, flipHandedness});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::ShadowHandExtensions::FromHand
// Il2CppName: FromHand
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Oculus::Interaction::Input::ShadowHand*, ::Oculus::Interaction::Input::IHand*, bool)>(&Oculus::Interaction::Input::ShadowHandExtensions::FromHand)> {
  static const MethodInfo* get() {
    static auto* shadow = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "ShadowHand")->byval_arg;
    static auto* hand = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "IHand")->byval_arg;
    static auto* flipHandedness = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::ShadowHandExtensions*), "FromHand", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{shadow, hand, flipHandedness});
  }
};
