// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.Input.OneEuroFilterPropertyBlock
#include "Oculus/Interaction/Input/OneEuroFilterPropertyBlock.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: Oculus.Interaction.Input
namespace Oculus::Interaction::Input {
  // Forward declaring type: IOneEuroFilter`1<TData>
  template<typename TData>
  class IOneEuroFilter_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::Oculus::Interaction::Input::IOneEuroFilter_1, "Oculus.Interaction.Input", "IOneEuroFilter`1");
// Type namespace: Oculus.Interaction.Input
namespace Oculus::Interaction::Input {
  // WARNING Size may be invalid!
  // Autogenerated type: Oculus.Interaction.Input.IOneEuroFilter`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename TData>
  class IOneEuroFilter_1 {
    public:
    // public TData get_Value()
    // Offset: 0xFFFFFFFFFFFFFFFF
    TData get_Value() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IOneEuroFilter_1::get_Value");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IOneEuroFilter_1<TData>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<TData, false>(this, ___internal__method);
    }
    // public System.Void SetProperties(in Oculus.Interaction.Input.OneEuroFilterPropertyBlock properties)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void SetProperties(ByRef<::Oculus::Interaction::Input::OneEuroFilterPropertyBlock> properties) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IOneEuroFilter_1::SetProperties");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IOneEuroFilter_1<TData>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(properties));
    }
    // public TData Step(TData rawValue, System.Single deltaTime)
    // Offset: 0xFFFFFFFFFFFFFFFF
    TData Step(TData rawValue, float deltaTime) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IOneEuroFilter_1::Step");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IOneEuroFilter_1<TData>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<TData, false>(this, ___internal__method, rawValue, deltaTime);
    }
    // public System.Void Reset()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Reset() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IOneEuroFilter_1::Reset");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IOneEuroFilter_1<TData>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
  }; // Oculus.Interaction.Input.IOneEuroFilter`1
  // Could not write size check! Type: Oculus.Interaction.Input.IOneEuroFilter`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
