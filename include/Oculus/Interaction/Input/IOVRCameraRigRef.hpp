// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: OVRCameraRig
  class OVRCameraRig;
  // Forward declaring type: OVRHand
  class OVRHand;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.Input
namespace Oculus::Interaction::Input {
  // Forward declaring type: IOVRCameraRigRef
  class IOVRCameraRigRef;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::Input::IOVRCameraRigRef);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::Input::IOVRCameraRigRef*, "Oculus.Interaction.Input", "IOVRCameraRigRef");
// Type namespace: Oculus.Interaction.Input
namespace Oculus::Interaction::Input {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.Input.IOVRCameraRigRef
  // [TokenAttribute] Offset: FFFFFFFF
  class IOVRCameraRigRef {
    public:
    // public OVRCameraRig get_CameraRig()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::OVRCameraRig* get_CameraRig();
    // public OVRHand get_LeftHand()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::OVRHand* get_LeftHand();
    // public OVRHand get_RightHand()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::OVRHand* get_RightHand();
    // public UnityEngine.Transform get_LeftController()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::Transform* get_LeftController();
    // public UnityEngine.Transform get_RightController()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::Transform* get_RightController();
    // public System.Void add_WhenInputDataDirtied(System.Action`1<System.Boolean> value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void add_WhenInputDataDirtied(::System::Action_1<bool>* value);
    // public System.Void remove_WhenInputDataDirtied(System.Action`1<System.Boolean> value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void remove_WhenInputDataDirtied(::System::Action_1<bool>* value);
  }; // Oculus.Interaction.Input.IOVRCameraRigRef
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::Input::IOVRCameraRigRef::get_CameraRig
// Il2CppName: get_CameraRig
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRCameraRig* (Oculus::Interaction::Input::IOVRCameraRigRef::*)()>(&Oculus::Interaction::Input::IOVRCameraRigRef::get_CameraRig)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::IOVRCameraRigRef*), "get_CameraRig", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::IOVRCameraRigRef::get_LeftHand
// Il2CppName: get_LeftHand
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRHand* (Oculus::Interaction::Input::IOVRCameraRigRef::*)()>(&Oculus::Interaction::Input::IOVRCameraRigRef::get_LeftHand)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::IOVRCameraRigRef*), "get_LeftHand", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::IOVRCameraRigRef::get_RightHand
// Il2CppName: get_RightHand
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::OVRHand* (Oculus::Interaction::Input::IOVRCameraRigRef::*)()>(&Oculus::Interaction::Input::IOVRCameraRigRef::get_RightHand)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::IOVRCameraRigRef*), "get_RightHand", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::IOVRCameraRigRef::get_LeftController
// Il2CppName: get_LeftController
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (Oculus::Interaction::Input::IOVRCameraRigRef::*)()>(&Oculus::Interaction::Input::IOVRCameraRigRef::get_LeftController)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::IOVRCameraRigRef*), "get_LeftController", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::IOVRCameraRigRef::get_RightController
// Il2CppName: get_RightController
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (Oculus::Interaction::Input::IOVRCameraRigRef::*)()>(&Oculus::Interaction::Input::IOVRCameraRigRef::get_RightController)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::IOVRCameraRigRef*), "get_RightController", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::IOVRCameraRigRef::add_WhenInputDataDirtied
// Il2CppName: add_WhenInputDataDirtied
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Input::IOVRCameraRigRef::*)(::System::Action_1<bool>*)>(&Oculus::Interaction::Input::IOVRCameraRigRef::add_WhenInputDataDirtied)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Boolean")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::IOVRCameraRigRef*), "add_WhenInputDataDirtied", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::IOVRCameraRigRef::remove_WhenInputDataDirtied
// Il2CppName: remove_WhenInputDataDirtied
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Input::IOVRCameraRigRef::*)(::System::Action_1<bool>*)>(&Oculus::Interaction::Input::IOVRCameraRigRef::remove_WhenInputDataDirtied)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Boolean")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::IOVRCameraRigRef*), "remove_WhenInputDataDirtied", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
