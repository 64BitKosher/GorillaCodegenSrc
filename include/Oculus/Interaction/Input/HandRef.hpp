// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: Oculus.Interaction.Input.IHand
#include "Oculus/Interaction/Input/IHand.hpp"
// Including type: Oculus.Interaction.IActiveState
#include "Oculus/Interaction/IActiveState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Object because it is already included!
  // Forward declaring type: Pose
  struct Pose;
}
// Forward declaring namespace: Oculus::Interaction::Input
namespace Oculus::Interaction::Input {
  // Forward declaring type: Handedness
  struct Handedness;
  // Forward declaring type: HandFinger
  struct HandFinger;
  // Forward declaring type: HandJointId
  struct HandJointId;
  // Forward declaring type: ReadOnlyHandJointPoses
  class ReadOnlyHandJointPoses;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.Input
namespace Oculus::Interaction::Input {
  // Forward declaring type: HandRef
  class HandRef;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::Input::HandRef);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::Input::HandRef*, "Oculus.Interaction.Input", "HandRef");
// Type namespace: Oculus.Interaction.Input
namespace Oculus::Interaction::Input {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.Input.HandRef
  // [TokenAttribute] Offset: FFFFFFFF
  class HandRef : public ::UnityEngine::MonoBehaviour/*, public ::Oculus::Interaction::Input::IHand, public ::Oculus::Interaction::IActiveState*/ {
    public:
    public:
    // private UnityEngine.Object _hand
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::Object* hand;
    // Field size check
    static_assert(sizeof(::UnityEngine::Object*) == 0x8);
    // private Oculus.Interaction.Input.IHand <Hand>k__BackingField
    // Size: 0x8
    // Offset: 0x28
    ::Oculus::Interaction::Input::IHand* Hand;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Input::IHand*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::Oculus::Interaction::Input::IHand
    operator ::Oculus::Interaction::Input::IHand() noexcept {
      return *reinterpret_cast<::Oculus::Interaction::Input::IHand*>(this);
    }
    // Creating interface conversion operator: operator ::Oculus::Interaction::IActiveState
    operator ::Oculus::Interaction::IActiveState() noexcept {
      return *reinterpret_cast<::Oculus::Interaction::IActiveState*>(this);
    }
    // Get instance field reference: private UnityEngine.Object _hand
    [[deprecated("Use field access instead!")]] ::UnityEngine::Object*& dyn__hand();
    // Get instance field reference: private Oculus.Interaction.Input.IHand <Hand>k__BackingField
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IHand*& dyn_$Hand$k__BackingField();
    // public Oculus.Interaction.Input.IHand get_Hand()
    // Offset: 0x481C7EC
    ::Oculus::Interaction::Input::IHand* get_Hand();
    // private System.Void set_Hand(Oculus.Interaction.Input.IHand value)
    // Offset: 0x481C7F4
    void set_Hand(::Oculus::Interaction::Input::IHand* value);
    // public Oculus.Interaction.Input.Handedness get_Handedness()
    // Offset: 0x481C7FC
    ::Oculus::Interaction::Input::Handedness get_Handedness();
    // public System.Boolean get_IsConnected()
    // Offset: 0x481C89C
    bool get_IsConnected();
    // public System.Boolean get_IsHighConfidence()
    // Offset: 0x481C940
    bool get_IsHighConfidence();
    // public System.Boolean get_IsDominantHand()
    // Offset: 0x481C9E4
    bool get_IsDominantHand();
    // public System.Single get_Scale()
    // Offset: 0x481CA88
    float get_Scale();
    // public System.Boolean get_IsPointerPoseValid()
    // Offset: 0x481CB2C
    bool get_IsPointerPoseValid();
    // public System.Boolean get_IsTrackedDataValid()
    // Offset: 0x481CBD0
    bool get_IsTrackedDataValid();
    // public System.Int32 get_CurrentDataVersion()
    // Offset: 0x481CC74
    int get_CurrentDataVersion();
    // public System.Void add_WhenHandUpdated(System.Action value)
    // Offset: 0x481CD18
    void add_WhenHandUpdated(::System::Action* value);
    // public System.Void remove_WhenHandUpdated(System.Action value)
    // Offset: 0x481CDC4
    void remove_WhenHandUpdated(::System::Action* value);
    // public System.Boolean get_Active()
    // Offset: 0x481CE70
    bool get_Active();
    // protected System.Void Awake()
    // Offset: 0x481CE74
    void Awake();
    // protected System.Void Start()
    // Offset: 0x481CECC
    void Start();
    // public System.Boolean GetFingerIsPinching(Oculus.Interaction.Input.HandFinger finger)
    // Offset: 0x481CED0
    bool GetFingerIsPinching(::Oculus::Interaction::Input::HandFinger finger);
    // public System.Boolean GetIndexFingerIsPinching()
    // Offset: 0x481CF7C
    bool GetIndexFingerIsPinching();
    // public System.Boolean GetPointerPose(out UnityEngine.Pose pose)
    // Offset: 0x481D020
    bool GetPointerPose(ByRef<::UnityEngine::Pose> pose);
    // public System.Boolean GetJointPose(Oculus.Interaction.Input.HandJointId handJointId, out UnityEngine.Pose pose)
    // Offset: 0x481D0CC
    bool GetJointPose(::Oculus::Interaction::Input::HandJointId handJointId, ByRef<::UnityEngine::Pose> pose);
    // public System.Boolean GetJointPoseLocal(Oculus.Interaction.Input.HandJointId handJointId, out UnityEngine.Pose pose)
    // Offset: 0x481D188
    bool GetJointPoseLocal(::Oculus::Interaction::Input::HandJointId handJointId, ByRef<::UnityEngine::Pose> pose);
    // public System.Boolean GetJointPosesLocal(out Oculus.Interaction.Input.ReadOnlyHandJointPoses jointPosesLocal)
    // Offset: 0x481D244
    bool GetJointPosesLocal(ByRef<::Oculus::Interaction::Input::ReadOnlyHandJointPoses*> jointPosesLocal);
    // public System.Boolean GetJointPoseFromWrist(Oculus.Interaction.Input.HandJointId handJointId, out UnityEngine.Pose pose)
    // Offset: 0x481D2F0
    bool GetJointPoseFromWrist(::Oculus::Interaction::Input::HandJointId handJointId, ByRef<::UnityEngine::Pose> pose);
    // public System.Boolean GetJointPosesFromWrist(out Oculus.Interaction.Input.ReadOnlyHandJointPoses jointPosesFromWrist)
    // Offset: 0x481D3AC
    bool GetJointPosesFromWrist(ByRef<::Oculus::Interaction::Input::ReadOnlyHandJointPoses*> jointPosesFromWrist);
    // public System.Boolean GetPalmPoseLocal(out UnityEngine.Pose pose)
    // Offset: 0x481D458
    bool GetPalmPoseLocal(ByRef<::UnityEngine::Pose> pose);
    // public System.Boolean GetFingerIsHighConfidence(Oculus.Interaction.Input.HandFinger finger)
    // Offset: 0x481D504
    bool GetFingerIsHighConfidence(::Oculus::Interaction::Input::HandFinger finger);
    // public System.Single GetFingerPinchStrength(Oculus.Interaction.Input.HandFinger finger)
    // Offset: 0x481D5B0
    float GetFingerPinchStrength(::Oculus::Interaction::Input::HandFinger finger);
    // public System.Boolean GetRootPose(out UnityEngine.Pose pose)
    // Offset: 0x481D65C
    bool GetRootPose(ByRef<::UnityEngine::Pose> pose);
    // public System.Void InjectAllHandRef(Oculus.Interaction.Input.IHand hand)
    // Offset: 0x481D708
    void InjectAllHandRef(::Oculus::Interaction::Input::IHand* hand);
    // public System.Void InjectHand(Oculus.Interaction.Input.IHand hand)
    // Offset: 0x481D70C
    void InjectHand(::Oculus::Interaction::Input::IHand* hand);
    // public System.Void .ctor()
    // Offset: 0x481D7DC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static HandRef* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandRef::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<HandRef*, creationType>()));
    }
  }; // Oculus.Interaction.Input.HandRef
  #pragma pack(pop)
  static check_size<sizeof(HandRef), 40 + sizeof(::Oculus::Interaction::Input::IHand*)> __Oculus_Interaction_Input_HandRefSizeCheck;
  static_assert(sizeof(HandRef) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandRef::get_Hand
// Il2CppName: get_Hand
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::Input::IHand* (Oculus::Interaction::Input::HandRef::*)()>(&Oculus::Interaction::Input::HandRef::get_Hand)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandRef*), "get_Hand", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandRef::set_Hand
// Il2CppName: set_Hand
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Input::HandRef::*)(::Oculus::Interaction::Input::IHand*)>(&Oculus::Interaction::Input::HandRef::set_Hand)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "IHand")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandRef*), "set_Hand", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandRef::get_Handedness
// Il2CppName: get_Handedness
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Interaction::Input::Handedness (Oculus::Interaction::Input::HandRef::*)()>(&Oculus::Interaction::Input::HandRef::get_Handedness)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandRef*), "get_Handedness", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandRef::get_IsConnected
// Il2CppName: get_IsConnected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Input::HandRef::*)()>(&Oculus::Interaction::Input::HandRef::get_IsConnected)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandRef*), "get_IsConnected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandRef::get_IsHighConfidence
// Il2CppName: get_IsHighConfidence
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Input::HandRef::*)()>(&Oculus::Interaction::Input::HandRef::get_IsHighConfidence)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandRef*), "get_IsHighConfidence", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandRef::get_IsDominantHand
// Il2CppName: get_IsDominantHand
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Input::HandRef::*)()>(&Oculus::Interaction::Input::HandRef::get_IsDominantHand)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandRef*), "get_IsDominantHand", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandRef::get_Scale
// Il2CppName: get_Scale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Oculus::Interaction::Input::HandRef::*)()>(&Oculus::Interaction::Input::HandRef::get_Scale)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandRef*), "get_Scale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandRef::get_IsPointerPoseValid
// Il2CppName: get_IsPointerPoseValid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Input::HandRef::*)()>(&Oculus::Interaction::Input::HandRef::get_IsPointerPoseValid)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandRef*), "get_IsPointerPoseValid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandRef::get_IsTrackedDataValid
// Il2CppName: get_IsTrackedDataValid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Input::HandRef::*)()>(&Oculus::Interaction::Input::HandRef::get_IsTrackedDataValid)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandRef*), "get_IsTrackedDataValid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandRef::get_CurrentDataVersion
// Il2CppName: get_CurrentDataVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Oculus::Interaction::Input::HandRef::*)()>(&Oculus::Interaction::Input::HandRef::get_CurrentDataVersion)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandRef*), "get_CurrentDataVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandRef::add_WhenHandUpdated
// Il2CppName: add_WhenHandUpdated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Input::HandRef::*)(::System::Action*)>(&Oculus::Interaction::Input::HandRef::add_WhenHandUpdated)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandRef*), "add_WhenHandUpdated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandRef::remove_WhenHandUpdated
// Il2CppName: remove_WhenHandUpdated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Input::HandRef::*)(::System::Action*)>(&Oculus::Interaction::Input::HandRef::remove_WhenHandUpdated)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandRef*), "remove_WhenHandUpdated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandRef::get_Active
// Il2CppName: get_Active
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Input::HandRef::*)()>(&Oculus::Interaction::Input::HandRef::get_Active)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandRef*), "get_Active", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandRef::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Input::HandRef::*)()>(&Oculus::Interaction::Input::HandRef::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandRef*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandRef::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Input::HandRef::*)()>(&Oculus::Interaction::Input::HandRef::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandRef*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandRef::GetFingerIsPinching
// Il2CppName: GetFingerIsPinching
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Input::HandRef::*)(::Oculus::Interaction::Input::HandFinger)>(&Oculus::Interaction::Input::HandRef::GetFingerIsPinching)> {
  static const MethodInfo* get() {
    static auto* finger = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "HandFinger")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandRef*), "GetFingerIsPinching", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{finger});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandRef::GetIndexFingerIsPinching
// Il2CppName: GetIndexFingerIsPinching
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Input::HandRef::*)()>(&Oculus::Interaction::Input::HandRef::GetIndexFingerIsPinching)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandRef*), "GetIndexFingerIsPinching", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandRef::GetPointerPose
// Il2CppName: GetPointerPose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Input::HandRef::*)(ByRef<::UnityEngine::Pose>)>(&Oculus::Interaction::Input::HandRef::GetPointerPose)> {
  static const MethodInfo* get() {
    static auto* pose = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandRef*), "GetPointerPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pose});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandRef::GetJointPose
// Il2CppName: GetJointPose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Input::HandRef::*)(::Oculus::Interaction::Input::HandJointId, ByRef<::UnityEngine::Pose>)>(&Oculus::Interaction::Input::HandRef::GetJointPose)> {
  static const MethodInfo* get() {
    static auto* handJointId = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "HandJointId")->byval_arg;
    static auto* pose = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandRef*), "GetJointPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handJointId, pose});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandRef::GetJointPoseLocal
// Il2CppName: GetJointPoseLocal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Input::HandRef::*)(::Oculus::Interaction::Input::HandJointId, ByRef<::UnityEngine::Pose>)>(&Oculus::Interaction::Input::HandRef::GetJointPoseLocal)> {
  static const MethodInfo* get() {
    static auto* handJointId = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "HandJointId")->byval_arg;
    static auto* pose = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandRef*), "GetJointPoseLocal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handJointId, pose});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandRef::GetJointPosesLocal
// Il2CppName: GetJointPosesLocal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Input::HandRef::*)(ByRef<::Oculus::Interaction::Input::ReadOnlyHandJointPoses*>)>(&Oculus::Interaction::Input::HandRef::GetJointPosesLocal)> {
  static const MethodInfo* get() {
    static auto* jointPosesLocal = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "ReadOnlyHandJointPoses")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandRef*), "GetJointPosesLocal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{jointPosesLocal});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandRef::GetJointPoseFromWrist
// Il2CppName: GetJointPoseFromWrist
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Input::HandRef::*)(::Oculus::Interaction::Input::HandJointId, ByRef<::UnityEngine::Pose>)>(&Oculus::Interaction::Input::HandRef::GetJointPoseFromWrist)> {
  static const MethodInfo* get() {
    static auto* handJointId = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "HandJointId")->byval_arg;
    static auto* pose = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandRef*), "GetJointPoseFromWrist", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handJointId, pose});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandRef::GetJointPosesFromWrist
// Il2CppName: GetJointPosesFromWrist
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Input::HandRef::*)(ByRef<::Oculus::Interaction::Input::ReadOnlyHandJointPoses*>)>(&Oculus::Interaction::Input::HandRef::GetJointPosesFromWrist)> {
  static const MethodInfo* get() {
    static auto* jointPosesFromWrist = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "ReadOnlyHandJointPoses")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandRef*), "GetJointPosesFromWrist", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{jointPosesFromWrist});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandRef::GetPalmPoseLocal
// Il2CppName: GetPalmPoseLocal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Input::HandRef::*)(ByRef<::UnityEngine::Pose>)>(&Oculus::Interaction::Input::HandRef::GetPalmPoseLocal)> {
  static const MethodInfo* get() {
    static auto* pose = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandRef*), "GetPalmPoseLocal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pose});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandRef::GetFingerIsHighConfidence
// Il2CppName: GetFingerIsHighConfidence
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Input::HandRef::*)(::Oculus::Interaction::Input::HandFinger)>(&Oculus::Interaction::Input::HandRef::GetFingerIsHighConfidence)> {
  static const MethodInfo* get() {
    static auto* finger = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "HandFinger")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandRef*), "GetFingerIsHighConfidence", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{finger});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandRef::GetFingerPinchStrength
// Il2CppName: GetFingerPinchStrength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Oculus::Interaction::Input::HandRef::*)(::Oculus::Interaction::Input::HandFinger)>(&Oculus::Interaction::Input::HandRef::GetFingerPinchStrength)> {
  static const MethodInfo* get() {
    static auto* finger = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "HandFinger")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandRef*), "GetFingerPinchStrength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{finger});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandRef::GetRootPose
// Il2CppName: GetRootPose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Input::HandRef::*)(ByRef<::UnityEngine::Pose>)>(&Oculus::Interaction::Input::HandRef::GetRootPose)> {
  static const MethodInfo* get() {
    static auto* pose = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandRef*), "GetRootPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pose});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandRef::InjectAllHandRef
// Il2CppName: InjectAllHandRef
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Input::HandRef::*)(::Oculus::Interaction::Input::IHand*)>(&Oculus::Interaction::Input::HandRef::InjectAllHandRef)> {
  static const MethodInfo* get() {
    static auto* hand = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "IHand")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandRef*), "InjectAllHandRef", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{hand});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandRef::InjectHand
// Il2CppName: InjectHand
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Input::HandRef::*)(::Oculus::Interaction::Input::IHand*)>(&Oculus::Interaction::Input::HandRef::InjectHand)> {
  static const MethodInfo* get() {
    static auto* hand = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "IHand")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::HandRef*), "InjectHand", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{hand});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::HandRef::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
