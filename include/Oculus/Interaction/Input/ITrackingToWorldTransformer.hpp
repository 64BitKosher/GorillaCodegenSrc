// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: Pose
  struct Pose;
  // Forward declaring type: Quaternion
  struct Quaternion;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.Input
namespace Oculus::Interaction::Input {
  // Forward declaring type: ITrackingToWorldTransformer
  class ITrackingToWorldTransformer;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::Input::ITrackingToWorldTransformer);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::Input::ITrackingToWorldTransformer*, "Oculus.Interaction.Input", "ITrackingToWorldTransformer");
// Type namespace: Oculus.Interaction.Input
namespace Oculus::Interaction::Input {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.Input.ITrackingToWorldTransformer
  // [TokenAttribute] Offset: FFFFFFFF
  class ITrackingToWorldTransformer {
    public:
    // public UnityEngine.Transform get_Transform()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::Transform* get_Transform();
    // public UnityEngine.Pose ToWorldPose(UnityEngine.Pose poseRh)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::Pose ToWorldPose(::UnityEngine::Pose poseRh);
    // public UnityEngine.Pose ToTrackingPose(in UnityEngine.Pose worldPose)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::Pose ToTrackingPose(ByRef<::UnityEngine::Pose> worldPose);
    // public UnityEngine.Quaternion get_WorldToTrackingWristJointFixup()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::Quaternion get_WorldToTrackingWristJointFixup();
  }; // Oculus.Interaction.Input.ITrackingToWorldTransformer
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::Input::ITrackingToWorldTransformer::get_Transform
// Il2CppName: get_Transform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (Oculus::Interaction::Input::ITrackingToWorldTransformer::*)()>(&Oculus::Interaction::Input::ITrackingToWorldTransformer::get_Transform)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::ITrackingToWorldTransformer*), "get_Transform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::ITrackingToWorldTransformer::ToWorldPose
// Il2CppName: ToWorldPose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Pose (Oculus::Interaction::Input::ITrackingToWorldTransformer::*)(::UnityEngine::Pose)>(&Oculus::Interaction::Input::ITrackingToWorldTransformer::ToWorldPose)> {
  static const MethodInfo* get() {
    static auto* poseRh = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::ITrackingToWorldTransformer*), "ToWorldPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{poseRh});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::ITrackingToWorldTransformer::ToTrackingPose
// Il2CppName: ToTrackingPose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Pose (Oculus::Interaction::Input::ITrackingToWorldTransformer::*)(ByRef<::UnityEngine::Pose>)>(&Oculus::Interaction::Input::ITrackingToWorldTransformer::ToTrackingPose)> {
  static const MethodInfo* get() {
    static auto* worldPose = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::ITrackingToWorldTransformer*), "ToTrackingPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{worldPose});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::ITrackingToWorldTransformer::get_WorldToTrackingWristJointFixup
// Il2CppName: get_WorldToTrackingWristJointFixup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Quaternion (Oculus::Interaction::Input::ITrackingToWorldTransformer::*)()>(&Oculus::Interaction::Input::ITrackingToWorldTransformer::get_WorldToTrackingWristJointFixup)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::ITrackingToWorldTransformer*), "get_WorldToTrackingWristJointFixup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
