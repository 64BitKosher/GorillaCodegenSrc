// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction::Input
namespace Oculus::Interaction::Input {
  // Forward declaring type: Hand
  class Hand;
  // Forward declaring type: HandJointId
  struct HandJointId;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.Input
namespace Oculus::Interaction::Input {
  // Forward declaring type: JointsRadiusFeature
  class JointsRadiusFeature;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::Input::JointsRadiusFeature);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::Input::JointsRadiusFeature*, "Oculus.Interaction.Input", "JointsRadiusFeature");
// Type namespace: Oculus.Interaction.Input
namespace Oculus::Interaction::Input {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.Input.JointsRadiusFeature
  // [TokenAttribute] Offset: FFFFFFFF
  class JointsRadiusFeature : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private Oculus.Interaction.Input.Hand _hand
    // Size: 0x8
    // Offset: 0x20
    ::Oculus::Interaction::Input::Hand* hand;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::Input::Hand*) == 0x8);
    public:
    // Get instance field reference: private Oculus.Interaction.Input.Hand _hand
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::Hand*& dyn__hand();
    // public System.Single GetJointRadius(Oculus.Interaction.Input.HandJointId id)
    // Offset: 0x48195E0
    float GetJointRadius(::Oculus::Interaction::Input::HandJointId id);
    // public System.Void .ctor()
    // Offset: 0x481D7E4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JointsRadiusFeature* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::JointsRadiusFeature::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JointsRadiusFeature*, creationType>()));
    }
  }; // Oculus.Interaction.Input.JointsRadiusFeature
  #pragma pack(pop)
  static check_size<sizeof(JointsRadiusFeature), 32 + sizeof(::Oculus::Interaction::Input::Hand*)> __Oculus_Interaction_Input_JointsRadiusFeatureSizeCheck;
  static_assert(sizeof(JointsRadiusFeature) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::Input::JointsRadiusFeature::GetJointRadius
// Il2CppName: GetJointRadius
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Oculus::Interaction::Input::JointsRadiusFeature::*)(::Oculus::Interaction::Input::HandJointId)>(&Oculus::Interaction::Input::JointsRadiusFeature::GetJointRadius)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("Oculus.Interaction.Input", "HandJointId")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::JointsRadiusFeature*), "GetJointRadius", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Input::JointsRadiusFeature::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
