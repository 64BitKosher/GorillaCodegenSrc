// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: Oculus.Interaction.Input
namespace Oculus::Interaction::Input {
  // Forward declaring type: HandFinger
  struct HandFinger;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::Input::HandFinger, "Oculus.Interaction.Input", "HandFinger");
// Type namespace: Oculus.Interaction.Input
namespace Oculus::Interaction::Input {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.Input.HandFinger
  // [TokenAttribute] Offset: FFFFFFFF
  struct HandFinger/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: HandFinger
    constexpr HandFinger(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public Oculus.Interaction.Input.HandFinger Invalid
    static constexpr const int Invalid = -1;
    // Get static field: static public Oculus.Interaction.Input.HandFinger Invalid
    static ::Oculus::Interaction::Input::HandFinger _get_Invalid();
    // Set static field: static public Oculus.Interaction.Input.HandFinger Invalid
    static void _set_Invalid(::Oculus::Interaction::Input::HandFinger value);
    // static field const value: static public Oculus.Interaction.Input.HandFinger Thumb
    static constexpr const int Thumb = 0;
    // Get static field: static public Oculus.Interaction.Input.HandFinger Thumb
    static ::Oculus::Interaction::Input::HandFinger _get_Thumb();
    // Set static field: static public Oculus.Interaction.Input.HandFinger Thumb
    static void _set_Thumb(::Oculus::Interaction::Input::HandFinger value);
    // static field const value: static public Oculus.Interaction.Input.HandFinger Index
    static constexpr const int Index = 1;
    // Get static field: static public Oculus.Interaction.Input.HandFinger Index
    static ::Oculus::Interaction::Input::HandFinger _get_Index();
    // Set static field: static public Oculus.Interaction.Input.HandFinger Index
    static void _set_Index(::Oculus::Interaction::Input::HandFinger value);
    // static field const value: static public Oculus.Interaction.Input.HandFinger Middle
    static constexpr const int Middle = 2;
    // Get static field: static public Oculus.Interaction.Input.HandFinger Middle
    static ::Oculus::Interaction::Input::HandFinger _get_Middle();
    // Set static field: static public Oculus.Interaction.Input.HandFinger Middle
    static void _set_Middle(::Oculus::Interaction::Input::HandFinger value);
    // static field const value: static public Oculus.Interaction.Input.HandFinger Ring
    static constexpr const int Ring = 3;
    // Get static field: static public Oculus.Interaction.Input.HandFinger Ring
    static ::Oculus::Interaction::Input::HandFinger _get_Ring();
    // Set static field: static public Oculus.Interaction.Input.HandFinger Ring
    static void _set_Ring(::Oculus::Interaction::Input::HandFinger value);
    // static field const value: static public Oculus.Interaction.Input.HandFinger Pinky
    static constexpr const int Pinky = 4;
    // Get static field: static public Oculus.Interaction.Input.HandFinger Pinky
    static ::Oculus::Interaction::Input::HandFinger _get_Pinky();
    // Set static field: static public Oculus.Interaction.Input.HandFinger Pinky
    static void _set_Pinky(::Oculus::Interaction::Input::HandFinger value);
    // static field const value: static public Oculus.Interaction.Input.HandFinger Max
    static constexpr const int Max = 4;
    // Get static field: static public Oculus.Interaction.Input.HandFinger Max
    static ::Oculus::Interaction::Input::HandFinger _get_Max();
    // Set static field: static public Oculus.Interaction.Input.HandFinger Max
    static void _set_Max(::Oculus::Interaction::Input::HandFinger value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // Oculus.Interaction.Input.HandFinger
  #pragma pack(pop)
  static check_size<sizeof(HandFinger), 0 + sizeof(int)> __Oculus_Interaction_Input_HandFingerSizeCheck;
  static_assert(sizeof(HandFinger) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
