// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: OVRPlugin/Skeleton2
#include "GlobalNamespace/OVRPlugin_Skeleton2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: Oculus.Interaction.Input
namespace Oculus::Interaction::Input {
  // Forward declaring type: OVRSkeletonData
  class OVRSkeletonData;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::Input::OVRSkeletonData);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::Input::OVRSkeletonData*, "Oculus.Interaction.Input", "OVRSkeletonData");
// Type namespace: Oculus.Interaction.Input
namespace Oculus::Interaction::Input {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.Input.OVRSkeletonData
  // [TokenAttribute] Offset: FFFFFFFF
  class OVRSkeletonData : public ::Il2CppObject {
    public:
    // Get static field: static public readonly OVRPlugin/Skeleton2 LeftSkeleton
    static ::GlobalNamespace::OVRPlugin::Skeleton2 _get_LeftSkeleton();
    // Set static field: static public readonly OVRPlugin/Skeleton2 LeftSkeleton
    static void _set_LeftSkeleton(::GlobalNamespace::OVRPlugin::Skeleton2 value);
    // Get static field: static public readonly OVRPlugin/Skeleton2 RightSkeleton
    static ::GlobalNamespace::OVRPlugin::Skeleton2 _get_RightSkeleton();
    // Set static field: static public readonly OVRPlugin/Skeleton2 RightSkeleton
    static void _set_RightSkeleton(::GlobalNamespace::OVRPlugin::Skeleton2 value);
    // public System.Void .ctor()
    // Offset: 0x4793F14
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static OVRSkeletonData* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRSkeletonData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<OVRSkeletonData*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x4793F1C
    static void _cctor();
  }; // Oculus.Interaction.Input.OVRSkeletonData
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::Input::OVRSkeletonData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Oculus::Interaction::Input::OVRSkeletonData::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Oculus::Interaction::Input::OVRSkeletonData::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Input::OVRSkeletonData*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
