// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.OneGrabRotateTransformer
#include "Oculus/Interaction/OneGrabRotateTransformer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction
namespace Oculus::Interaction {
  // Forward declaring type: FloatConstraint
  class FloatConstraint;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::OneGrabRotateTransformer::OneGrabRotateConstraints);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::OneGrabRotateTransformer::OneGrabRotateConstraints*, "Oculus.Interaction", "OneGrabRotateTransformer/OneGrabRotateConstraints");
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.OneGrabRotateTransformer/OneGrabRotateConstraints
  // [TokenAttribute] Offset: FFFFFFFF
  class OneGrabRotateTransformer::OneGrabRotateConstraints : public ::Il2CppObject {
    public:
    public:
    // public Oculus.Interaction.FloatConstraint MinAngle
    // Size: 0x8
    // Offset: 0x10
    ::Oculus::Interaction::FloatConstraint* MinAngle;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::FloatConstraint*) == 0x8);
    // public Oculus.Interaction.FloatConstraint MaxAngle
    // Size: 0x8
    // Offset: 0x18
    ::Oculus::Interaction::FloatConstraint* MaxAngle;
    // Field size check
    static_assert(sizeof(::Oculus::Interaction::FloatConstraint*) == 0x8);
    public:
    // Get instance field reference: public Oculus.Interaction.FloatConstraint MinAngle
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::FloatConstraint*& dyn_MinAngle();
    // Get instance field reference: public Oculus.Interaction.FloatConstraint MaxAngle
    [[deprecated("Use field access instead!")]] ::Oculus::Interaction::FloatConstraint*& dyn_MaxAngle();
    // public System.Void .ctor()
    // Offset: 0x47A50D4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static OneGrabRotateTransformer::OneGrabRotateConstraints* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabRotateTransformer::OneGrabRotateConstraints::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<OneGrabRotateTransformer::OneGrabRotateConstraints*, creationType>()));
    }
  }; // Oculus.Interaction.OneGrabRotateTransformer/OneGrabRotateConstraints
  #pragma pack(pop)
  static check_size<sizeof(OneGrabRotateTransformer::OneGrabRotateConstraints), 24 + sizeof(::Oculus::Interaction::FloatConstraint*)> __Oculus_Interaction_OneGrabRotateTransformer_OneGrabRotateConstraintsSizeCheck;
  static_assert(sizeof(OneGrabRotateTransformer::OneGrabRotateConstraints) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::OneGrabRotateTransformer::OneGrabRotateConstraints::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
