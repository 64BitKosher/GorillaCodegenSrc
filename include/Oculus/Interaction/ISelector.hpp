// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
}
// Completed forward declares
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Forward declaring type: ISelector
  class ISelector;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::ISelector);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::ISelector*, "Oculus.Interaction", "ISelector");
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.ISelector
  // [TokenAttribute] Offset: FFFFFFFF
  class ISelector {
    public:
    // public System.Void add_WhenSelected(System.Action value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void add_WhenSelected(::System::Action* value);
    // public System.Void remove_WhenSelected(System.Action value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void remove_WhenSelected(::System::Action* value);
    // public System.Void add_WhenUnselected(System.Action value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void add_WhenUnselected(::System::Action* value);
    // public System.Void remove_WhenUnselected(System.Action value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void remove_WhenUnselected(::System::Action* value);
  }; // Oculus.Interaction.ISelector
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::ISelector::add_WhenSelected
// Il2CppName: add_WhenSelected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::ISelector::*)(::System::Action*)>(&Oculus::Interaction::ISelector::add_WhenSelected)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::ISelector*), "add_WhenSelected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::ISelector::remove_WhenSelected
// Il2CppName: remove_WhenSelected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::ISelector::*)(::System::Action*)>(&Oculus::Interaction::ISelector::remove_WhenSelected)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::ISelector*), "remove_WhenSelected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::ISelector::add_WhenUnselected
// Il2CppName: add_WhenUnselected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::ISelector::*)(::System::Action*)>(&Oculus::Interaction::ISelector::add_WhenUnselected)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::ISelector*), "add_WhenUnselected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::ISelector::remove_WhenUnselected
// Il2CppName: remove_WhenUnselected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::ISelector::*)(::System::Action*)>(&Oculus::Interaction::ISelector::remove_WhenUnselected)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::ISelector*), "remove_WhenUnselected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
