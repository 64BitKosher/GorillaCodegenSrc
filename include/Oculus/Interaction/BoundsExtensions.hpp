// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Bounds
  struct Bounds;
}
// Completed forward declares
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Forward declaring type: BoundsExtensions
  class BoundsExtensions;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::BoundsExtensions);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::BoundsExtensions*, "Oculus.Interaction", "BoundsExtensions");
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.BoundsExtensions
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class BoundsExtensions : public ::Il2CppObject {
    public:
    // static public System.Boolean Clip(UnityEngine.Bounds bounds, in UnityEngine.Bounds clipper, out UnityEngine.Bounds result)
    // Offset: 0x47DB2E8
    static bool Clip(::UnityEngine::Bounds bounds, ByRef<::UnityEngine::Bounds> clipper, ByRef<::UnityEngine::Bounds> result);
  }; // Oculus.Interaction.BoundsExtensions
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::BoundsExtensions::Clip
// Il2CppName: Clip
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::Bounds, ByRef<::UnityEngine::Bounds>, ByRef<::UnityEngine::Bounds>)>(&Oculus::Interaction::BoundsExtensions::Clip)> {
  static const MethodInfo* get() {
    static auto* bounds = &::il2cpp_utils::GetClassFromName("UnityEngine", "Bounds")->byval_arg;
    static auto* clipper = &::il2cpp_utils::GetClassFromName("UnityEngine", "Bounds")->this_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("UnityEngine", "Bounds")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::BoundsExtensions*), "Clip", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bounds, clipper, result});
  }
};
