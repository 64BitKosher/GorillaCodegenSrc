// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.IPointable
#include "Oculus/Interaction/IPointable.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Interaction
namespace Oculus::Interaction {
  // Skipping declaration: PointerEvent because it is already included!
}
// Completed forward declares
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Forward declaring type: IPointableElement
  class IPointableElement;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::IPointableElement);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::IPointableElement*, "Oculus.Interaction", "IPointableElement");
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.IPointableElement
  // [TokenAttribute] Offset: FFFFFFFF
  class IPointableElement/*, public ::Oculus::Interaction::IPointable*/ {
    public:
    // Creating interface conversion operator: operator ::Oculus::Interaction::IPointable
    operator ::Oculus::Interaction::IPointable() noexcept {
      return *reinterpret_cast<::Oculus::Interaction::IPointable*>(this);
    }
    // public System.Void ProcessPointerEvent(Oculus.Interaction.PointerEvent evt)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ProcessPointerEvent(::Oculus::Interaction::PointerEvent evt);
  }; // Oculus.Interaction.IPointableElement
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::IPointableElement::ProcessPointerEvent
// Il2CppName: ProcessPointerEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::IPointableElement::*)(::Oculus::Interaction::PointerEvent)>(&Oculus::Interaction::IPointableElement::ProcessPointerEvent)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("Oculus.Interaction", "PointerEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::IPointableElement*), "ProcessPointerEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
