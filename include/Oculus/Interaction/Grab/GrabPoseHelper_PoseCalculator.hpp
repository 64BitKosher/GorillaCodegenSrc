// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.Grab.GrabPoseHelper
#include "Oculus/Interaction/Grab/GrabPoseHelper.hpp"
// Including type: System.MulticastDelegate
#include "System/MulticastDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Pose
  struct Pose;
  // Forward declaring type: Transform
  class Transform;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IAsyncResult
  class IAsyncResult;
  // Forward declaring type: AsyncCallback
  class AsyncCallback;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::Grab::GrabPoseHelper::PoseCalculator);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::Grab::GrabPoseHelper::PoseCalculator*, "Oculus.Interaction.Grab", "GrabPoseHelper/PoseCalculator");
// Type namespace: Oculus.Interaction.Grab
namespace Oculus::Interaction::Grab {
  // Size: 0x80
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.Grab.GrabPoseHelper/PoseCalculator
  // [TokenAttribute] Offset: FFFFFFFF
  class GrabPoseHelper::PoseCalculator : public ::System::MulticastDelegate {
    public:
    // public System.Void .ctor(System.Object object, System.IntPtr method)
    // Offset: 0x483077C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GrabPoseHelper::PoseCalculator* New_ctor(::Il2CppObject* object, ::System::IntPtr method) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Grab::GrabPoseHelper::PoseCalculator::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GrabPoseHelper::PoseCalculator*, creationType>(object, method)));
    }
    // public UnityEngine.Pose Invoke(in UnityEngine.Pose desiredPose, UnityEngine.Transform relativeTo)
    // Offset: 0x4830830
    ::UnityEngine::Pose Invoke(ByRef<::UnityEngine::Pose> desiredPose, ::UnityEngine::Transform* relativeTo);
    // public System.IAsyncResult BeginInvoke(in UnityEngine.Pose desiredPose, UnityEngine.Transform relativeTo, System.AsyncCallback callback, System.Object object)
    // Offset: 0x4830844
    ::System::IAsyncResult* BeginInvoke(ByRef<::UnityEngine::Pose> desiredPose, ::UnityEngine::Transform* relativeTo, ::System::AsyncCallback* callback, ::Il2CppObject* object);
    // public UnityEngine.Pose EndInvoke(in UnityEngine.Pose desiredPose, System.IAsyncResult result)
    // Offset: 0x48308D4
    ::UnityEngine::Pose EndInvoke(ByRef<::UnityEngine::Pose> desiredPose, ::System::IAsyncResult* result);
  }; // Oculus.Interaction.Grab.GrabPoseHelper/PoseCalculator
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::Grab::GrabPoseHelper::PoseCalculator::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Oculus::Interaction::Grab::GrabPoseHelper::PoseCalculator::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Pose (Oculus::Interaction::Grab::GrabPoseHelper::PoseCalculator::*)(ByRef<::UnityEngine::Pose>, ::UnityEngine::Transform*)>(&Oculus::Interaction::Grab::GrabPoseHelper::PoseCalculator::Invoke)> {
  static const MethodInfo* get() {
    static auto* desiredPose = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->this_arg;
    static auto* relativeTo = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Grab::GrabPoseHelper::PoseCalculator*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{desiredPose, relativeTo});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Grab::GrabPoseHelper::PoseCalculator::BeginInvoke
// Il2CppName: BeginInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IAsyncResult* (Oculus::Interaction::Grab::GrabPoseHelper::PoseCalculator::*)(ByRef<::UnityEngine::Pose>, ::UnityEngine::Transform*, ::System::AsyncCallback*, ::Il2CppObject*)>(&Oculus::Interaction::Grab::GrabPoseHelper::PoseCalculator::BeginInvoke)> {
  static const MethodInfo* get() {
    static auto* desiredPose = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->this_arg;
    static auto* relativeTo = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* callback = &::il2cpp_utils::GetClassFromName("System", "AsyncCallback")->byval_arg;
    static auto* object = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Grab::GrabPoseHelper::PoseCalculator*), "BeginInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{desiredPose, relativeTo, callback, object});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Grab::GrabPoseHelper::PoseCalculator::EndInvoke
// Il2CppName: EndInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Pose (Oculus::Interaction::Grab::GrabPoseHelper::PoseCalculator::*)(ByRef<::UnityEngine::Pose>, ::System::IAsyncResult*)>(&Oculus::Interaction::Grab::GrabPoseHelper::PoseCalculator::EndInvoke)> {
  static const MethodInfo* get() {
    static auto* desiredPose = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->this_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "IAsyncResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Grab::GrabPoseHelper::PoseCalculator*), "EndInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{desiredPose, result});
  }
};
