// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
}
// Completed forward declares
// Type namespace: Oculus.Interaction.Grab.GrabSurfaces
namespace Oculus::Interaction::Grab::GrabSurfaces {
  // Forward declaring type: BezierControlPoint
  struct BezierControlPoint;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::Grab::GrabSurfaces::BezierControlPoint, "Oculus.Interaction.Grab.GrabSurfaces", "BezierControlPoint");
// Type namespace: Oculus.Interaction.Grab.GrabSurfaces
namespace Oculus::Interaction::Grab::GrabSurfaces {
  // Size: 0x29
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: Oculus.Interaction.Grab.GrabSurfaces.BezierControlPoint
  // [TokenAttribute] Offset: FFFFFFFF
  struct BezierControlPoint/*, public ::System::ValueType*/ {
    public:
    public:
    // private UnityEngine.Pose _pose
    // Size: 0x1C
    // Offset: 0x0
    ::UnityEngine::Pose pose;
    // Field size check
    static_assert(sizeof(::UnityEngine::Pose) == 0x1C);
    // private UnityEngine.Vector3 _tangentPoint
    // Size: 0xC
    // Offset: 0x1C
    ::UnityEngine::Vector3 tangentPoint;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private System.Boolean _disconnected
    // Size: 0x1
    // Offset: 0x28
    bool disconnected;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating value type constructor for type: BezierControlPoint
    constexpr BezierControlPoint(::UnityEngine::Pose pose_ = {}, ::UnityEngine::Vector3 tangentPoint_ = {}, bool disconnected_ = {}) noexcept : pose{pose_}, tangentPoint{tangentPoint_}, disconnected{disconnected_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: private UnityEngine.Pose _pose
    [[deprecated("Use field access instead!")]] ::UnityEngine::Pose& dyn__pose();
    // Get instance field reference: private UnityEngine.Vector3 _tangentPoint
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn__tangentPoint();
    // Get instance field reference: private System.Boolean _disconnected
    [[deprecated("Use field access instead!")]] bool& dyn__disconnected();
    // public System.Boolean get_Disconnected()
    // Offset: 0x4832DE4
    bool get_Disconnected();
    // public System.Void set_Disconnected(System.Boolean value)
    // Offset: 0x4832DEC
    void set_Disconnected(bool value);
    // public UnityEngine.Pose GetPose(UnityEngine.Transform relativeTo)
    // Offset: 0x4831210
    ::UnityEngine::Pose GetPose(::UnityEngine::Transform* relativeTo);
    // public System.Void SetPose(in UnityEngine.Pose worldSpacePose, UnityEngine.Transform relativeTo)
    // Offset: 0x4832B5C
    void SetPose(ByRef<::UnityEngine::Pose> worldSpacePose, ::UnityEngine::Transform* relativeTo);
    // public UnityEngine.Vector3 GetTangent(UnityEngine.Transform relativeTo)
    // Offset: 0x4831268
    ::UnityEngine::Vector3 GetTangent(::UnityEngine::Transform* relativeTo);
    // public System.Void SetTangent(in UnityEngine.Vector3 tangent, UnityEngine.Transform relativeTo)
    // Offset: 0x4832DF8
    void SetTangent(ByRef<::UnityEngine::Vector3> tangent, ::UnityEngine::Transform* relativeTo);
  }; // Oculus.Interaction.Grab.GrabSurfaces.BezierControlPoint
  #pragma pack(pop)
  static check_size<sizeof(BezierControlPoint), 40 + sizeof(bool)> __Oculus_Interaction_Grab_GrabSurfaces_BezierControlPointSizeCheck;
  static_assert(sizeof(BezierControlPoint) == 0x29);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::Grab::GrabSurfaces::BezierControlPoint::get_Disconnected
// Il2CppName: get_Disconnected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Interaction::Grab::GrabSurfaces::BezierControlPoint::*)()>(&Oculus::Interaction::Grab::GrabSurfaces::BezierControlPoint::get_Disconnected)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Grab::GrabSurfaces::BezierControlPoint), "get_Disconnected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Grab::GrabSurfaces::BezierControlPoint::set_Disconnected
// Il2CppName: set_Disconnected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Grab::GrabSurfaces::BezierControlPoint::*)(bool)>(&Oculus::Interaction::Grab::GrabSurfaces::BezierControlPoint::set_Disconnected)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Grab::GrabSurfaces::BezierControlPoint), "set_Disconnected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Grab::GrabSurfaces::BezierControlPoint::GetPose
// Il2CppName: GetPose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Pose (Oculus::Interaction::Grab::GrabSurfaces::BezierControlPoint::*)(::UnityEngine::Transform*)>(&Oculus::Interaction::Grab::GrabSurfaces::BezierControlPoint::GetPose)> {
  static const MethodInfo* get() {
    static auto* relativeTo = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Grab::GrabSurfaces::BezierControlPoint), "GetPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{relativeTo});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Grab::GrabSurfaces::BezierControlPoint::SetPose
// Il2CppName: SetPose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Grab::GrabSurfaces::BezierControlPoint::*)(ByRef<::UnityEngine::Pose>, ::UnityEngine::Transform*)>(&Oculus::Interaction::Grab::GrabSurfaces::BezierControlPoint::SetPose)> {
  static const MethodInfo* get() {
    static auto* worldSpacePose = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->this_arg;
    static auto* relativeTo = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Grab::GrabSurfaces::BezierControlPoint), "SetPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{worldSpacePose, relativeTo});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Grab::GrabSurfaces::BezierControlPoint::GetTangent
// Il2CppName: GetTangent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (Oculus::Interaction::Grab::GrabSurfaces::BezierControlPoint::*)(::UnityEngine::Transform*)>(&Oculus::Interaction::Grab::GrabSurfaces::BezierControlPoint::GetTangent)> {
  static const MethodInfo* get() {
    static auto* relativeTo = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Grab::GrabSurfaces::BezierControlPoint), "GetTangent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{relativeTo});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Grab::GrabSurfaces::BezierControlPoint::SetTangent
// Il2CppName: SetTangent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Interaction::Grab::GrabSurfaces::BezierControlPoint::*)(ByRef<::UnityEngine::Vector3>, ::UnityEngine::Transform*)>(&Oculus::Interaction::Grab::GrabSurfaces::BezierControlPoint::SetTangent)> {
  static const MethodInfo* get() {
    static auto* tangent = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    static auto* relativeTo = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Grab::GrabSurfaces::BezierControlPoint), "SetTangent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tangent, relativeTo});
  }
};
