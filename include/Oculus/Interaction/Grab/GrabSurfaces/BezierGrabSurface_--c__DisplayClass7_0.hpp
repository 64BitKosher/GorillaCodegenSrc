// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Oculus.Interaction.Grab.GrabSurfaces.BezierGrabSurface
#include "Oculus/Interaction/Grab/GrabSurfaces/BezierGrabSurface.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::Grab::GrabSurfaces::BezierGrabSurface::$$c__DisplayClass7_0);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::Grab::GrabSurfaces::BezierGrabSurface::$$c__DisplayClass7_0*, "Oculus.Interaction.Grab.GrabSurfaces", "BezierGrabSurface/<>c__DisplayClass7_0");
// Type namespace: Oculus.Interaction.Grab.GrabSurfaces
namespace Oculus::Interaction::Grab::GrabSurfaces {
  // Size: 0x5C
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.Grab.GrabSurfaces.BezierGrabSurface/<>c__DisplayClass7_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class BezierGrabSurface::$$c__DisplayClass7_0 : public ::Il2CppObject {
    public:
    public:
    // public UnityEngine.Pose start
    // Size: 0x1C
    // Offset: 0x10
    ::UnityEngine::Pose start;
    // Field size check
    static_assert(sizeof(::UnityEngine::Pose) == 0x1C);
    // public UnityEngine.Vector3 tangent
    // Size: 0xC
    // Offset: 0x2C
    ::UnityEngine::Vector3 tangent;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // public UnityEngine.Pose end
    // Size: 0x1C
    // Offset: 0x38
    ::UnityEngine::Pose end;
    // Field size check
    static_assert(sizeof(::UnityEngine::Pose) == 0x1C);
    // public System.Single positionT
    // Size: 0x4
    // Offset: 0x54
    float positionT;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Single rotationT
    // Size: 0x4
    // Offset: 0x58
    float rotationT;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Get instance field reference: public UnityEngine.Pose start
    [[deprecated("Use field access instead!")]] ::UnityEngine::Pose& dyn_start();
    // Get instance field reference: public UnityEngine.Vector3 tangent
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_tangent();
    // Get instance field reference: public UnityEngine.Pose end
    [[deprecated("Use field access instead!")]] ::UnityEngine::Pose& dyn_end();
    // Get instance field reference: public System.Single positionT
    [[deprecated("Use field access instead!")]] float& dyn_positionT();
    // Get instance field reference: public System.Single rotationT
    [[deprecated("Use field access instead!")]] float& dyn_rotationT();
    // public System.Void .ctor()
    // Offset: 0x4831260
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BezierGrabSurface::$$c__DisplayClass7_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Grab::GrabSurfaces::BezierGrabSurface::$$c__DisplayClass7_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BezierGrabSurface::$$c__DisplayClass7_0*, creationType>()));
    }
    // UnityEngine.Pose <CalculateBestPoseAtSurface>b__0(in UnityEngine.Pose target, UnityEngine.Transform relativeTo)
    // Offset: 0x4832CAC
    ::UnityEngine::Pose $CalculateBestPoseAtSurface$b__0(ByRef<::UnityEngine::Pose> target, ::UnityEngine::Transform* relativeTo);
    // UnityEngine.Pose <CalculateBestPoseAtSurface>b__1(in UnityEngine.Pose target, UnityEngine.Transform relativeTo)
    // Offset: 0x4832D48
    ::UnityEngine::Pose $CalculateBestPoseAtSurface$b__1(ByRef<::UnityEngine::Pose> target, ::UnityEngine::Transform* relativeTo);
  }; // Oculus.Interaction.Grab.GrabSurfaces.BezierGrabSurface/<>c__DisplayClass7_0
  #pragma pack(pop)
  static check_size<sizeof(BezierGrabSurface::$$c__DisplayClass7_0), 88 + sizeof(float)> __Oculus_Interaction_Grab_GrabSurfaces_BezierGrabSurface_$$c__DisplayClass7_0SizeCheck;
  static_assert(sizeof(BezierGrabSurface::$$c__DisplayClass7_0) == 0x5C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::Grab::GrabSurfaces::BezierGrabSurface::$$c__DisplayClass7_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Oculus::Interaction::Grab::GrabSurfaces::BezierGrabSurface::$$c__DisplayClass7_0::$CalculateBestPoseAtSurface$b__0
// Il2CppName: <CalculateBestPoseAtSurface>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Pose (Oculus::Interaction::Grab::GrabSurfaces::BezierGrabSurface::$$c__DisplayClass7_0::*)(ByRef<::UnityEngine::Pose>, ::UnityEngine::Transform*)>(&Oculus::Interaction::Grab::GrabSurfaces::BezierGrabSurface::$$c__DisplayClass7_0::$CalculateBestPoseAtSurface$b__0)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->this_arg;
    static auto* relativeTo = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Grab::GrabSurfaces::BezierGrabSurface::$$c__DisplayClass7_0*), "<CalculateBestPoseAtSurface>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, relativeTo});
  }
};
// Writing MetadataGetter for method: Oculus::Interaction::Grab::GrabSurfaces::BezierGrabSurface::$$c__DisplayClass7_0::$CalculateBestPoseAtSurface$b__1
// Il2CppName: <CalculateBestPoseAtSurface>b__1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Pose (Oculus::Interaction::Grab::GrabSurfaces::BezierGrabSurface::$$c__DisplayClass7_0::*)(ByRef<::UnityEngine::Pose>, ::UnityEngine::Transform*)>(&Oculus::Interaction::Grab::GrabSurfaces::BezierGrabSurface::$$c__DisplayClass7_0::$CalculateBestPoseAtSurface$b__1)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Pose")->this_arg;
    static auto* relativeTo = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Interaction::Grab::GrabSurfaces::BezierGrabSurface::$$c__DisplayClass7_0*), "<CalculateBestPoseAtSurface>b__1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, relativeTo});
  }
};
