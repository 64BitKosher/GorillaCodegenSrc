// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Forward declaring type: FloatConstraint
  class FloatConstraint;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Interaction::FloatConstraint);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Interaction::FloatConstraint*, "Oculus.Interaction", "FloatConstraint");
// Type namespace: Oculus.Interaction
namespace Oculus::Interaction {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Interaction.FloatConstraint
  // [TokenAttribute] Offset: FFFFFFFF
  class FloatConstraint : public ::Il2CppObject {
    public:
    public:
    // public System.Boolean Constrain
    // Size: 0x1
    // Offset: 0x10
    bool Constrain;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: Constrain and: Value
    char __padding0[0x3] = {};
    // public System.Single Value
    // Size: 0x4
    // Offset: 0x14
    float Value;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Get instance field reference: public System.Boolean Constrain
    [[deprecated("Use field access instead!")]] bool& dyn_Constrain();
    // Get instance field reference: public System.Single Value
    [[deprecated("Use field access instead!")]] float& dyn_Value();
    // public System.Void .ctor()
    // Offset: 0x478A604
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static FloatConstraint* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FloatConstraint::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<FloatConstraint*, creationType>()));
    }
  }; // Oculus.Interaction.FloatConstraint
  #pragma pack(pop)
  static check_size<sizeof(FloatConstraint), 20 + sizeof(float)> __Oculus_Interaction_FloatConstraintSizeCheck;
  static_assert(sizeof(FloatConstraint) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Interaction::FloatConstraint::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
