// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Fusion.NetworkAreaOfInterestBehaviour
#include "Fusion/NetworkAreaOfInterestBehaviour.hpp"
// Including type: Fusion.IBeforeUpdate
#include "Fusion/IBeforeUpdate.hpp"
// Including type: Fusion.IBeforeAllTicks
#include "Fusion/IBeforeAllTicks.hpp"
// Including type: Fusion.IAfterAllTicks
#include "Fusion/IAfterAllTicks.hpp"
// Including type: Fusion.IRemotePrefabCreated
#include "Fusion/IRemotePrefabCreated.hpp"
// Including type: Fusion.IBeforeCopyPreviousState
#include "Fusion/IBeforeCopyPreviousState.hpp"
// Including type: Fusion.IAfterHostMigration
#include "Fusion/IAfterHostMigration.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Fusion
namespace Fusion {
  // Forward declaring type: ReadAccuracy
  struct ReadAccuracy;
  // Forward declaring type: WriteAccuracy
  struct WriteAccuracy;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
  // Skipping declaration: Vector3 because it is already included!
}
// Completed forward declares
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: NetworkPosition
  class NetworkPosition;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::NetworkPosition);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::NetworkPosition*, "Fusion", "NetworkPosition");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x91
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.NetworkPosition
  // [TokenAttribute] Offset: FFFFFFFF
  // [OrderAfterAttribute] Offset: FFFFFFFF
  // [DisallowMultipleComponent] Offset: FFFFFFFF
  // [NetworkBehaviourWeavedAttribute] Offset: FFFFFFFF
  class NetworkPosition : public ::Fusion::NetworkAreaOfInterestBehaviour/*, public ::Fusion::IBeforeUpdate, public ::Fusion::IBeforeAllTicks, public ::Fusion::IAfterAllTicks, public ::Fusion::IRemotePrefabCreated, public ::Fusion::IBeforeCopyPreviousState, public ::Fusion::IAfterHostMigration*/ {
    public:
    // Nested type: ::Fusion::NetworkPosition::EncodedPosition
    struct EncodedPosition;
    public:
    // private System.Boolean _copiedFromBufferToEngineThisUpdate
    // Size: 0x1
    // Offset: 0x78
    bool copiedFromBufferToEngineThisUpdate;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: copiedFromBufferToEngineThisUpdate and: Transform
    char __padding0[0x7] = {};
    // private UnityEngine.Transform <Transform>k__BackingField
    // Size: 0x8
    // Offset: 0x80
    ::UnityEngine::Transform* Transform;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // protected Fusion.NetworkPosition parentNP
    // Size: 0x8
    // Offset: 0x88
    ::Fusion::NetworkPosition* parentNP;
    // Field size check
    static_assert(sizeof(::Fusion::NetworkPosition*) == 0x8);
    // private System.Boolean lookedForParentNP
    // Size: 0x1
    // Offset: 0x90
    bool lookedForParentNP;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating interface conversion operator: operator ::Fusion::IBeforeUpdate
    operator ::Fusion::IBeforeUpdate() noexcept {
      return *reinterpret_cast<::Fusion::IBeforeUpdate*>(this);
    }
    // Creating interface conversion operator: operator ::Fusion::IBeforeAllTicks
    operator ::Fusion::IBeforeAllTicks() noexcept {
      return *reinterpret_cast<::Fusion::IBeforeAllTicks*>(this);
    }
    // Creating interface conversion operator: operator ::Fusion::IAfterAllTicks
    operator ::Fusion::IAfterAllTicks() noexcept {
      return *reinterpret_cast<::Fusion::IAfterAllTicks*>(this);
    }
    // Creating interface conversion operator: operator ::Fusion::IRemotePrefabCreated
    operator ::Fusion::IRemotePrefabCreated() noexcept {
      return *reinterpret_cast<::Fusion::IRemotePrefabCreated*>(this);
    }
    // Creating interface conversion operator: operator ::Fusion::IBeforeCopyPreviousState
    operator ::Fusion::IBeforeCopyPreviousState() noexcept {
      return *reinterpret_cast<::Fusion::IBeforeCopyPreviousState*>(this);
    }
    // Creating interface conversion operator: operator ::Fusion::IAfterHostMigration
    operator ::Fusion::IAfterHostMigration() noexcept {
      return *reinterpret_cast<::Fusion::IAfterHostMigration*>(this);
    }
    // static field const value: static private System.Int32 WORD_COUNT_POSITION
    static constexpr const int WORD_COUNT_POSITION = 3;
    // Get static field: static private System.Int32 WORD_COUNT_POSITION
    static int _get_WORD_COUNT_POSITION();
    // Set static field: static private System.Int32 WORD_COUNT_POSITION
    static void _set_WORD_COUNT_POSITION(int value);
    // static field const value: static private System.Int32 OFFSET_BASE
    static constexpr const int OFFSET_BASE = 0;
    // Get static field: static private System.Int32 OFFSET_BASE
    static int _get_OFFSET_BASE();
    // Set static field: static private System.Int32 OFFSET_BASE
    static void _set_OFFSET_BASE(int value);
    // static field const value: static private System.Int32 OFFSET_POSITION
    static constexpr const int OFFSET_POSITION = 0;
    // Get static field: static private System.Int32 OFFSET_POSITION
    static int _get_OFFSET_POSITION();
    // Set static field: static private System.Int32 OFFSET_POSITION
    static void _set_OFFSET_POSITION(int value);
    // static field const value: static protected System.Int32 WORD_COUNT_NPOS
    static constexpr const int WORD_COUNT_NPOS = 3;
    // Get static field: static protected System.Int32 WORD_COUNT_NPOS
    static int _get_WORD_COUNT_NPOS();
    // Set static field: static protected System.Int32 WORD_COUNT_NPOS
    static void _set_WORD_COUNT_NPOS(int value);
    // Get instance field reference: private System.Boolean _copiedFromBufferToEngineThisUpdate
    [[deprecated("Use field access instead!")]] bool& dyn__copiedFromBufferToEngineThisUpdate();
    // Get instance field reference: private UnityEngine.Transform <Transform>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_$Transform$k__BackingField();
    // Get instance field reference: protected Fusion.NetworkPosition parentNP
    [[deprecated("Use field access instead!")]] ::Fusion::NetworkPosition*& dyn_parentNP();
    // Get instance field reference: private System.Boolean lookedForParentNP
    [[deprecated("Use field access instead!")]] bool& dyn_lookedForParentNP();
    // public UnityEngine.Transform get_Transform()
    // Offset: 0x2B1B4FC
    ::UnityEngine::Transform* get_Transform();
    // private System.Void set_Transform(UnityEngine.Transform value)
    // Offset: 0x2B1B504
    void set_Transform(::UnityEngine::Transform* value);
    // protected System.Void Awake()
    // Offset: 0x2B1B50C
    void Awake();
    // protected System.Void OnEnable()
    // Offset: 0x2B1B5A8
    void OnEnable();
    // public System.Void BeforeUpdate()
    // Offset: 0x2B1B654
    void BeforeUpdate();
    // public System.Void BeforeAllTicks(System.Boolean resimulation, System.Int32 tickCount)
    // Offset: 0x2B1B65C
    void BeforeAllTicks(bool resimulation, int tickCount);
    // public System.Void AfterAllTicks(System.Boolean resimulation, System.Int32 tickCount)
    // Offset: 0x2B1B7D4
    void AfterAllTicks(bool resimulation, int tickCount);
    // public System.Void RemotePrefabCreated()
    // Offset: 0x2B1B7E4
    void RemotePrefabCreated();
    // public System.Void BeforeCopyPreviousState()
    // Offset: 0x2B1B884
    void BeforeCopyPreviousState();
    // protected System.Void CopyFromBufferToEngine()
    // Offset: 0x2B1B934
    void CopyFromBufferToEngine();
    // protected System.Void CopyFromEngineToBuffer()
    // Offset: 0x2B1B994
    void CopyFromEngineToBuffer();
    // protected UnityEngine.Vector3 GetEnginePosition()
    // Offset: 0x2B1BA58
    ::UnityEngine::Vector3 GetEnginePosition();
    // protected System.Void SetEnginePosition(UnityEngine.Vector3 pos)
    // Offset: 0x2B1BA74
    void SetEnginePosition(::UnityEngine::Vector3 pos);
    // public System.Void AfterHostMigration()
    // Offset: 0x2B1BA90
    void AfterHostMigration();
    // protected System.Int32 get_BaseWordCount()
    // Offset: 0x2B1BAA0
    int get_BaseWordCount();
    // public UnityEngine.Vector3 ReadPosition()
    // Offset: 0x2B1BAB0
    ::UnityEngine::Vector3 ReadPosition();
    // public UnityEngine.Vector3 ReadPosition(System.Int32* ptr)
    // Offset: 0x2B1BB04
    ::UnityEngine::Vector3 ReadPosition(int* ptr);
    // static public UnityEngine.Vector3 ReadPosition(System.Int32* ptr, Fusion.ReadAccuracy readAccuracy)
    // Offset: 0x2B1BB54
    static ::UnityEngine::Vector3 ReadPosition(int* ptr, ::Fusion::ReadAccuracy readAccuracy);
    // public System.Void WritePosition(UnityEngine.Vector3 position)
    // Offset: 0x2B1BB90
    void WritePosition(::UnityEngine::Vector3 position);
    // public System.Void WritePosition(UnityEngine.Vector3 position, System.Int32* ptr)
    // Offset: 0x2B1BC40
    void WritePosition(::UnityEngine::Vector3 position, int* ptr);
    // static public System.Void WritePosition(UnityEngine.Vector3 position, System.Int32* ptr, Fusion.WriteAccuracy writeAccuracy)
    // Offset: 0x2B1BCEC
    static void WritePosition(::UnityEngine::Vector3 position, int* ptr, ::Fusion::WriteAccuracy writeAccuracy);
    // Fusion.NetworkPosition/EncodedPosition* ReadEncodedPosition()
    // Offset: 0x2B1BD80
    ::Fusion::NetworkPosition::EncodedPosition* ReadEncodedPosition();
    // public override System.Void Spawned()
    // Offset: 0x2B1B5AC
    // Implemented from: Fusion.NetworkBehaviour
    // Base method: System.Void NetworkBehaviour::Spawned()
    void Spawned();
    // public override System.Void CopyBackingFieldsToState(System.Boolean firstTime)
    // Offset: 0x2B1B894
    // Implemented from: Fusion.NetworkBehaviour
    // Base method: System.Void NetworkBehaviour::CopyBackingFieldsToState(System.Boolean firstTime)
    void CopyBackingFieldsToState(bool firstTime);
    // public override System.Int32 get_PositionWordOffset()
    // Offset: 0x2B1BAA8
    // Implemented from: Fusion.NetworkAreaOfInterestBehaviour
    // Base method: System.Int32 NetworkAreaOfInterestBehaviour::get_PositionWordOffset()
    int get_PositionWordOffset();
    // public System.Void .ctor()
    // Offset: 0x2B1BD88
    // Implemented from: Fusion.NetworkAreaOfInterestBehaviour
    // Base method: System.Void NetworkAreaOfInterestBehaviour::.ctor()
    // Base method: System.Void NetworkBehaviour::.ctor()
    // Base method: System.Void SimulationBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NetworkPosition* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkPosition::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NetworkPosition*, creationType>()));
    }
  }; // Fusion.NetworkPosition
  #pragma pack(pop)
  static check_size<sizeof(NetworkPosition), 144 + sizeof(bool)> __Fusion_NetworkPositionSizeCheck;
  static_assert(sizeof(NetworkPosition) == 0x91);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::NetworkPosition::get_Transform
// Il2CppName: get_Transform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (Fusion::NetworkPosition::*)()>(&Fusion::NetworkPosition::get_Transform)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkPosition*), "get_Transform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkPosition::set_Transform
// Il2CppName: set_Transform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkPosition::*)(::UnityEngine::Transform*)>(&Fusion::NetworkPosition::set_Transform)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkPosition*), "set_Transform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkPosition::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkPosition::*)()>(&Fusion::NetworkPosition::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkPosition*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkPosition::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkPosition::*)()>(&Fusion::NetworkPosition::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkPosition*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkPosition::BeforeUpdate
// Il2CppName: BeforeUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkPosition::*)()>(&Fusion::NetworkPosition::BeforeUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkPosition*), "BeforeUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkPosition::BeforeAllTicks
// Il2CppName: BeforeAllTicks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkPosition::*)(bool, int)>(&Fusion::NetworkPosition::BeforeAllTicks)> {
  static const MethodInfo* get() {
    static auto* resimulation = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* tickCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkPosition*), "BeforeAllTicks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{resimulation, tickCount});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkPosition::AfterAllTicks
// Il2CppName: AfterAllTicks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkPosition::*)(bool, int)>(&Fusion::NetworkPosition::AfterAllTicks)> {
  static const MethodInfo* get() {
    static auto* resimulation = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* tickCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkPosition*), "AfterAllTicks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{resimulation, tickCount});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkPosition::RemotePrefabCreated
// Il2CppName: RemotePrefabCreated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkPosition::*)()>(&Fusion::NetworkPosition::RemotePrefabCreated)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkPosition*), "RemotePrefabCreated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkPosition::BeforeCopyPreviousState
// Il2CppName: BeforeCopyPreviousState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkPosition::*)()>(&Fusion::NetworkPosition::BeforeCopyPreviousState)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkPosition*), "BeforeCopyPreviousState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkPosition::CopyFromBufferToEngine
// Il2CppName: CopyFromBufferToEngine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkPosition::*)()>(&Fusion::NetworkPosition::CopyFromBufferToEngine)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkPosition*), "CopyFromBufferToEngine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkPosition::CopyFromEngineToBuffer
// Il2CppName: CopyFromEngineToBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkPosition::*)()>(&Fusion::NetworkPosition::CopyFromEngineToBuffer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkPosition*), "CopyFromEngineToBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkPosition::GetEnginePosition
// Il2CppName: GetEnginePosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (Fusion::NetworkPosition::*)()>(&Fusion::NetworkPosition::GetEnginePosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkPosition*), "GetEnginePosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkPosition::SetEnginePosition
// Il2CppName: SetEnginePosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkPosition::*)(::UnityEngine::Vector3)>(&Fusion::NetworkPosition::SetEnginePosition)> {
  static const MethodInfo* get() {
    static auto* pos = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkPosition*), "SetEnginePosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pos});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkPosition::AfterHostMigration
// Il2CppName: AfterHostMigration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkPosition::*)()>(&Fusion::NetworkPosition::AfterHostMigration)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkPosition*), "AfterHostMigration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkPosition::get_BaseWordCount
// Il2CppName: get_BaseWordCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Fusion::NetworkPosition::*)()>(&Fusion::NetworkPosition::get_BaseWordCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkPosition*), "get_BaseWordCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkPosition::ReadPosition
// Il2CppName: ReadPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (Fusion::NetworkPosition::*)()>(&Fusion::NetworkPosition::ReadPosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkPosition*), "ReadPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkPosition::ReadPosition
// Il2CppName: ReadPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (Fusion::NetworkPosition::*)(int*)>(&Fusion::NetworkPosition::ReadPosition)> {
  static const MethodInfo* get() {
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkPosition*), "ReadPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ptr});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkPosition::ReadPosition
// Il2CppName: ReadPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (*)(int*, ::Fusion::ReadAccuracy)>(&Fusion::NetworkPosition::ReadPosition)> {
  static const MethodInfo* get() {
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* readAccuracy = &::il2cpp_utils::GetClassFromName("Fusion", "ReadAccuracy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkPosition*), "ReadPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ptr, readAccuracy});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkPosition::WritePosition
// Il2CppName: WritePosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkPosition::*)(::UnityEngine::Vector3)>(&Fusion::NetworkPosition::WritePosition)> {
  static const MethodInfo* get() {
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkPosition*), "WritePosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{position});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkPosition::WritePosition
// Il2CppName: WritePosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkPosition::*)(::UnityEngine::Vector3, int*)>(&Fusion::NetworkPosition::WritePosition)> {
  static const MethodInfo* get() {
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkPosition*), "WritePosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{position, ptr});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkPosition::WritePosition
// Il2CppName: WritePosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Vector3, int*, ::Fusion::WriteAccuracy)>(&Fusion::NetworkPosition::WritePosition)> {
  static const MethodInfo* get() {
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* writeAccuracy = &::il2cpp_utils::GetClassFromName("Fusion", "WriteAccuracy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkPosition*), "WritePosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{position, ptr, writeAccuracy});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkPosition::ReadEncodedPosition
// Il2CppName: ReadEncodedPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::NetworkPosition::EncodedPosition* (Fusion::NetworkPosition::*)()>(&Fusion::NetworkPosition::ReadEncodedPosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkPosition*), "ReadEncodedPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkPosition::Spawned
// Il2CppName: Spawned
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkPosition::*)()>(&Fusion::NetworkPosition::Spawned)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkPosition*), "Spawned", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkPosition::CopyBackingFieldsToState
// Il2CppName: CopyBackingFieldsToState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkPosition::*)(bool)>(&Fusion::NetworkPosition::CopyBackingFieldsToState)> {
  static const MethodInfo* get() {
    static auto* firstTime = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkPosition*), "CopyBackingFieldsToState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{firstTime});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkPosition::get_PositionWordOffset
// Il2CppName: get_PositionWordOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Fusion::NetworkPosition::*)()>(&Fusion::NetworkPosition::get_PositionWordOffset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkPosition*), "get_PositionWordOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkPosition::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
