// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
}
// Completed forward declares
// Type namespace: Fusion.StatsInternal
namespace Fusion::StatsInternal {
  // Forward declaring type: IFusionStatsView
  class IFusionStatsView;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::StatsInternal::IFusionStatsView);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::StatsInternal::IFusionStatsView*, "Fusion.StatsInternal", "IFusionStatsView");
// Type namespace: Fusion.StatsInternal
namespace Fusion::StatsInternal {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.StatsInternal.IFusionStatsView
  // [TokenAttribute] Offset: FFFFFFFF
  class IFusionStatsView {
    public:
    // public System.Void Initialize()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Initialize();
    // public System.Void CalculateLayout()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void CalculateLayout();
    // public System.Void Refresh()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Refresh();
    // public System.Boolean get_isActiveAndEnabled()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_isActiveAndEnabled();
    // public UnityEngine.Transform get_transform()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::Transform* get_transform();
  }; // Fusion.StatsInternal.IFusionStatsView
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::StatsInternal::IFusionStatsView::Initialize
// Il2CppName: Initialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::StatsInternal::IFusionStatsView::*)()>(&Fusion::StatsInternal::IFusionStatsView::Initialize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::StatsInternal::IFusionStatsView*), "Initialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::StatsInternal::IFusionStatsView::CalculateLayout
// Il2CppName: CalculateLayout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::StatsInternal::IFusionStatsView::*)()>(&Fusion::StatsInternal::IFusionStatsView::CalculateLayout)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::StatsInternal::IFusionStatsView*), "CalculateLayout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::StatsInternal::IFusionStatsView::Refresh
// Il2CppName: Refresh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::StatsInternal::IFusionStatsView::*)()>(&Fusion::StatsInternal::IFusionStatsView::Refresh)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::StatsInternal::IFusionStatsView*), "Refresh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::StatsInternal::IFusionStatsView::get_isActiveAndEnabled
// Il2CppName: get_isActiveAndEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::StatsInternal::IFusionStatsView::*)()>(&Fusion::StatsInternal::IFusionStatsView::get_isActiveAndEnabled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::StatsInternal::IFusionStatsView*), "get_isActiveAndEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::StatsInternal::IFusionStatsView::get_transform
// Il2CppName: get_transform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (Fusion::StatsInternal::IFusionStatsView::*)()>(&Fusion::StatsInternal::IFusionStatsView::get_transform)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::StatsInternal::IFusionStatsView*), "get_transform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
