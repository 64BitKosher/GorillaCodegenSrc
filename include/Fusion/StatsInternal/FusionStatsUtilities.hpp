// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: System.Single
#include "System/Single.hpp"
// Including type: Fusion.SimulationModes
#include "Fusion/SimulationModes.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Texture2D
  class Texture2D;
  // Forward declaring type: Sprite
  class Sprite;
  // Forward declaring type: RectTransform
  class RectTransform;
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: TextAnchor
  struct TextAnchor;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: FusionStats
  class FusionStats;
}
// Forward declaring namespace: Fusion
namespace Fusion {
  // Forward declaring type: NetworkRunner
  class NetworkRunner;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Nullable`1<T>
  template<typename T>
  struct Nullable_1;
}
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Dropdown
  class Dropdown;
  // Forward declaring type: Text
  class Text;
  // Forward declaring type: Button
  class Button;
  // Forward declaring type: GridLayoutGroup
  class GridLayoutGroup;
  // Forward declaring type: Image
  class Image;
}
// Forward declaring namespace: UnityEngine::Events
namespace UnityEngine::Events {
  // Forward declaring type: UnityAction
  class UnityAction;
}
// Completed forward declares
// Type namespace: Fusion.StatsInternal
namespace Fusion::StatsInternal {
  // Forward declaring type: FusionStatsUtilities
  class FusionStatsUtilities;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::StatsInternal::FusionStatsUtilities);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::StatsInternal::FusionStatsUtilities*, "Fusion.StatsInternal", "FusionStatsUtilities");
// Type namespace: Fusion.StatsInternal
namespace Fusion::StatsInternal {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.StatsInternal.FusionStatsUtilities
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class FusionStatsUtilities : public ::Il2CppObject {
    public:
    // static field const value: static public System.Int32 PAD
    static constexpr const int PAD = 10;
    // Get static field: static public System.Int32 PAD
    static int _get_PAD();
    // Set static field: static public System.Int32 PAD
    static void _set_PAD(int value);
    // static field const value: static public System.Int32 MARGIN
    static constexpr const int MARGIN = 6;
    // Get static field: static public System.Int32 MARGIN
    static int _get_MARGIN();
    // Set static field: static public System.Int32 MARGIN
    static void _set_MARGIN(int value);
    // static field const value: static public System.Int32 FONT_SIZE
    static constexpr const int FONT_SIZE = 12;
    // Get static field: static public System.Int32 FONT_SIZE
    static int _get_FONT_SIZE();
    // Set static field: static public System.Int32 FONT_SIZE
    static void _set_FONT_SIZE(int value);
    // static field const value: static public System.Int32 FONT_SIZE_MIN
    static constexpr const int FONT_SIZE_MIN = 4;
    // Get static field: static public System.Int32 FONT_SIZE_MIN
    static int _get_FONT_SIZE_MIN();
    // Set static field: static public System.Int32 FONT_SIZE_MIN
    static void _set_FONT_SIZE_MIN(int value);
    // static field const value: static public System.Int32 FONT_SIZE_MAX
    static constexpr const int FONT_SIZE_MAX = 200;
    // Get static field: static public System.Int32 FONT_SIZE_MAX
    static int _get_FONT_SIZE_MAX();
    // Set static field: static public System.Int32 FONT_SIZE_MAX
    static void _set_FONT_SIZE_MAX(int value);
    // Get static field: static private System.Collections.Generic.List`1<System.String> _cachedGraphVisualizationNames
    static ::System::Collections::Generic::List_1<::StringW>* _get__cachedGraphVisualizationNames();
    // Set static field: static private System.Collections.Generic.List`1<System.String> _cachedGraphVisualizationNames
    static void _set__cachedGraphVisualizationNames(::System::Collections::Generic::List_1<::StringW>* value);
    // static field const value: static private System.Int32 METER_TEXTURE_WIDTH
    static constexpr const int METER_TEXTURE_WIDTH = 512;
    // Get static field: static private System.Int32 METER_TEXTURE_WIDTH
    static int _get_METER_TEXTURE_WIDTH();
    // Set static field: static private System.Int32 METER_TEXTURE_WIDTH
    static void _set_METER_TEXTURE_WIDTH(int value);
    // Get static field: static private UnityEngine.Texture2D _meterTexture
    static ::UnityEngine::Texture2D* _get__meterTexture();
    // Set static field: static private UnityEngine.Texture2D _meterTexture
    static void _set__meterTexture(::UnityEngine::Texture2D* value);
    // Get static field: static private UnityEngine.Sprite _meterSprite
    static ::UnityEngine::Sprite* _get__meterSprite();
    // Set static field: static private UnityEngine.Sprite _meterSprite
    static void _set__meterSprite(::UnityEngine::Sprite* value);
    // static field const value: static private System.Int32 R
    static constexpr const int R = 64;
    // Get static field: static private System.Int32 R
    static int _get_R();
    // Set static field: static private System.Int32 R
    static void _set_R(int value);
    // Get static field: static private UnityEngine.Texture2D _circle32Texture
    static ::UnityEngine::Texture2D* _get__circle32Texture();
    // Set static field: static private UnityEngine.Texture2D _circle32Texture
    static void _set__circle32Texture(::UnityEngine::Texture2D* value);
    // Get static field: static private UnityEngine.Sprite _circle32Sprite
    static ::UnityEngine::Sprite* _get__circle32Sprite();
    // Set static field: static private UnityEngine.Sprite _circle32Sprite
    static void _set__circle32Sprite(::UnityEngine::Sprite* value);
    // Get static field: static public UnityEngine.Color DARK_GREEN
    static ::UnityEngine::Color _get_DARK_GREEN();
    // Set static field: static public UnityEngine.Color DARK_GREEN
    static void _set_DARK_GREEN(::UnityEngine::Color value);
    // Get static field: static public UnityEngine.Color DARK_BLUE
    static ::UnityEngine::Color _get_DARK_BLUE();
    // Set static field: static public UnityEngine.Color DARK_BLUE
    static void _set_DARK_BLUE(::UnityEngine::Color value);
    // Get static field: static public UnityEngine.Color DARK_RED
    static ::UnityEngine::Color _get_DARK_RED();
    // Set static field: static public UnityEngine.Color DARK_RED
    static void _set_DARK_RED(::UnityEngine::Color value);
    // static field const value: static public System.Single BTTN_LBL_NORM_HGHT
    static constexpr const float BTTN_LBL_NORM_HGHT = 0.175;
    // Get static field: static public System.Single BTTN_LBL_NORM_HGHT
    static float _get_BTTN_LBL_NORM_HGHT();
    // Set static field: static public System.Single BTTN_LBL_NORM_HGHT
    static void _set_BTTN_LBL_NORM_HGHT(float value);
    // static field const value: static private System.Int32 BTTN_FONT_SIZE_MAX
    static constexpr const int BTTN_FONT_SIZE_MAX = 100;
    // Get static field: static private System.Int32 BTTN_FONT_SIZE_MAX
    static int _get_BTTN_FONT_SIZE_MAX();
    // Set static field: static private System.Int32 BTTN_FONT_SIZE_MAX
    static void _set_BTTN_FONT_SIZE_MAX(int value);
    // static field const value: static private System.Single BTTN_ALPHA
    static constexpr const float BTTN_ALPHA = 0.925;
    // Get static field: static private System.Single BTTN_ALPHA
    static float _get_BTTN_ALPHA();
    // Set static field: static private System.Single BTTN_ALPHA
    static void _set_BTTN_ALPHA(float value);
    // static field const value: static private System.Single GUIDE_MARGIN
    static constexpr const float GUIDE_MARGIN = 0.01;
    // Get static field: static private System.Single GUIDE_MARGIN
    static float _get_GUIDE_MARGIN();
    // Set static field: static private System.Single GUIDE_MARGIN
    static void _set_GUIDE_MARGIN(float value);
    // static field const value: static private System.Single GUIDE_MARGIN_HALF
    static constexpr const float GUIDE_MARGIN_HALF = 0.005;
    // Get static field: static private System.Single GUIDE_MARGIN_HALF
    static float _get_GUIDE_MARGIN_HALF();
    // Set static field: static private System.Single GUIDE_MARGIN_HALF
    static void _set_GUIDE_MARGIN_HALF(float value);
    // static public System.Collections.Generic.List`1<System.String> get_CachedTelemetryNames()
    // Offset: 0x281B900
    static ::System::Collections::Generic::List_1<::StringW>* get_CachedTelemetryNames();
    // static private UnityEngine.Texture2D get_MeterTexture()
    // Offset: 0x281BD1C
    static ::UnityEngine::Texture2D* get_MeterTexture();
    // static public UnityEngine.Sprite get_MeterSprite()
    // Offset: 0x281BEB0
    static ::UnityEngine::Sprite* get_MeterSprite();
    // static private UnityEngine.Texture2D get_Circle32Texture()
    // Offset: 0x281BFB0
    static ::UnityEngine::Texture2D* get_Circle32Texture();
    // static public UnityEngine.Sprite get_CircleSprite()
    // Offset: 0x281C228
    static ::UnityEngine::Sprite* get_CircleSprite();
    // static public System.Boolean TryFindActiveRunner(FusionStats fusionStats, out Fusion.NetworkRunner runner, System.Nullable`1<Fusion.SimulationModes> mode)
    // Offset: 0x281C34C
    static bool TryFindActiveRunner(::GlobalNamespace::FusionStats* fusionStats, ByRef<::Fusion::NetworkRunner*> runner, ::System::Nullable_1<::Fusion::SimulationModes> mode);
    // static public UnityEngine.RectTransform CreateRectTransform(UnityEngine.Transform parent, System.String name, System.Boolean expand)
    // Offset: 0x281C548
    static ::UnityEngine::RectTransform* CreateRectTransform(::UnityEngine::Transform* parent, ::StringW name, bool expand);
    // static UnityEngine.RectTransform CreateRectTransform(System.String name, UnityEngine.Transform parent, System.Boolean expand)
    // Offset: 0x281C7A8
    static ::UnityEngine::RectTransform* CreateRectTransform(::StringW name, ::UnityEngine::Transform* parent, bool expand);
    // static public UnityEngine.UI.Dropdown CreateDropdown(UnityEngine.RectTransform rt, System.Single padding, UnityEngine.Color fontColor)
    // Offset: 0x281C8CC
    static ::UnityEngine::UI::Dropdown* CreateDropdown(::UnityEngine::RectTransform* rt, float padding, ::UnityEngine::Color fontColor);
    // static public UnityEngine.UI.Text AddText(UnityEngine.RectTransform rt, System.String label, UnityEngine.TextAnchor anchor, UnityEngine.Color FontColor)
    // Offset: 0x281CFEC
    static ::UnityEngine::UI::Text* AddText(::UnityEngine::RectTransform* rt, ::StringW label, ::UnityEngine::TextAnchor anchor, ::UnityEngine::Color FontColor);
    // static System.Void MakeButton(UnityEngine.RectTransform parent, ref UnityEngine.UI.Button button, System.String iconText, System.String labelText, out UnityEngine.UI.Text icon, out UnityEngine.UI.Text text, UnityEngine.Events.UnityAction action)
    // Offset: 0x281D128
    static void MakeButton(::UnityEngine::RectTransform* parent, ByRef<::UnityEngine::UI::Button*> button, ::StringW iconText, ::StringW labelText, ByRef<::UnityEngine::UI::Text*> icon, ByRef<::UnityEngine::UI::Text*> text, ::UnityEngine::Events::UnityAction* action);
    // static public UnityEngine.RectTransform AddHorizontalLayoutGroup(UnityEngine.RectTransform rt, System.Single spacing, System.Nullable`1<System.Int32> rgtPad, System.Nullable`1<System.Int32> lftPad, System.Nullable`1<System.Int32> topPad, System.Nullable`1<System.Int32> botPad)
    // Offset: 0x281D56C
    static ::UnityEngine::RectTransform* AddHorizontalLayoutGroup(::UnityEngine::RectTransform* rt, float spacing, ::System::Nullable_1<int> rgtPad, ::System::Nullable_1<int> lftPad, ::System::Nullable_1<int> topPad, ::System::Nullable_1<int> botPad);
    // static public UnityEngine.RectTransform AddVerticalLayoutGroup(UnityEngine.RectTransform rt, System.Single spacing, System.Nullable`1<System.Int32> rgtPad, System.Nullable`1<System.Int32> lftPad, System.Nullable`1<System.Int32> topPad, System.Nullable`1<System.Int32> botPad)
    // Offset: 0x281D728
    static ::UnityEngine::RectTransform* AddVerticalLayoutGroup(::UnityEngine::RectTransform* rt, float spacing, ::System::Nullable_1<int> rgtPad, ::System::Nullable_1<int> lftPad, ::System::Nullable_1<int> topPad, ::System::Nullable_1<int> botPad);
    // static public UnityEngine.UI.GridLayoutGroup AddGridlLayoutGroup(UnityEngine.RectTransform rt, System.Single spacing, System.Nullable`1<System.Int32> rgtPad, System.Nullable`1<System.Int32> lftPad, System.Nullable`1<System.Int32> topPad, System.Nullable`1<System.Int32> botPad)
    // Offset: 0x281D7CC
    static ::UnityEngine::UI::GridLayoutGroup* AddGridlLayoutGroup(::UnityEngine::RectTransform* rt, float spacing, ::System::Nullable_1<int> rgtPad, ::System::Nullable_1<int> lftPad, ::System::Nullable_1<int> topPad, ::System::Nullable_1<int> botPad);
    // static public UnityEngine.RectTransform AddImage(UnityEngine.RectTransform rt, UnityEngine.Color color)
    // Offset: 0x281D854
    static ::UnityEngine::RectTransform* AddImage(::UnityEngine::RectTransform* rt, ::UnityEngine::Color color);
    // static public UnityEngine.RectTransform AddCircleSprite(UnityEngine.RectTransform rt, UnityEngine.Color color)
    // Offset: 0x281D918
    static ::UnityEngine::RectTransform* AddCircleSprite(::UnityEngine::RectTransform* rt, ::UnityEngine::Color color);
    // static public UnityEngine.RectTransform AddCircleSprite(UnityEngine.RectTransform rt, UnityEngine.Color color, out UnityEngine.UI.Image image)
    // Offset: 0x281D9B0
    static ::UnityEngine::RectTransform* AddCircleSprite(::UnityEngine::RectTransform* rt, ::UnityEngine::Color color, ByRef<::UnityEngine::UI::Image*> image);
    // static public UnityEngine.RectTransform ExpandAnchor(UnityEngine.RectTransform rt, System.Nullable`1<System.Single> padding)
    // Offset: 0x281C66C
    static ::UnityEngine::RectTransform* ExpandAnchor(::UnityEngine::RectTransform* rt, ::System::Nullable_1<float> padding);
    // static public UnityEngine.RectTransform ExpandTopAnchor(UnityEngine.RectTransform rt, System.Nullable`1<System.Single> padding)
    // Offset: 0x281CDD0
    static ::UnityEngine::RectTransform* ExpandTopAnchor(::UnityEngine::RectTransform* rt, ::System::Nullable_1<float> padding);
    // static public UnityEngine.RectTransform ExpandMiddleLeft(UnityEngine.RectTransform rt)
    // Offset: 0x281DAF8
    static ::UnityEngine::RectTransform* ExpandMiddleLeft(::UnityEngine::RectTransform* rt);
    // static public UnityEngine.RectTransform SetSizeDelta(UnityEngine.RectTransform rt, System.Single offsetX, System.Single offsetY)
    // Offset: 0x281CFC8
    static ::UnityEngine::RectTransform* SetSizeDelta(::UnityEngine::RectTransform* rt, float offsetX, float offsetY);
    // static public UnityEngine.RectTransform SetOffsets(UnityEngine.RectTransform rt, System.Single minX, System.Single maxX, System.Single minY, System.Single maxY)
    // Offset: 0x281CF0C
    static ::UnityEngine::RectTransform* SetOffsets(::UnityEngine::RectTransform* rt, float minX, float maxX, float minY, float maxY);
    // static public UnityEngine.RectTransform SetPivot(UnityEngine.RectTransform rt, System.Single pivotX, System.Single pivotY)
    // Offset: 0x281CFA4
    static ::UnityEngine::RectTransform* SetPivot(::UnityEngine::RectTransform* rt, float pivotX, float pivotY);
    // static public UnityEngine.RectTransform SetAnchors(UnityEngine.RectTransform rt, System.Single minX, System.Single maxX, System.Single minY, System.Single maxY)
    // Offset: 0x281CF58
    static ::UnityEngine::RectTransform* SetAnchors(::UnityEngine::RectTransform* rt, float minX, float maxX, float minY, float maxY);
    // static UnityEngine.RectTransform MakeGuides(UnityEngine.RectTransform parent)
    // Offset: 0x281DB4C
    static ::UnityEngine::RectTransform* MakeGuides(::UnityEngine::RectTransform* parent);
    // static private System.Void .cctor()
    // Offset: 0x281DF40
    static void _cctor();
  }; // Fusion.StatsInternal.FusionStatsUtilities
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::StatsInternal::FusionStatsUtilities::get_CachedTelemetryNames
// Il2CppName: get_CachedTelemetryNames
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::StringW>* (*)()>(&Fusion::StatsInternal::FusionStatsUtilities::get_CachedTelemetryNames)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::StatsInternal::FusionStatsUtilities*), "get_CachedTelemetryNames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::StatsInternal::FusionStatsUtilities::get_MeterTexture
// Il2CppName: get_MeterTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Texture2D* (*)()>(&Fusion::StatsInternal::FusionStatsUtilities::get_MeterTexture)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::StatsInternal::FusionStatsUtilities*), "get_MeterTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::StatsInternal::FusionStatsUtilities::get_MeterSprite
// Il2CppName: get_MeterSprite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Sprite* (*)()>(&Fusion::StatsInternal::FusionStatsUtilities::get_MeterSprite)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::StatsInternal::FusionStatsUtilities*), "get_MeterSprite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::StatsInternal::FusionStatsUtilities::get_Circle32Texture
// Il2CppName: get_Circle32Texture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Texture2D* (*)()>(&Fusion::StatsInternal::FusionStatsUtilities::get_Circle32Texture)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::StatsInternal::FusionStatsUtilities*), "get_Circle32Texture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::StatsInternal::FusionStatsUtilities::get_CircleSprite
// Il2CppName: get_CircleSprite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Sprite* (*)()>(&Fusion::StatsInternal::FusionStatsUtilities::get_CircleSprite)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::StatsInternal::FusionStatsUtilities*), "get_CircleSprite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::StatsInternal::FusionStatsUtilities::TryFindActiveRunner
// Il2CppName: TryFindActiveRunner
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::FusionStats*, ByRef<::Fusion::NetworkRunner*>, ::System::Nullable_1<::Fusion::SimulationModes>)>(&Fusion::StatsInternal::FusionStatsUtilities::TryFindActiveRunner)> {
  static const MethodInfo* get() {
    static auto* fusionStats = &::il2cpp_utils::GetClassFromName("", "FusionStats")->byval_arg;
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->this_arg;
    static auto* mode = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Fusion", "SimulationModes")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::StatsInternal::FusionStatsUtilities*), "TryFindActiveRunner", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fusionStats, runner, mode});
  }
};
// Writing MetadataGetter for method: Fusion::StatsInternal::FusionStatsUtilities::CreateRectTransform
// Il2CppName: CreateRectTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::RectTransform* (*)(::UnityEngine::Transform*, ::StringW, bool)>(&Fusion::StatsInternal::FusionStatsUtilities::CreateRectTransform)> {
  static const MethodInfo* get() {
    static auto* parent = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* expand = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::StatsInternal::FusionStatsUtilities*), "CreateRectTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parent, name, expand});
  }
};
// Writing MetadataGetter for method: Fusion::StatsInternal::FusionStatsUtilities::CreateRectTransform
// Il2CppName: CreateRectTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::RectTransform* (*)(::StringW, ::UnityEngine::Transform*, bool)>(&Fusion::StatsInternal::FusionStatsUtilities::CreateRectTransform)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* parent = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* expand = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::StatsInternal::FusionStatsUtilities*), "CreateRectTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, parent, expand});
  }
};
// Writing MetadataGetter for method: Fusion::StatsInternal::FusionStatsUtilities::CreateDropdown
// Il2CppName: CreateDropdown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UI::Dropdown* (*)(::UnityEngine::RectTransform*, float, ::UnityEngine::Color)>(&Fusion::StatsInternal::FusionStatsUtilities::CreateDropdown)> {
  static const MethodInfo* get() {
    static auto* rt = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    static auto* padding = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* fontColor = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::StatsInternal::FusionStatsUtilities*), "CreateDropdown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rt, padding, fontColor});
  }
};
// Writing MetadataGetter for method: Fusion::StatsInternal::FusionStatsUtilities::AddText
// Il2CppName: AddText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UI::Text* (*)(::UnityEngine::RectTransform*, ::StringW, ::UnityEngine::TextAnchor, ::UnityEngine::Color)>(&Fusion::StatsInternal::FusionStatsUtilities::AddText)> {
  static const MethodInfo* get() {
    static auto* rt = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    static auto* label = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* anchor = &::il2cpp_utils::GetClassFromName("UnityEngine", "TextAnchor")->byval_arg;
    static auto* FontColor = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::StatsInternal::FusionStatsUtilities*), "AddText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rt, label, anchor, FontColor});
  }
};
// Writing MetadataGetter for method: Fusion::StatsInternal::FusionStatsUtilities::MakeButton
// Il2CppName: MakeButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::RectTransform*, ByRef<::UnityEngine::UI::Button*>, ::StringW, ::StringW, ByRef<::UnityEngine::UI::Text*>, ByRef<::UnityEngine::UI::Text*>, ::UnityEngine::Events::UnityAction*)>(&Fusion::StatsInternal::FusionStatsUtilities::MakeButton)> {
  static const MethodInfo* get() {
    static auto* parent = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    static auto* button = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "Button")->this_arg;
    static auto* iconText = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* labelText = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* icon = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "Text")->this_arg;
    static auto* text = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "Text")->this_arg;
    static auto* action = &::il2cpp_utils::GetClassFromName("UnityEngine.Events", "UnityAction")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::StatsInternal::FusionStatsUtilities*), "MakeButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parent, button, iconText, labelText, icon, text, action});
  }
};
// Writing MetadataGetter for method: Fusion::StatsInternal::FusionStatsUtilities::AddHorizontalLayoutGroup
// Il2CppName: AddHorizontalLayoutGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::RectTransform* (*)(::UnityEngine::RectTransform*, float, ::System::Nullable_1<int>, ::System::Nullable_1<int>, ::System::Nullable_1<int>, ::System::Nullable_1<int>)>(&Fusion::StatsInternal::FusionStatsUtilities::AddHorizontalLayoutGroup)> {
  static const MethodInfo* get() {
    static auto* rt = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    static auto* spacing = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* rgtPad = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    static auto* lftPad = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    static auto* topPad = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    static auto* botPad = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::StatsInternal::FusionStatsUtilities*), "AddHorizontalLayoutGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rt, spacing, rgtPad, lftPad, topPad, botPad});
  }
};
// Writing MetadataGetter for method: Fusion::StatsInternal::FusionStatsUtilities::AddVerticalLayoutGroup
// Il2CppName: AddVerticalLayoutGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::RectTransform* (*)(::UnityEngine::RectTransform*, float, ::System::Nullable_1<int>, ::System::Nullable_1<int>, ::System::Nullable_1<int>, ::System::Nullable_1<int>)>(&Fusion::StatsInternal::FusionStatsUtilities::AddVerticalLayoutGroup)> {
  static const MethodInfo* get() {
    static auto* rt = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    static auto* spacing = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* rgtPad = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    static auto* lftPad = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    static auto* topPad = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    static auto* botPad = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::StatsInternal::FusionStatsUtilities*), "AddVerticalLayoutGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rt, spacing, rgtPad, lftPad, topPad, botPad});
  }
};
// Writing MetadataGetter for method: Fusion::StatsInternal::FusionStatsUtilities::AddGridlLayoutGroup
// Il2CppName: AddGridlLayoutGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UI::GridLayoutGroup* (*)(::UnityEngine::RectTransform*, float, ::System::Nullable_1<int>, ::System::Nullable_1<int>, ::System::Nullable_1<int>, ::System::Nullable_1<int>)>(&Fusion::StatsInternal::FusionStatsUtilities::AddGridlLayoutGroup)> {
  static const MethodInfo* get() {
    static auto* rt = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    static auto* spacing = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* rgtPad = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    static auto* lftPad = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    static auto* topPad = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    static auto* botPad = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::StatsInternal::FusionStatsUtilities*), "AddGridlLayoutGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rt, spacing, rgtPad, lftPad, topPad, botPad});
  }
};
// Writing MetadataGetter for method: Fusion::StatsInternal::FusionStatsUtilities::AddImage
// Il2CppName: AddImage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::RectTransform* (*)(::UnityEngine::RectTransform*, ::UnityEngine::Color)>(&Fusion::StatsInternal::FusionStatsUtilities::AddImage)> {
  static const MethodInfo* get() {
    static auto* rt = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    static auto* color = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::StatsInternal::FusionStatsUtilities*), "AddImage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rt, color});
  }
};
// Writing MetadataGetter for method: Fusion::StatsInternal::FusionStatsUtilities::AddCircleSprite
// Il2CppName: AddCircleSprite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::RectTransform* (*)(::UnityEngine::RectTransform*, ::UnityEngine::Color)>(&Fusion::StatsInternal::FusionStatsUtilities::AddCircleSprite)> {
  static const MethodInfo* get() {
    static auto* rt = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    static auto* color = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::StatsInternal::FusionStatsUtilities*), "AddCircleSprite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rt, color});
  }
};
// Writing MetadataGetter for method: Fusion::StatsInternal::FusionStatsUtilities::AddCircleSprite
// Il2CppName: AddCircleSprite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::RectTransform* (*)(::UnityEngine::RectTransform*, ::UnityEngine::Color, ByRef<::UnityEngine::UI::Image*>)>(&Fusion::StatsInternal::FusionStatsUtilities::AddCircleSprite)> {
  static const MethodInfo* get() {
    static auto* rt = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    static auto* color = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    static auto* image = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "Image")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::StatsInternal::FusionStatsUtilities*), "AddCircleSprite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rt, color, image});
  }
};
// Writing MetadataGetter for method: Fusion::StatsInternal::FusionStatsUtilities::ExpandAnchor
// Il2CppName: ExpandAnchor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::RectTransform* (*)(::UnityEngine::RectTransform*, ::System::Nullable_1<float>)>(&Fusion::StatsInternal::FusionStatsUtilities::ExpandAnchor)> {
  static const MethodInfo* get() {
    static auto* rt = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    static auto* padding = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::StatsInternal::FusionStatsUtilities*), "ExpandAnchor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rt, padding});
  }
};
// Writing MetadataGetter for method: Fusion::StatsInternal::FusionStatsUtilities::ExpandTopAnchor
// Il2CppName: ExpandTopAnchor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::RectTransform* (*)(::UnityEngine::RectTransform*, ::System::Nullable_1<float>)>(&Fusion::StatsInternal::FusionStatsUtilities::ExpandTopAnchor)> {
  static const MethodInfo* get() {
    static auto* rt = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    static auto* padding = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::StatsInternal::FusionStatsUtilities*), "ExpandTopAnchor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rt, padding});
  }
};
// Writing MetadataGetter for method: Fusion::StatsInternal::FusionStatsUtilities::ExpandMiddleLeft
// Il2CppName: ExpandMiddleLeft
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::RectTransform* (*)(::UnityEngine::RectTransform*)>(&Fusion::StatsInternal::FusionStatsUtilities::ExpandMiddleLeft)> {
  static const MethodInfo* get() {
    static auto* rt = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::StatsInternal::FusionStatsUtilities*), "ExpandMiddleLeft", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rt});
  }
};
// Writing MetadataGetter for method: Fusion::StatsInternal::FusionStatsUtilities::SetSizeDelta
// Il2CppName: SetSizeDelta
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::RectTransform* (*)(::UnityEngine::RectTransform*, float, float)>(&Fusion::StatsInternal::FusionStatsUtilities::SetSizeDelta)> {
  static const MethodInfo* get() {
    static auto* rt = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    static auto* offsetX = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* offsetY = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::StatsInternal::FusionStatsUtilities*), "SetSizeDelta", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rt, offsetX, offsetY});
  }
};
// Writing MetadataGetter for method: Fusion::StatsInternal::FusionStatsUtilities::SetOffsets
// Il2CppName: SetOffsets
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::RectTransform* (*)(::UnityEngine::RectTransform*, float, float, float, float)>(&Fusion::StatsInternal::FusionStatsUtilities::SetOffsets)> {
  static const MethodInfo* get() {
    static auto* rt = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    static auto* minX = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* maxX = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* minY = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* maxY = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::StatsInternal::FusionStatsUtilities*), "SetOffsets", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rt, minX, maxX, minY, maxY});
  }
};
// Writing MetadataGetter for method: Fusion::StatsInternal::FusionStatsUtilities::SetPivot
// Il2CppName: SetPivot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::RectTransform* (*)(::UnityEngine::RectTransform*, float, float)>(&Fusion::StatsInternal::FusionStatsUtilities::SetPivot)> {
  static const MethodInfo* get() {
    static auto* rt = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    static auto* pivotX = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* pivotY = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::StatsInternal::FusionStatsUtilities*), "SetPivot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rt, pivotX, pivotY});
  }
};
// Writing MetadataGetter for method: Fusion::StatsInternal::FusionStatsUtilities::SetAnchors
// Il2CppName: SetAnchors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::RectTransform* (*)(::UnityEngine::RectTransform*, float, float, float, float)>(&Fusion::StatsInternal::FusionStatsUtilities::SetAnchors)> {
  static const MethodInfo* get() {
    static auto* rt = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    static auto* minX = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* maxX = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* minY = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* maxY = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::StatsInternal::FusionStatsUtilities*), "SetAnchors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rt, minX, maxX, minY, maxY});
  }
};
// Writing MetadataGetter for method: Fusion::StatsInternal::FusionStatsUtilities::MakeGuides
// Il2CppName: MakeGuides
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::RectTransform* (*)(::UnityEngine::RectTransform*)>(&Fusion::StatsInternal::FusionStatsUtilities::MakeGuides)> {
  static const MethodInfo* get() {
    static auto* parent = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::StatsInternal::FusionStatsUtilities*), "MakeGuides", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parent});
  }
};
// Writing MetadataGetter for method: Fusion::StatsInternal::FusionStatsUtilities::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Fusion::StatsInternal::FusionStatsUtilities::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::StatsInternal::FusionStatsUtilities*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
