// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Fusion.NetworkTransformAnchor
#include "Fusion/NetworkTransformAnchor.hpp"
// Including type: Fusion.IAfterPhysicsStep
#include "Fusion/IAfterPhysicsStep.hpp"
// Including type: Fusion.IAfterTick
#include "Fusion/IAfterTick.hpp"
// Including type: Fusion.Spaces
#include "Fusion/Spaces.hpp"
// Including type: Fusion.Tick
#include "Fusion/Tick.hpp"
// Including type: System.ValueTuple`8
#include "System/ValueTuple_8.hpp"
// Including type: Fusion.Rotation
#include "Fusion/Rotation.hpp"
// Including type: System.ValueTuple`1
#include "System/ValueTuple_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Fusion
namespace Fusion {
  // Forward declaring type: InterpolatedErrorCorrectionSettings
  class InterpolatedErrorCorrectionSettings;
  // Forward declaring type: WriteAccuracy
  struct WriteAccuracy;
  // Forward declaring type: ReadAccuracy
  struct ReadAccuracy;
  // Forward declaring type: InterpolationData
  struct InterpolationData;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
}
// Completed forward declares
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: NetworkTransformObsolete
  class NetworkTransformObsolete;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::NetworkTransformObsolete);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::NetworkTransformObsolete*, "Fusion", "NetworkTransformObsolete");
// Type namespace: Fusion
namespace Fusion {
  // WARNING Size may be invalid!
  // Autogenerated type: Fusion.NetworkTransformObsolete
  // [TokenAttribute] Offset: FFFFFFFF
  // [DisallowMultipleComponent] Offset: FFFFFFFF
  // [OrderAfterAttribute] Offset: FFFFFFFF
  // [ObsoleteAttribute] Offset: FFFFFFFF
  // [NetworkBehaviourWeavedAttribute] Offset: FFFFFFFF
  class NetworkTransformObsolete : public ::Fusion::NetworkTransformAnchor/*, public ::Fusion::IAfterPhysicsStep, public ::Fusion::IAfterTick*/ {
    public:
    // Nested type: ::Fusion::NetworkTransformObsolete::UpdateTransformParameters
    struct UpdateTransformParameters;
    public:
    // public System.Boolean InterpolateErrorCorrection
    // Size: 0x1
    // Offset: 0x90
    bool InterpolateErrorCorrection;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public Fusion.InterpolatedErrorCorrectionSettings InterpolatedErrorCorrectionSettings
    // Size: 0x8
    // Offset: 0x98
    ::Fusion::InterpolatedErrorCorrectionSettings* InterpolatedErrorCorrectionSettings;
    // Field size check
    static_assert(sizeof(::Fusion::InterpolatedErrorCorrectionSettings*) == 0x8);
    // protected System.Boolean SyncScale
    // Size: 0x1
    // Offset: 0xA0
    bool SyncScale;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // protected Fusion.Spaces Space
    // Size: 0x4
    // Offset: 0xA4
    ::Fusion::Spaces Space;
    // Field size check
    static_assert(sizeof(::Fusion::Spaces) == 0x4);
    // protected System.Single LastInterpolatedAtTime
    // Size: 0x4
    // Offset: 0xA8
    float LastInterpolatedAtTime;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private Fusion.Tick _lastRenderToTick
    // Size: 0x4
    // Offset: 0xAC
    ::Fusion::Tick lastRenderToTick;
    // Field size check
    static_assert(sizeof(::Fusion::Tick) == 0x4);
    // private System.Boolean _lastRenderToTickResim
    // Size: 0x1
    // Offset: 0xB0
    bool lastRenderToTickResim;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private UnityEngine.Vector3 _lastRenderToPos
    // Size: 0xC
    // Offset: 0xB4
    ::UnityEngine::Vector3 lastRenderToPos;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.Quaternion _lastRenderToRot
    // Size: 0x10
    // Offset: 0xC0
    ::UnityEngine::Quaternion lastRenderToRot;
    // Field size check
    static_assert(sizeof(::UnityEngine::Quaternion) == 0x10);
    // private UnityEngine.Vector3 _accumulatedErrorPos
    // Size: 0xC
    // Offset: 0xD0
    ::UnityEngine::Vector3 accumulatedErrorPos;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.Quaternion _accumulatedErrorRot
    // Size: 0x10
    // Offset: 0xDC
    ::UnityEngine::Quaternion accumulatedErrorRot;
    // Field size check
    static_assert(sizeof(::UnityEngine::Quaternion) == 0x10);
    // protected System.Nullable`1<System.ValueTuple`8<System.Boolean,UnityEngine.Transform,System.Nullable`1<UnityEngine.Vector3>,System.Nullable`1<Fusion.Rotation>,System.Nullable`1<UnityEngine.Vector3>,System.Boolean,System.Nullable`1<UnityEngine.Vector3>,System.ValueTuple`1<System.Nullable`1<UnityEngine.Vector3>>>> _queuedTeleport
    // Size: 0xFFFFFFFF
    // Offset: 0xF0
    ::System::Nullable_1<::System::ValueTuple_8<bool, ::UnityEngine::Transform*, ::System::Nullable_1<::UnityEngine::Vector3>, ::System::Nullable_1<::Fusion::Rotation>, ::System::Nullable_1<::UnityEngine::Vector3>, bool, ::System::Nullable_1<::UnityEngine::Vector3>, ::System::ValueTuple_1<::System::Nullable_1<::UnityEngine::Vector3>>>> queuedTeleport;
    public:
    // Creating interface conversion operator: operator ::Fusion::IAfterPhysicsStep
    operator ::Fusion::IAfterPhysicsStep() noexcept {
      return *reinterpret_cast<::Fusion::IAfterPhysicsStep*>(this);
    }
    // Creating interface conversion operator: operator ::Fusion::IAfterTick
    operator ::Fusion::IAfterTick() noexcept {
      return *reinterpret_cast<::Fusion::IAfterTick*>(this);
    }
    // static field const value: static public System.Int32 POSITION_OFFSET
    static constexpr const int POSITION_OFFSET = 4;
    // Get static field: static public System.Int32 POSITION_OFFSET
    static int _get_POSITION_OFFSET();
    // Set static field: static public System.Int32 POSITION_OFFSET
    static void _set_POSITION_OFFSET(int value);
    // static field const value: static public System.Int32 ROTATION_OFFSET
    static constexpr const int ROTATION_OFFSET = 7;
    // Get static field: static public System.Int32 ROTATION_OFFSET
    static int _get_ROTATION_OFFSET();
    // Set static field: static public System.Int32 ROTATION_OFFSET
    static void _set_ROTATION_OFFSET(int value);
    // static field const value: static public System.Int32 SCALE_OFFSET
    static constexpr const int SCALE_OFFSET = 11;
    // Get static field: static public System.Int32 SCALE_OFFSET
    static int _get_SCALE_OFFSET();
    // Set static field: static public System.Int32 SCALE_OFFSET
    static void _set_SCALE_OFFSET(int value);
    // static field const value: static protected System.Int32 TELE_POS_OFFSET
    static constexpr const int TELE_POS_OFFSET = 14;
    // Get static field: static protected System.Int32 TELE_POS_OFFSET
    static int _get_TELE_POS_OFFSET();
    // Set static field: static protected System.Int32 TELE_POS_OFFSET
    static void _set_TELE_POS_OFFSET(int value);
    // static field const value: static protected System.Int32 TELE_ROT_OFFSET
    static constexpr const int TELE_ROT_OFFSET = 17;
    // Get static field: static protected System.Int32 TELE_ROT_OFFSET
    static int _get_TELE_ROT_OFFSET();
    // Set static field: static protected System.Int32 TELE_ROT_OFFSET
    static void _set_TELE_ROT_OFFSET(int value);
    // static field const value: static protected System.Int32 TELE_SCL_OFFSET
    static constexpr const int TELE_SCL_OFFSET = 21;
    // Get static field: static protected System.Int32 TELE_SCL_OFFSET
    static int _get_TELE_SCL_OFFSET();
    // Set static field: static protected System.Int32 TELE_SCL_OFFSET
    static void _set_TELE_SCL_OFFSET(int value);
    // static field const value: static protected System.Int32 TELEPORT_OFFSET
    static constexpr const int TELEPORT_OFFSET = 24;
    // Get static field: static protected System.Int32 TELEPORT_OFFSET
    static int _get_TELEPORT_OFFSET();
    // Set static field: static protected System.Int32 TELEPORT_OFFSET
    static void _set_TELEPORT_OFFSET(int value);
    // static field const value: static protected System.Int32 BASE_WORD_COUNT
    static constexpr const int BASE_WORD_COUNT = 25;
    // Get static field: static protected System.Int32 BASE_WORD_COUNT
    static int _get_BASE_WORD_COUNT();
    // Set static field: static protected System.Int32 BASE_WORD_COUNT
    static void _set_BASE_WORD_COUNT(int value);
    // Get instance field reference: public System.Boolean InterpolateErrorCorrection
    [[deprecated("Use field access instead!")]] bool& dyn_InterpolateErrorCorrection();
    // Get instance field reference: public Fusion.InterpolatedErrorCorrectionSettings InterpolatedErrorCorrectionSettings
    [[deprecated("Use field access instead!")]] ::Fusion::InterpolatedErrorCorrectionSettings*& dyn_InterpolatedErrorCorrectionSettings();
    // Get instance field reference: protected System.Boolean SyncScale
    [[deprecated("Use field access instead!")]] bool& dyn_SyncScale();
    // Get instance field reference: protected Fusion.Spaces Space
    [[deprecated("Use field access instead!")]] ::Fusion::Spaces& dyn_Space();
    // Get instance field reference: protected System.Single LastInterpolatedAtTime
    [[deprecated("Use field access instead!")]] float& dyn_LastInterpolatedAtTime();
    // Get instance field reference: private Fusion.Tick _lastRenderToTick
    [[deprecated("Use field access instead!")]] ::Fusion::Tick& dyn__lastRenderToTick();
    // Get instance field reference: private System.Boolean _lastRenderToTickResim
    [[deprecated("Use field access instead!")]] bool& dyn__lastRenderToTickResim();
    // Get instance field reference: private UnityEngine.Vector3 _lastRenderToPos
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn__lastRenderToPos();
    // Get instance field reference: private UnityEngine.Quaternion _lastRenderToRot
    [[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& dyn__lastRenderToRot();
    // Get instance field reference: private UnityEngine.Vector3 _accumulatedErrorPos
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn__accumulatedErrorPos();
    // Get instance field reference: private UnityEngine.Quaternion _accumulatedErrorRot
    [[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& dyn__accumulatedErrorRot();
    // Get instance field reference: protected System.Nullable`1<System.ValueTuple`8<System.Boolean,UnityEngine.Transform,System.Nullable`1<UnityEngine.Vector3>,System.Nullable`1<Fusion.Rotation>,System.Nullable`1<UnityEngine.Vector3>,System.Boolean,System.Nullable`1<UnityEngine.Vector3>,System.ValueTuple`1<System.Nullable`1<UnityEngine.Vector3>>>> _queuedTeleport
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<::System::ValueTuple_8<bool, ::UnityEngine::Transform*, ::System::Nullable_1<::UnityEngine::Vector3>, ::System::Nullable_1<::Fusion::Rotation>, ::System::Nullable_1<::UnityEngine::Vector3>, bool, ::System::Nullable_1<::UnityEngine::Vector3>, ::System::ValueTuple_1<::System::Nullable_1<::UnityEngine::Vector3>>>>& dyn__queuedTeleport();
    // protected System.Int32* get_TeleportCounter()
    // Offset: 0x2B28A44
    int* get_TeleportCounter();
    // protected System.Void Reset()
    // Offset: 0x2B28688
    void Reset();
    // private System.Void OnDestroy()
    // Offset: 0x2B2E9D0
    void OnDestroy();
    // public System.Void AfterTick()
    // Offset: 0x2B2EADC
    void AfterTick();
    // private UnityEngine.Vector3 WriteReadVector3(UnityEngine.Vector3 value, Fusion.WriteAccuracy writeAccuracy, Fusion.ReadAccuracy readAccuracy)
    // Offset: 0x2B2ECD8
    ::UnityEngine::Vector3 WriteReadVector3(::UnityEngine::Vector3 value, ::Fusion::WriteAccuracy writeAccuracy, ::Fusion::ReadAccuracy readAccuracy);
    // private UnityEngine.Quaternion WriteReadQuaternion(UnityEngine.Quaternion value, Fusion.WriteAccuracy writeAccuracy, Fusion.ReadAccuracy readAccuracy)
    // Offset: 0x2B2ED98
    ::UnityEngine::Quaternion WriteReadQuaternion(::UnityEngine::Quaternion value, ::Fusion::WriteAccuracy writeAccuracy, ::Fusion::ReadAccuracy readAccuracy);
    // protected System.Void GetEnginePositionRotation2Buffer(out UnityEngine.Vector3 pos, out UnityEngine.Quaternion rot)
    // Offset: 0x2B2EF38
    void GetEnginePositionRotation2Buffer(ByRef<::UnityEngine::Vector3> pos, ByRef<::UnityEngine::Quaternion> rot);
    // protected System.Void Copy2BufferTRSState(System.Int32 offset)
    // Offset: 0x2B2EFC8
    void Copy2BufferTRSState(int offset);
    // protected System.Void Copy2EngineTRSState(System.Int32 offset)
    // Offset: 0x2B2F234
    void Copy2EngineTRSState(int offset);
    // public System.Void Teleport(System.Nullable`1<UnityEngine.Vector3> position, System.Nullable`1<Fusion.Rotation> rotation, System.Nullable`1<UnityEngine.Vector3> localScale, System.Boolean reset, System.Nullable`1<UnityEngine.Vector3> velocity, System.Nullable`1<UnityEngine.Vector3> angularVelocity)
    // Offset: 0x2B2F3A4
    void Teleport(::System::Nullable_1<::UnityEngine::Vector3> position, ::System::Nullable_1<::Fusion::Rotation> rotation, ::System::Nullable_1<::UnityEngine::Vector3> localScale, bool reset, ::System::Nullable_1<::UnityEngine::Vector3> velocity, ::System::Nullable_1<::UnityEngine::Vector3> angularVelocity);
    // public System.Void Teleport(Fusion.NetworkTransformAnchor newParent, System.Nullable`1<UnityEngine.Vector3> position, System.Nullable`1<Fusion.Rotation> rotation, System.Nullable`1<UnityEngine.Vector3> localScale, System.Boolean reset, System.Nullable`1<UnityEngine.Vector3> velocity, System.Nullable`1<UnityEngine.Vector3> angularVelocity)
    // Offset: 0x2B2F530
    void Teleport(::Fusion::NetworkTransformAnchor* newParent, ::System::Nullable_1<::UnityEngine::Vector3> position, ::System::Nullable_1<::Fusion::Rotation> rotation, ::System::Nullable_1<::UnityEngine::Vector3> localScale, bool reset, ::System::Nullable_1<::UnityEngine::Vector3> velocity, ::System::Nullable_1<::UnityEngine::Vector3> angularVelocity);
    // public System.Void PreTeleport()
    // Offset: 0x2B2F6F4
    void PreTeleport();
    // private System.Void Fusion.IAfterPhysicsStep.AfterPhysicsStep()
    // Offset: 0x2B2F728
    void Fusion_IAfterPhysicsStep_AfterPhysicsStep();
    // protected System.Void ApplyQueuedTeleport()
    // Offset: 0x2B2F784
    void ApplyQueuedTeleport();
    // protected UnityEngine.Quaternion ReadRotationToQuaternion(System.Int32* offset, Fusion.ReadAccuracy readAccuracy)
    // Offset: 0x2B2FA60
    ::UnityEngine::Quaternion ReadRotationToQuaternion(int* offset, ::Fusion::ReadAccuracy readAccuracy);
    // protected System.Void InterpolateTransform(ref Fusion.InterpolationData data, System.Boolean isState)
    // Offset: 0x2B2AD54
    void InterpolateTransform(ByRef<::Fusion::InterpolationData> data, bool isState);
    // private System.Boolean ComputeInterpolatedTransform(ref Fusion.InterpolationData data, ref Fusion.NetworkTransformObsolete/UpdateTransformParameters param)
    // Offset: 0x2B2FAA4
    bool ComputeInterpolatedTransform(ByRef<::Fusion::InterpolationData> data, ByRef<::Fusion::NetworkTransformObsolete::UpdateTransformParameters> param);
    // private System.Void UpdateInterpolatedErrorCorrection(ref Fusion.NetworkTransformObsolete/UpdateTransformParameters param, Fusion.InterpolatedErrorCorrectionSettings settings)
    // Offset: 0x2B305D0
    void UpdateInterpolatedErrorCorrection(ByRef<::Fusion::NetworkTransformObsolete::UpdateTransformParameters> param, ::Fusion::InterpolatedErrorCorrectionSettings* settings);
    // private System.Void UpdateMinPositionCorrection(Fusion.InterpolatedErrorCorrectionSettings settings)
    // Offset: 0x2B308F8
    void UpdateMinPositionCorrection(::Fusion::InterpolatedErrorCorrectionSettings* settings);
    // protected System.Void ApplyTransform(ref Fusion.NetworkTransformObsolete/UpdateTransformParameters param)
    // Offset: 0x2B30A78
    void ApplyTransform(ByRef<::Fusion::NetworkTransformObsolete::UpdateTransformParameters> param);
    // public override System.Int32 get_PositionWordOffset()
    // Offset: 0x2B2E9C8
    // Implemented from: Fusion.NetworkTransformAnchor
    // Base method: System.Int32 NetworkTransformAnchor::get_PositionWordOffset()
    int get_PositionWordOffset();
    // protected override System.Void Awake()
    // Offset: 0x2B28558
    // Implemented from: Fusion.NetworkTransformAnchor
    // Base method: System.Void NetworkTransformAnchor::Awake()
    void Awake();
    // public override System.Void Spawned()
    // Offset: 0x2B28AA8
    // Implemented from: Fusion.NetworkBehaviour
    // Base method: System.Void NetworkBehaviour::Spawned()
    void Spawned();
    // public override System.Void CopyBackingFieldsToState(System.Boolean firstTime)
    // Offset: 0x2B2EAC8
    // Implemented from: Fusion.NetworkTransformAnchor
    // Base method: System.Void NetworkTransformAnchor::CopyBackingFieldsToState(System.Boolean firstTime)
    void CopyBackingFieldsToState(bool firstTime);
    // override System.Void CopyBuffers2Engine(System.Boolean posRotOnly)
    // Offset: 0x2B2EE88
    // Implemented from: Fusion.NetworkTransformAnchor
    // Base method: System.Void NetworkTransformAnchor::CopyBuffers2Engine(System.Boolean posRotOnly)
    void CopyBuffers2Engine(bool posRotOnly);
    // override System.Void CopyEngine2Buffers(System.Boolean posRotOnly)
    // Offset: 0x2B2EEBC
    // Implemented from: Fusion.NetworkTransformAnchor
    // Base method: System.Void NetworkTransformAnchor::CopyEngine2Buffers(System.Boolean posRotOnly)
    void CopyEngine2Buffers(bool posRotOnly);
    // public override System.Void Render()
    // Offset: 0x2B2F9B4
    // Implemented from: Fusion.NetworkTransformAnchor
    // Base method: System.Void NetworkTransformAnchor::Render()
    void Render();
    // public System.Void .ctor()
    // Offset: 0x2B2A800
    // Implemented from: Fusion.NetworkTransformAnchor
    // Base method: System.Void NetworkTransformAnchor::.ctor()
    // Base method: System.Void NetworkAreaOfInterestBehaviour::.ctor()
    // Base method: System.Void NetworkBehaviour::.ctor()
    // Base method: System.Void SimulationBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NetworkTransformObsolete* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkTransformObsolete::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NetworkTransformObsolete*, creationType>()));
    }
  }; // Fusion.NetworkTransformObsolete
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::NetworkTransformObsolete::get_TeleportCounter
// Il2CppName: get_TeleportCounter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int* (Fusion::NetworkTransformObsolete::*)()>(&Fusion::NetworkTransformObsolete::get_TeleportCounter)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkTransformObsolete*), "get_TeleportCounter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkTransformObsolete::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkTransformObsolete::*)()>(&Fusion::NetworkTransformObsolete::Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkTransformObsolete*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkTransformObsolete::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkTransformObsolete::*)()>(&Fusion::NetworkTransformObsolete::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkTransformObsolete*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkTransformObsolete::AfterTick
// Il2CppName: AfterTick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkTransformObsolete::*)()>(&Fusion::NetworkTransformObsolete::AfterTick)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkTransformObsolete*), "AfterTick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkTransformObsolete::WriteReadVector3
// Il2CppName: WriteReadVector3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (Fusion::NetworkTransformObsolete::*)(::UnityEngine::Vector3, ::Fusion::WriteAccuracy, ::Fusion::ReadAccuracy)>(&Fusion::NetworkTransformObsolete::WriteReadVector3)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* writeAccuracy = &::il2cpp_utils::GetClassFromName("Fusion", "WriteAccuracy")->byval_arg;
    static auto* readAccuracy = &::il2cpp_utils::GetClassFromName("Fusion", "ReadAccuracy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkTransformObsolete*), "WriteReadVector3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, writeAccuracy, readAccuracy});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkTransformObsolete::WriteReadQuaternion
// Il2CppName: WriteReadQuaternion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Quaternion (Fusion::NetworkTransformObsolete::*)(::UnityEngine::Quaternion, ::Fusion::WriteAccuracy, ::Fusion::ReadAccuracy)>(&Fusion::NetworkTransformObsolete::WriteReadQuaternion)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    static auto* writeAccuracy = &::il2cpp_utils::GetClassFromName("Fusion", "WriteAccuracy")->byval_arg;
    static auto* readAccuracy = &::il2cpp_utils::GetClassFromName("Fusion", "ReadAccuracy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkTransformObsolete*), "WriteReadQuaternion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, writeAccuracy, readAccuracy});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkTransformObsolete::GetEnginePositionRotation2Buffer
// Il2CppName: GetEnginePositionRotation2Buffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkTransformObsolete::*)(ByRef<::UnityEngine::Vector3>, ByRef<::UnityEngine::Quaternion>)>(&Fusion::NetworkTransformObsolete::GetEnginePositionRotation2Buffer)> {
  static const MethodInfo* get() {
    static auto* pos = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    static auto* rot = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkTransformObsolete*), "GetEnginePositionRotation2Buffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pos, rot});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkTransformObsolete::Copy2BufferTRSState
// Il2CppName: Copy2BufferTRSState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkTransformObsolete::*)(int)>(&Fusion::NetworkTransformObsolete::Copy2BufferTRSState)> {
  static const MethodInfo* get() {
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkTransformObsolete*), "Copy2BufferTRSState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{offset});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkTransformObsolete::Copy2EngineTRSState
// Il2CppName: Copy2EngineTRSState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkTransformObsolete::*)(int)>(&Fusion::NetworkTransformObsolete::Copy2EngineTRSState)> {
  static const MethodInfo* get() {
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkTransformObsolete*), "Copy2EngineTRSState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{offset});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkTransformObsolete::Teleport
// Il2CppName: Teleport
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkTransformObsolete::*)(::System::Nullable_1<::UnityEngine::Vector3>, ::System::Nullable_1<::Fusion::Rotation>, ::System::Nullable_1<::UnityEngine::Vector3>, bool, ::System::Nullable_1<::UnityEngine::Vector3>, ::System::Nullable_1<::UnityEngine::Vector3>)>(&Fusion::NetworkTransformObsolete::Teleport)> {
  static const MethodInfo* get() {
    static auto* position = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")})->byval_arg;
    static auto* rotation = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Fusion", "Rotation")})->byval_arg;
    static auto* localScale = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")})->byval_arg;
    static auto* reset = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* velocity = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")})->byval_arg;
    static auto* angularVelocity = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkTransformObsolete*), "Teleport", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{position, rotation, localScale, reset, velocity, angularVelocity});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkTransformObsolete::Teleport
// Il2CppName: Teleport
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkTransformObsolete::*)(::Fusion::NetworkTransformAnchor*, ::System::Nullable_1<::UnityEngine::Vector3>, ::System::Nullable_1<::Fusion::Rotation>, ::System::Nullable_1<::UnityEngine::Vector3>, bool, ::System::Nullable_1<::UnityEngine::Vector3>, ::System::Nullable_1<::UnityEngine::Vector3>)>(&Fusion::NetworkTransformObsolete::Teleport)> {
  static const MethodInfo* get() {
    static auto* newParent = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkTransformAnchor")->byval_arg;
    static auto* position = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")})->byval_arg;
    static auto* rotation = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Fusion", "Rotation")})->byval_arg;
    static auto* localScale = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")})->byval_arg;
    static auto* reset = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* velocity = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")})->byval_arg;
    static auto* angularVelocity = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkTransformObsolete*), "Teleport", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newParent, position, rotation, localScale, reset, velocity, angularVelocity});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkTransformObsolete::PreTeleport
// Il2CppName: PreTeleport
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkTransformObsolete::*)()>(&Fusion::NetworkTransformObsolete::PreTeleport)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkTransformObsolete*), "PreTeleport", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkTransformObsolete::Fusion_IAfterPhysicsStep_AfterPhysicsStep
// Il2CppName: Fusion.IAfterPhysicsStep.AfterPhysicsStep
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkTransformObsolete::*)()>(&Fusion::NetworkTransformObsolete::Fusion_IAfterPhysicsStep_AfterPhysicsStep)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkTransformObsolete*), "Fusion.IAfterPhysicsStep.AfterPhysicsStep", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkTransformObsolete::ApplyQueuedTeleport
// Il2CppName: ApplyQueuedTeleport
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkTransformObsolete::*)()>(&Fusion::NetworkTransformObsolete::ApplyQueuedTeleport)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkTransformObsolete*), "ApplyQueuedTeleport", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkTransformObsolete::ReadRotationToQuaternion
// Il2CppName: ReadRotationToQuaternion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Quaternion (Fusion::NetworkTransformObsolete::*)(int*, ::Fusion::ReadAccuracy)>(&Fusion::NetworkTransformObsolete::ReadRotationToQuaternion)> {
  static const MethodInfo* get() {
    static auto* offset = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* readAccuracy = &::il2cpp_utils::GetClassFromName("Fusion", "ReadAccuracy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkTransformObsolete*), "ReadRotationToQuaternion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{offset, readAccuracy});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkTransformObsolete::InterpolateTransform
// Il2CppName: InterpolateTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkTransformObsolete::*)(ByRef<::Fusion::InterpolationData>, bool)>(&Fusion::NetworkTransformObsolete::InterpolateTransform)> {
  static const MethodInfo* get() {
    static auto* data = &::il2cpp_utils::GetClassFromName("Fusion", "InterpolationData")->this_arg;
    static auto* isState = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkTransformObsolete*), "InterpolateTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, isState});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkTransformObsolete::ComputeInterpolatedTransform
// Il2CppName: ComputeInterpolatedTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::NetworkTransformObsolete::*)(ByRef<::Fusion::InterpolationData>, ByRef<::Fusion::NetworkTransformObsolete::UpdateTransformParameters>)>(&Fusion::NetworkTransformObsolete::ComputeInterpolatedTransform)> {
  static const MethodInfo* get() {
    static auto* data = &::il2cpp_utils::GetClassFromName("Fusion", "InterpolationData")->this_arg;
    static auto* param = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkTransformObsolete/UpdateTransformParameters")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkTransformObsolete*), "ComputeInterpolatedTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, param});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkTransformObsolete::UpdateInterpolatedErrorCorrection
// Il2CppName: UpdateInterpolatedErrorCorrection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkTransformObsolete::*)(ByRef<::Fusion::NetworkTransformObsolete::UpdateTransformParameters>, ::Fusion::InterpolatedErrorCorrectionSettings*)>(&Fusion::NetworkTransformObsolete::UpdateInterpolatedErrorCorrection)> {
  static const MethodInfo* get() {
    static auto* param = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkTransformObsolete/UpdateTransformParameters")->this_arg;
    static auto* settings = &::il2cpp_utils::GetClassFromName("Fusion", "InterpolatedErrorCorrectionSettings")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkTransformObsolete*), "UpdateInterpolatedErrorCorrection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{param, settings});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkTransformObsolete::UpdateMinPositionCorrection
// Il2CppName: UpdateMinPositionCorrection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkTransformObsolete::*)(::Fusion::InterpolatedErrorCorrectionSettings*)>(&Fusion::NetworkTransformObsolete::UpdateMinPositionCorrection)> {
  static const MethodInfo* get() {
    static auto* settings = &::il2cpp_utils::GetClassFromName("Fusion", "InterpolatedErrorCorrectionSettings")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkTransformObsolete*), "UpdateMinPositionCorrection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{settings});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkTransformObsolete::ApplyTransform
// Il2CppName: ApplyTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkTransformObsolete::*)(ByRef<::Fusion::NetworkTransformObsolete::UpdateTransformParameters>)>(&Fusion::NetworkTransformObsolete::ApplyTransform)> {
  static const MethodInfo* get() {
    static auto* param = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkTransformObsolete/UpdateTransformParameters")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkTransformObsolete*), "ApplyTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{param});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkTransformObsolete::get_PositionWordOffset
// Il2CppName: get_PositionWordOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Fusion::NetworkTransformObsolete::*)()>(&Fusion::NetworkTransformObsolete::get_PositionWordOffset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkTransformObsolete*), "get_PositionWordOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkTransformObsolete::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkTransformObsolete::*)()>(&Fusion::NetworkTransformObsolete::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkTransformObsolete*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkTransformObsolete::Spawned
// Il2CppName: Spawned
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkTransformObsolete::*)()>(&Fusion::NetworkTransformObsolete::Spawned)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkTransformObsolete*), "Spawned", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkTransformObsolete::CopyBackingFieldsToState
// Il2CppName: CopyBackingFieldsToState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkTransformObsolete::*)(bool)>(&Fusion::NetworkTransformObsolete::CopyBackingFieldsToState)> {
  static const MethodInfo* get() {
    static auto* firstTime = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkTransformObsolete*), "CopyBackingFieldsToState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{firstTime});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkTransformObsolete::CopyBuffers2Engine
// Il2CppName: CopyBuffers2Engine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkTransformObsolete::*)(bool)>(&Fusion::NetworkTransformObsolete::CopyBuffers2Engine)> {
  static const MethodInfo* get() {
    static auto* posRotOnly = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkTransformObsolete*), "CopyBuffers2Engine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{posRotOnly});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkTransformObsolete::CopyEngine2Buffers
// Il2CppName: CopyEngine2Buffers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkTransformObsolete::*)(bool)>(&Fusion::NetworkTransformObsolete::CopyEngine2Buffers)> {
  static const MethodInfo* get() {
    static auto* posRotOnly = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkTransformObsolete*), "CopyEngine2Buffers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{posRotOnly});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkTransformObsolete::Render
// Il2CppName: Render
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkTransformObsolete::*)()>(&Fusion::NetworkTransformObsolete::Render)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkTransformObsolete*), "Render", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkTransformObsolete::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
