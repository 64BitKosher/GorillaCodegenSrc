// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Fusion.GameMode
#include "Fusion/GameMode.hpp"
// Including type: Fusion.Tick
#include "Fusion/Tick.hpp"
// Including type: Fusion.NetworkId
#include "Fusion/NetworkId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Fusion::Protocol
namespace Fusion::Protocol {
  // Forward declaring type: Snapshot
  class Snapshot;
}
// Forward declaring namespace: Fusion
namespace Fusion {
  // Forward declaring type: CloudCommunicator
  class CloudCommunicator;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Nullable`1<T>
  template<typename T>
  struct Nullable_1;
}
// Completed forward declares
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: HostMigrationToken
  class HostMigrationToken;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::HostMigrationToken);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::HostMigrationToken*, "Fusion", "HostMigrationToken");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.HostMigrationToken
  // [TokenAttribute] Offset: FFFFFFFF
  class HostMigrationToken : public ::Il2CppObject {
    public:
    public:
    // private Fusion.GameMode <GameMode>k__BackingField
    // Size: 0x4
    // Offset: 0x10
    ::Fusion::GameMode GameMode;
    // Field size check
    static_assert(sizeof(::Fusion::GameMode) == 0x4);
    // Padding between fields: GameMode and: HostSnapshot
    char __padding0[0x4] = {};
    // private Fusion.Protocol.Snapshot <HostSnapshot>k__BackingField
    // Size: 0x8
    // Offset: 0x18
    ::Fusion::Protocol::Snapshot* HostSnapshot;
    // Field size check
    static_assert(sizeof(::Fusion::Protocol::Snapshot*) == 0x8);
    // private Fusion.CloudCommunicator <CloudCommunicator>k__BackingField
    // Size: 0x8
    // Offset: 0x20
    ::Fusion::CloudCommunicator* CloudCommunicator;
    // Field size check
    static_assert(sizeof(::Fusion::CloudCommunicator*) == 0x8);
    public:
    // Get instance field reference: private Fusion.GameMode <GameMode>k__BackingField
    [[deprecated("Use field access instead!")]] ::Fusion::GameMode& dyn_$GameMode$k__BackingField();
    // Get instance field reference: private Fusion.Protocol.Snapshot <HostSnapshot>k__BackingField
    [[deprecated("Use field access instead!")]] ::Fusion::Protocol::Snapshot*& dyn_$HostSnapshot$k__BackingField();
    // Get instance field reference: private Fusion.CloudCommunicator <CloudCommunicator>k__BackingField
    [[deprecated("Use field access instead!")]] ::Fusion::CloudCommunicator*& dyn_$CloudCommunicator$k__BackingField();
    // public Fusion.GameMode get_GameMode()
    // Offset: 0x2B6A8C4
    ::Fusion::GameMode get_GameMode();
    // private System.Void set_GameMode(Fusion.GameMode value)
    // Offset: 0x2B6A8CC
    void set_GameMode(::Fusion::GameMode value);
    // Fusion.Protocol.Snapshot get_HostSnapshot()
    // Offset: 0x2B6A8D4
    ::Fusion::Protocol::Snapshot* get_HostSnapshot();
    // private System.Void set_HostSnapshot(Fusion.Protocol.Snapshot value)
    // Offset: 0x2B6A8DC
    void set_HostSnapshot(::Fusion::Protocol::Snapshot* value);
    // Fusion.CloudCommunicator get_CloudCommunicator()
    // Offset: 0x2B6A8E4
    ::Fusion::CloudCommunicator* get_CloudCommunicator();
    // private System.Void set_CloudCommunicator(Fusion.CloudCommunicator value)
    // Offset: 0x2B6A8EC
    void set_CloudCommunicator(::Fusion::CloudCommunicator* value);
    // System.Byte[] get_ResumeState()
    // Offset: 0x2B6A290
    ::ArrayW<uint8_t> get_ResumeState();
    // System.Nullable`1<Fusion.Tick> get_ResumeTick()
    // Offset: 0x2B6A2A8
    ::System::Nullable_1<::Fusion::Tick> get_ResumeTick();
    // System.Nullable`1<Fusion.NetworkId> get_ResumeId()
    // Offset: 0x2B6A370
    ::System::Nullable_1<::Fusion::NetworkId> get_ResumeId();
    // private System.Void .ctor()
    // Offset: 0x2B6A8F4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static HostMigrationToken* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::HostMigrationToken::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<HostMigrationToken*, creationType>()));
    }
    // System.Void .ctor(Fusion.Protocol.Snapshot hostSnapshot, Fusion.CloudCommunicator cloudCommunicator, Fusion.GameMode gameMode)
    // Offset: 0x2B6A8FC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static HostMigrationToken* New_ctor(::Fusion::Protocol::Snapshot* hostSnapshot, ::Fusion::CloudCommunicator* cloudCommunicator, ::Fusion::GameMode gameMode) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::HostMigrationToken::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<HostMigrationToken*, creationType>(hostSnapshot, cloudCommunicator, gameMode)));
    }
  }; // Fusion.HostMigrationToken
  #pragma pack(pop)
  static check_size<sizeof(HostMigrationToken), 32 + sizeof(::Fusion::CloudCommunicator*)> __Fusion_HostMigrationTokenSizeCheck;
  static_assert(sizeof(HostMigrationToken) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::HostMigrationToken::get_GameMode
// Il2CppName: get_GameMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::GameMode (Fusion::HostMigrationToken::*)()>(&Fusion::HostMigrationToken::get_GameMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::HostMigrationToken*), "get_GameMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::HostMigrationToken::set_GameMode
// Il2CppName: set_GameMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::HostMigrationToken::*)(::Fusion::GameMode)>(&Fusion::HostMigrationToken::set_GameMode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Fusion", "GameMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::HostMigrationToken*), "set_GameMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::HostMigrationToken::get_HostSnapshot
// Il2CppName: get_HostSnapshot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::Protocol::Snapshot* (Fusion::HostMigrationToken::*)()>(&Fusion::HostMigrationToken::get_HostSnapshot)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::HostMigrationToken*), "get_HostSnapshot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::HostMigrationToken::set_HostSnapshot
// Il2CppName: set_HostSnapshot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::HostMigrationToken::*)(::Fusion::Protocol::Snapshot*)>(&Fusion::HostMigrationToken::set_HostSnapshot)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Fusion.Protocol", "Snapshot")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::HostMigrationToken*), "set_HostSnapshot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::HostMigrationToken::get_CloudCommunicator
// Il2CppName: get_CloudCommunicator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::CloudCommunicator* (Fusion::HostMigrationToken::*)()>(&Fusion::HostMigrationToken::get_CloudCommunicator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::HostMigrationToken*), "get_CloudCommunicator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::HostMigrationToken::set_CloudCommunicator
// Il2CppName: set_CloudCommunicator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::HostMigrationToken::*)(::Fusion::CloudCommunicator*)>(&Fusion::HostMigrationToken::set_CloudCommunicator)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Fusion", "CloudCommunicator")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::HostMigrationToken*), "set_CloudCommunicator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::HostMigrationToken::get_ResumeState
// Il2CppName: get_ResumeState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (Fusion::HostMigrationToken::*)()>(&Fusion::HostMigrationToken::get_ResumeState)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::HostMigrationToken*), "get_ResumeState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::HostMigrationToken::get_ResumeTick
// Il2CppName: get_ResumeTick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Nullable_1<::Fusion::Tick> (Fusion::HostMigrationToken::*)()>(&Fusion::HostMigrationToken::get_ResumeTick)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::HostMigrationToken*), "get_ResumeTick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::HostMigrationToken::get_ResumeId
// Il2CppName: get_ResumeId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Nullable_1<::Fusion::NetworkId> (Fusion::HostMigrationToken::*)()>(&Fusion::HostMigrationToken::get_ResumeId)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::HostMigrationToken*), "get_ResumeId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::HostMigrationToken::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Fusion::HostMigrationToken::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
