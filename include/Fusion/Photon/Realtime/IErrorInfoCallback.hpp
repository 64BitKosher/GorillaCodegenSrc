// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Fusion::Photon::Realtime
namespace Fusion::Photon::Realtime {
  // Forward declaring type: ErrorInfo
  class ErrorInfo;
}
// Completed forward declares
// Type namespace: Fusion.Photon.Realtime
namespace Fusion::Photon::Realtime {
  // Forward declaring type: IErrorInfoCallback
  class IErrorInfoCallback;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::Photon::Realtime::IErrorInfoCallback);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::Photon::Realtime::IErrorInfoCallback*, "Fusion.Photon.Realtime", "IErrorInfoCallback");
// Type namespace: Fusion.Photon.Realtime
namespace Fusion::Photon::Realtime {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.Photon.Realtime.IErrorInfoCallback
  // [TokenAttribute] Offset: FFFFFFFF
  class IErrorInfoCallback {
    public:
    // public System.Void OnErrorInfo(Fusion.Photon.Realtime.ErrorInfo errorInfo)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void OnErrorInfo(::Fusion::Photon::Realtime::ErrorInfo* errorInfo);
  }; // Fusion.Photon.Realtime.IErrorInfoCallback
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::Photon::Realtime::IErrorInfoCallback::OnErrorInfo
// Il2CppName: OnErrorInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::IErrorInfoCallback::*)(::Fusion::Photon::Realtime::ErrorInfo*)>(&Fusion::Photon::Realtime::IErrorInfoCallback::OnErrorInfo)> {
  static const MethodInfo* get() {
    static auto* errorInfo = &::il2cpp_utils::GetClassFromName("Fusion.Photon.Realtime", "ErrorInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::IErrorInfoCallback*), "OnErrorInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{errorInfo});
  }
};
