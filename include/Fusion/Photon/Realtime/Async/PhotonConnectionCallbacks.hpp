// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Fusion.Photon.Realtime.DisconnectCause
#include "Fusion/Photon/Realtime/DisconnectCause.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Forward declaring namespace: Fusion::Photon::Realtime
namespace Fusion::Photon::Realtime {
  // Forward declaring type: RegionHandler
  class RegionHandler;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Completed forward declares
// Type namespace: Fusion.Photon.Realtime.Async
namespace Fusion::Photon::Realtime::Async {
  // Forward declaring type: PhotonConnectionCallbacks
  class PhotonConnectionCallbacks;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::Photon::Realtime::Async::PhotonConnectionCallbacks);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::Photon::Realtime::Async::PhotonConnectionCallbacks*, "Fusion.Photon.Realtime.Async", "PhotonConnectionCallbacks");
// Type namespace: Fusion.Photon.Realtime.Async
namespace Fusion::Photon::Realtime::Async {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.Photon.Realtime.Async.PhotonConnectionCallbacks
  // [TokenAttribute] Offset: FFFFFFFF
  class PhotonConnectionCallbacks : public ::Il2CppObject {
    public:
    public:
    // public System.Action ConnectedToMaster
    // Size: 0x8
    // Offset: 0x10
    ::System::Action* ConnectedToMaster;
    // Field size check
    static_assert(sizeof(::System::Action*) == 0x8);
    // public System.Action ConnectedToNameServer
    // Size: 0x8
    // Offset: 0x18
    ::System::Action* ConnectedToNameServer;
    // Field size check
    static_assert(sizeof(::System::Action*) == 0x8);
    // public System.Action`1<Fusion.Photon.Realtime.RegionHandler> RegionListReceived
    // Size: 0x8
    // Offset: 0x20
    ::System::Action_1<::Fusion::Photon::Realtime::RegionHandler*>* RegionListReceived;
    // Field size check
    static_assert(sizeof(::System::Action_1<::Fusion::Photon::Realtime::RegionHandler*>*) == 0x8);
    // public System.Action`1<Fusion.Photon.Realtime.DisconnectCause> Disconnected
    // Size: 0x8
    // Offset: 0x28
    ::System::Action_1<::Fusion::Photon::Realtime::DisconnectCause>* Disconnected;
    // Field size check
    static_assert(sizeof(::System::Action_1<::Fusion::Photon::Realtime::DisconnectCause>*) == 0x8);
    // public System.Action`1<System.String> CustomAuthenticationFailed
    // Size: 0x8
    // Offset: 0x30
    ::System::Action_1<::StringW>* CustomAuthenticationFailed;
    // Field size check
    static_assert(sizeof(::System::Action_1<::StringW>*) == 0x8);
    // public System.Action`1<System.Collections.Generic.Dictionary`2<System.String,System.Object>> CustomAuthenticationResponse
    // Size: 0x8
    // Offset: 0x38
    ::System::Action_1<::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>* CustomAuthenticationResponse;
    // Field size check
    static_assert(sizeof(::System::Action_1<::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>*) == 0x8);
    public:
    // Get instance field reference: public System.Action ConnectedToMaster
    [[deprecated("Use field access instead!")]] ::System::Action*& dyn_ConnectedToMaster();
    // Get instance field reference: public System.Action ConnectedToNameServer
    [[deprecated("Use field access instead!")]] ::System::Action*& dyn_ConnectedToNameServer();
    // Get instance field reference: public System.Action`1<Fusion.Photon.Realtime.RegionHandler> RegionListReceived
    [[deprecated("Use field access instead!")]] ::System::Action_1<::Fusion::Photon::Realtime::RegionHandler*>*& dyn_RegionListReceived();
    // Get instance field reference: public System.Action`1<Fusion.Photon.Realtime.DisconnectCause> Disconnected
    [[deprecated("Use field access instead!")]] ::System::Action_1<::Fusion::Photon::Realtime::DisconnectCause>*& dyn_Disconnected();
    // Get instance field reference: public System.Action`1<System.String> CustomAuthenticationFailed
    [[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& dyn_CustomAuthenticationFailed();
    // Get instance field reference: public System.Action`1<System.Collections.Generic.Dictionary`2<System.String,System.Object>> CustomAuthenticationResponse
    [[deprecated("Use field access instead!")]] ::System::Action_1<::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>*& dyn_CustomAuthenticationResponse();
    // public System.Void .ctor()
    // Offset: 0x2AFA0A8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PhotonConnectionCallbacks* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::PhotonConnectionCallbacks::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PhotonConnectionCallbacks*, creationType>()));
    }
  }; // Fusion.Photon.Realtime.Async.PhotonConnectionCallbacks
  #pragma pack(pop)
  static check_size<sizeof(PhotonConnectionCallbacks), 56 + sizeof(::System::Action_1<::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>*)> __Fusion_Photon_Realtime_Async_PhotonConnectionCallbacksSizeCheck;
  static_assert(sizeof(PhotonConnectionCallbacks) == 0x40);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Async::PhotonConnectionCallbacks::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
