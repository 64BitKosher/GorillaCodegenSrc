// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Fusion.Photon.Realtime.IConnectionCallbacks
#include "Fusion/Photon/Realtime/IConnectionCallbacks.hpp"
// Including type: Fusion.Photon.Realtime.IMatchmakingCallbacks
#include "Fusion/Photon/Realtime/IMatchmakingCallbacks.hpp"
// Including type: Fusion.Photon.Realtime.ILobbyCallbacks
#include "Fusion/Photon/Realtime/ILobbyCallbacks.hpp"
// Including type: System.Single
#include "System/Single.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Fusion::Photon::Realtime::Async
namespace Fusion::Photon::Realtime::Async {
  // Forward declaring type: PhotonConnectionCallbacks
  class PhotonConnectionCallbacks;
  // Forward declaring type: PhotonMatchmakingCallbacks
  class PhotonMatchmakingCallbacks;
  // Forward declaring type: PhotonLobbyCallbacks
  class PhotonLobbyCallbacks;
}
// Forward declaring namespace: System::Threading::Tasks
namespace System::Threading::Tasks {
  // Forward declaring type: TaskCompletionSource`1<TResult>
  template<typename TResult>
  class TaskCompletionSource_1;
  // Forward declaring type: Task`1<TResult>
  template<typename TResult>
  class Task_1;
}
// Forward declaring namespace: System::Threading
namespace System::Threading {
  // Forward declaring type: CancellationTokenSource
  class CancellationTokenSource;
  // Forward declaring type: CancellationToken
  struct CancellationToken;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Exception
  class Exception;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: Fusion::Photon::Realtime
namespace Fusion::Photon::Realtime {
  // Forward declaring type: DisconnectCause
  struct DisconnectCause;
  // Forward declaring type: RegionHandler
  class RegionHandler;
  // Forward declaring type: FriendInfo
  class FriendInfo;
  // Forward declaring type: RoomInfo
  class RoomInfo;
  // Forward declaring type: TypedLobbyInfo
  class TypedLobbyInfo;
}
// Completed forward declares
// Type namespace: Fusion.Photon.Realtime.Async
namespace Fusion::Photon::Realtime::Async {
  // Forward declaring type: OperationHandler
  class OperationHandler;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::Photon::Realtime::Async::OperationHandler);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::Photon::Realtime::Async::OperationHandler*, "Fusion.Photon.Realtime.Async", "OperationHandler");
// Type namespace: Fusion.Photon.Realtime.Async
namespace Fusion::Photon::Realtime::Async {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.Photon.Realtime.Async.OperationHandler
  // [TokenAttribute] Offset: FFFFFFFF
  class OperationHandler : public ::Il2CppObject/*, public ::Fusion::Photon::Realtime::IConnectionCallbacks, public ::Fusion::Photon::Realtime::IMatchmakingCallbacks, public ::Fusion::Photon::Realtime::ILobbyCallbacks*/ {
    public:
    public:
    // public Fusion.Photon.Realtime.Async.PhotonConnectionCallbacks ConnectionCallbacks
    // Size: 0x8
    // Offset: 0x10
    ::Fusion::Photon::Realtime::Async::PhotonConnectionCallbacks* ConnectionCallbacks;
    // Field size check
    static_assert(sizeof(::Fusion::Photon::Realtime::Async::PhotonConnectionCallbacks*) == 0x8);
    // public Fusion.Photon.Realtime.Async.PhotonMatchmakingCallbacks MatchmakingCallbacks
    // Size: 0x8
    // Offset: 0x18
    ::Fusion::Photon::Realtime::Async::PhotonMatchmakingCallbacks* MatchmakingCallbacks;
    // Field size check
    static_assert(sizeof(::Fusion::Photon::Realtime::Async::PhotonMatchmakingCallbacks*) == 0x8);
    // public Fusion.Photon.Realtime.Async.PhotonLobbyCallbacks LobbyCallbacks
    // Size: 0x8
    // Offset: 0x20
    ::Fusion::Photon::Realtime::Async::PhotonLobbyCallbacks* LobbyCallbacks;
    // Field size check
    static_assert(sizeof(::Fusion::Photon::Realtime::Async::PhotonLobbyCallbacks*) == 0x8);
    // private System.Boolean _throwOnErrors
    // Size: 0x1
    // Offset: 0x28
    bool throwOnErrors;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: throwOnErrors and: result
    char __padding3[0x7] = {};
    // private System.Threading.Tasks.TaskCompletionSource`1<System.Int16> _result
    // Size: 0x8
    // Offset: 0x30
    ::System::Threading::Tasks::TaskCompletionSource_1<int16_t>* result;
    // Field size check
    static_assert(sizeof(::System::Threading::Tasks::TaskCompletionSource_1<int16_t>*) == 0x8);
    // private System.Threading.CancellationTokenSource _cancellation
    // Size: 0x8
    // Offset: 0x38
    ::System::Threading::CancellationTokenSource* cancellation;
    // Field size check
    static_assert(sizeof(::System::Threading::CancellationTokenSource*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::Fusion::Photon::Realtime::IConnectionCallbacks
    operator ::Fusion::Photon::Realtime::IConnectionCallbacks() noexcept {
      return *reinterpret_cast<::Fusion::Photon::Realtime::IConnectionCallbacks*>(this);
    }
    // Creating interface conversion operator: operator ::Fusion::Photon::Realtime::IMatchmakingCallbacks
    operator ::Fusion::Photon::Realtime::IMatchmakingCallbacks() noexcept {
      return *reinterpret_cast<::Fusion::Photon::Realtime::IMatchmakingCallbacks*>(this);
    }
    // Creating interface conversion operator: operator ::Fusion::Photon::Realtime::ILobbyCallbacks
    operator ::Fusion::Photon::Realtime::ILobbyCallbacks() noexcept {
      return *reinterpret_cast<::Fusion::Photon::Realtime::ILobbyCallbacks*>(this);
    }
    // static field const value: static private System.Single OPERATION_TIMEOUT_SEC
    static constexpr const float OPERATION_TIMEOUT_SEC = 30;
    // Get static field: static private System.Single OPERATION_TIMEOUT_SEC
    static float _get_OPERATION_TIMEOUT_SEC();
    // Set static field: static private System.Single OPERATION_TIMEOUT_SEC
    static void _set_OPERATION_TIMEOUT_SEC(float value);
    // Get instance field reference: public Fusion.Photon.Realtime.Async.PhotonConnectionCallbacks ConnectionCallbacks
    [[deprecated("Use field access instead!")]] ::Fusion::Photon::Realtime::Async::PhotonConnectionCallbacks*& dyn_ConnectionCallbacks();
    // Get instance field reference: public Fusion.Photon.Realtime.Async.PhotonMatchmakingCallbacks MatchmakingCallbacks
    [[deprecated("Use field access instead!")]] ::Fusion::Photon::Realtime::Async::PhotonMatchmakingCallbacks*& dyn_MatchmakingCallbacks();
    // Get instance field reference: public Fusion.Photon.Realtime.Async.PhotonLobbyCallbacks LobbyCallbacks
    [[deprecated("Use field access instead!")]] ::Fusion::Photon::Realtime::Async::PhotonLobbyCallbacks*& dyn_LobbyCallbacks();
    // Get instance field reference: private System.Boolean _throwOnErrors
    [[deprecated("Use field access instead!")]] bool& dyn__throwOnErrors();
    // Get instance field reference: private System.Threading.Tasks.TaskCompletionSource`1<System.Int16> _result
    [[deprecated("Use field access instead!")]] ::System::Threading::Tasks::TaskCompletionSource_1<int16_t>*& dyn__result();
    // Get instance field reference: private System.Threading.CancellationTokenSource _cancellation
    [[deprecated("Use field access instead!")]] ::System::Threading::CancellationTokenSource*& dyn__cancellation();
    // public System.Threading.Tasks.Task`1<System.Int16> get_Task()
    // Offset: 0x2AFA6EC
    ::System::Threading::Tasks::Task_1<int16_t>* get_Task();
    // public System.Threading.Tasks.TaskCompletionSource`1<System.Int16> get_CompletionSource()
    // Offset: 0x2AFC578
    ::System::Threading::Tasks::TaskCompletionSource_1<int16_t>* get_CompletionSource();
    // public System.Threading.CancellationToken get_Token()
    // Offset: 0x2AFB294
    ::System::Threading::CancellationToken get_Token();
    // public System.Boolean get_IsCancellationRequested()
    // Offset: 0x2AFC580
    bool get_IsCancellationRequested();
    // public System.Void .ctor(System.Boolean throwOnErrors)
    // Offset: 0x2AFB04C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static OperationHandler* New_ctor(bool throwOnErrors) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::OperationHandler::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<OperationHandler*, creationType>(throwOnErrors)));
    }
    // public System.Void SetResult(System.Int16 result)
    // Offset: 0x2AFB7D8
    void SetResult(int16_t result);
    // public System.Void SetException(System.Exception e)
    // Offset: 0x2AFC59C
    void SetException(::System::Exception* e);
    // public System.Void OnConnected()
    // Offset: 0x2AFC638
    void OnConnected();
    // public System.Void OnConnectedToMaster()
    // Offset: 0x2AFC66C
    void OnConnectedToMaster();
    // public System.Void OnCustomAuthenticationFailed(System.String debugMessage)
    // Offset: 0x2AFC6A4
    void OnCustomAuthenticationFailed(::StringW debugMessage);
    // public System.Void OnCustomAuthenticationResponse(System.Collections.Generic.Dictionary`2<System.String,System.Object> data)
    // Offset: 0x2AFC734
    void OnCustomAuthenticationResponse(::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* data);
    // public System.Void OnDisconnected(Fusion.Photon.Realtime.DisconnectCause cause)
    // Offset: 0x2AFC768
    void OnDisconnected(::Fusion::Photon::Realtime::DisconnectCause cause);
    // public System.Void OnRegionListReceived(Fusion.Photon.Realtime.RegionHandler regionHandler)
    // Offset: 0x2AFC7F8
    void OnRegionListReceived(::Fusion::Photon::Realtime::RegionHandler* regionHandler);
    // public System.Void OnCreatedRoom()
    // Offset: 0x2AFC82C
    void OnCreatedRoom();
    // public System.Void OnCreateRoomFailed(System.Int16 returnCode, System.String message)
    // Offset: 0x2AFC860
    void OnCreateRoomFailed(int16_t returnCode, ::StringW message);
    // public System.Void OnFriendListUpdate(System.Collections.Generic.List`1<Fusion.Photon.Realtime.FriendInfo> friendList)
    // Offset: 0x2AFC930
    void OnFriendListUpdate(::System::Collections::Generic::List_1<::Fusion::Photon::Realtime::FriendInfo*>* friendList);
    // public System.Void OnJoinedRoom()
    // Offset: 0x2AFC964
    void OnJoinedRoom();
    // public System.Void OnJoinRandomFailed(System.Int16 returnCode, System.String message)
    // Offset: 0x2AFC99C
    void OnJoinRandomFailed(int16_t returnCode, ::StringW message);
    // public System.Void OnJoinRoomFailed(System.Int16 returnCode, System.String message)
    // Offset: 0x2AFCA6C
    void OnJoinRoomFailed(int16_t returnCode, ::StringW message);
    // public System.Void OnLeftRoom()
    // Offset: 0x2AFCB3C
    void OnLeftRoom();
    // public System.Void OnJoinedLobby()
    // Offset: 0x2AFCB40
    void OnJoinedLobby();
    // public System.Void OnLeftLobby()
    // Offset: 0x2AFCB78
    void OnLeftLobby();
    // public System.Void OnRoomListUpdate(System.Collections.Generic.List`1<Fusion.Photon.Realtime.RoomInfo> roomList)
    // Offset: 0x2AFCB7C
    void OnRoomListUpdate(::System::Collections::Generic::List_1<::Fusion::Photon::Realtime::RoomInfo*>* roomList);
    // public System.Void OnLobbyStatisticsUpdate(System.Collections.Generic.List`1<Fusion.Photon.Realtime.TypedLobbyInfo> lobbyStatistics)
    // Offset: 0x2AFCB80
    void OnLobbyStatisticsUpdate(::System::Collections::Generic::List_1<::Fusion::Photon::Realtime::TypedLobbyInfo*>* lobbyStatistics);
    // private System.Void <.ctor>b__15_0()
    // Offset: 0x2AFCB84
    void $_ctor$b__15_0();
  }; // Fusion.Photon.Realtime.Async.OperationHandler
  #pragma pack(pop)
  static check_size<sizeof(OperationHandler), 56 + sizeof(::System::Threading::CancellationTokenSource*)> __Fusion_Photon_Realtime_Async_OperationHandlerSizeCheck;
  static_assert(sizeof(OperationHandler) == 0x40);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Async::OperationHandler::get_Task
// Il2CppName: get_Task
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<int16_t>* (Fusion::Photon::Realtime::Async::OperationHandler::*)()>(&Fusion::Photon::Realtime::Async::OperationHandler::get_Task)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Async::OperationHandler*), "get_Task", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Async::OperationHandler::get_CompletionSource
// Il2CppName: get_CompletionSource
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::TaskCompletionSource_1<int16_t>* (Fusion::Photon::Realtime::Async::OperationHandler::*)()>(&Fusion::Photon::Realtime::Async::OperationHandler::get_CompletionSource)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Async::OperationHandler*), "get_CompletionSource", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Async::OperationHandler::get_Token
// Il2CppName: get_Token
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::CancellationToken (Fusion::Photon::Realtime::Async::OperationHandler::*)()>(&Fusion::Photon::Realtime::Async::OperationHandler::get_Token)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Async::OperationHandler*), "get_Token", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Async::OperationHandler::get_IsCancellationRequested
// Il2CppName: get_IsCancellationRequested
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::Photon::Realtime::Async::OperationHandler::*)()>(&Fusion::Photon::Realtime::Async::OperationHandler::get_IsCancellationRequested)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Async::OperationHandler*), "get_IsCancellationRequested", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Async::OperationHandler::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Async::OperationHandler::SetResult
// Il2CppName: SetResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::Async::OperationHandler::*)(int16_t)>(&Fusion::Photon::Realtime::Async::OperationHandler::SetResult)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "Int16")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Async::OperationHandler*), "SetResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Async::OperationHandler::SetException
// Il2CppName: SetException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::Async::OperationHandler::*)(::System::Exception*)>(&Fusion::Photon::Realtime::Async::OperationHandler::SetException)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("System", "Exception")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Async::OperationHandler*), "SetException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Async::OperationHandler::OnConnected
// Il2CppName: OnConnected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::Async::OperationHandler::*)()>(&Fusion::Photon::Realtime::Async::OperationHandler::OnConnected)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Async::OperationHandler*), "OnConnected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Async::OperationHandler::OnConnectedToMaster
// Il2CppName: OnConnectedToMaster
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::Async::OperationHandler::*)()>(&Fusion::Photon::Realtime::Async::OperationHandler::OnConnectedToMaster)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Async::OperationHandler*), "OnConnectedToMaster", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Async::OperationHandler::OnCustomAuthenticationFailed
// Il2CppName: OnCustomAuthenticationFailed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::Async::OperationHandler::*)(::StringW)>(&Fusion::Photon::Realtime::Async::OperationHandler::OnCustomAuthenticationFailed)> {
  static const MethodInfo* get() {
    static auto* debugMessage = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Async::OperationHandler*), "OnCustomAuthenticationFailed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{debugMessage});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Async::OperationHandler::OnCustomAuthenticationResponse
// Il2CppName: OnCustomAuthenticationResponse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::Async::OperationHandler::*)(::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*)>(&Fusion::Photon::Realtime::Async::OperationHandler::OnCustomAuthenticationResponse)> {
  static const MethodInfo* get() {
    static auto* data = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Object")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Async::OperationHandler*), "OnCustomAuthenticationResponse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Async::OperationHandler::OnDisconnected
// Il2CppName: OnDisconnected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::Async::OperationHandler::*)(::Fusion::Photon::Realtime::DisconnectCause)>(&Fusion::Photon::Realtime::Async::OperationHandler::OnDisconnected)> {
  static const MethodInfo* get() {
    static auto* cause = &::il2cpp_utils::GetClassFromName("Fusion.Photon.Realtime", "DisconnectCause")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Async::OperationHandler*), "OnDisconnected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cause});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Async::OperationHandler::OnRegionListReceived
// Il2CppName: OnRegionListReceived
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::Async::OperationHandler::*)(::Fusion::Photon::Realtime::RegionHandler*)>(&Fusion::Photon::Realtime::Async::OperationHandler::OnRegionListReceived)> {
  static const MethodInfo* get() {
    static auto* regionHandler = &::il2cpp_utils::GetClassFromName("Fusion.Photon.Realtime", "RegionHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Async::OperationHandler*), "OnRegionListReceived", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{regionHandler});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Async::OperationHandler::OnCreatedRoom
// Il2CppName: OnCreatedRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::Async::OperationHandler::*)()>(&Fusion::Photon::Realtime::Async::OperationHandler::OnCreatedRoom)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Async::OperationHandler*), "OnCreatedRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Async::OperationHandler::OnCreateRoomFailed
// Il2CppName: OnCreateRoomFailed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::Async::OperationHandler::*)(int16_t, ::StringW)>(&Fusion::Photon::Realtime::Async::OperationHandler::OnCreateRoomFailed)> {
  static const MethodInfo* get() {
    static auto* returnCode = &::il2cpp_utils::GetClassFromName("System", "Int16")->byval_arg;
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Async::OperationHandler*), "OnCreateRoomFailed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{returnCode, message});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Async::OperationHandler::OnFriendListUpdate
// Il2CppName: OnFriendListUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::Async::OperationHandler::*)(::System::Collections::Generic::List_1<::Fusion::Photon::Realtime::FriendInfo*>*)>(&Fusion::Photon::Realtime::Async::OperationHandler::OnFriendListUpdate)> {
  static const MethodInfo* get() {
    static auto* friendList = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Fusion.Photon.Realtime", "FriendInfo")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Async::OperationHandler*), "OnFriendListUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{friendList});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Async::OperationHandler::OnJoinedRoom
// Il2CppName: OnJoinedRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::Async::OperationHandler::*)()>(&Fusion::Photon::Realtime::Async::OperationHandler::OnJoinedRoom)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Async::OperationHandler*), "OnJoinedRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Async::OperationHandler::OnJoinRandomFailed
// Il2CppName: OnJoinRandomFailed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::Async::OperationHandler::*)(int16_t, ::StringW)>(&Fusion::Photon::Realtime::Async::OperationHandler::OnJoinRandomFailed)> {
  static const MethodInfo* get() {
    static auto* returnCode = &::il2cpp_utils::GetClassFromName("System", "Int16")->byval_arg;
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Async::OperationHandler*), "OnJoinRandomFailed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{returnCode, message});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Async::OperationHandler::OnJoinRoomFailed
// Il2CppName: OnJoinRoomFailed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::Async::OperationHandler::*)(int16_t, ::StringW)>(&Fusion::Photon::Realtime::Async::OperationHandler::OnJoinRoomFailed)> {
  static const MethodInfo* get() {
    static auto* returnCode = &::il2cpp_utils::GetClassFromName("System", "Int16")->byval_arg;
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Async::OperationHandler*), "OnJoinRoomFailed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{returnCode, message});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Async::OperationHandler::OnLeftRoom
// Il2CppName: OnLeftRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::Async::OperationHandler::*)()>(&Fusion::Photon::Realtime::Async::OperationHandler::OnLeftRoom)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Async::OperationHandler*), "OnLeftRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Async::OperationHandler::OnJoinedLobby
// Il2CppName: OnJoinedLobby
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::Async::OperationHandler::*)()>(&Fusion::Photon::Realtime::Async::OperationHandler::OnJoinedLobby)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Async::OperationHandler*), "OnJoinedLobby", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Async::OperationHandler::OnLeftLobby
// Il2CppName: OnLeftLobby
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::Async::OperationHandler::*)()>(&Fusion::Photon::Realtime::Async::OperationHandler::OnLeftLobby)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Async::OperationHandler*), "OnLeftLobby", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Async::OperationHandler::OnRoomListUpdate
// Il2CppName: OnRoomListUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::Async::OperationHandler::*)(::System::Collections::Generic::List_1<::Fusion::Photon::Realtime::RoomInfo*>*)>(&Fusion::Photon::Realtime::Async::OperationHandler::OnRoomListUpdate)> {
  static const MethodInfo* get() {
    static auto* roomList = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Fusion.Photon.Realtime", "RoomInfo")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Async::OperationHandler*), "OnRoomListUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{roomList});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Async::OperationHandler::OnLobbyStatisticsUpdate
// Il2CppName: OnLobbyStatisticsUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::Async::OperationHandler::*)(::System::Collections::Generic::List_1<::Fusion::Photon::Realtime::TypedLobbyInfo*>*)>(&Fusion::Photon::Realtime::Async::OperationHandler::OnLobbyStatisticsUpdate)> {
  static const MethodInfo* get() {
    static auto* lobbyStatistics = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Fusion.Photon.Realtime", "TypedLobbyInfo")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Async::OperationHandler*), "OnLobbyStatisticsUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{lobbyStatistics});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Async::OperationHandler::$_ctor$b__15_0
// Il2CppName: <.ctor>b__15_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::Async::OperationHandler::*)()>(&Fusion::Photon::Realtime::Async::OperationHandler::$_ctor$b__15_0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Async::OperationHandler*), "<.ctor>b__15_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
