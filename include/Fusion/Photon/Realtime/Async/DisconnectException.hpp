// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: Fusion.Photon.Realtime.DisconnectCause
#include "Fusion/Photon/Realtime/DisconnectCause.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: Fusion.Photon.Realtime.Async
namespace Fusion::Photon::Realtime::Async {
  // Forward declaring type: DisconnectException
  class DisconnectException;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::Photon::Realtime::Async::DisconnectException);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::Photon::Realtime::Async::DisconnectException*, "Fusion.Photon.Realtime.Async", "DisconnectException");
// Type namespace: Fusion.Photon.Realtime.Async
namespace Fusion::Photon::Realtime::Async {
  // Size: 0x90
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.Photon.Realtime.Async.DisconnectException
  // [TokenAttribute] Offset: FFFFFFFF
  class DisconnectException : public ::System::Exception {
    public:
    public:
    // public Fusion.Photon.Realtime.DisconnectCause Cause
    // Size: 0x4
    // Offset: 0x8C
    ::Fusion::Photon::Realtime::DisconnectCause Cause;
    // Field size check
    static_assert(sizeof(::Fusion::Photon::Realtime::DisconnectCause) == 0x4);
    public:
    // Creating conversion operator: operator ::Fusion::Photon::Realtime::DisconnectCause
    constexpr operator ::Fusion::Photon::Realtime::DisconnectCause() const noexcept {
      return Cause;
    }
    // Get instance field reference: public Fusion.Photon.Realtime.DisconnectCause Cause
    [[deprecated("Use field access instead!")]] ::Fusion::Photon::Realtime::DisconnectCause& dyn_Cause();
    // public System.Void .ctor(Fusion.Photon.Realtime.DisconnectCause cause)
    // Offset: 0x2AFA0C0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DisconnectException* New_ctor(::Fusion::Photon::Realtime::DisconnectCause cause) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::DisconnectException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DisconnectException*, creationType>(cause)));
    }
  }; // Fusion.Photon.Realtime.Async.DisconnectException
  #pragma pack(pop)
  static check_size<sizeof(DisconnectException), 140 + sizeof(::Fusion::Photon::Realtime::DisconnectCause)> __Fusion_Photon_Realtime_Async_DisconnectExceptionSizeCheck;
  static_assert(sizeof(DisconnectException) == 0x90);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Async::DisconnectException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
