// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: ExitGames::Client::Photon
namespace ExitGames::Client::Photon {
  // Forward declaring type: EventData
  class EventData;
}
// Completed forward declares
// Type namespace: Fusion.Photon.Realtime
namespace Fusion::Photon::Realtime {
  // Forward declaring type: IOnEventCallback
  class IOnEventCallback;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::Photon::Realtime::IOnEventCallback);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::Photon::Realtime::IOnEventCallback*, "Fusion.Photon.Realtime", "IOnEventCallback");
// Type namespace: Fusion.Photon.Realtime
namespace Fusion::Photon::Realtime {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.Photon.Realtime.IOnEventCallback
  // [TokenAttribute] Offset: FFFFFFFF
  class IOnEventCallback {
    public:
    // public System.Void OnEvent(ExitGames.Client.Photon.EventData photonEvent)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void OnEvent(::ExitGames::Client::Photon::EventData* photonEvent);
  }; // Fusion.Photon.Realtime.IOnEventCallback
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::Photon::Realtime::IOnEventCallback::OnEvent
// Il2CppName: OnEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::IOnEventCallback::*)(::ExitGames::Client::Photon::EventData*)>(&Fusion::Photon::Realtime::IOnEventCallback::OnEvent)> {
  static const MethodInfo* get() {
    static auto* photonEvent = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "EventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::IOnEventCallback*), "OnEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{photonEvent});
  }
};
