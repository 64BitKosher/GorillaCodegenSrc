// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Fusion.Photon.Realtime.RoomInfo
#include "Fusion/Photon/Realtime/RoomInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Fusion::Photon::Realtime
namespace Fusion::Photon::Realtime {
  // Forward declaring type: LoadBalancingClient
  class LoadBalancingClient;
  // Forward declaring type: Player
  class Player;
  // Forward declaring type: RoomOptions
  class RoomOptions;
  // Forward declaring type: WebFlags
  class WebFlags;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: ExitGames::Client::Photon
namespace ExitGames::Client::Photon {
  // Forward declaring type: Hashtable
  class Hashtable;
}
// Completed forward declares
// Type namespace: Fusion.Photon.Realtime
namespace Fusion::Photon::Realtime {
  // Forward declaring type: Room
  class Room;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::Photon::Realtime::Room);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::Photon::Realtime::Room*, "Fusion.Photon.Realtime", "Room");
// Type namespace: Fusion.Photon.Realtime
namespace Fusion::Photon::Realtime {
  // Size: 0x7D
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.Photon.Realtime.Room
  // [TokenAttribute] Offset: FFFFFFFF
  class Room : public ::Fusion::Photon::Realtime::RoomInfo {
    public:
    // Writing base type padding for base size: 0x5C to desired offset: 0x60
    char ___base_padding[0x4] = {};
    public:
    // private Fusion.Photon.Realtime.LoadBalancingClient <LoadBalancingClient>k__BackingField
    // Size: 0x8
    // Offset: 0x60
    ::Fusion::Photon::Realtime::LoadBalancingClient* LoadBalancingClient;
    // Field size check
    static_assert(sizeof(::Fusion::Photon::Realtime::LoadBalancingClient*) == 0x8);
    // private System.Boolean isOffline
    // Size: 0x1
    // Offset: 0x68
    bool isOffline;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: isOffline and: players
    char __padding1[0x7] = {};
    // private System.Collections.Generic.Dictionary`2<System.Int32,Fusion.Photon.Realtime.Player> players
    // Size: 0x8
    // Offset: 0x70
    ::System::Collections::Generic::Dictionary_2<int, ::Fusion::Photon::Realtime::Player*>* players;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<int, ::Fusion::Photon::Realtime::Player*>*) == 0x8);
    // private System.Boolean <BroadcastPropertiesChangeToAll>k__BackingField
    // Size: 0x1
    // Offset: 0x78
    bool BroadcastPropertiesChangeToAll;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean <SuppressRoomEvents>k__BackingField
    // Size: 0x1
    // Offset: 0x79
    bool SuppressRoomEvents;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean <SuppressPlayerInfo>k__BackingField
    // Size: 0x1
    // Offset: 0x7A
    bool SuppressPlayerInfo;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean <PublishUserId>k__BackingField
    // Size: 0x1
    // Offset: 0x7B
    bool PublishUserId;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean <DeleteNullProperties>k__BackingField
    // Size: 0x1
    // Offset: 0x7C
    bool DeleteNullProperties;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get instance field reference: private Fusion.Photon.Realtime.LoadBalancingClient <LoadBalancingClient>k__BackingField
    [[deprecated("Use field access instead!")]] ::Fusion::Photon::Realtime::LoadBalancingClient*& dyn_$LoadBalancingClient$k__BackingField();
    // Get instance field reference: private System.Boolean isOffline
    [[deprecated("Use field access instead!")]] bool& dyn_isOffline();
    // Get instance field reference: private System.Collections.Generic.Dictionary`2<System.Int32,Fusion.Photon.Realtime.Player> players
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, ::Fusion::Photon::Realtime::Player*>*& dyn_players();
    // Get instance field reference: private System.Boolean <BroadcastPropertiesChangeToAll>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$BroadcastPropertiesChangeToAll$k__BackingField();
    // Get instance field reference: private System.Boolean <SuppressRoomEvents>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$SuppressRoomEvents$k__BackingField();
    // Get instance field reference: private System.Boolean <SuppressPlayerInfo>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$SuppressPlayerInfo$k__BackingField();
    // Get instance field reference: private System.Boolean <PublishUserId>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$PublishUserId$k__BackingField();
    // Get instance field reference: private System.Boolean <DeleteNullProperties>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$DeleteNullProperties$k__BackingField();
    // public Fusion.Photon.Realtime.LoadBalancingClient get_LoadBalancingClient()
    // Offset: 0x2AF653C
    ::Fusion::Photon::Realtime::LoadBalancingClient* get_LoadBalancingClient();
    // public System.Void set_LoadBalancingClient(Fusion.Photon.Realtime.LoadBalancingClient value)
    // Offset: 0x2AF6544
    void set_LoadBalancingClient(::Fusion::Photon::Realtime::LoadBalancingClient* value);
    // System.Void set_Name(System.String value)
    // Offset: 0x2AF6554
    void set_Name(::StringW value);
    // public System.Boolean get_IsOffline()
    // Offset: 0x2AF3118
    bool get_IsOffline();
    // private System.Void set_IsOffline(System.Boolean value)
    // Offset: 0x2AF655C
    void set_IsOffline(bool value);
    // public System.Void set_IsOpen(System.Boolean value)
    // Offset: 0x2AF6570
    void set_IsOpen(bool value);
    // public System.Void set_IsVisible(System.Boolean value)
    // Offset: 0x2AF6650
    void set_IsVisible(bool value);
    // public System.Void set_MaxPlayers(System.Int32 value)
    // Offset: 0x2AF6730
    void set_MaxPlayers(int value);
    // public System.Collections.Generic.Dictionary`2<System.Int32,Fusion.Photon.Realtime.Player> get_Players()
    // Offset: 0x2AF29CC
    ::System::Collections::Generic::Dictionary_2<int, ::Fusion::Photon::Realtime::Player*>* get_Players();
    // private System.Void set_Players(System.Collections.Generic.Dictionary`2<System.Int32,Fusion.Photon.Realtime.Player> value)
    // Offset: 0x2AF6860
    void set_Players(::System::Collections::Generic::Dictionary_2<int, ::Fusion::Photon::Realtime::Player*>* value);
    // public System.String[] get_ExpectedUsers()
    // Offset: 0x2AF6868
    ::ArrayW<::StringW> get_ExpectedUsers();
    // public System.Int32 get_PlayerTtl()
    // Offset: 0x2AF6870
    int get_PlayerTtl();
    // public System.Void set_PlayerTtl(System.Int32 value)
    // Offset: 0x2AF6878
    void set_PlayerTtl(int value);
    // public System.Int32 get_EmptyRoomTtl()
    // Offset: 0x2AF690C
    int get_EmptyRoomTtl();
    // public System.Void set_EmptyRoomTtl(System.Int32 value)
    // Offset: 0x2AF6914
    void set_EmptyRoomTtl(int value);
    // public System.Int32 get_MasterClientId()
    // Offset: 0x2AF2664
    int get_MasterClientId();
    // public System.String[] get_PropertiesListedInLobby()
    // Offset: 0x2AF69A8
    ::ArrayW<::StringW> get_PropertiesListedInLobby();
    // private System.Void set_PropertiesListedInLobby(System.String[] value)
    // Offset: 0x2AF69B0
    void set_PropertiesListedInLobby(::ArrayW<::StringW> value);
    // public System.Boolean get_AutoCleanUp()
    // Offset: 0x2AF69B8
    bool get_AutoCleanUp();
    // public System.Boolean get_BroadcastPropertiesChangeToAll()
    // Offset: 0x2AF69C0
    bool get_BroadcastPropertiesChangeToAll();
    // private System.Void set_BroadcastPropertiesChangeToAll(System.Boolean value)
    // Offset: 0x2AF69C8
    void set_BroadcastPropertiesChangeToAll(bool value);
    // public System.Boolean get_SuppressRoomEvents()
    // Offset: 0x2AF69D4
    bool get_SuppressRoomEvents();
    // private System.Void set_SuppressRoomEvents(System.Boolean value)
    // Offset: 0x2AF69DC
    void set_SuppressRoomEvents(bool value);
    // public System.Boolean get_SuppressPlayerInfo()
    // Offset: 0x2AF69E8
    bool get_SuppressPlayerInfo();
    // private System.Void set_SuppressPlayerInfo(System.Boolean value)
    // Offset: 0x2AF69F0
    void set_SuppressPlayerInfo(bool value);
    // public System.Boolean get_PublishUserId()
    // Offset: 0x2AF69FC
    bool get_PublishUserId();
    // private System.Void set_PublishUserId(System.Boolean value)
    // Offset: 0x2AF6A04
    void set_PublishUserId(bool value);
    // public System.Boolean get_DeleteNullProperties()
    // Offset: 0x2AF6A10
    bool get_DeleteNullProperties();
    // private System.Void set_DeleteNullProperties(System.Boolean value)
    // Offset: 0x2AF6A18
    void set_DeleteNullProperties(bool value);
    // public System.Void .ctor(System.String roomName, Fusion.Photon.Realtime.RoomOptions options, System.Boolean isOffline)
    // Offset: 0x2AF6A24
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Room* New_ctor(::StringW roomName, ::Fusion::Photon::Realtime::RoomOptions* options, bool isOffline) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Room*, creationType>(roomName, options, isOffline)));
    }
    // System.Void InternalCacheRoomFlags(System.Int32 roomFlags)
    // Offset: 0x2AF6BC8
    void InternalCacheRoomFlags(int roomFlags);
    // public System.Boolean SetCustomProperties(ExitGames.Client.Photon.Hashtable propertiesToSet, ExitGames.Client.Photon.Hashtable expectedProperties, Fusion.Photon.Realtime.WebFlags webFlags)
    // Offset: 0x2AF7158
    bool SetCustomProperties(::ExitGames::Client::Photon::Hashtable* propertiesToSet, ::ExitGames::Client::Photon::Hashtable* expectedProperties, ::Fusion::Photon::Realtime::WebFlags* webFlags);
    // public System.Boolean SetPropertiesListedInLobby(System.String[] lobbyProps)
    // Offset: 0x2AF72A8
    bool SetPropertiesListedInLobby(::ArrayW<::StringW> lobbyProps);
    // protected internal System.Void RemovePlayer(Fusion.Photon.Realtime.Player player)
    // Offset: 0x2AF734C
    void RemovePlayer(::Fusion::Photon::Realtime::Player* player);
    // protected internal System.Void RemovePlayer(System.Int32 id)
    // Offset: 0x2AF73B8
    void RemovePlayer(int id);
    // public System.Boolean SetMasterClient(Fusion.Photon.Realtime.Player masterClientPlayer)
    // Offset: 0x2AF73E8
    bool SetMasterClient(::Fusion::Photon::Realtime::Player* masterClientPlayer);
    // public System.Boolean AddPlayer(Fusion.Photon.Realtime.Player player)
    // Offset: 0x2AF7508
    bool AddPlayer(::Fusion::Photon::Realtime::Player* player);
    // public Fusion.Photon.Realtime.Player StorePlayer(Fusion.Photon.Realtime.Player player)
    // Offset: 0x2AF758C
    ::Fusion::Photon::Realtime::Player* StorePlayer(::Fusion::Photon::Realtime::Player* player);
    // public Fusion.Photon.Realtime.Player GetPlayer(System.Int32 id, System.Boolean findMaster)
    // Offset: 0x2AF7604
    ::Fusion::Photon::Realtime::Player* GetPlayer(int id, bool findMaster);
    // public System.Boolean ClearExpectedUsers()
    // Offset: 0x2AF7684
    bool ClearExpectedUsers();
    // public System.Boolean SetExpectedUsers(System.String[] newExpectedUsers)
    // Offset: 0x2AF77F0
    bool SetExpectedUsers(::ArrayW<::StringW> newExpectedUsers);
    // private System.Boolean SetExpectedUsers(System.String[] newExpectedUsers, System.String[] oldExpectedUsers)
    // Offset: 0x2AF76FC
    bool SetExpectedUsers(::ArrayW<::StringW> newExpectedUsers, ::ArrayW<::StringW> oldExpectedUsers);
    // public System.String get_Name()
    // Offset: 0x2AF654C
    // Implemented from: Fusion.Photon.Realtime.RoomInfo
    // Base method: System.String RoomInfo::get_Name()
    ::StringW get_Name();
    // public System.Boolean get_IsOpen()
    // Offset: 0x2AF6568
    // Implemented from: Fusion.Photon.Realtime.RoomInfo
    // Base method: System.Boolean RoomInfo::get_IsOpen()
    bool get_IsOpen();
    // public System.Boolean get_IsVisible()
    // Offset: 0x2AF6648
    // Implemented from: Fusion.Photon.Realtime.RoomInfo
    // Base method: System.Boolean RoomInfo::get_IsVisible()
    bool get_IsVisible();
    // public System.Int32 get_MaxPlayers()
    // Offset: 0x2AF6728
    // Implemented from: Fusion.Photon.Realtime.RoomInfo
    // Base method: System.Int32 RoomInfo::get_MaxPlayers()
    int get_MaxPlayers();
    // public System.Int32 get_PlayerCount()
    // Offset: 0x2AF680C
    // Implemented from: Fusion.Photon.Realtime.RoomInfo
    // Base method: System.Int32 RoomInfo::get_PlayerCount()
    int get_PlayerCount();
    // protected internal override System.Void InternalCacheProperties(ExitGames.Client.Photon.Hashtable propertiesToCache)
    // Offset: 0x2AF6C00
    // Implemented from: Fusion.Photon.Realtime.RoomInfo
    // Base method: System.Void RoomInfo::InternalCacheProperties(ExitGames.Client.Photon.Hashtable propertiesToCache)
    void InternalCacheProperties(::ExitGames::Client::Photon::Hashtable* propertiesToCache);
    // public override System.String ToString()
    // Offset: 0x2AF7880
    // Implemented from: Fusion.Photon.Realtime.RoomInfo
    // Base method: System.String RoomInfo::ToString()
    ::StringW ToString();
    // public System.String ToStringFull()
    // Offset: 0x2AF7AE0
    // Implemented from: Fusion.Photon.Realtime.RoomInfo
    // Base method: System.String RoomInfo::ToStringFull()
    ::StringW ToStringFull();
  }; // Fusion.Photon.Realtime.Room
  #pragma pack(pop)
  static check_size<sizeof(Room), 124 + sizeof(bool)> __Fusion_Photon_Realtime_RoomSizeCheck;
  static_assert(sizeof(Room) == 0x7D);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Room::get_LoadBalancingClient
// Il2CppName: get_LoadBalancingClient
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::Photon::Realtime::LoadBalancingClient* (Fusion::Photon::Realtime::Room::*)()>(&Fusion::Photon::Realtime::Room::get_LoadBalancingClient)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Room*), "get_LoadBalancingClient", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Room::set_LoadBalancingClient
// Il2CppName: set_LoadBalancingClient
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::Room::*)(::Fusion::Photon::Realtime::LoadBalancingClient*)>(&Fusion::Photon::Realtime::Room::set_LoadBalancingClient)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Fusion.Photon.Realtime", "LoadBalancingClient")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Room*), "set_LoadBalancingClient", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Room::set_Name
// Il2CppName: set_Name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::Room::*)(::StringW)>(&Fusion::Photon::Realtime::Room::set_Name)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Room*), "set_Name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Room::get_IsOffline
// Il2CppName: get_IsOffline
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::Photon::Realtime::Room::*)()>(&Fusion::Photon::Realtime::Room::get_IsOffline)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Room*), "get_IsOffline", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Room::set_IsOffline
// Il2CppName: set_IsOffline
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::Room::*)(bool)>(&Fusion::Photon::Realtime::Room::set_IsOffline)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Room*), "set_IsOffline", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Room::set_IsOpen
// Il2CppName: set_IsOpen
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::Room::*)(bool)>(&Fusion::Photon::Realtime::Room::set_IsOpen)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Room*), "set_IsOpen", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Room::set_IsVisible
// Il2CppName: set_IsVisible
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::Room::*)(bool)>(&Fusion::Photon::Realtime::Room::set_IsVisible)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Room*), "set_IsVisible", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Room::set_MaxPlayers
// Il2CppName: set_MaxPlayers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::Room::*)(int)>(&Fusion::Photon::Realtime::Room::set_MaxPlayers)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Room*), "set_MaxPlayers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Room::get_Players
// Il2CppName: get_Players
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::Dictionary_2<int, ::Fusion::Photon::Realtime::Player*>* (Fusion::Photon::Realtime::Room::*)()>(&Fusion::Photon::Realtime::Room::get_Players)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Room*), "get_Players", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Room::set_Players
// Il2CppName: set_Players
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::Room::*)(::System::Collections::Generic::Dictionary_2<int, ::Fusion::Photon::Realtime::Player*>*)>(&Fusion::Photon::Realtime::Room::set_Players)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32"), ::il2cpp_utils::GetClassFromName("Fusion.Photon.Realtime", "Player")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Room*), "set_Players", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Room::get_ExpectedUsers
// Il2CppName: get_ExpectedUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (Fusion::Photon::Realtime::Room::*)()>(&Fusion::Photon::Realtime::Room::get_ExpectedUsers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Room*), "get_ExpectedUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Room::get_PlayerTtl
// Il2CppName: get_PlayerTtl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Fusion::Photon::Realtime::Room::*)()>(&Fusion::Photon::Realtime::Room::get_PlayerTtl)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Room*), "get_PlayerTtl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Room::set_PlayerTtl
// Il2CppName: set_PlayerTtl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::Room::*)(int)>(&Fusion::Photon::Realtime::Room::set_PlayerTtl)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Room*), "set_PlayerTtl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Room::get_EmptyRoomTtl
// Il2CppName: get_EmptyRoomTtl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Fusion::Photon::Realtime::Room::*)()>(&Fusion::Photon::Realtime::Room::get_EmptyRoomTtl)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Room*), "get_EmptyRoomTtl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Room::set_EmptyRoomTtl
// Il2CppName: set_EmptyRoomTtl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::Room::*)(int)>(&Fusion::Photon::Realtime::Room::set_EmptyRoomTtl)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Room*), "set_EmptyRoomTtl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Room::get_MasterClientId
// Il2CppName: get_MasterClientId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Fusion::Photon::Realtime::Room::*)()>(&Fusion::Photon::Realtime::Room::get_MasterClientId)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Room*), "get_MasterClientId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Room::get_PropertiesListedInLobby
// Il2CppName: get_PropertiesListedInLobby
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (Fusion::Photon::Realtime::Room::*)()>(&Fusion::Photon::Realtime::Room::get_PropertiesListedInLobby)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Room*), "get_PropertiesListedInLobby", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Room::set_PropertiesListedInLobby
// Il2CppName: set_PropertiesListedInLobby
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::Room::*)(::ArrayW<::StringW>)>(&Fusion::Photon::Realtime::Room::set_PropertiesListedInLobby)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Room*), "set_PropertiesListedInLobby", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Room::get_AutoCleanUp
// Il2CppName: get_AutoCleanUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::Photon::Realtime::Room::*)()>(&Fusion::Photon::Realtime::Room::get_AutoCleanUp)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Room*), "get_AutoCleanUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Room::get_BroadcastPropertiesChangeToAll
// Il2CppName: get_BroadcastPropertiesChangeToAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::Photon::Realtime::Room::*)()>(&Fusion::Photon::Realtime::Room::get_BroadcastPropertiesChangeToAll)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Room*), "get_BroadcastPropertiesChangeToAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Room::set_BroadcastPropertiesChangeToAll
// Il2CppName: set_BroadcastPropertiesChangeToAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::Room::*)(bool)>(&Fusion::Photon::Realtime::Room::set_BroadcastPropertiesChangeToAll)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Room*), "set_BroadcastPropertiesChangeToAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Room::get_SuppressRoomEvents
// Il2CppName: get_SuppressRoomEvents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::Photon::Realtime::Room::*)()>(&Fusion::Photon::Realtime::Room::get_SuppressRoomEvents)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Room*), "get_SuppressRoomEvents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Room::set_SuppressRoomEvents
// Il2CppName: set_SuppressRoomEvents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::Room::*)(bool)>(&Fusion::Photon::Realtime::Room::set_SuppressRoomEvents)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Room*), "set_SuppressRoomEvents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Room::get_SuppressPlayerInfo
// Il2CppName: get_SuppressPlayerInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::Photon::Realtime::Room::*)()>(&Fusion::Photon::Realtime::Room::get_SuppressPlayerInfo)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Room*), "get_SuppressPlayerInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Room::set_SuppressPlayerInfo
// Il2CppName: set_SuppressPlayerInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::Room::*)(bool)>(&Fusion::Photon::Realtime::Room::set_SuppressPlayerInfo)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Room*), "set_SuppressPlayerInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Room::get_PublishUserId
// Il2CppName: get_PublishUserId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::Photon::Realtime::Room::*)()>(&Fusion::Photon::Realtime::Room::get_PublishUserId)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Room*), "get_PublishUserId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Room::set_PublishUserId
// Il2CppName: set_PublishUserId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::Room::*)(bool)>(&Fusion::Photon::Realtime::Room::set_PublishUserId)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Room*), "set_PublishUserId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Room::get_DeleteNullProperties
// Il2CppName: get_DeleteNullProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::Photon::Realtime::Room::*)()>(&Fusion::Photon::Realtime::Room::get_DeleteNullProperties)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Room*), "get_DeleteNullProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Room::set_DeleteNullProperties
// Il2CppName: set_DeleteNullProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::Room::*)(bool)>(&Fusion::Photon::Realtime::Room::set_DeleteNullProperties)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Room*), "set_DeleteNullProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Room::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Room::InternalCacheRoomFlags
// Il2CppName: InternalCacheRoomFlags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::Room::*)(int)>(&Fusion::Photon::Realtime::Room::InternalCacheRoomFlags)> {
  static const MethodInfo* get() {
    static auto* roomFlags = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Room*), "InternalCacheRoomFlags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{roomFlags});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Room::SetCustomProperties
// Il2CppName: SetCustomProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::Photon::Realtime::Room::*)(::ExitGames::Client::Photon::Hashtable*, ::ExitGames::Client::Photon::Hashtable*, ::Fusion::Photon::Realtime::WebFlags*)>(&Fusion::Photon::Realtime::Room::SetCustomProperties)> {
  static const MethodInfo* get() {
    static auto* propertiesToSet = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "Hashtable")->byval_arg;
    static auto* expectedProperties = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "Hashtable")->byval_arg;
    static auto* webFlags = &::il2cpp_utils::GetClassFromName("Fusion.Photon.Realtime", "WebFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Room*), "SetCustomProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{propertiesToSet, expectedProperties, webFlags});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Room::SetPropertiesListedInLobby
// Il2CppName: SetPropertiesListedInLobby
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::Photon::Realtime::Room::*)(::ArrayW<::StringW>)>(&Fusion::Photon::Realtime::Room::SetPropertiesListedInLobby)> {
  static const MethodInfo* get() {
    static auto* lobbyProps = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Room*), "SetPropertiesListedInLobby", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{lobbyProps});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Room::RemovePlayer
// Il2CppName: RemovePlayer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::Room::*)(::Fusion::Photon::Realtime::Player*)>(&Fusion::Photon::Realtime::Room::RemovePlayer)> {
  static const MethodInfo* get() {
    static auto* player = &::il2cpp_utils::GetClassFromName("Fusion.Photon.Realtime", "Player")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Room*), "RemovePlayer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{player});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Room::RemovePlayer
// Il2CppName: RemovePlayer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::Room::*)(int)>(&Fusion::Photon::Realtime::Room::RemovePlayer)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Room*), "RemovePlayer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Room::SetMasterClient
// Il2CppName: SetMasterClient
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::Photon::Realtime::Room::*)(::Fusion::Photon::Realtime::Player*)>(&Fusion::Photon::Realtime::Room::SetMasterClient)> {
  static const MethodInfo* get() {
    static auto* masterClientPlayer = &::il2cpp_utils::GetClassFromName("Fusion.Photon.Realtime", "Player")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Room*), "SetMasterClient", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{masterClientPlayer});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Room::AddPlayer
// Il2CppName: AddPlayer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::Photon::Realtime::Room::*)(::Fusion::Photon::Realtime::Player*)>(&Fusion::Photon::Realtime::Room::AddPlayer)> {
  static const MethodInfo* get() {
    static auto* player = &::il2cpp_utils::GetClassFromName("Fusion.Photon.Realtime", "Player")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Room*), "AddPlayer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{player});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Room::StorePlayer
// Il2CppName: StorePlayer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::Photon::Realtime::Player* (Fusion::Photon::Realtime::Room::*)(::Fusion::Photon::Realtime::Player*)>(&Fusion::Photon::Realtime::Room::StorePlayer)> {
  static const MethodInfo* get() {
    static auto* player = &::il2cpp_utils::GetClassFromName("Fusion.Photon.Realtime", "Player")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Room*), "StorePlayer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{player});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Room::GetPlayer
// Il2CppName: GetPlayer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::Photon::Realtime::Player* (Fusion::Photon::Realtime::Room::*)(int, bool)>(&Fusion::Photon::Realtime::Room::GetPlayer)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* findMaster = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Room*), "GetPlayer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, findMaster});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Room::ClearExpectedUsers
// Il2CppName: ClearExpectedUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::Photon::Realtime::Room::*)()>(&Fusion::Photon::Realtime::Room::ClearExpectedUsers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Room*), "ClearExpectedUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Room::SetExpectedUsers
// Il2CppName: SetExpectedUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::Photon::Realtime::Room::*)(::ArrayW<::StringW>)>(&Fusion::Photon::Realtime::Room::SetExpectedUsers)> {
  static const MethodInfo* get() {
    static auto* newExpectedUsers = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Room*), "SetExpectedUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newExpectedUsers});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Room::SetExpectedUsers
// Il2CppName: SetExpectedUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::Photon::Realtime::Room::*)(::ArrayW<::StringW>, ::ArrayW<::StringW>)>(&Fusion::Photon::Realtime::Room::SetExpectedUsers)> {
  static const MethodInfo* get() {
    static auto* newExpectedUsers = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    static auto* oldExpectedUsers = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Room*), "SetExpectedUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newExpectedUsers, oldExpectedUsers});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Room::get_Name
// Il2CppName: get_Name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Fusion::Photon::Realtime::Room::*)()>(&Fusion::Photon::Realtime::Room::get_Name)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Room*), "get_Name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Room::get_IsOpen
// Il2CppName: get_IsOpen
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::Photon::Realtime::Room::*)()>(&Fusion::Photon::Realtime::Room::get_IsOpen)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Room*), "get_IsOpen", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Room::get_IsVisible
// Il2CppName: get_IsVisible
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::Photon::Realtime::Room::*)()>(&Fusion::Photon::Realtime::Room::get_IsVisible)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Room*), "get_IsVisible", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Room::get_MaxPlayers
// Il2CppName: get_MaxPlayers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Fusion::Photon::Realtime::Room::*)()>(&Fusion::Photon::Realtime::Room::get_MaxPlayers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Room*), "get_MaxPlayers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Room::get_PlayerCount
// Il2CppName: get_PlayerCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Fusion::Photon::Realtime::Room::*)()>(&Fusion::Photon::Realtime::Room::get_PlayerCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Room*), "get_PlayerCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Room::InternalCacheProperties
// Il2CppName: InternalCacheProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::Room::*)(::ExitGames::Client::Photon::Hashtable*)>(&Fusion::Photon::Realtime::Room::InternalCacheProperties)> {
  static const MethodInfo* get() {
    static auto* propertiesToCache = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "Hashtable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Room*), "InternalCacheProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{propertiesToCache});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Room::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Fusion::Photon::Realtime::Room::*)()>(&Fusion::Photon::Realtime::Room::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Room*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Room::ToStringFull
// Il2CppName: ToStringFull
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Fusion::Photon::Realtime::Room::*)()>(&Fusion::Photon::Realtime::Room::ToStringFull)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Room*), "ToStringFull", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
