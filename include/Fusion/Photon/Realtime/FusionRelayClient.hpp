// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Fusion.Photon.Realtime.LoadBalancingClient
#include "Fusion/Photon/Realtime/LoadBalancingClient.hpp"
// Including type: Fusion.Photon.Realtime.IInRoomCallbacks
#include "Fusion/Photon/Realtime/IInRoomCallbacks.hpp"
// Including type: Fusion.Photon.Realtime.IMatchmakingCallbacks
#include "Fusion/Photon/Realtime/IMatchmakingCallbacks.hpp"
// Including type: Fusion.Photon.Realtime.ILobbyCallbacks
#include "Fusion/Photon/Realtime/ILobbyCallbacks.hpp"
// Including type: ExitGames.Client.Photon.SendOptions
#include "ExitGames/Client/Photon/SendOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
  // Forward declaring type: String
  class String;
}
// Forward declaring namespace: Fusion::Photon::Realtime
namespace Fusion::Photon::Realtime {
  // Forward declaring type: RaiseEventOptions
  class RaiseEventOptions;
  // Forward declaring type: EnterRoomParams
  class EnterRoomParams;
  // Forward declaring type: TypedLobby
  class TypedLobby;
  // Forward declaring type: OpJoinRandomRoomParams
  class OpJoinRandomRoomParams;
  // Forward declaring type: MatchmakingMode
  struct MatchmakingMode;
  // Forward declaring type: FriendInfo
  class FriendInfo;
  // Forward declaring type: RoomInfo
  class RoomInfo;
  // Forward declaring type: TypedLobbyInfo
  class TypedLobbyInfo;
  // Forward declaring type: Player
  class Player;
  // Forward declaring type: AppSettings
  class AppSettings;
}
// Forward declaring namespace: Fusion::Protocol
namespace Fusion::Protocol {
  // Forward declaring type: ICommunicator
  class ICommunicator;
}
// Forward declaring namespace: ExitGames::Client::Photon
namespace ExitGames::Client::Photon {
  // Forward declaring type: EventData
  class EventData;
  // Forward declaring type: Hashtable
  class Hashtable;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: Fusion
namespace Fusion {
  // Forward declaring type: SessionProperty
  class SessionProperty;
}
// Completed forward declares
// Type namespace: Fusion.Photon.Realtime
namespace Fusion::Photon::Realtime {
  // Forward declaring type: FusionRelayClient
  class FusionRelayClient;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::Photon::Realtime::FusionRelayClient);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::Photon::Realtime::FusionRelayClient*, "Fusion.Photon.Realtime", "FusionRelayClient");
// Type namespace: Fusion.Photon.Realtime
namespace Fusion::Photon::Realtime {
  // WARNING Size may be invalid!
  // Autogenerated type: Fusion.Photon.Realtime.FusionRelayClient
  // [TokenAttribute] Offset: FFFFFFFF
  class FusionRelayClient : public ::Fusion::Photon::Realtime::LoadBalancingClient/*, public ::Fusion::Photon::Realtime::IInRoomCallbacks, public ::Fusion::Photon::Realtime::IMatchmakingCallbacks, public ::Fusion::Photon::Realtime::ILobbyCallbacks*/ {
    public:
    public:
    // private System.Boolean _ackSent
    // Size: 0x1
    // Offset: 0x17C
    bool ackSent;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Byte _fallbackThreadId
    // Size: 0x1
    // Offset: 0x17D
    uint8_t fallbackThreadId;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // private System.Action OnRoomChanged
    // Size: 0x8
    // Offset: 0x180
    ::System::Action* OnRoomChanged;
    // Field size check
    static_assert(sizeof(::System::Action*) == 0x8);
    // private System.Boolean <UseDefaultPorts>k__BackingField
    // Size: 0x1
    // Offset: 0x188
    bool UseDefaultPorts;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private readonly Fusion.Photon.Realtime.RaiseEventOptions _raiseEventOptions
    // Size: 0x8
    // Offset: 0x190
    ::Fusion::Photon::Realtime::RaiseEventOptions* raiseEventOptions;
    // Field size check
    static_assert(sizeof(::Fusion::Photon::Realtime::RaiseEventOptions*) == 0x8);
    // private readonly ExitGames.Client.Photon.SendOptions _optionsUnreliable
    // Size: 0x6
    // Offset: 0x198
    ::ExitGames::Client::Photon::SendOptions optionsUnreliable;
    // Field size check
    static_assert(sizeof(::ExitGames::Client::Photon::SendOptions) == 0x6);
    // private readonly ExitGames.Client.Photon.SendOptions _optionsReliable
    // Size: 0x6
    // Offset: 0x1A0
    ::ExitGames::Client::Photon::SendOptions optionsReliable;
    // Field size check
    static_assert(sizeof(::ExitGames::Client::Photon::SendOptions) == 0x6);
    // private readonly Fusion.Protocol.ICommunicator _communicator
    // Size: 0x8
    // Offset: 0x1A8
    ::Fusion::Protocol::ICommunicator* communicator;
    // Field size check
    static_assert(sizeof(::Fusion::Protocol::ICommunicator*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::Fusion::Photon::Realtime::IInRoomCallbacks
    operator ::Fusion::Photon::Realtime::IInRoomCallbacks() noexcept {
      return *reinterpret_cast<::Fusion::Photon::Realtime::IInRoomCallbacks*>(this);
    }
    // Creating interface conversion operator: operator ::Fusion::Photon::Realtime::IMatchmakingCallbacks
    operator ::Fusion::Photon::Realtime::IMatchmakingCallbacks() noexcept {
      return *reinterpret_cast<::Fusion::Photon::Realtime::IMatchmakingCallbacks*>(this);
    }
    // Creating interface conversion operator: operator ::Fusion::Photon::Realtime::ILobbyCallbacks
    operator ::Fusion::Photon::Realtime::ILobbyCallbacks() noexcept {
      return *reinterpret_cast<::Fusion::Photon::Realtime::ILobbyCallbacks*>(this);
    }
    // static field const value: static private System.Int32 KeepAliveInBackground
    static constexpr const int KeepAliveInBackground = 60000;
    // Get static field: static private System.Int32 KeepAliveInBackground
    static int _get_KeepAliveInBackground();
    // Set static field: static private System.Int32 KeepAliveInBackground
    static void _set_KeepAliveInBackground(int value);
    // static field const value: static private System.Int32 _delayBetweenPings
    static constexpr const int _delayBetweenPings = 100;
    // Get static field: static private System.Int32 _delayBetweenPings
    static int _get__delayBetweenPings();
    // Set static field: static private System.Int32 _delayBetweenPings
    static void _set__delayBetweenPings(int value);
    // static field const value: static public System.String FUSION_PLUGIN_NAME
    static constexpr const char* FUSION_PLUGIN_NAME = "FusionPlugin";
    // Get static field: static public System.String FUSION_PLUGIN_NAME
    static ::StringW _get_FUSION_PLUGIN_NAME();
    // Set static field: static public System.String FUSION_PLUGIN_NAME
    static void _set_FUSION_PLUGIN_NAME(::StringW value);
    // static field const value: static private System.String SERVER_HOST_CN
    static constexpr const char* SERVER_HOST_CN = "ns.photonengine.cn";
    // Get static field: static private System.String SERVER_HOST_CN
    static ::StringW _get_SERVER_HOST_CN();
    // Set static field: static private System.String SERVER_HOST_CN
    static void _set_SERVER_HOST_CN(::StringW value);
    // static field const value: static private System.String REGION_CN_ID
    static constexpr const char* REGION_CN_ID = "cn";
    // Get static field: static private System.String REGION_CN_ID
    static ::StringW _get_REGION_CN_ID();
    // Set static field: static private System.String REGION_CN_ID
    static void _set_REGION_CN_ID(::StringW value);
    // Get instance field reference: private System.Boolean _ackSent
    [[deprecated("Use field access instead!")]] bool& dyn__ackSent();
    // Get instance field reference: private System.Byte _fallbackThreadId
    [[deprecated("Use field access instead!")]] uint8_t& dyn__fallbackThreadId();
    // Get instance field reference: private System.Action OnRoomChanged
    [[deprecated("Use field access instead!")]] ::System::Action*& dyn_OnRoomChanged();
    // Get instance field reference: private System.Boolean <UseDefaultPorts>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$UseDefaultPorts$k__BackingField();
    // Get instance field reference: private readonly Fusion.Photon.Realtime.RaiseEventOptions _raiseEventOptions
    [[deprecated("Use field access instead!")]] ::Fusion::Photon::Realtime::RaiseEventOptions*& dyn__raiseEventOptions();
    // Get instance field reference: private readonly ExitGames.Client.Photon.SendOptions _optionsUnreliable
    [[deprecated("Use field access instead!")]] ::ExitGames::Client::Photon::SendOptions& dyn__optionsUnreliable();
    // Get instance field reference: private readonly ExitGames.Client.Photon.SendOptions _optionsReliable
    [[deprecated("Use field access instead!")]] ::ExitGames::Client::Photon::SendOptions& dyn__optionsReliable();
    // Get instance field reference: private readonly Fusion.Protocol.ICommunicator _communicator
    [[deprecated("Use field access instead!")]] ::Fusion::Protocol::ICommunicator*& dyn__communicator();
    // public System.Void StartFallbackSendAck()
    // Offset: 0x2ADD04C
    void StartFallbackSendAck();
    // public System.Void StopFallbackSendAck()
    // Offset: 0x2ADD12C
    void StopFallbackSendAck();
    // private System.Boolean BackgroundAcksTask()
    // Offset: 0x2ADD1AC
    bool BackgroundAcksTask();
    // private System.Void OnEventHandler(ExitGames.Client.Photon.EventData evt)
    // Offset: 0x2ADD2A4
    void OnEventHandler(::ExitGames::Client::Photon::EventData* evt);
    // public System.Boolean SendEvent(System.Int32 target, System.Byte eventCode, System.Byte* buffer, System.Int32 bufferLength, System.Boolean reliable)
    // Offset: 0x2ADD388
    bool SendEvent(int target, uint8_t eventCode, uint8_t* buffer, int bufferLength, bool reliable);
    // public System.Void ExtractData(System.Object dataObj, System.Byte[] buffer, ref System.Int32 bufferLength)
    // Offset: 0x2ADD510
    void ExtractData(::Il2CppObject* dataObj, ::ArrayW<uint8_t> buffer, ByRef<int> bufferLength);
    // public System.Boolean get_IsReadyAndInRoom()
    // Offset: 0x2ADD4D8
    bool get_IsReadyAndInRoom();
    // public System.Void add_OnRoomChanged(System.Action value)
    // Offset: 0x2ADD664
    void add_OnRoomChanged(::System::Action* value);
    // public System.Void remove_OnRoomChanged(System.Action value)
    // Offset: 0x2ADD704
    void remove_OnRoomChanged(::System::Action* value);
    // public System.Boolean get_UseDefaultPorts()
    // Offset: 0x2ADD7A4
    bool get_UseDefaultPorts();
    // public System.Void set_UseDefaultPorts(System.Boolean value)
    // Offset: 0x2ADD7AC
    void set_UseDefaultPorts(bool value);
    // public System.Void .ctor(Fusion.Protocol.ICommunicator communicator)
    // Offset: 0x2ADD7B8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static FusionRelayClient* New_ctor(::Fusion::Protocol::ICommunicator* communicator) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::FusionRelayClient::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<FusionRelayClient*, creationType>(communicator)));
    }
    // public System.Void Reset()
    // Offset: 0x2ADDFF4
    void Reset();
    // public System.Boolean UpdateRoomProperties(System.Collections.Generic.Dictionary`2<System.String,Fusion.SessionProperty> customProperties)
    // Offset: 0x2ADE598
    bool UpdateRoomProperties(::System::Collections::Generic::Dictionary_2<::StringW, ::Fusion::SessionProperty*>* customProperties);
    // public System.Boolean UpdateRoomIsVisible(System.Boolean value)
    // Offset: 0x2ADED90
    bool UpdateRoomIsVisible(bool value);
    // public System.Boolean UpdateRoomIsOpen(System.Boolean value)
    // Offset: 0x2ADEE04
    bool UpdateRoomIsOpen(bool value);
    // public System.Void Update()
    // Offset: 0x2ADEE78
    void Update();
    // public Fusion.Photon.Realtime.EnterRoomParams BuildEnterRoomParams(Fusion.Photon.Realtime.TypedLobby typedLobby, System.String roomName, System.Byte maxPlayers, System.Collections.Generic.Dictionary`2<System.String,Fusion.SessionProperty> customProperties, System.Boolean isOpen, System.Boolean isVisible)
    // Offset: 0x2ADEF20
    ::Fusion::Photon::Realtime::EnterRoomParams* BuildEnterRoomParams(::Fusion::Photon::Realtime::TypedLobby* typedLobby, ::StringW roomName, uint8_t maxPlayers, ::System::Collections::Generic::Dictionary_2<::StringW, ::Fusion::SessionProperty*>* customProperties, bool isOpen, bool isVisible);
    // public Fusion.Photon.Realtime.OpJoinRandomRoomParams BuildJoinParams(Fusion.Photon.Realtime.TypedLobby typedLobby, System.Collections.Generic.Dictionary`2<System.String,Fusion.SessionProperty> customProperties, Fusion.Photon.Realtime.MatchmakingMode matchmakingMode)
    // Offset: 0x2ADF264
    ::Fusion::Photon::Realtime::OpJoinRandomRoomParams* BuildJoinParams(::Fusion::Photon::Realtime::TypedLobby* typedLobby, ::System::Collections::Generic::Dictionary_2<::StringW, ::Fusion::SessionProperty*>* customProperties, ::Fusion::Photon::Realtime::MatchmakingMode matchmakingMode);
    // static private System.Void BuildSessionCustomPropertyHolders(System.Collections.Generic.Dictionary`2<System.String,Fusion.SessionProperty> customProperties, out ExitGames.Client.Photon.Hashtable sessionCustomProperties, out System.String[] publicSessionProperties)
    // Offset: 0x2ADF0F0
    static void BuildSessionCustomPropertyHolders(::System::Collections::Generic::Dictionary_2<::StringW, ::Fusion::SessionProperty*>* customProperties, ByRef<::ExitGames::Client::Photon::Hashtable*> sessionCustomProperties, ByRef<::ArrayW<::StringW>> publicSessionProperties);
    // public System.Void OnJoinedRoom()
    // Offset: 0x2ADF314
    void OnJoinedRoom();
    // public System.Void OnLeftRoom()
    // Offset: 0x2ADF318
    void OnLeftRoom();
    // public System.Void OnCreatedRoom()
    // Offset: 0x2ADF31C
    void OnCreatedRoom();
    // public System.Void OnCreateRoomFailed(System.Int16 returnCode, System.String message)
    // Offset: 0x2ADF320
    void OnCreateRoomFailed(int16_t returnCode, ::StringW message);
    // public System.Void OnFriendListUpdate(System.Collections.Generic.List`1<Fusion.Photon.Realtime.FriendInfo> friendList)
    // Offset: 0x2ADF324
    void OnFriendListUpdate(::System::Collections::Generic::List_1<::Fusion::Photon::Realtime::FriendInfo*>* friendList);
    // public System.Void OnJoinRandomFailed(System.Int16 returnCode, System.String message)
    // Offset: 0x2ADF328
    void OnJoinRandomFailed(int16_t returnCode, ::StringW message);
    // public System.Void OnJoinRoomFailed(System.Int16 returnCode, System.String message)
    // Offset: 0x2ADF32C
    void OnJoinRoomFailed(int16_t returnCode, ::StringW message);
    // public System.Void OnJoinedLobby()
    // Offset: 0x2ADF330
    void OnJoinedLobby();
    // public System.Void OnLeftLobby()
    // Offset: 0x2ADF334
    void OnLeftLobby();
    // public System.Void OnRoomListUpdate(System.Collections.Generic.List`1<Fusion.Photon.Realtime.RoomInfo> roomList)
    // Offset: 0x2ADF338
    void OnRoomListUpdate(::System::Collections::Generic::List_1<::Fusion::Photon::Realtime::RoomInfo*>* roomList);
    // public System.Void OnLobbyStatisticsUpdate(System.Collections.Generic.List`1<Fusion.Photon.Realtime.TypedLobbyInfo> lobbyStatistics)
    // Offset: 0x2ADF33C
    void OnLobbyStatisticsUpdate(::System::Collections::Generic::List_1<::Fusion::Photon::Realtime::TypedLobbyInfo*>* lobbyStatistics);
    // public System.Void OnMasterClientSwitched(Fusion.Photon.Realtime.Player newMasterClient)
    // Offset: 0x2ADF340
    void OnMasterClientSwitched(::Fusion::Photon::Realtime::Player* newMasterClient);
    // public System.Void OnPlayerEnteredRoom(Fusion.Photon.Realtime.Player newPlayer)
    // Offset: 0x2ADF35C
    void OnPlayerEnteredRoom(::Fusion::Photon::Realtime::Player* newPlayer);
    // public System.Void OnPlayerLeftRoom(Fusion.Photon.Realtime.Player otherPlayer)
    // Offset: 0x2ADF378
    void OnPlayerLeftRoom(::Fusion::Photon::Realtime::Player* otherPlayer);
    // public System.Void OnPlayerPropertiesUpdate(Fusion.Photon.Realtime.Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
    // Offset: 0x2ADF394
    void OnPlayerPropertiesUpdate(::Fusion::Photon::Realtime::Player* targetPlayer, ::ExitGames::Client::Photon::Hashtable* changedProps);
    // public System.Void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
    // Offset: 0x2ADF398
    void OnRoomPropertiesUpdate(::ExitGames::Client::Photon::Hashtable* propertiesThatChanged);
    // public override System.Boolean ConnectUsingSettings(Fusion.Photon.Realtime.AppSettings appSettings)
    // Offset: 0x2ADDFF8
    // Implemented from: Fusion.Photon.Realtime.LoadBalancingClient
    // Base method: System.Boolean LoadBalancingClient::ConnectUsingSettings(Fusion.Photon.Realtime.AppSettings appSettings)
    bool ConnectUsingSettings(::Fusion::Photon::Realtime::AppSettings* appSettings);
  }; // Fusion.Photon.Realtime.FusionRelayClient
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::Photon::Realtime::FusionRelayClient::StartFallbackSendAck
// Il2CppName: StartFallbackSendAck
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::FusionRelayClient::*)()>(&Fusion::Photon::Realtime::FusionRelayClient::StartFallbackSendAck)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::FusionRelayClient*), "StartFallbackSendAck", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::FusionRelayClient::StopFallbackSendAck
// Il2CppName: StopFallbackSendAck
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::FusionRelayClient::*)()>(&Fusion::Photon::Realtime::FusionRelayClient::StopFallbackSendAck)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::FusionRelayClient*), "StopFallbackSendAck", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::FusionRelayClient::BackgroundAcksTask
// Il2CppName: BackgroundAcksTask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::Photon::Realtime::FusionRelayClient::*)()>(&Fusion::Photon::Realtime::FusionRelayClient::BackgroundAcksTask)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::FusionRelayClient*), "BackgroundAcksTask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::FusionRelayClient::OnEventHandler
// Il2CppName: OnEventHandler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::FusionRelayClient::*)(::ExitGames::Client::Photon::EventData*)>(&Fusion::Photon::Realtime::FusionRelayClient::OnEventHandler)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "EventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::FusionRelayClient*), "OnEventHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::FusionRelayClient::SendEvent
// Il2CppName: SendEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::Photon::Realtime::FusionRelayClient::*)(int, uint8_t, uint8_t*, int, bool)>(&Fusion::Photon::Realtime::FusionRelayClient::SendEvent)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* eventCode = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* buffer = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* bufferLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* reliable = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::FusionRelayClient*), "SendEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, eventCode, buffer, bufferLength, reliable});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::FusionRelayClient::ExtractData
// Il2CppName: ExtractData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::FusionRelayClient::*)(::Il2CppObject*, ::ArrayW<uint8_t>, ByRef<int>)>(&Fusion::Photon::Realtime::FusionRelayClient::ExtractData)> {
  static const MethodInfo* get() {
    static auto* dataObj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* bufferLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::FusionRelayClient*), "ExtractData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dataObj, buffer, bufferLength});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::FusionRelayClient::get_IsReadyAndInRoom
// Il2CppName: get_IsReadyAndInRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::Photon::Realtime::FusionRelayClient::*)()>(&Fusion::Photon::Realtime::FusionRelayClient::get_IsReadyAndInRoom)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::FusionRelayClient*), "get_IsReadyAndInRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::FusionRelayClient::add_OnRoomChanged
// Il2CppName: add_OnRoomChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::FusionRelayClient::*)(::System::Action*)>(&Fusion::Photon::Realtime::FusionRelayClient::add_OnRoomChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::FusionRelayClient*), "add_OnRoomChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::FusionRelayClient::remove_OnRoomChanged
// Il2CppName: remove_OnRoomChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::FusionRelayClient::*)(::System::Action*)>(&Fusion::Photon::Realtime::FusionRelayClient::remove_OnRoomChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::FusionRelayClient*), "remove_OnRoomChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::FusionRelayClient::get_UseDefaultPorts
// Il2CppName: get_UseDefaultPorts
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::Photon::Realtime::FusionRelayClient::*)()>(&Fusion::Photon::Realtime::FusionRelayClient::get_UseDefaultPorts)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::FusionRelayClient*), "get_UseDefaultPorts", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::FusionRelayClient::set_UseDefaultPorts
// Il2CppName: set_UseDefaultPorts
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::FusionRelayClient::*)(bool)>(&Fusion::Photon::Realtime::FusionRelayClient::set_UseDefaultPorts)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::FusionRelayClient*), "set_UseDefaultPorts", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::FusionRelayClient::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Fusion::Photon::Realtime::FusionRelayClient::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::FusionRelayClient::*)()>(&Fusion::Photon::Realtime::FusionRelayClient::Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::FusionRelayClient*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::FusionRelayClient::UpdateRoomProperties
// Il2CppName: UpdateRoomProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::Photon::Realtime::FusionRelayClient::*)(::System::Collections::Generic::Dictionary_2<::StringW, ::Fusion::SessionProperty*>*)>(&Fusion::Photon::Realtime::FusionRelayClient::UpdateRoomProperties)> {
  static const MethodInfo* get() {
    static auto* customProperties = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("Fusion", "SessionProperty")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::FusionRelayClient*), "UpdateRoomProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{customProperties});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::FusionRelayClient::UpdateRoomIsVisible
// Il2CppName: UpdateRoomIsVisible
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::Photon::Realtime::FusionRelayClient::*)(bool)>(&Fusion::Photon::Realtime::FusionRelayClient::UpdateRoomIsVisible)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::FusionRelayClient*), "UpdateRoomIsVisible", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::FusionRelayClient::UpdateRoomIsOpen
// Il2CppName: UpdateRoomIsOpen
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::Photon::Realtime::FusionRelayClient::*)(bool)>(&Fusion::Photon::Realtime::FusionRelayClient::UpdateRoomIsOpen)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::FusionRelayClient*), "UpdateRoomIsOpen", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::FusionRelayClient::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::FusionRelayClient::*)()>(&Fusion::Photon::Realtime::FusionRelayClient::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::FusionRelayClient*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::FusionRelayClient::BuildEnterRoomParams
// Il2CppName: BuildEnterRoomParams
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::Photon::Realtime::EnterRoomParams* (Fusion::Photon::Realtime::FusionRelayClient::*)(::Fusion::Photon::Realtime::TypedLobby*, ::StringW, uint8_t, ::System::Collections::Generic::Dictionary_2<::StringW, ::Fusion::SessionProperty*>*, bool, bool)>(&Fusion::Photon::Realtime::FusionRelayClient::BuildEnterRoomParams)> {
  static const MethodInfo* get() {
    static auto* typedLobby = &::il2cpp_utils::GetClassFromName("Fusion.Photon.Realtime", "TypedLobby")->byval_arg;
    static auto* roomName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* maxPlayers = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* customProperties = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("Fusion", "SessionProperty")})->byval_arg;
    static auto* isOpen = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* isVisible = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::FusionRelayClient*), "BuildEnterRoomParams", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{typedLobby, roomName, maxPlayers, customProperties, isOpen, isVisible});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::FusionRelayClient::BuildJoinParams
// Il2CppName: BuildJoinParams
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::Photon::Realtime::OpJoinRandomRoomParams* (Fusion::Photon::Realtime::FusionRelayClient::*)(::Fusion::Photon::Realtime::TypedLobby*, ::System::Collections::Generic::Dictionary_2<::StringW, ::Fusion::SessionProperty*>*, ::Fusion::Photon::Realtime::MatchmakingMode)>(&Fusion::Photon::Realtime::FusionRelayClient::BuildJoinParams)> {
  static const MethodInfo* get() {
    static auto* typedLobby = &::il2cpp_utils::GetClassFromName("Fusion.Photon.Realtime", "TypedLobby")->byval_arg;
    static auto* customProperties = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("Fusion", "SessionProperty")})->byval_arg;
    static auto* matchmakingMode = &::il2cpp_utils::GetClassFromName("Fusion.Photon.Realtime", "MatchmakingMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::FusionRelayClient*), "BuildJoinParams", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{typedLobby, customProperties, matchmakingMode});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::FusionRelayClient::BuildSessionCustomPropertyHolders
// Il2CppName: BuildSessionCustomPropertyHolders
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Collections::Generic::Dictionary_2<::StringW, ::Fusion::SessionProperty*>*, ByRef<::ExitGames::Client::Photon::Hashtable*>, ByRef<::ArrayW<::StringW>>)>(&Fusion::Photon::Realtime::FusionRelayClient::BuildSessionCustomPropertyHolders)> {
  static const MethodInfo* get() {
    static auto* customProperties = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("Fusion", "SessionProperty")})->byval_arg;
    static auto* sessionCustomProperties = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "Hashtable")->this_arg;
    static auto* publicSessionProperties = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::FusionRelayClient*), "BuildSessionCustomPropertyHolders", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{customProperties, sessionCustomProperties, publicSessionProperties});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::FusionRelayClient::OnJoinedRoom
// Il2CppName: OnJoinedRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::FusionRelayClient::*)()>(&Fusion::Photon::Realtime::FusionRelayClient::OnJoinedRoom)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::FusionRelayClient*), "OnJoinedRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::FusionRelayClient::OnLeftRoom
// Il2CppName: OnLeftRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::FusionRelayClient::*)()>(&Fusion::Photon::Realtime::FusionRelayClient::OnLeftRoom)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::FusionRelayClient*), "OnLeftRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::FusionRelayClient::OnCreatedRoom
// Il2CppName: OnCreatedRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::FusionRelayClient::*)()>(&Fusion::Photon::Realtime::FusionRelayClient::OnCreatedRoom)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::FusionRelayClient*), "OnCreatedRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::FusionRelayClient::OnCreateRoomFailed
// Il2CppName: OnCreateRoomFailed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::FusionRelayClient::*)(int16_t, ::StringW)>(&Fusion::Photon::Realtime::FusionRelayClient::OnCreateRoomFailed)> {
  static const MethodInfo* get() {
    static auto* returnCode = &::il2cpp_utils::GetClassFromName("System", "Int16")->byval_arg;
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::FusionRelayClient*), "OnCreateRoomFailed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{returnCode, message});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::FusionRelayClient::OnFriendListUpdate
// Il2CppName: OnFriendListUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::FusionRelayClient::*)(::System::Collections::Generic::List_1<::Fusion::Photon::Realtime::FriendInfo*>*)>(&Fusion::Photon::Realtime::FusionRelayClient::OnFriendListUpdate)> {
  static const MethodInfo* get() {
    static auto* friendList = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Fusion.Photon.Realtime", "FriendInfo")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::FusionRelayClient*), "OnFriendListUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{friendList});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::FusionRelayClient::OnJoinRandomFailed
// Il2CppName: OnJoinRandomFailed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::FusionRelayClient::*)(int16_t, ::StringW)>(&Fusion::Photon::Realtime::FusionRelayClient::OnJoinRandomFailed)> {
  static const MethodInfo* get() {
    static auto* returnCode = &::il2cpp_utils::GetClassFromName("System", "Int16")->byval_arg;
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::FusionRelayClient*), "OnJoinRandomFailed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{returnCode, message});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::FusionRelayClient::OnJoinRoomFailed
// Il2CppName: OnJoinRoomFailed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::FusionRelayClient::*)(int16_t, ::StringW)>(&Fusion::Photon::Realtime::FusionRelayClient::OnJoinRoomFailed)> {
  static const MethodInfo* get() {
    static auto* returnCode = &::il2cpp_utils::GetClassFromName("System", "Int16")->byval_arg;
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::FusionRelayClient*), "OnJoinRoomFailed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{returnCode, message});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::FusionRelayClient::OnJoinedLobby
// Il2CppName: OnJoinedLobby
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::FusionRelayClient::*)()>(&Fusion::Photon::Realtime::FusionRelayClient::OnJoinedLobby)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::FusionRelayClient*), "OnJoinedLobby", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::FusionRelayClient::OnLeftLobby
// Il2CppName: OnLeftLobby
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::FusionRelayClient::*)()>(&Fusion::Photon::Realtime::FusionRelayClient::OnLeftLobby)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::FusionRelayClient*), "OnLeftLobby", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::FusionRelayClient::OnRoomListUpdate
// Il2CppName: OnRoomListUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::FusionRelayClient::*)(::System::Collections::Generic::List_1<::Fusion::Photon::Realtime::RoomInfo*>*)>(&Fusion::Photon::Realtime::FusionRelayClient::OnRoomListUpdate)> {
  static const MethodInfo* get() {
    static auto* roomList = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Fusion.Photon.Realtime", "RoomInfo")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::FusionRelayClient*), "OnRoomListUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{roomList});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::FusionRelayClient::OnLobbyStatisticsUpdate
// Il2CppName: OnLobbyStatisticsUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::FusionRelayClient::*)(::System::Collections::Generic::List_1<::Fusion::Photon::Realtime::TypedLobbyInfo*>*)>(&Fusion::Photon::Realtime::FusionRelayClient::OnLobbyStatisticsUpdate)> {
  static const MethodInfo* get() {
    static auto* lobbyStatistics = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Fusion.Photon.Realtime", "TypedLobbyInfo")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::FusionRelayClient*), "OnLobbyStatisticsUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{lobbyStatistics});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::FusionRelayClient::OnMasterClientSwitched
// Il2CppName: OnMasterClientSwitched
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::FusionRelayClient::*)(::Fusion::Photon::Realtime::Player*)>(&Fusion::Photon::Realtime::FusionRelayClient::OnMasterClientSwitched)> {
  static const MethodInfo* get() {
    static auto* newMasterClient = &::il2cpp_utils::GetClassFromName("Fusion.Photon.Realtime", "Player")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::FusionRelayClient*), "OnMasterClientSwitched", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newMasterClient});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::FusionRelayClient::OnPlayerEnteredRoom
// Il2CppName: OnPlayerEnteredRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::FusionRelayClient::*)(::Fusion::Photon::Realtime::Player*)>(&Fusion::Photon::Realtime::FusionRelayClient::OnPlayerEnteredRoom)> {
  static const MethodInfo* get() {
    static auto* newPlayer = &::il2cpp_utils::GetClassFromName("Fusion.Photon.Realtime", "Player")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::FusionRelayClient*), "OnPlayerEnteredRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newPlayer});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::FusionRelayClient::OnPlayerLeftRoom
// Il2CppName: OnPlayerLeftRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::FusionRelayClient::*)(::Fusion::Photon::Realtime::Player*)>(&Fusion::Photon::Realtime::FusionRelayClient::OnPlayerLeftRoom)> {
  static const MethodInfo* get() {
    static auto* otherPlayer = &::il2cpp_utils::GetClassFromName("Fusion.Photon.Realtime", "Player")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::FusionRelayClient*), "OnPlayerLeftRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{otherPlayer});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::FusionRelayClient::OnPlayerPropertiesUpdate
// Il2CppName: OnPlayerPropertiesUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::FusionRelayClient::*)(::Fusion::Photon::Realtime::Player*, ::ExitGames::Client::Photon::Hashtable*)>(&Fusion::Photon::Realtime::FusionRelayClient::OnPlayerPropertiesUpdate)> {
  static const MethodInfo* get() {
    static auto* targetPlayer = &::il2cpp_utils::GetClassFromName("Fusion.Photon.Realtime", "Player")->byval_arg;
    static auto* changedProps = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "Hashtable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::FusionRelayClient*), "OnPlayerPropertiesUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{targetPlayer, changedProps});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::FusionRelayClient::OnRoomPropertiesUpdate
// Il2CppName: OnRoomPropertiesUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Photon::Realtime::FusionRelayClient::*)(::ExitGames::Client::Photon::Hashtable*)>(&Fusion::Photon::Realtime::FusionRelayClient::OnRoomPropertiesUpdate)> {
  static const MethodInfo* get() {
    static auto* propertiesThatChanged = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "Hashtable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::FusionRelayClient*), "OnRoomPropertiesUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{propertiesThatChanged});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::FusionRelayClient::ConnectUsingSettings
// Il2CppName: ConnectUsingSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::Photon::Realtime::FusionRelayClient::*)(::Fusion::Photon::Realtime::AppSettings*)>(&Fusion::Photon::Realtime::FusionRelayClient::ConnectUsingSettings)> {
  static const MethodInfo* get() {
    static auto* appSettings = &::il2cpp_utils::GetClassFromName("Fusion.Photon.Realtime", "AppSettings")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::FusionRelayClient*), "ConnectUsingSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{appSettings});
  }
};
