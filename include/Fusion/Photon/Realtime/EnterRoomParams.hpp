// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Fusion.Photon.Realtime.JoinMode
#include "Fusion/Photon/Realtime/JoinMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Fusion::Photon::Realtime
namespace Fusion::Photon::Realtime {
  // Forward declaring type: RoomOptions
  class RoomOptions;
  // Forward declaring type: TypedLobby
  class TypedLobby;
}
// Forward declaring namespace: ExitGames::Client::Photon
namespace ExitGames::Client::Photon {
  // Forward declaring type: Hashtable
  class Hashtable;
}
// Completed forward declares
// Type namespace: Fusion.Photon.Realtime
namespace Fusion::Photon::Realtime {
  // Forward declaring type: EnterRoomParams
  class EnterRoomParams;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::Photon::Realtime::EnterRoomParams);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::Photon::Realtime::EnterRoomParams*, "Fusion.Photon.Realtime", "EnterRoomParams");
// Type namespace: Fusion.Photon.Realtime
namespace Fusion::Photon::Realtime {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.Photon.Realtime.EnterRoomParams
  // [TokenAttribute] Offset: FFFFFFFF
  class EnterRoomParams : public ::Il2CppObject {
    public:
    public:
    // public System.String RoomName
    // Size: 0x8
    // Offset: 0x10
    ::StringW RoomName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public Fusion.Photon.Realtime.RoomOptions RoomOptions
    // Size: 0x8
    // Offset: 0x18
    ::Fusion::Photon::Realtime::RoomOptions* RoomOptions;
    // Field size check
    static_assert(sizeof(::Fusion::Photon::Realtime::RoomOptions*) == 0x8);
    // public Fusion.Photon.Realtime.TypedLobby Lobby
    // Size: 0x8
    // Offset: 0x20
    ::Fusion::Photon::Realtime::TypedLobby* Lobby;
    // Field size check
    static_assert(sizeof(::Fusion::Photon::Realtime::TypedLobby*) == 0x8);
    // public ExitGames.Client.Photon.Hashtable PlayerProperties
    // Size: 0x8
    // Offset: 0x28
    ::ExitGames::Client::Photon::Hashtable* PlayerProperties;
    // Field size check
    static_assert(sizeof(::ExitGames::Client::Photon::Hashtable*) == 0x8);
    // protected internal System.Boolean OnGameServer
    // Size: 0x1
    // Offset: 0x30
    bool OnGameServer;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // protected internal Fusion.Photon.Realtime.JoinMode JoinMode
    // Size: 0x1
    // Offset: 0x31
    ::Fusion::Photon::Realtime::JoinMode JoinMode;
    // Field size check
    static_assert(sizeof(::Fusion::Photon::Realtime::JoinMode) == 0x1);
    // Padding between fields: JoinMode and: ExpectedUsers
    char __padding5[0x6] = {};
    // public System.String[] ExpectedUsers
    // Size: 0x8
    // Offset: 0x38
    ::ArrayW<::StringW> ExpectedUsers;
    // Field size check
    static_assert(sizeof(::ArrayW<::StringW>) == 0x8);
    public:
    // Get instance field reference: public System.String RoomName
    [[deprecated("Use field access instead!")]] ::StringW& dyn_RoomName();
    // Get instance field reference: public Fusion.Photon.Realtime.RoomOptions RoomOptions
    [[deprecated("Use field access instead!")]] ::Fusion::Photon::Realtime::RoomOptions*& dyn_RoomOptions();
    // Get instance field reference: public Fusion.Photon.Realtime.TypedLobby Lobby
    [[deprecated("Use field access instead!")]] ::Fusion::Photon::Realtime::TypedLobby*& dyn_Lobby();
    // Get instance field reference: public ExitGames.Client.Photon.Hashtable PlayerProperties
    [[deprecated("Use field access instead!")]] ::ExitGames::Client::Photon::Hashtable*& dyn_PlayerProperties();
    // Get instance field reference: protected internal System.Boolean OnGameServer
    [[deprecated("Use field access instead!")]] bool& dyn_OnGameServer();
    // Get instance field reference: protected internal Fusion.Photon.Realtime.JoinMode JoinMode
    [[deprecated("Use field access instead!")]] ::Fusion::Photon::Realtime::JoinMode& dyn_JoinMode();
    // Get instance field reference: public System.String[] ExpectedUsers
    [[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& dyn_ExpectedUsers();
    // public System.Void .ctor()
    // Offset: 0x2AF1014
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static EnterRoomParams* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::EnterRoomParams::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<EnterRoomParams*, creationType>()));
    }
  }; // Fusion.Photon.Realtime.EnterRoomParams
  #pragma pack(pop)
  static check_size<sizeof(EnterRoomParams), 56 + sizeof(::ArrayW<::StringW>)> __Fusion_Photon_Realtime_EnterRoomParamsSizeCheck;
  static_assert(sizeof(EnterRoomParams) == 0x40);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::Photon::Realtime::EnterRoomParams::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
