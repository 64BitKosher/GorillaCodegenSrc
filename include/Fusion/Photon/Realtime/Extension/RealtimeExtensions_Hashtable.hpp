// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: ExitGames::Client::Photon
namespace ExitGames::Client::Photon {
  // Forward declaring type: StreamBuffer
  class StreamBuffer;
  // Forward declaring type: Protocol18
  class Protocol18;
  // Forward declaring type: Hashtable
  class Hashtable;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: Fusion
namespace Fusion {
  // Forward declaring type: SessionProperty
  class SessionProperty;
}
// Completed forward declares
// Type namespace: Fusion.Photon.Realtime.Extension
namespace Fusion::Photon::Realtime::Extension {
  // Forward declaring type: RealtimeExtensions_Hashtable
  class RealtimeExtensions_Hashtable;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::Photon::Realtime::Extension::RealtimeExtensions_Hashtable);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::Photon::Realtime::Extension::RealtimeExtensions_Hashtable*, "Fusion.Photon.Realtime.Extension", "RealtimeExtensions_Hashtable");
// Type namespace: Fusion.Photon.Realtime.Extension
namespace Fusion::Photon::Realtime::Extension {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.Photon.Realtime.Extension.RealtimeExtensions_Hashtable
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class RealtimeExtensions_Hashtable : public ::Il2CppObject {
    public:
    // Get static field: static private readonly ExitGames.Client.Photon.StreamBuffer buffer
    static ::ExitGames::Client::Photon::StreamBuffer* _get_buffer();
    // Set static field: static private readonly ExitGames.Client.Photon.StreamBuffer buffer
    static void _set_buffer(::ExitGames::Client::Photon::StreamBuffer* value);
    // Get static field: static private readonly ExitGames.Client.Photon.Protocol18 protocol
    static ::ExitGames::Client::Photon::Protocol18* _get_protocol();
    // Set static field: static private readonly ExitGames.Client.Photon.Protocol18 protocol
    static void _set_protocol(::ExitGames::Client::Photon::Protocol18* value);
    // static public System.Collections.Generic.Dictionary`2<System.String,Fusion.SessionProperty> ConvertToDictionaryProperty(ExitGames.Client.Photon.Hashtable customProperties)
    // Offset: 0x2AF9B00
    static ::System::Collections::Generic::Dictionary_2<::StringW, ::Fusion::SessionProperty*>* ConvertToDictionaryProperty(::ExitGames::Client::Photon::Hashtable* customProperties);
    // static public ExitGames.Client.Photon.Hashtable ConvertToHashtable(System.Collections.Generic.Dictionary`2<System.String,Fusion.SessionProperty> properties)
    // Offset: 0x2AF9CD0
    static ::ExitGames::Client::Photon::Hashtable* ConvertToHashtable(::System::Collections::Generic::Dictionary_2<::StringW, ::Fusion::SessionProperty*>* properties);
    // static public System.Int32 CalculateTotalSize(ExitGames.Client.Photon.Hashtable hashtable)
    // Offset: 0x2AF9E80
    static int CalculateTotalSize(::ExitGames::Client::Photon::Hashtable* hashtable);
    // static private System.Void .cctor()
    // Offset: 0x2AF9F2C
    static void _cctor();
  }; // Fusion.Photon.Realtime.Extension.RealtimeExtensions_Hashtable
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Extension::RealtimeExtensions_Hashtable::ConvertToDictionaryProperty
// Il2CppName: ConvertToDictionaryProperty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::Fusion::SessionProperty*>* (*)(::ExitGames::Client::Photon::Hashtable*)>(&Fusion::Photon::Realtime::Extension::RealtimeExtensions_Hashtable::ConvertToDictionaryProperty)> {
  static const MethodInfo* get() {
    static auto* customProperties = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "Hashtable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Extension::RealtimeExtensions_Hashtable*), "ConvertToDictionaryProperty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{customProperties});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Extension::RealtimeExtensions_Hashtable::ConvertToHashtable
// Il2CppName: ConvertToHashtable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ExitGames::Client::Photon::Hashtable* (*)(::System::Collections::Generic::Dictionary_2<::StringW, ::Fusion::SessionProperty*>*)>(&Fusion::Photon::Realtime::Extension::RealtimeExtensions_Hashtable::ConvertToHashtable)> {
  static const MethodInfo* get() {
    static auto* properties = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("Fusion", "SessionProperty")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Extension::RealtimeExtensions_Hashtable*), "ConvertToHashtable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{properties});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Extension::RealtimeExtensions_Hashtable::CalculateTotalSize
// Il2CppName: CalculateTotalSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::ExitGames::Client::Photon::Hashtable*)>(&Fusion::Photon::Realtime::Extension::RealtimeExtensions_Hashtable::CalculateTotalSize)> {
  static const MethodInfo* get() {
    static auto* hashtable = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "Hashtable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Extension::RealtimeExtensions_Hashtable*), "CalculateTotalSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{hashtable});
  }
};
// Writing MetadataGetter for method: Fusion::Photon::Realtime::Extension::RealtimeExtensions_Hashtable::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Fusion::Photon::Realtime::Extension::RealtimeExtensions_Hashtable::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Photon::Realtime::Extension::RealtimeExtensions_Hashtable*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
