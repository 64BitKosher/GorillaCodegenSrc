// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Fusion.CloudServices
#include "Fusion/CloudServices.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.Runtime.CompilerServices.IAsyncStateMachine
#include "System/Runtime/CompilerServices/IAsyncStateMachine.hpp"
// Including type: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1
#include "System/Runtime/CompilerServices/AsyncTaskMethodBuilder_1.hpp"
// Including type: Fusion.Sockets.NetAddress
#include "Fusion/Sockets/NetAddress.hpp"
// Including type: System.Net.Sockets.AddressFamily
#include "System/Net/Sockets/AddressFamily.hpp"
// Including type: System.Runtime.CompilerServices.YieldAwaitable/YieldAwaiter
#include "System/Runtime/CompilerServices/YieldAwaitable_YieldAwaiter.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
// Including type: System.Runtime.CompilerServices.TaskAwaiter
#include "System/Runtime/CompilerServices/TaskAwaiter.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Fusion::Sockets::Stun
namespace Fusion::Sockets::Stun {
  // Forward declaring type: StunResult
  class StunResult;
}
// Forward declaring namespace: System::Diagnostics
namespace System::Diagnostics {
  // Forward declaring type: Stopwatch
  class Stopwatch;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Fusion::CloudServices::$QueryReflexiveInfo$d__91, "Fusion", "CloudServices/<QueryReflexiveInfo>d__91");
// Type namespace: Fusion
namespace Fusion {
  // WARNING Size may be invalid!
  // Autogenerated type: Fusion.CloudServices/<QueryReflexiveInfo>d__91
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  struct CloudServices::$QueryReflexiveInfo$d__91/*, public ::System::ValueType, public ::System::Runtime::CompilerServices::IAsyncStateMachine*/ {
    public:
    public:
    // public System.Int32 <>1__state
    // Size: 0x4
    // Offset: 0x0
    int $$1__state;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<Fusion.Sockets.Stun.StunResult> <>t__builder
    // Size: 0xFFFFFFFF
    // Offset: 0x8
    ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::Fusion::Sockets::Stun::StunResult*> $$t__builder;
    // public Fusion.CloudServices <>4__this
    // Size: 0x8
    // Offset: 0x20
    ::Fusion::CloudServices* $$4__this;
    // Field size check
    static_assert(sizeof(::Fusion::CloudServices*) == 0x8);
    // private Fusion.Sockets.NetAddress <publicAddr1>5__2
    // Size: 0x18
    // Offset: 0x28
    ::Fusion::Sockets::NetAddress $publicAddr1$5__2;
    // Field size check
    static_assert(sizeof(::Fusion::Sockets::NetAddress) == 0x18);
    // private Fusion.Sockets.NetAddress <publicAddr2>5__3
    // Size: 0x18
    // Offset: 0x40
    ::Fusion::Sockets::NetAddress $publicAddr2$5__3;
    // Field size check
    static_assert(sizeof(::Fusion::Sockets::NetAddress) == 0x18);
    // private Fusion.Sockets.NetAddress <localAddr>5__4
    // Size: 0x18
    // Offset: 0x58
    ::Fusion::Sockets::NetAddress $localAddr$5__4;
    // Field size check
    static_assert(sizeof(::Fusion::Sockets::NetAddress) == 0x18);
    // private System.Net.Sockets.AddressFamily <family>5__5
    // Size: 0x4
    // Offset: 0x70
    ::System::Net::Sockets::AddressFamily $family$5__5;
    // Field size check
    static_assert(sizeof(::System::Net::Sockets::AddressFamily) == 0x4);
    // private System.Runtime.CompilerServices.YieldAwaitable/YieldAwaiter <>u__1
    // Size: 0x1
    // Offset: 0x74
    ::System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter $$u__1;
    // Field size check
    static_assert(sizeof(::System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter) == 0x1);
    // private System.Int32 <attemptDelay>5__6
    // Size: 0x4
    // Offset: 0x78
    int $attemptDelay$5__6;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 <stunTimeout>5__7
    // Size: 0x4
    // Offset: 0x7C
    int $stunTimeout$5__7;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Guid <requestID>5__8
    // Size: 0x10
    // Offset: 0x80
    ::System::Guid $requestID$5__8;
    // Field size check
    static_assert(sizeof(::System::Guid) == 0x10);
    // private System.Diagnostics.Stopwatch <watch>5__9
    // Size: 0x8
    // Offset: 0x90
    ::System::Diagnostics::Stopwatch* $watch$5__9;
    // Field size check
    static_assert(sizeof(::System::Diagnostics::Stopwatch*) == 0x8);
    // private System.Diagnostics.Stopwatch <attemptWatch>5__10
    // Size: 0x8
    // Offset: 0x98
    ::System::Diagnostics::Stopwatch* $attemptWatch$5__10;
    // Field size check
    static_assert(sizeof(::System::Diagnostics::Stopwatch*) == 0x8);
    // private System.Runtime.CompilerServices.TaskAwaiter <>u__2
    // Size: 0x8
    // Offset: 0xA0
    ::System::Runtime::CompilerServices::TaskAwaiter $$u__2;
    // Field size check
    static_assert(sizeof(::System::Runtime::CompilerServices::TaskAwaiter) == 0x8);
    // private System.Boolean <validRequest>5__11
    // Size: 0x1
    // Offset: 0xA8
    bool $validRequest$5__11;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating value type constructor for type: $QueryReflexiveInfo$d__91
    constexpr $QueryReflexiveInfo$d__91(int $$1__state_ = {}, ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::Fusion::Sockets::Stun::StunResult*> $$t__builder_ = {}, ::Fusion::CloudServices* $$4__this_ = {}, ::Fusion::Sockets::NetAddress $publicAddr1$5__2_ = {}, ::Fusion::Sockets::NetAddress $publicAddr2$5__3_ = {}, ::Fusion::Sockets::NetAddress $localAddr$5__4_ = {}, ::System::Net::Sockets::AddressFamily $family$5__5_ = {}, ::System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter $$u__1_ = {}, int $attemptDelay$5__6_ = {}, int $stunTimeout$5__7_ = {}, ::System::Guid $requestID$5__8_ = {}, ::System::Diagnostics::Stopwatch* $watch$5__9_ = {}, ::System::Diagnostics::Stopwatch* $attemptWatch$5__10_ = {}, ::System::Runtime::CompilerServices::TaskAwaiter $$u__2_ = {}, bool $validRequest$5__11_ = {}) noexcept : $$1__state{$$1__state_}, $$t__builder{$$t__builder_}, $$4__this{$$4__this_}, $publicAddr1$5__2{$publicAddr1$5__2_}, $publicAddr2$5__3{$publicAddr2$5__3_}, $localAddr$5__4{$localAddr$5__4_}, $family$5__5{$family$5__5_}, $$u__1{$$u__1_}, $attemptDelay$5__6{$attemptDelay$5__6_}, $stunTimeout$5__7{$stunTimeout$5__7_}, $requestID$5__8{$requestID$5__8_}, $watch$5__9{$watch$5__9_}, $attemptWatch$5__10{$attemptWatch$5__10_}, $$u__2{$$u__2_}, $validRequest$5__11{$validRequest$5__11_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::System::Runtime::CompilerServices::IAsyncStateMachine
    operator ::System::Runtime::CompilerServices::IAsyncStateMachine() noexcept {
      return *reinterpret_cast<::System::Runtime::CompilerServices::IAsyncStateMachine*>(this);
    }
    // Get instance field reference: public System.Int32 <>1__state
    [[deprecated("Use field access instead!")]] int& dyn_$$1__state();
    // Get instance field reference: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<Fusion.Sockets.Stun.StunResult> <>t__builder
    [[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::Fusion::Sockets::Stun::StunResult*>& dyn_$$t__builder();
    // Get instance field reference: public Fusion.CloudServices <>4__this
    [[deprecated("Use field access instead!")]] ::Fusion::CloudServices*& dyn_$$4__this();
    // Get instance field reference: private Fusion.Sockets.NetAddress <publicAddr1>5__2
    [[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetAddress& dyn_$publicAddr1$5__2();
    // Get instance field reference: private Fusion.Sockets.NetAddress <publicAddr2>5__3
    [[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetAddress& dyn_$publicAddr2$5__3();
    // Get instance field reference: private Fusion.Sockets.NetAddress <localAddr>5__4
    [[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetAddress& dyn_$localAddr$5__4();
    // Get instance field reference: private System.Net.Sockets.AddressFamily <family>5__5
    [[deprecated("Use field access instead!")]] ::System::Net::Sockets::AddressFamily& dyn_$family$5__5();
    // Get instance field reference: private System.Runtime.CompilerServices.YieldAwaitable/YieldAwaiter <>u__1
    [[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter& dyn_$$u__1();
    // Get instance field reference: private System.Int32 <attemptDelay>5__6
    [[deprecated("Use field access instead!")]] int& dyn_$attemptDelay$5__6();
    // Get instance field reference: private System.Int32 <stunTimeout>5__7
    [[deprecated("Use field access instead!")]] int& dyn_$stunTimeout$5__7();
    // Get instance field reference: private System.Guid <requestID>5__8
    [[deprecated("Use field access instead!")]] ::System::Guid& dyn_$requestID$5__8();
    // Get instance field reference: private System.Diagnostics.Stopwatch <watch>5__9
    [[deprecated("Use field access instead!")]] ::System::Diagnostics::Stopwatch*& dyn_$watch$5__9();
    // Get instance field reference: private System.Diagnostics.Stopwatch <attemptWatch>5__10
    [[deprecated("Use field access instead!")]] ::System::Diagnostics::Stopwatch*& dyn_$attemptWatch$5__10();
    // Get instance field reference: private System.Runtime.CompilerServices.TaskAwaiter <>u__2
    [[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& dyn_$$u__2();
    // Get instance field reference: private System.Boolean <validRequest>5__11
    [[deprecated("Use field access instead!")]] bool& dyn_$validRequest$5__11();
    // private System.Void MoveNext()
    // Offset: 0x2B04D14
    void MoveNext();
    // private System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)
    // Offset: 0x2B05A68
    void SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine);
  }; // Fusion.CloudServices/<QueryReflexiveInfo>d__91
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::CloudServices::$QueryReflexiveInfo$d__91::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::CloudServices::$QueryReflexiveInfo$d__91::*)()>(&Fusion::CloudServices::$QueryReflexiveInfo$d__91::MoveNext)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices::$QueryReflexiveInfo$d__91), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::$QueryReflexiveInfo$d__91::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::CloudServices::$QueryReflexiveInfo$d__91::*)(::System::Runtime::CompilerServices::IAsyncStateMachine*)>(&Fusion::CloudServices::$QueryReflexiveInfo$d__91::SetStateMachine)> {
  static const MethodInfo* get() {
    static auto* stateMachine = &::il2cpp_utils::GetClassFromName("System.Runtime.CompilerServices", "IAsyncStateMachine")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices::$QueryReflexiveInfo$d__91), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stateMachine});
  }
};
