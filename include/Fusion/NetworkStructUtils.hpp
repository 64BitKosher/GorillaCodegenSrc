// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
  // Forward declaring type: ValueType
  class ValueType;
}
// Forward declaring namespace: Fusion
namespace Fusion {
  // Forward declaring type: INetworkStruct
  class INetworkStruct;
}
// Completed forward declares
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: NetworkStructUtils
  class NetworkStructUtils;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::NetworkStructUtils);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::NetworkStructUtils*, "Fusion", "NetworkStructUtils");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.NetworkStructUtils
  // [TokenAttribute] Offset: FFFFFFFF
  class NetworkStructUtils : public ::Il2CppObject {
    public:
    // Get static field: static private System.Collections.Generic.Dictionary`2<System.Type,System.Int32> _wordCounts
    static ::System::Collections::Generic::Dictionary_2<::System::Type*, int>* _get__wordCounts();
    // Set static field: static private System.Collections.Generic.Dictionary`2<System.Type,System.Int32> _wordCounts
    static void _set__wordCounts(::System::Collections::Generic::Dictionary_2<::System::Type*, int>* value);
    // static System.Void ResetStatics()
    // Offset: 0x2B8912C
    static void ResetStatics();
    // static public System.Int32 GetWordCount()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static int GetWordCount() {
      static_assert(std::is_convertible_v<T, ::System::ValueType*> && std::is_convertible_v<std::remove_pointer_t<T>, ::Fusion::INetworkStruct>);
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkStructUtils::GetWordCount");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion", "NetworkStructUtils", "GetWordCount", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method);
    }
    // static public System.Int32 GetWordCount(System.Type type)
    // Offset: 0x2B891A4
    static int GetWordCount(::System::Type* type);
    // static private System.Void .cctor()
    // Offset: 0x2B89510
    static void _cctor();
  }; // Fusion.NetworkStructUtils
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::NetworkStructUtils::ResetStatics
// Il2CppName: ResetStatics
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Fusion::NetworkStructUtils::ResetStatics)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkStructUtils*), "ResetStatics", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkStructUtils::GetWordCount
// Il2CppName: GetWordCount
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Fusion::NetworkStructUtils::GetWordCount
// Il2CppName: GetWordCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::Type*)>(&Fusion::NetworkStructUtils::GetWordCount)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkStructUtils*), "GetWordCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkStructUtils::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Fusion::NetworkStructUtils::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkStructUtils*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
