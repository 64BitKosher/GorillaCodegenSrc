// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1
#include "UnityEngine/ResourceManagement/AsyncOperations/AsyncOperationHandle_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Fusion
namespace Fusion {
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: System::Threading::Tasks
namespace System::Threading::Tasks {
  // Forward declaring type: Task
  class Task;
}
// Completed forward declares
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: FusionAddressablePrefabsPreloader
  class FusionAddressablePrefabsPreloader;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::FusionAddressablePrefabsPreloader);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::FusionAddressablePrefabsPreloader*, "Fusion", "FusionAddressablePrefabsPreloader");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.FusionAddressablePrefabsPreloader
  // [TokenAttribute] Offset: FFFFFFFF
  class FusionAddressablePrefabsPreloader : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::Fusion::FusionAddressablePrefabsPreloader::$Start$d__1
    struct $Start$d__1;
    public:
    // private System.Collections.Generic.List`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<UnityEngine.GameObject>> _handles
    // Size: 0x8
    // Offset: 0x20
    ::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::GameObject*>>* handles;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::GameObject*>>*) == 0x8);
    public:
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<UnityEngine.GameObject>> _handles
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::GameObject*>>*& dyn__handles();
    // private System.Threading.Tasks.Task Start()
    // Offset: 0x2AD2270
    ::System::Threading::Tasks::Task* Start();
    // private System.Void OnDestroy()
    // Offset: 0x2AD235C
    void OnDestroy();
    // public System.Void .ctor()
    // Offset: 0x2AD24EC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static FusionAddressablePrefabsPreloader* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::FusionAddressablePrefabsPreloader::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<FusionAddressablePrefabsPreloader*, creationType>()));
    }
  }; // Fusion.FusionAddressablePrefabsPreloader
  #pragma pack(pop)
  static check_size<sizeof(FusionAddressablePrefabsPreloader), 32 + sizeof(::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::GameObject*>>*)> __Fusion_FusionAddressablePrefabsPreloaderSizeCheck;
  static_assert(sizeof(FusionAddressablePrefabsPreloader) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::FusionAddressablePrefabsPreloader::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task* (Fusion::FusionAddressablePrefabsPreloader::*)()>(&Fusion::FusionAddressablePrefabsPreloader::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::FusionAddressablePrefabsPreloader*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::FusionAddressablePrefabsPreloader::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::FusionAddressablePrefabsPreloader::*)()>(&Fusion::FusionAddressablePrefabsPreloader::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::FusionAddressablePrefabsPreloader*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::FusionAddressablePrefabsPreloader::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
