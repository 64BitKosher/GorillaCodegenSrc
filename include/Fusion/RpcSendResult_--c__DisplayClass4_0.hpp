// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Fusion.RpcSendResult
#include "Fusion/RpcSendResult.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: StringBuilder
  class StringBuilder;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Fusion::RpcSendResult::$$c__DisplayClass4_0, "Fusion", "RpcSendResult/<>c__DisplayClass4_0");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x8
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.RpcSendResult/<>c__DisplayClass4_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  struct RpcSendResult::$$c__DisplayClass4_0/*, public ::System::ValueType*/ {
    public:
    public:
    // public System.Text.StringBuilder builder
    // Size: 0x8
    // Offset: 0x0
    ::System::Text::StringBuilder* builder;
    // Field size check
    static_assert(sizeof(::System::Text::StringBuilder*) == 0x8);
    public:
    // Creating value type constructor for type: $$c__DisplayClass4_0
    constexpr $$c__DisplayClass4_0(::System::Text::StringBuilder* builder_ = {}) noexcept : builder{builder_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating conversion operator: operator ::System::Text::StringBuilder*
    constexpr operator ::System::Text::StringBuilder*() const noexcept {
      return builder;
    }
    // Get instance field reference: public System.Text.StringBuilder builder
    [[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& dyn_builder();
  }; // Fusion.RpcSendResult/<>c__DisplayClass4_0
  #pragma pack(pop)
  static check_size<sizeof(RpcSendResult::$$c__DisplayClass4_0), 0 + sizeof(::System::Text::StringBuilder*)> __Fusion_RpcSendResult_$$c__DisplayClass4_0SizeCheck;
  static_assert(sizeof(RpcSendResult::$$c__DisplayClass4_0) == 0x8);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
