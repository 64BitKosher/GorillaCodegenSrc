// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Fusion
namespace Fusion {
  // Forward declaring type: SerializableDictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class SerializableDictionary_2;
}
// Completed forward declares
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: SerializableDictionary
  class SerializableDictionary;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::SerializableDictionary);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::SerializableDictionary*, "Fusion", "SerializableDictionary");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.SerializableDictionary
  // [TokenAttribute] Offset: FFFFFFFF
  class SerializableDictionary : public ::Il2CppObject {
    public:
    // static public Fusion.SerializableDictionary`2<TKey,TValue> Create()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class TKey, class TValue>
    static ::Fusion::SerializableDictionary_2<TKey, TValue>* Create() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SerializableDictionary::Create");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion", "SerializableDictionary", "Create", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TKey>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TValue>::get()}, ::std::vector<const Il2CppType*>{})));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TKey>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TValue>::get()})));
      return ::il2cpp_utils::RunMethodRethrow<::Fusion::SerializableDictionary_2<TKey, TValue>*, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method);
    }
    // protected System.Void .ctor()
    // Offset: 0x2B4A5A8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SerializableDictionary* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SerializableDictionary::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SerializableDictionary*, creationType>()));
    }
  }; // Fusion.SerializableDictionary
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::SerializableDictionary::Create
// Il2CppName: Create
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Fusion::SerializableDictionary::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
