// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: Fusion.GameMode
#include "Fusion/GameMode.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: Fusion.Sockets.NetAddress
#include "Fusion/Sockets/NetAddress.hpp"
// Including type: Fusion.SceneRef
#include "Fusion/SceneRef.hpp"
// Including type: Fusion.Photon.Realtime.MatchmakingMode
#include "Fusion/Photon/Realtime/MatchmakingMode.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Fusion
namespace Fusion {
  // Forward declaring type: INetworkObjectPool
  class INetworkObjectPool;
  // Forward declaring type: INetworkSceneManager
  class INetworkSceneManager;
  // Forward declaring type: NetworkProjectConfig
  class NetworkProjectConfig;
  // Forward declaring type: NetworkRunner
  class NetworkRunner;
  // Forward declaring type: SessionProperty
  class SessionProperty;
  // Forward declaring type: HostMigrationToken
  class HostMigrationToken;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: Type
  class Type;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: Fusion::Photon::Realtime
namespace Fusion::Photon::Realtime {
  // Forward declaring type: AuthenticationValues
  class AuthenticationValues;
  // Forward declaring type: AppSettings
  class AppSettings;
}
// Completed forward declares
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: StartGameArgs
  struct StartGameArgs;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Fusion::StartGameArgs, "Fusion", "StartGameArgs");
// Type namespace: Fusion
namespace Fusion {
  // WARNING Size may be invalid!
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: Fusion.StartGameArgs
  // [TokenAttribute] Offset: FFFFFFFF
  struct StartGameArgs/*, public ::System::ValueType*/ {
    public:
    public:
    // public Fusion.GameMode GameMode
    // Size: 0x4
    // Offset: 0x0
    ::Fusion::GameMode GameMode;
    // Field size check
    static_assert(sizeof(::Fusion::GameMode) == 0x4);
    // public System.String SessionName
    // Size: 0x8
    // Offset: 0x8
    ::StringW SessionName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Nullable`1<Fusion.Sockets.NetAddress> Address
    // Size: 0xFFFFFFFF
    // Offset: 0x10
    ::System::Nullable_1<::Fusion::Sockets::NetAddress> Address;
    // public System.Nullable`1<Fusion.Sockets.NetAddress> CustomPublicAddress
    // Size: 0xFFFFFFFF
    // Offset: 0x30
    ::System::Nullable_1<::Fusion::Sockets::NetAddress> CustomPublicAddress;
    // public Fusion.INetworkObjectPool ObjectPool
    // Size: 0x8
    // Offset: 0x50
    ::Fusion::INetworkObjectPool* ObjectPool;
    // Field size check
    static_assert(sizeof(::Fusion::INetworkObjectPool*) == 0x8);
    // public Fusion.INetworkSceneManager SceneManager
    // Size: 0x8
    // Offset: 0x58
    ::Fusion::INetworkSceneManager* SceneManager;
    // Field size check
    static_assert(sizeof(::Fusion::INetworkSceneManager*) == 0x8);
    // public Fusion.NetworkProjectConfig Config
    // Size: 0x8
    // Offset: 0x60
    ::Fusion::NetworkProjectConfig* Config;
    // Field size check
    static_assert(sizeof(::Fusion::NetworkProjectConfig*) == 0x8);
    // public System.Nullable`1<System.Int32> PlayerCount
    // Size: 0xFFFFFFFF
    // Offset: 0x68
    ::System::Nullable_1<int> PlayerCount;
    // public System.Nullable`1<Fusion.SceneRef> Scene
    // Size: 0xFFFFFFFF
    // Offset: 0x70
    ::System::Nullable_1<::Fusion::SceneRef> Scene;
    // public System.Action`1<Fusion.NetworkRunner> Initialized
    // Size: 0x8
    // Offset: 0x78
    ::System::Action_1<::Fusion::NetworkRunner*>* Initialized;
    // Field size check
    static_assert(sizeof(::System::Action_1<::Fusion::NetworkRunner*>*) == 0x8);
    // public System.Boolean DisableNATPunchthrough
    // Size: 0x1
    // Offset: 0x80
    bool DisableNATPunchthrough;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Type[] CustomCallbackInterfaces
    // Size: 0x8
    // Offset: 0x88
    ::ArrayW<::System::Type*> CustomCallbackInterfaces;
    // Field size check
    static_assert(sizeof(::ArrayW<::System::Type*>) == 0x8);
    // public System.Byte[] ConnectionToken
    // Size: 0x8
    // Offset: 0x90
    ::ArrayW<uint8_t> ConnectionToken;
    // Field size check
    static_assert(sizeof(::ArrayW<uint8_t>) == 0x8);
    // public System.Collections.Generic.Dictionary`2<System.String,Fusion.SessionProperty> SessionProperties
    // Size: 0x8
    // Offset: 0x98
    ::System::Collections::Generic::Dictionary_2<::StringW, ::Fusion::SessionProperty*>* SessionProperties;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::StringW, ::Fusion::SessionProperty*>*) == 0x8);
    // public System.Nullable`1<System.Boolean> IsOpen
    // Size: 0xFFFFFFFF
    // Offset: 0xA0
    ::System::Nullable_1<bool> IsOpen;
    // public System.Nullable`1<System.Boolean> IsVisible
    // Size: 0xFFFFFFFF
    // Offset: 0xA2
    ::System::Nullable_1<bool> IsVisible;
    // public System.Nullable`1<Fusion.Photon.Realtime.MatchmakingMode> MatchmakingMode
    // Size: 0xFFFFFFFF
    // Offset: 0xA4
    ::System::Nullable_1<::Fusion::Photon::Realtime::MatchmakingMode> MatchmakingMode;
    // public System.Nullable`1<System.Boolean> UseDefaultPhotonCloudPorts
    // Size: 0xFFFFFFFF
    // Offset: 0xA6
    ::System::Nullable_1<bool> UseDefaultPhotonCloudPorts;
    // public System.String CustomLobbyName
    // Size: 0x8
    // Offset: 0xA8
    ::StringW CustomLobbyName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String CustomSTUNServer
    // Size: 0x8
    // Offset: 0xB0
    ::StringW CustomSTUNServer;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public Fusion.Photon.Realtime.AuthenticationValues AuthValues
    // Size: 0x8
    // Offset: 0xB8
    ::Fusion::Photon::Realtime::AuthenticationValues* AuthValues;
    // Field size check
    static_assert(sizeof(::Fusion::Photon::Realtime::AuthenticationValues*) == 0x8);
    // public Fusion.Photon.Realtime.AppSettings CustomPhotonAppSettings
    // Size: 0x8
    // Offset: 0xC0
    ::Fusion::Photon::Realtime::AppSettings* CustomPhotonAppSettings;
    // Field size check
    static_assert(sizeof(::Fusion::Photon::Realtime::AppSettings*) == 0x8);
    // public System.Boolean DisableClientSessionCreation
    // Size: 0x1
    // Offset: 0xC8
    bool DisableClientSessionCreation;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public Fusion.HostMigrationToken HostMigrationToken
    // Size: 0x8
    // Offset: 0xD0
    ::Fusion::HostMigrationToken* HostMigrationToken;
    // Field size check
    static_assert(sizeof(::Fusion::HostMigrationToken*) == 0x8);
    // public System.Action`1<Fusion.NetworkRunner> HostMigrationResume
    // Size: 0x8
    // Offset: 0xD8
    ::System::Action_1<::Fusion::NetworkRunner*>* HostMigrationResume;
    // Field size check
    static_assert(sizeof(::System::Action_1<::Fusion::NetworkRunner*>*) == 0x8);
    public:
    // Creating value type constructor for type: StartGameArgs
    constexpr StartGameArgs(::Fusion::GameMode GameMode_ = {}, ::StringW SessionName_ = {}, ::System::Nullable_1<::Fusion::Sockets::NetAddress> Address_ = {}, ::System::Nullable_1<::Fusion::Sockets::NetAddress> CustomPublicAddress_ = {}, ::Fusion::INetworkObjectPool* ObjectPool_ = {}, ::Fusion::INetworkSceneManager* SceneManager_ = {}, ::Fusion::NetworkProjectConfig* Config_ = {}, ::System::Nullable_1<int> PlayerCount_ = {}, ::System::Nullable_1<::Fusion::SceneRef> Scene_ = {}, ::System::Action_1<::Fusion::NetworkRunner*>* Initialized_ = {}, bool DisableNATPunchthrough_ = {}, ::ArrayW<::System::Type*> CustomCallbackInterfaces_ = ::ArrayW<::System::Type*>(static_cast<void*>(nullptr)), ::ArrayW<uint8_t> ConnectionToken_ = ::ArrayW<uint8_t>(static_cast<void*>(nullptr)), ::System::Collections::Generic::Dictionary_2<::StringW, ::Fusion::SessionProperty*>* SessionProperties_ = {}, ::System::Nullable_1<bool> IsOpen_ = {}, ::System::Nullable_1<bool> IsVisible_ = {}, ::System::Nullable_1<::Fusion::Photon::Realtime::MatchmakingMode> MatchmakingMode_ = {}, ::System::Nullable_1<bool> UseDefaultPhotonCloudPorts_ = {}, ::StringW CustomLobbyName_ = {}, ::StringW CustomSTUNServer_ = {}, ::Fusion::Photon::Realtime::AuthenticationValues* AuthValues_ = {}, ::Fusion::Photon::Realtime::AppSettings* CustomPhotonAppSettings_ = {}, bool DisableClientSessionCreation_ = {}, ::Fusion::HostMigrationToken* HostMigrationToken_ = {}, ::System::Action_1<::Fusion::NetworkRunner*>* HostMigrationResume_ = {}) noexcept : GameMode{GameMode_}, SessionName{SessionName_}, Address{Address_}, CustomPublicAddress{CustomPublicAddress_}, ObjectPool{ObjectPool_}, SceneManager{SceneManager_}, Config{Config_}, PlayerCount{PlayerCount_}, Scene{Scene_}, Initialized{Initialized_}, DisableNATPunchthrough{DisableNATPunchthrough_}, CustomCallbackInterfaces{CustomCallbackInterfaces_}, ConnectionToken{ConnectionToken_}, SessionProperties{SessionProperties_}, IsOpen{IsOpen_}, IsVisible{IsVisible_}, MatchmakingMode{MatchmakingMode_}, UseDefaultPhotonCloudPorts{UseDefaultPhotonCloudPorts_}, CustomLobbyName{CustomLobbyName_}, CustomSTUNServer{CustomSTUNServer_}, AuthValues{AuthValues_}, CustomPhotonAppSettings{CustomPhotonAppSettings_}, DisableClientSessionCreation{DisableClientSessionCreation_}, HostMigrationToken{HostMigrationToken_}, HostMigrationResume{HostMigrationResume_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public Fusion.GameMode GameMode
    [[deprecated("Use field access instead!")]] ::Fusion::GameMode& dyn_GameMode();
    // Get instance field reference: public System.String SessionName
    [[deprecated("Use field access instead!")]] ::StringW& dyn_SessionName();
    // Get instance field reference: public System.Nullable`1<Fusion.Sockets.NetAddress> Address
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<::Fusion::Sockets::NetAddress>& dyn_Address();
    // Get instance field reference: public System.Nullable`1<Fusion.Sockets.NetAddress> CustomPublicAddress
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<::Fusion::Sockets::NetAddress>& dyn_CustomPublicAddress();
    // Get instance field reference: public Fusion.INetworkObjectPool ObjectPool
    [[deprecated("Use field access instead!")]] ::Fusion::INetworkObjectPool*& dyn_ObjectPool();
    // Get instance field reference: public Fusion.INetworkSceneManager SceneManager
    [[deprecated("Use field access instead!")]] ::Fusion::INetworkSceneManager*& dyn_SceneManager();
    // Get instance field reference: public Fusion.NetworkProjectConfig Config
    [[deprecated("Use field access instead!")]] ::Fusion::NetworkProjectConfig*& dyn_Config();
    // Get instance field reference: public System.Nullable`1<System.Int32> PlayerCount
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<int>& dyn_PlayerCount();
    // Get instance field reference: public System.Nullable`1<Fusion.SceneRef> Scene
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<::Fusion::SceneRef>& dyn_Scene();
    // Get instance field reference: public System.Action`1<Fusion.NetworkRunner> Initialized
    [[deprecated("Use field access instead!")]] ::System::Action_1<::Fusion::NetworkRunner*>*& dyn_Initialized();
    // Get instance field reference: public System.Boolean DisableNATPunchthrough
    [[deprecated("Use field access instead!")]] bool& dyn_DisableNATPunchthrough();
    // Get instance field reference: public System.Type[] CustomCallbackInterfaces
    [[deprecated("Use field access instead!")]] ::ArrayW<::System::Type*>& dyn_CustomCallbackInterfaces();
    // Get instance field reference: public System.Byte[] ConnectionToken
    [[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& dyn_ConnectionToken();
    // Get instance field reference: public System.Collections.Generic.Dictionary`2<System.String,Fusion.SessionProperty> SessionProperties
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::Fusion::SessionProperty*>*& dyn_SessionProperties();
    // Get instance field reference: public System.Nullable`1<System.Boolean> IsOpen
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<bool>& dyn_IsOpen();
    // Get instance field reference: public System.Nullable`1<System.Boolean> IsVisible
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<bool>& dyn_IsVisible();
    // Get instance field reference: public System.Nullable`1<Fusion.Photon.Realtime.MatchmakingMode> MatchmakingMode
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<::Fusion::Photon::Realtime::MatchmakingMode>& dyn_MatchmakingMode();
    // Get instance field reference: public System.Nullable`1<System.Boolean> UseDefaultPhotonCloudPorts
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<bool>& dyn_UseDefaultPhotonCloudPorts();
    // Get instance field reference: public System.String CustomLobbyName
    [[deprecated("Use field access instead!")]] ::StringW& dyn_CustomLobbyName();
    // Get instance field reference: public System.String CustomSTUNServer
    [[deprecated("Use field access instead!")]] ::StringW& dyn_CustomSTUNServer();
    // Get instance field reference: public Fusion.Photon.Realtime.AuthenticationValues AuthValues
    [[deprecated("Use field access instead!")]] ::Fusion::Photon::Realtime::AuthenticationValues*& dyn_AuthValues();
    // Get instance field reference: public Fusion.Photon.Realtime.AppSettings CustomPhotonAppSettings
    [[deprecated("Use field access instead!")]] ::Fusion::Photon::Realtime::AppSettings*& dyn_CustomPhotonAppSettings();
    // Get instance field reference: public System.Boolean DisableClientSessionCreation
    [[deprecated("Use field access instead!")]] bool& dyn_DisableClientSessionCreation();
    // Get instance field reference: public Fusion.HostMigrationToken HostMigrationToken
    [[deprecated("Use field access instead!")]] ::Fusion::HostMigrationToken*& dyn_HostMigrationToken();
    // Get instance field reference: public System.Action`1<Fusion.NetworkRunner> HostMigrationResume
    [[deprecated("Use field access instead!")]] ::System::Action_1<::Fusion::NetworkRunner*>*& dyn_HostMigrationResume();
    // public override System.String ToString()
    // Offset: 0x2B6A954
    // Implemented from: System.ValueType
    // Base method: System.String ValueType::ToString()
    ::StringW ToString();
  }; // Fusion.StartGameArgs
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::StartGameArgs::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Fusion::StartGameArgs::*)()>(&Fusion::StartGameArgs::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::StartGameArgs), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
