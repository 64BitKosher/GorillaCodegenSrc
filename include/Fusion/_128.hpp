// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: Fusion.INetworkStruct
#include "Fusion/INetworkStruct.hpp"
// Including type: Fusion.IFixedStorage
#include "Fusion/IFixedStorage.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
// Completed includes
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: _128
  struct _128;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Fusion::_128, "Fusion", "_128");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x200
  #pragma pack(push, 1)
  // WARNING Layout: Explicit may not be correctly taken into account!
  // Autogenerated type: Fusion._128
  // [TokenAttribute] Offset: FFFFFFFF
  // [NetworkStructWeavedAttribute] Offset: FFFFFFFF
  struct _128/*, public ::System::ValueType, public ::Fusion::INetworkStruct, public ::Fusion::IFixedStorage*/ {
    public:
    // Nested type: ::Fusion::_128::$Data$e__FixedBuffer
    struct $Data$e__FixedBuffer;
    // Size: 0x4
    #pragma pack(push, 1)
    // WARNING Layout: Sequential may not be correctly taken into account!
    // Autogenerated type: Fusion._128/<Data>e__FixedBuffer
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    // [UnsafeValueTypeAttribute] Offset: FFFFFFFF
    struct $Data$e__FixedBuffer/*, public ::System::ValueType*/ {
      public:
      public:
      // public System.UInt32 FixedElementField
      // Size: 0x4
      // Offset: 0x0
      uint FixedElementField;
      // Field size check
      static_assert(sizeof(uint) == 0x4);
      public:
      // Creating value type constructor for type: $Data$e__FixedBuffer
      constexpr $Data$e__FixedBuffer(uint FixedElementField_ = {}) noexcept : FixedElementField{FixedElementField_} {}
      // Creating interface conversion operator: operator ::System::ValueType
      operator ::System::ValueType() noexcept {
        return *reinterpret_cast<::System::ValueType*>(this);
      }
      // Creating conversion operator: operator uint
      constexpr operator uint() const noexcept {
        return FixedElementField;
      }
      // Get instance field reference: public System.UInt32 FixedElementField
      [[deprecated("Use field access instead!")]] uint& dyn_FixedElementField();
    }; // Fusion._128/<Data>e__FixedBuffer
    #pragma pack(pop)
    static check_size<sizeof(_128::$Data$e__FixedBuffer), 0 + sizeof(uint)> __Fusion__128_$Data$e__FixedBufferSizeCheck;
    static_assert(sizeof(_128::$Data$e__FixedBuffer) == 0x4);
    public:
    // Creating union for fields at offset: 0x0
    union {
      // public Fusion._128/<Data>e__FixedBuffer Data
      // Size: 0x4
      // Offset: 0x0
      ::Fusion::_128::$Data$e__FixedBuffer Data;
      // Field size check
      static_assert(sizeof(::Fusion::_128::$Data$e__FixedBuffer) == 0x4);
      // private System.UInt32 _data0
      // Size: 0x4
      // Offset: 0x0
      uint data0;
      // Field size check
      static_assert(sizeof(uint) == 0x4);
    };
    // private System.UInt32 _data1
    // Size: 0x4
    // Offset: 0x4
    uint data1;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data2
    // Size: 0x4
    // Offset: 0x8
    uint data2;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data3
    // Size: 0x4
    // Offset: 0xC
    uint data3;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data4
    // Size: 0x4
    // Offset: 0x10
    uint data4;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data5
    // Size: 0x4
    // Offset: 0x14
    uint data5;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data6
    // Size: 0x4
    // Offset: 0x18
    uint data6;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data7
    // Size: 0x4
    // Offset: 0x1C
    uint data7;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data8
    // Size: 0x4
    // Offset: 0x20
    uint data8;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data9
    // Size: 0x4
    // Offset: 0x24
    uint data9;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data10
    // Size: 0x4
    // Offset: 0x28
    uint data10;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data11
    // Size: 0x4
    // Offset: 0x2C
    uint data11;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data12
    // Size: 0x4
    // Offset: 0x30
    uint data12;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data13
    // Size: 0x4
    // Offset: 0x34
    uint data13;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data14
    // Size: 0x4
    // Offset: 0x38
    uint data14;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data15
    // Size: 0x4
    // Offset: 0x3C
    uint data15;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data16
    // Size: 0x4
    // Offset: 0x40
    uint data16;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data17
    // Size: 0x4
    // Offset: 0x44
    uint data17;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data18
    // Size: 0x4
    // Offset: 0x48
    uint data18;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data19
    // Size: 0x4
    // Offset: 0x4C
    uint data19;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data20
    // Size: 0x4
    // Offset: 0x50
    uint data20;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data21
    // Size: 0x4
    // Offset: 0x54
    uint data21;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data22
    // Size: 0x4
    // Offset: 0x58
    uint data22;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data23
    // Size: 0x4
    // Offset: 0x5C
    uint data23;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data24
    // Size: 0x4
    // Offset: 0x60
    uint data24;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data25
    // Size: 0x4
    // Offset: 0x64
    uint data25;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data26
    // Size: 0x4
    // Offset: 0x68
    uint data26;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data27
    // Size: 0x4
    // Offset: 0x6C
    uint data27;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data28
    // Size: 0x4
    // Offset: 0x70
    uint data28;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data29
    // Size: 0x4
    // Offset: 0x74
    uint data29;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data30
    // Size: 0x4
    // Offset: 0x78
    uint data30;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data31
    // Size: 0x4
    // Offset: 0x7C
    uint data31;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data32
    // Size: 0x4
    // Offset: 0x80
    uint data32;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data33
    // Size: 0x4
    // Offset: 0x84
    uint data33;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data34
    // Size: 0x4
    // Offset: 0x88
    uint data34;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data35
    // Size: 0x4
    // Offset: 0x8C
    uint data35;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data36
    // Size: 0x4
    // Offset: 0x90
    uint data36;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data37
    // Size: 0x4
    // Offset: 0x94
    uint data37;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data38
    // Size: 0x4
    // Offset: 0x98
    uint data38;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data39
    // Size: 0x4
    // Offset: 0x9C
    uint data39;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data40
    // Size: 0x4
    // Offset: 0xA0
    uint data40;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data41
    // Size: 0x4
    // Offset: 0xA4
    uint data41;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data42
    // Size: 0x4
    // Offset: 0xA8
    uint data42;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data43
    // Size: 0x4
    // Offset: 0xAC
    uint data43;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data44
    // Size: 0x4
    // Offset: 0xB0
    uint data44;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data45
    // Size: 0x4
    // Offset: 0xB4
    uint data45;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data46
    // Size: 0x4
    // Offset: 0xB8
    uint data46;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data47
    // Size: 0x4
    // Offset: 0xBC
    uint data47;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data48
    // Size: 0x4
    // Offset: 0xC0
    uint data48;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data49
    // Size: 0x4
    // Offset: 0xC4
    uint data49;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data50
    // Size: 0x4
    // Offset: 0xC8
    uint data50;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data51
    // Size: 0x4
    // Offset: 0xCC
    uint data51;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data52
    // Size: 0x4
    // Offset: 0xD0
    uint data52;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data53
    // Size: 0x4
    // Offset: 0xD4
    uint data53;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data54
    // Size: 0x4
    // Offset: 0xD8
    uint data54;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data55
    // Size: 0x4
    // Offset: 0xDC
    uint data55;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data56
    // Size: 0x4
    // Offset: 0xE0
    uint data56;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data57
    // Size: 0x4
    // Offset: 0xE4
    uint data57;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data58
    // Size: 0x4
    // Offset: 0xE8
    uint data58;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data59
    // Size: 0x4
    // Offset: 0xEC
    uint data59;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data60
    // Size: 0x4
    // Offset: 0xF0
    uint data60;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data61
    // Size: 0x4
    // Offset: 0xF4
    uint data61;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data62
    // Size: 0x4
    // Offset: 0xF8
    uint data62;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data63
    // Size: 0x4
    // Offset: 0xFC
    uint data63;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data64
    // Size: 0x4
    // Offset: 0x100
    uint data64;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data65
    // Size: 0x4
    // Offset: 0x104
    uint data65;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data66
    // Size: 0x4
    // Offset: 0x108
    uint data66;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data67
    // Size: 0x4
    // Offset: 0x10C
    uint data67;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data68
    // Size: 0x4
    // Offset: 0x110
    uint data68;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data69
    // Size: 0x4
    // Offset: 0x114
    uint data69;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data70
    // Size: 0x4
    // Offset: 0x118
    uint data70;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data71
    // Size: 0x4
    // Offset: 0x11C
    uint data71;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data72
    // Size: 0x4
    // Offset: 0x120
    uint data72;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data73
    // Size: 0x4
    // Offset: 0x124
    uint data73;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data74
    // Size: 0x4
    // Offset: 0x128
    uint data74;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data75
    // Size: 0x4
    // Offset: 0x12C
    uint data75;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data76
    // Size: 0x4
    // Offset: 0x130
    uint data76;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data77
    // Size: 0x4
    // Offset: 0x134
    uint data77;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data78
    // Size: 0x4
    // Offset: 0x138
    uint data78;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data79
    // Size: 0x4
    // Offset: 0x13C
    uint data79;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data80
    // Size: 0x4
    // Offset: 0x140
    uint data80;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data81
    // Size: 0x4
    // Offset: 0x144
    uint data81;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data82
    // Size: 0x4
    // Offset: 0x148
    uint data82;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data83
    // Size: 0x4
    // Offset: 0x14C
    uint data83;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data84
    // Size: 0x4
    // Offset: 0x150
    uint data84;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data85
    // Size: 0x4
    // Offset: 0x154
    uint data85;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data86
    // Size: 0x4
    // Offset: 0x158
    uint data86;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data87
    // Size: 0x4
    // Offset: 0x15C
    uint data87;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data88
    // Size: 0x4
    // Offset: 0x160
    uint data88;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data89
    // Size: 0x4
    // Offset: 0x164
    uint data89;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data90
    // Size: 0x4
    // Offset: 0x168
    uint data90;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data91
    // Size: 0x4
    // Offset: 0x16C
    uint data91;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data92
    // Size: 0x4
    // Offset: 0x170
    uint data92;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data93
    // Size: 0x4
    // Offset: 0x174
    uint data93;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data94
    // Size: 0x4
    // Offset: 0x178
    uint data94;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data95
    // Size: 0x4
    // Offset: 0x17C
    uint data95;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data96
    // Size: 0x4
    // Offset: 0x180
    uint data96;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data97
    // Size: 0x4
    // Offset: 0x184
    uint data97;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data98
    // Size: 0x4
    // Offset: 0x188
    uint data98;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data99
    // Size: 0x4
    // Offset: 0x18C
    uint data99;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data100
    // Size: 0x4
    // Offset: 0x190
    uint data100;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data101
    // Size: 0x4
    // Offset: 0x194
    uint data101;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data102
    // Size: 0x4
    // Offset: 0x198
    uint data102;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data103
    // Size: 0x4
    // Offset: 0x19C
    uint data103;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data104
    // Size: 0x4
    // Offset: 0x1A0
    uint data104;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data105
    // Size: 0x4
    // Offset: 0x1A4
    uint data105;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data106
    // Size: 0x4
    // Offset: 0x1A8
    uint data106;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data107
    // Size: 0x4
    // Offset: 0x1AC
    uint data107;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data108
    // Size: 0x4
    // Offset: 0x1B0
    uint data108;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data109
    // Size: 0x4
    // Offset: 0x1B4
    uint data109;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data110
    // Size: 0x4
    // Offset: 0x1B8
    uint data110;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data111
    // Size: 0x4
    // Offset: 0x1BC
    uint data111;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data112
    // Size: 0x4
    // Offset: 0x1C0
    uint data112;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data113
    // Size: 0x4
    // Offset: 0x1C4
    uint data113;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data114
    // Size: 0x4
    // Offset: 0x1C8
    uint data114;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data115
    // Size: 0x4
    // Offset: 0x1CC
    uint data115;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data116
    // Size: 0x4
    // Offset: 0x1D0
    uint data116;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data117
    // Size: 0x4
    // Offset: 0x1D4
    uint data117;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data118
    // Size: 0x4
    // Offset: 0x1D8
    uint data118;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data119
    // Size: 0x4
    // Offset: 0x1DC
    uint data119;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data120
    // Size: 0x4
    // Offset: 0x1E0
    uint data120;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data121
    // Size: 0x4
    // Offset: 0x1E4
    uint data121;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data122
    // Size: 0x4
    // Offset: 0x1E8
    uint data122;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data123
    // Size: 0x4
    // Offset: 0x1EC
    uint data123;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data124
    // Size: 0x4
    // Offset: 0x1F0
    uint data124;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data125
    // Size: 0x4
    // Offset: 0x1F4
    uint data125;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data126
    // Size: 0x4
    // Offset: 0x1F8
    uint data126;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 _data127
    // Size: 0x4
    // Offset: 0x1FC
    uint data127;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    public:
    // Creating value type constructor for type: _128
    constexpr _128(::Fusion::_128::$Data$e__FixedBuffer Data_ = {}, uint data1_ = {}, uint data2_ = {}, uint data3_ = {}, uint data4_ = {}, uint data5_ = {}, uint data6_ = {}, uint data7_ = {}, uint data8_ = {}, uint data9_ = {}, uint data10_ = {}, uint data11_ = {}, uint data12_ = {}, uint data13_ = {}, uint data14_ = {}, uint data15_ = {}, uint data16_ = {}, uint data17_ = {}, uint data18_ = {}, uint data19_ = {}, uint data20_ = {}, uint data21_ = {}, uint data22_ = {}, uint data23_ = {}, uint data24_ = {}, uint data25_ = {}, uint data26_ = {}, uint data27_ = {}, uint data28_ = {}, uint data29_ = {}, uint data30_ = {}, uint data31_ = {}, uint data32_ = {}, uint data33_ = {}, uint data34_ = {}, uint data35_ = {}, uint data36_ = {}, uint data37_ = {}, uint data38_ = {}, uint data39_ = {}, uint data40_ = {}, uint data41_ = {}, uint data42_ = {}, uint data43_ = {}, uint data44_ = {}, uint data45_ = {}, uint data46_ = {}, uint data47_ = {}, uint data48_ = {}, uint data49_ = {}, uint data50_ = {}, uint data51_ = {}, uint data52_ = {}, uint data53_ = {}, uint data54_ = {}, uint data55_ = {}, uint data56_ = {}, uint data57_ = {}, uint data58_ = {}, uint data59_ = {}, uint data60_ = {}, uint data61_ = {}, uint data62_ = {}, uint data63_ = {}, uint data64_ = {}, uint data65_ = {}, uint data66_ = {}, uint data67_ = {}, uint data68_ = {}, uint data69_ = {}, uint data70_ = {}, uint data71_ = {}, uint data72_ = {}, uint data73_ = {}, uint data74_ = {}, uint data75_ = {}, uint data76_ = {}, uint data77_ = {}, uint data78_ = {}, uint data79_ = {}, uint data80_ = {}, uint data81_ = {}, uint data82_ = {}, uint data83_ = {}, uint data84_ = {}, uint data85_ = {}, uint data86_ = {}, uint data87_ = {}, uint data88_ = {}, uint data89_ = {}, uint data90_ = {}, uint data91_ = {}, uint data92_ = {}, uint data93_ = {}, uint data94_ = {}, uint data95_ = {}, uint data96_ = {}, uint data97_ = {}, uint data98_ = {}, uint data99_ = {}, uint data100_ = {}, uint data101_ = {}, uint data102_ = {}, uint data103_ = {}, uint data104_ = {}, uint data105_ = {}, uint data106_ = {}, uint data107_ = {}, uint data108_ = {}, uint data109_ = {}, uint data110_ = {}, uint data111_ = {}, uint data112_ = {}, uint data113_ = {}, uint data114_ = {}, uint data115_ = {}, uint data116_ = {}, uint data117_ = {}, uint data118_ = {}, uint data119_ = {}, uint data120_ = {}, uint data121_ = {}, uint data122_ = {}, uint data123_ = {}, uint data124_ = {}, uint data125_ = {}, uint data126_ = {}, uint data127_ = {}) noexcept : Data{Data_}, data1{data1_}, data2{data2_}, data3{data3_}, data4{data4_}, data5{data5_}, data6{data6_}, data7{data7_}, data8{data8_}, data9{data9_}, data10{data10_}, data11{data11_}, data12{data12_}, data13{data13_}, data14{data14_}, data15{data15_}, data16{data16_}, data17{data17_}, data18{data18_}, data19{data19_}, data20{data20_}, data21{data21_}, data22{data22_}, data23{data23_}, data24{data24_}, data25{data25_}, data26{data26_}, data27{data27_}, data28{data28_}, data29{data29_}, data30{data30_}, data31{data31_}, data32{data32_}, data33{data33_}, data34{data34_}, data35{data35_}, data36{data36_}, data37{data37_}, data38{data38_}, data39{data39_}, data40{data40_}, data41{data41_}, data42{data42_}, data43{data43_}, data44{data44_}, data45{data45_}, data46{data46_}, data47{data47_}, data48{data48_}, data49{data49_}, data50{data50_}, data51{data51_}, data52{data52_}, data53{data53_}, data54{data54_}, data55{data55_}, data56{data56_}, data57{data57_}, data58{data58_}, data59{data59_}, data60{data60_}, data61{data61_}, data62{data62_}, data63{data63_}, data64{data64_}, data65{data65_}, data66{data66_}, data67{data67_}, data68{data68_}, data69{data69_}, data70{data70_}, data71{data71_}, data72{data72_}, data73{data73_}, data74{data74_}, data75{data75_}, data76{data76_}, data77{data77_}, data78{data78_}, data79{data79_}, data80{data80_}, data81{data81_}, data82{data82_}, data83{data83_}, data84{data84_}, data85{data85_}, data86{data86_}, data87{data87_}, data88{data88_}, data89{data89_}, data90{data90_}, data91{data91_}, data92{data92_}, data93{data93_}, data94{data94_}, data95{data95_}, data96{data96_}, data97{data97_}, data98{data98_}, data99{data99_}, data100{data100_}, data101{data101_}, data102{data102_}, data103{data103_}, data104{data104_}, data105{data105_}, data106{data106_}, data107{data107_}, data108{data108_}, data109{data109_}, data110{data110_}, data111{data111_}, data112{data112_}, data113{data113_}, data114{data114_}, data115{data115_}, data116{data116_}, data117{data117_}, data118{data118_}, data119{data119_}, data120{data120_}, data121{data121_}, data122{data122_}, data123{data123_}, data124{data124_}, data125{data125_}, data126{data126_}, data127{data127_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::Fusion::INetworkStruct
    operator ::Fusion::INetworkStruct() noexcept {
      return *reinterpret_cast<::Fusion::INetworkStruct*>(this);
    }
    // Creating interface conversion operator: operator ::Fusion::IFixedStorage
    operator ::Fusion::IFixedStorage() noexcept {
      return *reinterpret_cast<::Fusion::IFixedStorage*>(this);
    }
    // static field const value: static public System.Int32 SIZE
    static constexpr const int SIZE = 512;
    // Get static field: static public System.Int32 SIZE
    static int _get_SIZE();
    // Set static field: static public System.Int32 SIZE
    static void _set_SIZE(int value);
    // Get instance field reference: public Fusion._128/<Data>e__FixedBuffer Data
    [[deprecated("Use field access instead!")]] ::Fusion::_128::$Data$e__FixedBuffer& dyn_Data();
    // Get instance field reference: private System.UInt32 _data0
    [[deprecated("Use field access instead!")]] uint& dyn__data0();
    // Get instance field reference: private System.UInt32 _data1
    [[deprecated("Use field access instead!")]] uint& dyn__data1();
    // Get instance field reference: private System.UInt32 _data2
    [[deprecated("Use field access instead!")]] uint& dyn__data2();
    // Get instance field reference: private System.UInt32 _data3
    [[deprecated("Use field access instead!")]] uint& dyn__data3();
    // Get instance field reference: private System.UInt32 _data4
    [[deprecated("Use field access instead!")]] uint& dyn__data4();
    // Get instance field reference: private System.UInt32 _data5
    [[deprecated("Use field access instead!")]] uint& dyn__data5();
    // Get instance field reference: private System.UInt32 _data6
    [[deprecated("Use field access instead!")]] uint& dyn__data6();
    // Get instance field reference: private System.UInt32 _data7
    [[deprecated("Use field access instead!")]] uint& dyn__data7();
    // Get instance field reference: private System.UInt32 _data8
    [[deprecated("Use field access instead!")]] uint& dyn__data8();
    // Get instance field reference: private System.UInt32 _data9
    [[deprecated("Use field access instead!")]] uint& dyn__data9();
    // Get instance field reference: private System.UInt32 _data10
    [[deprecated("Use field access instead!")]] uint& dyn__data10();
    // Get instance field reference: private System.UInt32 _data11
    [[deprecated("Use field access instead!")]] uint& dyn__data11();
    // Get instance field reference: private System.UInt32 _data12
    [[deprecated("Use field access instead!")]] uint& dyn__data12();
    // Get instance field reference: private System.UInt32 _data13
    [[deprecated("Use field access instead!")]] uint& dyn__data13();
    // Get instance field reference: private System.UInt32 _data14
    [[deprecated("Use field access instead!")]] uint& dyn__data14();
    // Get instance field reference: private System.UInt32 _data15
    [[deprecated("Use field access instead!")]] uint& dyn__data15();
    // Get instance field reference: private System.UInt32 _data16
    [[deprecated("Use field access instead!")]] uint& dyn__data16();
    // Get instance field reference: private System.UInt32 _data17
    [[deprecated("Use field access instead!")]] uint& dyn__data17();
    // Get instance field reference: private System.UInt32 _data18
    [[deprecated("Use field access instead!")]] uint& dyn__data18();
    // Get instance field reference: private System.UInt32 _data19
    [[deprecated("Use field access instead!")]] uint& dyn__data19();
    // Get instance field reference: private System.UInt32 _data20
    [[deprecated("Use field access instead!")]] uint& dyn__data20();
    // Get instance field reference: private System.UInt32 _data21
    [[deprecated("Use field access instead!")]] uint& dyn__data21();
    // Get instance field reference: private System.UInt32 _data22
    [[deprecated("Use field access instead!")]] uint& dyn__data22();
    // Get instance field reference: private System.UInt32 _data23
    [[deprecated("Use field access instead!")]] uint& dyn__data23();
    // Get instance field reference: private System.UInt32 _data24
    [[deprecated("Use field access instead!")]] uint& dyn__data24();
    // Get instance field reference: private System.UInt32 _data25
    [[deprecated("Use field access instead!")]] uint& dyn__data25();
    // Get instance field reference: private System.UInt32 _data26
    [[deprecated("Use field access instead!")]] uint& dyn__data26();
    // Get instance field reference: private System.UInt32 _data27
    [[deprecated("Use field access instead!")]] uint& dyn__data27();
    // Get instance field reference: private System.UInt32 _data28
    [[deprecated("Use field access instead!")]] uint& dyn__data28();
    // Get instance field reference: private System.UInt32 _data29
    [[deprecated("Use field access instead!")]] uint& dyn__data29();
    // Get instance field reference: private System.UInt32 _data30
    [[deprecated("Use field access instead!")]] uint& dyn__data30();
    // Get instance field reference: private System.UInt32 _data31
    [[deprecated("Use field access instead!")]] uint& dyn__data31();
    // Get instance field reference: private System.UInt32 _data32
    [[deprecated("Use field access instead!")]] uint& dyn__data32();
    // Get instance field reference: private System.UInt32 _data33
    [[deprecated("Use field access instead!")]] uint& dyn__data33();
    // Get instance field reference: private System.UInt32 _data34
    [[deprecated("Use field access instead!")]] uint& dyn__data34();
    // Get instance field reference: private System.UInt32 _data35
    [[deprecated("Use field access instead!")]] uint& dyn__data35();
    // Get instance field reference: private System.UInt32 _data36
    [[deprecated("Use field access instead!")]] uint& dyn__data36();
    // Get instance field reference: private System.UInt32 _data37
    [[deprecated("Use field access instead!")]] uint& dyn__data37();
    // Get instance field reference: private System.UInt32 _data38
    [[deprecated("Use field access instead!")]] uint& dyn__data38();
    // Get instance field reference: private System.UInt32 _data39
    [[deprecated("Use field access instead!")]] uint& dyn__data39();
    // Get instance field reference: private System.UInt32 _data40
    [[deprecated("Use field access instead!")]] uint& dyn__data40();
    // Get instance field reference: private System.UInt32 _data41
    [[deprecated("Use field access instead!")]] uint& dyn__data41();
    // Get instance field reference: private System.UInt32 _data42
    [[deprecated("Use field access instead!")]] uint& dyn__data42();
    // Get instance field reference: private System.UInt32 _data43
    [[deprecated("Use field access instead!")]] uint& dyn__data43();
    // Get instance field reference: private System.UInt32 _data44
    [[deprecated("Use field access instead!")]] uint& dyn__data44();
    // Get instance field reference: private System.UInt32 _data45
    [[deprecated("Use field access instead!")]] uint& dyn__data45();
    // Get instance field reference: private System.UInt32 _data46
    [[deprecated("Use field access instead!")]] uint& dyn__data46();
    // Get instance field reference: private System.UInt32 _data47
    [[deprecated("Use field access instead!")]] uint& dyn__data47();
    // Get instance field reference: private System.UInt32 _data48
    [[deprecated("Use field access instead!")]] uint& dyn__data48();
    // Get instance field reference: private System.UInt32 _data49
    [[deprecated("Use field access instead!")]] uint& dyn__data49();
    // Get instance field reference: private System.UInt32 _data50
    [[deprecated("Use field access instead!")]] uint& dyn__data50();
    // Get instance field reference: private System.UInt32 _data51
    [[deprecated("Use field access instead!")]] uint& dyn__data51();
    // Get instance field reference: private System.UInt32 _data52
    [[deprecated("Use field access instead!")]] uint& dyn__data52();
    // Get instance field reference: private System.UInt32 _data53
    [[deprecated("Use field access instead!")]] uint& dyn__data53();
    // Get instance field reference: private System.UInt32 _data54
    [[deprecated("Use field access instead!")]] uint& dyn__data54();
    // Get instance field reference: private System.UInt32 _data55
    [[deprecated("Use field access instead!")]] uint& dyn__data55();
    // Get instance field reference: private System.UInt32 _data56
    [[deprecated("Use field access instead!")]] uint& dyn__data56();
    // Get instance field reference: private System.UInt32 _data57
    [[deprecated("Use field access instead!")]] uint& dyn__data57();
    // Get instance field reference: private System.UInt32 _data58
    [[deprecated("Use field access instead!")]] uint& dyn__data58();
    // Get instance field reference: private System.UInt32 _data59
    [[deprecated("Use field access instead!")]] uint& dyn__data59();
    // Get instance field reference: private System.UInt32 _data60
    [[deprecated("Use field access instead!")]] uint& dyn__data60();
    // Get instance field reference: private System.UInt32 _data61
    [[deprecated("Use field access instead!")]] uint& dyn__data61();
    // Get instance field reference: private System.UInt32 _data62
    [[deprecated("Use field access instead!")]] uint& dyn__data62();
    // Get instance field reference: private System.UInt32 _data63
    [[deprecated("Use field access instead!")]] uint& dyn__data63();
    // Get instance field reference: private System.UInt32 _data64
    [[deprecated("Use field access instead!")]] uint& dyn__data64();
    // Get instance field reference: private System.UInt32 _data65
    [[deprecated("Use field access instead!")]] uint& dyn__data65();
    // Get instance field reference: private System.UInt32 _data66
    [[deprecated("Use field access instead!")]] uint& dyn__data66();
    // Get instance field reference: private System.UInt32 _data67
    [[deprecated("Use field access instead!")]] uint& dyn__data67();
    // Get instance field reference: private System.UInt32 _data68
    [[deprecated("Use field access instead!")]] uint& dyn__data68();
    // Get instance field reference: private System.UInt32 _data69
    [[deprecated("Use field access instead!")]] uint& dyn__data69();
    // Get instance field reference: private System.UInt32 _data70
    [[deprecated("Use field access instead!")]] uint& dyn__data70();
    // Get instance field reference: private System.UInt32 _data71
    [[deprecated("Use field access instead!")]] uint& dyn__data71();
    // Get instance field reference: private System.UInt32 _data72
    [[deprecated("Use field access instead!")]] uint& dyn__data72();
    // Get instance field reference: private System.UInt32 _data73
    [[deprecated("Use field access instead!")]] uint& dyn__data73();
    // Get instance field reference: private System.UInt32 _data74
    [[deprecated("Use field access instead!")]] uint& dyn__data74();
    // Get instance field reference: private System.UInt32 _data75
    [[deprecated("Use field access instead!")]] uint& dyn__data75();
    // Get instance field reference: private System.UInt32 _data76
    [[deprecated("Use field access instead!")]] uint& dyn__data76();
    // Get instance field reference: private System.UInt32 _data77
    [[deprecated("Use field access instead!")]] uint& dyn__data77();
    // Get instance field reference: private System.UInt32 _data78
    [[deprecated("Use field access instead!")]] uint& dyn__data78();
    // Get instance field reference: private System.UInt32 _data79
    [[deprecated("Use field access instead!")]] uint& dyn__data79();
    // Get instance field reference: private System.UInt32 _data80
    [[deprecated("Use field access instead!")]] uint& dyn__data80();
    // Get instance field reference: private System.UInt32 _data81
    [[deprecated("Use field access instead!")]] uint& dyn__data81();
    // Get instance field reference: private System.UInt32 _data82
    [[deprecated("Use field access instead!")]] uint& dyn__data82();
    // Get instance field reference: private System.UInt32 _data83
    [[deprecated("Use field access instead!")]] uint& dyn__data83();
    // Get instance field reference: private System.UInt32 _data84
    [[deprecated("Use field access instead!")]] uint& dyn__data84();
    // Get instance field reference: private System.UInt32 _data85
    [[deprecated("Use field access instead!")]] uint& dyn__data85();
    // Get instance field reference: private System.UInt32 _data86
    [[deprecated("Use field access instead!")]] uint& dyn__data86();
    // Get instance field reference: private System.UInt32 _data87
    [[deprecated("Use field access instead!")]] uint& dyn__data87();
    // Get instance field reference: private System.UInt32 _data88
    [[deprecated("Use field access instead!")]] uint& dyn__data88();
    // Get instance field reference: private System.UInt32 _data89
    [[deprecated("Use field access instead!")]] uint& dyn__data89();
    // Get instance field reference: private System.UInt32 _data90
    [[deprecated("Use field access instead!")]] uint& dyn__data90();
    // Get instance field reference: private System.UInt32 _data91
    [[deprecated("Use field access instead!")]] uint& dyn__data91();
    // Get instance field reference: private System.UInt32 _data92
    [[deprecated("Use field access instead!")]] uint& dyn__data92();
    // Get instance field reference: private System.UInt32 _data93
    [[deprecated("Use field access instead!")]] uint& dyn__data93();
    // Get instance field reference: private System.UInt32 _data94
    [[deprecated("Use field access instead!")]] uint& dyn__data94();
    // Get instance field reference: private System.UInt32 _data95
    [[deprecated("Use field access instead!")]] uint& dyn__data95();
    // Get instance field reference: private System.UInt32 _data96
    [[deprecated("Use field access instead!")]] uint& dyn__data96();
    // Get instance field reference: private System.UInt32 _data97
    [[deprecated("Use field access instead!")]] uint& dyn__data97();
    // Get instance field reference: private System.UInt32 _data98
    [[deprecated("Use field access instead!")]] uint& dyn__data98();
    // Get instance field reference: private System.UInt32 _data99
    [[deprecated("Use field access instead!")]] uint& dyn__data99();
    // Get instance field reference: private System.UInt32 _data100
    [[deprecated("Use field access instead!")]] uint& dyn__data100();
    // Get instance field reference: private System.UInt32 _data101
    [[deprecated("Use field access instead!")]] uint& dyn__data101();
    // Get instance field reference: private System.UInt32 _data102
    [[deprecated("Use field access instead!")]] uint& dyn__data102();
    // Get instance field reference: private System.UInt32 _data103
    [[deprecated("Use field access instead!")]] uint& dyn__data103();
    // Get instance field reference: private System.UInt32 _data104
    [[deprecated("Use field access instead!")]] uint& dyn__data104();
    // Get instance field reference: private System.UInt32 _data105
    [[deprecated("Use field access instead!")]] uint& dyn__data105();
    // Get instance field reference: private System.UInt32 _data106
    [[deprecated("Use field access instead!")]] uint& dyn__data106();
    // Get instance field reference: private System.UInt32 _data107
    [[deprecated("Use field access instead!")]] uint& dyn__data107();
    // Get instance field reference: private System.UInt32 _data108
    [[deprecated("Use field access instead!")]] uint& dyn__data108();
    // Get instance field reference: private System.UInt32 _data109
    [[deprecated("Use field access instead!")]] uint& dyn__data109();
    // Get instance field reference: private System.UInt32 _data110
    [[deprecated("Use field access instead!")]] uint& dyn__data110();
    // Get instance field reference: private System.UInt32 _data111
    [[deprecated("Use field access instead!")]] uint& dyn__data111();
    // Get instance field reference: private System.UInt32 _data112
    [[deprecated("Use field access instead!")]] uint& dyn__data112();
    // Get instance field reference: private System.UInt32 _data113
    [[deprecated("Use field access instead!")]] uint& dyn__data113();
    // Get instance field reference: private System.UInt32 _data114
    [[deprecated("Use field access instead!")]] uint& dyn__data114();
    // Get instance field reference: private System.UInt32 _data115
    [[deprecated("Use field access instead!")]] uint& dyn__data115();
    // Get instance field reference: private System.UInt32 _data116
    [[deprecated("Use field access instead!")]] uint& dyn__data116();
    // Get instance field reference: private System.UInt32 _data117
    [[deprecated("Use field access instead!")]] uint& dyn__data117();
    // Get instance field reference: private System.UInt32 _data118
    [[deprecated("Use field access instead!")]] uint& dyn__data118();
    // Get instance field reference: private System.UInt32 _data119
    [[deprecated("Use field access instead!")]] uint& dyn__data119();
    // Get instance field reference: private System.UInt32 _data120
    [[deprecated("Use field access instead!")]] uint& dyn__data120();
    // Get instance field reference: private System.UInt32 _data121
    [[deprecated("Use field access instead!")]] uint& dyn__data121();
    // Get instance field reference: private System.UInt32 _data122
    [[deprecated("Use field access instead!")]] uint& dyn__data122();
    // Get instance field reference: private System.UInt32 _data123
    [[deprecated("Use field access instead!")]] uint& dyn__data123();
    // Get instance field reference: private System.UInt32 _data124
    [[deprecated("Use field access instead!")]] uint& dyn__data124();
    // Get instance field reference: private System.UInt32 _data125
    [[deprecated("Use field access instead!")]] uint& dyn__data125();
    // Get instance field reference: private System.UInt32 _data126
    [[deprecated("Use field access instead!")]] uint& dyn__data126();
    // Get instance field reference: private System.UInt32 _data127
    [[deprecated("Use field access instead!")]] uint& dyn__data127();
  }; // Fusion._128
  #pragma pack(pop)
  static check_size<sizeof(_128), 508 + sizeof(uint)> __Fusion__128SizeCheck;
  static_assert(sizeof(_128) == 0x200);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Fusion::_128::$Data$e__FixedBuffer, "Fusion", "_128/<Data>e__FixedBuffer");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
