// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Fusion.NetworkId
#include "Fusion/NetworkId.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: ListSpecialized
  class ListSpecialized;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::ListSpecialized);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::ListSpecialized*, "Fusion", "ListSpecialized");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.ListSpecialized
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class ListSpecialized : public ::Il2CppObject {
    public:
    // static public System.Int32 BinarySearchSpecialized(System.Collections.Generic.List`1<Fusion.NetworkId> list, Fusion.NetworkId value)
    // Offset: 0x2B48B68
    static int BinarySearchSpecialized(::System::Collections::Generic::List_1<::Fusion::NetworkId>* list, ::Fusion::NetworkId value);
    // static public System.Boolean AddUnique(System.Collections.Generic.List`1<Fusion.NetworkId> list, Fusion.NetworkId value)
    // Offset: 0x2B48C24
    static bool AddUnique(::System::Collections::Generic::List_1<::Fusion::NetworkId>* list, ::Fusion::NetworkId value);
    // static public System.Boolean RemoveUnique(System.Collections.Generic.List`1<Fusion.NetworkId> list, Fusion.NetworkId value)
    // Offset: 0x2B48CA0
    static bool RemoveUnique(::System::Collections::Generic::List_1<::Fusion::NetworkId>* list, ::Fusion::NetworkId value);
  }; // Fusion.ListSpecialized
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::ListSpecialized::BinarySearchSpecialized
// Il2CppName: BinarySearchSpecialized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::Collections::Generic::List_1<::Fusion::NetworkId>*, ::Fusion::NetworkId)>(&Fusion::ListSpecialized::BinarySearchSpecialized)> {
  static const MethodInfo* get() {
    static auto* list = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Fusion", "NetworkId")})->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkId")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::ListSpecialized*), "BinarySearchSpecialized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{list, value});
  }
};
// Writing MetadataGetter for method: Fusion::ListSpecialized::AddUnique
// Il2CppName: AddUnique
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::Collections::Generic::List_1<::Fusion::NetworkId>*, ::Fusion::NetworkId)>(&Fusion::ListSpecialized::AddUnique)> {
  static const MethodInfo* get() {
    static auto* list = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Fusion", "NetworkId")})->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkId")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::ListSpecialized*), "AddUnique", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{list, value});
  }
};
// Writing MetadataGetter for method: Fusion::ListSpecialized::RemoveUnique
// Il2CppName: RemoveUnique
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::Collections::Generic::List_1<::Fusion::NetworkId>*, ::Fusion::NetworkId)>(&Fusion::ListSpecialized::RemoveUnique)> {
  static const MethodInfo* get() {
    static auto* list = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Fusion", "NetworkId")})->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkId")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::ListSpecialized*), "RemoveUnique", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{list, value});
  }
};
