// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Fusion.NetworkPrefabSourceUnityResource
#include "Fusion/NetworkPrefabSourceUnityResource.hpp"
// Including type: Fusion.NetworkPrefabLoadContext
#include "Fusion/NetworkPrefabLoadContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: AsyncOperation
  class AsyncOperation;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::NetworkPrefabSourceUnityResource::$$c__DisplayClass4_0);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::NetworkPrefabSourceUnityResource::$$c__DisplayClass4_0*, "Fusion", "NetworkPrefabSourceUnityResource/<>c__DisplayClass4_0");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.NetworkPrefabSourceUnityResource/<>c__DisplayClass4_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class NetworkPrefabSourceUnityResource::$$c__DisplayClass4_0 : public ::Il2CppObject {
    public:
    public:
    // public Fusion.NetworkPrefabSourceUnityResource <>4__this
    // Size: 0x8
    // Offset: 0x10
    ::Fusion::NetworkPrefabSourceUnityResource* $$4__this;
    // Field size check
    static_assert(sizeof(::Fusion::NetworkPrefabSourceUnityResource*) == 0x8);
    // public Fusion.NetworkPrefabLoadContext cc
    // Size: 0x18
    // Offset: 0x18
    ::Fusion::NetworkPrefabLoadContext cc;
    // Field size check
    static_assert(sizeof(::Fusion::NetworkPrefabLoadContext) == 0x18);
    public:
    // Get instance field reference: public Fusion.NetworkPrefabSourceUnityResource <>4__this
    [[deprecated("Use field access instead!")]] ::Fusion::NetworkPrefabSourceUnityResource*& dyn_$$4__this();
    // Get instance field reference: public Fusion.NetworkPrefabLoadContext cc
    [[deprecated("Use field access instead!")]] ::Fusion::NetworkPrefabLoadContext& dyn_cc();
    // public System.Void .ctor()
    // Offset: 0x2B4F594
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NetworkPrefabSourceUnityResource::$$c__DisplayClass4_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkPrefabSourceUnityResource::$$c__DisplayClass4_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NetworkPrefabSourceUnityResource::$$c__DisplayClass4_0*, creationType>()));
    }
    // System.Void <Load>b__0(UnityEngine.AsyncOperation op)
    // Offset: 0x2B4F60C
    void $Load$b__0(::UnityEngine::AsyncOperation* op);
  }; // Fusion.NetworkPrefabSourceUnityResource/<>c__DisplayClass4_0
  #pragma pack(pop)
  static check_size<sizeof(NetworkPrefabSourceUnityResource::$$c__DisplayClass4_0), 24 + sizeof(::Fusion::NetworkPrefabLoadContext)> __Fusion_NetworkPrefabSourceUnityResource_$$c__DisplayClass4_0SizeCheck;
  static_assert(sizeof(NetworkPrefabSourceUnityResource::$$c__DisplayClass4_0) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::NetworkPrefabSourceUnityResource::$$c__DisplayClass4_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Fusion::NetworkPrefabSourceUnityResource::$$c__DisplayClass4_0::$Load$b__0
// Il2CppName: <Load>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkPrefabSourceUnityResource::$$c__DisplayClass4_0::*)(::UnityEngine::AsyncOperation*)>(&Fusion::NetworkPrefabSourceUnityResource::$$c__DisplayClass4_0::$Load$b__0)> {
  static const MethodInfo* get() {
    static auto* op = &::il2cpp_utils::GetClassFromName("UnityEngine", "AsyncOperation")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkPrefabSourceUnityResource::$$c__DisplayClass4_0*), "<Load>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{op});
  }
};
