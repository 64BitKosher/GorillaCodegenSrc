// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Fusion.Photon.Realtime.IConnectionCallbacks
#include "Fusion/Photon/Realtime/IConnectionCallbacks.hpp"
// Including type: Fusion.Photon.Realtime.IMatchmakingCallbacks
#include "Fusion/Photon/Realtime/IMatchmakingCallbacks.hpp"
// Including type: Fusion.Photon.Realtime.ILobbyCallbacks
#include "Fusion/Photon/Realtime/ILobbyCallbacks.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Fusion
namespace Fusion {
  // Forward declaring type: CloudServicesMetadata
  class CloudServicesMetadata;
  // Forward declaring type: NetworkRunner
  class NetworkRunner;
  // Forward declaring type: CloudCommunicator
  class CloudCommunicator;
  // Forward declaring type: SessionInfo
  class SessionInfo;
  // Forward declaring type: SessionLobby
  struct SessionLobby;
  // Forward declaring type: StartGameArgs
  struct StartGameArgs;
  // Forward declaring type: NATPunchStage
  struct NATPunchStage;
  // Forward declaring type: SessionProperty
  class SessionProperty;
  // Forward declaring type: NetworkProjectConfig
  class NetworkProjectConfig;
  // Forward declaring type: NetworkRunnerInitializeArgs
  struct NetworkRunnerInitializeArgs;
}
// Forward declaring namespace: System::Diagnostics
namespace System::Diagnostics {
  // Forward declaring type: Stopwatch
  class Stopwatch;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
  // Forward declaring type: Nullable`1<T>
  template<typename T>
  struct Nullable_1;
}
// Forward declaring namespace: Fusion::Photon::Realtime
namespace Fusion::Photon::Realtime {
  // Forward declaring type: DisconnectCause
  struct DisconnectCause;
  // Forward declaring type: RegionHandler
  class RegionHandler;
  // Forward declaring type: FriendInfo
  class FriendInfo;
  // Forward declaring type: RoomInfo
  class RoomInfo;
  // Forward declaring type: TypedLobbyInfo
  class TypedLobbyInfo;
  // Forward declaring type: AuthenticationValues
  class AuthenticationValues;
  // Forward declaring type: AppSettings
  class AppSettings;
  // Forward declaring type: LobbyType
  struct LobbyType;
}
// Forward declaring namespace: Fusion::Protocol
namespace Fusion::Protocol {
  // Forward declaring type: ICommunicator
  class ICommunicator;
  // Forward declaring type: Join
  class Join;
  // Forward declaring type: Start
  class Start;
  // Forward declaring type: Disconnect
  class Disconnect;
  // Forward declaring type: NetworkConfigSync
  class NetworkConfigSync;
  // Forward declaring type: ReflexiveInfo
  class ReflexiveInfo;
  // Forward declaring type: HostMigration
  class HostMigration;
  // Forward declaring type: Snapshot
  class Snapshot;
}
// Forward declaring namespace: Fusion::Sockets::Stun
namespace Fusion::Sockets::Stun {
  // Forward declaring type: NATType
  struct NATType;
  // Forward declaring type: StunResult
  class StunResult;
}
// Forward declaring namespace: System::Threading::Tasks
namespace System::Threading::Tasks {
  // Forward declaring type: Task
  class Task;
  // Forward declaring type: Task`1<TResult>
  template<typename TResult>
  class Task_1;
}
// Forward declaring namespace: Fusion::Sockets
namespace Fusion::Sockets {
  // Forward declaring type: NetAddress
  struct NetAddress;
}
// Completed forward declares
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: CloudServices
  class CloudServices;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::CloudServices);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::CloudServices*, "Fusion", "CloudServices");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x58
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.CloudServices
  // [TokenAttribute] Offset: FFFFFFFF
  class CloudServices : public ::Il2CppObject/*, public ::Fusion::Photon::Realtime::IConnectionCallbacks, public ::Fusion::Photon::Realtime::IMatchmakingCallbacks, public ::Fusion::Photon::Realtime::ILobbyCallbacks, public ::System::IDisposable*/ {
    public:
    // Nested type: ::Fusion::CloudServices::$$c
    class $$c;
    // Nested type: ::Fusion::CloudServices::$$c__DisplayClass90_0
    class $$c__DisplayClass90_0;
    // Nested type: ::Fusion::CloudServices::$ConfirmJoin$d__86
    struct $ConfirmJoin$d__86;
    // Nested type: ::Fusion::CloudServices::$ConnectToCloud$d__57
    struct $ConnectToCloud$d__57;
    // Nested type: ::Fusion::CloudServices::$DisconnectFromCloud$d__60
    struct $DisconnectFromCloud$d__60;
    // Nested type: ::Fusion::CloudServices::$HandleReflexiveInfoMessage$d__82
    struct $HandleReflexiveInfoMessage$d__82;
    // Nested type: ::Fusion::CloudServices::$HandleStartMessage$d__79
    struct $HandleStartMessage$d__79;
    // Nested type: ::Fusion::CloudServices::$QueryReflexiveInfo$d__91
    struct $QueryReflexiveInfo$d__91;
    // Nested type: ::Fusion::CloudServices::$SendHostMigrationSnapshot$d__89
    struct $SendHostMigrationSnapshot$d__89;
    // Nested type: ::Fusion::CloudServices::$Service_SendHostMigrationSnapshots$d__88
    struct $Service_SendHostMigrationSnapshots$d__88;
    public:
    // private System.Boolean <IsNATPunchthroughEnabled>k__BackingField
    // Size: 0x1
    // Offset: 0x10
    bool IsNATPunchthroughEnabled;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: IsNATPunchthroughEnabled and: CustomSTUNServer
    char __padding0[0x7] = {};
    // private System.String <CustomSTUNServer>k__BackingField
    // Size: 0x8
    // Offset: 0x18
    ::StringW CustomSTUNServer;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private readonly Fusion.CloudServicesMetadata _metadata
    // Size: 0x8
    // Offset: 0x20
    ::Fusion::CloudServicesMetadata* metadata;
    // Field size check
    static_assert(sizeof(::Fusion::CloudServicesMetadata*) == 0x8);
    // private readonly Fusion.NetworkRunner _runner
    // Size: 0x8
    // Offset: 0x28
    ::Fusion::NetworkRunner* runner;
    // Field size check
    static_assert(sizeof(::Fusion::NetworkRunner*) == 0x8);
    // private Fusion.CloudCommunicator _communicator
    // Size: 0x8
    // Offset: 0x30
    ::Fusion::CloudCommunicator* communicator;
    // Field size check
    static_assert(sizeof(::Fusion::CloudCommunicator*) == 0x8);
    // private readonly System.Diagnostics.Stopwatch _watch
    // Size: 0x8
    // Offset: 0x38
    ::System::Diagnostics::Stopwatch* watch;
    // Field size check
    static_assert(sizeof(::System::Diagnostics::Stopwatch*) == 0x8);
    // private readonly System.Collections.Generic.Dictionary`2<System.String,Fusion.SessionInfo> cachedSessionList
    // Size: 0x8
    // Offset: 0x40
    ::System::Collections::Generic::Dictionary_2<::StringW, ::Fusion::SessionInfo*>* cachedSessionList;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::StringW, ::Fusion::SessionInfo*>*) == 0x8);
    // private readonly System.Diagnostics.Stopwatch _snapshotWatch
    // Size: 0x8
    // Offset: 0x48
    ::System::Diagnostics::Stopwatch* snapshotWatch;
    // Field size check
    static_assert(sizeof(::System::Diagnostics::Stopwatch*) == 0x8);
    // private System.Int32 _lastSnapshotTick
    // Size: 0x4
    // Offset: 0x50
    int lastSnapshotTick;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 _lastConfirmedSnapshotTick
    // Size: 0x4
    // Offset: 0x54
    int lastConfirmedSnapshotTick;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating interface conversion operator: operator ::Fusion::Photon::Realtime::IConnectionCallbacks
    operator ::Fusion::Photon::Realtime::IConnectionCallbacks() noexcept {
      return *reinterpret_cast<::Fusion::Photon::Realtime::IConnectionCallbacks*>(this);
    }
    // Creating interface conversion operator: operator ::Fusion::Photon::Realtime::IMatchmakingCallbacks
    operator ::Fusion::Photon::Realtime::IMatchmakingCallbacks() noexcept {
      return *reinterpret_cast<::Fusion::Photon::Realtime::IMatchmakingCallbacks*>(this);
    }
    // Creating interface conversion operator: operator ::Fusion::Photon::Realtime::ILobbyCallbacks
    operator ::Fusion::Photon::Realtime::ILobbyCallbacks() noexcept {
      return *reinterpret_cast<::Fusion::Photon::Realtime::ILobbyCallbacks*>(this);
    }
    // Creating interface conversion operator: operator ::System::IDisposable
    operator ::System::IDisposable() noexcept {
      return *reinterpret_cast<::System::IDisposable*>(this);
    }
    // static field const value: static private System.String MSG_START_BEFORE_JOIN
    static constexpr const char* MSG_START_BEFORE_JOIN = "Received Start Message, but never a Join Confirmation. Shutdown.";
    // Get static field: static private System.String MSG_START_BEFORE_JOIN
    static ::StringW _get_MSG_START_BEFORE_JOIN();
    // Set static field: static private System.String MSG_START_BEFORE_JOIN
    static void _set_MSG_START_BEFORE_JOIN(::StringW value);
    // static field const value: static private System.String MSG_RUNNER_FAIL_INIT
    static constexpr const char* MSG_RUNNER_FAIL_INIT = "Runner failed to Initialize. Shutdown.";
    // Get static field: static private System.String MSG_RUNNER_FAIL_INIT
    static ::StringW _get_MSG_RUNNER_FAIL_INIT();
    // Set static field: static private System.String MSG_RUNNER_FAIL_INIT
    static void _set_MSG_RUNNER_FAIL_INIT(::StringW value);
    // static field const value: static private System.String MSG_JOIN_TIMEOUT
    static constexpr const char* MSG_JOIN_TIMEOUT = "Join Confirmation timeout. Shutdown.";
    // Get static field: static private System.String MSG_JOIN_TIMEOUT
    static ::StringW _get_MSG_JOIN_TIMEOUT();
    // Set static field: static private System.String MSG_JOIN_TIMEOUT
    static void _set_MSG_JOIN_TIMEOUT(::StringW value);
    // Get instance field reference: private System.Boolean <IsNATPunchthroughEnabled>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$IsNATPunchthroughEnabled$k__BackingField();
    // Get instance field reference: private System.String <CustomSTUNServer>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$CustomSTUNServer$k__BackingField();
    // Get instance field reference: private readonly Fusion.CloudServicesMetadata _metadata
    [[deprecated("Use field access instead!")]] ::Fusion::CloudServicesMetadata*& dyn__metadata();
    // Get instance field reference: private readonly Fusion.NetworkRunner _runner
    [[deprecated("Use field access instead!")]] ::Fusion::NetworkRunner*& dyn__runner();
    // Get instance field reference: private Fusion.CloudCommunicator _communicator
    [[deprecated("Use field access instead!")]] ::Fusion::CloudCommunicator*& dyn__communicator();
    // Get instance field reference: private readonly System.Diagnostics.Stopwatch _watch
    [[deprecated("Use field access instead!")]] ::System::Diagnostics::Stopwatch*& dyn__watch();
    // Get instance field reference: private readonly System.Collections.Generic.Dictionary`2<System.String,Fusion.SessionInfo> cachedSessionList
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::Fusion::SessionInfo*>*& dyn_cachedSessionList();
    // Get instance field reference: private readonly System.Diagnostics.Stopwatch _snapshotWatch
    [[deprecated("Use field access instead!")]] ::System::Diagnostics::Stopwatch*& dyn__snapshotWatch();
    // Get instance field reference: private System.Int32 _lastSnapshotTick
    [[deprecated("Use field access instead!")]] int& dyn__lastSnapshotTick();
    // Get instance field reference: private System.Int32 _lastConfirmedSnapshotTick
    [[deprecated("Use field access instead!")]] int& dyn__lastConfirmedSnapshotTick();
    // public System.Void OnConnected()
    // Offset: 0x2AFFB78
    void OnConnected();
    // public System.Void OnConnectedToMaster()
    // Offset: 0x2AFFB7C
    void OnConnectedToMaster();
    // public System.Void OnCustomAuthenticationFailed(System.String debugMessage)
    // Offset: 0x2AFFB80
    void OnCustomAuthenticationFailed(::StringW debugMessage);
    // public System.Void OnCustomAuthenticationResponse(System.Collections.Generic.Dictionary`2<System.String,System.Object> data)
    // Offset: 0x2AFFC64
    void OnCustomAuthenticationResponse(::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* data);
    // public System.Void OnDisconnected(Fusion.Photon.Realtime.DisconnectCause cause)
    // Offset: 0x2AFFC78
    void OnDisconnected(::Fusion::Photon::Realtime::DisconnectCause cause);
    // public System.Void OnRegionListReceived(Fusion.Photon.Realtime.RegionHandler regionHandler)
    // Offset: 0x2AFFDCC
    void OnRegionListReceived(::Fusion::Photon::Realtime::RegionHandler* regionHandler);
    // public System.Void OnCreatedRoom()
    // Offset: 0x2AFFDD0
    void OnCreatedRoom();
    // public System.Void OnJoinedRoom()
    // Offset: 0x2AFFDD4
    void OnJoinedRoom();
    // public System.Void OnLeftRoom()
    // Offset: 0x2AFFDF8
    void OnLeftRoom();
    // public System.Void OnFriendListUpdate(System.Collections.Generic.List`1<Fusion.Photon.Realtime.FriendInfo> friendList)
    // Offset: 0x2AFFE1C
    void OnFriendListUpdate(::System::Collections::Generic::List_1<::Fusion::Photon::Realtime::FriendInfo*>* friendList);
    // public System.Void OnCreateRoomFailed(System.Int16 returnCode, System.String message)
    // Offset: 0x2AFFE20
    void OnCreateRoomFailed(int16_t returnCode, ::StringW message);
    // public System.Void OnJoinRandomFailed(System.Int16 returnCode, System.String message)
    // Offset: 0x2AFFE24
    void OnJoinRandomFailed(int16_t returnCode, ::StringW message);
    // public System.Void OnJoinRoomFailed(System.Int16 returnCode, System.String message)
    // Offset: 0x2AFFE28
    void OnJoinRoomFailed(int16_t returnCode, ::StringW message);
    // public System.Void OnJoinedLobby()
    // Offset: 0x2AFFE2C
    void OnJoinedLobby();
    // public System.Void OnLeftLobby()
    // Offset: 0x2AFFF04
    void OnLeftLobby();
    // public System.Void OnRoomListUpdate(System.Collections.Generic.List`1<Fusion.Photon.Realtime.RoomInfo> roomList)
    // Offset: 0x2AFFF28
    void OnRoomListUpdate(::System::Collections::Generic::List_1<::Fusion::Photon::Realtime::RoomInfo*>* roomList);
    // public System.Void OnLobbyStatisticsUpdate(System.Collections.Generic.List`1<Fusion.Photon.Realtime.TypedLobbyInfo> lobbyStatistics)
    // Offset: 0x2B002B8
    void OnLobbyStatisticsUpdate(::System::Collections::Generic::List_1<::Fusion::Photon::Realtime::TypedLobbyInfo*>* lobbyStatistics);
    // private System.Void OperationFailHandler(System.Int16 returnCode, System.String message)
    // Offset: 0x2AFFB8C
    void OperationFailHandler(int16_t returnCode, ::StringW message);
    // public System.Boolean get_IsCloudReady()
    // Offset: 0x2B002F4
    bool get_IsCloudReady();
    // public System.String get_UserId()
    // Offset: 0x2B00314
    ::StringW get_UserId();
    // public System.Boolean get_IsInRoom()
    // Offset: 0x2B00364
    bool get_IsInRoom();
    // public System.Boolean get_IsInLobby()
    // Offset: 0x2B003B4
    bool get_IsInLobby();
    // public System.Int32 get_SessionSlots()
    // Offset: 0x2B00404
    int get_SessionSlots();
    // public System.Boolean get_IsMasterClient()
    // Offset: 0x2B00448
    bool get_IsMasterClient();
    // public Fusion.Photon.Realtime.AuthenticationValues get_AuthenticationValues()
    // Offset: 0x2B0048C
    ::Fusion::Photon::Realtime::AuthenticationValues* get_AuthenticationValues();
    // public Fusion.Protocol.ICommunicator get_Communicator()
    // Offset: 0x2B004E0
    ::Fusion::Protocol::ICommunicator* get_Communicator();
    // public System.Boolean get_IsNATPunchthroughEnabled()
    // Offset: 0x2B004E8
    bool get_IsNATPunchthroughEnabled();
    // System.Void set_IsNATPunchthroughEnabled(System.Boolean value)
    // Offset: 0x2B004F0
    void set_IsNATPunchthroughEnabled(bool value);
    // public System.String get_CustomSTUNServer()
    // Offset: 0x2B004FC
    ::StringW get_CustomSTUNServer();
    // System.Void set_CustomSTUNServer(System.String value)
    // Offset: 0x2B00504
    void set_CustomSTUNServer(::StringW value);
    // public Fusion.Sockets.Stun.NATType get_NATType()
    // Offset: 0x2B0050C
    ::Fusion::Sockets::Stun::NATType get_NATType();
    // private System.Boolean get_IsServerOrMasterClient()
    // Offset: 0x2B0052C
    bool get_IsServerOrMasterClient();
    // public System.Void .ctor(Fusion.NetworkRunner runner, Fusion.CloudCommunicator communicator)
    // Offset: 0x2B005D0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CloudServices* New_ctor(::Fusion::NetworkRunner* runner, ::Fusion::CloudCommunicator* communicator) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::CloudServices::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CloudServices*, creationType>(runner, communicator)));
    }
    // public Fusion.CloudCommunicator ExtractCommunicator()
    // Offset: 0x2B00E88
    ::Fusion::CloudCommunicator* ExtractCommunicator();
    // public System.Void Update()
    // Offset: 0x2B00F6C
    void Update();
    // public System.Threading.Tasks.Task ConnectToCloud(Fusion.Photon.Realtime.AuthenticationValues authentication, Fusion.Photon.Realtime.AppSettings customAppSettings, System.Nullable`1<System.Boolean> useDefaultCloudPorts)
    // Offset: 0x2B010B4
    ::System::Threading::Tasks::Task* ConnectToCloud(::Fusion::Photon::Realtime::AuthenticationValues* authentication, ::Fusion::Photon::Realtime::AppSettings* customAppSettings, ::System::Nullable_1<bool> useDefaultCloudPorts);
    // public System.Threading.Tasks.Task`1<System.Int16> JoinSessionLobby(Fusion.SessionLobby sessionLobby, System.String lobbyID, Fusion.Photon.Realtime.LobbyType lobbyType)
    // Offset: 0x2B011D4
    ::System::Threading::Tasks::Task_1<int16_t>* JoinSessionLobby(::Fusion::SessionLobby sessionLobby, ::StringW lobbyID, ::Fusion::Photon::Realtime::LobbyType lobbyType);
    // public System.Threading.Tasks.Task`1<System.Int16> EnterRoom(Fusion.StartGameArgs args)
    // Offset: 0x2B01414
    ::System::Threading::Tasks::Task_1<int16_t>* EnterRoom(::Fusion::StartGameArgs args);
    // public System.Threading.Tasks.Task DisconnectFromCloud()
    // Offset: 0x2B018B8
    ::System::Threading::Tasks::Task* DisconnectFromCloud();
    // public System.String GetActorUserID(System.Int32 actorID)
    // Offset: 0x2B0199C
    ::StringW GetActorUserID(int actorID);
    // public System.Boolean TryGetActorIdByUniqueId(System.Int64 uniqueId, out System.Int32 actorId)
    // Offset: 0x2B01A50
    bool TryGetActorIdByUniqueId(int64_t uniqueId, ByRef<int> actorId);
    // System.Void OnInternalConnectionAttempt(System.Int32 attempt, System.Int32 totalConnectionAttempts, out System.Boolean shouldChange, out Fusion.Sockets.NetAddress newAddress)
    // Offset: 0x2B01AE8
    void OnInternalConnectionAttempt(int attempt, int totalConnectionAttempts, ByRef<bool> shouldChange, ByRef<::Fusion::Sockets::NetAddress> newAddress);
    // private System.Void Connect(Fusion.NATPunchStage punchStage, Fusion.Sockets.NetAddress endPoint)
    // Offset: 0x2B01CCC
    void Connect(::Fusion::NATPunchStage punchStage, ::Fusion::Sockets::NetAddress endPoint);
    // public System.Void Dispose()
    // Offset: 0x2B01D4C
    void Dispose();
    // System.Void OnRoomChanged()
    // Offset: 0x2B01D84
    void OnRoomChanged();
    // System.Boolean UpdateRoomProperties(System.Collections.Generic.Dictionary`2<System.String,Fusion.SessionProperty> customProperties)
    // Offset: 0x2B01FA0
    bool UpdateRoomProperties(::System::Collections::Generic::Dictionary_2<::StringW, ::Fusion::SessionProperty*>* customProperties);
    // System.Boolean UpdateRoomIsOpen(System.Boolean status)
    // Offset: 0x2B01FFC
    bool UpdateRoomIsOpen(bool status);
    // System.Boolean UpdateRoomIsVisible(System.Boolean status)
    // Offset: 0x2B02058
    bool UpdateRoomIsVisible(bool status);
    // private System.Void OnRoomListChanged(System.Collections.Generic.List`1<Fusion.Photon.Realtime.RoomInfo> roomList)
    // Offset: 0x2AFFF2C
    void OnRoomListChanged(::System::Collections::Generic::List_1<::Fusion::Photon::Realtime::RoomInfo*>* roomList);
    // public System.Void SendJoinMessage()
    // Offset: 0x2B020B4
    void SendJoinMessage();
    // public System.Void SendNetworkSyncMessage(Fusion.NetworkProjectConfig projectConfig)
    // Offset: 0x2B02238
    void SendNetworkSyncMessage(::Fusion::NetworkProjectConfig* projectConfig);
    // public System.Void SendReflexiveInfo(Fusion.Sockets.Stun.StunResult stunResult)
    // Offset: 0x2B022DC
    void SendReflexiveInfo(::Fusion::Sockets::Stun::StunResult* stunResult);
    // public System.Void SendStateSnapshot(System.Int32 snapshotSize, System.Int32 tick, System.UInt32 lastId, System.Byte[] data)
    // Offset: 0x2B0241C
    void SendStateSnapshot(int snapshotSize, int tick, uint lastId, ::ArrayW<uint8_t> data);
    // private System.Void HandleJoinMessage(System.Int32 sender, Fusion.Protocol.Join join)
    // Offset: 0x2B02568
    void HandleJoinMessage(int sender, ::Fusion::Protocol::Join* join);
    // private System.Void HandleStartMessage(System.Int32 sender, Fusion.Protocol.Start start)
    // Offset: 0x2B0268C
    void HandleStartMessage(int sender, ::Fusion::Protocol::Start* start);
    // private System.Void HandleDisconnectMessage(System.Int32 sender, Fusion.Protocol.Disconnect disconnect)
    // Offset: 0x2B02764
    void HandleDisconnectMessage(int sender, ::Fusion::Protocol::Disconnect* disconnect);
    // private System.Void HandleNetworkConfigMessage(System.Int32 sender, Fusion.Protocol.NetworkConfigSync configSync)
    // Offset: 0x2B02784
    void HandleNetworkConfigMessage(int sender, ::Fusion::Protocol::NetworkConfigSync* configSync);
    // private System.Void HandleReflexiveInfoMessage(System.Int32 sender, Fusion.Protocol.ReflexiveInfo reflexiveInfo)
    // Offset: 0x2B02788
    void HandleReflexiveInfoMessage(int sender, ::Fusion::Protocol::ReflexiveInfo* reflexiveInfo);
    // private System.Void HandleHostMigrationMessage(System.Int32 sender, Fusion.Protocol.HostMigration hostMigration)
    // Offset: 0x2B02858
    void HandleHostMigrationMessage(int sender, ::Fusion::Protocol::HostMigration* hostMigration);
    // private System.Void HandleSnapshotMessage(System.Int32 sender, Fusion.Protocol.Snapshot snapshot)
    // Offset: 0x2B028C0
    void HandleSnapshotMessage(int sender, ::Fusion::Protocol::Snapshot* snapshot);
    // private System.Void Service_CheckScheduledRequests()
    // Offset: 0x2B00FA4
    void Service_CheckScheduledRequests();
    // private System.Threading.Tasks.Task`1<System.Boolean> ConfirmJoin()
    // Offset: 0x2B02948
    ::System::Threading::Tasks::Task_1<bool>* ConfirmJoin();
    // System.Void StartBackgroundCloudServices()
    // Offset: 0x2B02A54
    void StartBackgroundCloudServices();
    // private System.Threading.Tasks.Task`1<System.Boolean> Service_SendHostMigrationSnapshots()
    // Offset: 0x2B02B5C
    ::System::Threading::Tasks::Task_1<bool>* Service_SendHostMigrationSnapshots();
    // System.Threading.Tasks.Task`1<System.Boolean> SendHostMigrationSnapshot()
    // Offset: 0x2B02C68
    ::System::Threading::Tasks::Task_1<bool>* SendHostMigrationSnapshot();
    // private System.Void Run_ReversePing(Fusion.Sockets.NetAddress remoteAddr)
    // Offset: 0x2B02D78
    void Run_ReversePing(::Fusion::Sockets::NetAddress remoteAddr);
    // private System.Threading.Tasks.Task`1<Fusion.Sockets.Stun.StunResult> QueryReflexiveInfo()
    // Offset: 0x2B02EE8
    ::System::Threading::Tasks::Task_1<::Fusion::Sockets::Stun::StunResult*>* QueryReflexiveInfo();
    // public System.Void UpdateInitializeArgs(Fusion.NetworkRunnerInitializeArgs newArgs)
    // Offset: 0x2B03018
    void UpdateInitializeArgs(::Fusion::NetworkRunnerInitializeArgs newArgs);
    // private System.Boolean CheckSubnet(Fusion.Sockets.NetAddress remotePrivateEndPoint)
    // Offset: 0x2B03088
    bool CheckSubnet(::Fusion::Sockets::NetAddress remotePrivateEndPoint);
    // private System.Void InitRelayLogs()
    // Offset: 0x2B00B70
    void InitRelayLogs();
    // private System.Void UpdateSessionInfo(Fusion.SessionInfo sessionInfo, Fusion.Photon.Realtime.RoomInfo roomInfo, System.String region)
    // Offset: 0x2B01DD0
    void UpdateSessionInfo(::Fusion::SessionInfo* sessionInfo, ::Fusion::Photon::Realtime::RoomInfo* roomInfo, ::StringW region);
  }; // Fusion.CloudServices
  #pragma pack(pop)
  static check_size<sizeof(CloudServices), 84 + sizeof(int)> __Fusion_CloudServicesSizeCheck;
  static_assert(sizeof(CloudServices) == 0x58);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::CloudServices::OnConnected
// Il2CppName: OnConnected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::CloudServices::*)()>(&Fusion::CloudServices::OnConnected)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "OnConnected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::OnConnectedToMaster
// Il2CppName: OnConnectedToMaster
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::CloudServices::*)()>(&Fusion::CloudServices::OnConnectedToMaster)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "OnConnectedToMaster", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::OnCustomAuthenticationFailed
// Il2CppName: OnCustomAuthenticationFailed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::CloudServices::*)(::StringW)>(&Fusion::CloudServices::OnCustomAuthenticationFailed)> {
  static const MethodInfo* get() {
    static auto* debugMessage = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "OnCustomAuthenticationFailed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{debugMessage});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::OnCustomAuthenticationResponse
// Il2CppName: OnCustomAuthenticationResponse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::CloudServices::*)(::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*)>(&Fusion::CloudServices::OnCustomAuthenticationResponse)> {
  static const MethodInfo* get() {
    static auto* data = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Object")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "OnCustomAuthenticationResponse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::OnDisconnected
// Il2CppName: OnDisconnected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::CloudServices::*)(::Fusion::Photon::Realtime::DisconnectCause)>(&Fusion::CloudServices::OnDisconnected)> {
  static const MethodInfo* get() {
    static auto* cause = &::il2cpp_utils::GetClassFromName("Fusion.Photon.Realtime", "DisconnectCause")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "OnDisconnected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cause});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::OnRegionListReceived
// Il2CppName: OnRegionListReceived
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::CloudServices::*)(::Fusion::Photon::Realtime::RegionHandler*)>(&Fusion::CloudServices::OnRegionListReceived)> {
  static const MethodInfo* get() {
    static auto* regionHandler = &::il2cpp_utils::GetClassFromName("Fusion.Photon.Realtime", "RegionHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "OnRegionListReceived", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{regionHandler});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::OnCreatedRoom
// Il2CppName: OnCreatedRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::CloudServices::*)()>(&Fusion::CloudServices::OnCreatedRoom)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "OnCreatedRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::OnJoinedRoom
// Il2CppName: OnJoinedRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::CloudServices::*)()>(&Fusion::CloudServices::OnJoinedRoom)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "OnJoinedRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::OnLeftRoom
// Il2CppName: OnLeftRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::CloudServices::*)()>(&Fusion::CloudServices::OnLeftRoom)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "OnLeftRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::OnFriendListUpdate
// Il2CppName: OnFriendListUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::CloudServices::*)(::System::Collections::Generic::List_1<::Fusion::Photon::Realtime::FriendInfo*>*)>(&Fusion::CloudServices::OnFriendListUpdate)> {
  static const MethodInfo* get() {
    static auto* friendList = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Fusion.Photon.Realtime", "FriendInfo")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "OnFriendListUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{friendList});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::OnCreateRoomFailed
// Il2CppName: OnCreateRoomFailed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::CloudServices::*)(int16_t, ::StringW)>(&Fusion::CloudServices::OnCreateRoomFailed)> {
  static const MethodInfo* get() {
    static auto* returnCode = &::il2cpp_utils::GetClassFromName("System", "Int16")->byval_arg;
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "OnCreateRoomFailed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{returnCode, message});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::OnJoinRandomFailed
// Il2CppName: OnJoinRandomFailed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::CloudServices::*)(int16_t, ::StringW)>(&Fusion::CloudServices::OnJoinRandomFailed)> {
  static const MethodInfo* get() {
    static auto* returnCode = &::il2cpp_utils::GetClassFromName("System", "Int16")->byval_arg;
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "OnJoinRandomFailed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{returnCode, message});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::OnJoinRoomFailed
// Il2CppName: OnJoinRoomFailed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::CloudServices::*)(int16_t, ::StringW)>(&Fusion::CloudServices::OnJoinRoomFailed)> {
  static const MethodInfo* get() {
    static auto* returnCode = &::il2cpp_utils::GetClassFromName("System", "Int16")->byval_arg;
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "OnJoinRoomFailed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{returnCode, message});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::OnJoinedLobby
// Il2CppName: OnJoinedLobby
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::CloudServices::*)()>(&Fusion::CloudServices::OnJoinedLobby)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "OnJoinedLobby", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::OnLeftLobby
// Il2CppName: OnLeftLobby
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::CloudServices::*)()>(&Fusion::CloudServices::OnLeftLobby)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "OnLeftLobby", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::OnRoomListUpdate
// Il2CppName: OnRoomListUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::CloudServices::*)(::System::Collections::Generic::List_1<::Fusion::Photon::Realtime::RoomInfo*>*)>(&Fusion::CloudServices::OnRoomListUpdate)> {
  static const MethodInfo* get() {
    static auto* roomList = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Fusion.Photon.Realtime", "RoomInfo")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "OnRoomListUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{roomList});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::OnLobbyStatisticsUpdate
// Il2CppName: OnLobbyStatisticsUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::CloudServices::*)(::System::Collections::Generic::List_1<::Fusion::Photon::Realtime::TypedLobbyInfo*>*)>(&Fusion::CloudServices::OnLobbyStatisticsUpdate)> {
  static const MethodInfo* get() {
    static auto* lobbyStatistics = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Fusion.Photon.Realtime", "TypedLobbyInfo")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "OnLobbyStatisticsUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{lobbyStatistics});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::OperationFailHandler
// Il2CppName: OperationFailHandler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::CloudServices::*)(int16_t, ::StringW)>(&Fusion::CloudServices::OperationFailHandler)> {
  static const MethodInfo* get() {
    static auto* returnCode = &::il2cpp_utils::GetClassFromName("System", "Int16")->byval_arg;
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "OperationFailHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{returnCode, message});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::get_IsCloudReady
// Il2CppName: get_IsCloudReady
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::CloudServices::*)()>(&Fusion::CloudServices::get_IsCloudReady)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "get_IsCloudReady", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::get_UserId
// Il2CppName: get_UserId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Fusion::CloudServices::*)()>(&Fusion::CloudServices::get_UserId)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "get_UserId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::get_IsInRoom
// Il2CppName: get_IsInRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::CloudServices::*)()>(&Fusion::CloudServices::get_IsInRoom)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "get_IsInRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::get_IsInLobby
// Il2CppName: get_IsInLobby
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::CloudServices::*)()>(&Fusion::CloudServices::get_IsInLobby)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "get_IsInLobby", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::get_SessionSlots
// Il2CppName: get_SessionSlots
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Fusion::CloudServices::*)()>(&Fusion::CloudServices::get_SessionSlots)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "get_SessionSlots", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::get_IsMasterClient
// Il2CppName: get_IsMasterClient
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::CloudServices::*)()>(&Fusion::CloudServices::get_IsMasterClient)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "get_IsMasterClient", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::get_AuthenticationValues
// Il2CppName: get_AuthenticationValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::Photon::Realtime::AuthenticationValues* (Fusion::CloudServices::*)()>(&Fusion::CloudServices::get_AuthenticationValues)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "get_AuthenticationValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::get_Communicator
// Il2CppName: get_Communicator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::Protocol::ICommunicator* (Fusion::CloudServices::*)()>(&Fusion::CloudServices::get_Communicator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "get_Communicator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::get_IsNATPunchthroughEnabled
// Il2CppName: get_IsNATPunchthroughEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::CloudServices::*)()>(&Fusion::CloudServices::get_IsNATPunchthroughEnabled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "get_IsNATPunchthroughEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::set_IsNATPunchthroughEnabled
// Il2CppName: set_IsNATPunchthroughEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::CloudServices::*)(bool)>(&Fusion::CloudServices::set_IsNATPunchthroughEnabled)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "set_IsNATPunchthroughEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::get_CustomSTUNServer
// Il2CppName: get_CustomSTUNServer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Fusion::CloudServices::*)()>(&Fusion::CloudServices::get_CustomSTUNServer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "get_CustomSTUNServer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::set_CustomSTUNServer
// Il2CppName: set_CustomSTUNServer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::CloudServices::*)(::StringW)>(&Fusion::CloudServices::set_CustomSTUNServer)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "set_CustomSTUNServer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::get_NATType
// Il2CppName: get_NATType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::Sockets::Stun::NATType (Fusion::CloudServices::*)()>(&Fusion::CloudServices::get_NATType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "get_NATType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::get_IsServerOrMasterClient
// Il2CppName: get_IsServerOrMasterClient
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::CloudServices::*)()>(&Fusion::CloudServices::get_IsServerOrMasterClient)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "get_IsServerOrMasterClient", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Fusion::CloudServices::ExtractCommunicator
// Il2CppName: ExtractCommunicator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::CloudCommunicator* (Fusion::CloudServices::*)()>(&Fusion::CloudServices::ExtractCommunicator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "ExtractCommunicator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::CloudServices::*)()>(&Fusion::CloudServices::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::ConnectToCloud
// Il2CppName: ConnectToCloud
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task* (Fusion::CloudServices::*)(::Fusion::Photon::Realtime::AuthenticationValues*, ::Fusion::Photon::Realtime::AppSettings*, ::System::Nullable_1<bool>)>(&Fusion::CloudServices::ConnectToCloud)> {
  static const MethodInfo* get() {
    static auto* authentication = &::il2cpp_utils::GetClassFromName("Fusion.Photon.Realtime", "AuthenticationValues")->byval_arg;
    static auto* customAppSettings = &::il2cpp_utils::GetClassFromName("Fusion.Photon.Realtime", "AppSettings")->byval_arg;
    static auto* useDefaultCloudPorts = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Boolean")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "ConnectToCloud", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{authentication, customAppSettings, useDefaultCloudPorts});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::JoinSessionLobby
// Il2CppName: JoinSessionLobby
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<int16_t>* (Fusion::CloudServices::*)(::Fusion::SessionLobby, ::StringW, ::Fusion::Photon::Realtime::LobbyType)>(&Fusion::CloudServices::JoinSessionLobby)> {
  static const MethodInfo* get() {
    static auto* sessionLobby = &::il2cpp_utils::GetClassFromName("Fusion", "SessionLobby")->byval_arg;
    static auto* lobbyID = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* lobbyType = &::il2cpp_utils::GetClassFromName("Fusion.Photon.Realtime", "LobbyType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "JoinSessionLobby", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionLobby, lobbyID, lobbyType});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::EnterRoom
// Il2CppName: EnterRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<int16_t>* (Fusion::CloudServices::*)(::Fusion::StartGameArgs)>(&Fusion::CloudServices::EnterRoom)> {
  static const MethodInfo* get() {
    static auto* args = &::il2cpp_utils::GetClassFromName("Fusion", "StartGameArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "EnterRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{args});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::DisconnectFromCloud
// Il2CppName: DisconnectFromCloud
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task* (Fusion::CloudServices::*)()>(&Fusion::CloudServices::DisconnectFromCloud)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "DisconnectFromCloud", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::GetActorUserID
// Il2CppName: GetActorUserID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Fusion::CloudServices::*)(int)>(&Fusion::CloudServices::GetActorUserID)> {
  static const MethodInfo* get() {
    static auto* actorID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "GetActorUserID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{actorID});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::TryGetActorIdByUniqueId
// Il2CppName: TryGetActorIdByUniqueId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::CloudServices::*)(int64_t, ByRef<int>)>(&Fusion::CloudServices::TryGetActorIdByUniqueId)> {
  static const MethodInfo* get() {
    static auto* uniqueId = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* actorId = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "TryGetActorIdByUniqueId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{uniqueId, actorId});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::OnInternalConnectionAttempt
// Il2CppName: OnInternalConnectionAttempt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::CloudServices::*)(int, int, ByRef<bool>, ByRef<::Fusion::Sockets::NetAddress>)>(&Fusion::CloudServices::OnInternalConnectionAttempt)> {
  static const MethodInfo* get() {
    static auto* attempt = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* totalConnectionAttempts = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* shouldChange = &::il2cpp_utils::GetClassFromName("System", "Boolean")->this_arg;
    static auto* newAddress = &::il2cpp_utils::GetClassFromName("Fusion.Sockets", "NetAddress")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "OnInternalConnectionAttempt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{attempt, totalConnectionAttempts, shouldChange, newAddress});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::Connect
// Il2CppName: Connect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::CloudServices::*)(::Fusion::NATPunchStage, ::Fusion::Sockets::NetAddress)>(&Fusion::CloudServices::Connect)> {
  static const MethodInfo* get() {
    static auto* punchStage = &::il2cpp_utils::GetClassFromName("Fusion", "NATPunchStage")->byval_arg;
    static auto* endPoint = &::il2cpp_utils::GetClassFromName("Fusion.Sockets", "NetAddress")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "Connect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{punchStage, endPoint});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::CloudServices::*)()>(&Fusion::CloudServices::Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::OnRoomChanged
// Il2CppName: OnRoomChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::CloudServices::*)()>(&Fusion::CloudServices::OnRoomChanged)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "OnRoomChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::UpdateRoomProperties
// Il2CppName: UpdateRoomProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::CloudServices::*)(::System::Collections::Generic::Dictionary_2<::StringW, ::Fusion::SessionProperty*>*)>(&Fusion::CloudServices::UpdateRoomProperties)> {
  static const MethodInfo* get() {
    static auto* customProperties = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("Fusion", "SessionProperty")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "UpdateRoomProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{customProperties});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::UpdateRoomIsOpen
// Il2CppName: UpdateRoomIsOpen
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::CloudServices::*)(bool)>(&Fusion::CloudServices::UpdateRoomIsOpen)> {
  static const MethodInfo* get() {
    static auto* status = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "UpdateRoomIsOpen", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{status});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::UpdateRoomIsVisible
// Il2CppName: UpdateRoomIsVisible
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::CloudServices::*)(bool)>(&Fusion::CloudServices::UpdateRoomIsVisible)> {
  static const MethodInfo* get() {
    static auto* status = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "UpdateRoomIsVisible", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{status});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::OnRoomListChanged
// Il2CppName: OnRoomListChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::CloudServices::*)(::System::Collections::Generic::List_1<::Fusion::Photon::Realtime::RoomInfo*>*)>(&Fusion::CloudServices::OnRoomListChanged)> {
  static const MethodInfo* get() {
    static auto* roomList = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Fusion.Photon.Realtime", "RoomInfo")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "OnRoomListChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{roomList});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::SendJoinMessage
// Il2CppName: SendJoinMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::CloudServices::*)()>(&Fusion::CloudServices::SendJoinMessage)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "SendJoinMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::SendNetworkSyncMessage
// Il2CppName: SendNetworkSyncMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::CloudServices::*)(::Fusion::NetworkProjectConfig*)>(&Fusion::CloudServices::SendNetworkSyncMessage)> {
  static const MethodInfo* get() {
    static auto* projectConfig = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkProjectConfig")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "SendNetworkSyncMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{projectConfig});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::SendReflexiveInfo
// Il2CppName: SendReflexiveInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::CloudServices::*)(::Fusion::Sockets::Stun::StunResult*)>(&Fusion::CloudServices::SendReflexiveInfo)> {
  static const MethodInfo* get() {
    static auto* stunResult = &::il2cpp_utils::GetClassFromName("Fusion.Sockets.Stun", "StunResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "SendReflexiveInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stunResult});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::SendStateSnapshot
// Il2CppName: SendStateSnapshot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::CloudServices::*)(int, int, uint, ::ArrayW<uint8_t>)>(&Fusion::CloudServices::SendStateSnapshot)> {
  static const MethodInfo* get() {
    static auto* snapshotSize = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* tick = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* lastId = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "SendStateSnapshot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{snapshotSize, tick, lastId, data});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::HandleJoinMessage
// Il2CppName: HandleJoinMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::CloudServices::*)(int, ::Fusion::Protocol::Join*)>(&Fusion::CloudServices::HandleJoinMessage)> {
  static const MethodInfo* get() {
    static auto* sender = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* join = &::il2cpp_utils::GetClassFromName("Fusion.Protocol", "Join")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "HandleJoinMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sender, join});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::HandleStartMessage
// Il2CppName: HandleStartMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::CloudServices::*)(int, ::Fusion::Protocol::Start*)>(&Fusion::CloudServices::HandleStartMessage)> {
  static const MethodInfo* get() {
    static auto* sender = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* start = &::il2cpp_utils::GetClassFromName("Fusion.Protocol", "Start")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "HandleStartMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sender, start});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::HandleDisconnectMessage
// Il2CppName: HandleDisconnectMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::CloudServices::*)(int, ::Fusion::Protocol::Disconnect*)>(&Fusion::CloudServices::HandleDisconnectMessage)> {
  static const MethodInfo* get() {
    static auto* sender = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* disconnect = &::il2cpp_utils::GetClassFromName("Fusion.Protocol", "Disconnect")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "HandleDisconnectMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sender, disconnect});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::HandleNetworkConfigMessage
// Il2CppName: HandleNetworkConfigMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::CloudServices::*)(int, ::Fusion::Protocol::NetworkConfigSync*)>(&Fusion::CloudServices::HandleNetworkConfigMessage)> {
  static const MethodInfo* get() {
    static auto* sender = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* configSync = &::il2cpp_utils::GetClassFromName("Fusion.Protocol", "NetworkConfigSync")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "HandleNetworkConfigMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sender, configSync});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::HandleReflexiveInfoMessage
// Il2CppName: HandleReflexiveInfoMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::CloudServices::*)(int, ::Fusion::Protocol::ReflexiveInfo*)>(&Fusion::CloudServices::HandleReflexiveInfoMessage)> {
  static const MethodInfo* get() {
    static auto* sender = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* reflexiveInfo = &::il2cpp_utils::GetClassFromName("Fusion.Protocol", "ReflexiveInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "HandleReflexiveInfoMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sender, reflexiveInfo});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::HandleHostMigrationMessage
// Il2CppName: HandleHostMigrationMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::CloudServices::*)(int, ::Fusion::Protocol::HostMigration*)>(&Fusion::CloudServices::HandleHostMigrationMessage)> {
  static const MethodInfo* get() {
    static auto* sender = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* hostMigration = &::il2cpp_utils::GetClassFromName("Fusion.Protocol", "HostMigration")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "HandleHostMigrationMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sender, hostMigration});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::HandleSnapshotMessage
// Il2CppName: HandleSnapshotMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::CloudServices::*)(int, ::Fusion::Protocol::Snapshot*)>(&Fusion::CloudServices::HandleSnapshotMessage)> {
  static const MethodInfo* get() {
    static auto* sender = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* snapshot = &::il2cpp_utils::GetClassFromName("Fusion.Protocol", "Snapshot")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "HandleSnapshotMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sender, snapshot});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::Service_CheckScheduledRequests
// Il2CppName: Service_CheckScheduledRequests
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::CloudServices::*)()>(&Fusion::CloudServices::Service_CheckScheduledRequests)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "Service_CheckScheduledRequests", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::ConfirmJoin
// Il2CppName: ConfirmJoin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<bool>* (Fusion::CloudServices::*)()>(&Fusion::CloudServices::ConfirmJoin)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "ConfirmJoin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::StartBackgroundCloudServices
// Il2CppName: StartBackgroundCloudServices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::CloudServices::*)()>(&Fusion::CloudServices::StartBackgroundCloudServices)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "StartBackgroundCloudServices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::Service_SendHostMigrationSnapshots
// Il2CppName: Service_SendHostMigrationSnapshots
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<bool>* (Fusion::CloudServices::*)()>(&Fusion::CloudServices::Service_SendHostMigrationSnapshots)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "Service_SendHostMigrationSnapshots", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::SendHostMigrationSnapshot
// Il2CppName: SendHostMigrationSnapshot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<bool>* (Fusion::CloudServices::*)()>(&Fusion::CloudServices::SendHostMigrationSnapshot)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "SendHostMigrationSnapshot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::Run_ReversePing
// Il2CppName: Run_ReversePing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::CloudServices::*)(::Fusion::Sockets::NetAddress)>(&Fusion::CloudServices::Run_ReversePing)> {
  static const MethodInfo* get() {
    static auto* remoteAddr = &::il2cpp_utils::GetClassFromName("Fusion.Sockets", "NetAddress")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "Run_ReversePing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{remoteAddr});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::QueryReflexiveInfo
// Il2CppName: QueryReflexiveInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::Fusion::Sockets::Stun::StunResult*>* (Fusion::CloudServices::*)()>(&Fusion::CloudServices::QueryReflexiveInfo)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "QueryReflexiveInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::UpdateInitializeArgs
// Il2CppName: UpdateInitializeArgs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::CloudServices::*)(::Fusion::NetworkRunnerInitializeArgs)>(&Fusion::CloudServices::UpdateInitializeArgs)> {
  static const MethodInfo* get() {
    static auto* newArgs = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunnerInitializeArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "UpdateInitializeArgs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newArgs});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::CheckSubnet
// Il2CppName: CheckSubnet
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::CloudServices::*)(::Fusion::Sockets::NetAddress)>(&Fusion::CloudServices::CheckSubnet)> {
  static const MethodInfo* get() {
    static auto* remotePrivateEndPoint = &::il2cpp_utils::GetClassFromName("Fusion.Sockets", "NetAddress")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "CheckSubnet", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{remotePrivateEndPoint});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::InitRelayLogs
// Il2CppName: InitRelayLogs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::CloudServices::*)()>(&Fusion::CloudServices::InitRelayLogs)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "InitRelayLogs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::UpdateSessionInfo
// Il2CppName: UpdateSessionInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::CloudServices::*)(::Fusion::SessionInfo*, ::Fusion::Photon::Realtime::RoomInfo*, ::StringW)>(&Fusion::CloudServices::UpdateSessionInfo)> {
  static const MethodInfo* get() {
    static auto* sessionInfo = &::il2cpp_utils::GetClassFromName("Fusion", "SessionInfo")->byval_arg;
    static auto* roomInfo = &::il2cpp_utils::GetClassFromName("Fusion.Photon.Realtime", "RoomInfo")->byval_arg;
    static auto* region = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices*), "UpdateSessionInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionInfo, roomInfo, region});
  }
};
