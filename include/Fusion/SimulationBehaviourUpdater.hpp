// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueTuple`2
#include "System/ValueTuple_2.hpp"
// Including type: Fusion.SimulationModes
#include "Fusion/SimulationModes.hpp"
// Including type: Fusion.SimulationStages
#include "Fusion/SimulationStages.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Fusion
namespace Fusion {
  // Forward declaring type: SimulationBehaviour
  class SimulationBehaviour;
  // Forward declaring type: SimulationBehaviourListScope
  struct SimulationBehaviourListScope;
  // Forward declaring type: NetworkRunner
  class NetworkRunner;
  // Forward declaring type: NetworkObject
  class NetworkObject;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: HashSet`1<T>
  template<typename T>
  class HashSet_1;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: SimulationBehaviourUpdater
  class SimulationBehaviourUpdater;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::SimulationBehaviourUpdater);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::SimulationBehaviourUpdater*, "Fusion", "SimulationBehaviourUpdater");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.SimulationBehaviourUpdater
  // [TokenAttribute] Offset: FFFFFFFF
  class SimulationBehaviourUpdater : public ::Il2CppObject {
    public:
    // Nested type: ::Fusion::SimulationBehaviourUpdater::BehaviourList
    class BehaviourList;
    // Nested type: ::Fusion::SimulationBehaviourUpdater::$$c
    class $$c;
    public:
    // private readonly System.Collections.Generic.Dictionary`2<System.Type,Fusion.SimulationBehaviourUpdater/BehaviourList> _byTypeLookup
    // Size: 0x8
    // Offset: 0x10
    ::System::Collections::Generic::Dictionary_2<::System::Type*, ::Fusion::SimulationBehaviourUpdater::BehaviourList*>* byTypeLookup;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::System::Type*, ::Fusion::SimulationBehaviourUpdater::BehaviourList*>*) == 0x8);
    // private readonly System.Collections.Generic.Dictionary`2<System.Type,System.ValueTuple`2<Fusion.SimulationBehaviour[],System.Type[]>> _byTypeHierarchy
    // Size: 0x8
    // Offset: 0x18
    ::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::ValueTuple_2<::ArrayW<::Fusion::SimulationBehaviour*>, ::ArrayW<::System::Type*>>>* byTypeHierarchy;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::ValueTuple_2<::ArrayW<::Fusion::SimulationBehaviour*>, ::ArrayW<::System::Type*>>>*) == 0x8);
    // private readonly System.Collections.Generic.List`1<Fusion.SimulationBehaviourUpdater/BehaviourList> _inOrderList
    // Size: 0x8
    // Offset: 0x20
    ::System::Collections::Generic::List_1<::Fusion::SimulationBehaviourUpdater::BehaviourList*>* inOrderList;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::Fusion::SimulationBehaviourUpdater::BehaviourList*>*) == 0x8);
    // private readonly System.Collections.Generic.Dictionary`2<System.Type,System.Collections.Generic.List`1<Fusion.SimulationBehaviourUpdater/BehaviourList>> _inOrderByInterfaceList
    // Size: 0x8
    // Offset: 0x28
    ::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::Collections::Generic::List_1<::Fusion::SimulationBehaviourUpdater::BehaviourList*>*>* inOrderByInterfaceList;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::Collections::Generic::List_1<::Fusion::SimulationBehaviourUpdater::BehaviourList*>*>*) == 0x8);
    // private readonly System.Collections.Generic.HashSet`1<System.Type> _behavioursChecked
    // Size: 0x8
    // Offset: 0x30
    ::System::Collections::Generic::HashSet_1<::System::Type*>* behavioursChecked;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::HashSet_1<::System::Type*>*) == 0x8);
    // private readonly System.Collections.Generic.List`1<Fusion.SimulationBehaviour> _pendingRemovals
    // Size: 0x8
    // Offset: 0x38
    ::System::Collections::Generic::List_1<::Fusion::SimulationBehaviour*>* pendingRemovals;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::Fusion::SimulationBehaviour*>*) == 0x8);
    public:
    // Get instance field reference: private readonly System.Collections.Generic.Dictionary`2<System.Type,Fusion.SimulationBehaviourUpdater/BehaviourList> _byTypeLookup
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::System::Type*, ::Fusion::SimulationBehaviourUpdater::BehaviourList*>*& dyn__byTypeLookup();
    // Get instance field reference: private readonly System.Collections.Generic.Dictionary`2<System.Type,System.ValueTuple`2<Fusion.SimulationBehaviour[],System.Type[]>> _byTypeHierarchy
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::ValueTuple_2<::ArrayW<::Fusion::SimulationBehaviour*>, ::ArrayW<::System::Type*>>>*& dyn__byTypeHierarchy();
    // Get instance field reference: private readonly System.Collections.Generic.List`1<Fusion.SimulationBehaviourUpdater/BehaviourList> _inOrderList
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Fusion::SimulationBehaviourUpdater::BehaviourList*>*& dyn__inOrderList();
    // Get instance field reference: private readonly System.Collections.Generic.Dictionary`2<System.Type,System.Collections.Generic.List`1<Fusion.SimulationBehaviourUpdater/BehaviourList>> _inOrderByInterfaceList
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::Collections::Generic::List_1<::Fusion::SimulationBehaviourUpdater::BehaviourList*>*>*& dyn__inOrderByInterfaceList();
    // Get instance field reference: private readonly System.Collections.Generic.HashSet`1<System.Type> _behavioursChecked
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::System::Type*>*& dyn__behavioursChecked();
    // Get instance field reference: private readonly System.Collections.Generic.List`1<Fusion.SimulationBehaviour> _pendingRemovals
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Fusion::SimulationBehaviour*>*& dyn__pendingRemovals();
    // static private System.Type[] get_CallbackInterfacesDefualts()
    // Offset: 0x2B185CC
    static ::ArrayW<::System::Type*> get_CallbackInterfacesDefualts();
    // public System.Void .ctor()
    // Offset: 0x2B18DA0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SimulationBehaviourUpdater* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationBehaviourUpdater::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SimulationBehaviourUpdater*, creationType>()));
    }
    // public System.Void BuildTypeOrder(System.Type[] customCallbackInterfaces)
    // Offset: 0x2B18FBC
    void BuildTypeOrder(::ArrayW<::System::Type*> customCallbackInterfaces);
    // public System.Void InvokeRender()
    // Offset: 0x2B19934
    void InvokeRender();
    // public System.Int32 GetCallbackCount(System.Type type)
    // Offset: 0x2B19B20
    int GetCallbackCount(::System::Type* type);
    // public Fusion.SimulationBehaviour GetCallbackHead(System.Type type, System.Int32 index)
    // Offset: 0x2B19B90
    ::Fusion::SimulationBehaviour* GetCallbackHead(::System::Type* type, int index);
    // public Fusion.SimulationBehaviourListScope GetCallbackHead(System.Type type, System.Int32 index, out Fusion.SimulationBehaviour head)
    // Offset: 0x2B19C24
    ::Fusion::SimulationBehaviourListScope GetCallbackHead(::System::Type* type, int index, ByRef<::Fusion::SimulationBehaviour*> head);
    // public System.Void InvokeFixedUpdateNetwork(Fusion.SimulationStages stage, Fusion.SimulationModes mode)
    // Offset: 0x2B19CE8
    void InvokeFixedUpdateNetwork(::Fusion::SimulationStages stage, ::Fusion::SimulationModes mode);
    // public System.Void RemoveObject(Fusion.NetworkRunner runner, Fusion.NetworkObject obj)
    // Offset: 0x2B1A024
    void RemoveObject(::Fusion::NetworkRunner* runner, ::Fusion::NetworkObject* obj);
    // public System.Void AddObject(Fusion.NetworkRunner runner, Fusion.NetworkObject obj, System.Boolean skipFirstcall)
    // Offset: 0x2B1A138
    void AddObject(::Fusion::NetworkRunner* runner, ::Fusion::NetworkObject* obj, bool skipFirstcall);
    // public System.Void AddBehaviour(Fusion.SimulationBehaviour behaviour, System.Boolean skipFirstCall)
    // Offset: 0x2B1A1F8
    void AddBehaviour(::Fusion::SimulationBehaviour* behaviour, bool skipFirstCall);
    // private System.Void CheckSimulationBehaviourForNetworkedAttribute(System.Type type)
    // Offset: 0x2B1A874
    void CheckSimulationBehaviourForNetworkedAttribute(::System::Type* type);
    // public System.Void RemoveBehaviour(Fusion.SimulationBehaviour behaviour)
    // Offset: 0x2B1A0CC
    void RemoveBehaviour(::Fusion::SimulationBehaviour* behaviour);
    // public Fusion.SimulationBehaviour[] GetTypeHeads(System.Type type)
    // Offset: 0x2B1AF24
    ::ArrayW<::Fusion::SimulationBehaviour*> GetTypeHeads(::System::Type* type);
    // private System.Void AddType(System.Type type, System.ValueTuple`2<Fusion.SimulationModes,Fusion.SimulationStages> attr)
    // Offset: 0x2B196D4
    void AddType(::System::Type* type, ::System::ValueTuple_2<::Fusion::SimulationModes, ::Fusion::SimulationStages> attr);
    // private Fusion.SimulationBehaviourUpdater/BehaviourList FindList(System.Type type)
    // Offset: 0x2B1A3D4
    ::Fusion::SimulationBehaviourUpdater::BehaviourList* FindList(::System::Type* type);
  }; // Fusion.SimulationBehaviourUpdater
  #pragma pack(pop)
  static check_size<sizeof(SimulationBehaviourUpdater), 56 + sizeof(::System::Collections::Generic::List_1<::Fusion::SimulationBehaviour*>*)> __Fusion_SimulationBehaviourUpdaterSizeCheck;
  static_assert(sizeof(SimulationBehaviourUpdater) == 0x40);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::SimulationBehaviourUpdater::get_CallbackInterfacesDefualts
// Il2CppName: get_CallbackInterfacesDefualts
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::System::Type*> (*)()>(&Fusion::SimulationBehaviourUpdater::get_CallbackInterfacesDefualts)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationBehaviourUpdater*), "get_CallbackInterfacesDefualts", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::SimulationBehaviourUpdater::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Fusion::SimulationBehaviourUpdater::BuildTypeOrder
// Il2CppName: BuildTypeOrder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::SimulationBehaviourUpdater::*)(::ArrayW<::System::Type*>)>(&Fusion::SimulationBehaviourUpdater::BuildTypeOrder)> {
  static const MethodInfo* get() {
    static auto* customCallbackInterfaces = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Type"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationBehaviourUpdater*), "BuildTypeOrder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{customCallbackInterfaces});
  }
};
// Writing MetadataGetter for method: Fusion::SimulationBehaviourUpdater::InvokeRender
// Il2CppName: InvokeRender
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::SimulationBehaviourUpdater::*)()>(&Fusion::SimulationBehaviourUpdater::InvokeRender)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationBehaviourUpdater*), "InvokeRender", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::SimulationBehaviourUpdater::GetCallbackCount
// Il2CppName: GetCallbackCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Fusion::SimulationBehaviourUpdater::*)(::System::Type*)>(&Fusion::SimulationBehaviourUpdater::GetCallbackCount)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationBehaviourUpdater*), "GetCallbackCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: Fusion::SimulationBehaviourUpdater::GetCallbackHead
// Il2CppName: GetCallbackHead
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::SimulationBehaviour* (Fusion::SimulationBehaviourUpdater::*)(::System::Type*, int)>(&Fusion::SimulationBehaviourUpdater::GetCallbackHead)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationBehaviourUpdater*), "GetCallbackHead", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type, index});
  }
};
// Writing MetadataGetter for method: Fusion::SimulationBehaviourUpdater::GetCallbackHead
// Il2CppName: GetCallbackHead
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::SimulationBehaviourListScope (Fusion::SimulationBehaviourUpdater::*)(::System::Type*, int, ByRef<::Fusion::SimulationBehaviour*>)>(&Fusion::SimulationBehaviourUpdater::GetCallbackHead)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* head = &::il2cpp_utils::GetClassFromName("Fusion", "SimulationBehaviour")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationBehaviourUpdater*), "GetCallbackHead", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type, index, head});
  }
};
// Writing MetadataGetter for method: Fusion::SimulationBehaviourUpdater::InvokeFixedUpdateNetwork
// Il2CppName: InvokeFixedUpdateNetwork
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::SimulationBehaviourUpdater::*)(::Fusion::SimulationStages, ::Fusion::SimulationModes)>(&Fusion::SimulationBehaviourUpdater::InvokeFixedUpdateNetwork)> {
  static const MethodInfo* get() {
    static auto* stage = &::il2cpp_utils::GetClassFromName("Fusion", "SimulationStages")->byval_arg;
    static auto* mode = &::il2cpp_utils::GetClassFromName("Fusion", "SimulationModes")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationBehaviourUpdater*), "InvokeFixedUpdateNetwork", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stage, mode});
  }
};
// Writing MetadataGetter for method: Fusion::SimulationBehaviourUpdater::RemoveObject
// Il2CppName: RemoveObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::SimulationBehaviourUpdater::*)(::Fusion::NetworkRunner*, ::Fusion::NetworkObject*)>(&Fusion::SimulationBehaviourUpdater::RemoveObject)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    static auto* obj = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationBehaviourUpdater*), "RemoveObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner, obj});
  }
};
// Writing MetadataGetter for method: Fusion::SimulationBehaviourUpdater::AddObject
// Il2CppName: AddObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::SimulationBehaviourUpdater::*)(::Fusion::NetworkRunner*, ::Fusion::NetworkObject*, bool)>(&Fusion::SimulationBehaviourUpdater::AddObject)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    static auto* obj = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkObject")->byval_arg;
    static auto* skipFirstcall = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationBehaviourUpdater*), "AddObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner, obj, skipFirstcall});
  }
};
// Writing MetadataGetter for method: Fusion::SimulationBehaviourUpdater::AddBehaviour
// Il2CppName: AddBehaviour
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::SimulationBehaviourUpdater::*)(::Fusion::SimulationBehaviour*, bool)>(&Fusion::SimulationBehaviourUpdater::AddBehaviour)> {
  static const MethodInfo* get() {
    static auto* behaviour = &::il2cpp_utils::GetClassFromName("Fusion", "SimulationBehaviour")->byval_arg;
    static auto* skipFirstCall = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationBehaviourUpdater*), "AddBehaviour", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{behaviour, skipFirstCall});
  }
};
// Writing MetadataGetter for method: Fusion::SimulationBehaviourUpdater::CheckSimulationBehaviourForNetworkedAttribute
// Il2CppName: CheckSimulationBehaviourForNetworkedAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::SimulationBehaviourUpdater::*)(::System::Type*)>(&Fusion::SimulationBehaviourUpdater::CheckSimulationBehaviourForNetworkedAttribute)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationBehaviourUpdater*), "CheckSimulationBehaviourForNetworkedAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: Fusion::SimulationBehaviourUpdater::RemoveBehaviour
// Il2CppName: RemoveBehaviour
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::SimulationBehaviourUpdater::*)(::Fusion::SimulationBehaviour*)>(&Fusion::SimulationBehaviourUpdater::RemoveBehaviour)> {
  static const MethodInfo* get() {
    static auto* behaviour = &::il2cpp_utils::GetClassFromName("Fusion", "SimulationBehaviour")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationBehaviourUpdater*), "RemoveBehaviour", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{behaviour});
  }
};
// Writing MetadataGetter for method: Fusion::SimulationBehaviourUpdater::GetTypeHeads
// Il2CppName: GetTypeHeads
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Fusion::SimulationBehaviour*> (Fusion::SimulationBehaviourUpdater::*)(::System::Type*)>(&Fusion::SimulationBehaviourUpdater::GetTypeHeads)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationBehaviourUpdater*), "GetTypeHeads", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: Fusion::SimulationBehaviourUpdater::AddType
// Il2CppName: AddType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::SimulationBehaviourUpdater::*)(::System::Type*, ::System::ValueTuple_2<::Fusion::SimulationModes, ::Fusion::SimulationStages>)>(&Fusion::SimulationBehaviourUpdater::AddType)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* attr = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ValueTuple`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Fusion", "SimulationModes"), ::il2cpp_utils::GetClassFromName("Fusion", "SimulationStages")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationBehaviourUpdater*), "AddType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type, attr});
  }
};
// Writing MetadataGetter for method: Fusion::SimulationBehaviourUpdater::FindList
// Il2CppName: FindList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::SimulationBehaviourUpdater::BehaviourList* (Fusion::SimulationBehaviourUpdater::*)(::System::Type*)>(&Fusion::SimulationBehaviourUpdater::FindList)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationBehaviourUpdater*), "FindList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
