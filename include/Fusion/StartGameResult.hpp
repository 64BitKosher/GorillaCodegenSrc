// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Fusion.ShutdownReason
#include "Fusion/ShutdownReason.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Exception
  class Exception;
}
// Completed forward declares
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: StartGameResult
  class StartGameResult;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::StartGameResult);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::StartGameResult*, "Fusion", "StartGameResult");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.StartGameResult
  // [TokenAttribute] Offset: FFFFFFFF
  class StartGameResult : public ::Il2CppObject {
    public:
    public:
    // private Fusion.ShutdownReason <ShutdownReason>k__BackingField
    // Size: 0x4
    // Offset: 0x10
    ::Fusion::ShutdownReason ShutdownReason;
    // Field size check
    static_assert(sizeof(::Fusion::ShutdownReason) == 0x4);
    // Padding between fields: ShutdownReason and: ErrorMessage
    char __padding0[0x4] = {};
    // private System.String <ErrorMessage>k__BackingField
    // Size: 0x8
    // Offset: 0x18
    ::StringW ErrorMessage;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: private Fusion.ShutdownReason <ShutdownReason>k__BackingField
    [[deprecated("Use field access instead!")]] ::Fusion::ShutdownReason& dyn_$ShutdownReason$k__BackingField();
    // Get instance field reference: private System.String <ErrorMessage>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$ErrorMessage$k__BackingField();
    // public System.Boolean get_Ok()
    // Offset: 0x2B6BC30
    bool get_Ok();
    // public Fusion.ShutdownReason get_ShutdownReason()
    // Offset: 0x2B6BC40
    ::Fusion::ShutdownReason get_ShutdownReason();
    // private System.Void set_ShutdownReason(Fusion.ShutdownReason value)
    // Offset: 0x2B6BC48
    void set_ShutdownReason(::Fusion::ShutdownReason value);
    // public System.String get_ErrorMessage()
    // Offset: 0x2B6BC50
    ::StringW get_ErrorMessage();
    // private System.Void set_ErrorMessage(System.String value)
    // Offset: 0x2B6BC58
    void set_ErrorMessage(::StringW value);
    // System.Void .ctor(Fusion.ShutdownReason reason, System.String message)
    // Offset: 0x2B687D4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static StartGameResult* New_ctor(::Fusion::ShutdownReason reason, ::StringW message) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StartGameResult::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<StartGameResult*, creationType>(reason, message)));
    }
    // static Fusion.StartGameResult BuildStartGameResultFromException(System.Exception e)
    // Offset: 0x2B68CD0
    static ::Fusion::StartGameResult* BuildStartGameResultFromException(::System::Exception* e);
    // public override System.String ToString()
    // Offset: 0x2B6BD30
    // Implemented from: System.Object
    // Base method: System.String Object::ToString()
    ::StringW ToString();
  }; // Fusion.StartGameResult
  #pragma pack(pop)
  static check_size<sizeof(StartGameResult), 24 + sizeof(::StringW)> __Fusion_StartGameResultSizeCheck;
  static_assert(sizeof(StartGameResult) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::StartGameResult::get_Ok
// Il2CppName: get_Ok
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::StartGameResult::*)()>(&Fusion::StartGameResult::get_Ok)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::StartGameResult*), "get_Ok", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::StartGameResult::get_ShutdownReason
// Il2CppName: get_ShutdownReason
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::ShutdownReason (Fusion::StartGameResult::*)()>(&Fusion::StartGameResult::get_ShutdownReason)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::StartGameResult*), "get_ShutdownReason", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::StartGameResult::set_ShutdownReason
// Il2CppName: set_ShutdownReason
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::StartGameResult::*)(::Fusion::ShutdownReason)>(&Fusion::StartGameResult::set_ShutdownReason)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Fusion", "ShutdownReason")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::StartGameResult*), "set_ShutdownReason", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::StartGameResult::get_ErrorMessage
// Il2CppName: get_ErrorMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Fusion::StartGameResult::*)()>(&Fusion::StartGameResult::get_ErrorMessage)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::StartGameResult*), "get_ErrorMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::StartGameResult::set_ErrorMessage
// Il2CppName: set_ErrorMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::StartGameResult::*)(::StringW)>(&Fusion::StartGameResult::set_ErrorMessage)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::StartGameResult*), "set_ErrorMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::StartGameResult::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Fusion::StartGameResult::BuildStartGameResultFromException
// Il2CppName: BuildStartGameResultFromException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::StartGameResult* (*)(::System::Exception*)>(&Fusion::StartGameResult::BuildStartGameResultFromException)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("System", "Exception")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::StartGameResult*), "BuildStartGameResultFromException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: Fusion::StartGameResult::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Fusion::StartGameResult::*)()>(&Fusion::StartGameResult::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::StartGameResult*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
