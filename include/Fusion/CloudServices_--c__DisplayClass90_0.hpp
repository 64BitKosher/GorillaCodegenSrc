// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Fusion.CloudServices
#include "Fusion/CloudServices.hpp"
// Including type: Fusion.Sockets.NetAddress
#include "Fusion/Sockets/NetAddress.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Fusion
namespace Fusion {
}
// Forward declaring namespace: System::Threading::Tasks
namespace System::Threading::Tasks {
  // Forward declaring type: Task
  class Task;
}
// Forward declaring namespace: System::Threading
namespace System::Threading {
  // Forward declaring type: CancellationToken
  struct CancellationToken;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::CloudServices::$$c__DisplayClass90_0);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::CloudServices::$$c__DisplayClass90_0*, "Fusion", "CloudServices/<>c__DisplayClass90_0");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.CloudServices/<>c__DisplayClass90_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class CloudServices::$$c__DisplayClass90_0 : public ::Il2CppObject {
    public:
    // Nested type: ::Fusion::CloudServices::$$c__DisplayClass90_0::$$Run_ReversePing$b__0$d
    struct $$Run_ReversePing$b__0$d;
    public:
    // public Fusion.Sockets.NetAddress remoteAddr
    // Size: 0x18
    // Offset: 0x10
    ::Fusion::Sockets::NetAddress remoteAddr;
    // Field size check
    static_assert(sizeof(::Fusion::Sockets::NetAddress) == 0x18);
    // public Fusion.CloudServices <>4__this
    // Size: 0x8
    // Offset: 0x28
    ::Fusion::CloudServices* $$4__this;
    // Field size check
    static_assert(sizeof(::Fusion::CloudServices*) == 0x8);
    public:
    // Get instance field reference: public Fusion.Sockets.NetAddress remoteAddr
    [[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetAddress& dyn_remoteAddr();
    // Get instance field reference: public Fusion.CloudServices <>4__this
    [[deprecated("Use field access instead!")]] ::Fusion::CloudServices*& dyn_$$4__this();
    // public System.Void .ctor()
    // Offset: 0x2B02EE0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CloudServices::$$c__DisplayClass90_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::CloudServices::$$c__DisplayClass90_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CloudServices::$$c__DisplayClass90_0*, creationType>()));
    }
    // System.Threading.Tasks.Task <Run_ReversePing>b__0(System.Threading.CancellationToken token)
    // Offset: 0x2B03224
    ::System::Threading::Tasks::Task* $Run_ReversePing$b__0(::System::Threading::CancellationToken token);
    // System.Boolean <Run_ReversePing>g__SendPing|1(Fusion.Sockets.NetAddress netAddress)
    // Offset: 0x2B0331C
    bool $Run_ReversePing$g__SendPing_1(::Fusion::Sockets::NetAddress netAddress);
  }; // Fusion.CloudServices/<>c__DisplayClass90_0
  #pragma pack(pop)
  static check_size<sizeof(CloudServices::$$c__DisplayClass90_0), 40 + sizeof(::Fusion::CloudServices*)> __Fusion_CloudServices_$$c__DisplayClass90_0SizeCheck;
  static_assert(sizeof(CloudServices::$$c__DisplayClass90_0) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::CloudServices::$$c__DisplayClass90_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Fusion::CloudServices::$$c__DisplayClass90_0::$Run_ReversePing$b__0
// Il2CppName: <Run_ReversePing>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task* (Fusion::CloudServices::$$c__DisplayClass90_0::*)(::System::Threading::CancellationToken)>(&Fusion::CloudServices::$$c__DisplayClass90_0::$Run_ReversePing$b__0)> {
  static const MethodInfo* get() {
    static auto* token = &::il2cpp_utils::GetClassFromName("System.Threading", "CancellationToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices::$$c__DisplayClass90_0*), "<Run_ReversePing>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{token});
  }
};
// Writing MetadataGetter for method: Fusion::CloudServices::$$c__DisplayClass90_0::$Run_ReversePing$g__SendPing_1
// Il2CppName: <Run_ReversePing>g__SendPing|1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::CloudServices::$$c__DisplayClass90_0::*)(::Fusion::Sockets::NetAddress)>(&Fusion::CloudServices::$$c__DisplayClass90_0::$Run_ReversePing$g__SendPing_1)> {
  static const MethodInfo* get() {
    static auto* netAddress = &::il2cpp_utils::GetClassFromName("Fusion.Sockets", "NetAddress")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::CloudServices::$$c__DisplayClass90_0*), "<Run_ReversePing>g__SendPing|1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{netAddress});
  }
};
