// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Fusion.PropertyAttribute
#include "Fusion/PropertyAttribute.hpp"
// Including type: Fusion.Units
#include "Fusion/Units.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: Pow2SliderAttribute
  class Pow2SliderAttribute;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::Pow2SliderAttribute);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::Pow2SliderAttribute*, "Fusion", "Pow2SliderAttribute");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x21
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.Pow2SliderAttribute
  // [TokenAttribute] Offset: FFFFFFFF
  class Pow2SliderAttribute : public ::Fusion::PropertyAttribute {
    public:
    public:
    // public Fusion.Units Unit
    // Size: 0x4
    // Offset: 0x14
    ::Fusion::Units Unit;
    // Field size check
    static_assert(sizeof(::Fusion::Units) == 0x4);
    // public System.Int32 MinPower
    // Size: 0x4
    // Offset: 0x18
    int MinPower;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 MaxPower
    // Size: 0x4
    // Offset: 0x1C
    int MaxPower;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Boolean AllowZero
    // Size: 0x1
    // Offset: 0x20
    bool AllowZero;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator int
    constexpr operator int() const noexcept = delete;
    // Get instance field reference: public Fusion.Units Unit
    [[deprecated("Use field access instead!")]] ::Fusion::Units& dyn_Unit();
    // Get instance field reference: public System.Int32 MinPower
    [[deprecated("Use field access instead!")]] int& dyn_MinPower();
    // Get instance field reference: public System.Int32 MaxPower
    [[deprecated("Use field access instead!")]] int& dyn_MaxPower();
    // Get instance field reference: public System.Boolean AllowZero
    [[deprecated("Use field access instead!")]] bool& dyn_AllowZero();
    // public System.Void .ctor(System.Int32 min, System.Int32 max)
    // Offset: 0x2AFF3B8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Pow2SliderAttribute* New_ctor(int min, int max) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Pow2SliderAttribute::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Pow2SliderAttribute*, creationType>(min, max)));
    }
  }; // Fusion.Pow2SliderAttribute
  #pragma pack(pop)
  static check_size<sizeof(Pow2SliderAttribute), 32 + sizeof(bool)> __Fusion_Pow2SliderAttributeSizeCheck;
  static_assert(sizeof(Pow2SliderAttribute) == 0x21);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::Pow2SliderAttribute::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
