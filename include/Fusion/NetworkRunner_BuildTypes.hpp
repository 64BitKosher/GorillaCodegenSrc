// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Fusion.NetworkRunner
#include "Fusion/NetworkRunner.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Fusion::NetworkRunner::BuildTypes, "Fusion", "NetworkRunner/BuildTypes");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.NetworkRunner/BuildTypes
  // [TokenAttribute] Offset: FFFFFFFF
  struct NetworkRunner::BuildTypes/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: BuildTypes
    constexpr BuildTypes(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public Fusion.NetworkRunner/BuildTypes Debug
    static constexpr const int Debug = 0;
    // Get static field: static public Fusion.NetworkRunner/BuildTypes Debug
    static ::Fusion::NetworkRunner::BuildTypes _get_Debug();
    // Set static field: static public Fusion.NetworkRunner/BuildTypes Debug
    static void _set_Debug(::Fusion::NetworkRunner::BuildTypes value);
    // static field const value: static public Fusion.NetworkRunner/BuildTypes Release
    static constexpr const int Release = 1;
    // Get static field: static public Fusion.NetworkRunner/BuildTypes Release
    static ::Fusion::NetworkRunner::BuildTypes _get_Release();
    // Set static field: static public Fusion.NetworkRunner/BuildTypes Release
    static void _set_Release(::Fusion::NetworkRunner::BuildTypes value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // Fusion.NetworkRunner/BuildTypes
  #pragma pack(pop)
  static check_size<sizeof(NetworkRunner::BuildTypes), 0 + sizeof(int)> __Fusion_NetworkRunner_BuildTypesSizeCheck;
  static_assert(sizeof(NetworkRunner::BuildTypes) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
