// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Fusion.NetworkRigidbodyBase
#include "Fusion/NetworkRigidbodyBase.hpp"
// Including type: Fusion.IAfterPhysicsSyncTransforms3D
#include "Fusion/IAfterPhysicsSyncTransforms3D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Rigidbody
  class Rigidbody;
  // Skipping declaration: Vector3 because it is already included!
  // Skipping declaration: Quaternion because it is already included!
  // Forward declaring type: RigidbodyConstraints
  struct RigidbodyConstraints;
  // Forward declaring type: CollisionDetectionMode
  struct CollisionDetectionMode;
}
// Forward declaring namespace: Fusion
namespace Fusion {
  // Forward declaring type: ReadAccuracy
  struct ReadAccuracy;
  // Forward declaring type: WriteAccuracy
  struct WriteAccuracy;
}
// Completed forward declares
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: NetworkRigidbody
  class NetworkRigidbody;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::NetworkRigidbody);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::NetworkRigidbody*, "Fusion", "NetworkRigidbody");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x150
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.NetworkRigidbody
  // [TokenAttribute] Offset: FFFFFFFF
  // [NetworkBehaviourWeavedAttribute] Offset: FFFFFFFF
  // [SimulationBehaviourAttribute] Offset: FFFFFFFF
  // [RequireComponent] Offset: FFFFFFFF
  // [HelpURLAttribute] Offset: FFFFFFFF
  // [AddComponentMenu] Offset: FFFFFFFF
  // [DisallowMultipleComponent] Offset: FFFFFFFF
  class NetworkRigidbody : public ::Fusion::NetworkRigidbodyBase/*, public ::Fusion::IAfterPhysicsSyncTransforms3D*/ {
    public:
    public:
    // private System.Boolean _pendingCopyRigidbodyFromBufferToEngine
    // Size: 0x1
    // Offset: 0x146
    bool pendingCopyRigidbodyFromBufferToEngine;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: pendingCopyRigidbodyFromBufferToEngine and: Rigidbody
    char __padding0[0x1] = {};
    // private UnityEngine.Rigidbody <Rigidbody>k__BackingField
    // Size: 0x8
    // Offset: 0x148
    ::UnityEngine::Rigidbody* Rigidbody;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rigidbody*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::Fusion::IAfterPhysicsSyncTransforms3D
    operator ::Fusion::IAfterPhysicsSyncTransforms3D() noexcept {
      return *reinterpret_cast<::Fusion::IAfterPhysicsSyncTransforms3D*>(this);
    }
    // static field const value: static private System.Int32 WORD_COUNT_RB_POS
    static constexpr const int WORD_COUNT_RB_POS = 3;
    // Get static field: static private System.Int32 WORD_COUNT_RB_POS
    static int _get_WORD_COUNT_RB_POS();
    // Set static field: static private System.Int32 WORD_COUNT_RB_POS
    static void _set_WORD_COUNT_RB_POS(int value);
    // static field const value: static private System.Int32 WORD_COUNT_RB_ROT
    static constexpr const int WORD_COUNT_RB_ROT = 4;
    // Get static field: static private System.Int32 WORD_COUNT_RB_ROT
    static int _get_WORD_COUNT_RB_ROT();
    // Set static field: static private System.Int32 WORD_COUNT_RB_ROT
    static void _set_WORD_COUNT_RB_ROT(int value);
    // static field const value: static private System.Int32 WORD_COUNT_VEL
    static constexpr const int WORD_COUNT_VEL = 3;
    // Get static field: static private System.Int32 WORD_COUNT_VEL
    static int _get_WORD_COUNT_VEL();
    // Set static field: static private System.Int32 WORD_COUNT_VEL
    static void _set_WORD_COUNT_VEL(int value);
    // static field const value: static private System.Int32 WORD_COUNT_ANG_VEL
    static constexpr const int WORD_COUNT_ANG_VEL = 3;
    // Get static field: static private System.Int32 WORD_COUNT_ANG_VEL
    static int _get_WORD_COUNT_ANG_VEL();
    // Set static field: static private System.Int32 WORD_COUNT_ANG_VEL
    static void _set_WORD_COUNT_ANG_VEL(int value);
    // static field const value: static private System.Int32 BASE_OFFSET
    static constexpr const int BASE_OFFSET = 24;
    // Get static field: static private System.Int32 BASE_OFFSET
    static int _get_BASE_OFFSET();
    // Set static field: static private System.Int32 BASE_OFFSET
    static void _set_BASE_OFFSET(int value);
    // static field const value: static private System.Int32 OFFSET_RB_POS
    static constexpr const int OFFSET_RB_POS = 24;
    // Get static field: static private System.Int32 OFFSET_RB_POS
    static int _get_OFFSET_RB_POS();
    // Set static field: static private System.Int32 OFFSET_RB_POS
    static void _set_OFFSET_RB_POS(int value);
    // static field const value: static private System.Int32 OFFSET_RB_ROT
    static constexpr const int OFFSET_RB_ROT = 27;
    // Get static field: static private System.Int32 OFFSET_RB_ROT
    static int _get_OFFSET_RB_ROT();
    // Set static field: static private System.Int32 OFFSET_RB_ROT
    static void _set_OFFSET_RB_ROT(int value);
    // static field const value: static private System.Int32 OFFSET_VEL
    static constexpr const int OFFSET_VEL = 31;
    // Get static field: static private System.Int32 OFFSET_VEL
    static int _get_OFFSET_VEL();
    // Set static field: static private System.Int32 OFFSET_VEL
    static void _set_OFFSET_VEL(int value);
    // static field const value: static private System.Int32 OFFSET_ANG_VEL
    static constexpr const int OFFSET_ANG_VEL = 34;
    // Get static field: static private System.Int32 OFFSET_ANG_VEL
    static int _get_OFFSET_ANG_VEL();
    // Set static field: static private System.Int32 OFFSET_ANG_VEL
    static void _set_OFFSET_ANG_VEL(int value);
    // static field const value: static protected System.Int32 WORD_COUNT_NRB
    static constexpr const int WORD_COUNT_NRB = 37;
    // Get static field: static protected System.Int32 WORD_COUNT_NRB
    static int _get_WORD_COUNT_NRB();
    // Set static field: static protected System.Int32 WORD_COUNT_NRB
    static void _set_WORD_COUNT_NRB(int value);
    // Get instance field reference: private System.Boolean _pendingCopyRigidbodyFromBufferToEngine
    [[deprecated("Use field access instead!")]] bool& dyn__pendingCopyRigidbodyFromBufferToEngine();
    // Get instance field reference: private UnityEngine.Rigidbody <Rigidbody>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& dyn_$Rigidbody$k__BackingField();
    // public UnityEngine.Rigidbody get_Rigidbody()
    // Offset: 0x2B1C2D4
    ::UnityEngine::Rigidbody* get_Rigidbody();
    // private System.Void set_Rigidbody(UnityEngine.Rigidbody value)
    // Offset: 0x2B1C2DC
    void set_Rigidbody(::UnityEngine::Rigidbody* value);
    // private System.Void EnsureInitialized()
    // Offset: 0x2B1C360
    void EnsureInitialized();
    // private System.Void Fusion.IAfterPhysicsSyncTransforms3D.AfterPhysicsSyncTransforms3D()
    // Offset: 0x2B1CC88
    void Fusion_IAfterPhysicsSyncTransforms3D_AfterPhysicsSyncTransforms3D();
    // private System.Void CopyRigidbodyFromBufferToEngine()
    // Offset: 0x2B1C880
    void CopyRigidbodyFromBufferToEngine();
    // private System.Boolean IsRigidbodyBelowSleepingThresholds()
    // Offset: 0x2B1CCA8
    bool IsRigidbodyBelowSleepingThresholds();
    // public UnityEngine.Vector3 ReadRigidbodyPosition()
    // Offset: 0x2B1D2B8
    ::UnityEngine::Vector3 ReadRigidbodyPosition();
    // public UnityEngine.Vector3 ReadRigidbodyPosition(System.Int32* ptr)
    // Offset: 0x2B1D30C
    ::UnityEngine::Vector3 ReadRigidbodyPosition(int* ptr);
    // static public UnityEngine.Vector3 ReadRigidbodyPosition(System.Int32* ptr, Fusion.ReadAccuracy readAccuracy)
    // Offset: 0x2B1D35C
    static ::UnityEngine::Vector3 ReadRigidbodyPosition(int* ptr, ::Fusion::ReadAccuracy readAccuracy);
    // public UnityEngine.Quaternion ReadRigidbodyRotation()
    // Offset: 0x2B1D398
    ::UnityEngine::Quaternion ReadRigidbodyRotation();
    // public UnityEngine.Quaternion ReadRigidbodyRotation(System.Int32* ptr)
    // Offset: 0x2B1D3F4
    ::UnityEngine::Quaternion ReadRigidbodyRotation(int* ptr);
    // static public UnityEngine.Quaternion ReadRigidbodyRotation(System.Int32* ptr, Fusion.ReadAccuracy readAccuracy)
    // Offset: 0x2B1D44C
    static ::UnityEngine::Quaternion ReadRigidbodyRotation(int* ptr, ::Fusion::ReadAccuracy readAccuracy);
    // public UnityEngine.Vector3 ReadVelocity()
    // Offset: 0x2B1D490
    ::UnityEngine::Vector3 ReadVelocity();
    // public UnityEngine.Vector3 ReadVelocity(System.Int32* ptr)
    // Offset: 0x2B1D4E4
    ::UnityEngine::Vector3 ReadVelocity(int* ptr);
    // static public UnityEngine.Vector3 ReadVelocity(System.Int32* ptr, Fusion.ReadAccuracy readAccuracy)
    // Offset: 0x2B1D534
    static ::UnityEngine::Vector3 ReadVelocity(int* ptr, ::Fusion::ReadAccuracy readAccuracy);
    // public UnityEngine.Vector3 ReadAngularVelocity()
    // Offset: 0x2B1D570
    ::UnityEngine::Vector3 ReadAngularVelocity();
    // public UnityEngine.Vector3 ReadAngularVelocity(System.Int32* ptr)
    // Offset: 0x2B1D5C4
    ::UnityEngine::Vector3 ReadAngularVelocity(int* ptr);
    // static public UnityEngine.Vector3 ReadAngularVelocity(System.Int32* ptr, Fusion.ReadAccuracy readAccuracy)
    // Offset: 0x2B1D614
    static ::UnityEngine::Vector3 ReadAngularVelocity(int* ptr, ::Fusion::ReadAccuracy readAccuracy);
    // public System.Void ReadNetworkRigidbodyFlags(out Fusion.NetworkRigidbodyBase/NetworkRigidbodyFlags nrbFlags, out UnityEngine.RigidbodyConstraints rbConstraints)
    // Offset: 0x2B1D650
    void ReadNetworkRigidbodyFlags(ByRef<::Fusion::NetworkRigidbodyBase::NetworkRigidbodyFlags> nrbFlags, ByRef<::UnityEngine::RigidbodyConstraints> rbConstraints);
    // static public System.Void ReadNetworkRigidbodyFlags(System.Int32* ptr, out Fusion.NetworkRigidbodyBase/NetworkRigidbodyFlags nrbFlags, out UnityEngine.RigidbodyConstraints rbConstraints)
    // Offset: 0x2B1D668
    static void ReadNetworkRigidbodyFlags(int* ptr, ByRef<::Fusion::NetworkRigidbodyBase::NetworkRigidbodyFlags> nrbFlags, ByRef<::UnityEngine::RigidbodyConstraints> rbConstraints);
    // public System.Void WriteRigidbodyPosition(UnityEngine.Vector3 rbPos)
    // Offset: 0x2B1D67C
    void WriteRigidbodyPosition(::UnityEngine::Vector3 rbPos);
    // public System.Void WriteRigidbodyPosition(UnityEngine.Vector3 rbPos, System.Int32* ptr)
    // Offset: 0x2B1D72C
    void WriteRigidbodyPosition(::UnityEngine::Vector3 rbPos, int* ptr);
    // static public System.Void WriteRigidbodyPosition(UnityEngine.Vector3 rbPos, System.Int32* ptr, Fusion.WriteAccuracy writeAccuracy)
    // Offset: 0x2B1D7D8
    static void WriteRigidbodyPosition(::UnityEngine::Vector3 rbPos, int* ptr, ::Fusion::WriteAccuracy writeAccuracy);
    // public System.Void WriteRigidbodyRotation(UnityEngine.Quaternion rbRot)
    // Offset: 0x2B1D86C
    void WriteRigidbodyRotation(::UnityEngine::Quaternion rbRot);
    // public System.Void WriteRigidbodyRotation(UnityEngine.Quaternion rbRot, System.Int32* ptr)
    // Offset: 0x2B1D93C
    void WriteRigidbodyRotation(::UnityEngine::Quaternion rbRot, int* ptr);
    // static public System.Void WriteRigidbodyRotation(UnityEngine.Quaternion rbRot, System.Int32* ptr, Fusion.WriteAccuracy writeAccuracy)
    // Offset: 0x2B1DA08
    static void WriteRigidbodyRotation(::UnityEngine::Quaternion rbRot, int* ptr, ::Fusion::WriteAccuracy writeAccuracy);
    // public System.Void WriteVelocity(UnityEngine.Vector3 velocity)
    // Offset: 0x2B1DABC
    void WriteVelocity(::UnityEngine::Vector3 velocity);
    // public System.Void WriteVelocity(UnityEngine.Vector3 velocity, System.Int32* ptr)
    // Offset: 0x2B1DB6C
    void WriteVelocity(::UnityEngine::Vector3 velocity, int* ptr);
    // static public System.Void WriteVelocity(UnityEngine.Vector3 velocity, System.Int32* ptr, Fusion.WriteAccuracy writeAccuracy)
    // Offset: 0x2B1DC18
    static void WriteVelocity(::UnityEngine::Vector3 velocity, int* ptr, ::Fusion::WriteAccuracy writeAccuracy);
    // public System.Void WriteAngularVelocity(UnityEngine.Vector3 angularVel)
    // Offset: 0x2B1DCAC
    void WriteAngularVelocity(::UnityEngine::Vector3 angularVel);
    // public System.Void WriteAngularVelocity(UnityEngine.Vector3 angularVel, System.Int32* ptr)
    // Offset: 0x2B1DD5C
    void WriteAngularVelocity(::UnityEngine::Vector3 angularVel, int* ptr);
    // static public System.Void WriteAngularVelocity(UnityEngine.Vector3 angularVel, System.Int32* ptr, Fusion.WriteAccuracy writeAccuracy)
    // Offset: 0x2B1DE08
    static void WriteAngularVelocity(::UnityEngine::Vector3 angularVel, int* ptr, ::Fusion::WriteAccuracy writeAccuracy);
    // public System.Void WriteNetworkRigidbodyFlags(Fusion.NetworkRigidbodyBase/NetworkRigidbodyFlags nrbFlags, UnityEngine.RigidbodyConstraints rbConstraints)
    // Offset: 0x2B1DE9C
    void WriteNetworkRigidbodyFlags(::Fusion::NetworkRigidbodyBase::NetworkRigidbodyFlags nrbFlags, ::UnityEngine::RigidbodyConstraints rbConstraints);
    // static public System.Void WriteNetworkRigidbodyFlags(Fusion.NetworkRigidbodyBase/NetworkRigidbodyFlags nrbFlags, UnityEngine.RigidbodyConstraints rbConstraints, System.Int32* ptr)
    // Offset: 0x2B1DEAC
    static void WriteNetworkRigidbodyFlags(::Fusion::NetworkRigidbodyBase::NetworkRigidbodyFlags nrbFlags, ::UnityEngine::RigidbodyConstraints rbConstraints, int* ptr);
    // protected override System.Void SetIsKinematic(System.Boolean value)
    // Offset: 0x2B1C2EC
    // Implemented from: Fusion.NetworkRigidbodyBase
    // Base method: System.Void NetworkRigidbodyBase::SetIsKinematic(System.Boolean value)
    void SetIsKinematic(bool value);
    // protected override System.Void SetCollisionDetectionMode(UnityEngine.CollisionDetectionMode mode)
    // Offset: 0x2B1C30C
    // Implemented from: Fusion.NetworkRigidbodyBase
    // Base method: System.Void NetworkRigidbodyBase::SetCollisionDetectionMode(UnityEngine.CollisionDetectionMode mode)
    void SetCollisionDetectionMode(::UnityEngine::CollisionDetectionMode mode);
    // protected override UnityEngine.Vector3 get_DefaultTeleportInterpolationVelocity()
    // Offset: 0x2B1C328
    // Implemented from: Fusion.NetworkTransform
    // Base method: UnityEngine.Vector3 NetworkTransform::get_DefaultTeleportInterpolationVelocity()
    ::UnityEngine::Vector3 get_DefaultTeleportInterpolationVelocity();
    // protected override UnityEngine.Vector3 get_DefaultTeleportInterpolationAngularVelocity()
    // Offset: 0x2B1C344
    // Implemented from: Fusion.NetworkTransform
    // Base method: UnityEngine.Vector3 NetworkTransform::get_DefaultTeleportInterpolationAngularVelocity()
    ::UnityEngine::Vector3 get_DefaultTeleportInterpolationAngularVelocity();
    // protected override System.Void Awake()
    // Offset: 0x2B1C46C
    // Implemented from: Fusion.NetworkPosition
    // Base method: System.Void NetworkPosition::Awake()
    void Awake();
    // public override System.Void Spawned()
    // Offset: 0x2B1C484
    // Implemented from: Fusion.NetworkTransform
    // Base method: System.Void NetworkTransform::Spawned()
    void Spawned();
    // public override System.Void RemotePrefabCreated()
    // Offset: 0x2B1C614
    // Implemented from: Fusion.NetworkRigidbodyBase
    // Base method: System.Void NetworkRigidbodyBase::RemotePrefabCreated()
    void RemotePrefabCreated();
    // public override System.Void StateAuthorityChanged()
    // Offset: 0x2B1C654
    // Implemented from: Fusion.NetworkRigidbodyBase
    // Base method: System.Void NetworkRigidbodyBase::StateAuthorityChanged()
    void StateAuthorityChanged();
    // public override System.Void CopyBackingFieldsToState(System.Boolean firstTime)
    // Offset: 0x2B1C70C
    // Implemented from: Fusion.NetworkRigidbodyBase
    // Base method: System.Void NetworkRigidbodyBase::CopyBackingFieldsToState(System.Boolean firstTime)
    void CopyBackingFieldsToState(bool firstTime);
    // protected override System.Void CopyFromBufferToEngine()
    // Offset: 0x2B1C760
    // Implemented from: Fusion.NetworkPositionRotation
    // Base method: System.Void NetworkPositionRotation::CopyFromBufferToEngine()
    void CopyFromBufferToEngine();
    // protected override System.Void CopyFromEngineToBuffer()
    // Offset: 0x2B1CDF8
    // Implemented from: Fusion.NetworkPositionRotation
    // Base method: System.Void NetworkPositionRotation::CopyFromEngineToBuffer()
    void CopyFromEngineToBuffer();
    // protected override System.Int32 get_BaseWordCount()
    // Offset: 0x2B1D2B0
    // Implemented from: Fusion.NetworkRigidbodyBase
    // Base method: System.Int32 NetworkRigidbodyBase::get_BaseWordCount()
    int get_BaseWordCount();
    // public System.Void .ctor()
    // Offset: 0x2B1DEB8
    // Implemented from: Fusion.NetworkRigidbodyBase
    // Base method: System.Void NetworkRigidbodyBase::.ctor()
    // Base method: System.Void NetworkTransform::.ctor()
    // Base method: System.Void NetworkPositionRotation::.ctor()
    // Base method: System.Void NetworkPosition::.ctor()
    // Base method: System.Void NetworkAreaOfInterestBehaviour::.ctor()
    // Base method: System.Void NetworkBehaviour::.ctor()
    // Base method: System.Void SimulationBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NetworkRigidbody* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkRigidbody::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NetworkRigidbody*, creationType>()));
    }
  }; // Fusion.NetworkRigidbody
  #pragma pack(pop)
  static check_size<sizeof(NetworkRigidbody), 328 + sizeof(::UnityEngine::Rigidbody*)> __Fusion_NetworkRigidbodySizeCheck;
  static_assert(sizeof(NetworkRigidbody) == 0x150);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::NetworkRigidbody::get_Rigidbody
// Il2CppName: get_Rigidbody
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rigidbody* (Fusion::NetworkRigidbody::*)()>(&Fusion::NetworkRigidbody::get_Rigidbody)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody*), "get_Rigidbody", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody::set_Rigidbody
// Il2CppName: set_Rigidbody
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbody::*)(::UnityEngine::Rigidbody*)>(&Fusion::NetworkRigidbody::set_Rigidbody)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rigidbody")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody*), "set_Rigidbody", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody::EnsureInitialized
// Il2CppName: EnsureInitialized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbody::*)()>(&Fusion::NetworkRigidbody::EnsureInitialized)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody*), "EnsureInitialized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody::Fusion_IAfterPhysicsSyncTransforms3D_AfterPhysicsSyncTransforms3D
// Il2CppName: Fusion.IAfterPhysicsSyncTransforms3D.AfterPhysicsSyncTransforms3D
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbody::*)()>(&Fusion::NetworkRigidbody::Fusion_IAfterPhysicsSyncTransforms3D_AfterPhysicsSyncTransforms3D)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody*), "Fusion.IAfterPhysicsSyncTransforms3D.AfterPhysicsSyncTransforms3D", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody::CopyRigidbodyFromBufferToEngine
// Il2CppName: CopyRigidbodyFromBufferToEngine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbody::*)()>(&Fusion::NetworkRigidbody::CopyRigidbodyFromBufferToEngine)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody*), "CopyRigidbodyFromBufferToEngine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody::IsRigidbodyBelowSleepingThresholds
// Il2CppName: IsRigidbodyBelowSleepingThresholds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::NetworkRigidbody::*)()>(&Fusion::NetworkRigidbody::IsRigidbodyBelowSleepingThresholds)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody*), "IsRigidbodyBelowSleepingThresholds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody::ReadRigidbodyPosition
// Il2CppName: ReadRigidbodyPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (Fusion::NetworkRigidbody::*)()>(&Fusion::NetworkRigidbody::ReadRigidbodyPosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody*), "ReadRigidbodyPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody::ReadRigidbodyPosition
// Il2CppName: ReadRigidbodyPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (Fusion::NetworkRigidbody::*)(int*)>(&Fusion::NetworkRigidbody::ReadRigidbodyPosition)> {
  static const MethodInfo* get() {
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody*), "ReadRigidbodyPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ptr});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody::ReadRigidbodyPosition
// Il2CppName: ReadRigidbodyPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (*)(int*, ::Fusion::ReadAccuracy)>(&Fusion::NetworkRigidbody::ReadRigidbodyPosition)> {
  static const MethodInfo* get() {
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* readAccuracy = &::il2cpp_utils::GetClassFromName("Fusion", "ReadAccuracy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody*), "ReadRigidbodyPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ptr, readAccuracy});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody::ReadRigidbodyRotation
// Il2CppName: ReadRigidbodyRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Quaternion (Fusion::NetworkRigidbody::*)()>(&Fusion::NetworkRigidbody::ReadRigidbodyRotation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody*), "ReadRigidbodyRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody::ReadRigidbodyRotation
// Il2CppName: ReadRigidbodyRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Quaternion (Fusion::NetworkRigidbody::*)(int*)>(&Fusion::NetworkRigidbody::ReadRigidbodyRotation)> {
  static const MethodInfo* get() {
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody*), "ReadRigidbodyRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ptr});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody::ReadRigidbodyRotation
// Il2CppName: ReadRigidbodyRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Quaternion (*)(int*, ::Fusion::ReadAccuracy)>(&Fusion::NetworkRigidbody::ReadRigidbodyRotation)> {
  static const MethodInfo* get() {
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* readAccuracy = &::il2cpp_utils::GetClassFromName("Fusion", "ReadAccuracy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody*), "ReadRigidbodyRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ptr, readAccuracy});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody::ReadVelocity
// Il2CppName: ReadVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (Fusion::NetworkRigidbody::*)()>(&Fusion::NetworkRigidbody::ReadVelocity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody*), "ReadVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody::ReadVelocity
// Il2CppName: ReadVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (Fusion::NetworkRigidbody::*)(int*)>(&Fusion::NetworkRigidbody::ReadVelocity)> {
  static const MethodInfo* get() {
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody*), "ReadVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ptr});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody::ReadVelocity
// Il2CppName: ReadVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (*)(int*, ::Fusion::ReadAccuracy)>(&Fusion::NetworkRigidbody::ReadVelocity)> {
  static const MethodInfo* get() {
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* readAccuracy = &::il2cpp_utils::GetClassFromName("Fusion", "ReadAccuracy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody*), "ReadVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ptr, readAccuracy});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody::ReadAngularVelocity
// Il2CppName: ReadAngularVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (Fusion::NetworkRigidbody::*)()>(&Fusion::NetworkRigidbody::ReadAngularVelocity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody*), "ReadAngularVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody::ReadAngularVelocity
// Il2CppName: ReadAngularVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (Fusion::NetworkRigidbody::*)(int*)>(&Fusion::NetworkRigidbody::ReadAngularVelocity)> {
  static const MethodInfo* get() {
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody*), "ReadAngularVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ptr});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody::ReadAngularVelocity
// Il2CppName: ReadAngularVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (*)(int*, ::Fusion::ReadAccuracy)>(&Fusion::NetworkRigidbody::ReadAngularVelocity)> {
  static const MethodInfo* get() {
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* readAccuracy = &::il2cpp_utils::GetClassFromName("Fusion", "ReadAccuracy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody*), "ReadAngularVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ptr, readAccuracy});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody::ReadNetworkRigidbodyFlags
// Il2CppName: ReadNetworkRigidbodyFlags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbody::*)(ByRef<::Fusion::NetworkRigidbodyBase::NetworkRigidbodyFlags>, ByRef<::UnityEngine::RigidbodyConstraints>)>(&Fusion::NetworkRigidbody::ReadNetworkRigidbodyFlags)> {
  static const MethodInfo* get() {
    static auto* nrbFlags = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRigidbodyBase/NetworkRigidbodyFlags")->this_arg;
    static auto* rbConstraints = &::il2cpp_utils::GetClassFromName("UnityEngine", "RigidbodyConstraints")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody*), "ReadNetworkRigidbodyFlags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nrbFlags, rbConstraints});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody::ReadNetworkRigidbodyFlags
// Il2CppName: ReadNetworkRigidbodyFlags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int*, ByRef<::Fusion::NetworkRigidbodyBase::NetworkRigidbodyFlags>, ByRef<::UnityEngine::RigidbodyConstraints>)>(&Fusion::NetworkRigidbody::ReadNetworkRigidbodyFlags)> {
  static const MethodInfo* get() {
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* nrbFlags = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRigidbodyBase/NetworkRigidbodyFlags")->this_arg;
    static auto* rbConstraints = &::il2cpp_utils::GetClassFromName("UnityEngine", "RigidbodyConstraints")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody*), "ReadNetworkRigidbodyFlags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ptr, nrbFlags, rbConstraints});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody::WriteRigidbodyPosition
// Il2CppName: WriteRigidbodyPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbody::*)(::UnityEngine::Vector3)>(&Fusion::NetworkRigidbody::WriteRigidbodyPosition)> {
  static const MethodInfo* get() {
    static auto* rbPos = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody*), "WriteRigidbodyPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rbPos});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody::WriteRigidbodyPosition
// Il2CppName: WriteRigidbodyPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbody::*)(::UnityEngine::Vector3, int*)>(&Fusion::NetworkRigidbody::WriteRigidbodyPosition)> {
  static const MethodInfo* get() {
    static auto* rbPos = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody*), "WriteRigidbodyPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rbPos, ptr});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody::WriteRigidbodyPosition
// Il2CppName: WriteRigidbodyPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Vector3, int*, ::Fusion::WriteAccuracy)>(&Fusion::NetworkRigidbody::WriteRigidbodyPosition)> {
  static const MethodInfo* get() {
    static auto* rbPos = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* writeAccuracy = &::il2cpp_utils::GetClassFromName("Fusion", "WriteAccuracy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody*), "WriteRigidbodyPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rbPos, ptr, writeAccuracy});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody::WriteRigidbodyRotation
// Il2CppName: WriteRigidbodyRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbody::*)(::UnityEngine::Quaternion)>(&Fusion::NetworkRigidbody::WriteRigidbodyRotation)> {
  static const MethodInfo* get() {
    static auto* rbRot = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody*), "WriteRigidbodyRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rbRot});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody::WriteRigidbodyRotation
// Il2CppName: WriteRigidbodyRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbody::*)(::UnityEngine::Quaternion, int*)>(&Fusion::NetworkRigidbody::WriteRigidbodyRotation)> {
  static const MethodInfo* get() {
    static auto* rbRot = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody*), "WriteRigidbodyRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rbRot, ptr});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody::WriteRigidbodyRotation
// Il2CppName: WriteRigidbodyRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Quaternion, int*, ::Fusion::WriteAccuracy)>(&Fusion::NetworkRigidbody::WriteRigidbodyRotation)> {
  static const MethodInfo* get() {
    static auto* rbRot = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* writeAccuracy = &::il2cpp_utils::GetClassFromName("Fusion", "WriteAccuracy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody*), "WriteRigidbodyRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rbRot, ptr, writeAccuracy});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody::WriteVelocity
// Il2CppName: WriteVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbody::*)(::UnityEngine::Vector3)>(&Fusion::NetworkRigidbody::WriteVelocity)> {
  static const MethodInfo* get() {
    static auto* velocity = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody*), "WriteVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{velocity});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody::WriteVelocity
// Il2CppName: WriteVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbody::*)(::UnityEngine::Vector3, int*)>(&Fusion::NetworkRigidbody::WriteVelocity)> {
  static const MethodInfo* get() {
    static auto* velocity = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody*), "WriteVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{velocity, ptr});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody::WriteVelocity
// Il2CppName: WriteVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Vector3, int*, ::Fusion::WriteAccuracy)>(&Fusion::NetworkRigidbody::WriteVelocity)> {
  static const MethodInfo* get() {
    static auto* velocity = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* writeAccuracy = &::il2cpp_utils::GetClassFromName("Fusion", "WriteAccuracy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody*), "WriteVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{velocity, ptr, writeAccuracy});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody::WriteAngularVelocity
// Il2CppName: WriteAngularVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbody::*)(::UnityEngine::Vector3)>(&Fusion::NetworkRigidbody::WriteAngularVelocity)> {
  static const MethodInfo* get() {
    static auto* angularVel = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody*), "WriteAngularVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{angularVel});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody::WriteAngularVelocity
// Il2CppName: WriteAngularVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbody::*)(::UnityEngine::Vector3, int*)>(&Fusion::NetworkRigidbody::WriteAngularVelocity)> {
  static const MethodInfo* get() {
    static auto* angularVel = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody*), "WriteAngularVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{angularVel, ptr});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody::WriteAngularVelocity
// Il2CppName: WriteAngularVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Vector3, int*, ::Fusion::WriteAccuracy)>(&Fusion::NetworkRigidbody::WriteAngularVelocity)> {
  static const MethodInfo* get() {
    static auto* angularVel = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* writeAccuracy = &::il2cpp_utils::GetClassFromName("Fusion", "WriteAccuracy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody*), "WriteAngularVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{angularVel, ptr, writeAccuracy});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody::WriteNetworkRigidbodyFlags
// Il2CppName: WriteNetworkRigidbodyFlags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbody::*)(::Fusion::NetworkRigidbodyBase::NetworkRigidbodyFlags, ::UnityEngine::RigidbodyConstraints)>(&Fusion::NetworkRigidbody::WriteNetworkRigidbodyFlags)> {
  static const MethodInfo* get() {
    static auto* nrbFlags = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRigidbodyBase/NetworkRigidbodyFlags")->byval_arg;
    static auto* rbConstraints = &::il2cpp_utils::GetClassFromName("UnityEngine", "RigidbodyConstraints")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody*), "WriteNetworkRigidbodyFlags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nrbFlags, rbConstraints});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody::WriteNetworkRigidbodyFlags
// Il2CppName: WriteNetworkRigidbodyFlags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Fusion::NetworkRigidbodyBase::NetworkRigidbodyFlags, ::UnityEngine::RigidbodyConstraints, int*)>(&Fusion::NetworkRigidbody::WriteNetworkRigidbodyFlags)> {
  static const MethodInfo* get() {
    static auto* nrbFlags = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRigidbodyBase/NetworkRigidbodyFlags")->byval_arg;
    static auto* rbConstraints = &::il2cpp_utils::GetClassFromName("UnityEngine", "RigidbodyConstraints")->byval_arg;
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody*), "WriteNetworkRigidbodyFlags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nrbFlags, rbConstraints, ptr});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody::SetIsKinematic
// Il2CppName: SetIsKinematic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbody::*)(bool)>(&Fusion::NetworkRigidbody::SetIsKinematic)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody*), "SetIsKinematic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody::SetCollisionDetectionMode
// Il2CppName: SetCollisionDetectionMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbody::*)(::UnityEngine::CollisionDetectionMode)>(&Fusion::NetworkRigidbody::SetCollisionDetectionMode)> {
  static const MethodInfo* get() {
    static auto* mode = &::il2cpp_utils::GetClassFromName("UnityEngine", "CollisionDetectionMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody*), "SetCollisionDetectionMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mode});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody::get_DefaultTeleportInterpolationVelocity
// Il2CppName: get_DefaultTeleportInterpolationVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (Fusion::NetworkRigidbody::*)()>(&Fusion::NetworkRigidbody::get_DefaultTeleportInterpolationVelocity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody*), "get_DefaultTeleportInterpolationVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody::get_DefaultTeleportInterpolationAngularVelocity
// Il2CppName: get_DefaultTeleportInterpolationAngularVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (Fusion::NetworkRigidbody::*)()>(&Fusion::NetworkRigidbody::get_DefaultTeleportInterpolationAngularVelocity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody*), "get_DefaultTeleportInterpolationAngularVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbody::*)()>(&Fusion::NetworkRigidbody::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody::Spawned
// Il2CppName: Spawned
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbody::*)()>(&Fusion::NetworkRigidbody::Spawned)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody*), "Spawned", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody::RemotePrefabCreated
// Il2CppName: RemotePrefabCreated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbody::*)()>(&Fusion::NetworkRigidbody::RemotePrefabCreated)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody*), "RemotePrefabCreated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody::StateAuthorityChanged
// Il2CppName: StateAuthorityChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbody::*)()>(&Fusion::NetworkRigidbody::StateAuthorityChanged)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody*), "StateAuthorityChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody::CopyBackingFieldsToState
// Il2CppName: CopyBackingFieldsToState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbody::*)(bool)>(&Fusion::NetworkRigidbody::CopyBackingFieldsToState)> {
  static const MethodInfo* get() {
    static auto* firstTime = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody*), "CopyBackingFieldsToState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{firstTime});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody::CopyFromBufferToEngine
// Il2CppName: CopyFromBufferToEngine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbody::*)()>(&Fusion::NetworkRigidbody::CopyFromBufferToEngine)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody*), "CopyFromBufferToEngine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody::CopyFromEngineToBuffer
// Il2CppName: CopyFromEngineToBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbody::*)()>(&Fusion::NetworkRigidbody::CopyFromEngineToBuffer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody*), "CopyFromEngineToBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody::get_BaseWordCount
// Il2CppName: get_BaseWordCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Fusion::NetworkRigidbody::*)()>(&Fusion::NetworkRigidbody::get_BaseWordCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody*), "get_BaseWordCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
