// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Fusion.NetworkPrefabSourceUnityBase
#include "Fusion/NetworkPrefabSourceUnityBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: Fusion
namespace Fusion {
  // Forward declaring type: NetworkPrefabLoadContext
  struct NetworkPrefabLoadContext;
}
// Completed forward declares
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: NetworkPrefabSourceUnityStatic
  class NetworkPrefabSourceUnityStatic;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::NetworkPrefabSourceUnityStatic);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::NetworkPrefabSourceUnityStatic*, "Fusion", "NetworkPrefabSourceUnityStatic");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.NetworkPrefabSourceUnityStatic
  // [TokenAttribute] Offset: FFFFFFFF
  class NetworkPrefabSourceUnityStatic : public ::Fusion::NetworkPrefabSourceUnityBase {
    public:
    public:
    // public UnityEngine.GameObject PrefabReference
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::GameObject* PrefabReference;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    public:
    // Get instance field reference: public UnityEngine.GameObject PrefabReference
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_PrefabReference();
    // public override System.String get_EditorSummary()
    // Offset: 0x2B4F76C
    // Implemented from: Fusion.NetworkPrefabSourceUnityBase
    // Base method: System.String NetworkPrefabSourceUnityBase::get_EditorSummary()
    ::StringW get_EditorSummary();
    // public override System.Void Load(in Fusion.NetworkPrefabLoadContext context)
    // Offset: 0x2B4F7B8
    // Implemented from: Fusion.NetworkPrefabSourceUnityBase
    // Base method: System.Void NetworkPrefabSourceUnityBase::Load(in Fusion.NetworkPrefabLoadContext context)
    void Load(ByRef<::Fusion::NetworkPrefabLoadContext> context);
    // public System.Void .ctor()
    // Offset: 0x2B4F7C8
    // Implemented from: Fusion.NetworkPrefabSourceUnityBase
    // Base method: System.Void NetworkPrefabSourceUnityBase::.ctor()
    // Base method: System.Void AssetObject::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NetworkPrefabSourceUnityStatic* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkPrefabSourceUnityStatic::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NetworkPrefabSourceUnityStatic*, creationType>()));
    }
  }; // Fusion.NetworkPrefabSourceUnityStatic
  #pragma pack(pop)
  static check_size<sizeof(NetworkPrefabSourceUnityStatic), 40 + sizeof(::UnityEngine::GameObject*)> __Fusion_NetworkPrefabSourceUnityStaticSizeCheck;
  static_assert(sizeof(NetworkPrefabSourceUnityStatic) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::NetworkPrefabSourceUnityStatic::get_EditorSummary
// Il2CppName: get_EditorSummary
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Fusion::NetworkPrefabSourceUnityStatic::*)()>(&Fusion::NetworkPrefabSourceUnityStatic::get_EditorSummary)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkPrefabSourceUnityStatic*), "get_EditorSummary", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkPrefabSourceUnityStatic::Load
// Il2CppName: Load
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkPrefabSourceUnityStatic::*)(ByRef<::Fusion::NetworkPrefabLoadContext>)>(&Fusion::NetworkPrefabSourceUnityStatic::Load)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkPrefabLoadContext")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkPrefabSourceUnityStatic*), "Load", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkPrefabSourceUnityStatic::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
