// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Fusion::Editor
namespace Fusion::Editor {
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: MeshFilter
  class MeshFilter;
  // Forward declaring type: Renderer
  class Renderer;
  // Forward declaring type: Collider
  class Collider;
  // Forward declaring type: SpriteRenderer
  class SpriteRenderer;
  // Forward declaring type: Collider2D
  class Collider2D;
  // Forward declaring type: Bounds
  struct Bounds;
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: Fusion.Editor
namespace Fusion::Editor {
  // Forward declaring type: BoundsTools
  class BoundsTools;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::Editor::BoundsTools);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::Editor::BoundsTools*, "Fusion.Editor", "BoundsTools");
// Type namespace: Fusion.Editor
namespace Fusion::Editor {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.Editor.BoundsTools
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class BoundsTools : public ::Il2CppObject {
    public:
    // Nested type: ::Fusion::Editor::BoundsTools::BoundsType
    struct BoundsType;
    // Get static field: static private readonly System.Collections.Generic.List`1<UnityEngine.MeshFilter> meshFilters
    static ::System::Collections::Generic::List_1<::UnityEngine::MeshFilter*>* _get_meshFilters();
    // Set static field: static private readonly System.Collections.Generic.List`1<UnityEngine.MeshFilter> meshFilters
    static void _set_meshFilters(::System::Collections::Generic::List_1<::UnityEngine::MeshFilter*>* value);
    // Get static field: static private readonly System.Collections.Generic.List`1<UnityEngine.Renderer> meshRenderers
    static ::System::Collections::Generic::List_1<::UnityEngine::Renderer*>* _get_meshRenderers();
    // Set static field: static private readonly System.Collections.Generic.List`1<UnityEngine.Renderer> meshRenderers
    static void _set_meshRenderers(::System::Collections::Generic::List_1<::UnityEngine::Renderer*>* value);
    // Get static field: static private readonly System.Collections.Generic.List`1<UnityEngine.Collider> colliders
    static ::System::Collections::Generic::List_1<::UnityEngine::Collider*>* _get_colliders();
    // Set static field: static private readonly System.Collections.Generic.List`1<UnityEngine.Collider> colliders
    static void _set_colliders(::System::Collections::Generic::List_1<::UnityEngine::Collider*>* value);
    // Get static field: static private readonly System.Collections.Generic.List`1<UnityEngine.Collider> validColliders
    static ::System::Collections::Generic::List_1<::UnityEngine::Collider*>* _get_validColliders();
    // Set static field: static private readonly System.Collections.Generic.List`1<UnityEngine.Collider> validColliders
    static void _set_validColliders(::System::Collections::Generic::List_1<::UnityEngine::Collider*>* value);
    // Get static field: static private readonly System.Collections.Generic.List`1<UnityEngine.SpriteRenderer> spriteRenderers
    static ::System::Collections::Generic::List_1<::UnityEngine::SpriteRenderer*>* _get_spriteRenderers();
    // Set static field: static private readonly System.Collections.Generic.List`1<UnityEngine.SpriteRenderer> spriteRenderers
    static void _set_spriteRenderers(::System::Collections::Generic::List_1<::UnityEngine::SpriteRenderer*>* value);
    // Get static field: static private readonly System.Collections.Generic.List`1<UnityEngine.Collider2D> colliders2D
    static ::System::Collections::Generic::List_1<::UnityEngine::Collider2D*>* _get_colliders2D();
    // Set static field: static private readonly System.Collections.Generic.List`1<UnityEngine.Collider2D> colliders2D
    static void _set_colliders2D(::System::Collections::Generic::List_1<::UnityEngine::Collider2D*>* value);
    // Get static field: static private readonly System.Collections.Generic.List`1<UnityEngine.Collider2D> validColliders2D
    static ::System::Collections::Generic::List_1<::UnityEngine::Collider2D*>* _get_validColliders2D();
    // Set static field: static private readonly System.Collections.Generic.List`1<UnityEngine.Collider2D> validColliders2D
    static void _set_validColliders2D(::System::Collections::Generic::List_1<::UnityEngine::Collider2D*>* value);
    // static public UnityEngine.Bounds CollectMyBounds(UnityEngine.GameObject go, Fusion.Editor.BoundsTools/BoundsType factorIn, out System.Int32 numOfBoundsFound, System.Boolean includeChildren, System.Boolean includeInactive)
    // Offset: 0x281A3BC
    static ::UnityEngine::Bounds CollectMyBounds(::UnityEngine::GameObject* go, ::Fusion::Editor::BoundsTools::BoundsType factorIn, ByRef<int> numOfBoundsFound, bool includeChildren, bool includeInactive);
    // static public UnityEngine.Bounds CollectMyBounds(UnityEngine.GameObject go, Fusion.Editor.BoundsTools/BoundsType factorIn, System.Boolean includeChildren)
    // Offset: 0x281B620
    static ::UnityEngine::Bounds CollectMyBounds(::UnityEngine::GameObject* go, ::Fusion::Editor::BoundsTools::BoundsType factorIn, bool includeChildren);
    // static private System.Void .cctor()
    // Offset: 0x281B6C0
    static void _cctor();
  }; // Fusion.Editor.BoundsTools
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::Editor::BoundsTools::CollectMyBounds
// Il2CppName: CollectMyBounds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Bounds (*)(::UnityEngine::GameObject*, ::Fusion::Editor::BoundsTools::BoundsType, ByRef<int>, bool, bool)>(&Fusion::Editor::BoundsTools::CollectMyBounds)> {
  static const MethodInfo* get() {
    static auto* go = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* factorIn = &::il2cpp_utils::GetClassFromName("Fusion.Editor", "BoundsTools/BoundsType")->byval_arg;
    static auto* numOfBoundsFound = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* includeChildren = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* includeInactive = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Editor::BoundsTools*), "CollectMyBounds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{go, factorIn, numOfBoundsFound, includeChildren, includeInactive});
  }
};
// Writing MetadataGetter for method: Fusion::Editor::BoundsTools::CollectMyBounds
// Il2CppName: CollectMyBounds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Bounds (*)(::UnityEngine::GameObject*, ::Fusion::Editor::BoundsTools::BoundsType, bool)>(&Fusion::Editor::BoundsTools::CollectMyBounds)> {
  static const MethodInfo* get() {
    static auto* go = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* factorIn = &::il2cpp_utils::GetClassFromName("Fusion.Editor", "BoundsTools/BoundsType")->byval_arg;
    static auto* includeChildren = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Editor::BoundsTools*), "CollectMyBounds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{go, factorIn, includeChildren});
  }
};
// Writing MetadataGetter for method: Fusion::Editor::BoundsTools::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Fusion::Editor::BoundsTools::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Editor::BoundsTools*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
