// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include <stdint.h>
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: Fusion.Sockets.INetBitWriteStream
#include "Fusion/Sockets/INetBitWriteStream.hpp"
// Completed includes
// Type namespace: Fusion.Sockets
namespace Fusion::Sockets {
  // Forward declaring type: NetBitBufferNull
  struct NetBitBufferNull;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Fusion::Sockets::NetBitBufferNull, "Fusion.Sockets", "NetBitBufferNull");
// Type namespace: Fusion.Sockets
namespace Fusion::Sockets {
  // Size: 0x4
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: Fusion.Sockets.NetBitBufferNull
  // [TokenAttribute] Offset: FFFFFFFF
  struct NetBitBufferNull/*, public ::System::ValueType, public ::Fusion::Sockets::INetBitWriteStream*/ {
    public:
    public:
    // private System.Int32 _offsetBits
    // Size: 0x4
    // Offset: 0x0
    int offsetBits;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: NetBitBufferNull
    constexpr NetBitBufferNull(int offsetBits_ = {}) noexcept : offsetBits{offsetBits_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::Fusion::Sockets::INetBitWriteStream
    operator ::Fusion::Sockets::INetBitWriteStream() noexcept {
      return *reinterpret_cast<::Fusion::Sockets::INetBitWriteStream*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return offsetBits;
    }
    // Get instance field reference: private System.Int32 _offsetBits
    [[deprecated("Use field access instead!")]] int& dyn__offsetBits();
    // public System.Int32 get_OffsetBits()
    // Offset: 0x2B90940
    int get_OffsetBits();
    // public System.Void set_OffsetBits(System.Int32 value)
    // Offset: 0x2B90948
    void set_OffsetBits(int value);
    // public System.Void PadToByteBoundary()
    // Offset: 0x2B90950
    void PadToByteBoundary();
    // public System.Void WriteByte(System.Byte value, System.Int32 bits)
    // Offset: 0x2B90978
    void WriteByte(uint8_t value, int bits);
    // public System.Void WriteInt32(System.Int32 value, System.Int32 bits)
    // Offset: 0x2B90988
    void WriteInt32(int value, int bits);
    // public System.Void WriteInt32VarLength(System.Int32 value)
    // Offset: 0x2B90998
    void WriteInt32VarLength(int value);
    // public System.Void WriteInt32VarLength(System.Int32 value, System.Int32 blockSize)
    // Offset: 0x2B909D8
    void WriteInt32VarLength(int value, int blockSize);
    // public System.Void WriteUInt32VarLength(System.UInt32 value, System.Int32 blockSize)
    // Offset: 0x2B909DC
    void WriteUInt32VarLength(uint value, int blockSize);
    // public System.Void WriteUInt64VarLength(System.UInt64 value, System.Int32 blockSize)
    // Offset: 0x2B90AEC
    void WriteUInt64VarLength(uint64_t value, int blockSize);
    // public System.Void WriteUInt32VarLength(System.UInt32 value)
    // Offset: 0x2B909B8
    void WriteUInt32VarLength(uint value);
    // public System.Boolean WriteBoolean(System.Boolean b)
    // Offset: 0x2B90C14
    bool WriteBoolean(bool b);
    // public System.Void WriteBytesAligned(System.Void* buffer, System.Int32 length)
    // Offset: 0x2B90C2C
    void WriteBytesAligned(void* buffer, int length);
  }; // Fusion.Sockets.NetBitBufferNull
  #pragma pack(pop)
  static check_size<sizeof(NetBitBufferNull), 0 + sizeof(int)> __Fusion_Sockets_NetBitBufferNullSizeCheck;
  static_assert(sizeof(NetBitBufferNull) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::Sockets::NetBitBufferNull::get_OffsetBits
// Il2CppName: get_OffsetBits
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Fusion::Sockets::NetBitBufferNull::*)()>(&Fusion::Sockets::NetBitBufferNull::get_OffsetBits)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Sockets::NetBitBufferNull), "get_OffsetBits", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Sockets::NetBitBufferNull::set_OffsetBits
// Il2CppName: set_OffsetBits
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Sockets::NetBitBufferNull::*)(int)>(&Fusion::Sockets::NetBitBufferNull::set_OffsetBits)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Sockets::NetBitBufferNull), "set_OffsetBits", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::Sockets::NetBitBufferNull::PadToByteBoundary
// Il2CppName: PadToByteBoundary
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Sockets::NetBitBufferNull::*)()>(&Fusion::Sockets::NetBitBufferNull::PadToByteBoundary)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Sockets::NetBitBufferNull), "PadToByteBoundary", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Sockets::NetBitBufferNull::WriteByte
// Il2CppName: WriteByte
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Sockets::NetBitBufferNull::*)(uint8_t, int)>(&Fusion::Sockets::NetBitBufferNull::WriteByte)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Sockets::NetBitBufferNull), "WriteByte", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, bits});
  }
};
// Writing MetadataGetter for method: Fusion::Sockets::NetBitBufferNull::WriteInt32
// Il2CppName: WriteInt32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Sockets::NetBitBufferNull::*)(int, int)>(&Fusion::Sockets::NetBitBufferNull::WriteInt32)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Sockets::NetBitBufferNull), "WriteInt32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, bits});
  }
};
// Writing MetadataGetter for method: Fusion::Sockets::NetBitBufferNull::WriteInt32VarLength
// Il2CppName: WriteInt32VarLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Sockets::NetBitBufferNull::*)(int)>(&Fusion::Sockets::NetBitBufferNull::WriteInt32VarLength)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Sockets::NetBitBufferNull), "WriteInt32VarLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::Sockets::NetBitBufferNull::WriteInt32VarLength
// Il2CppName: WriteInt32VarLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Sockets::NetBitBufferNull::*)(int, int)>(&Fusion::Sockets::NetBitBufferNull::WriteInt32VarLength)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* blockSize = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Sockets::NetBitBufferNull), "WriteInt32VarLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, blockSize});
  }
};
// Writing MetadataGetter for method: Fusion::Sockets::NetBitBufferNull::WriteUInt32VarLength
// Il2CppName: WriteUInt32VarLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Sockets::NetBitBufferNull::*)(uint, int)>(&Fusion::Sockets::NetBitBufferNull::WriteUInt32VarLength)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* blockSize = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Sockets::NetBitBufferNull), "WriteUInt32VarLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, blockSize});
  }
};
// Writing MetadataGetter for method: Fusion::Sockets::NetBitBufferNull::WriteUInt64VarLength
// Il2CppName: WriteUInt64VarLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Sockets::NetBitBufferNull::*)(uint64_t, int)>(&Fusion::Sockets::NetBitBufferNull::WriteUInt64VarLength)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* blockSize = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Sockets::NetBitBufferNull), "WriteUInt64VarLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, blockSize});
  }
};
// Writing MetadataGetter for method: Fusion::Sockets::NetBitBufferNull::WriteUInt32VarLength
// Il2CppName: WriteUInt32VarLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Sockets::NetBitBufferNull::*)(uint)>(&Fusion::Sockets::NetBitBufferNull::WriteUInt32VarLength)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Sockets::NetBitBufferNull), "WriteUInt32VarLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::Sockets::NetBitBufferNull::WriteBoolean
// Il2CppName: WriteBoolean
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::Sockets::NetBitBufferNull::*)(bool)>(&Fusion::Sockets::NetBitBufferNull::WriteBoolean)> {
  static const MethodInfo* get() {
    static auto* b = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Sockets::NetBitBufferNull), "WriteBoolean", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{b});
  }
};
// Writing MetadataGetter for method: Fusion::Sockets::NetBitBufferNull::WriteBytesAligned
// Il2CppName: WriteBytesAligned
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Sockets::NetBitBufferNull::*)(void*, int)>(&Fusion::Sockets::NetBitBufferNull::WriteBytesAligned)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Void"))->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Sockets::NetBitBufferNull), "WriteBytesAligned", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, length});
  }
};
