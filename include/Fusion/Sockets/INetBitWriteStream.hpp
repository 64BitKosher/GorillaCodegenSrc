// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include <stdint.h>
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Type namespace: Fusion.Sockets
namespace Fusion::Sockets {
  // Forward declaring type: INetBitWriteStream
  class INetBitWriteStream;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::Sockets::INetBitWriteStream);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::Sockets::INetBitWriteStream*, "Fusion.Sockets", "INetBitWriteStream");
// Type namespace: Fusion.Sockets
namespace Fusion::Sockets {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.Sockets.INetBitWriteStream
  // [TokenAttribute] Offset: FFFFFFFF
  class INetBitWriteStream {
    public:
    // public System.Int32 get_OffsetBits()
    // Offset: 0xFFFFFFFFFFFFFFFF
    int get_OffsetBits();
    // public System.Void WriteInt32(System.Int32 value, System.Int32 bits)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void WriteInt32(int value, int bits);
    // public System.Void WriteInt32VarLength(System.Int32 value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void WriteInt32VarLength(int value);
    // public System.Void WriteInt32VarLength(System.Int32 value, System.Int32 blockSize)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void WriteInt32VarLength(int value, int blockSize);
    // public System.Void WriteUInt64VarLength(System.UInt64 value, System.Int32 blockSize)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void WriteUInt64VarLength(uint64_t value, int blockSize);
    // public System.Boolean WriteBoolean(System.Boolean b)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool WriteBoolean(bool b);
    // public System.Void WriteBytesAligned(System.Void* buffer, System.Int32 length)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void WriteBytesAligned(void* buffer, int length);
  }; // Fusion.Sockets.INetBitWriteStream
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::Sockets::INetBitWriteStream::get_OffsetBits
// Il2CppName: get_OffsetBits
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Fusion::Sockets::INetBitWriteStream::*)()>(&Fusion::Sockets::INetBitWriteStream::get_OffsetBits)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Sockets::INetBitWriteStream*), "get_OffsetBits", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Sockets::INetBitWriteStream::WriteInt32
// Il2CppName: WriteInt32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Sockets::INetBitWriteStream::*)(int, int)>(&Fusion::Sockets::INetBitWriteStream::WriteInt32)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Sockets::INetBitWriteStream*), "WriteInt32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, bits});
  }
};
// Writing MetadataGetter for method: Fusion::Sockets::INetBitWriteStream::WriteInt32VarLength
// Il2CppName: WriteInt32VarLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Sockets::INetBitWriteStream::*)(int)>(&Fusion::Sockets::INetBitWriteStream::WriteInt32VarLength)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Sockets::INetBitWriteStream*), "WriteInt32VarLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::Sockets::INetBitWriteStream::WriteInt32VarLength
// Il2CppName: WriteInt32VarLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Sockets::INetBitWriteStream::*)(int, int)>(&Fusion::Sockets::INetBitWriteStream::WriteInt32VarLength)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* blockSize = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Sockets::INetBitWriteStream*), "WriteInt32VarLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, blockSize});
  }
};
// Writing MetadataGetter for method: Fusion::Sockets::INetBitWriteStream::WriteUInt64VarLength
// Il2CppName: WriteUInt64VarLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Sockets::INetBitWriteStream::*)(uint64_t, int)>(&Fusion::Sockets::INetBitWriteStream::WriteUInt64VarLength)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* blockSize = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Sockets::INetBitWriteStream*), "WriteUInt64VarLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, blockSize});
  }
};
// Writing MetadataGetter for method: Fusion::Sockets::INetBitWriteStream::WriteBoolean
// Il2CppName: WriteBoolean
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::Sockets::INetBitWriteStream::*)(bool)>(&Fusion::Sockets::INetBitWriteStream::WriteBoolean)> {
  static const MethodInfo* get() {
    static auto* b = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Sockets::INetBitWriteStream*), "WriteBoolean", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{b});
  }
};
// Writing MetadataGetter for method: Fusion::Sockets::INetBitWriteStream::WriteBytesAligned
// Il2CppName: WriteBytesAligned
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Sockets::INetBitWriteStream::*)(void*, int)>(&Fusion::Sockets::INetBitWriteStream::WriteBytesAligned)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Void"))->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Sockets::INetBitWriteStream*), "WriteBytesAligned", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, length});
  }
};
