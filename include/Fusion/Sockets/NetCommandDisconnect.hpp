// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: Fusion.Sockets.NetCommandHeader
#include "Fusion/Sockets/NetCommandHeader.hpp"
// Including type: Fusion.Sockets.NetDisconnectReason
#include "Fusion/Sockets/NetDisconnectReason.hpp"
// Completed includes
// Type namespace: Fusion.Sockets
namespace Fusion::Sockets {
  // Forward declaring type: NetCommandDisconnect
  struct NetCommandDisconnect;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Fusion::Sockets::NetCommandDisconnect, "Fusion.Sockets", "NetCommandDisconnect");
// Type namespace: Fusion.Sockets
namespace Fusion::Sockets {
  // Size: 0x3
  #pragma pack(push, 1)
  // WARNING Layout: Explicit may not be correctly taken into account!
  // Autogenerated type: Fusion.Sockets.NetCommandDisconnect
  // [TokenAttribute] Offset: FFFFFFFF
  struct NetCommandDisconnect/*, public ::System::ValueType*/ {
    public:
    public:
    // public Fusion.Sockets.NetCommandHeader Header
    // Size: 0x2
    // Offset: 0x0
    ::Fusion::Sockets::NetCommandHeader Header;
    // Field size check
    static_assert(sizeof(::Fusion::Sockets::NetCommandHeader) == 0x2);
    // public Fusion.Sockets.NetDisconnectReason Reason
    // Size: 0x1
    // Offset: 0x2
    ::Fusion::Sockets::NetDisconnectReason Reason;
    // Field size check
    static_assert(sizeof(::Fusion::Sockets::NetDisconnectReason) == 0x1);
    public:
    // Creating value type constructor for type: NetCommandDisconnect
    constexpr NetCommandDisconnect(::Fusion::Sockets::NetCommandHeader Header_ = {}, ::Fusion::Sockets::NetDisconnectReason Reason_ = {}) noexcept : Header{Header_}, Reason{Reason_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public Fusion.Sockets.NetCommandHeader Header
    [[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetCommandHeader& dyn_Header();
    // Get instance field reference: public Fusion.Sockets.NetDisconnectReason Reason
    [[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetDisconnectReason& dyn_Reason();
    // static public Fusion.Sockets.NetCommandDisconnect Create(Fusion.Sockets.NetDisconnectReason reason)
    // Offset: 0x2B91120
    static ::Fusion::Sockets::NetCommandDisconnect Create(::Fusion::Sockets::NetDisconnectReason reason);
  }; // Fusion.Sockets.NetCommandDisconnect
  #pragma pack(pop)
  static check_size<sizeof(NetCommandDisconnect), 2 + sizeof(::Fusion::Sockets::NetDisconnectReason)> __Fusion_Sockets_NetCommandDisconnectSizeCheck;
  static_assert(sizeof(NetCommandDisconnect) == 0x3);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::Sockets::NetCommandDisconnect::Create
// Il2CppName: Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::Sockets::NetCommandDisconnect (*)(::Fusion::Sockets::NetDisconnectReason)>(&Fusion::Sockets::NetCommandDisconnect::Create)> {
  static const MethodInfo* get() {
    static auto* reason = &::il2cpp_utils::GetClassFromName("Fusion.Sockets", "NetDisconnectReason")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Sockets::NetCommandDisconnect), "Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{reason});
  }
};
