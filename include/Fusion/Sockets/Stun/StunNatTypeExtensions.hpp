// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Fusion::Sockets::Stun
namespace Fusion::Sockets::Stun {
  // Forward declaring type: NATType
  struct NATType;
}
// Completed forward declares
// Type namespace: Fusion.Sockets.Stun
namespace Fusion::Sockets::Stun {
  // Forward declaring type: StunNatTypeExtensions
  class StunNatTypeExtensions;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::Sockets::Stun::StunNatTypeExtensions);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::Sockets::Stun::StunNatTypeExtensions*, "Fusion.Sockets.Stun", "StunNatTypeExtensions");
// Type namespace: Fusion.Sockets.Stun
namespace Fusion::Sockets::Stun {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.Sockets.Stun.StunNatTypeExtensions
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class StunNatTypeExtensions : public ::Il2CppObject {
    public:
    // static public System.Boolean IsValid(Fusion.Sockets.Stun.NATType natType)
    // Offset: 0x2B98AB0
    static bool IsValid(::Fusion::Sockets::Stun::NATType natType);
  }; // Fusion.Sockets.Stun.StunNatTypeExtensions
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::Sockets::Stun::StunNatTypeExtensions::IsValid
// Il2CppName: IsValid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Fusion::Sockets::Stun::NATType)>(&Fusion::Sockets::Stun::StunNatTypeExtensions::IsValid)> {
  static const MethodInfo* get() {
    static auto* natType = &::il2cpp_utils::GetClassFromName("Fusion.Sockets.Stun", "NATType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Sockets::Stun::StunNatTypeExtensions*), "IsValid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{natType});
  }
};
