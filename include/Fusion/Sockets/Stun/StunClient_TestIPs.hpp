// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Fusion.Sockets.Stun.StunClient
#include "Fusion/Sockets/Stun/StunClient.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Net
namespace System::Net {
  // Forward declaring type: IPEndPoint
  class IPEndPoint;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::Sockets::Stun::StunClient::TestIPs);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::Sockets::Stun::StunClient::TestIPs*, "Fusion.Sockets.Stun", "StunClient/TestIPs");
// Type namespace: Fusion.Sockets.Stun
namespace Fusion::Sockets::Stun {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.Sockets.Stun.StunClient/TestIPs
  // [TokenAttribute] Offset: FFFFFFFF
  class StunClient::TestIPs : public ::Il2CppObject {
    public:
    // Get static field: static public System.Net.IPEndPoint TEST_NET_IPV4
    static ::System::Net::IPEndPoint* _get_TEST_NET_IPV4();
    // Set static field: static public System.Net.IPEndPoint TEST_NET_IPV4
    static void _set_TEST_NET_IPV4(::System::Net::IPEndPoint* value);
    // Get static field: static public System.Net.IPEndPoint TEST_NET_IPV6
    static ::System::Net::IPEndPoint* _get_TEST_NET_IPV6();
    // Set static field: static public System.Net.IPEndPoint TEST_NET_IPV6
    static void _set_TEST_NET_IPV6(::System::Net::IPEndPoint* value);
    // static private System.Void .cctor()
    // Offset: 0x2B99E4C
    static void _cctor();
  }; // Fusion.Sockets.Stun.StunClient/TestIPs
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::Sockets::Stun::StunClient::TestIPs::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Fusion::Sockets::Stun::StunClient::TestIPs::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Sockets::Stun::StunClient::TestIPs*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
