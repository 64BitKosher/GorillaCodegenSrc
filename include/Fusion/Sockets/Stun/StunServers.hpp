// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Fusion::Sockets::Stun
namespace Fusion::Sockets::Stun {
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: System::Threading::Tasks
namespace System::Threading::Tasks {
  // Forward declaring type: Task`1<TResult>
  template<typename TResult>
  class Task_1;
  // Forward declaring type: Task
  class Task;
}
// Completed forward declares
// Type namespace: Fusion.Sockets.Stun
namespace Fusion::Sockets::Stun {
  // Forward declaring type: StunServers
  class StunServers;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::Sockets::Stun::StunServers);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::Sockets::Stun::StunServers*, "Fusion.Sockets.Stun", "StunServers");
// Type namespace: Fusion.Sockets.Stun
namespace Fusion::Sockets::Stun {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.Sockets.Stun.StunServers
  // [TokenAttribute] Offset: FFFFFFFF
  class StunServers : public ::Il2CppObject {
    public:
    // Nested type: ::Fusion::Sockets::Stun::StunServers::StunServer
    class StunServer;
    // Nested type: ::Fusion::Sockets::Stun::StunServers::$BuildIP$d__6
    struct $BuildIP$d__6;
    // Nested type: ::Fusion::Sockets::Stun::StunServers::$SetupStunServers$d__7
    struct $SetupStunServers$d__7;
    // Get static field: static public System.String[] STUN_SERVER_LIST
    static ::ArrayW<::StringW> _get_STUN_SERVER_LIST();
    // Set static field: static public System.String[] STUN_SERVER_LIST
    static void _set_STUN_SERVER_LIST(::ArrayW<::StringW> value);
    // Get static field: static private Fusion.Sockets.Stun.StunServers/StunServer _customStunServer
    static ::Fusion::Sockets::Stun::StunServers::StunServer* _get__customStunServer();
    // Set static field: static private Fusion.Sockets.Stun.StunServers/StunServer _customStunServer
    static void _set__customStunServer(::Fusion::Sockets::Stun::StunServers::StunServer* value);
    // Get static field: static private Fusion.Sockets.Stun.StunServers/StunServer[] _stunServers
    static ::ArrayW<::Fusion::Sockets::Stun::StunServers::StunServer*> _get__stunServers();
    // Set static field: static private Fusion.Sockets.Stun.StunServers/StunServer[] _stunServers
    static void _set__stunServers(::ArrayW<::Fusion::Sockets::Stun::StunServers::StunServer*> value);
    // Get static field: static private System.Boolean _runningResolution
    static bool _get__runningResolution();
    // Set static field: static private System.Boolean _runningResolution
    static void _set__runningResolution(bool value);
    // static public System.Collections.Generic.List`1<Fusion.Sockets.Stun.StunServers/StunServer> GetStunServer(System.Boolean IPv6Support)
    // Offset: 0x2B998AC
    static ::System::Collections::Generic::List_1<::Fusion::Sockets::Stun::StunServers::StunServer*>* GetStunServer(bool IPv6Support);
    // static private System.Threading.Tasks.Task`1<Fusion.Sockets.Stun.StunServers/StunServer> BuildIP(System.String stunServerAddr)
    // Offset: 0x2B9B670
    static ::System::Threading::Tasks::Task_1<::Fusion::Sockets::Stun::StunServers::StunServer*>* BuildIP(::StringW stunServerAddr);
    // static public System.Threading.Tasks.Task SetupStunServers(System.String customStunServer)
    // Offset: 0x2B9B76C
    static ::System::Threading::Tasks::Task* SetupStunServers(::StringW customStunServer);
    // static private System.Void .cctor()
    // Offset: 0x2B9B854
    static void _cctor();
  }; // Fusion.Sockets.Stun.StunServers
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::Sockets::Stun::StunServers::GetStunServer
// Il2CppName: GetStunServer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::Fusion::Sockets::Stun::StunServers::StunServer*>* (*)(bool)>(&Fusion::Sockets::Stun::StunServers::GetStunServer)> {
  static const MethodInfo* get() {
    static auto* IPv6Support = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Sockets::Stun::StunServers*), "GetStunServer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{IPv6Support});
  }
};
// Writing MetadataGetter for method: Fusion::Sockets::Stun::StunServers::BuildIP
// Il2CppName: BuildIP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::Fusion::Sockets::Stun::StunServers::StunServer*>* (*)(::StringW)>(&Fusion::Sockets::Stun::StunServers::BuildIP)> {
  static const MethodInfo* get() {
    static auto* stunServerAddr = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Sockets::Stun::StunServers*), "BuildIP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stunServerAddr});
  }
};
// Writing MetadataGetter for method: Fusion::Sockets::Stun::StunServers::SetupStunServers
// Il2CppName: SetupStunServers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task* (*)(::StringW)>(&Fusion::Sockets::Stun::StunServers::SetupStunServers)> {
  static const MethodInfo* get() {
    static auto* customStunServer = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Sockets::Stun::StunServers*), "SetupStunServers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{customStunServer});
  }
};
// Writing MetadataGetter for method: Fusion::Sockets::Stun::StunServers::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Fusion::Sockets::Stun::StunServers::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Sockets::Stun::StunServers*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
