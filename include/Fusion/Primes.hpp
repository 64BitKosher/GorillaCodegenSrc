// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: Primes
  class Primes;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::Primes);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::Primes*, "Fusion", "Primes");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.Primes
  // [TokenAttribute] Offset: FFFFFFFF
  class Primes : public ::Il2CppObject {
    public:
    // Get static field: static private System.Int32[] _primeTable
    static ::ArrayW<int> _get__primeTable();
    // Set static field: static private System.Int32[] _primeTable
    static void _set__primeTable(::ArrayW<int> value);
    // static public System.Int32 GetNextPrime(System.Int32 value)
    // Offset: 0x2AD8C88
    static int GetNextPrime(int value);
    // static public System.UInt32 GetNextPrime(System.UInt32 value)
    // Offset: 0x2AD8E44
    static uint GetNextPrime(uint value);
    // static private System.Void .cctor()
    // Offset: 0x2AD9000
    static void _cctor();
  }; // Fusion.Primes
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::Primes::GetNextPrime
// Il2CppName: GetNextPrime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int)>(&Fusion::Primes::GetNextPrime)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Primes*), "GetNextPrime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::Primes::GetNextPrime
// Il2CppName: GetNextPrime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint)>(&Fusion::Primes::GetNextPrime)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Primes*), "GetNextPrime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::Primes::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Fusion::Primes::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Primes*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
