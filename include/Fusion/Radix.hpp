// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Fusion
namespace Fusion {
}
// Completed forward declares
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: Radix
  class Radix;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::Radix);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::Radix*, "Fusion", "Radix");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.Radix
  // [TokenAttribute] Offset: FFFFFFFF
  class Radix : public ::Il2CppObject {
    public:
    // Nested type: ::Fusion::Radix::SortTarget
    struct SortTarget;
    // static public System.Void Sort(Fusion.Radix/SortTarget* a, Fusion.Radix/SortTarget* t, System.Int32 aLength, System.Int32* p, System.Int32* c)
    // Offset: 0x2AD90A0
    static void Sort(::Fusion::Radix::SortTarget* a, ::Fusion::Radix::SortTarget* t, int aLength, int* p, int* c);
  }; // Fusion.Radix
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::Radix::Sort
// Il2CppName: Sort
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Fusion::Radix::SortTarget*, ::Fusion::Radix::SortTarget*, int, int*, int*)>(&Fusion::Radix::Sort)> {
  static const MethodInfo* get() {
    static auto* a = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("Fusion", "Radix/SortTarget"))->byval_arg;
    static auto* t = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("Fusion", "Radix/SortTarget"))->byval_arg;
    static auto* aLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* p = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* c = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Radix*), "Sort", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{a, t, aLength, p, c});
  }
};
