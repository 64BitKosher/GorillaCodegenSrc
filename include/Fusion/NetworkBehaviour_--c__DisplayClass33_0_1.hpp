// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Fusion.NetworkBehaviour
#include "Fusion/NetworkBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Fusion
namespace Fusion {
  // Forward declaring type: ChangedDelegate`1<T>
  template<typename T>
  class ChangedDelegate_1;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::Fusion::NetworkBehaviour::$$c__DisplayClass33_0_1, "Fusion", "NetworkBehaviour/<>c__DisplayClass33_0`1");
// Type namespace: Fusion
namespace Fusion {
  // WARNING Size may be invalid!
  // Autogenerated type: Fusion.NetworkBehaviour/<>c__DisplayClass33_0`1
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  template<typename T>
  class NetworkBehaviour::$$c__DisplayClass33_0_1 : public ::Il2CppObject {
    public:
    public:
    // public Fusion.ChangedDelegate`1<T> callback
    // Size: 0x8
    // Offset: 0x0
    ::Fusion::ChangedDelegate_1<T>* callback;
    // Field size check
    static_assert(sizeof(::Fusion::ChangedDelegate_1<T>*) == 0x8);
    // public Fusion.NetworkBehaviour <>4__this
    // Size: 0x8
    // Offset: 0x0
    ::Fusion::NetworkBehaviour* $$4__this;
    // Field size check
    static_assert(sizeof(::Fusion::NetworkBehaviour*) == 0x8);
    public:
    // Autogenerated instance field getter
    // Get instance field: public Fusion.ChangedDelegate`1<T> callback
    [[deprecated("Use field access instead!")]] ::Fusion::ChangedDelegate_1<T>*& dyn_callback() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkBehaviour::$$c__DisplayClass33_0_1::dyn_callback");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
      return *reinterpret_cast<::Fusion::ChangedDelegate_1<T>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: public Fusion.NetworkBehaviour <>4__this
    [[deprecated("Use field access instead!")]] ::Fusion::NetworkBehaviour*& dyn_$$4__this() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkBehaviour::$$c__DisplayClass33_0_1::dyn_$$4__this");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
      return *reinterpret_cast<::Fusion::NetworkBehaviour**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // public System.Void .ctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NetworkBehaviour::$$c__DisplayClass33_0_1<T>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkBehaviour::$$c__DisplayClass33_0_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NetworkBehaviour::$$c__DisplayClass33_0_1<T>*, creationType>()));
    }
    // System.Boolean <OnChangeAdd>b__0(Fusion.NetworkBehaviour behaviour, System.Int32* old)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool $OnChangeAdd$b__0(::Fusion::NetworkBehaviour* behaviour, int* old) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkBehaviour::$$c__DisplayClass33_0_1::<OnChangeAdd>b__0");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnChangeAdd>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(behaviour), ::il2cpp_utils::ExtractType(old)})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, behaviour, old);
    }
  }; // Fusion.NetworkBehaviour/<>c__DisplayClass33_0`1
  // Could not write size check! Type: Fusion.NetworkBehaviour/<>c__DisplayClass33_0`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
