// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Fusion.SimulationBehaviour
#include "Fusion/SimulationBehaviour.hpp"
// Including type: Fusion.ISpawned
#include "Fusion/ISpawned.hpp"
// Including type: Fusion.IDespawned
#include "Fusion/IDespawned.hpp"
// Including type: Fusion.RpcInvokeData
#include "Fusion/RpcInvokeData.hpp"
// Including type: Fusion.NetworkBehaviourCallbackReference
#include "Fusion/NetworkBehaviourCallbackReference.hpp"
// Including type: Fusion.OnChangedTargets
#include "Fusion/OnChangedTargets.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: Fusion.NetworkBehaviourUtils/DictionaryInitializer`2
#include "Fusion/NetworkBehaviourUtils_DictionaryInitializer_2.hpp"
// Including type: Fusion.Accuracy
#include "Fusion/Accuracy.hpp"
// Including type: System.ValueTuple`3
#include "System/ValueTuple_3.hpp"
// Including type: System.MulticastDelegate
#include "System/MulticastDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Fusion
namespace Fusion {
  // Forward declaring type: NetworkBehaviourCallbacks
  class NetworkBehaviourCallbacks;
  // Skipping declaration: InterpolationDataSources because it is already included!
  // Forward declaring type: NetworkBehaviourId
  struct NetworkBehaviourId;
  // Forward declaring type: NetworkRunner
  class NetworkRunner;
  // Forward declaring type: InterpolationData
  struct InterpolationData;
  // Forward declaring type: ChangedDelegate`1<T>
  template<typename T>
  class ChangedDelegate_1;
  // Forward declaring type: INetworkInput
  class INetworkInput;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
  // Forward declaring type: ValueTuple`2<T1, T2>
  template<typename T1, typename T2>
  struct ValueTuple_2;
  // Forward declaring type: IAsyncResult
  class IAsyncResult;
  // Forward declaring type: AsyncCallback
  class AsyncCallback;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Vector2
  struct Vector2;
  // Skipping declaration: Vector3 because it is already included!
  // Skipping declaration: Quaternion because it is already included!
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Skipping declaration: Dictionary`2 because it is already included!
}
// Completed forward declares
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: NetworkBehaviour
  class NetworkBehaviour;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::NetworkBehaviour);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::NetworkBehaviour*, "Fusion", "NetworkBehaviour");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x78
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.NetworkBehaviour
  // [TokenAttribute] Offset: FFFFFFFF
  // [ScriptHelpAttribute] Offset: FFFFFFFF
  // [HelpURLAttribute] Offset: FFFFFFFF
  class NetworkBehaviour : public ::Fusion::SimulationBehaviour/*, public ::Fusion::ISpawned, public ::Fusion::IDespawned*/ {
    public:
    // Nested type: ::Fusion::NetworkBehaviour::InterestGroupsCallback
    class InterestGroupsCallback;
    // Nested type: ::Fusion::NetworkBehaviour::InterpolationDataSources
    struct InterpolationDataSources;
    // Nested type: ::Fusion::NetworkBehaviour::RawInterpolator
    struct RawInterpolator;
    // Nested type: ::Fusion::NetworkBehaviour::Interpolator_1<T>
    template<typename T>
    struct Interpolator_1;
    // Nested type: ::Fusion::NetworkBehaviour::$$c__DisplayClass33_0_1<T>
    template<typename T>
    class $$c__DisplayClass33_0_1;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: Fusion.NetworkBehaviour/InterpolationDataSources
    // [TokenAttribute] Offset: FFFFFFFF
    struct InterpolationDataSources/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: InterpolationDataSources
      constexpr InterpolationDataSources(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public Fusion.NetworkBehaviour/InterpolationDataSources Auto
      static constexpr const int Auto = 0;
      // Get static field: static public Fusion.NetworkBehaviour/InterpolationDataSources Auto
      static ::Fusion::NetworkBehaviour::InterpolationDataSources _get_Auto();
      // Set static field: static public Fusion.NetworkBehaviour/InterpolationDataSources Auto
      static void _set_Auto(::Fusion::NetworkBehaviour::InterpolationDataSources value);
      // static field const value: static public Fusion.NetworkBehaviour/InterpolationDataSources Snapshots
      static constexpr const int Snapshots = 1;
      // Get static field: static public Fusion.NetworkBehaviour/InterpolationDataSources Snapshots
      static ::Fusion::NetworkBehaviour::InterpolationDataSources _get_Snapshots();
      // Set static field: static public Fusion.NetworkBehaviour/InterpolationDataSources Snapshots
      static void _set_Snapshots(::Fusion::NetworkBehaviour::InterpolationDataSources value);
      // static field const value: static public Fusion.NetworkBehaviour/InterpolationDataSources Predicted
      static constexpr const int Predicted = 2;
      // Get static field: static public Fusion.NetworkBehaviour/InterpolationDataSources Predicted
      static ::Fusion::NetworkBehaviour::InterpolationDataSources _get_Predicted();
      // Set static field: static public Fusion.NetworkBehaviour/InterpolationDataSources Predicted
      static void _set_Predicted(::Fusion::NetworkBehaviour::InterpolationDataSources value);
      // static field const value: static public Fusion.NetworkBehaviour/InterpolationDataSources NoInterpolation
      static constexpr const int NoInterpolation = 3;
      // Get static field: static public Fusion.NetworkBehaviour/InterpolationDataSources NoInterpolation
      static ::Fusion::NetworkBehaviour::InterpolationDataSources _get_NoInterpolation();
      // Set static field: static public Fusion.NetworkBehaviour/InterpolationDataSources NoInterpolation
      static void _set_NoInterpolation(::Fusion::NetworkBehaviour::InterpolationDataSources value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // Fusion.NetworkBehaviour/InterpolationDataSources
    #pragma pack(pop)
    static check_size<sizeof(NetworkBehaviour::InterpolationDataSources), 0 + sizeof(int)> __Fusion_NetworkBehaviour_InterpolationDataSourcesSizeCheck;
    static_assert(sizeof(NetworkBehaviour::InterpolationDataSources) == 0x4);
    // WARNING Size may be invalid!
    // WARNING Layout: Sequential may not be correctly taken into account!
    // Autogenerated type: Fusion.NetworkBehaviour/Interpolator`1
    // [TokenAttribute] Offset: FFFFFFFF
    template<typename T>
    struct Interpolator_1/*, public ::System::ValueType*/ {
      public:
      // Nested type: ::Fusion::NetworkBehaviour::Interpolator_1::InterpDelegate<T>
      class InterpDelegate;
      // Nested type: ::Fusion::NetworkBehaviour::Interpolator_1::ReadDelegate<T>
      class ReadDelegate;
      // WARNING Size may be invalid!
      // Autogenerated type: Fusion.NetworkBehaviour/Interpolator`1/InterpDelegate
      // [TokenAttribute] Offset: FFFFFFFF
      class InterpDelegate : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::System::MulticastDelegate {
        public:
        using declaring_type = NetworkBehaviour::Interpolator_1<T>;
        static constexpr std::string_view NESTED_NAME = "InterpDelegate";
        static constexpr bool IS_VALUE_TYPE = false;
        // public System.Void .ctor(System.Object object, System.IntPtr method)
        // Offset: 0xFFFFFFFFFFFFFFFF
        template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
        static typename NetworkBehaviour::Interpolator_1<T>::InterpDelegate* New_ctor(::Il2CppObject* object, ::System::IntPtr method) {
          static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkBehaviour::Interpolator_1::InterpDelegate::.ctor");
          return THROW_UNLESS((::il2cpp_utils::New<typename NetworkBehaviour::Interpolator_1<T>::InterpDelegate*, creationType>(object, method)));
        }
        // public T Invoke(System.Int32* from, System.Int32* to, System.Single t, System.Single a)
        // Offset: 0xFFFFFFFFFFFFFFFF
        T Invoke(int* from, int* to, float t, float a) {
          static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkBehaviour::Interpolator_1::InterpDelegate::Invoke");
          auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::Fusion::NetworkBehaviour::Interpolator_1<T>::InterpDelegate*), -1));
          return ::il2cpp_utils::RunMethodRethrow<T, false>(this, ___internal__method, from, to, t, a);
        }
        // public System.IAsyncResult BeginInvoke(System.Int32* from, System.Int32* to, System.Single t, System.Single a, System.AsyncCallback callback, System.Object object)
        // Offset: 0xFFFFFFFFFFFFFFFF
        ::System::IAsyncResult* BeginInvoke(int* from, int* to, float t, float a, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
          static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkBehaviour::Interpolator_1::InterpDelegate::BeginInvoke");
          auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::Fusion::NetworkBehaviour::Interpolator_1<T>::InterpDelegate*), -1));
          return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, from, to, t, a, callback, object);
        }
        // public T EndInvoke(System.IAsyncResult result)
        // Offset: 0xFFFFFFFFFFFFFFFF
        T EndInvoke(::System::IAsyncResult* result) {
          static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkBehaviour::Interpolator_1::InterpDelegate::EndInvoke");
          auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::Fusion::NetworkBehaviour::Interpolator_1<T>::InterpDelegate*), -1));
          return ::il2cpp_utils::RunMethodRethrow<T, false>(this, ___internal__method, result);
        }
      }; // Fusion.NetworkBehaviour/Interpolator`1/InterpDelegate
      // Could not write size check! Type: Fusion.NetworkBehaviour/Interpolator`1/InterpDelegate is generic, or has no fields that are valid for size checks!
      // WARNING Size may be invalid!
      // Autogenerated type: Fusion.NetworkBehaviour/Interpolator`1/ReadDelegate
      // [TokenAttribute] Offset: FFFFFFFF
      class ReadDelegate : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::System::MulticastDelegate {
        public:
        using declaring_type = NetworkBehaviour::Interpolator_1<T>;
        static constexpr std::string_view NESTED_NAME = "ReadDelegate";
        static constexpr bool IS_VALUE_TYPE = false;
        // public System.Void .ctor(System.Object object, System.IntPtr method)
        // Offset: 0xFFFFFFFFFFFFFFFF
        template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
        static typename NetworkBehaviour::Interpolator_1<T>::ReadDelegate* New_ctor(::Il2CppObject* object, ::System::IntPtr method) {
          static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkBehaviour::Interpolator_1::ReadDelegate::.ctor");
          return THROW_UNLESS((::il2cpp_utils::New<typename NetworkBehaviour::Interpolator_1<T>::ReadDelegate*, creationType>(object, method)));
        }
        // public T Invoke(System.Int32* ptr, System.Single a)
        // Offset: 0xFFFFFFFFFFFFFFFF
        T Invoke(int* ptr, float a) {
          static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkBehaviour::Interpolator_1::ReadDelegate::Invoke");
          auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::Fusion::NetworkBehaviour::Interpolator_1<T>::ReadDelegate*), -1));
          return ::il2cpp_utils::RunMethodRethrow<T, false>(this, ___internal__method, ptr, a);
        }
        // public System.IAsyncResult BeginInvoke(System.Int32* ptr, System.Single a, System.AsyncCallback callback, System.Object object)
        // Offset: 0xFFFFFFFFFFFFFFFF
        ::System::IAsyncResult* BeginInvoke(int* ptr, float a, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
          static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkBehaviour::Interpolator_1::ReadDelegate::BeginInvoke");
          auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::Fusion::NetworkBehaviour::Interpolator_1<T>::ReadDelegate*), -1));
          return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ptr, a, callback, object);
        }
        // public T EndInvoke(System.IAsyncResult result)
        // Offset: 0xFFFFFFFFFFFFFFFF
        T EndInvoke(::System::IAsyncResult* result) {
          static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkBehaviour::Interpolator_1::ReadDelegate::EndInvoke");
          auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::Fusion::NetworkBehaviour::Interpolator_1<T>::ReadDelegate*), -1));
          return ::il2cpp_utils::RunMethodRethrow<T, false>(this, ___internal__method, result);
        }
      }; // Fusion.NetworkBehaviour/Interpolator`1/ReadDelegate
      // Could not write size check! Type: Fusion.NetworkBehaviour/Interpolator`1/ReadDelegate is generic, or has no fields that are valid for size checks!
      public:
      // private System.Single _accuracy
      // Size: 0x4
      // Offset: 0x0
      float accuracy;
      // Field size check
      static_assert(sizeof(float) == 0x4);
      // private System.Int32 _offset
      // Size: 0x4
      // Offset: 0x0
      int offset;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // private Fusion.NetworkBehaviour/Interpolator`1/InterpDelegate<T> _interpDelegate
      // Size: 0x8
      // Offset: 0x0
      typename ::Fusion::NetworkBehaviour::Interpolator_1<T>::InterpDelegate* interpDelegate;
      // Field size check
      static_assert(sizeof(typename ::Fusion::NetworkBehaviour::Interpolator_1<T>::InterpDelegate*) == 0x8);
      // private Fusion.NetworkBehaviour/Interpolator`1/ReadDelegate<T> _readDelegate
      // Size: 0x8
      // Offset: 0x0
      typename ::Fusion::NetworkBehaviour::Interpolator_1<T>::ReadDelegate* readDelegate;
      // Field size check
      static_assert(sizeof(typename ::Fusion::NetworkBehaviour::Interpolator_1<T>::ReadDelegate*) == 0x8);
      // private Fusion.NetworkBehaviour _behaviour
      // Size: 0x8
      // Offset: 0x0
      ::Fusion::NetworkBehaviour* behaviour;
      // Field size check
      static_assert(sizeof(::Fusion::NetworkBehaviour*) == 0x8);
      public:
      // Creating value type constructor for type: Interpolator_1
      constexpr Interpolator_1(float accuracy_ = {}, int offset_ = {}, typename ::Fusion::NetworkBehaviour::Interpolator_1<T>::InterpDelegate* interpDelegate_ = {}, typename ::Fusion::NetworkBehaviour::Interpolator_1<T>::ReadDelegate* readDelegate_ = {}, ::Fusion::NetworkBehaviour* behaviour_ = {}) noexcept : accuracy{accuracy_}, offset{offset_}, interpDelegate{interpDelegate_}, readDelegate{readDelegate_}, behaviour{behaviour_} {}
      // Creating interface conversion operator: operator ::System::ValueType
      operator ::System::ValueType() noexcept {
        return *reinterpret_cast<::System::ValueType*>(this);
      }
      // Autogenerated instance field getter
      // Get instance field: private System.Single _accuracy
      [[deprecated("Use field access instead!")]] float& dyn__accuracy() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkBehaviour::Interpolator_1::dyn__accuracy");
        auto ___internal__instance = *this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_accuracy"))->offset;
        return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: private System.Int32 _offset
      [[deprecated("Use field access instead!")]] int& dyn__offset() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkBehaviour::Interpolator_1::dyn__offset");
        auto ___internal__instance = *this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offset"))->offset;
        return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: private Fusion.NetworkBehaviour/Interpolator`1/InterpDelegate<T> _interpDelegate
      [[deprecated("Use field access instead!")]] typename ::Fusion::NetworkBehaviour::Interpolator_1<T>::InterpDelegate*& dyn__interpDelegate() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkBehaviour::Interpolator_1::dyn__interpDelegate");
        auto ___internal__instance = *this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_interpDelegate"))->offset;
        return *reinterpret_cast<typename ::Fusion::NetworkBehaviour::Interpolator_1<T>::InterpDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: private Fusion.NetworkBehaviour/Interpolator`1/ReadDelegate<T> _readDelegate
      [[deprecated("Use field access instead!")]] typename ::Fusion::NetworkBehaviour::Interpolator_1<T>::ReadDelegate*& dyn__readDelegate() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkBehaviour::Interpolator_1::dyn__readDelegate");
        auto ___internal__instance = *this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_readDelegate"))->offset;
        return *reinterpret_cast<typename ::Fusion::NetworkBehaviour::Interpolator_1<T>::ReadDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: private Fusion.NetworkBehaviour _behaviour
      [[deprecated("Use field access instead!")]] ::Fusion::NetworkBehaviour*& dyn__behaviour() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkBehaviour::Interpolator_1::dyn__behaviour");
        auto ___internal__instance = *this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_behaviour"))->offset;
        return *reinterpret_cast<::Fusion::NetworkBehaviour**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // public System.Int32 get_Offset()
      // Offset: 0xFFFFFFFFFFFFFFFF
      int get_Offset() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkBehaviour::Interpolator_1::get_Offset");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Offset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
      }
      // public Fusion.NetworkBehaviour get_Behaviour()
      // Offset: 0xFFFFFFFFFFFFFFFF
      ::Fusion::NetworkBehaviour* get_Behaviour() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkBehaviour::Interpolator_1::get_Behaviour");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Behaviour", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        return ::il2cpp_utils::RunMethodRethrow<::Fusion::NetworkBehaviour*, false>(this, ___internal__method);
      }
      // public Fusion.NetworkBehaviour/Interpolator`1/InterpDelegate<T> get_InterpolationDelegate()
      // Offset: 0xFFFFFFFFFFFFFFFF
      typename ::Fusion::NetworkBehaviour::Interpolator_1<T>::InterpDelegate* get_InterpolationDelegate() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkBehaviour::Interpolator_1::get_InterpolationDelegate");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_InterpolationDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        return ::il2cpp_utils::RunMethodRethrow<typename ::Fusion::NetworkBehaviour::Interpolator_1<T>::InterpDelegate*, false>(this, ___internal__method);
      }
      // public System.Void set_InterpolationDelegate(Fusion.NetworkBehaviour/Interpolator`1/InterpDelegate<T> value)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void set_InterpolationDelegate(typename ::Fusion::NetworkBehaviour::Interpolator_1<T>::InterpDelegate* value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkBehaviour::Interpolator_1::set_InterpolationDelegate");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_InterpolationDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
      }
      // public Fusion.NetworkBehaviour/Interpolator`1/ReadDelegate<T> get_ReaderDelegate()
      // Offset: 0xFFFFFFFFFFFFFFFF
      typename ::Fusion::NetworkBehaviour::Interpolator_1<T>::ReadDelegate* get_ReaderDelegate() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkBehaviour::Interpolator_1::get_ReaderDelegate");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_ReaderDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        return ::il2cpp_utils::RunMethodRethrow<typename ::Fusion::NetworkBehaviour::Interpolator_1<T>::ReadDelegate*, false>(this, ___internal__method);
      }
      // public T get_Value()
      // Offset: 0xFFFFFFFFFFFFFFFF
      T get_Value() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkBehaviour::Interpolator_1::get_Value");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        return ::il2cpp_utils::RunMethodRethrow<T, false>(this, ___internal__method);
      }
      // public System.Nullable`1<T> get_TryValue()
      // Offset: 0xFFFFFFFFFFFFFFFF
      ::System::Nullable_1<T> get_TryValue() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkBehaviour::Interpolator_1::get_TryValue");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_TryValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<T>, false>(this, ___internal__method);
      }
      // public System.Void .ctor(Fusion.NetworkBehaviour behaviour, Fusion.NetworkBehaviour/Interpolator`1/InterpDelegate<T> interpDelegate, Fusion.NetworkBehaviour/Interpolator`1/ReadDelegate<T> readDelegate, System.Int32 offset, Fusion.Accuracy accuracy)
      // Offset: 0xFFFFFFFFFFFFFFFF
      Interpolator_1(::Fusion::NetworkBehaviour* behaviour, typename ::Fusion::NetworkBehaviour::Interpolator_1<T>::InterpDelegate* interpDelegate, typename ::Fusion::NetworkBehaviour::Interpolator_1<T>::ReadDelegate* readDelegate, int offset, ::Fusion::Accuracy accuracy) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkBehaviour::Interpolator_1::.ctor");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(behaviour), ::il2cpp_utils::ExtractType(interpDelegate), ::il2cpp_utils::ExtractType(readDelegate), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(accuracy)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, behaviour, interpDelegate, readDelegate, offset, accuracy);
      }
      // public System.Boolean TryGetValues(out T from, out T to, out System.Single alpha, System.Nullable`1<System.Boolean> force)
      // Offset: 0xFFFFFFFFFFFFFFFF
      bool TryGetValues(ByRef<T> from, ByRef<T> to, ByRef<float> alpha, ::System::Nullable_1<bool> force) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkBehaviour::Interpolator_1::TryGetValues");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<T&>(), ::il2cpp_utils::ExtractIndependentType<T&>(), ::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractType(force)})));
        return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(from), byref(to), byref(alpha), force);
      }
      // public System.Nullable`1<System.ValueTuple`3<T,T,System.Single>> GetValues(System.Nullable`1<System.Boolean> force)
      // Offset: 0xFFFFFFFFFFFFFFFF
      ::System::Nullable_1<::System::ValueTuple_3<T, T, float>> GetValues(::System::Nullable_1<bool> force) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkBehaviour::Interpolator_1::GetValues");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force)})));
        return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::ValueTuple_3<T, T, float>>, false>(this, ___internal__method, force);
      }
    }; // Fusion.NetworkBehaviour/Interpolator`1
    // Could not write size check! Type: Fusion.NetworkBehaviour/Interpolator`1 is generic, or has no fields that are valid for size checks!
    public:
    // public System.Int32* Ptr
    // Size: 0x8
    // Offset: 0x48
    int* Ptr;
    // Field size check
    static_assert(sizeof(int*) == 0x8);
    // public System.Int32 ObjectIndex
    // Size: 0x4
    // Offset: 0x50
    int ObjectIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Boolean InvokeRpc
    // Size: 0x1
    // Offset: 0x54
    bool InvokeRpc;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: InvokeRpc and: RpcCache
    char __padding2[0x3] = {};
    // Fusion.RpcInvokeData[] RpcCache
    // Size: 0x8
    // Offset: 0x58
    ::ArrayW<::Fusion::RpcInvokeData> RpcCache;
    // Field size check
    static_assert(sizeof(::ArrayW<::Fusion::RpcInvokeData>) == 0x8);
    // System.Int32 WordOffset
    // Size: 0x4
    // Offset: 0x60
    int WordOffset;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // System.Int32 WordCount
    // Size: 0x4
    // Offset: 0x64
    int WordCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Fusion.NetworkBehaviour/InterpolationDataSources _interpolationDataSource
    // Size: 0x4
    // Offset: 0x68
    ::Fusion::NetworkBehaviour::InterpolationDataSources interpolationDataSource;
    // Field size check
    static_assert(sizeof(::Fusion::NetworkBehaviour::InterpolationDataSources) == 0x4);
    // Padding between fields: interpolationDataSource and: DynamicCallbacks
    char __padding6[0x4] = {};
    // Fusion.NetworkBehaviourCallbacks DynamicCallbacks
    // Size: 0x8
    // Offset: 0x70
    ::Fusion::NetworkBehaviourCallbacks* DynamicCallbacks;
    // Field size check
    static_assert(sizeof(::Fusion::NetworkBehaviourCallbacks*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::Fusion::ISpawned
    operator ::Fusion::ISpawned() noexcept {
      return *reinterpret_cast<::Fusion::ISpawned*>(this);
    }
    // Creating interface conversion operator: operator ::Fusion::IDespawned
    operator ::Fusion::IDespawned() noexcept {
      return *reinterpret_cast<::Fusion::IDespawned*>(this);
    }
    // Get instance field reference: public System.Int32* Ptr
    [[deprecated("Use field access instead!")]] int*& dyn_Ptr();
    // Get instance field reference: public System.Int32 ObjectIndex
    [[deprecated("Use field access instead!")]] int& dyn_ObjectIndex();
    // Get instance field reference: public System.Boolean InvokeRpc
    [[deprecated("Use field access instead!")]] bool& dyn_InvokeRpc();
    // Get instance field reference: Fusion.RpcInvokeData[] RpcCache
    [[deprecated("Use field access instead!")]] ::ArrayW<::Fusion::RpcInvokeData>& dyn_RpcCache();
    // Get instance field reference: System.Int32 WordOffset
    [[deprecated("Use field access instead!")]] int& dyn_WordOffset();
    // Get instance field reference: System.Int32 WordCount
    [[deprecated("Use field access instead!")]] int& dyn_WordCount();
    // Get instance field reference: Fusion.NetworkBehaviour/InterpolationDataSources _interpolationDataSource
    [[deprecated("Use field access instead!")]] ::Fusion::NetworkBehaviour::InterpolationDataSources& dyn__interpolationDataSource();
    // Get instance field reference: Fusion.NetworkBehaviourCallbacks DynamicCallbacks
    [[deprecated("Use field access instead!")]] ::Fusion::NetworkBehaviourCallbacks*& dyn_DynamicCallbacks();
    // public System.ValueTuple`2<System.Int32,System.Int32> get_WordInfo()
    // Offset: 0x2B0B718
    ::System::ValueTuple_2<int, int> get_WordInfo();
    // public Fusion.NetworkBehaviour/InterpolationDataSources get_InterpolationDataSource()
    // Offset: 0x2B0B778
    ::Fusion::NetworkBehaviour::InterpolationDataSources get_InterpolationDataSource();
    // public System.Void set_InterpolationDataSource(Fusion.NetworkBehaviour/InterpolationDataSources value)
    // Offset: 0x2B0B780
    void set_InterpolationDataSource(::Fusion::NetworkBehaviour::InterpolationDataSources value);
    // public Fusion.NetworkBehaviourId get_Id()
    // Offset: 0x2B0B788
    ::Fusion::NetworkBehaviourId get_Id();
    // public System.Int32 GetLocalAuthorityMask()
    // Offset: 0x2B0B80C
    int GetLocalAuthorityMask();
    // public System.Nullable`1<System.Int32> get_DynamicWordCount()
    // Offset: 0x2B0B8B4
    ::System::Nullable_1<int> get_DynamicWordCount();
    // public System.Void CopyStateFrom(Fusion.NetworkBehaviour source)
    // Offset: 0x2B0B8BC
    void CopyStateFrom(::Fusion::NetworkBehaviour* source);
    // public System.Void CopyBackingFieldsToState(System.Boolean firstTime)
    // Offset: 0x2B0B980
    void CopyBackingFieldsToState(bool firstTime);
    // public System.Void CopyStateToBackingFields()
    // Offset: 0x2B0B984
    void CopyStateToBackingFields();
    // public System.Boolean get_InvokeOnChangedForInitialNonZeroValues()
    // Offset: 0x2B0B988
    bool get_InvokeOnChangedForInitialNonZeroValues();
    // public System.Void Spawned()
    // Offset: 0x2B0B990
    void Spawned();
    // public System.Void Despawned(Fusion.NetworkRunner runner, System.Boolean hasState)
    // Offset: 0x2B0B994
    void Despawned(::Fusion::NetworkRunner* runner, bool hasState);
    // public System.Boolean GetInterpolationData(out Fusion.InterpolationData data, System.Nullable`1<System.Boolean> predicted)
    // Offset: 0x2B0B998
    bool GetInterpolationData(ByRef<::Fusion::InterpolationData> data, ::System::Nullable_1<bool> predicted);
    // public System.Boolean GetInterpolationData(out Fusion.InterpolationData data, out System.Boolean predicted)
    // Offset: 0x2B0BA3C
    bool GetInterpolationData(ByRef<::Fusion::InterpolationData> data, ByRef<bool> predicted);
    // public System.Boolean IsInterpolationDataPredicted()
    // Offset: 0x2B0BAA0
    bool IsInterpolationDataPredicted();
    // public System.Void OnChangeClearAll()
    // Offset: 0x2B0BB18
    void OnChangeClearAll();
    // public System.Boolean OnChangeRemove(Fusion.NetworkBehaviourCallbackReference reference)
    // Offset: 0x2B0BB68
    bool OnChangeRemove(::Fusion::NetworkBehaviourCallbackReference reference);
    // public Fusion.NetworkBehaviourCallbackReference OnChangeAdd(System.Int32 wordOffset, System.Int32 wordCount, Fusion.ChangedDelegate`1<T> callback, Fusion.OnChangedTargets targets)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    ::Fusion::NetworkBehaviourCallbackReference OnChangeAdd(int wordOffset, int wordCount, ::Fusion::ChangedDelegate_1<T>* callback, ::Fusion::OnChangedTargets targets) {
      static_assert(std::is_convertible_v<T, ::Fusion::NetworkBehaviour*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkBehaviour::OnChangeAdd");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnChangeAdd", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(wordOffset), ::il2cpp_utils::ExtractType(wordCount), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(targets)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::Fusion::NetworkBehaviourCallbackReference, false>(this, ___generic__method, wordOffset, wordCount, callback, targets);
    }
    // public Fusion.NetworkBehaviourCallbackReference OnChangeAdd(System.String propertyName, Fusion.ChangedDelegate`1<T> callback, Fusion.OnChangedTargets targetses)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    ::Fusion::NetworkBehaviourCallbackReference OnChangeAdd(::StringW propertyName, ::Fusion::ChangedDelegate_1<T>* callback, ::Fusion::OnChangedTargets targetses) {
      static_assert(std::is_convertible_v<T, ::Fusion::NetworkBehaviour*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkBehaviour::OnChangeAdd");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnChangeAdd", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyName), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(targetses)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::Fusion::NetworkBehaviourCallbackReference, false>(this, ___generic__method, propertyName, callback, targetses);
    }
    // public System.Nullable`1<T> GetInput()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    ::System::Nullable_1<T> GetInput() {
      static_assert(std::is_convertible_v<T, ::System::ValueType*> && std::is_convertible_v<std::remove_pointer_t<T>, ::Fusion::INetworkInput>);
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkBehaviour::GetInput");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInput", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<T>, false>(this, ___generic__method);
    }
    // public System.Boolean GetInput(out T input)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    bool GetInput(ByRef<T> input) {
      static_assert(std::is_convertible_v<T, ::System::ValueType*> && std::is_convertible_v<std::remove_pointer_t<T>, ::Fusion::INetworkInput>);
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkBehaviour::GetInput");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInput", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<T&>()})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___generic__method, byref(input));
    }
    // static private System.Boolean InterpolateBoolean(System.Int32* from, System.Int32* to, System.Single t, System.Single a)
    // Offset: 0x2B0BC5C
    static bool InterpolateBoolean(int* from, int* to, float t, float a);
    // static private System.Int32 InterpolateInt32(System.Int32* from, System.Int32* to, System.Single t, System.Single a)
    // Offset: 0x2B0BC6C
    static int InterpolateInt32(int* from, int* to, float t, float a);
    // static private System.Single InterpolateSingle(System.Int32* from, System.Int32* to, System.Single t, System.Single a)
    // Offset: 0x2B0BCB8
    static float InterpolateSingle(int* from, int* to, float t, float a);
    // static private UnityEngine.Vector2 InterpolateVector2(System.Int32* from, System.Int32* to, System.Single t, System.Single a)
    // Offset: 0x2B0BD08
    static ::UnityEngine::Vector2 InterpolateVector2(int* from, int* to, float t, float a);
    // static private UnityEngine.Vector3 InterpolateVector3(System.Int32* from, System.Int32* to, System.Single t, System.Single a)
    // Offset: 0x2B0BD74
    static ::UnityEngine::Vector3 InterpolateVector3(int* from, int* to, float t, float a);
    // static private UnityEngine.Quaternion InterpolateQuaternion(System.Int32* from, System.Int32* to, System.Single t, System.Single a)
    // Offset: 0x2B0BE0C
    static ::UnityEngine::Quaternion InterpolateQuaternion(int* from, int* to, float t, float a);
    // static private Fusion.NetworkBehaviour/Interpolator`1/InterpDelegate<T> GetInterpolatorDelegate()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static typename ::Fusion::NetworkBehaviour::Interpolator_1<T>::InterpDelegate* GetInterpolatorDelegate() {
      static_assert(std::is_convertible_v<T, ::System::ValueType*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkBehaviour::GetInterpolatorDelegate");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion", "NetworkBehaviour", "GetInterpolatorDelegate", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<typename ::Fusion::NetworkBehaviour::Interpolator_1<T>::InterpDelegate*, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method);
    }
    // static private System.Boolean IsValidInterpolatorType(System.Type t)
    // Offset: 0x2B0BEA0
    static bool IsValidInterpolatorType(::System::Type* t);
    // public Fusion.NetworkBehaviour/RawInterpolator GetInterpolator(System.String propertyName)
    // Offset: 0x2B0C0A4
    ::Fusion::NetworkBehaviour::RawInterpolator GetInterpolator(::StringW propertyName);
    // public Fusion.NetworkBehaviour/Interpolator`1<T> GetInterpolator(System.String propertyName)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    ::Fusion::NetworkBehaviour::Interpolator_1<T> GetInterpolator(::StringW propertyName) {
      static_assert(std::is_convertible_v<T, ::System::ValueType*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkBehaviour::GetInterpolator");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInterpolator", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyName)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::Fusion::NetworkBehaviour::Interpolator_1<T>, false>(this, ___generic__method, propertyName);
    }
    // static public System.Int32 NetworkSerialize(Fusion.NetworkRunner runner, Fusion.NetworkBehaviour obj, System.Byte* data)
    // Offset: 0x2B0C220
    static int NetworkSerialize(::Fusion::NetworkRunner* runner, ::Fusion::NetworkBehaviour* obj, uint8_t* data);
    // static public System.Int32 NetworkDeserialize(Fusion.NetworkRunner runner, System.Byte* data, ref Fusion.NetworkBehaviour result)
    // Offset: 0x2B0C2C0
    static int NetworkDeserialize(::Fusion::NetworkRunner* runner, uint8_t* data, ByRef<::Fusion::NetworkBehaviour*> result);
    // static public Fusion.NetworkBehaviourId NetworkWrap(Fusion.NetworkRunner runner, Fusion.NetworkBehaviour obj)
    // Offset: 0x2B0C45C
    static ::Fusion::NetworkBehaviourId NetworkWrap(::Fusion::NetworkRunner* runner, ::Fusion::NetworkBehaviour* obj);
    // static public Fusion.NetworkBehaviour NetworkUnwrap(Fusion.NetworkRunner runner, Fusion.NetworkBehaviourId wrapper)
    // Offset: 0x2B0C488
    static ::Fusion::NetworkBehaviour* NetworkUnwrap(::Fusion::NetworkRunner* runner, ::Fusion::NetworkBehaviourId wrapper);
    // static public T MakeRef()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static T MakeRef() {
      static_assert(std::is_convertible_v<T, ::System::ValueType*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkBehaviour::MakeRef");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion", "NetworkBehaviour", "MakeRef", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method);
    }
    // static public T MakeRef(T defaultValue)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static T MakeRef(T defaultValue) {
      static_assert(std::is_convertible_v<T, ::System::ValueType*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkBehaviour::MakeRef");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion", "NetworkBehaviour", "MakeRef", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(defaultValue)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, defaultValue);
    }
    // static public T* MakePtr()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static T* MakePtr() {
      static_assert(std::is_convertible_v<T, ::System::ValueType*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkBehaviour::MakePtr");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion", "NetworkBehaviour", "MakePtr", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<T*, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method);
    }
    // static public T* MakePtr(T defaultValue)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static T* MakePtr(T defaultValue) {
      static_assert(std::is_convertible_v<T, ::System::ValueType*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkBehaviour::MakePtr");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion", "NetworkBehaviour", "MakePtr", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(defaultValue)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<T*, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, defaultValue);
    }
    // static public Fusion.NetworkBehaviourUtils/ArrayInitializer`1<T> MakeInitializer(T[] array)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static ::Fusion::NetworkBehaviourUtils::ArrayInitializer_1<T> MakeInitializer(::ArrayW<T> array) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkBehaviour::MakeInitializer");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion", "NetworkBehaviour", "MakeInitializer", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::Fusion::NetworkBehaviourUtils::ArrayInitializer_1<T>, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, array);
    }
    // static public Fusion.NetworkBehaviourUtils/DictionaryInitializer`2<K,V> MakeInitializer(System.Collections.Generic.Dictionary`2<K,V> dictionary)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class K, class V>
    static ::Fusion::NetworkBehaviourUtils::DictionaryInitializer_2<K, V> MakeInitializer(::System::Collections::Generic::Dictionary_2<K, V>* dictionary) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkBehaviour::MakeInitializer");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion", "NetworkBehaviour", "MakeInitializer", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<K>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<V>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dictionary)})));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<K>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<V>::get()})));
      return ::il2cpp_utils::RunMethodRethrow<::Fusion::NetworkBehaviourUtils::DictionaryInitializer_2<K, V>, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, dictionary);
    }
    // static protected internal System.Void InvokeWeavedCode()
    // Offset: 0x2B0C63C
    static void InvokeWeavedCode();
    // public override System.Void FixedUpdateNetwork()
    // Offset: 0x2B0B97C
    // Implemented from: Fusion.SimulationBehaviour
    // Base method: System.Void SimulationBehaviour::FixedUpdateNetwork()
    void FixedUpdateNetwork();
    // protected System.Void .ctor()
    // Offset: 0x2B0B710
    // Implemented from: Fusion.SimulationBehaviour
    // Base method: System.Void SimulationBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NetworkBehaviour* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkBehaviour::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NetworkBehaviour*, creationType>()));
    }
  }; // Fusion.NetworkBehaviour
  #pragma pack(pop)
  static check_size<sizeof(NetworkBehaviour), 112 + sizeof(::Fusion::NetworkBehaviourCallbacks*)> __Fusion_NetworkBehaviourSizeCheck;
  static_assert(sizeof(NetworkBehaviour) == 0x78);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_STRUCT(::Fusion::NetworkBehaviour::Interpolator_1, "Fusion", "NetworkBehaviour/Interpolator`1");
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Fusion::NetworkBehaviour::InterpolationDataSources, "Fusion", "NetworkBehaviour/InterpolationDataSources");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::NetworkBehaviour::get_WordInfo
// Il2CppName: get_WordInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::ValueTuple_2<int, int> (Fusion::NetworkBehaviour::*)()>(&Fusion::NetworkBehaviour::get_WordInfo)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkBehaviour*), "get_WordInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkBehaviour::get_InterpolationDataSource
// Il2CppName: get_InterpolationDataSource
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::NetworkBehaviour::InterpolationDataSources (Fusion::NetworkBehaviour::*)()>(&Fusion::NetworkBehaviour::get_InterpolationDataSource)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkBehaviour*), "get_InterpolationDataSource", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkBehaviour::set_InterpolationDataSource
// Il2CppName: set_InterpolationDataSource
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkBehaviour::*)(::Fusion::NetworkBehaviour::InterpolationDataSources)>(&Fusion::NetworkBehaviour::set_InterpolationDataSource)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkBehaviour/InterpolationDataSources")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkBehaviour*), "set_InterpolationDataSource", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkBehaviour::get_Id
// Il2CppName: get_Id
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::NetworkBehaviourId (Fusion::NetworkBehaviour::*)()>(&Fusion::NetworkBehaviour::get_Id)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkBehaviour*), "get_Id", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkBehaviour::GetLocalAuthorityMask
// Il2CppName: GetLocalAuthorityMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Fusion::NetworkBehaviour::*)()>(&Fusion::NetworkBehaviour::GetLocalAuthorityMask)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkBehaviour*), "GetLocalAuthorityMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkBehaviour::get_DynamicWordCount
// Il2CppName: get_DynamicWordCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Nullable_1<int> (Fusion::NetworkBehaviour::*)()>(&Fusion::NetworkBehaviour::get_DynamicWordCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkBehaviour*), "get_DynamicWordCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkBehaviour::CopyStateFrom
// Il2CppName: CopyStateFrom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkBehaviour::*)(::Fusion::NetworkBehaviour*)>(&Fusion::NetworkBehaviour::CopyStateFrom)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkBehaviour")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkBehaviour*), "CopyStateFrom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkBehaviour::CopyBackingFieldsToState
// Il2CppName: CopyBackingFieldsToState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkBehaviour::*)(bool)>(&Fusion::NetworkBehaviour::CopyBackingFieldsToState)> {
  static const MethodInfo* get() {
    static auto* firstTime = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkBehaviour*), "CopyBackingFieldsToState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{firstTime});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkBehaviour::CopyStateToBackingFields
// Il2CppName: CopyStateToBackingFields
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkBehaviour::*)()>(&Fusion::NetworkBehaviour::CopyStateToBackingFields)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkBehaviour*), "CopyStateToBackingFields", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkBehaviour::get_InvokeOnChangedForInitialNonZeroValues
// Il2CppName: get_InvokeOnChangedForInitialNonZeroValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::NetworkBehaviour::*)()>(&Fusion::NetworkBehaviour::get_InvokeOnChangedForInitialNonZeroValues)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkBehaviour*), "get_InvokeOnChangedForInitialNonZeroValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkBehaviour::Spawned
// Il2CppName: Spawned
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkBehaviour::*)()>(&Fusion::NetworkBehaviour::Spawned)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkBehaviour*), "Spawned", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkBehaviour::Despawned
// Il2CppName: Despawned
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkBehaviour::*)(::Fusion::NetworkRunner*, bool)>(&Fusion::NetworkBehaviour::Despawned)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    static auto* hasState = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkBehaviour*), "Despawned", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner, hasState});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkBehaviour::GetInterpolationData
// Il2CppName: GetInterpolationData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::NetworkBehaviour::*)(ByRef<::Fusion::InterpolationData>, ::System::Nullable_1<bool>)>(&Fusion::NetworkBehaviour::GetInterpolationData)> {
  static const MethodInfo* get() {
    static auto* data = &::il2cpp_utils::GetClassFromName("Fusion", "InterpolationData")->this_arg;
    static auto* predicted = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Boolean")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkBehaviour*), "GetInterpolationData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, predicted});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkBehaviour::GetInterpolationData
// Il2CppName: GetInterpolationData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::NetworkBehaviour::*)(ByRef<::Fusion::InterpolationData>, ByRef<bool>)>(&Fusion::NetworkBehaviour::GetInterpolationData)> {
  static const MethodInfo* get() {
    static auto* data = &::il2cpp_utils::GetClassFromName("Fusion", "InterpolationData")->this_arg;
    static auto* predicted = &::il2cpp_utils::GetClassFromName("System", "Boolean")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkBehaviour*), "GetInterpolationData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, predicted});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkBehaviour::IsInterpolationDataPredicted
// Il2CppName: IsInterpolationDataPredicted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::NetworkBehaviour::*)()>(&Fusion::NetworkBehaviour::IsInterpolationDataPredicted)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkBehaviour*), "IsInterpolationDataPredicted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkBehaviour::OnChangeClearAll
// Il2CppName: OnChangeClearAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkBehaviour::*)()>(&Fusion::NetworkBehaviour::OnChangeClearAll)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkBehaviour*), "OnChangeClearAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkBehaviour::OnChangeRemove
// Il2CppName: OnChangeRemove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::NetworkBehaviour::*)(::Fusion::NetworkBehaviourCallbackReference)>(&Fusion::NetworkBehaviour::OnChangeRemove)> {
  static const MethodInfo* get() {
    static auto* reference = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkBehaviourCallbackReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkBehaviour*), "OnChangeRemove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{reference});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkBehaviour::OnChangeAdd
// Il2CppName: OnChangeAdd
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Fusion::NetworkBehaviour::OnChangeAdd
// Il2CppName: OnChangeAdd
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Fusion::NetworkBehaviour::GetInput
// Il2CppName: GetInput
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Fusion::NetworkBehaviour::GetInput
// Il2CppName: GetInput
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Fusion::NetworkBehaviour::InterpolateBoolean
// Il2CppName: InterpolateBoolean
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int*, int*, float, float)>(&Fusion::NetworkBehaviour::InterpolateBoolean)> {
  static const MethodInfo* get() {
    static auto* from = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* to = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* t = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* a = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkBehaviour*), "InterpolateBoolean", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{from, to, t, a});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkBehaviour::InterpolateInt32
// Il2CppName: InterpolateInt32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int*, int*, float, float)>(&Fusion::NetworkBehaviour::InterpolateInt32)> {
  static const MethodInfo* get() {
    static auto* from = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* to = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* t = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* a = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkBehaviour*), "InterpolateInt32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{from, to, t, a});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkBehaviour::InterpolateSingle
// Il2CppName: InterpolateSingle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(int*, int*, float, float)>(&Fusion::NetworkBehaviour::InterpolateSingle)> {
  static const MethodInfo* get() {
    static auto* from = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* to = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* t = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* a = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkBehaviour*), "InterpolateSingle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{from, to, t, a});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkBehaviour::InterpolateVector2
// Il2CppName: InterpolateVector2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (*)(int*, int*, float, float)>(&Fusion::NetworkBehaviour::InterpolateVector2)> {
  static const MethodInfo* get() {
    static auto* from = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* to = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* t = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* a = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkBehaviour*), "InterpolateVector2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{from, to, t, a});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkBehaviour::InterpolateVector3
// Il2CppName: InterpolateVector3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (*)(int*, int*, float, float)>(&Fusion::NetworkBehaviour::InterpolateVector3)> {
  static const MethodInfo* get() {
    static auto* from = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* to = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* t = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* a = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkBehaviour*), "InterpolateVector3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{from, to, t, a});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkBehaviour::InterpolateQuaternion
// Il2CppName: InterpolateQuaternion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Quaternion (*)(int*, int*, float, float)>(&Fusion::NetworkBehaviour::InterpolateQuaternion)> {
  static const MethodInfo* get() {
    static auto* from = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* to = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* t = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* a = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkBehaviour*), "InterpolateQuaternion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{from, to, t, a});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkBehaviour::GetInterpolatorDelegate
// Il2CppName: GetInterpolatorDelegate
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Fusion::NetworkBehaviour::IsValidInterpolatorType
// Il2CppName: IsValidInterpolatorType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::Type*)>(&Fusion::NetworkBehaviour::IsValidInterpolatorType)> {
  static const MethodInfo* get() {
    static auto* t = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkBehaviour*), "IsValidInterpolatorType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{t});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkBehaviour::GetInterpolator
// Il2CppName: GetInterpolator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::NetworkBehaviour::RawInterpolator (Fusion::NetworkBehaviour::*)(::StringW)>(&Fusion::NetworkBehaviour::GetInterpolator)> {
  static const MethodInfo* get() {
    static auto* propertyName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkBehaviour*), "GetInterpolator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{propertyName});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkBehaviour::GetInterpolator
// Il2CppName: GetInterpolator
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Fusion::NetworkBehaviour::NetworkSerialize
// Il2CppName: NetworkSerialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Fusion::NetworkRunner*, ::Fusion::NetworkBehaviour*, uint8_t*)>(&Fusion::NetworkBehaviour::NetworkSerialize)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    static auto* obj = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkBehaviour")->byval_arg;
    static auto* data = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkBehaviour*), "NetworkSerialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner, obj, data});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkBehaviour::NetworkDeserialize
// Il2CppName: NetworkDeserialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Fusion::NetworkRunner*, uint8_t*, ByRef<::Fusion::NetworkBehaviour*>)>(&Fusion::NetworkBehaviour::NetworkDeserialize)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    static auto* data = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkBehaviour")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkBehaviour*), "NetworkDeserialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner, data, result});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkBehaviour::NetworkWrap
// Il2CppName: NetworkWrap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::NetworkBehaviourId (*)(::Fusion::NetworkRunner*, ::Fusion::NetworkBehaviour*)>(&Fusion::NetworkBehaviour::NetworkWrap)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    static auto* obj = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkBehaviour")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkBehaviour*), "NetworkWrap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner, obj});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkBehaviour::NetworkUnwrap
// Il2CppName: NetworkUnwrap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::NetworkBehaviour* (*)(::Fusion::NetworkRunner*, ::Fusion::NetworkBehaviourId)>(&Fusion::NetworkBehaviour::NetworkUnwrap)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    static auto* wrapper = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkBehaviourId")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkBehaviour*), "NetworkUnwrap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner, wrapper});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkBehaviour::MakeRef
// Il2CppName: MakeRef
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Fusion::NetworkBehaviour::MakeRef
// Il2CppName: MakeRef
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Fusion::NetworkBehaviour::MakePtr
// Il2CppName: MakePtr
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Fusion::NetworkBehaviour::MakePtr
// Il2CppName: MakePtr
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Fusion::NetworkBehaviour::MakeInitializer
// Il2CppName: MakeInitializer
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Fusion::NetworkBehaviour::MakeInitializer
// Il2CppName: MakeInitializer
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Fusion::NetworkBehaviour::InvokeWeavedCode
// Il2CppName: InvokeWeavedCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Fusion::NetworkBehaviour::InvokeWeavedCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkBehaviour*), "InvokeWeavedCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkBehaviour::FixedUpdateNetwork
// Il2CppName: FixedUpdateNetwork
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkBehaviour::*)()>(&Fusion::NetworkBehaviour::FixedUpdateNetwork)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkBehaviour*), "FixedUpdateNetwork", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkBehaviour::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
