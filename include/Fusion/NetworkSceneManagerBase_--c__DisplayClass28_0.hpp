// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Fusion.NetworkSceneManagerBase
#include "Fusion/NetworkSceneManagerBase.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Forward declaring type: IEnumerable`1<T>
  template<typename T>
  class IEnumerable_1;
}
// Forward declaring namespace: Fusion
namespace Fusion {
  // Forward declaring type: NetworkObject
  class NetworkObject;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::NetworkSceneManagerBase::$$c__DisplayClass28_0);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::NetworkSceneManagerBase::$$c__DisplayClass28_0*, "Fusion", "NetworkSceneManagerBase/<>c__DisplayClass28_0");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.NetworkSceneManagerBase/<>c__DisplayClass28_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class NetworkSceneManagerBase::$$c__DisplayClass28_0 : public ::Il2CppObject {
    public:
    public:
    // public System.Boolean finishCalled
    // Size: 0x1
    // Offset: 0x10
    bool finishCalled;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: finishCalled and: sceneObjects
    char __padding0[0x7] = {};
    // public System.Collections.Generic.Dictionary`2<System.Guid,Fusion.NetworkObject> sceneObjects
    // Size: 0x8
    // Offset: 0x18
    ::System::Collections::Generic::Dictionary_2<::System::Guid, ::Fusion::NetworkObject*>* sceneObjects;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::System::Guid, ::Fusion::NetworkObject*>*) == 0x8);
    public:
    // Get instance field reference: public System.Boolean finishCalled
    [[deprecated("Use field access instead!")]] bool& dyn_finishCalled();
    // Get instance field reference: public System.Collections.Generic.Dictionary`2<System.Guid,Fusion.NetworkObject> sceneObjects
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::System::Guid, ::Fusion::NetworkObject*>*& dyn_sceneObjects();
    // public System.Void .ctor()
    // Offset: 0x2818838
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NetworkSceneManagerBase::$$c__DisplayClass28_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerBase::$$c__DisplayClass28_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NetworkSceneManagerBase::$$c__DisplayClass28_0*, creationType>()));
    }
    // System.Void <SwitchSceneWrapper>b__0(System.Collections.Generic.IEnumerable`1<Fusion.NetworkObject> objects)
    // Offset: 0x2818840
    void $SwitchSceneWrapper$b__0(::System::Collections::Generic::IEnumerable_1<::Fusion::NetworkObject*>* objects);
  }; // Fusion.NetworkSceneManagerBase/<>c__DisplayClass28_0
  #pragma pack(pop)
  static check_size<sizeof(NetworkSceneManagerBase::$$c__DisplayClass28_0), 24 + sizeof(::System::Collections::Generic::Dictionary_2<::System::Guid, ::Fusion::NetworkObject*>*)> __Fusion_NetworkSceneManagerBase_$$c__DisplayClass28_0SizeCheck;
  static_assert(sizeof(NetworkSceneManagerBase::$$c__DisplayClass28_0) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::NetworkSceneManagerBase::$$c__DisplayClass28_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Fusion::NetworkSceneManagerBase::$$c__DisplayClass28_0::$SwitchSceneWrapper$b__0
// Il2CppName: <SwitchSceneWrapper>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkSceneManagerBase::$$c__DisplayClass28_0::*)(::System::Collections::Generic::IEnumerable_1<::Fusion::NetworkObject*>*)>(&Fusion::NetworkSceneManagerBase::$$c__DisplayClass28_0::$SwitchSceneWrapper$b__0)> {
  static const MethodInfo* get() {
    static auto* objects = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IEnumerable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Fusion", "NetworkObject")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkSceneManagerBase::$$c__DisplayClass28_0*), "<SwitchSceneWrapper>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{objects});
  }
};
