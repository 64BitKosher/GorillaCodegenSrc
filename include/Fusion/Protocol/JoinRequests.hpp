// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: Fusion.Protocol
namespace Fusion::Protocol {
  // Forward declaring type: JoinRequests
  struct JoinRequests;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Fusion::Protocol::JoinRequests, "Fusion.Protocol", "JoinRequests");
// Type namespace: Fusion.Protocol
namespace Fusion::Protocol {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.Protocol.JoinRequests
  // [TokenAttribute] Offset: FFFFFFFF
  // [FlagsAttribute] Offset: FFFFFFFF
  struct JoinRequests/*, public ::System::Enum*/ {
    public:
    public:
    // public System.UInt32 value__
    // Size: 0x4
    // Offset: 0x0
    uint value;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    public:
    // Creating value type constructor for type: JoinRequests
    constexpr JoinRequests(uint value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator uint
    constexpr operator uint() const noexcept {
      return value;
    }
    // static field const value: static public Fusion.Protocol.JoinRequests None
    static constexpr const uint None = 0u;
    // Get static field: static public Fusion.Protocol.JoinRequests None
    static ::Fusion::Protocol::JoinRequests _get_None();
    // Set static field: static public Fusion.Protocol.JoinRequests None
    static void _set_None(::Fusion::Protocol::JoinRequests value);
    // static field const value: static public Fusion.Protocol.JoinRequests NetworkConfig
    static constexpr const uint NetworkConfig = 2u;
    // Get static field: static public Fusion.Protocol.JoinRequests NetworkConfig
    static ::Fusion::Protocol::JoinRequests _get_NetworkConfig();
    // Set static field: static public Fusion.Protocol.JoinRequests NetworkConfig
    static void _set_NetworkConfig(::Fusion::Protocol::JoinRequests value);
    // static field const value: static public Fusion.Protocol.JoinRequests ReflexiveInfo
    static constexpr const uint ReflexiveInfo = 4u;
    // Get static field: static public Fusion.Protocol.JoinRequests ReflexiveInfo
    static ::Fusion::Protocol::JoinRequests _get_ReflexiveInfo();
    // Set static field: static public Fusion.Protocol.JoinRequests ReflexiveInfo
    static void _set_ReflexiveInfo(::Fusion::Protocol::JoinRequests value);
    // static field const value: static public Fusion.Protocol.JoinRequests DisableNATPunch
    static constexpr const uint DisableNATPunch = 8u;
    // Get static field: static public Fusion.Protocol.JoinRequests DisableNATPunch
    static ::Fusion::Protocol::JoinRequests _get_DisableNATPunch();
    // Set static field: static public Fusion.Protocol.JoinRequests DisableNATPunch
    static void _set_DisableNATPunch(::Fusion::Protocol::JoinRequests value);
    // Get instance field reference: public System.UInt32 value__
    [[deprecated("Use field access instead!")]] uint& dyn_value__();
  }; // Fusion.Protocol.JoinRequests
  #pragma pack(pop)
  static check_size<sizeof(JoinRequests), 0 + sizeof(uint)> __Fusion_Protocol_JoinRequestsSizeCheck;
  static_assert(sizeof(JoinRequests) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
