// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Version
  class Version;
}
// Completed forward declares
// Type namespace: Fusion.Protocol
namespace Fusion::Protocol {
  // Forward declaring type: Versioning
  class Versioning;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::Protocol::Versioning);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::Protocol::Versioning*, "Fusion.Protocol", "Versioning");
// Type namespace: Fusion.Protocol
namespace Fusion::Protocol {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.Protocol.Versioning
  // [TokenAttribute] Offset: FFFFFFFF
  class Versioning : public ::Il2CppObject {
    public:
    // Get static field: static public readonly System.Version InvalidVersion
    static ::System::Version* _get_InvalidVersion();
    // Set static field: static public readonly System.Version InvalidVersion
    static void _set_InvalidVersion(::System::Version* value);
    // static public System.Version get_GetCurrentVersion()
    // Offset: 0x2B8C248
    static ::System::Version* get_GetCurrentVersion();
    // static private System.Void .cctor()
    // Offset: 0x2B8EA6C
    static void _cctor();
  }; // Fusion.Protocol.Versioning
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::Protocol::Versioning::get_GetCurrentVersion
// Il2CppName: get_GetCurrentVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Version* (*)()>(&Fusion::Protocol::Versioning::get_GetCurrentVersion)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::Versioning*), "get_GetCurrentVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::Versioning::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Fusion::Protocol::Versioning::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::Versioning*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
