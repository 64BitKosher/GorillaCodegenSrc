// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: Fusion.Protocol
namespace Fusion::Protocol {
  // Forward declaring type: DisconnectReason
  struct DisconnectReason;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Fusion::Protocol::DisconnectReason, "Fusion.Protocol", "DisconnectReason");
// Type namespace: Fusion.Protocol
namespace Fusion::Protocol {
  // Size: 0x1
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.Protocol.DisconnectReason
  // [TokenAttribute] Offset: FFFFFFFF
  struct DisconnectReason/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Byte value__
    // Size: 0x1
    // Offset: 0x0
    uint8_t value;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    public:
    // Creating value type constructor for type: DisconnectReason
    constexpr DisconnectReason(uint8_t value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator uint8_t
    constexpr operator uint8_t() const noexcept {
      return value;
    }
    // static field const value: static public Fusion.Protocol.DisconnectReason None
    static constexpr const uint8_t None = 0u;
    // Get static field: static public Fusion.Protocol.DisconnectReason None
    static ::Fusion::Protocol::DisconnectReason _get_None();
    // Set static field: static public Fusion.Protocol.DisconnectReason None
    static void _set_None(::Fusion::Protocol::DisconnectReason value);
    // static field const value: static public Fusion.Protocol.DisconnectReason ServerLogic
    static constexpr const uint8_t ServerLogic = 1u;
    // Get static field: static public Fusion.Protocol.DisconnectReason ServerLogic
    static ::Fusion::Protocol::DisconnectReason _get_ServerLogic();
    // Set static field: static public Fusion.Protocol.DisconnectReason ServerLogic
    static void _set_ServerLogic(::Fusion::Protocol::DisconnectReason value);
    // static field const value: static public Fusion.Protocol.DisconnectReason InvalidEventCode
    static constexpr const uint8_t InvalidEventCode = 2u;
    // Get static field: static public Fusion.Protocol.DisconnectReason InvalidEventCode
    static ::Fusion::Protocol::DisconnectReason _get_InvalidEventCode();
    // Set static field: static public Fusion.Protocol.DisconnectReason InvalidEventCode
    static void _set_InvalidEventCode(::Fusion::Protocol::DisconnectReason value);
    // static field const value: static public Fusion.Protocol.DisconnectReason InvalidJoinMsgType
    static constexpr const uint8_t InvalidJoinMsgType = 3u;
    // Get static field: static public Fusion.Protocol.DisconnectReason InvalidJoinMsgType
    static ::Fusion::Protocol::DisconnectReason _get_InvalidJoinMsgType();
    // Set static field: static public Fusion.Protocol.DisconnectReason InvalidJoinMsgType
    static void _set_InvalidJoinMsgType(::Fusion::Protocol::DisconnectReason value);
    // static field const value: static public Fusion.Protocol.DisconnectReason InvalidJoinGameMode
    static constexpr const uint8_t InvalidJoinGameMode = 4u;
    // Get static field: static public Fusion.Protocol.DisconnectReason InvalidJoinGameMode
    static ::Fusion::Protocol::DisconnectReason _get_InvalidJoinGameMode();
    // Set static field: static public Fusion.Protocol.DisconnectReason InvalidJoinGameMode
    static void _set_InvalidJoinGameMode(::Fusion::Protocol::DisconnectReason value);
    // static field const value: static public Fusion.Protocol.DisconnectReason IncompatibleConfiguration
    static constexpr const uint8_t IncompatibleConfiguration = 5u;
    // Get static field: static public Fusion.Protocol.DisconnectReason IncompatibleConfiguration
    static ::Fusion::Protocol::DisconnectReason _get_IncompatibleConfiguration();
    // Set static field: static public Fusion.Protocol.DisconnectReason IncompatibleConfiguration
    static void _set_IncompatibleConfiguration(::Fusion::Protocol::DisconnectReason value);
    // static field const value: static public Fusion.Protocol.DisconnectReason ServerAlreadyInRoom
    static constexpr const uint8_t ServerAlreadyInRoom = 6u;
    // Get static field: static public Fusion.Protocol.DisconnectReason ServerAlreadyInRoom
    static ::Fusion::Protocol::DisconnectReason _get_ServerAlreadyInRoom();
    // Set static field: static public Fusion.Protocol.DisconnectReason ServerAlreadyInRoom
    static void _set_ServerAlreadyInRoom(::Fusion::Protocol::DisconnectReason value);
    // static field const value: static public Fusion.Protocol.DisconnectReason Error
    static constexpr const uint8_t Error = 7u;
    // Get static field: static public Fusion.Protocol.DisconnectReason Error
    static ::Fusion::Protocol::DisconnectReason _get_Error();
    // Set static field: static public Fusion.Protocol.DisconnectReason Error
    static void _set_Error(::Fusion::Protocol::DisconnectReason value);
    // Get instance field reference: public System.Byte value__
    [[deprecated("Use field access instead!")]] uint8_t& dyn_value__();
  }; // Fusion.Protocol.DisconnectReason
  #pragma pack(pop)
  static check_size<sizeof(DisconnectReason), 0 + sizeof(uint8_t)> __Fusion_Protocol_DisconnectReasonSizeCheck;
  static_assert(sizeof(DisconnectReason) == 0x1);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
