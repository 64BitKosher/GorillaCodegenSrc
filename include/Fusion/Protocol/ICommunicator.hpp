// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include <stdint.h>
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin il2cpp-utils forward declares
struct Il2CppObject;
// Completed il2cpp-utils forward declares
// Type namespace: Fusion.Protocol
namespace Fusion::Protocol {
  // Forward declaring type: ICommunicator
  class ICommunicator;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::Protocol::ICommunicator);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::Protocol::ICommunicator*, "Fusion.Protocol", "ICommunicator");
// Type namespace: Fusion.Protocol
namespace Fusion::Protocol {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.Protocol.ICommunicator
  // [TokenAttribute] Offset: FFFFFFFF
  class ICommunicator {
    public:
    // public System.Int32 get_CommunicatorID()
    // Offset: 0xFFFFFFFFFFFFFFFF
    int get_CommunicatorID();
    // public System.Boolean SendPackage(System.Byte code, System.Int32 targetActor, System.Boolean reliable, System.Byte* buffer, System.Int32 bufferLength)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool SendPackage(uint8_t code, int targetActor, bool reliable, uint8_t* buffer, int bufferLength);
    // public System.Int32 ReceivePackage(out System.Int32 senderActor, System.Byte* buffer, System.Int32 bufferLength)
    // Offset: 0xFFFFFFFFFFFFFFFF
    int ReceivePackage(ByRef<int> senderActor, uint8_t* buffer, int bufferLength);
    // public System.Void PushPackage(System.Int32 senderActor, System.Int32 eventCode, System.Object data)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void PushPackage(int senderActor, int eventCode, ::Il2CppObject* data);
  }; // Fusion.Protocol.ICommunicator
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::Protocol::ICommunicator::get_CommunicatorID
// Il2CppName: get_CommunicatorID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Fusion::Protocol::ICommunicator::*)()>(&Fusion::Protocol::ICommunicator::get_CommunicatorID)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::ICommunicator*), "get_CommunicatorID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::ICommunicator::SendPackage
// Il2CppName: SendPackage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::Protocol::ICommunicator::*)(uint8_t, int, bool, uint8_t*, int)>(&Fusion::Protocol::ICommunicator::SendPackage)> {
  static const MethodInfo* get() {
    static auto* code = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* targetActor = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* reliable = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* buffer = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* bufferLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::ICommunicator*), "SendPackage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{code, targetActor, reliable, buffer, bufferLength});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::ICommunicator::ReceivePackage
// Il2CppName: ReceivePackage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Fusion::Protocol::ICommunicator::*)(ByRef<int>, uint8_t*, int)>(&Fusion::Protocol::ICommunicator::ReceivePackage)> {
  static const MethodInfo* get() {
    static auto* senderActor = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* buffer = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* bufferLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::ICommunicator*), "ReceivePackage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{senderActor, buffer, bufferLength});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::ICommunicator::PushPackage
// Il2CppName: PushPackage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Protocol::ICommunicator::*)(int, int, ::Il2CppObject*)>(&Fusion::Protocol::ICommunicator::PushPackage)> {
  static const MethodInfo* get() {
    static auto* senderActor = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* eventCode = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::ICommunicator*), "PushPackage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{senderActor, eventCode, data});
  }
};
