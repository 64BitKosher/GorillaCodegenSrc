// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: Encoding
  class Encoding;
}
// Completed forward declares
// Type namespace: Fusion.Protocol
namespace Fusion::Protocol {
  // Forward declaring type: BitStream
  class BitStream;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::Protocol::BitStream);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::Protocol::BitStream*, "Fusion.Protocol", "BitStream");
// Type namespace: Fusion.Protocol
namespace Fusion::Protocol {
  // Size: 0x21
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.Protocol.BitStream
  // [TokenAttribute] Offset: FFFFFFFF
  class BitStream : public ::Il2CppObject {
    public:
    public:
    // private System.Int32 _ptr
    // Size: 0x4
    // Offset: 0x10
    int ptr;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 _size
    // Size: 0x4
    // Offset: 0x14
    int size;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Byte[] _data
    // Size: 0x8
    // Offset: 0x18
    ::ArrayW<uint8_t> data;
    // Field size check
    static_assert(sizeof(::ArrayW<uint8_t>) == 0x8);
    // private System.Boolean _write
    // Size: 0x1
    // Offset: 0x20
    bool write;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get instance field reference: private System.Int32 _ptr
    [[deprecated("Use field access instead!")]] int& dyn__ptr();
    // Get instance field reference: private System.Int32 _size
    [[deprecated("Use field access instead!")]] int& dyn__size();
    // Get instance field reference: private System.Byte[] _data
    [[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& dyn__data();
    // Get instance field reference: private System.Boolean _write
    [[deprecated("Use field access instead!")]] bool& dyn__write();
    // public System.Int32 get_Position()
    // Offset: 0x2B89DF8
    int get_Position();
    // public System.Void set_Position(System.Int32 value)
    // Offset: 0x2B89E00
    void set_Position(int value);
    // public System.Int32 get_BytesRequired()
    // Offset: 0x2B89E78
    int get_BytesRequired();
    // public System.Boolean get_Overflowing()
    // Offset: 0x2B89ED4
    bool get_Overflowing();
    // public System.Boolean get_Writing()
    // Offset: 0x2B89EE4
    bool get_Writing();
    // public System.Void set_Writing(System.Boolean value)
    // Offset: 0x2B89EEC
    void set_Writing(bool value);
    // public System.Boolean get_Reading()
    // Offset: 0x2B89EF8
    bool get_Reading();
    // public System.Void set_Reading(System.Boolean value)
    // Offset: 0x2B89F08
    void set_Reading(bool value);
    // public System.Byte[] get_Data()
    // Offset: 0x2B89F18
    ::ArrayW<uint8_t> get_Data();
    // public System.Void .ctor(System.Byte[] arr)
    // Offset: 0x2B89F20
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BitStream* New_ctor(::ArrayW<uint8_t> arr) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BitStream*, creationType>(arr)));
    }
    // public System.Void .ctor(System.Byte[] arr, System.Int32 size)
    // Offset: 0x2B89F6C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BitStream* New_ctor(::ArrayW<uint8_t> arr, int size) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BitStream*, creationType>(arr, size)));
    }
    // public System.Void SetBuffer(System.Byte[] arr, System.Int32 size)
    // Offset: 0x2B89FB0
    void SetBuffer(::ArrayW<uint8_t> arr, int size);
    // public System.Void Expand()
    // Offset: 0x2B89FE4
    void Expand();
    // public System.Boolean CanRead(System.Int32 bits)
    // Offset: 0x2B8A08C
    bool CanRead(int bits);
    // public System.Void Reset()
    // Offset: 0x2B8A0A0
    void Reset();
    // public System.Void Reset(System.Int32 byteSize)
    // Offset: 0x2B8A0BC
    void Reset(int byteSize);
    // public System.Boolean WriteBool(System.Boolean value)
    // Offset: 0x2B8A0FC
    bool WriteBool(bool value);
    // public System.Boolean ReadBool()
    // Offset: 0x2B8A184
    bool ReadBool();
    // public System.Void WriteByte(System.Byte value, System.Int32 bits)
    // Offset: 0x2B8A280
    void WriteByte(uint8_t value, int bits);
    // public System.Byte ReadByte(System.Int32 bits)
    // Offset: 0x2B8A2BC
    uint8_t ReadByte(int bits);
    // public System.Void WriteByte(System.Byte value)
    // Offset: 0x2B8A2C0
    void WriteByte(uint8_t value);
    // public System.Byte ReadByte()
    // Offset: 0x2B8A2F4
    uint8_t ReadByte();
    // public System.Void WriteUShort(System.UInt16 value, System.Int32 bits)
    // Offset: 0x2B8A2FC
    void WriteUShort(uint16_t value, int bits);
    // public System.UInt16 ReadUShort(System.Int32 bits)
    // Offset: 0x2B8A380
    uint16_t ReadUShort(int bits);
    // public System.Void WriteUShort(System.UInt16 value)
    // Offset: 0x2B8A3D4
    void WriteUShort(uint16_t value);
    // public System.UInt16 ReadUShort()
    // Offset: 0x2B8A3DC
    uint16_t ReadUShort();
    // public System.Void WriteUInt(System.UInt32 value, System.Int32 bits)
    // Offset: 0x2B8A414
    void WriteUInt(uint value, int bits);
    // public System.UInt32 ReadUInt(System.Int32 bits)
    // Offset: 0x2B8A57C
    uint ReadUInt(int bits);
    // public System.Void WriteInt(System.Int32 value, System.Int32 bits)
    // Offset: 0x2B8A6C8
    void WriteInt(int value, int bits);
    // public System.Int32 ReadInt(System.Int32 bits)
    // Offset: 0x2B8A6CC
    int ReadInt(int bits);
    // public System.Void WriteULong(System.UInt64 value, System.Int32 bits)
    // Offset: 0x2B8A6D0
    void WriteULong(uint64_t value, int bits);
    // public System.UInt64 ReadULong(System.Int32 bits)
    // Offset: 0x2B8A71C
    uint64_t ReadULong(int bits);
    // public System.Void WriteULong(System.UInt64 value)
    // Offset: 0x2B8A774
    void WriteULong(uint64_t value);
    // public System.UInt64 ReadULong()
    // Offset: 0x2B8A7A4
    uint64_t ReadULong();
    // public System.Void WriteByteArray(System.Byte[] from)
    // Offset: 0x2B8A7E0
    void WriteByteArray(::ArrayW<uint8_t> from);
    // public System.Void WriteByteArray(System.Byte[] from, System.Int32 offset, System.Int32 count)
    // Offset: 0x2B8A7FC
    void WriteByteArray(::ArrayW<uint8_t> from, int offset, int count);
    // public System.Void ReadByteArray(System.Byte[] to)
    // Offset: 0x2B8A958
    void ReadByteArray(::ArrayW<uint8_t> to);
    // public System.Void ReadByteArray(System.Byte[] to, System.Int32 offset, System.Int32 count)
    // Offset: 0x2B8A974
    void ReadByteArray(::ArrayW<uint8_t> to, int offset, int count);
    // public System.Void WriteByteArrayLengthPrefixed(System.Byte[] array, System.Int32 maxLength)
    // Offset: 0x2B8AA78
    void WriteByteArrayLengthPrefixed(::ArrayW<uint8_t> array, int maxLength);
    // public System.Byte[] ReadByteArrayLengthPrefixed()
    // Offset: 0x2B8ABD8
    ::ArrayW<uint8_t> ReadByteArrayLengthPrefixed();
    // public System.Void WriteString(System.String value, System.Text.Encoding encoding)
    // Offset: 0x2B8AC90
    void WriteString(::StringW value, ::System::Text::Encoding* encoding);
    // public System.String ReadString(System.Text.Encoding encoding)
    // Offset: 0x2B8AD0C
    ::StringW ReadString(::System::Text::Encoding* encoding);
    // private System.Void InternalWriteByte(System.Byte value, System.Int32 bits)
    // Offset: 0x2B8A148
    void InternalWriteByte(uint8_t value, int bits);
    // static public System.Void WriteByteAt(System.Byte[] data, System.Int32 ptr, System.Int32 bits, System.Byte value)
    // Offset: 0x2B8AE00
    static void WriteByteAt(::ArrayW<uint8_t> data, int ptr, int bits, uint8_t value);
    // private System.Byte InternalReadByte(System.Int32 bits)
    // Offset: 0x2B8A1A4
    uint8_t InternalReadByte(int bits);
    // public System.Void Serialize(ref System.String value)
    // Offset: 0x2B8AEE0
    void Serialize(ByRef<::StringW> value);
    // public System.Void Serialize(ref System.UInt64 value)
    // Offset: 0x2B8AF48
    void Serialize(ByRef<uint64_t> value);
    // public System.Void Serialize(ref System.Byte value)
    // Offset: 0x2B8AFBC
    void Serialize(ByRef<uint8_t> value);
    // public System.Void Serialize(ref System.UInt32 value)
    // Offset: 0x2B8B014
    void Serialize(ByRef<uint> value);
    // public System.Void Serialize(ref System.UInt32 value, System.Int32 bits)
    // Offset: 0x2B8B01C
    void Serialize(ByRef<uint> value, int bits);
    // public System.Void Serialize(ref System.Int32 value)
    // Offset: 0x2B8B04C
    void Serialize(ByRef<int> value);
    // public System.Void Serialize(ref System.Int32 value, System.Int32 bits)
    // Offset: 0x2B8B054
    void Serialize(ByRef<int> value, int bits);
    // public System.Void Serialize(ref System.Byte[] value)
    // Offset: 0x2B8B084
    void Serialize(ByRef<::ArrayW<uint8_t>> value);
    // public System.Void Serialize(ref System.Byte[] array, ref System.Int32 length)
    // Offset: 0x2B8B158
    void Serialize(ByRef<::ArrayW<uint8_t>> array, ByRef<int> length);
  }; // Fusion.Protocol.BitStream
  #pragma pack(pop)
  static check_size<sizeof(BitStream), 32 + sizeof(bool)> __Fusion_Protocol_BitStreamSizeCheck;
  static_assert(sizeof(BitStream) == 0x21);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::get_Position
// Il2CppName: get_Position
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Fusion::Protocol::BitStream::*)()>(&Fusion::Protocol::BitStream::get_Position)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::BitStream*), "get_Position", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::set_Position
// Il2CppName: set_Position
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Protocol::BitStream::*)(int)>(&Fusion::Protocol::BitStream::set_Position)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::BitStream*), "set_Position", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::get_BytesRequired
// Il2CppName: get_BytesRequired
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Fusion::Protocol::BitStream::*)()>(&Fusion::Protocol::BitStream::get_BytesRequired)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::BitStream*), "get_BytesRequired", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::get_Overflowing
// Il2CppName: get_Overflowing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::Protocol::BitStream::*)()>(&Fusion::Protocol::BitStream::get_Overflowing)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::BitStream*), "get_Overflowing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::get_Writing
// Il2CppName: get_Writing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::Protocol::BitStream::*)()>(&Fusion::Protocol::BitStream::get_Writing)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::BitStream*), "get_Writing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::set_Writing
// Il2CppName: set_Writing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Protocol::BitStream::*)(bool)>(&Fusion::Protocol::BitStream::set_Writing)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::BitStream*), "set_Writing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::get_Reading
// Il2CppName: get_Reading
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::Protocol::BitStream::*)()>(&Fusion::Protocol::BitStream::get_Reading)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::BitStream*), "get_Reading", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::set_Reading
// Il2CppName: set_Reading
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Protocol::BitStream::*)(bool)>(&Fusion::Protocol::BitStream::set_Reading)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::BitStream*), "set_Reading", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::get_Data
// Il2CppName: get_Data
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (Fusion::Protocol::BitStream::*)()>(&Fusion::Protocol::BitStream::get_Data)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::BitStream*), "get_Data", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::SetBuffer
// Il2CppName: SetBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Protocol::BitStream::*)(::ArrayW<uint8_t>, int)>(&Fusion::Protocol::BitStream::SetBuffer)> {
  static const MethodInfo* get() {
    static auto* arr = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* size = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::BitStream*), "SetBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{arr, size});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::Expand
// Il2CppName: Expand
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Protocol::BitStream::*)()>(&Fusion::Protocol::BitStream::Expand)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::BitStream*), "Expand", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::CanRead
// Il2CppName: CanRead
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::Protocol::BitStream::*)(int)>(&Fusion::Protocol::BitStream::CanRead)> {
  static const MethodInfo* get() {
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::BitStream*), "CanRead", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bits});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Protocol::BitStream::*)()>(&Fusion::Protocol::BitStream::Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::BitStream*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Protocol::BitStream::*)(int)>(&Fusion::Protocol::BitStream::Reset)> {
  static const MethodInfo* get() {
    static auto* byteSize = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::BitStream*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{byteSize});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::WriteBool
// Il2CppName: WriteBool
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::Protocol::BitStream::*)(bool)>(&Fusion::Protocol::BitStream::WriteBool)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::BitStream*), "WriteBool", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::ReadBool
// Il2CppName: ReadBool
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::Protocol::BitStream::*)()>(&Fusion::Protocol::BitStream::ReadBool)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::BitStream*), "ReadBool", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::WriteByte
// Il2CppName: WriteByte
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Protocol::BitStream::*)(uint8_t, int)>(&Fusion::Protocol::BitStream::WriteByte)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::BitStream*), "WriteByte", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, bits});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::ReadByte
// Il2CppName: ReadByte
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (Fusion::Protocol::BitStream::*)(int)>(&Fusion::Protocol::BitStream::ReadByte)> {
  static const MethodInfo* get() {
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::BitStream*), "ReadByte", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bits});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::WriteByte
// Il2CppName: WriteByte
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Protocol::BitStream::*)(uint8_t)>(&Fusion::Protocol::BitStream::WriteByte)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::BitStream*), "WriteByte", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::ReadByte
// Il2CppName: ReadByte
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (Fusion::Protocol::BitStream::*)()>(&Fusion::Protocol::BitStream::ReadByte)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::BitStream*), "ReadByte", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::WriteUShort
// Il2CppName: WriteUShort
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Protocol::BitStream::*)(uint16_t, int)>(&Fusion::Protocol::BitStream::WriteUShort)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt16")->byval_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::BitStream*), "WriteUShort", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, bits});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::ReadUShort
// Il2CppName: ReadUShort
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint16_t (Fusion::Protocol::BitStream::*)(int)>(&Fusion::Protocol::BitStream::ReadUShort)> {
  static const MethodInfo* get() {
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::BitStream*), "ReadUShort", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bits});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::WriteUShort
// Il2CppName: WriteUShort
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Protocol::BitStream::*)(uint16_t)>(&Fusion::Protocol::BitStream::WriteUShort)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt16")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::BitStream*), "WriteUShort", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::ReadUShort
// Il2CppName: ReadUShort
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint16_t (Fusion::Protocol::BitStream::*)()>(&Fusion::Protocol::BitStream::ReadUShort)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::BitStream*), "ReadUShort", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::WriteUInt
// Il2CppName: WriteUInt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Protocol::BitStream::*)(uint, int)>(&Fusion::Protocol::BitStream::WriteUInt)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::BitStream*), "WriteUInt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, bits});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::ReadUInt
// Il2CppName: ReadUInt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (Fusion::Protocol::BitStream::*)(int)>(&Fusion::Protocol::BitStream::ReadUInt)> {
  static const MethodInfo* get() {
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::BitStream*), "ReadUInt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bits});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::WriteInt
// Il2CppName: WriteInt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Protocol::BitStream::*)(int, int)>(&Fusion::Protocol::BitStream::WriteInt)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::BitStream*), "WriteInt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, bits});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::ReadInt
// Il2CppName: ReadInt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Fusion::Protocol::BitStream::*)(int)>(&Fusion::Protocol::BitStream::ReadInt)> {
  static const MethodInfo* get() {
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::BitStream*), "ReadInt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bits});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::WriteULong
// Il2CppName: WriteULong
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Protocol::BitStream::*)(uint64_t, int)>(&Fusion::Protocol::BitStream::WriteULong)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::BitStream*), "WriteULong", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, bits});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::ReadULong
// Il2CppName: ReadULong
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (Fusion::Protocol::BitStream::*)(int)>(&Fusion::Protocol::BitStream::ReadULong)> {
  static const MethodInfo* get() {
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::BitStream*), "ReadULong", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bits});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::WriteULong
// Il2CppName: WriteULong
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Protocol::BitStream::*)(uint64_t)>(&Fusion::Protocol::BitStream::WriteULong)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::BitStream*), "WriteULong", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::ReadULong
// Il2CppName: ReadULong
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (Fusion::Protocol::BitStream::*)()>(&Fusion::Protocol::BitStream::ReadULong)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::BitStream*), "ReadULong", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::WriteByteArray
// Il2CppName: WriteByteArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Protocol::BitStream::*)(::ArrayW<uint8_t>)>(&Fusion::Protocol::BitStream::WriteByteArray)> {
  static const MethodInfo* get() {
    static auto* from = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::BitStream*), "WriteByteArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{from});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::WriteByteArray
// Il2CppName: WriteByteArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Protocol::BitStream::*)(::ArrayW<uint8_t>, int, int)>(&Fusion::Protocol::BitStream::WriteByteArray)> {
  static const MethodInfo* get() {
    static auto* from = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::BitStream*), "WriteByteArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{from, offset, count});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::ReadByteArray
// Il2CppName: ReadByteArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Protocol::BitStream::*)(::ArrayW<uint8_t>)>(&Fusion::Protocol::BitStream::ReadByteArray)> {
  static const MethodInfo* get() {
    static auto* to = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::BitStream*), "ReadByteArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{to});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::ReadByteArray
// Il2CppName: ReadByteArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Protocol::BitStream::*)(::ArrayW<uint8_t>, int, int)>(&Fusion::Protocol::BitStream::ReadByteArray)> {
  static const MethodInfo* get() {
    static auto* to = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::BitStream*), "ReadByteArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{to, offset, count});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::WriteByteArrayLengthPrefixed
// Il2CppName: WriteByteArrayLengthPrefixed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Protocol::BitStream::*)(::ArrayW<uint8_t>, int)>(&Fusion::Protocol::BitStream::WriteByteArrayLengthPrefixed)> {
  static const MethodInfo* get() {
    static auto* array = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* maxLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::BitStream*), "WriteByteArrayLengthPrefixed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{array, maxLength});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::ReadByteArrayLengthPrefixed
// Il2CppName: ReadByteArrayLengthPrefixed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (Fusion::Protocol::BitStream::*)()>(&Fusion::Protocol::BitStream::ReadByteArrayLengthPrefixed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::BitStream*), "ReadByteArrayLengthPrefixed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::WriteString
// Il2CppName: WriteString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Protocol::BitStream::*)(::StringW, ::System::Text::Encoding*)>(&Fusion::Protocol::BitStream::WriteString)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* encoding = &::il2cpp_utils::GetClassFromName("System.Text", "Encoding")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::BitStream*), "WriteString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, encoding});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::ReadString
// Il2CppName: ReadString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Fusion::Protocol::BitStream::*)(::System::Text::Encoding*)>(&Fusion::Protocol::BitStream::ReadString)> {
  static const MethodInfo* get() {
    static auto* encoding = &::il2cpp_utils::GetClassFromName("System.Text", "Encoding")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::BitStream*), "ReadString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{encoding});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::InternalWriteByte
// Il2CppName: InternalWriteByte
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Protocol::BitStream::*)(uint8_t, int)>(&Fusion::Protocol::BitStream::InternalWriteByte)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::BitStream*), "InternalWriteByte", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, bits});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::WriteByteAt
// Il2CppName: WriteByteAt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<uint8_t>, int, int, uint8_t)>(&Fusion::Protocol::BitStream::WriteByteAt)> {
  static const MethodInfo* get() {
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* ptr = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::BitStream*), "WriteByteAt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, ptr, bits, value});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::InternalReadByte
// Il2CppName: InternalReadByte
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (Fusion::Protocol::BitStream::*)(int)>(&Fusion::Protocol::BitStream::InternalReadByte)> {
  static const MethodInfo* get() {
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::BitStream*), "InternalReadByte", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bits});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::Serialize
// Il2CppName: Serialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Protocol::BitStream::*)(ByRef<::StringW>)>(&Fusion::Protocol::BitStream::Serialize)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::BitStream*), "Serialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::Serialize
// Il2CppName: Serialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Protocol::BitStream::*)(ByRef<uint64_t>)>(&Fusion::Protocol::BitStream::Serialize)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::BitStream*), "Serialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::Serialize
// Il2CppName: Serialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Protocol::BitStream::*)(ByRef<uint8_t>)>(&Fusion::Protocol::BitStream::Serialize)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Byte")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::BitStream*), "Serialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::Serialize
// Il2CppName: Serialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Protocol::BitStream::*)(ByRef<uint>)>(&Fusion::Protocol::BitStream::Serialize)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::BitStream*), "Serialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::Serialize
// Il2CppName: Serialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Protocol::BitStream::*)(ByRef<uint>, int)>(&Fusion::Protocol::BitStream::Serialize)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt32")->this_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::BitStream*), "Serialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, bits});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::Serialize
// Il2CppName: Serialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Protocol::BitStream::*)(ByRef<int>)>(&Fusion::Protocol::BitStream::Serialize)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::BitStream*), "Serialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::Serialize
// Il2CppName: Serialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Protocol::BitStream::*)(ByRef<int>, int)>(&Fusion::Protocol::BitStream::Serialize)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::BitStream*), "Serialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, bits});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::Serialize
// Il2CppName: Serialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Protocol::BitStream::*)(ByRef<::ArrayW<uint8_t>>)>(&Fusion::Protocol::BitStream::Serialize)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::BitStream*), "Serialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::Protocol::BitStream::Serialize
// Il2CppName: Serialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Protocol::BitStream::*)(ByRef<::ArrayW<uint8_t>>, ByRef<int>)>(&Fusion::Protocol::BitStream::Serialize)> {
  static const MethodInfo* get() {
    static auto* array = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->this_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Protocol::BitStream*), "Serialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{array, length});
  }
};
