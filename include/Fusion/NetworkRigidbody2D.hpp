// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Fusion.NetworkRigidbodyBase
#include "Fusion/NetworkRigidbodyBase.hpp"
// Including type: Fusion.IAfterPhysicsSyncTransforms2D
#include "Fusion/IAfterPhysicsSyncTransforms2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Rigidbody2D
  class Rigidbody2D;
  // Forward declaring type: Vector2
  struct Vector2;
  // Forward declaring type: RigidbodyConstraints2D
  struct RigidbodyConstraints2D;
  // Forward declaring type: CollisionDetectionMode
  struct CollisionDetectionMode;
  // Skipping declaration: Vector3 because it is already included!
}
// Forward declaring namespace: Fusion
namespace Fusion {
  // Forward declaring type: ReadAccuracy
  struct ReadAccuracy;
  // Forward declaring type: WriteAccuracy
  struct WriteAccuracy;
}
// Completed forward declares
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: NetworkRigidbody2D
  class NetworkRigidbody2D;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::NetworkRigidbody2D);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::NetworkRigidbody2D*, "Fusion", "NetworkRigidbody2D");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x150
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.NetworkRigidbody2D
  // [TokenAttribute] Offset: FFFFFFFF
  // [HelpURLAttribute] Offset: FFFFFFFF
  // [AddComponentMenu] Offset: FFFFFFFF
  // [RequireComponent] Offset: FFFFFFFF
  // [SimulationBehaviourAttribute] Offset: FFFFFFFF
  // [NetworkBehaviourWeavedAttribute] Offset: FFFFFFFF
  // [DisallowMultipleComponent] Offset: FFFFFFFF
  class NetworkRigidbody2D : public ::Fusion::NetworkRigidbodyBase/*, public ::Fusion::IAfterPhysicsSyncTransforms2D*/ {
    public:
    public:
    // private System.Boolean _pendingCopyRigidbodyFromBufferToEngine
    // Size: 0x1
    // Offset: 0x146
    bool pendingCopyRigidbodyFromBufferToEngine;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: pendingCopyRigidbodyFromBufferToEngine and: Rigidbody
    char __padding0[0x1] = {};
    // private UnityEngine.Rigidbody2D <Rigidbody>k__BackingField
    // Size: 0x8
    // Offset: 0x148
    ::UnityEngine::Rigidbody2D* Rigidbody;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rigidbody2D*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::Fusion::IAfterPhysicsSyncTransforms2D
    operator ::Fusion::IAfterPhysicsSyncTransforms2D() noexcept {
      return *reinterpret_cast<::Fusion::IAfterPhysicsSyncTransforms2D*>(this);
    }
    // static field const value: static private System.Int32 WordCountRbPos
    static constexpr const int WordCountRbPos = 2;
    // Get static field: static private System.Int32 WordCountRbPos
    static int _get_WordCountRbPos();
    // Set static field: static private System.Int32 WordCountRbPos
    static void _set_WordCountRbPos(int value);
    // static field const value: static private System.Int32 WordCountRbRot
    static constexpr const int WordCountRbRot = 1;
    // Get static field: static private System.Int32 WordCountRbRot
    static int _get_WordCountRbRot();
    // Set static field: static private System.Int32 WordCountRbRot
    static void _set_WordCountRbRot(int value);
    // static field const value: static private System.Int32 WordCountVel
    static constexpr const int WordCountVel = 2;
    // Get static field: static private System.Int32 WordCountVel
    static int _get_WordCountVel();
    // Set static field: static private System.Int32 WordCountVel
    static void _set_WordCountVel(int value);
    // static field const value: static private System.Int32 WordCountAngVel
    static constexpr const int WordCountAngVel = 1;
    // Get static field: static private System.Int32 WordCountAngVel
    static int _get_WordCountAngVel();
    // Set static field: static private System.Int32 WordCountAngVel
    static void _set_WordCountAngVel(int value);
    // static field const value: static private System.Int32 WordCountGravityScl
    static constexpr const int WordCountGravityScl = 1;
    // Get static field: static private System.Int32 WordCountGravityScl
    static int _get_WordCountGravityScl();
    // Set static field: static private System.Int32 WordCountGravityScl
    static void _set_WordCountGravityScl(int value);
    // static field const value: static private System.Int32 BaseOffset
    static constexpr const int BaseOffset = 24;
    // Get static field: static private System.Int32 BaseOffset
    static int _get_BaseOffset();
    // Set static field: static private System.Int32 BaseOffset
    static void _set_BaseOffset(int value);
    // static field const value: static private System.Int32 OffsetRbPos
    static constexpr const int OffsetRbPos = 24;
    // Get static field: static private System.Int32 OffsetRbPos
    static int _get_OffsetRbPos();
    // Set static field: static private System.Int32 OffsetRbPos
    static void _set_OffsetRbPos(int value);
    // static field const value: static private System.Int32 OffsetRbRot
    static constexpr const int OffsetRbRot = 26;
    // Get static field: static private System.Int32 OffsetRbRot
    static int _get_OffsetRbRot();
    // Set static field: static private System.Int32 OffsetRbRot
    static void _set_OffsetRbRot(int value);
    // static field const value: static private System.Int32 OffsetVel
    static constexpr const int OffsetVel = 27;
    // Get static field: static private System.Int32 OffsetVel
    static int _get_OffsetVel();
    // Set static field: static private System.Int32 OffsetVel
    static void _set_OffsetVel(int value);
    // static field const value: static private System.Int32 OffsetAngVel
    static constexpr const int OffsetAngVel = 29;
    // Get static field: static private System.Int32 OffsetAngVel
    static int _get_OffsetAngVel();
    // Set static field: static private System.Int32 OffsetAngVel
    static void _set_OffsetAngVel(int value);
    // static field const value: static private System.Int32 OffsetGravityScl
    static constexpr const int OffsetGravityScl = 30;
    // Get static field: static private System.Int32 OffsetGravityScl
    static int _get_OffsetGravityScl();
    // Set static field: static private System.Int32 OffsetGravityScl
    static void _set_OffsetGravityScl(int value);
    // static field const value: static protected System.Int32 WORD_COUNT_NRB_2D
    static constexpr const int WORD_COUNT_NRB_2D = 31;
    // Get static field: static protected System.Int32 WORD_COUNT_NRB_2D
    static int _get_WORD_COUNT_NRB_2D();
    // Set static field: static protected System.Int32 WORD_COUNT_NRB_2D
    static void _set_WORD_COUNT_NRB_2D(int value);
    // Get instance field reference: private System.Boolean _pendingCopyRigidbodyFromBufferToEngine
    [[deprecated("Use field access instead!")]] bool& dyn__pendingCopyRigidbodyFromBufferToEngine();
    // Get instance field reference: private UnityEngine.Rigidbody2D <Rigidbody>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody2D*& dyn_$Rigidbody$k__BackingField();
    // public UnityEngine.Rigidbody2D get_Rigidbody()
    // Offset: 0x2B1DEC0
    ::UnityEngine::Rigidbody2D* get_Rigidbody();
    // private System.Void set_Rigidbody(UnityEngine.Rigidbody2D value)
    // Offset: 0x2B1DEC8
    void set_Rigidbody(::UnityEngine::Rigidbody2D* value);
    // private System.Void EnsureInitialized()
    // Offset: 0x2B1DF6C
    void EnsureInitialized();
    // private System.Void Fusion.IAfterPhysicsSyncTransforms2D.AfterPhysicsSyncTransforms2D()
    // Offset: 0x2B1E4B8
    void Fusion_IAfterPhysicsSyncTransforms2D_AfterPhysicsSyncTransforms2D();
    // private System.Void CopyRigidbodyFromBufferToEngine()
    // Offset: 0x2B1E1EC
    void CopyRigidbodyFromBufferToEngine();
    // private System.Boolean IsRigidbodyBelowSleepingThresholds()
    // Offset: 0x2B1E4D8
    bool IsRigidbodyBelowSleepingThresholds();
    // public UnityEngine.Vector2 ReadRigidbodyPosition()
    // Offset: 0x2B1E98C
    ::UnityEngine::Vector2 ReadRigidbodyPosition();
    // public UnityEngine.Vector2 ReadRigidbodyPosition(System.Int32* ptr)
    // Offset: 0x2B1E9D0
    ::UnityEngine::Vector2 ReadRigidbodyPosition(int* ptr);
    // static public UnityEngine.Vector2 ReadRigidbodyPosition(System.Int32* ptr, Fusion.ReadAccuracy readAccuracy)
    // Offset: 0x2B1EA10
    static ::UnityEngine::Vector2 ReadRigidbodyPosition(int* ptr, ::Fusion::ReadAccuracy readAccuracy);
    // public System.Single ReadRigidbodyRotation()
    // Offset: 0x2B1EA3C
    float ReadRigidbodyRotation();
    // public System.Single ReadRigidbodyRotation(System.Int32* ptr)
    // Offset: 0x2B1EA78
    float ReadRigidbodyRotation(int* ptr);
    // static public System.Single ReadRigidbodyRotation(System.Int32* ptr, Fusion.ReadAccuracy readAccuracy)
    // Offset: 0x2B1EAB0
    static float ReadRigidbodyRotation(int* ptr, ::Fusion::ReadAccuracy readAccuracy);
    // public UnityEngine.Vector2 ReadVelocity()
    // Offset: 0x2B1EAD0
    ::UnityEngine::Vector2 ReadVelocity();
    // public UnityEngine.Vector2 ReadVelocity(System.Int32* ptr)
    // Offset: 0x2B1EB14
    ::UnityEngine::Vector2 ReadVelocity(int* ptr);
    // static public UnityEngine.Vector2 ReadVelocity(System.Int32* ptr, Fusion.ReadAccuracy readAccuracy)
    // Offset: 0x2B1EB54
    static ::UnityEngine::Vector2 ReadVelocity(int* ptr, ::Fusion::ReadAccuracy readAccuracy);
    // public System.Single ReadAngularVelocity()
    // Offset: 0x2B1EB80
    float ReadAngularVelocity();
    // public System.Single ReadAngularVelocity(System.Int32* ptr)
    // Offset: 0x2B1EBBC
    float ReadAngularVelocity(int* ptr);
    // static public System.Single ReadAngularVelocity(System.Int32* ptr, Fusion.ReadAccuracy readAccuracy)
    // Offset: 0x2B1EBF4
    static float ReadAngularVelocity(int* ptr, ::Fusion::ReadAccuracy readAccuracy);
    // public System.Single ReadGravityScale()
    // Offset: 0x2B1EC14
    float ReadGravityScale();
    // public System.Single ReadGravityScale(System.Int32* ptr)
    // Offset: 0x2B1EC50
    float ReadGravityScale(int* ptr);
    // static public System.Single ReadGravityScale(System.Int32* ptr, Fusion.ReadAccuracy readAccuracy)
    // Offset: 0x2B1EC88
    static float ReadGravityScale(int* ptr, ::Fusion::ReadAccuracy readAccuracy);
    // public System.Void ReadNetworkRigidbodyFlags(out Fusion.NetworkRigidbodyBase/NetworkRigidbodyFlags nrbFlags, out UnityEngine.RigidbodyConstraints2D rbConstraints)
    // Offset: 0x2B1ECA8
    void ReadNetworkRigidbodyFlags(ByRef<::Fusion::NetworkRigidbodyBase::NetworkRigidbodyFlags> nrbFlags, ByRef<::UnityEngine::RigidbodyConstraints2D> rbConstraints);
    // static public System.Void ReadNetworkRigidbodyFlags(System.Int32* ptr, out Fusion.NetworkRigidbodyBase/NetworkRigidbodyFlags nrbFlags, out UnityEngine.RigidbodyConstraints2D rbConstraints)
    // Offset: 0x2B1ECC0
    static void ReadNetworkRigidbodyFlags(int* ptr, ByRef<::Fusion::NetworkRigidbodyBase::NetworkRigidbodyFlags> nrbFlags, ByRef<::UnityEngine::RigidbodyConstraints2D> rbConstraints);
    // public System.Void WriteRigidbodyPosition(UnityEngine.Vector2 rbPos)
    // Offset: 0x2B1ECD4
    void WriteRigidbodyPosition(::UnityEngine::Vector2 rbPos);
    // public System.Void WriteRigidbodyPosition(UnityEngine.Vector2 rbPos, System.Int32* ptr)
    // Offset: 0x2B1ED5C
    void WriteRigidbodyPosition(::UnityEngine::Vector2 rbPos, int* ptr);
    // static public System.Void WriteRigidbodyPosition(UnityEngine.Vector2 rbPos, System.Int32* ptr, Fusion.WriteAccuracy writeAccuracy)
    // Offset: 0x2B1EDE0
    static void WriteRigidbodyPosition(::UnityEngine::Vector2 rbPos, int* ptr, ::Fusion::WriteAccuracy writeAccuracy);
    // public System.Void WriteRigidbodyRotation(System.Single rbRot)
    // Offset: 0x2B1EE4C
    void WriteRigidbodyRotation(float rbRot);
    // public System.Void WriteRigidbodyRotation(System.Single rbRot, System.Int32* ptr)
    // Offset: 0x2B1EEB4
    void WriteRigidbodyRotation(float rbRot, int* ptr);
    // static public System.Void WriteRigidbodyRotation(System.Single rbRot, System.Int32* ptr, Fusion.WriteAccuracy writeAccuracy)
    // Offset: 0x2B1EF18
    static void WriteRigidbodyRotation(float rbRot, int* ptr, ::Fusion::WriteAccuracy writeAccuracy);
    // public System.Void WriteVelocity(UnityEngine.Vector2 velocity)
    // Offset: 0x2B1EF64
    void WriteVelocity(::UnityEngine::Vector2 velocity);
    // public System.Void WriteVelocity(UnityEngine.Vector2 velocity, System.Int32* ptr)
    // Offset: 0x2B1EFEC
    void WriteVelocity(::UnityEngine::Vector2 velocity, int* ptr);
    // static public System.Void WriteVelocity(UnityEngine.Vector2 velocity, System.Int32* ptr, Fusion.WriteAccuracy writeAccuracy)
    // Offset: 0x2B1F070
    static void WriteVelocity(::UnityEngine::Vector2 velocity, int* ptr, ::Fusion::WriteAccuracy writeAccuracy);
    // public System.Void WriteAngularVelocity(System.Single angularVel)
    // Offset: 0x2B1F0DC
    void WriteAngularVelocity(float angularVel);
    // public System.Void WriteAngularVelocity(System.Single angularVel, System.Int32* ptr)
    // Offset: 0x2B1F144
    void WriteAngularVelocity(float angularVel, int* ptr);
    // static public System.Void WriteAngularVelocity(System.Single angularVel, System.Int32* ptr, Fusion.WriteAccuracy writeAccuracy)
    // Offset: 0x2B1F1A8
    static void WriteAngularVelocity(float angularVel, int* ptr, ::Fusion::WriteAccuracy writeAccuracy);
    // public System.Void WriteGravityScale(System.Single gravityScale)
    // Offset: 0x2B1F1F4
    void WriteGravityScale(float gravityScale);
    // public System.Void WriteGravityScale(System.Single gravityScale, System.Int32* ptr)
    // Offset: 0x2B1F25C
    void WriteGravityScale(float gravityScale, int* ptr);
    // static public System.Void WriteGravityScale(System.Single gravityScale, System.Int32* ptr, Fusion.WriteAccuracy writeAccuracy)
    // Offset: 0x2B1F2C0
    static void WriteGravityScale(float gravityScale, int* ptr, ::Fusion::WriteAccuracy writeAccuracy);
    // public System.Void WriteNetworkRigidbodyFlags(Fusion.NetworkRigidbodyBase/NetworkRigidbodyFlags nrbFlags, UnityEngine.RigidbodyConstraints2D rbConstraints)
    // Offset: 0x2B1F30C
    void WriteNetworkRigidbodyFlags(::Fusion::NetworkRigidbodyBase::NetworkRigidbodyFlags nrbFlags, ::UnityEngine::RigidbodyConstraints2D rbConstraints);
    // static public System.Void WriteNetworkRigidbodyFlags(Fusion.NetworkRigidbodyBase/NetworkRigidbodyFlags nrbFlags, UnityEngine.RigidbodyConstraints2D rbConstraints, System.Int32* ptr)
    // Offset: 0x2B1F31C
    static void WriteNetworkRigidbodyFlags(::Fusion::NetworkRigidbodyBase::NetworkRigidbodyFlags nrbFlags, ::UnityEngine::RigidbodyConstraints2D rbConstraints, int* ptr);
    // protected override System.Void SetIsKinematic(System.Boolean value)
    // Offset: 0x2B1DED8
    // Implemented from: Fusion.NetworkRigidbodyBase
    // Base method: System.Void NetworkRigidbodyBase::SetIsKinematic(System.Boolean value)
    void SetIsKinematic(bool value);
    // protected override System.Void SetCollisionDetectionMode(UnityEngine.CollisionDetectionMode mode)
    // Offset: 0x2B1DEF8
    // Implemented from: Fusion.NetworkRigidbodyBase
    // Base method: System.Void NetworkRigidbodyBase::SetCollisionDetectionMode(UnityEngine.CollisionDetectionMode mode)
    void SetCollisionDetectionMode(::UnityEngine::CollisionDetectionMode mode);
    // protected override UnityEngine.Vector3 get_DefaultTeleportInterpolationVelocity()
    // Offset: 0x2B1DF1C
    // Implemented from: Fusion.NetworkTransform
    // Base method: UnityEngine.Vector3 NetworkTransform::get_DefaultTeleportInterpolationVelocity()
    ::UnityEngine::Vector3 get_DefaultTeleportInterpolationVelocity();
    // protected override UnityEngine.Vector3 get_DefaultTeleportInterpolationAngularVelocity()
    // Offset: 0x2B1DF40
    // Implemented from: Fusion.NetworkTransform
    // Base method: UnityEngine.Vector3 NetworkTransform::get_DefaultTeleportInterpolationAngularVelocity()
    ::UnityEngine::Vector3 get_DefaultTeleportInterpolationAngularVelocity();
    // protected override System.Void Awake()
    // Offset: 0x2B1E074
    // Implemented from: Fusion.NetworkPosition
    // Base method: System.Void NetworkPosition::Awake()
    void Awake();
    // public override System.Void Spawned()
    // Offset: 0x2B1E08C
    // Implemented from: Fusion.NetworkTransform
    // Base method: System.Void NetworkTransform::Spawned()
    void Spawned();
    // public override System.Void RemotePrefabCreated()
    // Offset: 0x2B1E0A4
    // Implemented from: Fusion.NetworkRigidbodyBase
    // Base method: System.Void NetworkRigidbodyBase::RemotePrefabCreated()
    void RemotePrefabCreated();
    // public override System.Void StateAuthorityChanged()
    // Offset: 0x2B1E0BC
    // Implemented from: Fusion.NetworkRigidbodyBase
    // Base method: System.Void NetworkRigidbodyBase::StateAuthorityChanged()
    void StateAuthorityChanged();
    // public override System.Void CopyBackingFieldsToState(System.Boolean firstTime)
    // Offset: 0x2B1E0D4
    // Implemented from: Fusion.NetworkRigidbodyBase
    // Base method: System.Void NetworkRigidbodyBase::CopyBackingFieldsToState(System.Boolean firstTime)
    void CopyBackingFieldsToState(bool firstTime);
    // protected override System.Void CopyFromBufferToEngine()
    // Offset: 0x2B1E0FC
    // Implemented from: Fusion.NetworkPositionRotation
    // Base method: System.Void NetworkPositionRotation::CopyFromBufferToEngine()
    void CopyFromBufferToEngine();
    // protected override System.Void CopyFromEngineToBuffer()
    // Offset: 0x2B1E5C0
    // Implemented from: Fusion.NetworkPositionRotation
    // Base method: System.Void NetworkPositionRotation::CopyFromEngineToBuffer()
    void CopyFromEngineToBuffer();
    // protected override System.Int32 get_BaseWordCount()
    // Offset: 0x2B1E984
    // Implemented from: Fusion.NetworkRigidbodyBase
    // Base method: System.Int32 NetworkRigidbodyBase::get_BaseWordCount()
    int get_BaseWordCount();
    // public System.Void .ctor()
    // Offset: 0x2B1F328
    // Implemented from: Fusion.NetworkRigidbodyBase
    // Base method: System.Void NetworkRigidbodyBase::.ctor()
    // Base method: System.Void NetworkTransform::.ctor()
    // Base method: System.Void NetworkPositionRotation::.ctor()
    // Base method: System.Void NetworkPosition::.ctor()
    // Base method: System.Void NetworkAreaOfInterestBehaviour::.ctor()
    // Base method: System.Void NetworkBehaviour::.ctor()
    // Base method: System.Void SimulationBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NetworkRigidbody2D* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkRigidbody2D::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NetworkRigidbody2D*, creationType>()));
    }
  }; // Fusion.NetworkRigidbody2D
  #pragma pack(pop)
  static check_size<sizeof(NetworkRigidbody2D), 328 + sizeof(::UnityEngine::Rigidbody2D*)> __Fusion_NetworkRigidbody2DSizeCheck;
  static_assert(sizeof(NetworkRigidbody2D) == 0x150);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::NetworkRigidbody2D::get_Rigidbody
// Il2CppName: get_Rigidbody
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rigidbody2D* (Fusion::NetworkRigidbody2D::*)()>(&Fusion::NetworkRigidbody2D::get_Rigidbody)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody2D*), "get_Rigidbody", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody2D::set_Rigidbody
// Il2CppName: set_Rigidbody
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbody2D::*)(::UnityEngine::Rigidbody2D*)>(&Fusion::NetworkRigidbody2D::set_Rigidbody)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rigidbody2D")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody2D*), "set_Rigidbody", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody2D::EnsureInitialized
// Il2CppName: EnsureInitialized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbody2D::*)()>(&Fusion::NetworkRigidbody2D::EnsureInitialized)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody2D*), "EnsureInitialized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody2D::Fusion_IAfterPhysicsSyncTransforms2D_AfterPhysicsSyncTransforms2D
// Il2CppName: Fusion.IAfterPhysicsSyncTransforms2D.AfterPhysicsSyncTransforms2D
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbody2D::*)()>(&Fusion::NetworkRigidbody2D::Fusion_IAfterPhysicsSyncTransforms2D_AfterPhysicsSyncTransforms2D)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody2D*), "Fusion.IAfterPhysicsSyncTransforms2D.AfterPhysicsSyncTransforms2D", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody2D::CopyRigidbodyFromBufferToEngine
// Il2CppName: CopyRigidbodyFromBufferToEngine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbody2D::*)()>(&Fusion::NetworkRigidbody2D::CopyRigidbodyFromBufferToEngine)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody2D*), "CopyRigidbodyFromBufferToEngine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody2D::IsRigidbodyBelowSleepingThresholds
// Il2CppName: IsRigidbodyBelowSleepingThresholds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::NetworkRigidbody2D::*)()>(&Fusion::NetworkRigidbody2D::IsRigidbodyBelowSleepingThresholds)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody2D*), "IsRigidbodyBelowSleepingThresholds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody2D::ReadRigidbodyPosition
// Il2CppName: ReadRigidbodyPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (Fusion::NetworkRigidbody2D::*)()>(&Fusion::NetworkRigidbody2D::ReadRigidbodyPosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody2D*), "ReadRigidbodyPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody2D::ReadRigidbodyPosition
// Il2CppName: ReadRigidbodyPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (Fusion::NetworkRigidbody2D::*)(int*)>(&Fusion::NetworkRigidbody2D::ReadRigidbodyPosition)> {
  static const MethodInfo* get() {
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody2D*), "ReadRigidbodyPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ptr});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody2D::ReadRigidbodyPosition
// Il2CppName: ReadRigidbodyPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (*)(int*, ::Fusion::ReadAccuracy)>(&Fusion::NetworkRigidbody2D::ReadRigidbodyPosition)> {
  static const MethodInfo* get() {
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* readAccuracy = &::il2cpp_utils::GetClassFromName("Fusion", "ReadAccuracy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody2D*), "ReadRigidbodyPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ptr, readAccuracy});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody2D::ReadRigidbodyRotation
// Il2CppName: ReadRigidbodyRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Fusion::NetworkRigidbody2D::*)()>(&Fusion::NetworkRigidbody2D::ReadRigidbodyRotation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody2D*), "ReadRigidbodyRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody2D::ReadRigidbodyRotation
// Il2CppName: ReadRigidbodyRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Fusion::NetworkRigidbody2D::*)(int*)>(&Fusion::NetworkRigidbody2D::ReadRigidbodyRotation)> {
  static const MethodInfo* get() {
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody2D*), "ReadRigidbodyRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ptr});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody2D::ReadRigidbodyRotation
// Il2CppName: ReadRigidbodyRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(int*, ::Fusion::ReadAccuracy)>(&Fusion::NetworkRigidbody2D::ReadRigidbodyRotation)> {
  static const MethodInfo* get() {
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* readAccuracy = &::il2cpp_utils::GetClassFromName("Fusion", "ReadAccuracy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody2D*), "ReadRigidbodyRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ptr, readAccuracy});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody2D::ReadVelocity
// Il2CppName: ReadVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (Fusion::NetworkRigidbody2D::*)()>(&Fusion::NetworkRigidbody2D::ReadVelocity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody2D*), "ReadVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody2D::ReadVelocity
// Il2CppName: ReadVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (Fusion::NetworkRigidbody2D::*)(int*)>(&Fusion::NetworkRigidbody2D::ReadVelocity)> {
  static const MethodInfo* get() {
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody2D*), "ReadVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ptr});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody2D::ReadVelocity
// Il2CppName: ReadVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (*)(int*, ::Fusion::ReadAccuracy)>(&Fusion::NetworkRigidbody2D::ReadVelocity)> {
  static const MethodInfo* get() {
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* readAccuracy = &::il2cpp_utils::GetClassFromName("Fusion", "ReadAccuracy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody2D*), "ReadVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ptr, readAccuracy});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody2D::ReadAngularVelocity
// Il2CppName: ReadAngularVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Fusion::NetworkRigidbody2D::*)()>(&Fusion::NetworkRigidbody2D::ReadAngularVelocity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody2D*), "ReadAngularVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody2D::ReadAngularVelocity
// Il2CppName: ReadAngularVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Fusion::NetworkRigidbody2D::*)(int*)>(&Fusion::NetworkRigidbody2D::ReadAngularVelocity)> {
  static const MethodInfo* get() {
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody2D*), "ReadAngularVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ptr});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody2D::ReadAngularVelocity
// Il2CppName: ReadAngularVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(int*, ::Fusion::ReadAccuracy)>(&Fusion::NetworkRigidbody2D::ReadAngularVelocity)> {
  static const MethodInfo* get() {
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* readAccuracy = &::il2cpp_utils::GetClassFromName("Fusion", "ReadAccuracy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody2D*), "ReadAngularVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ptr, readAccuracy});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody2D::ReadGravityScale
// Il2CppName: ReadGravityScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Fusion::NetworkRigidbody2D::*)()>(&Fusion::NetworkRigidbody2D::ReadGravityScale)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody2D*), "ReadGravityScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody2D::ReadGravityScale
// Il2CppName: ReadGravityScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Fusion::NetworkRigidbody2D::*)(int*)>(&Fusion::NetworkRigidbody2D::ReadGravityScale)> {
  static const MethodInfo* get() {
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody2D*), "ReadGravityScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ptr});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody2D::ReadGravityScale
// Il2CppName: ReadGravityScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(int*, ::Fusion::ReadAccuracy)>(&Fusion::NetworkRigidbody2D::ReadGravityScale)> {
  static const MethodInfo* get() {
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* readAccuracy = &::il2cpp_utils::GetClassFromName("Fusion", "ReadAccuracy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody2D*), "ReadGravityScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ptr, readAccuracy});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody2D::ReadNetworkRigidbodyFlags
// Il2CppName: ReadNetworkRigidbodyFlags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbody2D::*)(ByRef<::Fusion::NetworkRigidbodyBase::NetworkRigidbodyFlags>, ByRef<::UnityEngine::RigidbodyConstraints2D>)>(&Fusion::NetworkRigidbody2D::ReadNetworkRigidbodyFlags)> {
  static const MethodInfo* get() {
    static auto* nrbFlags = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRigidbodyBase/NetworkRigidbodyFlags")->this_arg;
    static auto* rbConstraints = &::il2cpp_utils::GetClassFromName("UnityEngine", "RigidbodyConstraints2D")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody2D*), "ReadNetworkRigidbodyFlags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nrbFlags, rbConstraints});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody2D::ReadNetworkRigidbodyFlags
// Il2CppName: ReadNetworkRigidbodyFlags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int*, ByRef<::Fusion::NetworkRigidbodyBase::NetworkRigidbodyFlags>, ByRef<::UnityEngine::RigidbodyConstraints2D>)>(&Fusion::NetworkRigidbody2D::ReadNetworkRigidbodyFlags)> {
  static const MethodInfo* get() {
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* nrbFlags = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRigidbodyBase/NetworkRigidbodyFlags")->this_arg;
    static auto* rbConstraints = &::il2cpp_utils::GetClassFromName("UnityEngine", "RigidbodyConstraints2D")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody2D*), "ReadNetworkRigidbodyFlags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ptr, nrbFlags, rbConstraints});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody2D::WriteRigidbodyPosition
// Il2CppName: WriteRigidbodyPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbody2D::*)(::UnityEngine::Vector2)>(&Fusion::NetworkRigidbody2D::WriteRigidbodyPosition)> {
  static const MethodInfo* get() {
    static auto* rbPos = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody2D*), "WriteRigidbodyPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rbPos});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody2D::WriteRigidbodyPosition
// Il2CppName: WriteRigidbodyPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbody2D::*)(::UnityEngine::Vector2, int*)>(&Fusion::NetworkRigidbody2D::WriteRigidbodyPosition)> {
  static const MethodInfo* get() {
    static auto* rbPos = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody2D*), "WriteRigidbodyPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rbPos, ptr});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody2D::WriteRigidbodyPosition
// Il2CppName: WriteRigidbodyPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Vector2, int*, ::Fusion::WriteAccuracy)>(&Fusion::NetworkRigidbody2D::WriteRigidbodyPosition)> {
  static const MethodInfo* get() {
    static auto* rbPos = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* writeAccuracy = &::il2cpp_utils::GetClassFromName("Fusion", "WriteAccuracy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody2D*), "WriteRigidbodyPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rbPos, ptr, writeAccuracy});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody2D::WriteRigidbodyRotation
// Il2CppName: WriteRigidbodyRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbody2D::*)(float)>(&Fusion::NetworkRigidbody2D::WriteRigidbodyRotation)> {
  static const MethodInfo* get() {
    static auto* rbRot = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody2D*), "WriteRigidbodyRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rbRot});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody2D::WriteRigidbodyRotation
// Il2CppName: WriteRigidbodyRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbody2D::*)(float, int*)>(&Fusion::NetworkRigidbody2D::WriteRigidbodyRotation)> {
  static const MethodInfo* get() {
    static auto* rbRot = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody2D*), "WriteRigidbodyRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rbRot, ptr});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody2D::WriteRigidbodyRotation
// Il2CppName: WriteRigidbodyRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(float, int*, ::Fusion::WriteAccuracy)>(&Fusion::NetworkRigidbody2D::WriteRigidbodyRotation)> {
  static const MethodInfo* get() {
    static auto* rbRot = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* writeAccuracy = &::il2cpp_utils::GetClassFromName("Fusion", "WriteAccuracy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody2D*), "WriteRigidbodyRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rbRot, ptr, writeAccuracy});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody2D::WriteVelocity
// Il2CppName: WriteVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbody2D::*)(::UnityEngine::Vector2)>(&Fusion::NetworkRigidbody2D::WriteVelocity)> {
  static const MethodInfo* get() {
    static auto* velocity = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody2D*), "WriteVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{velocity});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody2D::WriteVelocity
// Il2CppName: WriteVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbody2D::*)(::UnityEngine::Vector2, int*)>(&Fusion::NetworkRigidbody2D::WriteVelocity)> {
  static const MethodInfo* get() {
    static auto* velocity = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody2D*), "WriteVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{velocity, ptr});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody2D::WriteVelocity
// Il2CppName: WriteVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Vector2, int*, ::Fusion::WriteAccuracy)>(&Fusion::NetworkRigidbody2D::WriteVelocity)> {
  static const MethodInfo* get() {
    static auto* velocity = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* writeAccuracy = &::il2cpp_utils::GetClassFromName("Fusion", "WriteAccuracy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody2D*), "WriteVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{velocity, ptr, writeAccuracy});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody2D::WriteAngularVelocity
// Il2CppName: WriteAngularVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbody2D::*)(float)>(&Fusion::NetworkRigidbody2D::WriteAngularVelocity)> {
  static const MethodInfo* get() {
    static auto* angularVel = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody2D*), "WriteAngularVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{angularVel});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody2D::WriteAngularVelocity
// Il2CppName: WriteAngularVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbody2D::*)(float, int*)>(&Fusion::NetworkRigidbody2D::WriteAngularVelocity)> {
  static const MethodInfo* get() {
    static auto* angularVel = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody2D*), "WriteAngularVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{angularVel, ptr});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody2D::WriteAngularVelocity
// Il2CppName: WriteAngularVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(float, int*, ::Fusion::WriteAccuracy)>(&Fusion::NetworkRigidbody2D::WriteAngularVelocity)> {
  static const MethodInfo* get() {
    static auto* angularVel = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* writeAccuracy = &::il2cpp_utils::GetClassFromName("Fusion", "WriteAccuracy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody2D*), "WriteAngularVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{angularVel, ptr, writeAccuracy});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody2D::WriteGravityScale
// Il2CppName: WriteGravityScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbody2D::*)(float)>(&Fusion::NetworkRigidbody2D::WriteGravityScale)> {
  static const MethodInfo* get() {
    static auto* gravityScale = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody2D*), "WriteGravityScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gravityScale});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody2D::WriteGravityScale
// Il2CppName: WriteGravityScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbody2D::*)(float, int*)>(&Fusion::NetworkRigidbody2D::WriteGravityScale)> {
  static const MethodInfo* get() {
    static auto* gravityScale = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody2D*), "WriteGravityScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gravityScale, ptr});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody2D::WriteGravityScale
// Il2CppName: WriteGravityScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(float, int*, ::Fusion::WriteAccuracy)>(&Fusion::NetworkRigidbody2D::WriteGravityScale)> {
  static const MethodInfo* get() {
    static auto* gravityScale = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* writeAccuracy = &::il2cpp_utils::GetClassFromName("Fusion", "WriteAccuracy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody2D*), "WriteGravityScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gravityScale, ptr, writeAccuracy});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody2D::WriteNetworkRigidbodyFlags
// Il2CppName: WriteNetworkRigidbodyFlags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbody2D::*)(::Fusion::NetworkRigidbodyBase::NetworkRigidbodyFlags, ::UnityEngine::RigidbodyConstraints2D)>(&Fusion::NetworkRigidbody2D::WriteNetworkRigidbodyFlags)> {
  static const MethodInfo* get() {
    static auto* nrbFlags = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRigidbodyBase/NetworkRigidbodyFlags")->byval_arg;
    static auto* rbConstraints = &::il2cpp_utils::GetClassFromName("UnityEngine", "RigidbodyConstraints2D")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody2D*), "WriteNetworkRigidbodyFlags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nrbFlags, rbConstraints});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody2D::WriteNetworkRigidbodyFlags
// Il2CppName: WriteNetworkRigidbodyFlags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Fusion::NetworkRigidbodyBase::NetworkRigidbodyFlags, ::UnityEngine::RigidbodyConstraints2D, int*)>(&Fusion::NetworkRigidbody2D::WriteNetworkRigidbodyFlags)> {
  static const MethodInfo* get() {
    static auto* nrbFlags = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRigidbodyBase/NetworkRigidbodyFlags")->byval_arg;
    static auto* rbConstraints = &::il2cpp_utils::GetClassFromName("UnityEngine", "RigidbodyConstraints2D")->byval_arg;
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody2D*), "WriteNetworkRigidbodyFlags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nrbFlags, rbConstraints, ptr});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody2D::SetIsKinematic
// Il2CppName: SetIsKinematic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbody2D::*)(bool)>(&Fusion::NetworkRigidbody2D::SetIsKinematic)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody2D*), "SetIsKinematic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody2D::SetCollisionDetectionMode
// Il2CppName: SetCollisionDetectionMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbody2D::*)(::UnityEngine::CollisionDetectionMode)>(&Fusion::NetworkRigidbody2D::SetCollisionDetectionMode)> {
  static const MethodInfo* get() {
    static auto* mode = &::il2cpp_utils::GetClassFromName("UnityEngine", "CollisionDetectionMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody2D*), "SetCollisionDetectionMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mode});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody2D::get_DefaultTeleportInterpolationVelocity
// Il2CppName: get_DefaultTeleportInterpolationVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (Fusion::NetworkRigidbody2D::*)()>(&Fusion::NetworkRigidbody2D::get_DefaultTeleportInterpolationVelocity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody2D*), "get_DefaultTeleportInterpolationVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody2D::get_DefaultTeleportInterpolationAngularVelocity
// Il2CppName: get_DefaultTeleportInterpolationAngularVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (Fusion::NetworkRigidbody2D::*)()>(&Fusion::NetworkRigidbody2D::get_DefaultTeleportInterpolationAngularVelocity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody2D*), "get_DefaultTeleportInterpolationAngularVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody2D::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbody2D::*)()>(&Fusion::NetworkRigidbody2D::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody2D*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody2D::Spawned
// Il2CppName: Spawned
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbody2D::*)()>(&Fusion::NetworkRigidbody2D::Spawned)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody2D*), "Spawned", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody2D::RemotePrefabCreated
// Il2CppName: RemotePrefabCreated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbody2D::*)()>(&Fusion::NetworkRigidbody2D::RemotePrefabCreated)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody2D*), "RemotePrefabCreated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody2D::StateAuthorityChanged
// Il2CppName: StateAuthorityChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbody2D::*)()>(&Fusion::NetworkRigidbody2D::StateAuthorityChanged)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody2D*), "StateAuthorityChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody2D::CopyBackingFieldsToState
// Il2CppName: CopyBackingFieldsToState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbody2D::*)(bool)>(&Fusion::NetworkRigidbody2D::CopyBackingFieldsToState)> {
  static const MethodInfo* get() {
    static auto* firstTime = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody2D*), "CopyBackingFieldsToState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{firstTime});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody2D::CopyFromBufferToEngine
// Il2CppName: CopyFromBufferToEngine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbody2D::*)()>(&Fusion::NetworkRigidbody2D::CopyFromBufferToEngine)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody2D*), "CopyFromBufferToEngine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody2D::CopyFromEngineToBuffer
// Il2CppName: CopyFromEngineToBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbody2D::*)()>(&Fusion::NetworkRigidbody2D::CopyFromEngineToBuffer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody2D*), "CopyFromEngineToBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody2D::get_BaseWordCount
// Il2CppName: get_BaseWordCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Fusion::NetworkRigidbody2D::*)()>(&Fusion::NetworkRigidbody2D::get_BaseWordCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbody2D*), "get_BaseWordCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbody2D::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
