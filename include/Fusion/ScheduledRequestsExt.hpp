// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Fusion
namespace Fusion {
  // Forward declaring type: ScheduledRequests
  struct ScheduledRequests;
}
// Completed forward declares
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: ScheduledRequestsExt
  class ScheduledRequestsExt;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::ScheduledRequestsExt);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::ScheduledRequestsExt*, "Fusion", "ScheduledRequestsExt");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.ScheduledRequestsExt
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class ScheduledRequestsExt : public ::Il2CppObject {
    public:
    // static public System.Boolean IsSet(ref Fusion.ScheduledRequests requests, Fusion.ScheduledRequests target)
    // Offset: 0x2B06520
    static bool IsSet(ByRef<::Fusion::ScheduledRequests> requests, ::Fusion::ScheduledRequests target);
    // static public System.Void Set(ref Fusion.ScheduledRequests requests, Fusion.ScheduledRequests target)
    // Offset: 0x2B06530
    static void Set(ByRef<::Fusion::ScheduledRequests> requests, ::Fusion::ScheduledRequests target);
    // static public System.Void Clear(ref Fusion.ScheduledRequests requests, Fusion.ScheduledRequests target)
    // Offset: 0x2B06540
    static void Clear(ByRef<::Fusion::ScheduledRequests> requests, ::Fusion::ScheduledRequests target);
  }; // Fusion.ScheduledRequestsExt
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::ScheduledRequestsExt::IsSet
// Il2CppName: IsSet
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::Fusion::ScheduledRequests>, ::Fusion::ScheduledRequests)>(&Fusion::ScheduledRequestsExt::IsSet)> {
  static const MethodInfo* get() {
    static auto* requests = &::il2cpp_utils::GetClassFromName("Fusion", "ScheduledRequests")->this_arg;
    static auto* target = &::il2cpp_utils::GetClassFromName("Fusion", "ScheduledRequests")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::ScheduledRequestsExt*), "IsSet", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{requests, target});
  }
};
// Writing MetadataGetter for method: Fusion::ScheduledRequestsExt::Set
// Il2CppName: Set
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::Fusion::ScheduledRequests>, ::Fusion::ScheduledRequests)>(&Fusion::ScheduledRequestsExt::Set)> {
  static const MethodInfo* get() {
    static auto* requests = &::il2cpp_utils::GetClassFromName("Fusion", "ScheduledRequests")->this_arg;
    static auto* target = &::il2cpp_utils::GetClassFromName("Fusion", "ScheduledRequests")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::ScheduledRequestsExt*), "Set", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{requests, target});
  }
};
// Writing MetadataGetter for method: Fusion::ScheduledRequestsExt::Clear
// Il2CppName: Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::Fusion::ScheduledRequests>, ::Fusion::ScheduledRequests)>(&Fusion::ScheduledRequestsExt::Clear)> {
  static const MethodInfo* get() {
    static auto* requests = &::il2cpp_utils::GetClassFromName("Fusion", "ScheduledRequests")->this_arg;
    static auto* target = &::il2cpp_utils::GetClassFromName("Fusion", "ScheduledRequests")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::ScheduledRequestsExt*), "Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{requests, target});
  }
};
