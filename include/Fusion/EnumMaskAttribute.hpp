// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Fusion.PropertyAttribute
#include "Fusion/PropertyAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: EnumMaskAttribute
  class EnumMaskAttribute;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::EnumMaskAttribute);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::EnumMaskAttribute*, "Fusion", "EnumMaskAttribute");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.EnumMaskAttribute
  // [TokenAttribute] Offset: FFFFFFFF
  // [AttributeUsageAttribute] Offset: FFFFFFFF
  class EnumMaskAttribute : public ::Fusion::PropertyAttribute {
    public:
    public:
    // public System.Boolean definesZero
    // Size: 0x1
    // Offset: 0x14
    bool definesZero;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: definesZero and: castTo
    char __padding0[0x3] = {};
    // public System.Type castTo
    // Size: 0x8
    // Offset: 0x18
    ::System::Type* castTo;
    // Field size check
    static_assert(sizeof(::System::Type*) == 0x8);
    public:
    // Deleting conversion operator: operator int
    constexpr operator int() const noexcept = delete;
    // Get instance field reference: public System.Boolean definesZero
    [[deprecated("Use field access instead!")]] bool& dyn_definesZero();
    // Get instance field reference: public System.Type castTo
    [[deprecated("Use field access instead!")]] ::System::Type*& dyn_castTo();
    // public System.Void .ctor(System.Boolean definesZero, System.Type castTo)
    // Offset: 0x2AFF01C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static EnumMaskAttribute* New_ctor(bool definesZero, ::System::Type* castTo) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::EnumMaskAttribute::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<EnumMaskAttribute*, creationType>(definesZero, castTo)));
    }
  }; // Fusion.EnumMaskAttribute
  #pragma pack(pop)
  static check_size<sizeof(EnumMaskAttribute), 24 + sizeof(::System::Type*)> __Fusion_EnumMaskAttributeSizeCheck;
  static_assert(sizeof(EnumMaskAttribute) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::EnumMaskAttribute::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
