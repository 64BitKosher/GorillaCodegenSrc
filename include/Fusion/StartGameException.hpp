// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: Fusion.ShutdownReason
#include "Fusion/ShutdownReason.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: StartGameException
  class StartGameException;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::StartGameException);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::StartGameException*, "Fusion", "StartGameException");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x90
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.StartGameException
  // [TokenAttribute] Offset: FFFFFFFF
  class StartGameException : public ::System::Exception {
    public:
    public:
    // private Fusion.ShutdownReason <ShutdownReason>k__BackingField
    // Size: 0x4
    // Offset: 0x8C
    ::Fusion::ShutdownReason ShutdownReason;
    // Field size check
    static_assert(sizeof(::Fusion::ShutdownReason) == 0x4);
    public:
    // Creating conversion operator: operator ::Fusion::ShutdownReason
    constexpr operator ::Fusion::ShutdownReason() const noexcept {
      return ShutdownReason;
    }
    // Get instance field reference: private Fusion.ShutdownReason <ShutdownReason>k__BackingField
    [[deprecated("Use field access instead!")]] ::Fusion::ShutdownReason& dyn_$ShutdownReason$k__BackingField();
    // public Fusion.ShutdownReason get_ShutdownReason()
    // Offset: 0x2B6C000
    ::Fusion::ShutdownReason get_ShutdownReason();
    // System.Void set_ShutdownReason(Fusion.ShutdownReason value)
    // Offset: 0x2B6C008
    void set_ShutdownReason(::Fusion::ShutdownReason value);
    // System.Void .ctor(Fusion.ShutdownReason shutdownReason, System.String customMsg)
    // Offset: 0x2B6872C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static StartGameException* New_ctor(::Fusion::ShutdownReason shutdownReason, ::StringW customMsg) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::StartGameException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<StartGameException*, creationType>(shutdownReason, customMsg)));
    }
    // public override System.String ToString()
    // Offset: 0x2B6C010
    // Implemented from: System.Exception
    // Base method: System.String Exception::ToString()
    ::StringW ToString();
  }; // Fusion.StartGameException
  #pragma pack(pop)
  static check_size<sizeof(StartGameException), 140 + sizeof(::Fusion::ShutdownReason)> __Fusion_StartGameExceptionSizeCheck;
  static_assert(sizeof(StartGameException) == 0x90);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::StartGameException::get_ShutdownReason
// Il2CppName: get_ShutdownReason
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::ShutdownReason (Fusion::StartGameException::*)()>(&Fusion::StartGameException::get_ShutdownReason)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::StartGameException*), "get_ShutdownReason", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::StartGameException::set_ShutdownReason
// Il2CppName: set_ShutdownReason
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::StartGameException::*)(::Fusion::ShutdownReason)>(&Fusion::StartGameException::set_ShutdownReason)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Fusion", "ShutdownReason")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::StartGameException*), "set_ShutdownReason", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::StartGameException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Fusion::StartGameException::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Fusion::StartGameException::*)()>(&Fusion::StartGameException::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::StartGameException*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
