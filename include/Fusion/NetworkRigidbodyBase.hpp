// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Fusion.NetworkTransform
#include "Fusion/NetworkTransform.hpp"
// Including type: Fusion.IStateAuthorityChanged
#include "Fusion/IStateAuthorityChanged.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Fusion
namespace Fusion {
  // Forward declaring type: ReadAccuracy
  struct ReadAccuracy;
  // Forward declaring type: WriteAccuracy
  struct WriteAccuracy;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: CollisionDetectionMode
  struct CollisionDetectionMode;
  // Skipping declaration: Vector3 because it is already included!
}
// Completed forward declares
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: NetworkRigidbodyBase
  class NetworkRigidbodyBase;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::NetworkRigidbodyBase);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::NetworkRigidbodyBase*, "Fusion", "NetworkRigidbodyBase");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x146
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.NetworkRigidbodyBase
  // [TokenAttribute] Offset: FFFFFFFF
  // [OrderAfterAttribute] Offset: FFFFFFFF
  class NetworkRigidbodyBase : public ::Fusion::NetworkTransform/*, public ::Fusion::IStateAuthorityChanged*/ {
    public:
    // Nested type: ::Fusion::NetworkRigidbodyBase::NetworkRigidbodyFlags
    struct NetworkRigidbodyFlags;
    public:
    // protected System.Boolean _forceSnapshotInterpolated
    // Size: 0x1
    // Offset: 0x144
    bool forceSnapshotInterpolated;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _initialized
    // Size: 0x1
    // Offset: 0x145
    bool initialized;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating interface conversion operator: operator ::Fusion::IStateAuthorityChanged
    operator ::Fusion::IStateAuthorityChanged() noexcept {
      return *reinterpret_cast<::Fusion::IStateAuthorityChanged*>(this);
    }
    // static field const value: static private System.Int32 WORD_COUNT_DRAG
    static constexpr const int WORD_COUNT_DRAG = 1;
    // Get static field: static private System.Int32 WORD_COUNT_DRAG
    static int _get_WORD_COUNT_DRAG();
    // Set static field: static private System.Int32 WORD_COUNT_DRAG
    static void _set_WORD_COUNT_DRAG(int value);
    // static field const value: static private System.Int32 WORD_COUNT_ANG_DRAG
    static constexpr const int WORD_COUNT_ANG_DRAG = 1;
    // Get static field: static private System.Int32 WORD_COUNT_ANG_DRAG
    static int _get_WORD_COUNT_ANG_DRAG();
    // Set static field: static private System.Int32 WORD_COUNT_ANG_DRAG
    static void _set_WORD_COUNT_ANG_DRAG(int value);
    // static field const value: static private System.Int32 WORD_COUNT_MASS
    static constexpr const int WORD_COUNT_MASS = 1;
    // Get static field: static private System.Int32 WORD_COUNT_MASS
    static int _get_WORD_COUNT_MASS();
    // Set static field: static private System.Int32 WORD_COUNT_MASS
    static void _set_WORD_COUNT_MASS(int value);
    // static field const value: static private System.Int32 WORD_COUNT_FLAGS
    static constexpr const int WORD_COUNT_FLAGS = 1;
    // Get static field: static private System.Int32 WORD_COUNT_FLAGS
    static int _get_WORD_COUNT_FLAGS();
    // Set static field: static private System.Int32 WORD_COUNT_FLAGS
    static void _set_WORD_COUNT_FLAGS(int value);
    // static field const value: static private System.Int32 BASE_OFFSET
    static constexpr const int BASE_OFFSET = 20;
    // Get static field: static private System.Int32 BASE_OFFSET
    static int _get_BASE_OFFSET();
    // Set static field: static private System.Int32 BASE_OFFSET
    static void _set_BASE_OFFSET(int value);
    // static field const value: static private System.Int32 OFFSET_DRAG
    static constexpr const int OFFSET_DRAG = 20;
    // Get static field: static private System.Int32 OFFSET_DRAG
    static int _get_OFFSET_DRAG();
    // Set static field: static private System.Int32 OFFSET_DRAG
    static void _set_OFFSET_DRAG(int value);
    // static field const value: static private System.Int32 OFFSET_ANG_DRAG
    static constexpr const int OFFSET_ANG_DRAG = 21;
    // Get static field: static private System.Int32 OFFSET_ANG_DRAG
    static int _get_OFFSET_ANG_DRAG();
    // Set static field: static private System.Int32 OFFSET_ANG_DRAG
    static void _set_OFFSET_ANG_DRAG(int value);
    // static field const value: static private System.Int32 OFFSET_MASS
    static constexpr const int OFFSET_MASS = 22;
    // Get static field: static private System.Int32 OFFSET_MASS
    static int _get_OFFSET_MASS();
    // Set static field: static private System.Int32 OFFSET_MASS
    static void _set_OFFSET_MASS(int value);
    // static field const value: static private System.Int32 OFFSET_FLAGS
    static constexpr const int OFFSET_FLAGS = 23;
    // Get static field: static private System.Int32 OFFSET_FLAGS
    static int _get_OFFSET_FLAGS();
    // Set static field: static private System.Int32 OFFSET_FLAGS
    static void _set_OFFSET_FLAGS(int value);
    // static field const value: static protected System.Int32 WORD_COUNT_NRBB
    static constexpr const int WORD_COUNT_NRBB = 24;
    // Get static field: static protected System.Int32 WORD_COUNT_NRBB
    static int _get_WORD_COUNT_NRBB();
    // Set static field: static protected System.Int32 WORD_COUNT_NRBB
    static void _set_WORD_COUNT_NRBB(int value);
    // Get instance field reference: protected System.Boolean _forceSnapshotInterpolated
    [[deprecated("Use field access instead!")]] bool& dyn__forceSnapshotInterpolated();
    // Get instance field reference: private System.Boolean _initialized
    [[deprecated("Use field access instead!")]] bool& dyn__initialized();
    // protected System.Void SetIsKinematic(System.Boolean value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void SetIsKinematic(bool value);
    // protected System.Void SetCollisionDetectionMode(UnityEngine.CollisionDetectionMode mode)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void SetCollisionDetectionMode(::UnityEngine::CollisionDetectionMode mode);
    // private System.Void Init()
    // Offset: 0x2B1F32C
    void Init();
    // public System.Void StateAuthorityChanged()
    // Offset: 0x2B1C66C
    void StateAuthorityChanged();
    // public System.Single ReadDrag()
    // Offset: 0x2B1F518
    float ReadDrag();
    // public System.Single ReadDrag(System.Int32* ptr)
    // Offset: 0x2B1F554
    float ReadDrag(int* ptr);
    // static public System.Single ReadDrag(System.Int32* ptr, Fusion.ReadAccuracy readAccuracy)
    // Offset: 0x2B1F58C
    static float ReadDrag(int* ptr, ::Fusion::ReadAccuracy readAccuracy);
    // public System.Single ReadAngularDrag()
    // Offset: 0x2B1F5AC
    float ReadAngularDrag();
    // public System.Single ReadAngularDrag(System.Int32* ptr)
    // Offset: 0x2B1F5E8
    float ReadAngularDrag(int* ptr);
    // static public System.Single ReadAngularDrag(System.Int32* ptr, Fusion.ReadAccuracy readAccuracy)
    // Offset: 0x2B1F620
    static float ReadAngularDrag(int* ptr, ::Fusion::ReadAccuracy readAccuracy);
    // public System.Single ReadMass()
    // Offset: 0x2B1F640
    float ReadMass();
    // public System.Single ReadMass(System.Int32* ptr)
    // Offset: 0x2B1F67C
    float ReadMass(int* ptr);
    // static public System.Single ReadMass(System.Int32* ptr, Fusion.ReadAccuracy readAccuracy)
    // Offset: 0x2B1F6B4
    static float ReadMass(int* ptr, ::Fusion::ReadAccuracy readAccuracy);
    // public Fusion.NetworkRigidbodyBase/NetworkRigidbodyFlags ReadNetworkRigidbodyFlags()
    // Offset: 0x2B1F6D4
    ::Fusion::NetworkRigidbodyBase::NetworkRigidbodyFlags ReadNetworkRigidbodyFlags();
    // static public Fusion.NetworkRigidbodyBase/NetworkRigidbodyFlags ReadNetworkRigidbodyFlags(System.Int32* ptr)
    // Offset: 0x2B1F6E0
    static ::Fusion::NetworkRigidbodyBase::NetworkRigidbodyFlags ReadNetworkRigidbodyFlags(int* ptr);
    // protected System.Int32 ReadNetworkRigidbodyRawFlags()
    // Offset: 0x2B1F6E8
    int ReadNetworkRigidbodyRawFlags();
    // static protected System.Int32 ReadNetworkRigidbodyRawFlags(System.Int32* ptr)
    // Offset: 0x2B1F6F4
    static int ReadNetworkRigidbodyRawFlags(int* ptr);
    // protected UnityEngine.Vector3 ReadDragsAndMass()
    // Offset: 0x2B1F6FC
    ::UnityEngine::Vector3 ReadDragsAndMass();
    // protected UnityEngine.Vector3 ReadDragsAndMass(System.Int32* ptr)
    // Offset: 0x2B1F750
    ::UnityEngine::Vector3 ReadDragsAndMass(int* ptr);
    // static protected UnityEngine.Vector3 ReadDragsAndMass(System.Int32* ptr, Fusion.ReadAccuracy readAccuracy)
    // Offset: 0x2B1F7A0
    static ::UnityEngine::Vector3 ReadDragsAndMass(int* ptr, ::Fusion::ReadAccuracy readAccuracy);
    // public System.Void WriteDrag(System.Single drag)
    // Offset: 0x2B1F7DC
    void WriteDrag(float drag);
    // public System.Void WriteDrag(System.Single drag, System.Int32* ptr)
    // Offset: 0x2B1F844
    void WriteDrag(float drag, int* ptr);
    // static public System.Void WriteDrag(System.Single drag, System.Int32* ptr, Fusion.WriteAccuracy writeAccuracy)
    // Offset: 0x2B1F8A8
    static void WriteDrag(float drag, int* ptr, ::Fusion::WriteAccuracy writeAccuracy);
    // public System.Void WriteAngularDrag(System.Single angDrag)
    // Offset: 0x2B1F8F4
    void WriteAngularDrag(float angDrag);
    // public System.Void WriteAngularDrag(System.Single angDrag, System.Int32* ptr)
    // Offset: 0x2B1F95C
    void WriteAngularDrag(float angDrag, int* ptr);
    // static public System.Void WriteAngularDrag(System.Single angDrag, System.Int32* ptr, Fusion.WriteAccuracy writeAccuracy)
    // Offset: 0x2B1F9C0
    static void WriteAngularDrag(float angDrag, int* ptr, ::Fusion::WriteAccuracy writeAccuracy);
    // public System.Void WriteMass(System.Single mass)
    // Offset: 0x2B1FA0C
    void WriteMass(float mass);
    // public System.Void WriteMass(System.Single mass, System.Int32* ptr)
    // Offset: 0x2B1FA74
    void WriteMass(float mass, int* ptr);
    // static public System.Void WriteMass(System.Single mass, System.Int32* ptr, Fusion.WriteAccuracy writeAccuracy)
    // Offset: 0x2B1FAD8
    static void WriteMass(float mass, int* ptr, ::Fusion::WriteAccuracy writeAccuracy);
    // public System.Void WriteNetworkRigidbodyFlags(Fusion.NetworkRigidbodyBase/NetworkRigidbodyFlags flags)
    // Offset: 0x2B1FB24
    void WriteNetworkRigidbodyFlags(::Fusion::NetworkRigidbodyBase::NetworkRigidbodyFlags flags);
    // static public System.Void WriteNetworkRigidbodyFlags(Fusion.NetworkRigidbodyBase/NetworkRigidbodyFlags flags, System.Int32* ptr)
    // Offset: 0x2B1FB3C
    static void WriteNetworkRigidbodyFlags(::Fusion::NetworkRigidbodyBase::NetworkRigidbodyFlags flags, int* ptr);
    // protected System.Void WriteNetworkRigidbodyRawFlags(System.Int32 rawFlags)
    // Offset: 0x2B1FB50
    void WriteNetworkRigidbodyRawFlags(int rawFlags);
    // static protected System.Void WriteNetworkRigidbodyRawFlags(System.Int32 rawFlags, System.Int32* ptr)
    // Offset: 0x2B1FB5C
    static void WriteNetworkRigidbodyRawFlags(int rawFlags, int* ptr);
    // protected System.Void WriteDragsAndMass(UnityEngine.Vector3 values)
    // Offset: 0x2B1FB64
    void WriteDragsAndMass(::UnityEngine::Vector3 values);
    // protected System.Void WriteDragsAndMass(UnityEngine.Vector3 values, System.Int32* ptr)
    // Offset: 0x2B1FC14
    void WriteDragsAndMass(::UnityEngine::Vector3 values, int* ptr);
    // static protected System.Void WriteDragsAndMass(UnityEngine.Vector3 values, System.Int32* ptr, Fusion.WriteAccuracy writeAccuracy)
    // Offset: 0x2B1FCC0
    static void WriteDragsAndMass(::UnityEngine::Vector3 values, int* ptr, ::Fusion::WriteAccuracy writeAccuracy);
    // public override System.Void RemotePrefabCreated()
    // Offset: 0x2B1C62C
    // Implemented from: Fusion.NetworkPosition
    // Base method: System.Void NetworkPosition::RemotePrefabCreated()
    void RemotePrefabCreated();
    // public override System.Void CopyBackingFieldsToState(System.Boolean firstTime)
    // Offset: 0x2B1C734
    // Implemented from: Fusion.NetworkTransform
    // Base method: System.Void NetworkTransform::CopyBackingFieldsToState(System.Boolean firstTime)
    void CopyBackingFieldsToState(bool firstTime);
    // public override System.Void BeforeAllTicks(System.Boolean resimulation, System.Int32 tickCount)
    // Offset: 0x2B1F3EC
    // Implemented from: Fusion.NetworkPosition
    // Base method: System.Void NetworkPosition::BeforeAllTicks(System.Boolean resimulation, System.Int32 tickCount)
    void BeforeAllTicks(bool resimulation, int tickCount);
    // public override System.Void AfterAllTicks(System.Boolean resimulation, System.Int32 tickCount)
    // Offset: 0x2B1F428
    // Implemented from: Fusion.NetworkTransform
    // Base method: System.Void NetworkTransform::AfterAllTicks(System.Boolean resimulation, System.Int32 tickCount)
    void AfterAllTicks(bool resimulation, int tickCount);
    // public override System.Void BeforeCopyPreviousState()
    // Offset: 0x2B1F484
    // Implemented from: Fusion.NetworkPosition
    // Base method: System.Void NetworkPosition::BeforeCopyPreviousState()
    void BeforeCopyPreviousState();
    // public override System.Boolean IsInterpolationDataPredicted()
    // Offset: 0x2B1F4A0
    // Implemented from: Fusion.NetworkBehaviour
    // Base method: System.Boolean NetworkBehaviour::IsInterpolationDataPredicted()
    bool IsInterpolationDataPredicted();
    // protected override System.Int32 get_BaseWordCount()
    // Offset: 0x2B1F510
    // Implemented from: Fusion.NetworkTransform
    // Base method: System.Int32 NetworkTransform::get_BaseWordCount()
    int get_BaseWordCount();
    // protected System.Void .ctor()
    // Offset: 0x2B1DEBC
    // Implemented from: Fusion.NetworkTransform
    // Base method: System.Void NetworkTransform::.ctor()
    // Base method: System.Void NetworkPositionRotation::.ctor()
    // Base method: System.Void NetworkPosition::.ctor()
    // Base method: System.Void NetworkAreaOfInterestBehaviour::.ctor()
    // Base method: System.Void NetworkBehaviour::.ctor()
    // Base method: System.Void SimulationBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NetworkRigidbodyBase* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkRigidbodyBase::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NetworkRigidbodyBase*, creationType>()));
    }
  }; // Fusion.NetworkRigidbodyBase
  #pragma pack(pop)
  static check_size<sizeof(NetworkRigidbodyBase), 325 + sizeof(bool)> __Fusion_NetworkRigidbodyBaseSizeCheck;
  static_assert(sizeof(NetworkRigidbodyBase) == 0x146);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyBase::SetIsKinematic
// Il2CppName: SetIsKinematic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbodyBase::*)(bool)>(&Fusion::NetworkRigidbodyBase::SetIsKinematic)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyBase*), "SetIsKinematic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyBase::SetCollisionDetectionMode
// Il2CppName: SetCollisionDetectionMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbodyBase::*)(::UnityEngine::CollisionDetectionMode)>(&Fusion::NetworkRigidbodyBase::SetCollisionDetectionMode)> {
  static const MethodInfo* get() {
    static auto* mode = &::il2cpp_utils::GetClassFromName("UnityEngine", "CollisionDetectionMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyBase*), "SetCollisionDetectionMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mode});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyBase::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbodyBase::*)()>(&Fusion::NetworkRigidbodyBase::Init)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyBase*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyBase::StateAuthorityChanged
// Il2CppName: StateAuthorityChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbodyBase::*)()>(&Fusion::NetworkRigidbodyBase::StateAuthorityChanged)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyBase*), "StateAuthorityChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyBase::ReadDrag
// Il2CppName: ReadDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Fusion::NetworkRigidbodyBase::*)()>(&Fusion::NetworkRigidbodyBase::ReadDrag)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyBase*), "ReadDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyBase::ReadDrag
// Il2CppName: ReadDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Fusion::NetworkRigidbodyBase::*)(int*)>(&Fusion::NetworkRigidbodyBase::ReadDrag)> {
  static const MethodInfo* get() {
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyBase*), "ReadDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ptr});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyBase::ReadDrag
// Il2CppName: ReadDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(int*, ::Fusion::ReadAccuracy)>(&Fusion::NetworkRigidbodyBase::ReadDrag)> {
  static const MethodInfo* get() {
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* readAccuracy = &::il2cpp_utils::GetClassFromName("Fusion", "ReadAccuracy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyBase*), "ReadDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ptr, readAccuracy});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyBase::ReadAngularDrag
// Il2CppName: ReadAngularDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Fusion::NetworkRigidbodyBase::*)()>(&Fusion::NetworkRigidbodyBase::ReadAngularDrag)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyBase*), "ReadAngularDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyBase::ReadAngularDrag
// Il2CppName: ReadAngularDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Fusion::NetworkRigidbodyBase::*)(int*)>(&Fusion::NetworkRigidbodyBase::ReadAngularDrag)> {
  static const MethodInfo* get() {
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyBase*), "ReadAngularDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ptr});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyBase::ReadAngularDrag
// Il2CppName: ReadAngularDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(int*, ::Fusion::ReadAccuracy)>(&Fusion::NetworkRigidbodyBase::ReadAngularDrag)> {
  static const MethodInfo* get() {
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* readAccuracy = &::il2cpp_utils::GetClassFromName("Fusion", "ReadAccuracy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyBase*), "ReadAngularDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ptr, readAccuracy});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyBase::ReadMass
// Il2CppName: ReadMass
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Fusion::NetworkRigidbodyBase::*)()>(&Fusion::NetworkRigidbodyBase::ReadMass)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyBase*), "ReadMass", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyBase::ReadMass
// Il2CppName: ReadMass
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Fusion::NetworkRigidbodyBase::*)(int*)>(&Fusion::NetworkRigidbodyBase::ReadMass)> {
  static const MethodInfo* get() {
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyBase*), "ReadMass", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ptr});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyBase::ReadMass
// Il2CppName: ReadMass
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(int*, ::Fusion::ReadAccuracy)>(&Fusion::NetworkRigidbodyBase::ReadMass)> {
  static const MethodInfo* get() {
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* readAccuracy = &::il2cpp_utils::GetClassFromName("Fusion", "ReadAccuracy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyBase*), "ReadMass", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ptr, readAccuracy});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyBase::ReadNetworkRigidbodyFlags
// Il2CppName: ReadNetworkRigidbodyFlags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::NetworkRigidbodyBase::NetworkRigidbodyFlags (Fusion::NetworkRigidbodyBase::*)()>(&Fusion::NetworkRigidbodyBase::ReadNetworkRigidbodyFlags)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyBase*), "ReadNetworkRigidbodyFlags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyBase::ReadNetworkRigidbodyFlags
// Il2CppName: ReadNetworkRigidbodyFlags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::NetworkRigidbodyBase::NetworkRigidbodyFlags (*)(int*)>(&Fusion::NetworkRigidbodyBase::ReadNetworkRigidbodyFlags)> {
  static const MethodInfo* get() {
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyBase*), "ReadNetworkRigidbodyFlags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ptr});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyBase::ReadNetworkRigidbodyRawFlags
// Il2CppName: ReadNetworkRigidbodyRawFlags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Fusion::NetworkRigidbodyBase::*)()>(&Fusion::NetworkRigidbodyBase::ReadNetworkRigidbodyRawFlags)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyBase*), "ReadNetworkRigidbodyRawFlags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyBase::ReadNetworkRigidbodyRawFlags
// Il2CppName: ReadNetworkRigidbodyRawFlags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int*)>(&Fusion::NetworkRigidbodyBase::ReadNetworkRigidbodyRawFlags)> {
  static const MethodInfo* get() {
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyBase*), "ReadNetworkRigidbodyRawFlags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ptr});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyBase::ReadDragsAndMass
// Il2CppName: ReadDragsAndMass
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (Fusion::NetworkRigidbodyBase::*)()>(&Fusion::NetworkRigidbodyBase::ReadDragsAndMass)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyBase*), "ReadDragsAndMass", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyBase::ReadDragsAndMass
// Il2CppName: ReadDragsAndMass
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (Fusion::NetworkRigidbodyBase::*)(int*)>(&Fusion::NetworkRigidbodyBase::ReadDragsAndMass)> {
  static const MethodInfo* get() {
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyBase*), "ReadDragsAndMass", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ptr});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyBase::ReadDragsAndMass
// Il2CppName: ReadDragsAndMass
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (*)(int*, ::Fusion::ReadAccuracy)>(&Fusion::NetworkRigidbodyBase::ReadDragsAndMass)> {
  static const MethodInfo* get() {
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* readAccuracy = &::il2cpp_utils::GetClassFromName("Fusion", "ReadAccuracy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyBase*), "ReadDragsAndMass", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ptr, readAccuracy});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyBase::WriteDrag
// Il2CppName: WriteDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbodyBase::*)(float)>(&Fusion::NetworkRigidbodyBase::WriteDrag)> {
  static const MethodInfo* get() {
    static auto* drag = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyBase*), "WriteDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{drag});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyBase::WriteDrag
// Il2CppName: WriteDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbodyBase::*)(float, int*)>(&Fusion::NetworkRigidbodyBase::WriteDrag)> {
  static const MethodInfo* get() {
    static auto* drag = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyBase*), "WriteDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{drag, ptr});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyBase::WriteDrag
// Il2CppName: WriteDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(float, int*, ::Fusion::WriteAccuracy)>(&Fusion::NetworkRigidbodyBase::WriteDrag)> {
  static const MethodInfo* get() {
    static auto* drag = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* writeAccuracy = &::il2cpp_utils::GetClassFromName("Fusion", "WriteAccuracy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyBase*), "WriteDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{drag, ptr, writeAccuracy});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyBase::WriteAngularDrag
// Il2CppName: WriteAngularDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbodyBase::*)(float)>(&Fusion::NetworkRigidbodyBase::WriteAngularDrag)> {
  static const MethodInfo* get() {
    static auto* angDrag = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyBase*), "WriteAngularDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{angDrag});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyBase::WriteAngularDrag
// Il2CppName: WriteAngularDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbodyBase::*)(float, int*)>(&Fusion::NetworkRigidbodyBase::WriteAngularDrag)> {
  static const MethodInfo* get() {
    static auto* angDrag = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyBase*), "WriteAngularDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{angDrag, ptr});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyBase::WriteAngularDrag
// Il2CppName: WriteAngularDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(float, int*, ::Fusion::WriteAccuracy)>(&Fusion::NetworkRigidbodyBase::WriteAngularDrag)> {
  static const MethodInfo* get() {
    static auto* angDrag = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* writeAccuracy = &::il2cpp_utils::GetClassFromName("Fusion", "WriteAccuracy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyBase*), "WriteAngularDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{angDrag, ptr, writeAccuracy});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyBase::WriteMass
// Il2CppName: WriteMass
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbodyBase::*)(float)>(&Fusion::NetworkRigidbodyBase::WriteMass)> {
  static const MethodInfo* get() {
    static auto* mass = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyBase*), "WriteMass", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mass});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyBase::WriteMass
// Il2CppName: WriteMass
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbodyBase::*)(float, int*)>(&Fusion::NetworkRigidbodyBase::WriteMass)> {
  static const MethodInfo* get() {
    static auto* mass = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyBase*), "WriteMass", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mass, ptr});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyBase::WriteMass
// Il2CppName: WriteMass
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(float, int*, ::Fusion::WriteAccuracy)>(&Fusion::NetworkRigidbodyBase::WriteMass)> {
  static const MethodInfo* get() {
    static auto* mass = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* writeAccuracy = &::il2cpp_utils::GetClassFromName("Fusion", "WriteAccuracy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyBase*), "WriteMass", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mass, ptr, writeAccuracy});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyBase::WriteNetworkRigidbodyFlags
// Il2CppName: WriteNetworkRigidbodyFlags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbodyBase::*)(::Fusion::NetworkRigidbodyBase::NetworkRigidbodyFlags)>(&Fusion::NetworkRigidbodyBase::WriteNetworkRigidbodyFlags)> {
  static const MethodInfo* get() {
    static auto* flags = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRigidbodyBase/NetworkRigidbodyFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyBase*), "WriteNetworkRigidbodyFlags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{flags});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyBase::WriteNetworkRigidbodyFlags
// Il2CppName: WriteNetworkRigidbodyFlags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Fusion::NetworkRigidbodyBase::NetworkRigidbodyFlags, int*)>(&Fusion::NetworkRigidbodyBase::WriteNetworkRigidbodyFlags)> {
  static const MethodInfo* get() {
    static auto* flags = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRigidbodyBase/NetworkRigidbodyFlags")->byval_arg;
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyBase*), "WriteNetworkRigidbodyFlags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{flags, ptr});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyBase::WriteNetworkRigidbodyRawFlags
// Il2CppName: WriteNetworkRigidbodyRawFlags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbodyBase::*)(int)>(&Fusion::NetworkRigidbodyBase::WriteNetworkRigidbodyRawFlags)> {
  static const MethodInfo* get() {
    static auto* rawFlags = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyBase*), "WriteNetworkRigidbodyRawFlags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rawFlags});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyBase::WriteNetworkRigidbodyRawFlags
// Il2CppName: WriteNetworkRigidbodyRawFlags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, int*)>(&Fusion::NetworkRigidbodyBase::WriteNetworkRigidbodyRawFlags)> {
  static const MethodInfo* get() {
    static auto* rawFlags = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyBase*), "WriteNetworkRigidbodyRawFlags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rawFlags, ptr});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyBase::WriteDragsAndMass
// Il2CppName: WriteDragsAndMass
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbodyBase::*)(::UnityEngine::Vector3)>(&Fusion::NetworkRigidbodyBase::WriteDragsAndMass)> {
  static const MethodInfo* get() {
    static auto* values = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyBase*), "WriteDragsAndMass", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{values});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyBase::WriteDragsAndMass
// Il2CppName: WriteDragsAndMass
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbodyBase::*)(::UnityEngine::Vector3, int*)>(&Fusion::NetworkRigidbodyBase::WriteDragsAndMass)> {
  static const MethodInfo* get() {
    static auto* values = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyBase*), "WriteDragsAndMass", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{values, ptr});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyBase::WriteDragsAndMass
// Il2CppName: WriteDragsAndMass
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Vector3, int*, ::Fusion::WriteAccuracy)>(&Fusion::NetworkRigidbodyBase::WriteDragsAndMass)> {
  static const MethodInfo* get() {
    static auto* values = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* writeAccuracy = &::il2cpp_utils::GetClassFromName("Fusion", "WriteAccuracy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyBase*), "WriteDragsAndMass", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{values, ptr, writeAccuracy});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyBase::RemotePrefabCreated
// Il2CppName: RemotePrefabCreated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbodyBase::*)()>(&Fusion::NetworkRigidbodyBase::RemotePrefabCreated)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyBase*), "RemotePrefabCreated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyBase::CopyBackingFieldsToState
// Il2CppName: CopyBackingFieldsToState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbodyBase::*)(bool)>(&Fusion::NetworkRigidbodyBase::CopyBackingFieldsToState)> {
  static const MethodInfo* get() {
    static auto* firstTime = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyBase*), "CopyBackingFieldsToState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{firstTime});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyBase::BeforeAllTicks
// Il2CppName: BeforeAllTicks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbodyBase::*)(bool, int)>(&Fusion::NetworkRigidbodyBase::BeforeAllTicks)> {
  static const MethodInfo* get() {
    static auto* resimulation = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* tickCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyBase*), "BeforeAllTicks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{resimulation, tickCount});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyBase::AfterAllTicks
// Il2CppName: AfterAllTicks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbodyBase::*)(bool, int)>(&Fusion::NetworkRigidbodyBase::AfterAllTicks)> {
  static const MethodInfo* get() {
    static auto* resimulation = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* tickCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyBase*), "AfterAllTicks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{resimulation, tickCount});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyBase::BeforeCopyPreviousState
// Il2CppName: BeforeCopyPreviousState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbodyBase::*)()>(&Fusion::NetworkRigidbodyBase::BeforeCopyPreviousState)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyBase*), "BeforeCopyPreviousState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyBase::IsInterpolationDataPredicted
// Il2CppName: IsInterpolationDataPredicted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::NetworkRigidbodyBase::*)()>(&Fusion::NetworkRigidbodyBase::IsInterpolationDataPredicted)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyBase*), "IsInterpolationDataPredicted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyBase::get_BaseWordCount
// Il2CppName: get_BaseWordCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Fusion::NetworkRigidbodyBase::*)()>(&Fusion::NetworkRigidbodyBase::get_BaseWordCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyBase*), "get_BaseWordCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyBase::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
