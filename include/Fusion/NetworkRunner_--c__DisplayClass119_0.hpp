// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Fusion.NetworkRunner
#include "Fusion/NetworkRunner.hpp"
// Including type: Fusion.ShutdownReason
#include "Fusion/ShutdownReason.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Threading::Tasks
namespace System::Threading::Tasks {
  // Forward declaring type: Task
  class Task;
}
// Forward declaring namespace: System::Threading
namespace System::Threading {
  // Forward declaring type: CancellationToken
  struct CancellationToken;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::NetworkRunner::$$c__DisplayClass119_0);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::NetworkRunner::$$c__DisplayClass119_0*, "Fusion", "NetworkRunner/<>c__DisplayClass119_0");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x24
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.NetworkRunner/<>c__DisplayClass119_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class NetworkRunner::$$c__DisplayClass119_0 : public ::Il2CppObject {
    public:
    public:
    // public System.Boolean destroyGameObject
    // Size: 0x1
    // Offset: 0x10
    bool destroyGameObject;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: destroyGameObject and: $$4__this
    char __padding0[0x7] = {};
    // public Fusion.NetworkRunner <>4__this
    // Size: 0x8
    // Offset: 0x18
    ::Fusion::NetworkRunner* $$4__this;
    // Field size check
    static_assert(sizeof(::Fusion::NetworkRunner*) == 0x8);
    // public Fusion.ShutdownReason shutdownReason
    // Size: 0x4
    // Offset: 0x20
    ::Fusion::ShutdownReason shutdownReason;
    // Field size check
    static_assert(sizeof(::Fusion::ShutdownReason) == 0x4);
    public:
    // Get instance field reference: public System.Boolean destroyGameObject
    [[deprecated("Use field access instead!")]] bool& dyn_destroyGameObject();
    // Get instance field reference: public Fusion.NetworkRunner <>4__this
    [[deprecated("Use field access instead!")]] ::Fusion::NetworkRunner*& dyn_$$4__this();
    // Get instance field reference: public Fusion.ShutdownReason shutdownReason
    [[deprecated("Use field access instead!")]] ::Fusion::ShutdownReason& dyn_shutdownReason();
    // public System.Void .ctor()
    // Offset: 0x2B66CB4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NetworkRunner::$$c__DisplayClass119_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkRunner::$$c__DisplayClass119_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NetworkRunner::$$c__DisplayClass119_0*, creationType>()));
    }
    // System.Threading.Tasks.Task <Shutdown>g__ContinueTasksWithDestroy|0(System.Threading.Tasks.Task[] precedingTasks)
    // Offset: 0x2B66CBC
    ::System::Threading::Tasks::Task* $Shutdown$g__ContinueTasksWithDestroy_0(::ArrayW<::System::Threading::Tasks::Task*> precedingTasks);
    // System.Threading.Tasks.Task <Shutdown>b__3(System.Threading.CancellationToken token)
    // Offset: 0x2B66D88
    ::System::Threading::Tasks::Task* $Shutdown$b__3(::System::Threading::CancellationToken token);
    // System.Void <Shutdown>g__InvokeOnShutdownCallbacks|1()
    // Offset: 0x2B66F10
    void $Shutdown$g__InvokeOnShutdownCallbacks_1();
  }; // Fusion.NetworkRunner/<>c__DisplayClass119_0
  #pragma pack(pop)
  static check_size<sizeof(NetworkRunner::$$c__DisplayClass119_0), 32 + sizeof(::Fusion::ShutdownReason)> __Fusion_NetworkRunner_$$c__DisplayClass119_0SizeCheck;
  static_assert(sizeof(NetworkRunner::$$c__DisplayClass119_0) == 0x24);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::NetworkRunner::$$c__DisplayClass119_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Fusion::NetworkRunner::$$c__DisplayClass119_0::$Shutdown$g__ContinueTasksWithDestroy_0
// Il2CppName: <Shutdown>g__ContinueTasksWithDestroy|0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task* (Fusion::NetworkRunner::$$c__DisplayClass119_0::*)(::ArrayW<::System::Threading::Tasks::Task*>)>(&Fusion::NetworkRunner::$$c__DisplayClass119_0::$Shutdown$g__ContinueTasksWithDestroy_0)> {
  static const MethodInfo* get() {
    static auto* precedingTasks = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System.Threading.Tasks", "Task"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRunner::$$c__DisplayClass119_0*), "<Shutdown>g__ContinueTasksWithDestroy|0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{precedingTasks});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRunner::$$c__DisplayClass119_0::$Shutdown$b__3
// Il2CppName: <Shutdown>b__3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task* (Fusion::NetworkRunner::$$c__DisplayClass119_0::*)(::System::Threading::CancellationToken)>(&Fusion::NetworkRunner::$$c__DisplayClass119_0::$Shutdown$b__3)> {
  static const MethodInfo* get() {
    static auto* token = &::il2cpp_utils::GetClassFromName("System.Threading", "CancellationToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRunner::$$c__DisplayClass119_0*), "<Shutdown>b__3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{token});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRunner::$$c__DisplayClass119_0::$Shutdown$g__InvokeOnShutdownCallbacks_1
// Il2CppName: <Shutdown>g__InvokeOnShutdownCallbacks|1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRunner::$$c__DisplayClass119_0::*)()>(&Fusion::NetworkRunner::$$c__DisplayClass119_0::$Shutdown$g__InvokeOnShutdownCallbacks_1)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRunner::$$c__DisplayClass119_0*), "<Shutdown>g__InvokeOnShutdownCallbacks|1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
