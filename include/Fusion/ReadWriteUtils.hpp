// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Fusion
namespace Fusion {
  // Forward declaring type: WriteAccuracy
  struct WriteAccuracy;
  // Forward declaring type: ReadAccuracy
  struct ReadAccuracy;
  // Forward declaring type: NetworkRunner
  class NetworkRunner;
  // Forward declaring type: NetworkBehaviour
  class NetworkBehaviour;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Vector2
  struct Vector2;
  // Forward declaring type: Vector3
  struct Vector3;
  // Forward declaring type: Quaternion
  struct Quaternion;
}
// Completed forward declares
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: ReadWriteUtils
  class ReadWriteUtils;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::ReadWriteUtils);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::ReadWriteUtils*, "Fusion", "ReadWriteUtils");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.ReadWriteUtils
  // [TokenAttribute] Offset: FFFFFFFF
  class ReadWriteUtils : public ::Il2CppObject {
    public:
    // static public System.Void WriteFloat(System.Int32* data, Fusion.WriteAccuracy writeAccuracy, System.Single value)
    // Offset: 0x2B49854
    static void WriteFloat(int* data, ::Fusion::WriteAccuracy writeAccuracy, float value);
    // static public System.Single ReadFloat(System.Int32* data, Fusion.ReadAccuracy readAccuracy)
    // Offset: 0x2B498A0
    static float ReadFloat(int* data, ::Fusion::ReadAccuracy readAccuracy);
    // static public System.Void WriteVector2(System.Int32* data, Fusion.WriteAccuracy writeAccuracy, UnityEngine.Vector2 value)
    // Offset: 0x2B498C0
    static void WriteVector2(int* data, ::Fusion::WriteAccuracy writeAccuracy, ::UnityEngine::Vector2 value);
    // static public UnityEngine.Vector2 ReadVector2(System.Int32* data, Fusion.ReadAccuracy readAccuracy)
    // Offset: 0x2B4992C
    static ::UnityEngine::Vector2 ReadVector2(int* data, ::Fusion::ReadAccuracy readAccuracy);
    // static public System.Void WriteVector3(System.Int32* data, Fusion.WriteAccuracy writeAccuracy, UnityEngine.Vector3 value)
    // Offset: 0x2B49958
    static void WriteVector3(int* data, ::Fusion::WriteAccuracy writeAccuracy, ::UnityEngine::Vector3 value);
    // static public UnityEngine.Vector3 ReadVector3(System.Int32* data, Fusion.ReadAccuracy readAccuracy)
    // Offset: 0x2B499EC
    static ::UnityEngine::Vector3 ReadVector3(int* data, ::Fusion::ReadAccuracy readAccuracy);
    // static public System.Void WriteQuaternion(System.Int32* data, Fusion.WriteAccuracy writeAccuracy, UnityEngine.Quaternion value)
    // Offset: 0x2B49A28
    static void WriteQuaternion(int* data, ::Fusion::WriteAccuracy writeAccuracy, ::UnityEngine::Quaternion value);
    // static public UnityEngine.Quaternion ReadQuaternion(System.Int32* data, Fusion.ReadAccuracy readAccuracy)
    // Offset: 0x2B49ADC
    static ::UnityEngine::Quaternion ReadQuaternion(int* data, ::Fusion::ReadAccuracy readAccuracy);
    // static public System.Void WriteEmptyNetworkBehaviourRef(System.Int32* data)
    // Offset: 0x2B49B20
    static void WriteEmptyNetworkBehaviourRef(int* data);
    // static public System.Void WriteNullkBehaviourRef(System.Int32* data)
    // Offset: 0x2B49B28
    static void WriteNullkBehaviourRef(int* data);
    // static public System.Void WriteNetworkBehaviourRef(System.Int32* data, Fusion.NetworkRunner runner, Fusion.NetworkBehaviour reference)
    // Offset: 0x2B49B34
    static void WriteNetworkBehaviourRef(int* data, ::Fusion::NetworkRunner* runner, ::Fusion::NetworkBehaviour* reference);
    // static public Fusion.NetworkBehaviour ReadNetworkBehaviourRef(System.Int32* data, Fusion.NetworkRunner runner, out System.Boolean isValid)
    // Offset: 0x2B49B58
    static ::Fusion::NetworkBehaviour* ReadNetworkBehaviourRef(int* data, ::Fusion::NetworkRunner* runner, ByRef<bool> isValid);
  }; // Fusion.ReadWriteUtils
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::ReadWriteUtils::WriteFloat
// Il2CppName: WriteFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int*, ::Fusion::WriteAccuracy, float)>(&Fusion::ReadWriteUtils::WriteFloat)> {
  static const MethodInfo* get() {
    static auto* data = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* writeAccuracy = &::il2cpp_utils::GetClassFromName("Fusion", "WriteAccuracy")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::ReadWriteUtils*), "WriteFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, writeAccuracy, value});
  }
};
// Writing MetadataGetter for method: Fusion::ReadWriteUtils::ReadFloat
// Il2CppName: ReadFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(int*, ::Fusion::ReadAccuracy)>(&Fusion::ReadWriteUtils::ReadFloat)> {
  static const MethodInfo* get() {
    static auto* data = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* readAccuracy = &::il2cpp_utils::GetClassFromName("Fusion", "ReadAccuracy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::ReadWriteUtils*), "ReadFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, readAccuracy});
  }
};
// Writing MetadataGetter for method: Fusion::ReadWriteUtils::WriteVector2
// Il2CppName: WriteVector2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int*, ::Fusion::WriteAccuracy, ::UnityEngine::Vector2)>(&Fusion::ReadWriteUtils::WriteVector2)> {
  static const MethodInfo* get() {
    static auto* data = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* writeAccuracy = &::il2cpp_utils::GetClassFromName("Fusion", "WriteAccuracy")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::ReadWriteUtils*), "WriteVector2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, writeAccuracy, value});
  }
};
// Writing MetadataGetter for method: Fusion::ReadWriteUtils::ReadVector2
// Il2CppName: ReadVector2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (*)(int*, ::Fusion::ReadAccuracy)>(&Fusion::ReadWriteUtils::ReadVector2)> {
  static const MethodInfo* get() {
    static auto* data = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* readAccuracy = &::il2cpp_utils::GetClassFromName("Fusion", "ReadAccuracy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::ReadWriteUtils*), "ReadVector2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, readAccuracy});
  }
};
// Writing MetadataGetter for method: Fusion::ReadWriteUtils::WriteVector3
// Il2CppName: WriteVector3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int*, ::Fusion::WriteAccuracy, ::UnityEngine::Vector3)>(&Fusion::ReadWriteUtils::WriteVector3)> {
  static const MethodInfo* get() {
    static auto* data = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* writeAccuracy = &::il2cpp_utils::GetClassFromName("Fusion", "WriteAccuracy")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::ReadWriteUtils*), "WriteVector3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, writeAccuracy, value});
  }
};
// Writing MetadataGetter for method: Fusion::ReadWriteUtils::ReadVector3
// Il2CppName: ReadVector3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (*)(int*, ::Fusion::ReadAccuracy)>(&Fusion::ReadWriteUtils::ReadVector3)> {
  static const MethodInfo* get() {
    static auto* data = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* readAccuracy = &::il2cpp_utils::GetClassFromName("Fusion", "ReadAccuracy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::ReadWriteUtils*), "ReadVector3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, readAccuracy});
  }
};
// Writing MetadataGetter for method: Fusion::ReadWriteUtils::WriteQuaternion
// Il2CppName: WriteQuaternion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int*, ::Fusion::WriteAccuracy, ::UnityEngine::Quaternion)>(&Fusion::ReadWriteUtils::WriteQuaternion)> {
  static const MethodInfo* get() {
    static auto* data = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* writeAccuracy = &::il2cpp_utils::GetClassFromName("Fusion", "WriteAccuracy")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::ReadWriteUtils*), "WriteQuaternion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, writeAccuracy, value});
  }
};
// Writing MetadataGetter for method: Fusion::ReadWriteUtils::ReadQuaternion
// Il2CppName: ReadQuaternion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Quaternion (*)(int*, ::Fusion::ReadAccuracy)>(&Fusion::ReadWriteUtils::ReadQuaternion)> {
  static const MethodInfo* get() {
    static auto* data = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* readAccuracy = &::il2cpp_utils::GetClassFromName("Fusion", "ReadAccuracy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::ReadWriteUtils*), "ReadQuaternion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, readAccuracy});
  }
};
// Writing MetadataGetter for method: Fusion::ReadWriteUtils::WriteEmptyNetworkBehaviourRef
// Il2CppName: WriteEmptyNetworkBehaviourRef
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int*)>(&Fusion::ReadWriteUtils::WriteEmptyNetworkBehaviourRef)> {
  static const MethodInfo* get() {
    static auto* data = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::ReadWriteUtils*), "WriteEmptyNetworkBehaviourRef", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data});
  }
};
// Writing MetadataGetter for method: Fusion::ReadWriteUtils::WriteNullkBehaviourRef
// Il2CppName: WriteNullkBehaviourRef
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int*)>(&Fusion::ReadWriteUtils::WriteNullkBehaviourRef)> {
  static const MethodInfo* get() {
    static auto* data = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::ReadWriteUtils*), "WriteNullkBehaviourRef", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data});
  }
};
// Writing MetadataGetter for method: Fusion::ReadWriteUtils::WriteNetworkBehaviourRef
// Il2CppName: WriteNetworkBehaviourRef
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int*, ::Fusion::NetworkRunner*, ::Fusion::NetworkBehaviour*)>(&Fusion::ReadWriteUtils::WriteNetworkBehaviourRef)> {
  static const MethodInfo* get() {
    static auto* data = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    static auto* reference = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkBehaviour")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::ReadWriteUtils*), "WriteNetworkBehaviourRef", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, runner, reference});
  }
};
// Writing MetadataGetter for method: Fusion::ReadWriteUtils::ReadNetworkBehaviourRef
// Il2CppName: ReadNetworkBehaviourRef
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::NetworkBehaviour* (*)(int*, ::Fusion::NetworkRunner*, ByRef<bool>)>(&Fusion::ReadWriteUtils::ReadNetworkBehaviourRef)> {
  static const MethodInfo* get() {
    static auto* data = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    static auto* isValid = &::il2cpp_utils::GetClassFromName("System", "Boolean")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::ReadWriteUtils*), "ReadNetworkBehaviourRef", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, runner, isValid});
  }
};
