// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Fusion.SimulationMessage
#include "Fusion/SimulationMessage.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Fusion::SimulationMessage::BuiltInFlags, "Fusion", "SimulationMessage/BuiltInFlags");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.SimulationMessage/BuiltInFlags
  // [TokenAttribute] Offset: FFFFFFFF
  // [FlagsAttribute] Offset: FFFFFFFF
  struct SimulationMessage::BuiltInFlags/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: BuiltInFlags
    constexpr BuiltInFlags(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public Fusion.SimulationMessage/BuiltInFlags USER_MESSAGE
    static constexpr const int USER_MESSAGE = 1;
    // Get static field: static public Fusion.SimulationMessage/BuiltInFlags USER_MESSAGE
    static ::Fusion::SimulationMessage::BuiltInFlags _get_USER_MESSAGE();
    // Set static field: static public Fusion.SimulationMessage/BuiltInFlags USER_MESSAGE
    static void _set_USER_MESSAGE(::Fusion::SimulationMessage::BuiltInFlags value);
    // static field const value: static public Fusion.SimulationMessage/BuiltInFlags REMOTE
    static constexpr const int REMOTE = 2;
    // Get static field: static public Fusion.SimulationMessage/BuiltInFlags REMOTE
    static ::Fusion::SimulationMessage::BuiltInFlags _get_REMOTE();
    // Set static field: static public Fusion.SimulationMessage/BuiltInFlags REMOTE
    static void _set_REMOTE(::Fusion::SimulationMessage::BuiltInFlags value);
    // static field const value: static public Fusion.SimulationMessage/BuiltInFlags STATIC
    static constexpr const int STATIC = 4;
    // Get static field: static public Fusion.SimulationMessage/BuiltInFlags STATIC
    static ::Fusion::SimulationMessage::BuiltInFlags _get_STATIC();
    // Set static field: static public Fusion.SimulationMessage/BuiltInFlags STATIC
    static void _set_STATIC(::Fusion::SimulationMessage::BuiltInFlags value);
    // static field const value: static public Fusion.SimulationMessage/BuiltInFlags UNRELIABLE
    static constexpr const int UNRELIABLE = 8;
    // Get static field: static public Fusion.SimulationMessage/BuiltInFlags UNRELIABLE
    static ::Fusion::SimulationMessage::BuiltInFlags _get_UNRELIABLE();
    // Set static field: static public Fusion.SimulationMessage/BuiltInFlags UNRELIABLE
    static void _set_UNRELIABLE(::Fusion::SimulationMessage::BuiltInFlags value);
    // static field const value: static public Fusion.SimulationMessage/BuiltInFlags TARGET_PLAYER
    static constexpr const int TARGET_PLAYER = 16;
    // Get static field: static public Fusion.SimulationMessage/BuiltInFlags TARGET_PLAYER
    static ::Fusion::SimulationMessage::BuiltInFlags _get_TARGET_PLAYER();
    // Set static field: static public Fusion.SimulationMessage/BuiltInFlags TARGET_PLAYER
    static void _set_TARGET_PLAYER(::Fusion::SimulationMessage::BuiltInFlags value);
    // static field const value: static public Fusion.SimulationMessage/BuiltInFlags TARGET_SERVER
    static constexpr const int TARGET_SERVER = 32;
    // Get static field: static public Fusion.SimulationMessage/BuiltInFlags TARGET_SERVER
    static ::Fusion::SimulationMessage::BuiltInFlags _get_TARGET_SERVER();
    // Set static field: static public Fusion.SimulationMessage/BuiltInFlags TARGET_SERVER
    static void _set_TARGET_SERVER(::Fusion::SimulationMessage::BuiltInFlags value);
    // static field const value: static public Fusion.SimulationMessage/BuiltInFlags NOT_TICK_ALIGNED
    static constexpr const int NOT_TICK_ALIGNED = 128;
    // Get static field: static public Fusion.SimulationMessage/BuiltInFlags NOT_TICK_ALIGNED
    static ::Fusion::SimulationMessage::BuiltInFlags _get_NOT_TICK_ALIGNED();
    // Set static field: static public Fusion.SimulationMessage/BuiltInFlags NOT_TICK_ALIGNED
    static void _set_NOT_TICK_ALIGNED(::Fusion::SimulationMessage::BuiltInFlags value);
    // static field const value: static public Fusion.SimulationMessage/BuiltInFlags DUMMY
    static constexpr const int DUMMY = 256;
    // Get static field: static public Fusion.SimulationMessage/BuiltInFlags DUMMY
    static ::Fusion::SimulationMessage::BuiltInFlags _get_DUMMY();
    // Set static field: static public Fusion.SimulationMessage/BuiltInFlags DUMMY
    static void _set_DUMMY(::Fusion::SimulationMessage::BuiltInFlags value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // Fusion.SimulationMessage/BuiltInFlags
  #pragma pack(pop)
  static check_size<sizeof(SimulationMessage::BuiltInFlags), 0 + sizeof(int)> __Fusion_SimulationMessage_BuiltInFlagsSizeCheck;
  static_assert(sizeof(SimulationMessage::BuiltInFlags) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
