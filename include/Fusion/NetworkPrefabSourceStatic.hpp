// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Fusion.INetworkPrefabSource
#include "Fusion/INetworkPrefabSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Fusion
namespace Fusion {
  // Forward declaring type: NetworkObject
  class NetworkObject;
  // Forward declaring type: NetworkPrefabLoadContext
  struct NetworkPrefabLoadContext;
}
// Completed forward declares
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: NetworkPrefabSourceStatic
  class NetworkPrefabSourceStatic;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::NetworkPrefabSourceStatic);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::NetworkPrefabSourceStatic*, "Fusion", "NetworkPrefabSourceStatic");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.NetworkPrefabSourceStatic
  // [TokenAttribute] Offset: FFFFFFFF
  class NetworkPrefabSourceStatic : public ::Il2CppObject/*, public ::Fusion::INetworkPrefabSource*/ {
    public:
    public:
    // public Fusion.NetworkObject PrefabReference
    // Size: 0x8
    // Offset: 0x10
    ::Fusion::NetworkObject* PrefabReference;
    // Field size check
    static_assert(sizeof(::Fusion::NetworkObject*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::Fusion::INetworkPrefabSource
    operator ::Fusion::INetworkPrefabSource() noexcept {
      return *reinterpret_cast<::Fusion::INetworkPrefabSource*>(this);
    }
    // Creating conversion operator: operator ::Fusion::NetworkObject*
    constexpr operator ::Fusion::NetworkObject*() const noexcept {
      return PrefabReference;
    }
    // Get instance field reference: public Fusion.NetworkObject PrefabReference
    [[deprecated("Use field access instead!")]] ::Fusion::NetworkObject*& dyn_PrefabReference();
    // private System.String Fusion.INetworkPrefabSource.get_EditorSummary()
    // Offset: 0x2B4F298
    ::StringW Fusion_INetworkPrefabSource_get_EditorSummary();
    // private System.Void Fusion.INetworkPrefabSource.Load(in Fusion.NetworkPrefabLoadContext context)
    // Offset: 0x2B4F2E4
    void Fusion_INetworkPrefabSource_Load(ByRef<::Fusion::NetworkPrefabLoadContext> context);
    // private System.Void Fusion.INetworkPrefabSource.Unload()
    // Offset: 0x2B4F2F4
    void Fusion_INetworkPrefabSource_Unload();
    // public System.Void .ctor()
    // Offset: 0x2B4F2F8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NetworkPrefabSourceStatic* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkPrefabSourceStatic::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NetworkPrefabSourceStatic*, creationType>()));
    }
  }; // Fusion.NetworkPrefabSourceStatic
  #pragma pack(pop)
  static check_size<sizeof(NetworkPrefabSourceStatic), 16 + sizeof(::Fusion::NetworkObject*)> __Fusion_NetworkPrefabSourceStaticSizeCheck;
  static_assert(sizeof(NetworkPrefabSourceStatic) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::NetworkPrefabSourceStatic::Fusion_INetworkPrefabSource_get_EditorSummary
// Il2CppName: Fusion.INetworkPrefabSource.get_EditorSummary
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Fusion::NetworkPrefabSourceStatic::*)()>(&Fusion::NetworkPrefabSourceStatic::Fusion_INetworkPrefabSource_get_EditorSummary)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkPrefabSourceStatic*), "Fusion.INetworkPrefabSource.get_EditorSummary", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkPrefabSourceStatic::Fusion_INetworkPrefabSource_Load
// Il2CppName: Fusion.INetworkPrefabSource.Load
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkPrefabSourceStatic::*)(ByRef<::Fusion::NetworkPrefabLoadContext>)>(&Fusion::NetworkPrefabSourceStatic::Fusion_INetworkPrefabSource_Load)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkPrefabLoadContext")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkPrefabSourceStatic*), "Fusion.INetworkPrefabSource.Load", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkPrefabSourceStatic::Fusion_INetworkPrefabSource_Unload
// Il2CppName: Fusion.INetworkPrefabSource.Unload
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkPrefabSourceStatic::*)()>(&Fusion::NetworkPrefabSourceStatic::Fusion_INetworkPrefabSource_Unload)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkPrefabSourceStatic*), "Fusion.INetworkPrefabSource.Unload", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkPrefabSourceStatic::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
