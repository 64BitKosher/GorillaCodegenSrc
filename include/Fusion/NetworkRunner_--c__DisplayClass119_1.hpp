// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Fusion.NetworkRunner
#include "Fusion/NetworkRunner.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Threading::Tasks
namespace System::Threading::Tasks {
  // Forward declaring type: TaskCompletionSource`1<TResult>
  template<typename TResult>
  class TaskCompletionSource_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: AsyncOperation
  class AsyncOperation;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::NetworkRunner::$$c__DisplayClass119_1);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::NetworkRunner::$$c__DisplayClass119_1*, "Fusion", "NetworkRunner/<>c__DisplayClass119_1");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.NetworkRunner/<>c__DisplayClass119_1
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class NetworkRunner::$$c__DisplayClass119_1 : public ::Il2CppObject {
    public:
    public:
    // public System.Threading.Tasks.TaskCompletionSource`1<System.Int32> completionSource
    // Size: 0x8
    // Offset: 0x10
    ::System::Threading::Tasks::TaskCompletionSource_1<int>* completionSource;
    // Field size check
    static_assert(sizeof(::System::Threading::Tasks::TaskCompletionSource_1<int>*) == 0x8);
    public:
    // Creating conversion operator: operator ::System::Threading::Tasks::TaskCompletionSource_1<int>*
    constexpr operator ::System::Threading::Tasks::TaskCompletionSource_1<int>*() const noexcept {
      return completionSource;
    }
    // Get instance field reference: public System.Threading.Tasks.TaskCompletionSource`1<System.Int32> completionSource
    [[deprecated("Use field access instead!")]] ::System::Threading::Tasks::TaskCompletionSource_1<int>*& dyn_completionSource();
    // public System.Void .ctor()
    // Offset: 0x2B6710C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NetworkRunner::$$c__DisplayClass119_1* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkRunner::$$c__DisplayClass119_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NetworkRunner::$$c__DisplayClass119_1*, creationType>()));
    }
    // System.Void <Shutdown>b__2(UnityEngine.AsyncOperation _)
    // Offset: 0x2B67114
    void $Shutdown$b__2(::UnityEngine::AsyncOperation* _);
  }; // Fusion.NetworkRunner/<>c__DisplayClass119_1
  #pragma pack(pop)
  static check_size<sizeof(NetworkRunner::$$c__DisplayClass119_1), 16 + sizeof(::System::Threading::Tasks::TaskCompletionSource_1<int>*)> __Fusion_NetworkRunner_$$c__DisplayClass119_1SizeCheck;
  static_assert(sizeof(NetworkRunner::$$c__DisplayClass119_1) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::NetworkRunner::$$c__DisplayClass119_1::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Fusion::NetworkRunner::$$c__DisplayClass119_1::$Shutdown$b__2
// Il2CppName: <Shutdown>b__2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRunner::$$c__DisplayClass119_1::*)(::UnityEngine::AsyncOperation*)>(&Fusion::NetworkRunner::$$c__DisplayClass119_1::$Shutdown$b__2)> {
  static const MethodInfo* get() {
    static auto* _ = &::il2cpp_utils::GetClassFromName("UnityEngine", "AsyncOperation")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRunner::$$c__DisplayClass119_1*), "<Shutdown>b__2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{_});
  }
};
