// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Fusion.NetworkRigidbodyBaseObsolete
#include "Fusion/NetworkRigidbodyBaseObsolete.hpp"
// Including type: Fusion.IStateAuthorityChanged
#include "Fusion/IStateAuthorityChanged.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Rigidbody2D
  class Rigidbody2D;
  // Skipping declaration: Quaternion because it is already included!
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: ValueTuple`2<T1, T2>
  template<typename T1, typename T2>
  struct ValueTuple_2;
}
// Forward declaring namespace: Fusion
namespace Fusion {
  // Forward declaring type: ReadAccuracy
  struct ReadAccuracy;
}
// Completed forward declares
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: NetworkRigidbodyObsolete2D
  class NetworkRigidbodyObsolete2D;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::NetworkRigidbodyObsolete2D);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::NetworkRigidbodyObsolete2D*, "Fusion", "NetworkRigidbodyObsolete2D");
// Type namespace: Fusion
namespace Fusion {
  // WARNING Size may be invalid!
  // Autogenerated type: Fusion.NetworkRigidbodyObsolete2D
  // [TokenAttribute] Offset: FFFFFFFF
  // [DisallowMultipleComponent] Offset: FFFFFFFF
  // [NetworkBehaviourWeavedAttribute] Offset: FFFFFFFF
  // [SimulationBehaviourAttribute] Offset: FFFFFFFF
  // [RequireComponent] Offset: FFFFFFFF
  // [ObsoleteAttribute] Offset: FFFFFFFF
  class NetworkRigidbodyObsolete2D : public ::Fusion::NetworkRigidbodyBaseObsolete/*, public ::Fusion::IStateAuthorityChanged*/ {
    public:
    public:
    // private System.Nullable`1<UnityEngine.Vector3> _lastPos
    // Size: 0xFFFFFFFF
    // Offset: 0x174
    ::System::Nullable_1<::UnityEngine::Vector3> lastPos;
    // private System.Nullable`1<System.Single> _lastRot
    // Size: 0xFFFFFFFF
    // Offset: 0x184
    ::System::Nullable_1<float> lastRot;
    // private UnityEngine.Rigidbody2D _rigidbody2D
    // Size: 0x8
    // Offset: 0x190
    ::UnityEngine::Rigidbody2D* rigidbody2D;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rigidbody2D*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::Fusion::IStateAuthorityChanged
    operator ::Fusion::IStateAuthorityChanged() noexcept {
      return *reinterpret_cast<::Fusion::IStateAuthorityChanged*>(this);
    }
    // Get instance field reference: private System.Nullable`1<UnityEngine.Vector3> _lastPos
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<::UnityEngine::Vector3>& dyn__lastPos();
    // Get instance field reference: private System.Nullable`1<System.Single> _lastRot
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<float>& dyn__lastRot();
    // Get instance field reference: private UnityEngine.Rigidbody2D _rigidbody2D
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody2D*& dyn__rigidbody2D();
    // public UnityEngine.Rigidbody2D get_Rigidbody()
    // Offset: 0x2B2D064
    ::UnityEngine::Rigidbody2D* get_Rigidbody();
    // protected System.ValueTuple`2<UnityEngine.Vector3,System.Single> ReadBufferAndConvertToWorldSpace(System.Int32 offset)
    // Offset: 0x2B2D894
    ::System::ValueTuple_2<::UnityEngine::Vector3, float> ReadBufferAndConvertToWorldSpace(int offset);
    // private System.Boolean LastPosRotMatches(UnityEngine.Vector3 pos, System.Single rot)
    // Offset: 0x2B2DA28
    bool LastPosRotMatches(::UnityEngine::Vector3 pos, float rot);
    // private System.Void Fusion.IStateAuthorityChanged.StateAuthorityChanged()
    // Offset: 0x2B2E370
    void Fusion_IStateAuthorityChanged_StateAuthorityChanged();
    // override System.Void SetIsKinematic(System.Boolean value)
    // Offset: 0x2B2D10C
    // Implemented from: Fusion.NetworkRigidbodyBaseObsolete
    // Base method: System.Void NetworkRigidbodyBaseObsolete::SetIsKinematic(System.Boolean value)
    void SetIsKinematic(bool value);
    // protected override System.Void OnEnable()
    // Offset: 0x2B2D12C
    // Implemented from: Fusion.NetworkTransformAnchor
    // Base method: System.Void NetworkTransformAnchor::OnEnable()
    void OnEnable();
    // protected override System.Void Awake()
    // Offset: 0x2B2D1AC
    // Implemented from: Fusion.NetworkTransformObsolete
    // Base method: System.Void NetworkTransformObsolete::Awake()
    void Awake();
    // public override System.Void CopyBackingFieldsToState(System.Boolean firstTime)
    // Offset: 0x2B2D200
    // Implemented from: Fusion.NetworkRigidbodyBaseObsolete
    // Base method: System.Void NetworkRigidbodyBaseObsolete::CopyBackingFieldsToState(System.Boolean firstTime)
    void CopyBackingFieldsToState(bool firstTime);
    // public override System.Void Spawned()
    // Offset: 0x2B2D298
    // Implemented from: Fusion.NetworkRigidbodyBaseObsolete
    // Base method: System.Void NetworkRigidbodyBaseObsolete::Spawned()
    void Spawned();
    // override System.Void CopyBuffers2Engine(System.Boolean posRotOnly)
    // Offset: 0x2B2D418
    // Implemented from: Fusion.NetworkTransformObsolete
    // Base method: System.Void NetworkTransformObsolete::CopyBuffers2Engine(System.Boolean posRotOnly)
    void CopyBuffers2Engine(bool posRotOnly);
    // override System.Void Copy2BuffersFlags()
    // Offset: 0x2B2DB1C
    // Implemented from: Fusion.NetworkRigidbodyBaseObsolete
    // Base method: System.Void NetworkRigidbodyBaseObsolete::Copy2BuffersFlags()
    void Copy2BuffersFlags();
    // protected override System.Void Copy2BufferTRSState(System.Int32 offset)
    // Offset: 0x2B2DBB0
    // Implemented from: Fusion.NetworkTransformObsolete
    // Base method: System.Void NetworkTransformObsolete::Copy2BufferTRSState(System.Int32 offset)
    void Copy2BufferTRSState(int offset);
    // protected override System.Void Copy2EngineTRSState(System.Int32 offset)
    // Offset: 0x2B2DDB0
    // Implemented from: Fusion.NetworkTransformObsolete
    // Base method: System.Void NetworkTransformObsolete::Copy2EngineTRSState(System.Int32 offset)
    void Copy2EngineTRSState(int offset);
    // override System.Void CopyEngine2Buffers(System.Boolean posRotOnly)
    // Offset: 0x2B2DE0C
    // Implemented from: Fusion.NetworkTransformObsolete
    // Base method: System.Void NetworkTransformObsolete::CopyEngine2Buffers(System.Boolean posRotOnly)
    void CopyEngine2Buffers(bool posRotOnly);
    // protected override System.Void ApplyQueuedTeleport()
    // Offset: 0x2B2E0A4
    // Implemented from: Fusion.NetworkTransformObsolete
    // Base method: System.Void NetworkTransformObsolete::ApplyQueuedTeleport()
    void ApplyQueuedTeleport();
    // protected override UnityEngine.Quaternion ReadRotationToQuaternion(System.Int32* offset, Fusion.ReadAccuracy readAccuracy)
    // Offset: 0x2B2E338
    // Implemented from: Fusion.NetworkTransformObsolete
    // Base method: UnityEngine.Quaternion NetworkTransformObsolete::ReadRotationToQuaternion(System.Int32* offset, Fusion.ReadAccuracy readAccuracy)
    ::UnityEngine::Quaternion ReadRotationToQuaternion(int* offset, ::Fusion::ReadAccuracy readAccuracy);
    // public System.Void .ctor()
    // Offset: 0x2B2E388
    // Implemented from: Fusion.NetworkRigidbodyBaseObsolete
    // Base method: System.Void NetworkRigidbodyBaseObsolete::.ctor()
    // Base method: System.Void NetworkTransformObsolete::.ctor()
    // Base method: System.Void NetworkTransformAnchor::.ctor()
    // Base method: System.Void NetworkAreaOfInterestBehaviour::.ctor()
    // Base method: System.Void NetworkBehaviour::.ctor()
    // Base method: System.Void SimulationBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NetworkRigidbodyObsolete2D* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkRigidbodyObsolete2D::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NetworkRigidbodyObsolete2D*, creationType>()));
    }
  }; // Fusion.NetworkRigidbodyObsolete2D
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyObsolete2D::get_Rigidbody
// Il2CppName: get_Rigidbody
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rigidbody2D* (Fusion::NetworkRigidbodyObsolete2D::*)()>(&Fusion::NetworkRigidbodyObsolete2D::get_Rigidbody)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyObsolete2D*), "get_Rigidbody", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyObsolete2D::ReadBufferAndConvertToWorldSpace
// Il2CppName: ReadBufferAndConvertToWorldSpace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::ValueTuple_2<::UnityEngine::Vector3, float> (Fusion::NetworkRigidbodyObsolete2D::*)(int)>(&Fusion::NetworkRigidbodyObsolete2D::ReadBufferAndConvertToWorldSpace)> {
  static const MethodInfo* get() {
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyObsolete2D*), "ReadBufferAndConvertToWorldSpace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{offset});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyObsolete2D::LastPosRotMatches
// Il2CppName: LastPosRotMatches
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::NetworkRigidbodyObsolete2D::*)(::UnityEngine::Vector3, float)>(&Fusion::NetworkRigidbodyObsolete2D::LastPosRotMatches)> {
  static const MethodInfo* get() {
    static auto* pos = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* rot = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyObsolete2D*), "LastPosRotMatches", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pos, rot});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyObsolete2D::Fusion_IStateAuthorityChanged_StateAuthorityChanged
// Il2CppName: Fusion.IStateAuthorityChanged.StateAuthorityChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbodyObsolete2D::*)()>(&Fusion::NetworkRigidbodyObsolete2D::Fusion_IStateAuthorityChanged_StateAuthorityChanged)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyObsolete2D*), "Fusion.IStateAuthorityChanged.StateAuthorityChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyObsolete2D::SetIsKinematic
// Il2CppName: SetIsKinematic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbodyObsolete2D::*)(bool)>(&Fusion::NetworkRigidbodyObsolete2D::SetIsKinematic)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyObsolete2D*), "SetIsKinematic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyObsolete2D::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbodyObsolete2D::*)()>(&Fusion::NetworkRigidbodyObsolete2D::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyObsolete2D*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyObsolete2D::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbodyObsolete2D::*)()>(&Fusion::NetworkRigidbodyObsolete2D::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyObsolete2D*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyObsolete2D::CopyBackingFieldsToState
// Il2CppName: CopyBackingFieldsToState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbodyObsolete2D::*)(bool)>(&Fusion::NetworkRigidbodyObsolete2D::CopyBackingFieldsToState)> {
  static const MethodInfo* get() {
    static auto* firstTime = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyObsolete2D*), "CopyBackingFieldsToState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{firstTime});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyObsolete2D::Spawned
// Il2CppName: Spawned
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbodyObsolete2D::*)()>(&Fusion::NetworkRigidbodyObsolete2D::Spawned)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyObsolete2D*), "Spawned", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyObsolete2D::CopyBuffers2Engine
// Il2CppName: CopyBuffers2Engine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbodyObsolete2D::*)(bool)>(&Fusion::NetworkRigidbodyObsolete2D::CopyBuffers2Engine)> {
  static const MethodInfo* get() {
    static auto* posRotOnly = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyObsolete2D*), "CopyBuffers2Engine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{posRotOnly});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyObsolete2D::Copy2BuffersFlags
// Il2CppName: Copy2BuffersFlags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbodyObsolete2D::*)()>(&Fusion::NetworkRigidbodyObsolete2D::Copy2BuffersFlags)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyObsolete2D*), "Copy2BuffersFlags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyObsolete2D::Copy2BufferTRSState
// Il2CppName: Copy2BufferTRSState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbodyObsolete2D::*)(int)>(&Fusion::NetworkRigidbodyObsolete2D::Copy2BufferTRSState)> {
  static const MethodInfo* get() {
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyObsolete2D*), "Copy2BufferTRSState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{offset});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyObsolete2D::Copy2EngineTRSState
// Il2CppName: Copy2EngineTRSState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbodyObsolete2D::*)(int)>(&Fusion::NetworkRigidbodyObsolete2D::Copy2EngineTRSState)> {
  static const MethodInfo* get() {
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyObsolete2D*), "Copy2EngineTRSState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{offset});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyObsolete2D::CopyEngine2Buffers
// Il2CppName: CopyEngine2Buffers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbodyObsolete2D::*)(bool)>(&Fusion::NetworkRigidbodyObsolete2D::CopyEngine2Buffers)> {
  static const MethodInfo* get() {
    static auto* posRotOnly = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyObsolete2D*), "CopyEngine2Buffers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{posRotOnly});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyObsolete2D::ApplyQueuedTeleport
// Il2CppName: ApplyQueuedTeleport
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkRigidbodyObsolete2D::*)()>(&Fusion::NetworkRigidbodyObsolete2D::ApplyQueuedTeleport)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyObsolete2D*), "ApplyQueuedTeleport", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyObsolete2D::ReadRotationToQuaternion
// Il2CppName: ReadRotationToQuaternion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Quaternion (Fusion::NetworkRigidbodyObsolete2D::*)(int*, ::Fusion::ReadAccuracy)>(&Fusion::NetworkRigidbodyObsolete2D::ReadRotationToQuaternion)> {
  static const MethodInfo* get() {
    static auto* offset = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* readAccuracy = &::il2cpp_utils::GetClassFromName("Fusion", "ReadAccuracy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRigidbodyObsolete2D*), "ReadRotationToQuaternion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{offset, readAccuracy});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkRigidbodyObsolete2D::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
