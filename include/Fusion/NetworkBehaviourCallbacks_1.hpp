// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Fusion.NetworkBehaviourCallbackReference
#include "Fusion/NetworkBehaviourCallbackReference.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Fusion
namespace Fusion {
  // Skipping declaration: <>c__DisplayClass0_0 because it is already included!
  // Forward declaring type: NetworkBehaviour
  class NetworkBehaviour;
  // Forward declaring type: NetworkBehaviourCallbacks
  class NetworkBehaviourCallbacks;
  // Forward declaring type: ChangedDelegate`1<T>
  template<typename T>
  class ChangedDelegate_1;
}
// Completed forward declares
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: NetworkBehaviourCallbacks`1<T>
  template<typename T>
  class NetworkBehaviourCallbacks_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::Fusion::NetworkBehaviourCallbacks_1, "Fusion", "NetworkBehaviourCallbacks`1");
// Type namespace: Fusion
namespace Fusion {
  // WARNING Size may be invalid!
  // Autogenerated type: Fusion.NetworkBehaviourCallbacks`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename T>
  class NetworkBehaviourCallbacks_1 : public ::Il2CppObject {
    public:
    // Nested type: ::Fusion::NetworkBehaviourCallbacks_1::$$c__DisplayClass0_0<T>
    class $$c__DisplayClass0_0;
    // WARNING Size may be invalid!
    // Autogenerated type: Fusion.NetworkBehaviourCallbacks`1/<>c__DisplayClass0_0
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    class $$c__DisplayClass0_0 : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = NetworkBehaviourCallbacks_1<T>*;
      static constexpr std::string_view NESTED_NAME = "<>c__DisplayClass0_0";
      static constexpr bool IS_VALUE_TYPE = false;
      public:
      // public Fusion.ChangedDelegate`1<T> callback
      // Size: 0x8
      // Offset: 0x0
      ::Fusion::ChangedDelegate_1<T>* callback;
      // Field size check
      static_assert(sizeof(::Fusion::ChangedDelegate_1<T>*) == 0x8);
      public:
      // Creating conversion operator: operator ::Fusion::ChangedDelegate_1<T>*
      constexpr operator ::Fusion::ChangedDelegate_1<T>*() const noexcept {
        return callback;
      }
      // Autogenerated instance field getter
      // Get instance field: public Fusion.ChangedDelegate`1<T> callback
      [[deprecated("Use field access instead!")]] ::Fusion::ChangedDelegate_1<T>*& dyn_callback() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkBehaviourCallbacks_1::$$c__DisplayClass0_0::dyn_callback");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
        return *reinterpret_cast<::Fusion::ChangedDelegate_1<T>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename NetworkBehaviourCallbacks_1<T>::$$c__DisplayClass0_0* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkBehaviourCallbacks_1::$$c__DisplayClass0_0::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename NetworkBehaviourCallbacks_1<T>::$$c__DisplayClass0_0*, creationType>()));
      }
      // System.Boolean <RegisterCallback>b__0(Fusion.NetworkBehaviour behaviour, System.Int32* old)
      // Offset: 0xFFFFFFFFFFFFFFFF
      bool $RegisterCallback$b__0(::Fusion::NetworkBehaviour* behaviour, int* old) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkBehaviourCallbacks_1::$$c__DisplayClass0_0::<RegisterCallback>b__0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RegisterCallback>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(behaviour), ::il2cpp_utils::ExtractType(old)})));
        return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, behaviour, old);
      }
    }; // Fusion.NetworkBehaviourCallbacks`1/<>c__DisplayClass0_0
    // Could not write size check! Type: Fusion.NetworkBehaviourCallbacks`1/<>c__DisplayClass0_0 is generic, or has no fields that are valid for size checks!
    // static public Fusion.NetworkBehaviourCallbackReference RegisterCallback(Fusion.NetworkBehaviourCallbacks nbc, System.Int32 offset, System.Int32 count, System.Int32 mask, Fusion.ChangedDelegate`1<T> callback)
    // Offset: 0xFFFFFFFFFFFFFFFF
    static ::Fusion::NetworkBehaviourCallbackReference RegisterCallback(::Fusion::NetworkBehaviourCallbacks* nbc, int offset, int count, int mask, ::Fusion::ChangedDelegate_1<T>* callback) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkBehaviourCallbacks_1::RegisterCallback");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<NetworkBehaviourCallbacks_1<T>*>::get(), "RegisterCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nbc), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(callback)})));
      return ::il2cpp_utils::RunMethodRethrow<::Fusion::NetworkBehaviourCallbackReference, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nbc, offset, count, mask, callback);
    }
    // public System.Void .ctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NetworkBehaviourCallbacks_1<T>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkBehaviourCallbacks_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NetworkBehaviourCallbacks_1<T>*, creationType>()));
    }
  }; // Fusion.NetworkBehaviourCallbacks`1
  // Could not write size check! Type: Fusion.NetworkBehaviourCallbacks`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
