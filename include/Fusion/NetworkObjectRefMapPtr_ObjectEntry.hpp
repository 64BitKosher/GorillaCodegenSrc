// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Fusion.NetworkObjectRefMapPtr
#include "Fusion/NetworkObjectRefMapPtr.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: Fusion.NetworkId
#include "Fusion/NetworkId.hpp"
// Including type: Fusion.Ptr
#include "Fusion/Ptr.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Fusion::NetworkObjectRefMapPtr::ObjectEntry, "Fusion", "NetworkObjectRefMapPtr/ObjectEntry");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x8
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: Fusion.NetworkObjectRefMapPtr/ObjectEntry
  // [TokenAttribute] Offset: FFFFFFFF
  struct NetworkObjectRefMapPtr::ObjectEntry/*, public ::System::ValueType*/ {
    public:
    public:
    // public Fusion.NetworkId Id
    // Size: 0x4
    // Offset: 0x0
    ::Fusion::NetworkId Id;
    // Field size check
    static_assert(sizeof(::Fusion::NetworkId) == 0x4);
    // public Fusion.Ptr Ptr
    // Size: 0x4
    // Offset: 0x4
    ::Fusion::Ptr Ptr;
    // Field size check
    static_assert(sizeof(::Fusion::Ptr) == 0x4);
    public:
    // Creating value type constructor for type: ObjectEntry
    constexpr ObjectEntry(::Fusion::NetworkId Id_ = {}, ::Fusion::Ptr Ptr_ = {}) noexcept : Id{Id_}, Ptr{Ptr_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public Fusion.NetworkId Id
    [[deprecated("Use field access instead!")]] ::Fusion::NetworkId& dyn_Id();
    // Get instance field reference: public Fusion.Ptr Ptr
    [[deprecated("Use field access instead!")]] ::Fusion::Ptr& dyn_Ptr();
  }; // Fusion.NetworkObjectRefMapPtr/ObjectEntry
  #pragma pack(pop)
  static check_size<sizeof(NetworkObjectRefMapPtr::ObjectEntry), 4 + sizeof(::Fusion::Ptr)> __Fusion_NetworkObjectRefMapPtr_ObjectEntrySizeCheck;
  static_assert(sizeof(NetworkObjectRefMapPtr::ObjectEntry) == 0x8);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
