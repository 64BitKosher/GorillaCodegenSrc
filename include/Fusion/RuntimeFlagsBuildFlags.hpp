// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: RuntimeFlagsBuildFlags
  struct RuntimeFlagsBuildFlags;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Fusion::RuntimeFlagsBuildFlags, "Fusion", "RuntimeFlagsBuildFlags");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.RuntimeFlagsBuildFlags
  // [TokenAttribute] Offset: FFFFFFFF
  // [FlagsAttribute] Offset: FFFFFFFF
  struct RuntimeFlagsBuildFlags/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: RuntimeFlagsBuildFlags
    constexpr RuntimeFlagsBuildFlags(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public Fusion.RuntimeFlagsBuildFlags NONE
    static constexpr const int NONE = 0;
    // Get static field: static public Fusion.RuntimeFlagsBuildFlags NONE
    static ::Fusion::RuntimeFlagsBuildFlags _get_NONE();
    // Set static field: static public Fusion.RuntimeFlagsBuildFlags NONE
    static void _set_NONE(::Fusion::RuntimeFlagsBuildFlags value);
    // static field const value: static public Fusion.RuntimeFlagsBuildFlags UNITY_WEBGL
    static constexpr const int UNITY_WEBGL = 2;
    // Get static field: static public Fusion.RuntimeFlagsBuildFlags UNITY_WEBGL
    static ::Fusion::RuntimeFlagsBuildFlags _get_UNITY_WEBGL();
    // Set static field: static public Fusion.RuntimeFlagsBuildFlags UNITY_WEBGL
    static void _set_UNITY_WEBGL(::Fusion::RuntimeFlagsBuildFlags value);
    // static field const value: static public Fusion.RuntimeFlagsBuildFlags UNITY_XBOXONE
    static constexpr const int UNITY_XBOXONE = 4;
    // Get static field: static public Fusion.RuntimeFlagsBuildFlags UNITY_XBOXONE
    static ::Fusion::RuntimeFlagsBuildFlags _get_UNITY_XBOXONE();
    // Set static field: static public Fusion.RuntimeFlagsBuildFlags UNITY_XBOXONE
    static void _set_UNITY_XBOXONE(::Fusion::RuntimeFlagsBuildFlags value);
    // static field const value: static public Fusion.RuntimeFlagsBuildFlags UNITY_GAMECORE
    static constexpr const int UNITY_GAMECORE = 8;
    // Get static field: static public Fusion.RuntimeFlagsBuildFlags UNITY_GAMECORE
    static ::Fusion::RuntimeFlagsBuildFlags _get_UNITY_GAMECORE();
    // Set static field: static public Fusion.RuntimeFlagsBuildFlags UNITY_GAMECORE
    static void _set_UNITY_GAMECORE(::Fusion::RuntimeFlagsBuildFlags value);
    // static field const value: static public Fusion.RuntimeFlagsBuildFlags UNITY_EDITOR
    static constexpr const int UNITY_EDITOR = 16;
    // Get static field: static public Fusion.RuntimeFlagsBuildFlags UNITY_EDITOR
    static ::Fusion::RuntimeFlagsBuildFlags _get_UNITY_EDITOR();
    // Set static field: static public Fusion.RuntimeFlagsBuildFlags UNITY_EDITOR
    static void _set_UNITY_EDITOR(::Fusion::RuntimeFlagsBuildFlags value);
    // static field const value: static public Fusion.RuntimeFlagsBuildFlags UNITY_SWITCH
    static constexpr const int UNITY_SWITCH = 32;
    // Get static field: static public Fusion.RuntimeFlagsBuildFlags UNITY_SWITCH
    static ::Fusion::RuntimeFlagsBuildFlags _get_UNITY_SWITCH();
    // Set static field: static public Fusion.RuntimeFlagsBuildFlags UNITY_SWITCH
    static void _set_UNITY_SWITCH(::Fusion::RuntimeFlagsBuildFlags value);
    // static field const value: static public Fusion.RuntimeFlagsBuildFlags UNITY_2019_4_OR_NEWER
    static constexpr const int UNITY_2019_4_OR_NEWER = 64;
    // Get static field: static public Fusion.RuntimeFlagsBuildFlags UNITY_2019_4_OR_NEWER
    static ::Fusion::RuntimeFlagsBuildFlags _get_UNITY_2019_4_OR_NEWER();
    // Set static field: static public Fusion.RuntimeFlagsBuildFlags UNITY_2019_4_OR_NEWER
    static void _set_UNITY_2019_4_OR_NEWER(::Fusion::RuntimeFlagsBuildFlags value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // Fusion.RuntimeFlagsBuildFlags
  #pragma pack(pop)
  static check_size<sizeof(RuntimeFlagsBuildFlags), 0 + sizeof(int)> __Fusion_RuntimeFlagsBuildFlagsSizeCheck;
  static_assert(sizeof(RuntimeFlagsBuildFlags) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
