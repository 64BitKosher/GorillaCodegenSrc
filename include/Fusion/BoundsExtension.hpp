// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Bounds
  struct Bounds;
}
// Completed forward declares
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: BoundsExtension
  class BoundsExtension;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::BoundsExtension);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::BoundsExtension*, "Fusion", "BoundsExtension");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.BoundsExtension
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class BoundsExtension : public ::Il2CppObject {
    public:
    // static System.Boolean ContainBounds(UnityEngine.Bounds bounds, UnityEngine.Bounds target)
    // Offset: 0x2B34A04
    static bool ContainBounds(::UnityEngine::Bounds bounds, ::UnityEngine::Bounds target);
  }; // Fusion.BoundsExtension
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::BoundsExtension::ContainBounds
// Il2CppName: ContainBounds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::Bounds, ::UnityEngine::Bounds)>(&Fusion::BoundsExtension::ContainBounds)> {
  static const MethodInfo* get() {
    static auto* bounds = &::il2cpp_utils::GetClassFromName("UnityEngine", "Bounds")->byval_arg;
    static auto* target = &::il2cpp_utils::GetClassFromName("UnityEngine", "Bounds")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::BoundsExtension*), "ContainBounds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bounds, target});
  }
};
