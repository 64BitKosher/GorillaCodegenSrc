// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Fusion.NetworkId
#include "Fusion/NetworkId.hpp"
// Including type: Fusion.Tick
#include "Fusion/Tick.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Queue`1<T>
  template<typename T>
  class Queue_1;
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
  // Forward declaring type: Nullable`1<T>
  template<typename T>
  struct Nullable_1;
}
// Forward declaring namespace: Fusion
namespace Fusion {
  // Forward declaring type: Allocator
  struct Allocator;
  // Skipping declaration: NetworkObjectConnectionData because it is already included!
}
// Completed forward declares
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: SimulationConnectionObjectData
  class SimulationConnectionObjectData;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::SimulationConnectionObjectData);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::SimulationConnectionObjectData*, "Fusion", "SimulationConnectionObjectData");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.SimulationConnectionObjectData
  // [TokenAttribute] Offset: FFFFFFFF
  class SimulationConnectionObjectData : public ::Il2CppObject {
    public:
    // Nested type: ::Fusion::SimulationConnectionObjectData::NetworkObjectConnectionData
    struct NetworkObjectConnectionData;
    // Nested type: ::Fusion::SimulationConnectionObjectData::NetworkObjectConnectionDataStatus
    struct NetworkObjectConnectionDataStatus;
    // Size: 0x10
    #pragma pack(push, 1)
    // WARNING Layout: Sequential may not be correctly taken into account!
    // Autogenerated type: Fusion.SimulationConnectionObjectData/NetworkObjectConnectionData
    // [TokenAttribute] Offset: FFFFFFFF
    struct NetworkObjectConnectionData/*, public ::System::ValueType*/ {
      public:
      public:
      // public Fusion.Tick Tick
      // Size: 0x4
      // Offset: 0x0
      ::Fusion::Tick Tick;
      // Field size check
      static_assert(sizeof(::Fusion::Tick) == 0x4);
      // public Fusion.SimulationConnectionObjectData/NetworkObjectConnectionDataStatus Status
      // Size: 0x4
      // Offset: 0x4
      ::Fusion::SimulationConnectionObjectData::NetworkObjectConnectionDataStatus Status;
      // Field size check
      static_assert(sizeof(::Fusion::SimulationConnectionObjectData::NetworkObjectConnectionDataStatus) == 0x4);
      // public System.Int32* Groups
      // Size: 0x8
      // Offset: 0x8
      int* Groups;
      // Field size check
      static_assert(sizeof(int*) == 0x8);
      public:
      // Creating value type constructor for type: NetworkObjectConnectionData
      constexpr NetworkObjectConnectionData(::Fusion::Tick Tick_ = {}, ::Fusion::SimulationConnectionObjectData::NetworkObjectConnectionDataStatus Status_ = {}, int* Groups_ = {}) noexcept : Tick{Tick_}, Status{Status_}, Groups{Groups_} {}
      // Creating interface conversion operator: operator ::System::ValueType
      operator ::System::ValueType() noexcept {
        return *reinterpret_cast<::System::ValueType*>(this);
      }
      // Get instance field reference: public Fusion.Tick Tick
      [[deprecated("Use field access instead!")]] ::Fusion::Tick& dyn_Tick();
      // Get instance field reference: public Fusion.SimulationConnectionObjectData/NetworkObjectConnectionDataStatus Status
      [[deprecated("Use field access instead!")]] ::Fusion::SimulationConnectionObjectData::NetworkObjectConnectionDataStatus& dyn_Status();
      // Get instance field reference: public System.Int32* Groups
      [[deprecated("Use field access instead!")]] int*& dyn_Groups();
    }; // Fusion.SimulationConnectionObjectData/NetworkObjectConnectionData
    #pragma pack(pop)
    static check_size<sizeof(SimulationConnectionObjectData::NetworkObjectConnectionData), 8 + sizeof(int*)> __Fusion_SimulationConnectionObjectData_NetworkObjectConnectionDataSizeCheck;
    static_assert(sizeof(SimulationConnectionObjectData::NetworkObjectConnectionData) == 0x10);
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: Fusion.SimulationConnectionObjectData/NetworkObjectConnectionDataStatus
    // [TokenAttribute] Offset: FFFFFFFF
    struct NetworkObjectConnectionDataStatus/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: NetworkObjectConnectionDataStatus
      constexpr NetworkObjectConnectionDataStatus(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public Fusion.SimulationConnectionObjectData/NetworkObjectConnectionDataStatus CreatedUnconfirmed
      static constexpr const int CreatedUnconfirmed = 0;
      // Get static field: static public Fusion.SimulationConnectionObjectData/NetworkObjectConnectionDataStatus CreatedUnconfirmed
      static ::Fusion::SimulationConnectionObjectData::NetworkObjectConnectionDataStatus _get_CreatedUnconfirmed();
      // Set static field: static public Fusion.SimulationConnectionObjectData/NetworkObjectConnectionDataStatus CreatedUnconfirmed
      static void _set_CreatedUnconfirmed(::Fusion::SimulationConnectionObjectData::NetworkObjectConnectionDataStatus value);
      // static field const value: static public Fusion.SimulationConnectionObjectData/NetworkObjectConnectionDataStatus CreatedConfirmed
      static constexpr const int CreatedConfirmed = 1;
      // Get static field: static public Fusion.SimulationConnectionObjectData/NetworkObjectConnectionDataStatus CreatedConfirmed
      static ::Fusion::SimulationConnectionObjectData::NetworkObjectConnectionDataStatus _get_CreatedConfirmed();
      // Set static field: static public Fusion.SimulationConnectionObjectData/NetworkObjectConnectionDataStatus CreatedConfirmed
      static void _set_CreatedConfirmed(::Fusion::SimulationConnectionObjectData::NetworkObjectConnectionDataStatus value);
      // static field const value: static public Fusion.SimulationConnectionObjectData/NetworkObjectConnectionDataStatus DestroyUnconfirmed
      static constexpr const int DestroyUnconfirmed = 2;
      // Get static field: static public Fusion.SimulationConnectionObjectData/NetworkObjectConnectionDataStatus DestroyUnconfirmed
      static ::Fusion::SimulationConnectionObjectData::NetworkObjectConnectionDataStatus _get_DestroyUnconfirmed();
      // Set static field: static public Fusion.SimulationConnectionObjectData/NetworkObjectConnectionDataStatus DestroyUnconfirmed
      static void _set_DestroyUnconfirmed(::Fusion::SimulationConnectionObjectData::NetworkObjectConnectionDataStatus value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // Fusion.SimulationConnectionObjectData/NetworkObjectConnectionDataStatus
    #pragma pack(pop)
    static check_size<sizeof(SimulationConnectionObjectData::NetworkObjectConnectionDataStatus), 0 + sizeof(int)> __Fusion_SimulationConnectionObjectData_NetworkObjectConnectionDataStatusSizeCheck;
    static_assert(sizeof(SimulationConnectionObjectData::NetworkObjectConnectionDataStatus) == 0x4);
    public:
    // private System.Collections.Generic.Dictionary`2<Fusion.NetworkId,Fusion.SimulationConnectionObjectData/NetworkObjectConnectionData> _objects
    // Size: 0x8
    // Offset: 0x10
    ::System::Collections::Generic::Dictionary_2<::Fusion::NetworkId, ::Fusion::SimulationConnectionObjectData::NetworkObjectConnectionData>* objects;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::Fusion::NetworkId, ::Fusion::SimulationConnectionObjectData::NetworkObjectConnectionData>*) == 0x8);
    // private System.Collections.Generic.Queue`1<Fusion.NetworkId> _destroyed
    // Size: 0x8
    // Offset: 0x18
    ::System::Collections::Generic::Queue_1<::Fusion::NetworkId>* destroyed;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Queue_1<::Fusion::NetworkId>*) == 0x8);
    public:
    // static field const value: static private System.String LogPrefix
    static constexpr const char* LogPrefix = "[ECData] ";
    // Get static field: static private System.String LogPrefix
    static ::StringW _get_LogPrefix();
    // Set static field: static private System.String LogPrefix
    static void _set_LogPrefix(::StringW value);
    // Get instance field reference: private System.Collections.Generic.Dictionary`2<Fusion.NetworkId,Fusion.SimulationConnectionObjectData/NetworkObjectConnectionData> _objects
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::Fusion::NetworkId, ::Fusion::SimulationConnectionObjectData::NetworkObjectConnectionData>*& dyn__objects();
    // Get instance field reference: private System.Collections.Generic.Queue`1<Fusion.NetworkId> _destroyed
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<::Fusion::NetworkId>*& dyn__destroyed();
    // public System.Int32 get_DestroyedCount()
    // Offset: 0x2B7CAA8
    int get_DestroyedCount();
    // public System.Void .ctor()
    // Offset: 0x2B82D04
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SimulationConnectionObjectData* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationConnectionObjectData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SimulationConnectionObjectData*, creationType>()));
    }
    // public Fusion.NetworkId DestroyedNextId()
    // Offset: 0x2B7CAF0
    ::Fusion::NetworkId DestroyedNextId();
    // public System.Void Clear()
    // Offset: 0x2B82EF8
    void Clear();
    // public System.Void SetCreateConfirmed(Fusion.NetworkId id)
    // Offset: 0x2B7E874
    void SetCreateConfirmed(::Fusion::NetworkId id);
    // public System.Void SetCreateConfirmed(Fusion.NetworkId id, Fusion.Tick tick)
    // Offset: 0x2B831F0
    void SetCreateConfirmed(::Fusion::NetworkId id, ::Fusion::Tick tick);
    // public System.Void SetDestroyConfirmed(Fusion.NetworkId id)
    // Offset: 0x2B7E81C
    void SetDestroyConfirmed(::Fusion::NetworkId id);
    // public System.Void SetDestroyed(Fusion.NetworkId id)
    // Offset: 0x2B7D994
    void SetDestroyed(::Fusion::NetworkId id);
    // public System.Void SetSentTick(Fusion.NetworkId id, Fusion.Tick tick)
    // Offset: 0x2B7E3DC
    void SetSentTick(::Fusion::NetworkId id, ::Fusion::Tick tick);
    // public System.Int32* GetOrAllocGroups(Fusion.NetworkId id, Fusion.Allocator* allocator)
    // Offset: 0x2B7EC8C
    int* GetOrAllocGroups(::Fusion::NetworkId id, ::Fusion::Allocator* allocator);
    // public System.Int32* GetGroups(Fusion.NetworkId id)
    // Offset: 0x2B83354
    int* GetGroups(::Fusion::NetworkId id);
    // public System.Void EnsureExist(Fusion.NetworkId id)
    // Offset: 0x2B833E8
    void EnsureExist(::Fusion::NetworkId id);
    // public System.Void EnsureExist(Fusion.NetworkId id, out Fusion.Tick sentTick, out System.Boolean isCreateUnconfirmed, out System.Int32* interestGroups)
    // Offset: 0x2B7E2FC
    void EnsureExist(::Fusion::NetworkId id, ByRef<::Fusion::Tick> sentTick, ByRef<bool> isCreateUnconfirmed, ByRef<int*> interestGroups);
    // public System.Nullable`1<System.Boolean> IsCreateUnconfirmed(Fusion.NetworkId id)
    // Offset: 0x2B83484
    ::System::Nullable_1<bool> IsCreateUnconfirmed(::Fusion::NetworkId id);
    // public System.Nullable`1<System.Boolean> IsDestroyUnconfirmed(Fusion.NetworkId id)
    // Offset: 0x2B7F6BC
    ::System::Nullable_1<bool> IsDestroyUnconfirmed(::Fusion::NetworkId id);
    // public Fusion.Tick GetSentTick(Fusion.NetworkId id)
    // Offset: 0x2B83514
    ::Fusion::Tick GetSentTick(::Fusion::NetworkId id);
    // private System.Boolean TryGetData(Fusion.NetworkId id, out Fusion.SimulationConnectionObjectData/NetworkObjectConnectionData data)
    // Offset: 0x2B83380
    bool TryGetData(::Fusion::NetworkId id, ByRef<::Fusion::SimulationConnectionObjectData::NetworkObjectConnectionData> data);
    // private Fusion.SimulationConnectionObjectData/NetworkObjectConnectionData GetOrCreateData(Fusion.NetworkId id)
    // Offset: 0x2B832A0
    ::Fusion::SimulationConnectionObjectData::NetworkObjectConnectionData GetOrCreateData(::Fusion::NetworkId id);
    // private System.Boolean TryUpdate(Fusion.NetworkId id, System.Nullable`1<Fusion.SimulationConnectionObjectData/NetworkObjectConnectionDataStatus> status, System.Nullable`1<Fusion.Tick> tick)
    // Offset: 0x2B83098
    bool TryUpdate(::Fusion::NetworkId id, ::System::Nullable_1<::Fusion::SimulationConnectionObjectData::NetworkObjectConnectionDataStatus> status, ::System::Nullable_1<::Fusion::Tick> tick);
  }; // Fusion.SimulationConnectionObjectData
  #pragma pack(pop)
  static check_size<sizeof(SimulationConnectionObjectData), 24 + sizeof(::System::Collections::Generic::Queue_1<::Fusion::NetworkId>*)> __Fusion_SimulationConnectionObjectDataSizeCheck;
  static_assert(sizeof(SimulationConnectionObjectData) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Fusion::SimulationConnectionObjectData::NetworkObjectConnectionDataStatus, "Fusion", "SimulationConnectionObjectData/NetworkObjectConnectionDataStatus");
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Fusion::SimulationConnectionObjectData::NetworkObjectConnectionData, "Fusion", "SimulationConnectionObjectData/NetworkObjectConnectionData");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::SimulationConnectionObjectData::get_DestroyedCount
// Il2CppName: get_DestroyedCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Fusion::SimulationConnectionObjectData::*)()>(&Fusion::SimulationConnectionObjectData::get_DestroyedCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationConnectionObjectData*), "get_DestroyedCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::SimulationConnectionObjectData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Fusion::SimulationConnectionObjectData::DestroyedNextId
// Il2CppName: DestroyedNextId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::NetworkId (Fusion::SimulationConnectionObjectData::*)()>(&Fusion::SimulationConnectionObjectData::DestroyedNextId)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationConnectionObjectData*), "DestroyedNextId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::SimulationConnectionObjectData::Clear
// Il2CppName: Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::SimulationConnectionObjectData::*)()>(&Fusion::SimulationConnectionObjectData::Clear)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationConnectionObjectData*), "Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::SimulationConnectionObjectData::SetCreateConfirmed
// Il2CppName: SetCreateConfirmed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::SimulationConnectionObjectData::*)(::Fusion::NetworkId)>(&Fusion::SimulationConnectionObjectData::SetCreateConfirmed)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkId")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationConnectionObjectData*), "SetCreateConfirmed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: Fusion::SimulationConnectionObjectData::SetCreateConfirmed
// Il2CppName: SetCreateConfirmed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::SimulationConnectionObjectData::*)(::Fusion::NetworkId, ::Fusion::Tick)>(&Fusion::SimulationConnectionObjectData::SetCreateConfirmed)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkId")->byval_arg;
    static auto* tick = &::il2cpp_utils::GetClassFromName("Fusion", "Tick")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationConnectionObjectData*), "SetCreateConfirmed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, tick});
  }
};
// Writing MetadataGetter for method: Fusion::SimulationConnectionObjectData::SetDestroyConfirmed
// Il2CppName: SetDestroyConfirmed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::SimulationConnectionObjectData::*)(::Fusion::NetworkId)>(&Fusion::SimulationConnectionObjectData::SetDestroyConfirmed)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkId")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationConnectionObjectData*), "SetDestroyConfirmed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: Fusion::SimulationConnectionObjectData::SetDestroyed
// Il2CppName: SetDestroyed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::SimulationConnectionObjectData::*)(::Fusion::NetworkId)>(&Fusion::SimulationConnectionObjectData::SetDestroyed)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkId")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationConnectionObjectData*), "SetDestroyed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: Fusion::SimulationConnectionObjectData::SetSentTick
// Il2CppName: SetSentTick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::SimulationConnectionObjectData::*)(::Fusion::NetworkId, ::Fusion::Tick)>(&Fusion::SimulationConnectionObjectData::SetSentTick)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkId")->byval_arg;
    static auto* tick = &::il2cpp_utils::GetClassFromName("Fusion", "Tick")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationConnectionObjectData*), "SetSentTick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, tick});
  }
};
// Writing MetadataGetter for method: Fusion::SimulationConnectionObjectData::GetOrAllocGroups
// Il2CppName: GetOrAllocGroups
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int* (Fusion::SimulationConnectionObjectData::*)(::Fusion::NetworkId, ::Fusion::Allocator*)>(&Fusion::SimulationConnectionObjectData::GetOrAllocGroups)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkId")->byval_arg;
    static auto* allocator = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("Fusion", "Allocator"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationConnectionObjectData*), "GetOrAllocGroups", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, allocator});
  }
};
// Writing MetadataGetter for method: Fusion::SimulationConnectionObjectData::GetGroups
// Il2CppName: GetGroups
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int* (Fusion::SimulationConnectionObjectData::*)(::Fusion::NetworkId)>(&Fusion::SimulationConnectionObjectData::GetGroups)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkId")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationConnectionObjectData*), "GetGroups", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: Fusion::SimulationConnectionObjectData::EnsureExist
// Il2CppName: EnsureExist
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::SimulationConnectionObjectData::*)(::Fusion::NetworkId)>(&Fusion::SimulationConnectionObjectData::EnsureExist)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkId")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationConnectionObjectData*), "EnsureExist", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: Fusion::SimulationConnectionObjectData::EnsureExist
// Il2CppName: EnsureExist
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::SimulationConnectionObjectData::*)(::Fusion::NetworkId, ByRef<::Fusion::Tick>, ByRef<bool>, ByRef<int*>)>(&Fusion::SimulationConnectionObjectData::EnsureExist)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkId")->byval_arg;
    static auto* sentTick = &::il2cpp_utils::GetClassFromName("Fusion", "Tick")->this_arg;
    static auto* isCreateUnconfirmed = &::il2cpp_utils::GetClassFromName("System", "Boolean")->this_arg;
    static auto* interestGroups = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationConnectionObjectData*), "EnsureExist", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, sentTick, isCreateUnconfirmed, interestGroups});
  }
};
// Writing MetadataGetter for method: Fusion::SimulationConnectionObjectData::IsCreateUnconfirmed
// Il2CppName: IsCreateUnconfirmed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Nullable_1<bool> (Fusion::SimulationConnectionObjectData::*)(::Fusion::NetworkId)>(&Fusion::SimulationConnectionObjectData::IsCreateUnconfirmed)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkId")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationConnectionObjectData*), "IsCreateUnconfirmed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: Fusion::SimulationConnectionObjectData::IsDestroyUnconfirmed
// Il2CppName: IsDestroyUnconfirmed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Nullable_1<bool> (Fusion::SimulationConnectionObjectData::*)(::Fusion::NetworkId)>(&Fusion::SimulationConnectionObjectData::IsDestroyUnconfirmed)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkId")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationConnectionObjectData*), "IsDestroyUnconfirmed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: Fusion::SimulationConnectionObjectData::GetSentTick
// Il2CppName: GetSentTick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::Tick (Fusion::SimulationConnectionObjectData::*)(::Fusion::NetworkId)>(&Fusion::SimulationConnectionObjectData::GetSentTick)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkId")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationConnectionObjectData*), "GetSentTick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: Fusion::SimulationConnectionObjectData::TryGetData
// Il2CppName: TryGetData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::SimulationConnectionObjectData::*)(::Fusion::NetworkId, ByRef<::Fusion::SimulationConnectionObjectData::NetworkObjectConnectionData>)>(&Fusion::SimulationConnectionObjectData::TryGetData)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkId")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("Fusion", "SimulationConnectionObjectData/NetworkObjectConnectionData")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationConnectionObjectData*), "TryGetData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, data});
  }
};
// Writing MetadataGetter for method: Fusion::SimulationConnectionObjectData::GetOrCreateData
// Il2CppName: GetOrCreateData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::SimulationConnectionObjectData::NetworkObjectConnectionData (Fusion::SimulationConnectionObjectData::*)(::Fusion::NetworkId)>(&Fusion::SimulationConnectionObjectData::GetOrCreateData)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkId")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationConnectionObjectData*), "GetOrCreateData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: Fusion::SimulationConnectionObjectData::TryUpdate
// Il2CppName: TryUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::SimulationConnectionObjectData::*)(::Fusion::NetworkId, ::System::Nullable_1<::Fusion::SimulationConnectionObjectData::NetworkObjectConnectionDataStatus>, ::System::Nullable_1<::Fusion::Tick>)>(&Fusion::SimulationConnectionObjectData::TryUpdate)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkId")->byval_arg;
    static auto* status = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Fusion", "SimulationConnectionObjectData/NetworkObjectConnectionDataStatus")})->byval_arg;
    static auto* tick = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Fusion", "Tick")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationConnectionObjectData*), "TryUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, status, tick});
  }
};
