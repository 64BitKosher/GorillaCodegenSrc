// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Fusion.BVHNode
#include "Fusion/BVHNode.hpp"
// Completed includes
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: IBoundsTraversalTest
  class IBoundsTraversalTest;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::IBoundsTraversalTest);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::IBoundsTraversalTest*, "Fusion", "IBoundsTraversalTest");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.IBoundsTraversalTest
  // [TokenAttribute] Offset: FFFFFFFF
  class IBoundsTraversalTest {
    public:
    // public System.Boolean Check(ref Fusion.BVHNode/CachedBounds bounds)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool Check(ByRef<::Fusion::BVHNode::CachedBounds> bounds);
  }; // Fusion.IBoundsTraversalTest
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::IBoundsTraversalTest::Check
// Il2CppName: Check
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::IBoundsTraversalTest::*)(ByRef<::Fusion::BVHNode::CachedBounds>)>(&Fusion::IBoundsTraversalTest::Check)> {
  static const MethodInfo* get() {
    static auto* bounds = &::il2cpp_utils::GetClassFromName("Fusion", "BVHNode/CachedBounds")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::IBoundsTraversalTest*), "Check", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bounds});
  }
};
