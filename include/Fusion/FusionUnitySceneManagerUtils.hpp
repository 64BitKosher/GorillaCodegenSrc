// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IList`1<T>
  template<typename T>
  class IList_1;
}
// Completed forward declares
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: FusionUnitySceneManagerUtils
  class FusionUnitySceneManagerUtils;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::FusionUnitySceneManagerUtils);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::FusionUnitySceneManagerUtils*, "Fusion", "FusionUnitySceneManagerUtils");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.FusionUnitySceneManagerUtils
  // [TokenAttribute] Offset: FFFFFFFF
  class FusionUnitySceneManagerUtils : public ::Il2CppObject {
    public:
    // static public System.Int32 GetSceneBuildIndex(System.String nameOrPath)
    // Offset: 0x2817770
    static int GetSceneBuildIndex(::StringW nameOrPath);
    // static public System.Int32 GetSceneIndex(System.Collections.Generic.IList`1<System.String> scenePathsOrNames, System.String nameOrPath)
    // Offset: 0x281A1B4
    static int GetSceneIndex(::System::Collections::Generic::IList_1<::StringW>* scenePathsOrNames, ::StringW nameOrPath);
    // static public System.Void GetFileNameWithoutExtensionPosition(System.String nameOrPath, out System.Int32 index, out System.Int32 length)
    // Offset: 0x281A14C
    static void GetFileNameWithoutExtensionPosition(::StringW nameOrPath, ByRef<int> index, ByRef<int> length);
  }; // Fusion.FusionUnitySceneManagerUtils
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::FusionUnitySceneManagerUtils::GetSceneBuildIndex
// Il2CppName: GetSceneBuildIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW)>(&Fusion::FusionUnitySceneManagerUtils::GetSceneBuildIndex)> {
  static const MethodInfo* get() {
    static auto* nameOrPath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::FusionUnitySceneManagerUtils*), "GetSceneBuildIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameOrPath});
  }
};
// Writing MetadataGetter for method: Fusion::FusionUnitySceneManagerUtils::GetSceneIndex
// Il2CppName: GetSceneIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::Collections::Generic::IList_1<::StringW>*, ::StringW)>(&Fusion::FusionUnitySceneManagerUtils::GetSceneIndex)> {
  static const MethodInfo* get() {
    static auto* scenePathsOrNames = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IList`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    static auto* nameOrPath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::FusionUnitySceneManagerUtils*), "GetSceneIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{scenePathsOrNames, nameOrPath});
  }
};
// Writing MetadataGetter for method: Fusion::FusionUnitySceneManagerUtils::GetFileNameWithoutExtensionPosition
// Il2CppName: GetFileNameWithoutExtensionPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ByRef<int>, ByRef<int>)>(&Fusion::FusionUnitySceneManagerUtils::GetFileNameWithoutExtensionPosition)> {
  static const MethodInfo* get() {
    static auto* nameOrPath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::FusionUnitySceneManagerUtils*), "GetFileNameWithoutExtensionPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameOrPath, index, length});
  }
};
