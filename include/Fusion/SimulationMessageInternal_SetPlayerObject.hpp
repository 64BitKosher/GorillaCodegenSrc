// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: Fusion.NetworkId
#include "Fusion/NetworkId.hpp"
// Completed includes
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: SimulationMessageInternal_SetPlayerObject
  struct SimulationMessageInternal_SetPlayerObject;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Fusion::SimulationMessageInternal_SetPlayerObject, "Fusion", "SimulationMessageInternal_SetPlayerObject");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x4
  #pragma pack(push, 1)
  // WARNING Layout: Explicit may not be correctly taken into account!
  // Autogenerated type: Fusion.SimulationMessageInternal_SetPlayerObject
  // [TokenAttribute] Offset: FFFFFFFF
  struct SimulationMessageInternal_SetPlayerObject/*, public ::System::ValueType*/ {
    public:
    public:
    // public Fusion.NetworkId Object
    // Size: 0x4
    // Offset: 0x0
    ::Fusion::NetworkId Object;
    // Field size check
    static_assert(sizeof(::Fusion::NetworkId) == 0x4);
    public:
    // Creating value type constructor for type: SimulationMessageInternal_SetPlayerObject
    constexpr SimulationMessageInternal_SetPlayerObject(::Fusion::NetworkId Object_ = {}) noexcept : Object{Object_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating conversion operator: operator ::Fusion::NetworkId
    constexpr operator ::Fusion::NetworkId() const noexcept {
      return Object;
    }
    // static field const value: static public System.Int32 SIZE
    static constexpr const int SIZE = 4;
    // Get static field: static public System.Int32 SIZE
    static int _get_SIZE();
    // Set static field: static public System.Int32 SIZE
    static void _set_SIZE(int value);
    // Get instance field reference: public Fusion.NetworkId Object
    [[deprecated("Use field access instead!")]] ::Fusion::NetworkId& dyn_Object();
  }; // Fusion.SimulationMessageInternal_SetPlayerObject
  #pragma pack(pop)
  static check_size<sizeof(SimulationMessageInternal_SetPlayerObject), 0 + sizeof(::Fusion::NetworkId)> __Fusion_SimulationMessageInternal_SetPlayerObjectSizeCheck;
  static_assert(sizeof(SimulationMessageInternal_SetPlayerObject) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
