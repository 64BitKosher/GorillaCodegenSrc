// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Fusion.SimulationSnapshot
#include "Fusion/SimulationSnapshot.hpp"
// Including type: Fusion.Tick
#include "Fusion/Tick.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: HashSet`1<T>
  template<typename T>
  class HashSet_1;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::SimulationSnapshot::IHistory);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::SimulationSnapshot::IHistory*, "Fusion", "SimulationSnapshot/IHistory");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.SimulationSnapshot/IHistory
  // [TokenAttribute] Offset: FFFFFFFF
  // [DefaultMemberAttribute] Offset: FFFFFFFF
  class SimulationSnapshot::IHistory {
    public:
    // public Fusion.SimulationSnapshot get_Oldest()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Fusion::SimulationSnapshot* get_Oldest();
    // public Fusion.SimulationSnapshot get_Latest()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Fusion::SimulationSnapshot* get_Latest();
    // public Fusion.SimulationSnapshot get_Root()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Fusion::SimulationSnapshot* get_Root();
    // public System.Int32 get_Count()
    // Offset: 0xFFFFFFFFFFFFFFFF
    int get_Count();
    // public Fusion.Tick get_MaxTick()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Fusion::Tick get_MaxTick();
    // public Fusion.SimulationSnapshot get_Item(System.Int32 index)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Fusion::SimulationSnapshot* get_Item(int index);
    // public System.Void Dispose()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Dispose();
    // public System.Boolean TryGet(Fusion.Tick tick, out Fusion.SimulationSnapshot snapshot)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool TryGet(::Fusion::Tick tick, ByRef<::Fusion::SimulationSnapshot*> snapshot);
    // public Fusion.SimulationSnapshot Get(Fusion.Tick tick)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Fusion::SimulationSnapshot* Get(::Fusion::Tick tick);
    // public Fusion.SimulationSnapshot Next(Fusion.Tick tick, System.Boolean copyPrevious)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Fusion::SimulationSnapshot* Next(::Fusion::Tick tick, bool copyPrevious);
    // public System.Void DisposeAllExcept(System.Collections.Generic.HashSet`1<Fusion.Tick> save)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void DisposeAllExcept(::System::Collections::Generic::HashSet_1<::Fusion::Tick>* save);
    // public System.Void DisposeOlderThan(Fusion.Tick tick)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void DisposeOlderThan(::Fusion::Tick tick);
  }; // Fusion.SimulationSnapshot/IHistory
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::SimulationSnapshot::IHistory::get_Oldest
// Il2CppName: get_Oldest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::SimulationSnapshot* (Fusion::SimulationSnapshot::IHistory::*)()>(&Fusion::SimulationSnapshot::IHistory::get_Oldest)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationSnapshot::IHistory*), "get_Oldest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::SimulationSnapshot::IHistory::get_Latest
// Il2CppName: get_Latest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::SimulationSnapshot* (Fusion::SimulationSnapshot::IHistory::*)()>(&Fusion::SimulationSnapshot::IHistory::get_Latest)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationSnapshot::IHistory*), "get_Latest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::SimulationSnapshot::IHistory::get_Root
// Il2CppName: get_Root
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::SimulationSnapshot* (Fusion::SimulationSnapshot::IHistory::*)()>(&Fusion::SimulationSnapshot::IHistory::get_Root)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationSnapshot::IHistory*), "get_Root", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::SimulationSnapshot::IHistory::get_Count
// Il2CppName: get_Count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Fusion::SimulationSnapshot::IHistory::*)()>(&Fusion::SimulationSnapshot::IHistory::get_Count)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationSnapshot::IHistory*), "get_Count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::SimulationSnapshot::IHistory::get_MaxTick
// Il2CppName: get_MaxTick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::Tick (Fusion::SimulationSnapshot::IHistory::*)()>(&Fusion::SimulationSnapshot::IHistory::get_MaxTick)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationSnapshot::IHistory*), "get_MaxTick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::SimulationSnapshot::IHistory::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::SimulationSnapshot* (Fusion::SimulationSnapshot::IHistory::*)(int)>(&Fusion::SimulationSnapshot::IHistory::get_Item)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationSnapshot::IHistory*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: Fusion::SimulationSnapshot::IHistory::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::SimulationSnapshot::IHistory::*)()>(&Fusion::SimulationSnapshot::IHistory::Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationSnapshot::IHistory*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::SimulationSnapshot::IHistory::TryGet
// Il2CppName: TryGet
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::SimulationSnapshot::IHistory::*)(::Fusion::Tick, ByRef<::Fusion::SimulationSnapshot*>)>(&Fusion::SimulationSnapshot::IHistory::TryGet)> {
  static const MethodInfo* get() {
    static auto* tick = &::il2cpp_utils::GetClassFromName("Fusion", "Tick")->byval_arg;
    static auto* snapshot = &::il2cpp_utils::GetClassFromName("Fusion", "SimulationSnapshot")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationSnapshot::IHistory*), "TryGet", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tick, snapshot});
  }
};
// Writing MetadataGetter for method: Fusion::SimulationSnapshot::IHistory::Get
// Il2CppName: Get
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::SimulationSnapshot* (Fusion::SimulationSnapshot::IHistory::*)(::Fusion::Tick)>(&Fusion::SimulationSnapshot::IHistory::Get)> {
  static const MethodInfo* get() {
    static auto* tick = &::il2cpp_utils::GetClassFromName("Fusion", "Tick")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationSnapshot::IHistory*), "Get", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tick});
  }
};
// Writing MetadataGetter for method: Fusion::SimulationSnapshot::IHistory::Next
// Il2CppName: Next
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::SimulationSnapshot* (Fusion::SimulationSnapshot::IHistory::*)(::Fusion::Tick, bool)>(&Fusion::SimulationSnapshot::IHistory::Next)> {
  static const MethodInfo* get() {
    static auto* tick = &::il2cpp_utils::GetClassFromName("Fusion", "Tick")->byval_arg;
    static auto* copyPrevious = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationSnapshot::IHistory*), "Next", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tick, copyPrevious});
  }
};
// Writing MetadataGetter for method: Fusion::SimulationSnapshot::IHistory::DisposeAllExcept
// Il2CppName: DisposeAllExcept
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::SimulationSnapshot::IHistory::*)(::System::Collections::Generic::HashSet_1<::Fusion::Tick>*)>(&Fusion::SimulationSnapshot::IHistory::DisposeAllExcept)> {
  static const MethodInfo* get() {
    static auto* save = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "HashSet`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Fusion", "Tick")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationSnapshot::IHistory*), "DisposeAllExcept", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{save});
  }
};
// Writing MetadataGetter for method: Fusion::SimulationSnapshot::IHistory::DisposeOlderThan
// Il2CppName: DisposeOlderThan
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::SimulationSnapshot::IHistory::*)(::Fusion::Tick)>(&Fusion::SimulationSnapshot::IHistory::DisposeOlderThan)> {
  static const MethodInfo* get() {
    static auto* tick = &::il2cpp_utils::GetClassFromName("Fusion", "Tick")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationSnapshot::IHistory*), "DisposeOlderThan", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tick});
  }
};
