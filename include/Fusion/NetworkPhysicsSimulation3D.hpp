// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Fusion.SimulationBehaviour
#include "Fusion/SimulationBehaviour.hpp"
// Including type: Fusion.IBeforeTick
#include "Fusion/IBeforeTick.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: NetworkPhysicsSimulation3D
  class NetworkPhysicsSimulation3D;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::NetworkPhysicsSimulation3D);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::NetworkPhysicsSimulation3D*, "Fusion", "NetworkPhysicsSimulation3D");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x49
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.NetworkPhysicsSimulation3D
  // [TokenAttribute] Offset: FFFFFFFF
  // [OrderAfterAttribute] Offset: FFFFFFFF
  // [DisallowMultipleComponent] Offset: FFFFFFFF
  // [SimulationBehaviourAttribute] Offset: FFFFFFFF
  class NetworkPhysicsSimulation3D : public ::Fusion::SimulationBehaviour/*, public ::Fusion::IBeforeTick*/ {
    public:
    public:
    // private System.Boolean _syncTransformsRequested
    // Size: 0x1
    // Offset: 0x48
    bool syncTransformsRequested;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating interface conversion operator: operator ::Fusion::IBeforeTick
    operator ::Fusion::IBeforeTick() noexcept {
      return *reinterpret_cast<::Fusion::IBeforeTick*>(this);
    }
    // Get static field: static private System.Boolean _physicsAutoSimulationRestore
    static bool _get__physicsAutoSimulationRestore();
    // Set static field: static private System.Boolean _physicsAutoSimulationRestore
    static void _set__physicsAutoSimulationRestore(bool value);
    // Get static field: static private System.Int32 _enabledRunnersCount
    static int _get__enabledRunnersCount();
    // Set static field: static private System.Int32 _enabledRunnersCount
    static void _set__enabledRunnersCount(int value);
    // Get static field: static private System.Boolean _pendingSyncTransforms
    static bool _get__pendingSyncTransforms();
    // Set static field: static private System.Boolean _pendingSyncTransforms
    static void _set__pendingSyncTransforms(bool value);
    // Get instance field reference: private System.Boolean _syncTransformsRequested
    [[deprecated("Use field access instead!")]] bool& dyn__syncTransformsRequested();
    // public System.Single get_PhysicsSimulationDeltaTime()
    // Offset: 0x2B11864
    float get_PhysicsSimulationDeltaTime();
    // private System.Void OnEnable()
    // Offset: 0x2B11888
    void OnEnable();
    // System.Void RequestPhysicsSyncTransform()
    // Offset: 0x2B11940
    void RequestPhysicsSyncTransform();
    // public System.Void Simulate()
    // Offset: 0x2B119D8
    void Simulate();
    // private System.Void Fusion.IBeforeTick.BeforeTick()
    // Offset: 0x2B11AE8
    void Fusion_IBeforeTick_BeforeTick();
    // private System.Void OnDisable()
    // Offset: 0x2B11B90
    void OnDisable();
    // public override System.Void FixedUpdateNetwork()
    // Offset: 0x2B11994
    // Implemented from: Fusion.SimulationBehaviour
    // Base method: System.Void SimulationBehaviour::FixedUpdateNetwork()
    void FixedUpdateNetwork();
    // public System.Void .ctor()
    // Offset: 0x2B11C24
    // Implemented from: Fusion.SimulationBehaviour
    // Base method: System.Void SimulationBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NetworkPhysicsSimulation3D* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkPhysicsSimulation3D::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NetworkPhysicsSimulation3D*, creationType>()));
    }
  }; // Fusion.NetworkPhysicsSimulation3D
  #pragma pack(pop)
  static check_size<sizeof(NetworkPhysicsSimulation3D), 72 + sizeof(bool)> __Fusion_NetworkPhysicsSimulation3DSizeCheck;
  static_assert(sizeof(NetworkPhysicsSimulation3D) == 0x49);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::NetworkPhysicsSimulation3D::get_PhysicsSimulationDeltaTime
// Il2CppName: get_PhysicsSimulationDeltaTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Fusion::NetworkPhysicsSimulation3D::*)()>(&Fusion::NetworkPhysicsSimulation3D::get_PhysicsSimulationDeltaTime)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkPhysicsSimulation3D*), "get_PhysicsSimulationDeltaTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkPhysicsSimulation3D::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkPhysicsSimulation3D::*)()>(&Fusion::NetworkPhysicsSimulation3D::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkPhysicsSimulation3D*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkPhysicsSimulation3D::RequestPhysicsSyncTransform
// Il2CppName: RequestPhysicsSyncTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkPhysicsSimulation3D::*)()>(&Fusion::NetworkPhysicsSimulation3D::RequestPhysicsSyncTransform)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkPhysicsSimulation3D*), "RequestPhysicsSyncTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkPhysicsSimulation3D::Simulate
// Il2CppName: Simulate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkPhysicsSimulation3D::*)()>(&Fusion::NetworkPhysicsSimulation3D::Simulate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkPhysicsSimulation3D*), "Simulate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkPhysicsSimulation3D::Fusion_IBeforeTick_BeforeTick
// Il2CppName: Fusion.IBeforeTick.BeforeTick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkPhysicsSimulation3D::*)()>(&Fusion::NetworkPhysicsSimulation3D::Fusion_IBeforeTick_BeforeTick)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkPhysicsSimulation3D*), "Fusion.IBeforeTick.BeforeTick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkPhysicsSimulation3D::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkPhysicsSimulation3D::*)()>(&Fusion::NetworkPhysicsSimulation3D::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkPhysicsSimulation3D*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkPhysicsSimulation3D::FixedUpdateNetwork
// Il2CppName: FixedUpdateNetwork
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkPhysicsSimulation3D::*)()>(&Fusion::NetworkPhysicsSimulation3D::FixedUpdateNetwork)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkPhysicsSimulation3D*), "FixedUpdateNetwork", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkPhysicsSimulation3D::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
