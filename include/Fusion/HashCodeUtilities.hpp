// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Skipping declaration: ValueType because it is already included!
}
// Completed forward declares
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: HashCodeUtilities
  class HashCodeUtilities;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::HashCodeUtilities);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::HashCodeUtilities*, "Fusion", "HashCodeUtilities");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.HashCodeUtilities
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class HashCodeUtilities : public ::Il2CppObject {
    public:
    // static field const value: static public System.Int32 InitialHash
    static constexpr const int InitialHash = 352654597;
    // Get static field: static public System.Int32 InitialHash
    static int _get_InitialHash();
    // Set static field: static public System.Int32 InitialHash
    static void _set_InitialHash(int value);
    // static public System.Int32 GetHashDeterministic(System.String str, System.Int32 initialHash)
    // Offset: 0x2B48988
    static int GetHashDeterministic(::StringW str, int initialHash);
    // static public System.Int32 CombineHashCodes(System.Int32 a, System.Int32 b)
    // Offset: 0x2B48A34
    static int CombineHashCodes(int a, int b);
    // static public System.Int32 CombineHashCodes(System.Int32 a, System.Int32 b, System.Int32 c)
    // Offset: 0x2B48A40
    static int CombineHashCodes(int a, int b, int c);
    // static public System.Int32 GetArrayHashCode(T* ptr, System.Int32 length, System.Int32 initialHash)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static int GetArrayHashCode(T* ptr, int length, int initialHash) {
      static_assert(std::is_convertible_v<T, ::System::ValueType*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::HashCodeUtilities::GetArrayHashCode");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion", "HashCodeUtilities", "GetArrayHashCode", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(initialHash)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, ptr, length, initialHash);
    }
    // static public System.Int32 GetHashCodeDeterministic(System.Byte[] data, System.Int32 initialHash)
    // Offset: 0x2B48A54
    static int GetHashCodeDeterministic(::ArrayW<uint8_t> data, int initialHash);
  }; // Fusion.HashCodeUtilities
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::HashCodeUtilities::GetHashDeterministic
// Il2CppName: GetHashDeterministic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW, int)>(&Fusion::HashCodeUtilities::GetHashDeterministic)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* initialHash = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::HashCodeUtilities*), "GetHashDeterministic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str, initialHash});
  }
};
// Writing MetadataGetter for method: Fusion::HashCodeUtilities::CombineHashCodes
// Il2CppName: CombineHashCodes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int, int)>(&Fusion::HashCodeUtilities::CombineHashCodes)> {
  static const MethodInfo* get() {
    static auto* a = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* b = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::HashCodeUtilities*), "CombineHashCodes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{a, b});
  }
};
// Writing MetadataGetter for method: Fusion::HashCodeUtilities::CombineHashCodes
// Il2CppName: CombineHashCodes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int, int, int)>(&Fusion::HashCodeUtilities::CombineHashCodes)> {
  static const MethodInfo* get() {
    static auto* a = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* b = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* c = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::HashCodeUtilities*), "CombineHashCodes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{a, b, c});
  }
};
// Writing MetadataGetter for method: Fusion::HashCodeUtilities::GetArrayHashCode
// Il2CppName: GetArrayHashCode
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Fusion::HashCodeUtilities::GetHashCodeDeterministic
// Il2CppName: GetHashCodeDeterministic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::ArrayW<uint8_t>, int)>(&Fusion::HashCodeUtilities::GetHashCodeDeterministic)> {
  static const MethodInfo* get() {
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* initialHash = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::HashCodeUtilities*), "GetHashCodeDeterministic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, initialHash});
  }
};
