// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Fusion
namespace Fusion {
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: ValueTuple`2<T1, T2>
  template<typename T1, typename T2>
  struct ValueTuple_2;
}
// Completed forward declares
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: UTF32Tools
  class UTF32Tools;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::UTF32Tools);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::UTF32Tools*, "Fusion", "UTF32Tools");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.UTF32Tools
  // [TokenAttribute] Offset: FFFFFFFF
  class UTF32Tools : public ::Il2CppObject {
    public:
    // Nested type: ::Fusion::UTF32Tools::CharEnumerator
    struct CharEnumerator;
    // Nested type: ::Fusion::UTF32Tools::ConversionResult
    struct ConversionResult;
    // static public Fusion.UTF32Tools/ConversionResult Convert(System.String str, System.UInt32* dst, System.Int32 dstCapacity)
    // Offset: 0x2AD9D54
    static ::Fusion::UTF32Tools::ConversionResult Convert(::StringW str, uint* dst, int dstCapacity);
    // static public Fusion.UTF32Tools/ConversionResult Convert(System.Char* str, System.Int32 strLength, System.UInt32* dst, System.Int32 dstCapacity)
    // Offset: 0x2AD9DB0
    static ::Fusion::UTF32Tools::ConversionResult Convert(::Il2CppChar* str, int strLength, uint* dst, int dstCapacity);
    // static System.Int32 CompareOrdinal(System.UInt32* strA, System.Int32 aLength, System.UInt32* strB, System.Int32 bLength, System.Boolean ignoreCase)
    // Offset: 0x2AD9F54
    static int CompareOrdinal(uint* strA, int aLength, uint* strB, int bLength, bool ignoreCase);
    // static System.Int32 CompareOrdinal(System.String strA, System.UInt32* strB, System.Int32 bLength, System.Boolean ignoreCase)
    // Offset: 0x2ADA27C
    static int CompareOrdinal(::StringW strA, uint* strB, int bLength, bool ignoreCase);
    // static System.Boolean EndsWithOrdinal(System.UInt32* strA, System.Int32 aLength, System.UInt32* bStr, System.Int32 bLength, System.Boolean ignoreCase)
    // Offset: 0x2ADA618
    static bool EndsWithOrdinal(uint* strA, int aLength, uint* bStr, int bLength, bool ignoreCase);
    // static System.Boolean EndsWithOrdinal(System.UInt32* strA, System.Int32 aLength, System.String strB, System.Boolean ignoreCase)
    // Offset: 0x2ADA64C
    static bool EndsWithOrdinal(uint* strA, int aLength, ::StringW strB, bool ignoreCase);
    // static System.Int32 GetHashDeterministic(System.UInt32* str, System.Int32 length)
    // Offset: 0x2ADA720
    static int GetHashDeterministic(uint* str, int length);
    // static System.Boolean StartsWithOrdinal(System.UInt32* strA, System.Int32 aLength, System.UInt32* strB, System.Int32 bLength, System.Boolean ignoreCase)
    // Offset: 0x2ADA7B0
    static bool StartsWithOrdinal(uint* strA, int aLength, uint* strB, int bLength, bool ignoreCase);
    // static System.Boolean StartsWithOrdinal(System.UInt32* strA, System.Int32 aLength, System.String strB, System.Boolean ignoreCase)
    // Offset: 0x2ADA7E0
    static bool StartsWithOrdinal(uint* strA, int aLength, ::StringW strB, bool ignoreCase);
    // static System.Int32 IndexOf(System.UInt32* str, System.Int32 length, System.String pattern)
    // Offset: 0x2ADA8B0
    static int IndexOf(uint* str, int length, ::StringW pattern);
    // static System.Int32 IndexOf(System.UInt32* str, System.Int32 length, System.UInt32* pattern, System.Int32 patternLength)
    // Offset: 0x2ADAB20
    static int IndexOf(uint* str, int length, uint* pattern, int patternLength);
    // static System.Void ToLowerInvariant(System.UInt32* src, System.UInt32* dst, System.Int32 length)
    // Offset: 0x2ADAC70
    static void ToLowerInvariant(uint* src, uint* dst, int length);
    // static System.Void ToUpperInvariant(System.UInt32* src, System.UInt32* dst, System.Int32 length)
    // Offset: 0x2ADAD3C
    static void ToUpperInvariant(uint* src, uint* dst, int length);
    // static private System.Char GetHighSurrogate(System.UInt32 scalar)
    // Offset: 0x2ADAF00
    static ::Il2CppChar GetHighSurrogate(uint scalar);
    // static public System.Int32 GetLength(System.String str)
    // Offset: 0x2ADAF14
    static int GetLength(::StringW str);
    // static private System.Char GetLowSurrogate(System.UInt32 scalar)
    // Offset: 0x2ADAF54
    static ::Il2CppChar GetLowSurrogate(uint scalar);
    // static private System.Boolean IsValidCodePoint(System.UInt32 scalar)
    // Offset: 0x2ADAF64
    static bool IsValidCodePoint(uint scalar);
    // static private System.UInt32 ReadNextCodePoint(ref System.Char* pstr, System.Char* end)
    // Offset: 0x2ADAA58
    static uint ReadNextCodePoint(ByRef<::Il2CppChar*> pstr, ::Il2CppChar* end);
    // static private System.Void Swap(ref System.Int32 a, ref System.Int32 b)
    // Offset: 0x2ADAF84
    static void Swap(ByRef<int> a, ByRef<int> b);
    // static private System.UInt32 ToLowerInvariant(System.UInt32 value)
    // Offset: 0x2ADA184
    static uint ToLowerInvariant(uint value);
    // static private System.UInt32 ToUpperInvariant(System.UInt32 value)
    // Offset: 0x2ADAE08
    static uint ToUpperInvariant(uint value);
    // static private System.ValueTuple`2<System.Char,System.Char> ToUTF16(System.UInt32 scalar)
    // Offset: 0x2ADA504
    static ::System::ValueTuple_2<::Il2CppChar, ::Il2CppChar> ToUTF16(uint scalar);
    // static private System.UInt32 ToUTF32(System.Char charOrHighSurrogate, System.Char lowSurrogate)
    // Offset: 0x2ADA590
    static uint ToUTF32(::Il2CppChar charOrHighSurrogate, ::Il2CppChar lowSurrogate);
  }; // Fusion.UTF32Tools
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::UTF32Tools::Convert
// Il2CppName: Convert
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::UTF32Tools::ConversionResult (*)(::StringW, uint*, int)>(&Fusion::UTF32Tools::Convert)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* dst = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "UInt32"))->byval_arg;
    static auto* dstCapacity = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::UTF32Tools*), "Convert", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str, dst, dstCapacity});
  }
};
// Writing MetadataGetter for method: Fusion::UTF32Tools::Convert
// Il2CppName: Convert
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::UTF32Tools::ConversionResult (*)(::Il2CppChar*, int, uint*, int)>(&Fusion::UTF32Tools::Convert)> {
  static const MethodInfo* get() {
    static auto* str = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Char"))->byval_arg;
    static auto* strLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* dst = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "UInt32"))->byval_arg;
    static auto* dstCapacity = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::UTF32Tools*), "Convert", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str, strLength, dst, dstCapacity});
  }
};
// Writing MetadataGetter for method: Fusion::UTF32Tools::CompareOrdinal
// Il2CppName: CompareOrdinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(uint*, int, uint*, int, bool)>(&Fusion::UTF32Tools::CompareOrdinal)> {
  static const MethodInfo* get() {
    static auto* strA = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "UInt32"))->byval_arg;
    static auto* aLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* strB = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "UInt32"))->byval_arg;
    static auto* bLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* ignoreCase = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::UTF32Tools*), "CompareOrdinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{strA, aLength, strB, bLength, ignoreCase});
  }
};
// Writing MetadataGetter for method: Fusion::UTF32Tools::CompareOrdinal
// Il2CppName: CompareOrdinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW, uint*, int, bool)>(&Fusion::UTF32Tools::CompareOrdinal)> {
  static const MethodInfo* get() {
    static auto* strA = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* strB = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "UInt32"))->byval_arg;
    static auto* bLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* ignoreCase = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::UTF32Tools*), "CompareOrdinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{strA, strB, bLength, ignoreCase});
  }
};
// Writing MetadataGetter for method: Fusion::UTF32Tools::EndsWithOrdinal
// Il2CppName: EndsWithOrdinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint*, int, uint*, int, bool)>(&Fusion::UTF32Tools::EndsWithOrdinal)> {
  static const MethodInfo* get() {
    static auto* strA = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "UInt32"))->byval_arg;
    static auto* aLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* bStr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "UInt32"))->byval_arg;
    static auto* bLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* ignoreCase = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::UTF32Tools*), "EndsWithOrdinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{strA, aLength, bStr, bLength, ignoreCase});
  }
};
// Writing MetadataGetter for method: Fusion::UTF32Tools::EndsWithOrdinal
// Il2CppName: EndsWithOrdinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint*, int, ::StringW, bool)>(&Fusion::UTF32Tools::EndsWithOrdinal)> {
  static const MethodInfo* get() {
    static auto* strA = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "UInt32"))->byval_arg;
    static auto* aLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* strB = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* ignoreCase = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::UTF32Tools*), "EndsWithOrdinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{strA, aLength, strB, ignoreCase});
  }
};
// Writing MetadataGetter for method: Fusion::UTF32Tools::GetHashDeterministic
// Il2CppName: GetHashDeterministic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(uint*, int)>(&Fusion::UTF32Tools::GetHashDeterministic)> {
  static const MethodInfo* get() {
    static auto* str = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "UInt32"))->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::UTF32Tools*), "GetHashDeterministic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str, length});
  }
};
// Writing MetadataGetter for method: Fusion::UTF32Tools::StartsWithOrdinal
// Il2CppName: StartsWithOrdinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint*, int, uint*, int, bool)>(&Fusion::UTF32Tools::StartsWithOrdinal)> {
  static const MethodInfo* get() {
    static auto* strA = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "UInt32"))->byval_arg;
    static auto* aLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* strB = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "UInt32"))->byval_arg;
    static auto* bLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* ignoreCase = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::UTF32Tools*), "StartsWithOrdinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{strA, aLength, strB, bLength, ignoreCase});
  }
};
// Writing MetadataGetter for method: Fusion::UTF32Tools::StartsWithOrdinal
// Il2CppName: StartsWithOrdinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint*, int, ::StringW, bool)>(&Fusion::UTF32Tools::StartsWithOrdinal)> {
  static const MethodInfo* get() {
    static auto* strA = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "UInt32"))->byval_arg;
    static auto* aLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* strB = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* ignoreCase = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::UTF32Tools*), "StartsWithOrdinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{strA, aLength, strB, ignoreCase});
  }
};
// Writing MetadataGetter for method: Fusion::UTF32Tools::IndexOf
// Il2CppName: IndexOf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(uint*, int, ::StringW)>(&Fusion::UTF32Tools::IndexOf)> {
  static const MethodInfo* get() {
    static auto* str = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "UInt32"))->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* pattern = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::UTF32Tools*), "IndexOf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str, length, pattern});
  }
};
// Writing MetadataGetter for method: Fusion::UTF32Tools::IndexOf
// Il2CppName: IndexOf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(uint*, int, uint*, int)>(&Fusion::UTF32Tools::IndexOf)> {
  static const MethodInfo* get() {
    static auto* str = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "UInt32"))->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* pattern = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "UInt32"))->byval_arg;
    static auto* patternLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::UTF32Tools*), "IndexOf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str, length, pattern, patternLength});
  }
};
// Writing MetadataGetter for method: Fusion::UTF32Tools::ToLowerInvariant
// Il2CppName: ToLowerInvariant
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint*, uint*, int)>(&Fusion::UTF32Tools::ToLowerInvariant)> {
  static const MethodInfo* get() {
    static auto* src = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "UInt32"))->byval_arg;
    static auto* dst = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "UInt32"))->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::UTF32Tools*), "ToLowerInvariant", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{src, dst, length});
  }
};
// Writing MetadataGetter for method: Fusion::UTF32Tools::ToUpperInvariant
// Il2CppName: ToUpperInvariant
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint*, uint*, int)>(&Fusion::UTF32Tools::ToUpperInvariant)> {
  static const MethodInfo* get() {
    static auto* src = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "UInt32"))->byval_arg;
    static auto* dst = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "UInt32"))->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::UTF32Tools*), "ToUpperInvariant", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{src, dst, length});
  }
};
// Writing MetadataGetter for method: Fusion::UTF32Tools::GetHighSurrogate
// Il2CppName: GetHighSurrogate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppChar (*)(uint)>(&Fusion::UTF32Tools::GetHighSurrogate)> {
  static const MethodInfo* get() {
    static auto* scalar = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::UTF32Tools*), "GetHighSurrogate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{scalar});
  }
};
// Writing MetadataGetter for method: Fusion::UTF32Tools::GetLength
// Il2CppName: GetLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW)>(&Fusion::UTF32Tools::GetLength)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::UTF32Tools*), "GetLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str});
  }
};
// Writing MetadataGetter for method: Fusion::UTF32Tools::GetLowSurrogate
// Il2CppName: GetLowSurrogate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppChar (*)(uint)>(&Fusion::UTF32Tools::GetLowSurrogate)> {
  static const MethodInfo* get() {
    static auto* scalar = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::UTF32Tools*), "GetLowSurrogate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{scalar});
  }
};
// Writing MetadataGetter for method: Fusion::UTF32Tools::IsValidCodePoint
// Il2CppName: IsValidCodePoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint)>(&Fusion::UTF32Tools::IsValidCodePoint)> {
  static const MethodInfo* get() {
    static auto* scalar = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::UTF32Tools*), "IsValidCodePoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{scalar});
  }
};
// Writing MetadataGetter for method: Fusion::UTF32Tools::ReadNextCodePoint
// Il2CppName: ReadNextCodePoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(ByRef<::Il2CppChar*>, ::Il2CppChar*)>(&Fusion::UTF32Tools::ReadNextCodePoint)> {
  static const MethodInfo* get() {
    static auto* pstr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Char"))->this_arg;
    static auto* end = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Char"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::UTF32Tools*), "ReadNextCodePoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pstr, end});
  }
};
// Writing MetadataGetter for method: Fusion::UTF32Tools::Swap
// Il2CppName: Swap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<int>, ByRef<int>)>(&Fusion::UTF32Tools::Swap)> {
  static const MethodInfo* get() {
    static auto* a = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* b = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::UTF32Tools*), "Swap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{a, b});
  }
};
// Writing MetadataGetter for method: Fusion::UTF32Tools::ToLowerInvariant
// Il2CppName: ToLowerInvariant
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint)>(&Fusion::UTF32Tools::ToLowerInvariant)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::UTF32Tools*), "ToLowerInvariant", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::UTF32Tools::ToUpperInvariant
// Il2CppName: ToUpperInvariant
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint)>(&Fusion::UTF32Tools::ToUpperInvariant)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::UTF32Tools*), "ToUpperInvariant", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::UTF32Tools::ToUTF16
// Il2CppName: ToUTF16
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::ValueTuple_2<::Il2CppChar, ::Il2CppChar> (*)(uint)>(&Fusion::UTF32Tools::ToUTF16)> {
  static const MethodInfo* get() {
    static auto* scalar = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::UTF32Tools*), "ToUTF16", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{scalar});
  }
};
// Writing MetadataGetter for method: Fusion::UTF32Tools::ToUTF32
// Il2CppName: ToUTF32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(::Il2CppChar, ::Il2CppChar)>(&Fusion::UTF32Tools::ToUTF32)> {
  static const MethodInfo* get() {
    static auto* charOrHighSurrogate = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    static auto* lowSurrogate = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::UTF32Tools*), "ToUTF32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{charOrHighSurrogate, lowSurrogate});
  }
};
