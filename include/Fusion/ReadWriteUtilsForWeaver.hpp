// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Vector2
  struct Vector2;
  // Forward declaring type: Vector3
  struct Vector3;
  // Forward declaring type: Quaternion
  struct Quaternion;
}
// Completed forward declares
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: ReadWriteUtilsForWeaver
  class ReadWriteUtilsForWeaver;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::ReadWriteUtilsForWeaver);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::ReadWriteUtilsForWeaver*, "Fusion", "ReadWriteUtilsForWeaver");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.ReadWriteUtilsForWeaver
  // [TokenAttribute] Offset: FFFFFFFF
  class ReadWriteUtilsForWeaver : public ::Il2CppObject {
    public:
    // static field const value: static private System.Int32 STRING_LENGTH_INDEX
    static constexpr const int STRING_LENGTH_INDEX = 0;
    // Get static field: static private System.Int32 STRING_LENGTH_INDEX
    static int _get_STRING_LENGTH_INDEX();
    // Set static field: static private System.Int32 STRING_LENGTH_INDEX
    static void _set_STRING_LENGTH_INDEX(int value);
    // static field const value: static private System.Int32 STRING_HASHCODE_INDEX
    static constexpr const int STRING_HASHCODE_INDEX = 1;
    // Get static field: static private System.Int32 STRING_HASHCODE_INDEX
    static int _get_STRING_HASHCODE_INDEX();
    // Set static field: static private System.Int32 STRING_HASHCODE_INDEX
    static void _set_STRING_HASHCODE_INDEX(int value);
    // static field const value: static private System.Int32 STRING_DATA_INDEX
    static constexpr const int STRING_DATA_INDEX = 2;
    // Get static field: static private System.Int32 STRING_DATA_INDEX
    static int _get_STRING_DATA_INDEX();
    // Set static field: static private System.Int32 STRING_DATA_INDEX
    static void _set_STRING_DATA_INDEX(int value);
    // static field const value: static private System.Int32 STRING_NOHASHCODE_DATA_INDEX
    static constexpr const int STRING_NOHASHCODE_DATA_INDEX = 1;
    // Get static field: static private System.Int32 STRING_NOHASHCODE_DATA_INDEX
    static int _get_STRING_NOHASHCODE_DATA_INDEX();
    // Set static field: static private System.Int32 STRING_NOHASHCODE_DATA_INDEX
    static void _set_STRING_NOHASHCODE_DATA_INDEX(int value);
    // static public System.Boolean ReadBoolean(System.Int32* data)
    // Offset: 0x2B49BA0
    static bool ReadBoolean(int* data);
    // static public System.Void WriteBoolean(System.Int32* data, System.Boolean value)
    // Offset: 0x2B49BB0
    static void WriteBoolean(int* data, bool value);
    // static public System.Int32 ReadInt32(System.Int32* data, System.Single accuracy)
    // Offset: 0x2B49BBC
    static int ReadInt32(int* data, float accuracy);
    // static public System.Void WriteFloat(System.Int32* data, System.Single accuracyInv, System.Single value)
    // Offset: 0x2B49BC4
    static void WriteFloat(int* data, float accuracyInv, float value);
    // static public System.Int32 CompressFloat(System.Single accuracyInv, System.Single value)
    // Offset: 0x2B49C10
    static int CompressFloat(float accuracyInv, float value);
    // static public System.Single ReadFloat(System.Int32* data, System.Single accuracy)
    // Offset: 0x2B49C58
    static float ReadFloat(int* data, float accuracy);
    // static public System.Single ReadSingle(System.Int32* data, System.Single accuracy)
    // Offset: 0x2B49C78
    static float ReadSingle(int* data, float accuracy);
    // static public System.Void WriteVector2(System.Int32* data, System.Single accuracyInv, UnityEngine.Vector2 value)
    // Offset: 0x2B49C98
    static void WriteVector2(int* data, float accuracyInv, ::UnityEngine::Vector2 value);
    // static public UnityEngine.Vector2 ReadVector2(System.Int32* data, System.Single accuracy)
    // Offset: 0x2B49D04
    static ::UnityEngine::Vector2 ReadVector2(int* data, float accuracy);
    // static public System.Void WriteVector3(System.Int32* data, System.Single accuracyInv, UnityEngine.Vector3 value)
    // Offset: 0x2B49D30
    static void WriteVector3(int* data, float accuracyInv, ::UnityEngine::Vector3 value);
    // static public UnityEngine.Vector3 ReadVector3(System.Int32* data, System.Single accuracy)
    // Offset: 0x2B49DC4
    static ::UnityEngine::Vector3 ReadVector3(int* data, float accuracy);
    // static public System.Void WriteQuaternion(System.Int32* data, System.Single accuracyInv, UnityEngine.Quaternion value)
    // Offset: 0x2B49E00
    static void WriteQuaternion(int* data, float accuracyInv, ::UnityEngine::Quaternion value);
    // static public UnityEngine.Quaternion ReadQuaternion(System.Int32* data, System.Single accuracy)
    // Offset: 0x2B49EB4
    static ::UnityEngine::Quaternion ReadQuaternion(int* data, float accuracy);
    // static public System.Int32 WriteStringUtf8NoHash(System.Void* destination, System.String str)
    // Offset: 0x2B49EF8
    static int WriteStringUtf8NoHash(void* destination, ::StringW str);
    // static public System.Int32 ReadStringUtf8NoHash(System.Void* source, out System.String result)
    // Offset: 0x2B49F00
    static int ReadStringUtf8NoHash(void* source, ByRef<::StringW> result);
    // static public System.Int32 GetByteCountUtf8NoHash(System.String value)
    // Offset: 0x2B49F08
    static int GetByteCountUtf8NoHash(::StringW value);
    // static public System.Int32 WriteStringUtf32NoHash(System.Int32* ptr, System.Int32 maxLength, System.String value)
    // Offset: 0x2B49F10
    static int WriteStringUtf32NoHash(int* ptr, int maxLength, ::StringW value);
    // static public System.Int32 ReadStringUtf32NoHash(System.Int32* ptr, System.Int32 maxLength, out System.String result)
    // Offset: 0x2B49F70
    static int ReadStringUtf32NoHash(int* ptr, int maxLength, ByRef<::StringW> result);
    // static public System.Int32 WriteStringUtf32WithHash(System.Int32* ptr, System.Int32 maxLength, System.String value, ref System.String cache)
    // Offset: 0x2B4A05C
    static int WriteStringUtf32WithHash(int* ptr, int maxLength, ::StringW value, ByRef<::StringW> cache);
    // static public System.Int32 ReadStringUtf32WithHash(System.Int32* ptr, System.Int32 maxLength, ref System.String cache)
    // Offset: 0x2B4A124
    static int ReadStringUtf32WithHash(int* ptr, int maxLength, ByRef<::StringW> cache);
    // static public System.Int32 GetWordCountString(System.Int32 capacity, System.Boolean withCaching)
    // Offset: 0x2B4A260
    static int GetWordCountString(int capacity, bool withCaching);
    // static public System.Int32 VerifyRawNetworkUnwrap(System.Int32 actual, System.Int32 maxBytes)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static int VerifyRawNetworkUnwrap(int actual, int maxBytes) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::ReadWriteUtilsForWeaver::VerifyRawNetworkUnwrap");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion", "ReadWriteUtilsForWeaver", "VerifyRawNetworkUnwrap", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(actual), ::il2cpp_utils::ExtractType(maxBytes)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, actual, maxBytes);
    }
    // static public System.Int32 VerifyRawNetworkWrap(System.Int32 actual, System.Int32 maxBytes)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static int VerifyRawNetworkWrap(int actual, int maxBytes) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::ReadWriteUtilsForWeaver::VerifyRawNetworkWrap");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion", "ReadWriteUtilsForWeaver", "VerifyRawNetworkWrap", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(actual), ::il2cpp_utils::ExtractType(maxBytes)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, actual, maxBytes);
    }
  }; // Fusion.ReadWriteUtilsForWeaver
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::ReadWriteUtilsForWeaver::ReadBoolean
// Il2CppName: ReadBoolean
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int*)>(&Fusion::ReadWriteUtilsForWeaver::ReadBoolean)> {
  static const MethodInfo* get() {
    static auto* data = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::ReadWriteUtilsForWeaver*), "ReadBoolean", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data});
  }
};
// Writing MetadataGetter for method: Fusion::ReadWriteUtilsForWeaver::WriteBoolean
// Il2CppName: WriteBoolean
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int*, bool)>(&Fusion::ReadWriteUtilsForWeaver::WriteBoolean)> {
  static const MethodInfo* get() {
    static auto* data = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::ReadWriteUtilsForWeaver*), "WriteBoolean", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, value});
  }
};
// Writing MetadataGetter for method: Fusion::ReadWriteUtilsForWeaver::ReadInt32
// Il2CppName: ReadInt32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int*, float)>(&Fusion::ReadWriteUtilsForWeaver::ReadInt32)> {
  static const MethodInfo* get() {
    static auto* data = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* accuracy = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::ReadWriteUtilsForWeaver*), "ReadInt32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, accuracy});
  }
};
// Writing MetadataGetter for method: Fusion::ReadWriteUtilsForWeaver::WriteFloat
// Il2CppName: WriteFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int*, float, float)>(&Fusion::ReadWriteUtilsForWeaver::WriteFloat)> {
  static const MethodInfo* get() {
    static auto* data = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* accuracyInv = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::ReadWriteUtilsForWeaver*), "WriteFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, accuracyInv, value});
  }
};
// Writing MetadataGetter for method: Fusion::ReadWriteUtilsForWeaver::CompressFloat
// Il2CppName: CompressFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(float, float)>(&Fusion::ReadWriteUtilsForWeaver::CompressFloat)> {
  static const MethodInfo* get() {
    static auto* accuracyInv = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::ReadWriteUtilsForWeaver*), "CompressFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{accuracyInv, value});
  }
};
// Writing MetadataGetter for method: Fusion::ReadWriteUtilsForWeaver::ReadFloat
// Il2CppName: ReadFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(int*, float)>(&Fusion::ReadWriteUtilsForWeaver::ReadFloat)> {
  static const MethodInfo* get() {
    static auto* data = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* accuracy = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::ReadWriteUtilsForWeaver*), "ReadFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, accuracy});
  }
};
// Writing MetadataGetter for method: Fusion::ReadWriteUtilsForWeaver::ReadSingle
// Il2CppName: ReadSingle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(int*, float)>(&Fusion::ReadWriteUtilsForWeaver::ReadSingle)> {
  static const MethodInfo* get() {
    static auto* data = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* accuracy = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::ReadWriteUtilsForWeaver*), "ReadSingle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, accuracy});
  }
};
// Writing MetadataGetter for method: Fusion::ReadWriteUtilsForWeaver::WriteVector2
// Il2CppName: WriteVector2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int*, float, ::UnityEngine::Vector2)>(&Fusion::ReadWriteUtilsForWeaver::WriteVector2)> {
  static const MethodInfo* get() {
    static auto* data = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* accuracyInv = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::ReadWriteUtilsForWeaver*), "WriteVector2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, accuracyInv, value});
  }
};
// Writing MetadataGetter for method: Fusion::ReadWriteUtilsForWeaver::ReadVector2
// Il2CppName: ReadVector2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (*)(int*, float)>(&Fusion::ReadWriteUtilsForWeaver::ReadVector2)> {
  static const MethodInfo* get() {
    static auto* data = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* accuracy = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::ReadWriteUtilsForWeaver*), "ReadVector2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, accuracy});
  }
};
// Writing MetadataGetter for method: Fusion::ReadWriteUtilsForWeaver::WriteVector3
// Il2CppName: WriteVector3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int*, float, ::UnityEngine::Vector3)>(&Fusion::ReadWriteUtilsForWeaver::WriteVector3)> {
  static const MethodInfo* get() {
    static auto* data = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* accuracyInv = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::ReadWriteUtilsForWeaver*), "WriteVector3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, accuracyInv, value});
  }
};
// Writing MetadataGetter for method: Fusion::ReadWriteUtilsForWeaver::ReadVector3
// Il2CppName: ReadVector3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (*)(int*, float)>(&Fusion::ReadWriteUtilsForWeaver::ReadVector3)> {
  static const MethodInfo* get() {
    static auto* data = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* accuracy = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::ReadWriteUtilsForWeaver*), "ReadVector3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, accuracy});
  }
};
// Writing MetadataGetter for method: Fusion::ReadWriteUtilsForWeaver::WriteQuaternion
// Il2CppName: WriteQuaternion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int*, float, ::UnityEngine::Quaternion)>(&Fusion::ReadWriteUtilsForWeaver::WriteQuaternion)> {
  static const MethodInfo* get() {
    static auto* data = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* accuracyInv = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::ReadWriteUtilsForWeaver*), "WriteQuaternion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, accuracyInv, value});
  }
};
// Writing MetadataGetter for method: Fusion::ReadWriteUtilsForWeaver::ReadQuaternion
// Il2CppName: ReadQuaternion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Quaternion (*)(int*, float)>(&Fusion::ReadWriteUtilsForWeaver::ReadQuaternion)> {
  static const MethodInfo* get() {
    static auto* data = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* accuracy = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::ReadWriteUtilsForWeaver*), "ReadQuaternion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, accuracy});
  }
};
// Writing MetadataGetter for method: Fusion::ReadWriteUtilsForWeaver::WriteStringUtf8NoHash
// Il2CppName: WriteStringUtf8NoHash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(void*, ::StringW)>(&Fusion::ReadWriteUtilsForWeaver::WriteStringUtf8NoHash)> {
  static const MethodInfo* get() {
    static auto* destination = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Void"))->byval_arg;
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::ReadWriteUtilsForWeaver*), "WriteStringUtf8NoHash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{destination, str});
  }
};
// Writing MetadataGetter for method: Fusion::ReadWriteUtilsForWeaver::ReadStringUtf8NoHash
// Il2CppName: ReadStringUtf8NoHash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(void*, ByRef<::StringW>)>(&Fusion::ReadWriteUtilsForWeaver::ReadStringUtf8NoHash)> {
  static const MethodInfo* get() {
    static auto* source = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Void"))->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "String")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::ReadWriteUtilsForWeaver*), "ReadStringUtf8NoHash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, result});
  }
};
// Writing MetadataGetter for method: Fusion::ReadWriteUtilsForWeaver::GetByteCountUtf8NoHash
// Il2CppName: GetByteCountUtf8NoHash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW)>(&Fusion::ReadWriteUtilsForWeaver::GetByteCountUtf8NoHash)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::ReadWriteUtilsForWeaver*), "GetByteCountUtf8NoHash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::ReadWriteUtilsForWeaver::WriteStringUtf32NoHash
// Il2CppName: WriteStringUtf32NoHash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int*, int, ::StringW)>(&Fusion::ReadWriteUtilsForWeaver::WriteStringUtf32NoHash)> {
  static const MethodInfo* get() {
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* maxLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::ReadWriteUtilsForWeaver*), "WriteStringUtf32NoHash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ptr, maxLength, value});
  }
};
// Writing MetadataGetter for method: Fusion::ReadWriteUtilsForWeaver::ReadStringUtf32NoHash
// Il2CppName: ReadStringUtf32NoHash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int*, int, ByRef<::StringW>)>(&Fusion::ReadWriteUtilsForWeaver::ReadStringUtf32NoHash)> {
  static const MethodInfo* get() {
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* maxLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "String")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::ReadWriteUtilsForWeaver*), "ReadStringUtf32NoHash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ptr, maxLength, result});
  }
};
// Writing MetadataGetter for method: Fusion::ReadWriteUtilsForWeaver::WriteStringUtf32WithHash
// Il2CppName: WriteStringUtf32WithHash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int*, int, ::StringW, ByRef<::StringW>)>(&Fusion::ReadWriteUtilsForWeaver::WriteStringUtf32WithHash)> {
  static const MethodInfo* get() {
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* maxLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* cache = &::il2cpp_utils::GetClassFromName("System", "String")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::ReadWriteUtilsForWeaver*), "WriteStringUtf32WithHash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ptr, maxLength, value, cache});
  }
};
// Writing MetadataGetter for method: Fusion::ReadWriteUtilsForWeaver::ReadStringUtf32WithHash
// Il2CppName: ReadStringUtf32WithHash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int*, int, ByRef<::StringW>)>(&Fusion::ReadWriteUtilsForWeaver::ReadStringUtf32WithHash)> {
  static const MethodInfo* get() {
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* maxLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* cache = &::il2cpp_utils::GetClassFromName("System", "String")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::ReadWriteUtilsForWeaver*), "ReadStringUtf32WithHash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ptr, maxLength, cache});
  }
};
// Writing MetadataGetter for method: Fusion::ReadWriteUtilsForWeaver::GetWordCountString
// Il2CppName: GetWordCountString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int, bool)>(&Fusion::ReadWriteUtilsForWeaver::GetWordCountString)> {
  static const MethodInfo* get() {
    static auto* capacity = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* withCaching = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::ReadWriteUtilsForWeaver*), "GetWordCountString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{capacity, withCaching});
  }
};
// Writing MetadataGetter for method: Fusion::ReadWriteUtilsForWeaver::VerifyRawNetworkUnwrap
// Il2CppName: VerifyRawNetworkUnwrap
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Fusion::ReadWriteUtilsForWeaver::VerifyRawNetworkWrap
// Il2CppName: VerifyRawNetworkWrap
// Cannot write MetadataGetter for generic methods!
