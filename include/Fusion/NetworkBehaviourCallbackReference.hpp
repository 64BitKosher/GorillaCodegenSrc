// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Begin il2cpp-utils forward declares
struct Il2CppObject;
// Completed il2cpp-utils forward declares
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: NetworkBehaviourCallbackReference
  struct NetworkBehaviourCallbackReference;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Fusion::NetworkBehaviourCallbackReference, "Fusion", "NetworkBehaviourCallbackReference");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x10
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: Fusion.NetworkBehaviourCallbackReference
  // [TokenAttribute] Offset: FFFFFFFF
  struct NetworkBehaviourCallbackReference/*, public ::System::ValueType*/ {
    public:
    public:
    // System.Int32 IndexOffsetByOne
    // Size: 0x4
    // Offset: 0x0
    int IndexOffsetByOne;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: IndexOffsetByOne and: Delegate
    char __padding0[0x4] = {};
    // System.Object Delegate
    // Size: 0x8
    // Offset: 0x8
    ::Il2CppObject* Delegate;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    public:
    // Creating value type constructor for type: NetworkBehaviourCallbackReference
    constexpr NetworkBehaviourCallbackReference(int IndexOffsetByOne_ = {}, ::Il2CppObject* Delegate_ = {}) noexcept : IndexOffsetByOne{IndexOffsetByOne_}, Delegate{Delegate_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: System.Int32 IndexOffsetByOne
    [[deprecated("Use field access instead!")]] int& dyn_IndexOffsetByOne();
    // Get instance field reference: System.Object Delegate
    [[deprecated("Use field access instead!")]] ::Il2CppObject*& dyn_Delegate();
    // public System.Boolean get_IsValid()
    // Offset: 0x2B0C834
    bool get_IsValid();
  }; // Fusion.NetworkBehaviourCallbackReference
  #pragma pack(pop)
  static check_size<sizeof(NetworkBehaviourCallbackReference), 8 + sizeof(::Il2CppObject*)> __Fusion_NetworkBehaviourCallbackReferenceSizeCheck;
  static_assert(sizeof(NetworkBehaviourCallbackReference) == 0x10);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::NetworkBehaviourCallbackReference::get_IsValid
// Il2CppName: get_IsValid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::NetworkBehaviourCallbackReference::*)()>(&Fusion::NetworkBehaviourCallbackReference::get_IsValid)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkBehaviourCallbackReference), "get_IsValid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
