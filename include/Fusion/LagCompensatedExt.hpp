// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Fusion.LagCompensatedHit
#include "Fusion/LagCompensatedHit.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Vector3 because it is already included!
}
// Completed forward declares
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: LagCompensatedExt
  class LagCompensatedExt;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::LagCompensatedExt);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::LagCompensatedExt*, "Fusion", "LagCompensatedExt");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.LagCompensatedExt
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class LagCompensatedExt : public ::Il2CppObject {
    public:
    // static public System.Void SortReference(System.Collections.Generic.List`1<Fusion.LagCompensatedHit> hits, UnityEngine.Vector3 reference)
    // Offset: 0x2B41554
    static void SortReference(::System::Collections::Generic::List_1<::Fusion::LagCompensatedHit>* hits, ::UnityEngine::Vector3 reference);
    // static public System.Void SortDistance(System.Collections.Generic.List`1<Fusion.LagCompensatedHit> hits)
    // Offset: 0x2B416A8
    static void SortDistance(::System::Collections::Generic::List_1<::Fusion::LagCompensatedHit>* hits);
  }; // Fusion.LagCompensatedExt
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::LagCompensatedExt::SortReference
// Il2CppName: SortReference
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Collections::Generic::List_1<::Fusion::LagCompensatedHit>*, ::UnityEngine::Vector3)>(&Fusion::LagCompensatedExt::SortReference)> {
  static const MethodInfo* get() {
    static auto* hits = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Fusion", "LagCompensatedHit")})->byval_arg;
    static auto* reference = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::LagCompensatedExt*), "SortReference", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{hits, reference});
  }
};
// Writing MetadataGetter for method: Fusion::LagCompensatedExt::SortDistance
// Il2CppName: SortDistance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Collections::Generic::List_1<::Fusion::LagCompensatedHit>*)>(&Fusion::LagCompensatedExt::SortDistance)> {
  static const MethodInfo* get() {
    static auto* hits = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Fusion", "LagCompensatedHit")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::LagCompensatedExt*), "SortDistance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{hits});
  }
};
