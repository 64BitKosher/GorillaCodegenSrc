// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Fusion.NetworkObjectFlags
#include "Fusion/NetworkObjectFlags.hpp"
// Completed includes
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: NetworkObjectFlagsExtensions
  class NetworkObjectFlagsExtensions;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::NetworkObjectFlagsExtensions);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::NetworkObjectFlagsExtensions*, "Fusion", "NetworkObjectFlagsExtensions");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.NetworkObjectFlagsExtensions
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class NetworkObjectFlagsExtensions : public ::Il2CppObject {
    public:
    // static field const value: static private Fusion.NetworkObjectFlags CurrentVersion
    static constexpr const int CurrentVersion = 1;
    // Get static field: static private Fusion.NetworkObjectFlags CurrentVersion
    static ::Fusion::NetworkObjectFlags _get_CurrentVersion();
    // Set static field: static private Fusion.NetworkObjectFlags CurrentVersion
    static void _set_CurrentVersion(::Fusion::NetworkObjectFlags value);
    // static public System.Int32 GetVersion(Fusion.NetworkObjectFlags flags)
    // Offset: 0x2B4C310
    static int GetVersion(::Fusion::NetworkObjectFlags flags);
    // static public System.Boolean IsVersionCurrent(Fusion.NetworkObjectFlags flags)
    // Offset: 0x2B4C318
    static bool IsVersionCurrent(::Fusion::NetworkObjectFlags flags);
    // static public Fusion.NetworkObjectFlags SetCurrentVersion(Fusion.NetworkObjectFlags flags)
    // Offset: 0x2B4C328
    static ::Fusion::NetworkObjectFlags SetCurrentVersion(::Fusion::NetworkObjectFlags flags);
    // static public Fusion.NetworkObjectFlags SetType(Fusion.NetworkObjectFlags flags, Fusion.NetworkObjectFlags type)
    // Offset: 0x2B4C334
    static ::Fusion::NetworkObjectFlags SetType(::Fusion::NetworkObjectFlags flags, ::Fusion::NetworkObjectFlags type);
    // static public System.Boolean IsPrefab(Fusion.NetworkObjectFlags flags)
    // Offset: 0x2B4C340
    static bool IsPrefab(::Fusion::NetworkObjectFlags flags);
    // static public System.Boolean IsSpawnedPrefabRoot(Fusion.NetworkObjectFlags flags)
    // Offset: 0x2B4C350
    static bool IsSpawnedPrefabRoot(::Fusion::NetworkObjectFlags flags);
    // static public System.Boolean IsSpawnedPrefabNestedObject(Fusion.NetworkObjectFlags flags)
    // Offset: 0x2B4C360
    static bool IsSpawnedPrefabNestedObject(::Fusion::NetworkObjectFlags flags);
    // static public System.Boolean IsSceneObject(Fusion.NetworkObjectFlags flags)
    // Offset: 0x2B4C370
    static bool IsSceneObject(::Fusion::NetworkObjectFlags flags);
    // static public System.Boolean IsIgnored(Fusion.NetworkObjectFlags flags)
    // Offset: 0x2B4C380
    static bool IsIgnored(::Fusion::NetworkObjectFlags flags);
    // static public Fusion.NetworkObjectFlags SetIgnored(Fusion.NetworkObjectFlags flags, System.Boolean value)
    // Offset: 0x2B4C388
    static ::Fusion::NetworkObjectFlags SetIgnored(::Fusion::NetworkObjectFlags flags, bool value);
    // static public System.Boolean IsActivatedByUser(Fusion.NetworkObjectFlags flags)
    // Offset: 0x2B4C3A0
    static bool IsActivatedByUser(::Fusion::NetworkObjectFlags flags);
    // static public Fusion.NetworkObjectFlags SetActivatedByUser(Fusion.NetworkObjectFlags flags, System.Boolean value)
    // Offset: 0x2B4C3A8
    static ::Fusion::NetworkObjectFlags SetActivatedByUser(::Fusion::NetworkObjectFlags flags, bool value);
    // static private Fusion.NetworkObjectFlags SetWithMask(Fusion.NetworkObjectFlags flags, Fusion.NetworkObjectFlags value, Fusion.NetworkObjectFlags mask)
    // Offset: 0x2B4C3C0
    static ::Fusion::NetworkObjectFlags SetWithMask(::Fusion::NetworkObjectFlags flags, ::Fusion::NetworkObjectFlags value, ::Fusion::NetworkObjectFlags mask);
  }; // Fusion.NetworkObjectFlagsExtensions
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::NetworkObjectFlagsExtensions::GetVersion
// Il2CppName: GetVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Fusion::NetworkObjectFlags)>(&Fusion::NetworkObjectFlagsExtensions::GetVersion)> {
  static const MethodInfo* get() {
    static auto* flags = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkObjectFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkObjectFlagsExtensions*), "GetVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{flags});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkObjectFlagsExtensions::IsVersionCurrent
// Il2CppName: IsVersionCurrent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Fusion::NetworkObjectFlags)>(&Fusion::NetworkObjectFlagsExtensions::IsVersionCurrent)> {
  static const MethodInfo* get() {
    static auto* flags = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkObjectFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkObjectFlagsExtensions*), "IsVersionCurrent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{flags});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkObjectFlagsExtensions::SetCurrentVersion
// Il2CppName: SetCurrentVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::NetworkObjectFlags (*)(::Fusion::NetworkObjectFlags)>(&Fusion::NetworkObjectFlagsExtensions::SetCurrentVersion)> {
  static const MethodInfo* get() {
    static auto* flags = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkObjectFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkObjectFlagsExtensions*), "SetCurrentVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{flags});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkObjectFlagsExtensions::SetType
// Il2CppName: SetType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::NetworkObjectFlags (*)(::Fusion::NetworkObjectFlags, ::Fusion::NetworkObjectFlags)>(&Fusion::NetworkObjectFlagsExtensions::SetType)> {
  static const MethodInfo* get() {
    static auto* flags = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkObjectFlags")->byval_arg;
    static auto* type = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkObjectFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkObjectFlagsExtensions*), "SetType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{flags, type});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkObjectFlagsExtensions::IsPrefab
// Il2CppName: IsPrefab
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Fusion::NetworkObjectFlags)>(&Fusion::NetworkObjectFlagsExtensions::IsPrefab)> {
  static const MethodInfo* get() {
    static auto* flags = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkObjectFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkObjectFlagsExtensions*), "IsPrefab", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{flags});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkObjectFlagsExtensions::IsSpawnedPrefabRoot
// Il2CppName: IsSpawnedPrefabRoot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Fusion::NetworkObjectFlags)>(&Fusion::NetworkObjectFlagsExtensions::IsSpawnedPrefabRoot)> {
  static const MethodInfo* get() {
    static auto* flags = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkObjectFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkObjectFlagsExtensions*), "IsSpawnedPrefabRoot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{flags});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkObjectFlagsExtensions::IsSpawnedPrefabNestedObject
// Il2CppName: IsSpawnedPrefabNestedObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Fusion::NetworkObjectFlags)>(&Fusion::NetworkObjectFlagsExtensions::IsSpawnedPrefabNestedObject)> {
  static const MethodInfo* get() {
    static auto* flags = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkObjectFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkObjectFlagsExtensions*), "IsSpawnedPrefabNestedObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{flags});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkObjectFlagsExtensions::IsSceneObject
// Il2CppName: IsSceneObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Fusion::NetworkObjectFlags)>(&Fusion::NetworkObjectFlagsExtensions::IsSceneObject)> {
  static const MethodInfo* get() {
    static auto* flags = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkObjectFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkObjectFlagsExtensions*), "IsSceneObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{flags});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkObjectFlagsExtensions::IsIgnored
// Il2CppName: IsIgnored
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Fusion::NetworkObjectFlags)>(&Fusion::NetworkObjectFlagsExtensions::IsIgnored)> {
  static const MethodInfo* get() {
    static auto* flags = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkObjectFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkObjectFlagsExtensions*), "IsIgnored", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{flags});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkObjectFlagsExtensions::SetIgnored
// Il2CppName: SetIgnored
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::NetworkObjectFlags (*)(::Fusion::NetworkObjectFlags, bool)>(&Fusion::NetworkObjectFlagsExtensions::SetIgnored)> {
  static const MethodInfo* get() {
    static auto* flags = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkObjectFlags")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkObjectFlagsExtensions*), "SetIgnored", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{flags, value});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkObjectFlagsExtensions::IsActivatedByUser
// Il2CppName: IsActivatedByUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Fusion::NetworkObjectFlags)>(&Fusion::NetworkObjectFlagsExtensions::IsActivatedByUser)> {
  static const MethodInfo* get() {
    static auto* flags = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkObjectFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkObjectFlagsExtensions*), "IsActivatedByUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{flags});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkObjectFlagsExtensions::SetActivatedByUser
// Il2CppName: SetActivatedByUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::NetworkObjectFlags (*)(::Fusion::NetworkObjectFlags, bool)>(&Fusion::NetworkObjectFlagsExtensions::SetActivatedByUser)> {
  static const MethodInfo* get() {
    static auto* flags = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkObjectFlags")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkObjectFlagsExtensions*), "SetActivatedByUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{flags, value});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkObjectFlagsExtensions::SetWithMask
// Il2CppName: SetWithMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::NetworkObjectFlags (*)(::Fusion::NetworkObjectFlags, ::Fusion::NetworkObjectFlags, ::Fusion::NetworkObjectFlags)>(&Fusion::NetworkObjectFlagsExtensions::SetWithMask)> {
  static const MethodInfo* get() {
    static auto* flags = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkObjectFlags")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkObjectFlags")->byval_arg;
    static auto* mask = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkObjectFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkObjectFlagsExtensions*), "SetWithMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{flags, value, mask});
  }
};
