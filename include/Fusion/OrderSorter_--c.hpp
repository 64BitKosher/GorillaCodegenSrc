// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Fusion.OrderSorter
#include "Fusion/OrderSorter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Comparison`1<T>
  template<typename T>
  class Comparison_1;
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::OrderSorter::$$c);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::OrderSorter::$$c*, "Fusion", "OrderSorter/<>c");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.OrderSorter/<>c
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class OrderSorter::$$c : public ::Il2CppObject {
    public:
    // Get static field: static public readonly Fusion.OrderSorter/<>c <>9
    static ::Fusion::OrderSorter::$$c* _get_$$9();
    // Set static field: static public readonly Fusion.OrderSorter/<>c <>9
    static void _set_$$9(::Fusion::OrderSorter::$$c* value);
    // Get static field: static public System.Comparison`1<System.Type> <>9__14_0
    static ::System::Comparison_1<::System::Type*>* _get_$$9__14_0();
    // Set static field: static public System.Comparison`1<System.Type> <>9__14_0
    static void _set_$$9__14_0(::System::Comparison_1<::System::Type*>* value);
    // static private System.Void .cctor()
    // Offset: 0x2B150AC
    static void _cctor();
    // public System.Void .ctor()
    // Offset: 0x2B15114
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static OrderSorter::$$c* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::OrderSorter::$$c::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<OrderSorter::$$c*, creationType>()));
    }
    // System.Int32 <AlphabetizeTypes>b__14_0(System.Type a, System.Type b)
    // Offset: 0x2B1511C
    int $AlphabetizeTypes$b__14_0(::System::Type* a, ::System::Type* b);
  }; // Fusion.OrderSorter/<>c
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::OrderSorter::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Fusion::OrderSorter::$$c::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::OrderSorter::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::OrderSorter::$$c::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Fusion::OrderSorter::$$c::$AlphabetizeTypes$b__14_0
// Il2CppName: <AlphabetizeTypes>b__14_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Fusion::OrderSorter::$$c::*)(::System::Type*, ::System::Type*)>(&Fusion::OrderSorter::$$c::$AlphabetizeTypes$b__14_0)> {
  static const MethodInfo* get() {
    static auto* a = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* b = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::OrderSorter::$$c*), "<AlphabetizeTypes>b__14_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{a, b});
  }
};
