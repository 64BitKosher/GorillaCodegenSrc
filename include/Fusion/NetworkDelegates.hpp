// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Fusion.INetworkRunnerCallbacks
#include "Fusion/INetworkRunnerCallbacks.hpp"
// Including type: Fusion.PlayerRef
#include "Fusion/PlayerRef.hpp"
// Including type: Fusion.NetworkInput
#include "Fusion/NetworkInput.hpp"
// Including type: Fusion.ShutdownReason
#include "Fusion/ShutdownReason.hpp"
// Including type: Fusion.Sockets.NetAddress
#include "Fusion/Sockets/NetAddress.hpp"
// Including type: Fusion.Sockets.NetConnectFailedReason
#include "Fusion/Sockets/NetConnectFailedReason.hpp"
// Including type: Fusion.SimulationMessagePtr
#include "Fusion/SimulationMessagePtr.hpp"
// Including type: System.ArraySegment`1
#include "System/ArraySegment_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
  // Forward declaring type: Action`3<T1, T2, T3>
  template<typename T1, typename T2, typename T3>
  class Action_3;
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Forward declaring namespace: Fusion
namespace Fusion {
  // Forward declaring type: NetworkRunner
  class NetworkRunner;
  // Forward declaring type: SessionInfo
  class SessionInfo;
  // Forward declaring type: HostMigrationToken
  class HostMigrationToken;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Completed forward declares
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: NetworkDelegates
  class NetworkDelegates;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::NetworkDelegates);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::NetworkDelegates*, "Fusion", "NetworkDelegates");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x90
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.NetworkDelegates
  // [TokenAttribute] Offset: FFFFFFFF
  class NetworkDelegates : public ::Il2CppObject/*, public ::Fusion::INetworkRunnerCallbacks*/ {
    public:
    public:
    // public System.Action`2<Fusion.NetworkRunner,Fusion.PlayerRef> OnPlayerJoined
    // Size: 0x8
    // Offset: 0x10
    ::System::Action_2<::Fusion::NetworkRunner*, ::Fusion::PlayerRef>* OnPlayerJoined;
    // Field size check
    static_assert(sizeof(::System::Action_2<::Fusion::NetworkRunner*, ::Fusion::PlayerRef>*) == 0x8);
    // public System.Action`2<Fusion.NetworkRunner,Fusion.PlayerRef> OnPlayerLeft
    // Size: 0x8
    // Offset: 0x18
    ::System::Action_2<::Fusion::NetworkRunner*, ::Fusion::PlayerRef>* OnPlayerLeft;
    // Field size check
    static_assert(sizeof(::System::Action_2<::Fusion::NetworkRunner*, ::Fusion::PlayerRef>*) == 0x8);
    // public System.Action`2<Fusion.NetworkRunner,Fusion.NetworkInput> OnInput
    // Size: 0x8
    // Offset: 0x20
    ::System::Action_2<::Fusion::NetworkRunner*, ::Fusion::NetworkInput>* OnInput;
    // Field size check
    static_assert(sizeof(::System::Action_2<::Fusion::NetworkRunner*, ::Fusion::NetworkInput>*) == 0x8);
    // public System.Action`3<Fusion.NetworkRunner,Fusion.PlayerRef,Fusion.NetworkInput> OnInputMissing
    // Size: 0x8
    // Offset: 0x28
    ::System::Action_3<::Fusion::NetworkRunner*, ::Fusion::PlayerRef, ::Fusion::NetworkInput>* OnInputMissing;
    // Field size check
    static_assert(sizeof(::System::Action_3<::Fusion::NetworkRunner*, ::Fusion::PlayerRef, ::Fusion::NetworkInput>*) == 0x8);
    // public System.Action`2<Fusion.NetworkRunner,Fusion.ShutdownReason> OnShutdown
    // Size: 0x8
    // Offset: 0x30
    ::System::Action_2<::Fusion::NetworkRunner*, ::Fusion::ShutdownReason>* OnShutdown;
    // Field size check
    static_assert(sizeof(::System::Action_2<::Fusion::NetworkRunner*, ::Fusion::ShutdownReason>*) == 0x8);
    // public System.Action`1<Fusion.NetworkRunner> OnConnectedToServer
    // Size: 0x8
    // Offset: 0x38
    ::System::Action_1<::Fusion::NetworkRunner*>* OnConnectedToServer;
    // Field size check
    static_assert(sizeof(::System::Action_1<::Fusion::NetworkRunner*>*) == 0x8);
    // public System.Action`1<Fusion.NetworkRunner> OnDisconnectedFromServer
    // Size: 0x8
    // Offset: 0x40
    ::System::Action_1<::Fusion::NetworkRunner*>* OnDisconnectedFromServer;
    // Field size check
    static_assert(sizeof(::System::Action_1<::Fusion::NetworkRunner*>*) == 0x8);
    // public System.Action`1<Fusion.NetworkRunner> OnSceneLoadDone
    // Size: 0x8
    // Offset: 0x48
    ::System::Action_1<::Fusion::NetworkRunner*>* OnSceneLoadDone;
    // Field size check
    static_assert(sizeof(::System::Action_1<::Fusion::NetworkRunner*>*) == 0x8);
    // public System.Action`1<Fusion.NetworkRunner> OnSceneLoadStart
    // Size: 0x8
    // Offset: 0x50
    ::System::Action_1<::Fusion::NetworkRunner*>* OnSceneLoadStart;
    // Field size check
    static_assert(sizeof(::System::Action_1<::Fusion::NetworkRunner*>*) == 0x8);
    // public System.Action`3<Fusion.NetworkRunner,Fusion.NetworkRunnerCallbackArgs/ConnectRequest,System.Byte[]> OnConnectRequest
    // Size: 0x8
    // Offset: 0x58
    ::System::Action_3<::Fusion::NetworkRunner*, ::Fusion::NetworkRunnerCallbackArgs::ConnectRequest*, ::ArrayW<uint8_t>>* OnConnectRequest;
    // Field size check
    static_assert(sizeof(::System::Action_3<::Fusion::NetworkRunner*, ::Fusion::NetworkRunnerCallbackArgs::ConnectRequest*, ::ArrayW<uint8_t>>*) == 0x8);
    // public System.Action`3<Fusion.NetworkRunner,Fusion.Sockets.NetAddress,Fusion.Sockets.NetConnectFailedReason> OnConnectFailed
    // Size: 0x8
    // Offset: 0x60
    ::System::Action_3<::Fusion::NetworkRunner*, ::Fusion::Sockets::NetAddress, ::Fusion::Sockets::NetConnectFailedReason>* OnConnectFailed;
    // Field size check
    static_assert(sizeof(::System::Action_3<::Fusion::NetworkRunner*, ::Fusion::Sockets::NetAddress, ::Fusion::Sockets::NetConnectFailedReason>*) == 0x8);
    // public System.Action`2<Fusion.NetworkRunner,Fusion.SimulationMessagePtr> OnUserSimulationMessage
    // Size: 0x8
    // Offset: 0x68
    ::System::Action_2<::Fusion::NetworkRunner*, ::Fusion::SimulationMessagePtr>* OnUserSimulationMessage;
    // Field size check
    static_assert(sizeof(::System::Action_2<::Fusion::NetworkRunner*, ::Fusion::SimulationMessagePtr>*) == 0x8);
    // public System.Action`2<Fusion.NetworkRunner,System.Collections.Generic.List`1<Fusion.SessionInfo>> OnSessionListUpdated
    // Size: 0x8
    // Offset: 0x70
    ::System::Action_2<::Fusion::NetworkRunner*, ::System::Collections::Generic::List_1<::Fusion::SessionInfo*>*>* OnSessionListUpdated;
    // Field size check
    static_assert(sizeof(::System::Action_2<::Fusion::NetworkRunner*, ::System::Collections::Generic::List_1<::Fusion::SessionInfo*>*>*) == 0x8);
    // public System.Action`2<Fusion.NetworkRunner,System.Collections.Generic.Dictionary`2<System.String,System.Object>> OnCustomAuthenticationResponse
    // Size: 0x8
    // Offset: 0x78
    ::System::Action_2<::Fusion::NetworkRunner*, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>* OnCustomAuthenticationResponse;
    // Field size check
    static_assert(sizeof(::System::Action_2<::Fusion::NetworkRunner*, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>*) == 0x8);
    // public System.Action`2<Fusion.NetworkRunner,Fusion.HostMigrationToken> OnHostMigration
    // Size: 0x8
    // Offset: 0x80
    ::System::Action_2<::Fusion::NetworkRunner*, ::Fusion::HostMigrationToken*>* OnHostMigration;
    // Field size check
    static_assert(sizeof(::System::Action_2<::Fusion::NetworkRunner*, ::Fusion::HostMigrationToken*>*) == 0x8);
    // public System.Action`3<Fusion.NetworkRunner,Fusion.PlayerRef,System.ArraySegment`1<System.Byte>> OnReliableDataReceived
    // Size: 0x8
    // Offset: 0x88
    ::System::Action_3<::Fusion::NetworkRunner*, ::Fusion::PlayerRef, ::System::ArraySegment_1<uint8_t>>* OnReliableDataReceived;
    // Field size check
    static_assert(sizeof(::System::Action_3<::Fusion::NetworkRunner*, ::Fusion::PlayerRef, ::System::ArraySegment_1<uint8_t>>*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::Fusion::INetworkRunnerCallbacks
    operator ::Fusion::INetworkRunnerCallbacks() noexcept {
      return *reinterpret_cast<::Fusion::INetworkRunnerCallbacks*>(this);
    }
    // Get instance field reference: public System.Action`2<Fusion.NetworkRunner,Fusion.PlayerRef> OnPlayerJoined
    [[deprecated("Use field access instead!")]] ::System::Action_2<::Fusion::NetworkRunner*, ::Fusion::PlayerRef>*& dyn_OnPlayerJoined();
    // Get instance field reference: public System.Action`2<Fusion.NetworkRunner,Fusion.PlayerRef> OnPlayerLeft
    [[deprecated("Use field access instead!")]] ::System::Action_2<::Fusion::NetworkRunner*, ::Fusion::PlayerRef>*& dyn_OnPlayerLeft();
    // Get instance field reference: public System.Action`2<Fusion.NetworkRunner,Fusion.NetworkInput> OnInput
    [[deprecated("Use field access instead!")]] ::System::Action_2<::Fusion::NetworkRunner*, ::Fusion::NetworkInput>*& dyn_OnInput();
    // Get instance field reference: public System.Action`3<Fusion.NetworkRunner,Fusion.PlayerRef,Fusion.NetworkInput> OnInputMissing
    [[deprecated("Use field access instead!")]] ::System::Action_3<::Fusion::NetworkRunner*, ::Fusion::PlayerRef, ::Fusion::NetworkInput>*& dyn_OnInputMissing();
    // Get instance field reference: public System.Action`2<Fusion.NetworkRunner,Fusion.ShutdownReason> OnShutdown
    [[deprecated("Use field access instead!")]] ::System::Action_2<::Fusion::NetworkRunner*, ::Fusion::ShutdownReason>*& dyn_OnShutdown();
    // Get instance field reference: public System.Action`1<Fusion.NetworkRunner> OnConnectedToServer
    [[deprecated("Use field access instead!")]] ::System::Action_1<::Fusion::NetworkRunner*>*& dyn_OnConnectedToServer();
    // Get instance field reference: public System.Action`1<Fusion.NetworkRunner> OnDisconnectedFromServer
    [[deprecated("Use field access instead!")]] ::System::Action_1<::Fusion::NetworkRunner*>*& dyn_OnDisconnectedFromServer();
    // Get instance field reference: public System.Action`1<Fusion.NetworkRunner> OnSceneLoadDone
    [[deprecated("Use field access instead!")]] ::System::Action_1<::Fusion::NetworkRunner*>*& dyn_OnSceneLoadDone();
    // Get instance field reference: public System.Action`1<Fusion.NetworkRunner> OnSceneLoadStart
    [[deprecated("Use field access instead!")]] ::System::Action_1<::Fusion::NetworkRunner*>*& dyn_OnSceneLoadStart();
    // Get instance field reference: public System.Action`3<Fusion.NetworkRunner,Fusion.NetworkRunnerCallbackArgs/ConnectRequest,System.Byte[]> OnConnectRequest
    [[deprecated("Use field access instead!")]] ::System::Action_3<::Fusion::NetworkRunner*, ::Fusion::NetworkRunnerCallbackArgs::ConnectRequest*, ::ArrayW<uint8_t>>*& dyn_OnConnectRequest();
    // Get instance field reference: public System.Action`3<Fusion.NetworkRunner,Fusion.Sockets.NetAddress,Fusion.Sockets.NetConnectFailedReason> OnConnectFailed
    [[deprecated("Use field access instead!")]] ::System::Action_3<::Fusion::NetworkRunner*, ::Fusion::Sockets::NetAddress, ::Fusion::Sockets::NetConnectFailedReason>*& dyn_OnConnectFailed();
    // Get instance field reference: public System.Action`2<Fusion.NetworkRunner,Fusion.SimulationMessagePtr> OnUserSimulationMessage
    [[deprecated("Use field access instead!")]] ::System::Action_2<::Fusion::NetworkRunner*, ::Fusion::SimulationMessagePtr>*& dyn_OnUserSimulationMessage();
    // Get instance field reference: public System.Action`2<Fusion.NetworkRunner,System.Collections.Generic.List`1<Fusion.SessionInfo>> OnSessionListUpdated
    [[deprecated("Use field access instead!")]] ::System::Action_2<::Fusion::NetworkRunner*, ::System::Collections::Generic::List_1<::Fusion::SessionInfo*>*>*& dyn_OnSessionListUpdated();
    // Get instance field reference: public System.Action`2<Fusion.NetworkRunner,System.Collections.Generic.Dictionary`2<System.String,System.Object>> OnCustomAuthenticationResponse
    [[deprecated("Use field access instead!")]] ::System::Action_2<::Fusion::NetworkRunner*, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>*& dyn_OnCustomAuthenticationResponse();
    // Get instance field reference: public System.Action`2<Fusion.NetworkRunner,Fusion.HostMigrationToken> OnHostMigration
    [[deprecated("Use field access instead!")]] ::System::Action_2<::Fusion::NetworkRunner*, ::Fusion::HostMigrationToken*>*& dyn_OnHostMigration();
    // Get instance field reference: public System.Action`3<Fusion.NetworkRunner,Fusion.PlayerRef,System.ArraySegment`1<System.Byte>> OnReliableDataReceived
    [[deprecated("Use field access instead!")]] ::System::Action_3<::Fusion::NetworkRunner*, ::Fusion::PlayerRef, ::System::ArraySegment_1<uint8_t>>*& dyn_OnReliableDataReceived();
    // private System.Void Fusion.INetworkRunnerCallbacks.OnPlayerJoined(Fusion.NetworkRunner runner, Fusion.PlayerRef player)
    // Offset: 0x2B5166C
    void Fusion_INetworkRunnerCallbacks_OnPlayerJoined(::Fusion::NetworkRunner* runner, ::Fusion::PlayerRef player);
    // private System.Void Fusion.INetworkRunnerCallbacks.OnPlayerLeft(Fusion.NetworkRunner runner, Fusion.PlayerRef player)
    // Offset: 0x2B5168C
    void Fusion_INetworkRunnerCallbacks_OnPlayerLeft(::Fusion::NetworkRunner* runner, ::Fusion::PlayerRef player);
    // private System.Void Fusion.INetworkRunnerCallbacks.OnInput(Fusion.NetworkRunner runner, Fusion.NetworkInput input)
    // Offset: 0x2B516AC
    void Fusion_INetworkRunnerCallbacks_OnInput(::Fusion::NetworkRunner* runner, ::Fusion::NetworkInput input);
    // private System.Void Fusion.INetworkRunnerCallbacks.OnInputMissing(Fusion.NetworkRunner runner, Fusion.PlayerRef player, Fusion.NetworkInput input)
    // Offset: 0x2B516C8
    void Fusion_INetworkRunnerCallbacks_OnInputMissing(::Fusion::NetworkRunner* runner, ::Fusion::PlayerRef player, ::Fusion::NetworkInput input);
    // private System.Void Fusion.INetworkRunnerCallbacks.OnShutdown(Fusion.NetworkRunner runner, Fusion.ShutdownReason shutdownReason)
    // Offset: 0x2B516E8
    void Fusion_INetworkRunnerCallbacks_OnShutdown(::Fusion::NetworkRunner* runner, ::Fusion::ShutdownReason shutdownReason);
    // private System.Void Fusion.INetworkRunnerCallbacks.OnConnectedToServer(Fusion.NetworkRunner runner)
    // Offset: 0x2B51704
    void Fusion_INetworkRunnerCallbacks_OnConnectedToServer(::Fusion::NetworkRunner* runner);
    // private System.Void Fusion.INetworkRunnerCallbacks.OnDisconnectedFromServer(Fusion.NetworkRunner runner)
    // Offset: 0x2B51720
    void Fusion_INetworkRunnerCallbacks_OnDisconnectedFromServer(::Fusion::NetworkRunner* runner);
    // private System.Void Fusion.INetworkRunnerCallbacks.OnConnectRequest(Fusion.NetworkRunner runner, Fusion.NetworkRunnerCallbackArgs/ConnectRequest request, System.Byte[] token)
    // Offset: 0x2B5173C
    void Fusion_INetworkRunnerCallbacks_OnConnectRequest(::Fusion::NetworkRunner* runner, ::Fusion::NetworkRunnerCallbackArgs::ConnectRequest* request, ::ArrayW<uint8_t> token);
    // private System.Void Fusion.INetworkRunnerCallbacks.OnConnectFailed(Fusion.NetworkRunner runner, Fusion.Sockets.NetAddress remoteAddress, Fusion.Sockets.NetConnectFailedReason reason)
    // Offset: 0x2B51758
    void Fusion_INetworkRunnerCallbacks_OnConnectFailed(::Fusion::NetworkRunner* runner, ::Fusion::Sockets::NetAddress remoteAddress, ::Fusion::Sockets::NetConnectFailedReason reason);
    // private System.Void Fusion.INetworkRunnerCallbacks.OnUserSimulationMessage(Fusion.NetworkRunner runner, Fusion.SimulationMessagePtr message)
    // Offset: 0x2B517C0
    void Fusion_INetworkRunnerCallbacks_OnUserSimulationMessage(::Fusion::NetworkRunner* runner, ::Fusion::SimulationMessagePtr message);
    // private System.Void Fusion.INetworkRunnerCallbacks.OnSessionListUpdated(Fusion.NetworkRunner runner, System.Collections.Generic.List`1<Fusion.SessionInfo> sessionList)
    // Offset: 0x2B517DC
    void Fusion_INetworkRunnerCallbacks_OnSessionListUpdated(::Fusion::NetworkRunner* runner, ::System::Collections::Generic::List_1<::Fusion::SessionInfo*>* sessionList);
    // private System.Void Fusion.INetworkRunnerCallbacks.OnReliableDataReceived(Fusion.NetworkRunner runner, Fusion.PlayerRef player, System.ArraySegment`1<System.Byte> data)
    // Offset: 0x2B517F8
    void Fusion_INetworkRunnerCallbacks_OnReliableDataReceived(::Fusion::NetworkRunner* runner, ::Fusion::PlayerRef player, ::System::ArraySegment_1<uint8_t> data);
    // private System.Void Fusion.INetworkRunnerCallbacks.OnSceneLoadDone(Fusion.NetworkRunner runner)
    // Offset: 0x2B51818
    void Fusion_INetworkRunnerCallbacks_OnSceneLoadDone(::Fusion::NetworkRunner* runner);
    // private System.Void Fusion.INetworkRunnerCallbacks.OnSceneLoadStart(Fusion.NetworkRunner runner)
    // Offset: 0x2B51834
    void Fusion_INetworkRunnerCallbacks_OnSceneLoadStart(::Fusion::NetworkRunner* runner);
    // private System.Void Fusion.INetworkRunnerCallbacks.OnCustomAuthenticationResponse(Fusion.NetworkRunner runner, System.Collections.Generic.Dictionary`2<System.String,System.Object> data)
    // Offset: 0x2B51850
    void Fusion_INetworkRunnerCallbacks_OnCustomAuthenticationResponse(::Fusion::NetworkRunner* runner, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* data);
    // private System.Void Fusion.INetworkRunnerCallbacks.OnHostMigration(Fusion.NetworkRunner runner, Fusion.HostMigrationToken hostMigrationToken)
    // Offset: 0x2B5186C
    void Fusion_INetworkRunnerCallbacks_OnHostMigration(::Fusion::NetworkRunner* runner, ::Fusion::HostMigrationToken* hostMigrationToken);
    // public System.Void .ctor()
    // Offset: 0x2B51888
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NetworkDelegates* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkDelegates::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NetworkDelegates*, creationType>()));
    }
  }; // Fusion.NetworkDelegates
  #pragma pack(pop)
  static check_size<sizeof(NetworkDelegates), 136 + sizeof(::System::Action_3<::Fusion::NetworkRunner*, ::Fusion::PlayerRef, ::System::ArraySegment_1<uint8_t>>*)> __Fusion_NetworkDelegatesSizeCheck;
  static_assert(sizeof(NetworkDelegates) == 0x90);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::NetworkDelegates::Fusion_INetworkRunnerCallbacks_OnPlayerJoined
// Il2CppName: Fusion.INetworkRunnerCallbacks.OnPlayerJoined
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkDelegates::*)(::Fusion::NetworkRunner*, ::Fusion::PlayerRef)>(&Fusion::NetworkDelegates::Fusion_INetworkRunnerCallbacks_OnPlayerJoined)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    static auto* player = &::il2cpp_utils::GetClassFromName("Fusion", "PlayerRef")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkDelegates*), "Fusion.INetworkRunnerCallbacks.OnPlayerJoined", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner, player});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkDelegates::Fusion_INetworkRunnerCallbacks_OnPlayerLeft
// Il2CppName: Fusion.INetworkRunnerCallbacks.OnPlayerLeft
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkDelegates::*)(::Fusion::NetworkRunner*, ::Fusion::PlayerRef)>(&Fusion::NetworkDelegates::Fusion_INetworkRunnerCallbacks_OnPlayerLeft)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    static auto* player = &::il2cpp_utils::GetClassFromName("Fusion", "PlayerRef")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkDelegates*), "Fusion.INetworkRunnerCallbacks.OnPlayerLeft", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner, player});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkDelegates::Fusion_INetworkRunnerCallbacks_OnInput
// Il2CppName: Fusion.INetworkRunnerCallbacks.OnInput
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkDelegates::*)(::Fusion::NetworkRunner*, ::Fusion::NetworkInput)>(&Fusion::NetworkDelegates::Fusion_INetworkRunnerCallbacks_OnInput)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    static auto* input = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkInput")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkDelegates*), "Fusion.INetworkRunnerCallbacks.OnInput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner, input});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkDelegates::Fusion_INetworkRunnerCallbacks_OnInputMissing
// Il2CppName: Fusion.INetworkRunnerCallbacks.OnInputMissing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkDelegates::*)(::Fusion::NetworkRunner*, ::Fusion::PlayerRef, ::Fusion::NetworkInput)>(&Fusion::NetworkDelegates::Fusion_INetworkRunnerCallbacks_OnInputMissing)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    static auto* player = &::il2cpp_utils::GetClassFromName("Fusion", "PlayerRef")->byval_arg;
    static auto* input = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkInput")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkDelegates*), "Fusion.INetworkRunnerCallbacks.OnInputMissing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner, player, input});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkDelegates::Fusion_INetworkRunnerCallbacks_OnShutdown
// Il2CppName: Fusion.INetworkRunnerCallbacks.OnShutdown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkDelegates::*)(::Fusion::NetworkRunner*, ::Fusion::ShutdownReason)>(&Fusion::NetworkDelegates::Fusion_INetworkRunnerCallbacks_OnShutdown)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    static auto* shutdownReason = &::il2cpp_utils::GetClassFromName("Fusion", "ShutdownReason")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkDelegates*), "Fusion.INetworkRunnerCallbacks.OnShutdown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner, shutdownReason});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkDelegates::Fusion_INetworkRunnerCallbacks_OnConnectedToServer
// Il2CppName: Fusion.INetworkRunnerCallbacks.OnConnectedToServer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkDelegates::*)(::Fusion::NetworkRunner*)>(&Fusion::NetworkDelegates::Fusion_INetworkRunnerCallbacks_OnConnectedToServer)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkDelegates*), "Fusion.INetworkRunnerCallbacks.OnConnectedToServer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkDelegates::Fusion_INetworkRunnerCallbacks_OnDisconnectedFromServer
// Il2CppName: Fusion.INetworkRunnerCallbacks.OnDisconnectedFromServer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkDelegates::*)(::Fusion::NetworkRunner*)>(&Fusion::NetworkDelegates::Fusion_INetworkRunnerCallbacks_OnDisconnectedFromServer)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkDelegates*), "Fusion.INetworkRunnerCallbacks.OnDisconnectedFromServer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkDelegates::Fusion_INetworkRunnerCallbacks_OnConnectRequest
// Il2CppName: Fusion.INetworkRunnerCallbacks.OnConnectRequest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkDelegates::*)(::Fusion::NetworkRunner*, ::Fusion::NetworkRunnerCallbackArgs::ConnectRequest*, ::ArrayW<uint8_t>)>(&Fusion::NetworkDelegates::Fusion_INetworkRunnerCallbacks_OnConnectRequest)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    static auto* request = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunnerCallbackArgs/ConnectRequest")->byval_arg;
    static auto* token = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkDelegates*), "Fusion.INetworkRunnerCallbacks.OnConnectRequest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner, request, token});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkDelegates::Fusion_INetworkRunnerCallbacks_OnConnectFailed
// Il2CppName: Fusion.INetworkRunnerCallbacks.OnConnectFailed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkDelegates::*)(::Fusion::NetworkRunner*, ::Fusion::Sockets::NetAddress, ::Fusion::Sockets::NetConnectFailedReason)>(&Fusion::NetworkDelegates::Fusion_INetworkRunnerCallbacks_OnConnectFailed)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    static auto* remoteAddress = &::il2cpp_utils::GetClassFromName("Fusion.Sockets", "NetAddress")->byval_arg;
    static auto* reason = &::il2cpp_utils::GetClassFromName("Fusion.Sockets", "NetConnectFailedReason")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkDelegates*), "Fusion.INetworkRunnerCallbacks.OnConnectFailed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner, remoteAddress, reason});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkDelegates::Fusion_INetworkRunnerCallbacks_OnUserSimulationMessage
// Il2CppName: Fusion.INetworkRunnerCallbacks.OnUserSimulationMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkDelegates::*)(::Fusion::NetworkRunner*, ::Fusion::SimulationMessagePtr)>(&Fusion::NetworkDelegates::Fusion_INetworkRunnerCallbacks_OnUserSimulationMessage)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    static auto* message = &::il2cpp_utils::GetClassFromName("Fusion", "SimulationMessagePtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkDelegates*), "Fusion.INetworkRunnerCallbacks.OnUserSimulationMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner, message});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkDelegates::Fusion_INetworkRunnerCallbacks_OnSessionListUpdated
// Il2CppName: Fusion.INetworkRunnerCallbacks.OnSessionListUpdated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkDelegates::*)(::Fusion::NetworkRunner*, ::System::Collections::Generic::List_1<::Fusion::SessionInfo*>*)>(&Fusion::NetworkDelegates::Fusion_INetworkRunnerCallbacks_OnSessionListUpdated)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    static auto* sessionList = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Fusion", "SessionInfo")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkDelegates*), "Fusion.INetworkRunnerCallbacks.OnSessionListUpdated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner, sessionList});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkDelegates::Fusion_INetworkRunnerCallbacks_OnReliableDataReceived
// Il2CppName: Fusion.INetworkRunnerCallbacks.OnReliableDataReceived
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkDelegates::*)(::Fusion::NetworkRunner*, ::Fusion::PlayerRef, ::System::ArraySegment_1<uint8_t>)>(&Fusion::NetworkDelegates::Fusion_INetworkRunnerCallbacks_OnReliableDataReceived)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    static auto* player = &::il2cpp_utils::GetClassFromName("Fusion", "PlayerRef")->byval_arg;
    static auto* data = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ArraySegment`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Byte")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkDelegates*), "Fusion.INetworkRunnerCallbacks.OnReliableDataReceived", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner, player, data});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkDelegates::Fusion_INetworkRunnerCallbacks_OnSceneLoadDone
// Il2CppName: Fusion.INetworkRunnerCallbacks.OnSceneLoadDone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkDelegates::*)(::Fusion::NetworkRunner*)>(&Fusion::NetworkDelegates::Fusion_INetworkRunnerCallbacks_OnSceneLoadDone)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkDelegates*), "Fusion.INetworkRunnerCallbacks.OnSceneLoadDone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkDelegates::Fusion_INetworkRunnerCallbacks_OnSceneLoadStart
// Il2CppName: Fusion.INetworkRunnerCallbacks.OnSceneLoadStart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkDelegates::*)(::Fusion::NetworkRunner*)>(&Fusion::NetworkDelegates::Fusion_INetworkRunnerCallbacks_OnSceneLoadStart)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkDelegates*), "Fusion.INetworkRunnerCallbacks.OnSceneLoadStart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkDelegates::Fusion_INetworkRunnerCallbacks_OnCustomAuthenticationResponse
// Il2CppName: Fusion.INetworkRunnerCallbacks.OnCustomAuthenticationResponse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkDelegates::*)(::Fusion::NetworkRunner*, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*)>(&Fusion::NetworkDelegates::Fusion_INetworkRunnerCallbacks_OnCustomAuthenticationResponse)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    static auto* data = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Object")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkDelegates*), "Fusion.INetworkRunnerCallbacks.OnCustomAuthenticationResponse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner, data});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkDelegates::Fusion_INetworkRunnerCallbacks_OnHostMigration
// Il2CppName: Fusion.INetworkRunnerCallbacks.OnHostMigration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkDelegates::*)(::Fusion::NetworkRunner*, ::Fusion::HostMigrationToken*)>(&Fusion::NetworkDelegates::Fusion_INetworkRunnerCallbacks_OnHostMigration)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    static auto* hostMigrationToken = &::il2cpp_utils::GetClassFromName("Fusion", "HostMigrationToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkDelegates*), "Fusion.INetworkRunnerCallbacks.OnHostMigration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner, hostMigrationToken});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkDelegates::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
