// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Fusion.Behaviour
#include "Fusion/Behaviour.hpp"
// Including type: Fusion.INetworkSceneManager
#include "Fusion/INetworkSceneManager.hpp"
// Including type: Fusion.SceneRef
#include "Fusion/SceneRef.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Fusion
namespace Fusion {
  // Forward declaring type: NetworkRunner
  class NetworkRunner;
  // Forward declaring type: NetworkObject
  class NetworkObject;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: WeakReference`1<T>
  template<typename T>
  class WeakReference_1;
}
// Forward declaring namespace: UnityEngine::SceneManagement
namespace UnityEngine::SceneManagement {
  // Forward declaring type: Scene
  struct Scene;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: NetworkSceneManagerBase
  class NetworkSceneManagerBase;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::NetworkSceneManagerBase);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::NetworkSceneManagerBase*, "Fusion", "NetworkSceneManagerBase");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.NetworkSceneManagerBase
  // [TokenAttribute] Offset: FFFFFFFF
  class NetworkSceneManagerBase : public ::Fusion::Behaviour/*, public ::Fusion::INetworkSceneManager*/ {
    public:
    // Nested type: ::Fusion::NetworkSceneManagerBase::FinishedLoadingDelegate
    class FinishedLoadingDelegate;
    // Nested type: ::Fusion::NetworkSceneManagerBase::$$c__DisplayClass28_0
    class $$c__DisplayClass28_0;
    // Nested type: ::Fusion::NetworkSceneManagerBase::$SwitchSceneWrapper$d__28
    class $SwitchSceneWrapper$d__28;
    public:
    // public System.Boolean ShowHierarchyWindowOverlay
    // Size: 0x1
    // Offset: 0x20
    bool ShowHierarchyWindowOverlay;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: ShowHierarchyWindowOverlay and: runningCoroutine
    char __padding0[0x7] = {};
    // private System.Collections.IEnumerator _runningCoroutine
    // Size: 0x8
    // Offset: 0x28
    ::System::Collections::IEnumerator* runningCoroutine;
    // Field size check
    static_assert(sizeof(::System::Collections::IEnumerator*) == 0x8);
    // private System.Boolean _currentSceneOutdated
    // Size: 0x1
    // Offset: 0x30
    bool currentSceneOutdated;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: currentSceneOutdated and: currentScene
    char __padding2[0x3] = {};
    // private Fusion.SceneRef _currentScene
    // Size: 0x4
    // Offset: 0x34
    ::Fusion::SceneRef currentScene;
    // Field size check
    static_assert(sizeof(::Fusion::SceneRef) == 0x4);
    // private Fusion.NetworkRunner <Runner>k__BackingField
    // Size: 0x8
    // Offset: 0x38
    ::Fusion::NetworkRunner* Runner;
    // Field size check
    static_assert(sizeof(::Fusion::NetworkRunner*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::Fusion::INetworkSceneManager
    operator ::Fusion::INetworkSceneManager() noexcept {
      return *reinterpret_cast<::Fusion::INetworkSceneManager*>(this);
    }
    // Get static field: static private System.WeakReference`1<Fusion.NetworkSceneManagerBase> s_currentlyLoading
    static ::System::WeakReference_1<::Fusion::NetworkSceneManagerBase*>* _get_s_currentlyLoading();
    // Set static field: static private System.WeakReference`1<Fusion.NetworkSceneManagerBase> s_currentlyLoading
    static void _set_s_currentlyLoading(::System::WeakReference_1<::Fusion::NetworkSceneManagerBase*>* value);
    // Get instance field reference: public System.Boolean ShowHierarchyWindowOverlay
    [[deprecated("Use field access instead!")]] bool& dyn_ShowHierarchyWindowOverlay();
    // Get instance field reference: private System.Collections.IEnumerator _runningCoroutine
    [[deprecated("Use field access instead!")]] ::System::Collections::IEnumerator*& dyn__runningCoroutine();
    // Get instance field reference: private System.Boolean _currentSceneOutdated
    [[deprecated("Use field access instead!")]] bool& dyn__currentSceneOutdated();
    // Get instance field reference: private Fusion.SceneRef _currentScene
    [[deprecated("Use field access instead!")]] ::Fusion::SceneRef& dyn__currentScene();
    // Get instance field reference: private Fusion.NetworkRunner <Runner>k__BackingField
    [[deprecated("Use field access instead!")]] ::Fusion::NetworkRunner*& dyn_$Runner$k__BackingField();
    // public Fusion.NetworkRunner get_Runner()
    // Offset: 0x281786C
    ::Fusion::NetworkRunner* get_Runner();
    // private System.Void set_Runner(Fusion.NetworkRunner value)
    // Offset: 0x2817874
    void set_Runner(::Fusion::NetworkRunner* value);
    // protected System.Void OnEnable()
    // Offset: 0x281787C
    void OnEnable();
    // protected System.Void OnDisable()
    // Offset: 0x2817880
    void OnDisable();
    // protected System.Void LateUpdate()
    // Offset: 0x2817884
    void LateUpdate();
    // static public System.Boolean IsScenePathOrNameEqual(UnityEngine.SceneManagement.Scene scene, System.String nameOrPath)
    // Offset: 0x2817AC4
    static bool IsScenePathOrNameEqual(::UnityEngine::SceneManagement::Scene scene, ::StringW nameOrPath);
    // static public System.Boolean TryGetScenePathFromBuildSettings(Fusion.SceneRef sceneRef, out System.String path)
    // Offset: 0x2817B20
    static bool TryGetScenePathFromBuildSettings(::Fusion::SceneRef sceneRef, ByRef<::StringW> path);
    // public System.Boolean TryGetScenePath(Fusion.SceneRef sceneRef, out System.String path)
    // Offset: 0x2817BCC
    bool TryGetScenePath(::Fusion::SceneRef sceneRef, ByRef<::StringW> path);
    // public System.Boolean TryGetSceneRef(System.String nameOrPath, out Fusion.SceneRef sceneRef)
    // Offset: 0x2817C30
    bool TryGetSceneRef(::StringW nameOrPath, ByRef<::Fusion::SceneRef> sceneRef);
    // public System.Boolean IsScenePathOrNameEqual(UnityEngine.SceneManagement.Scene scene, Fusion.SceneRef sceneRef)
    // Offset: 0x2817C78
    bool IsScenePathOrNameEqual(::UnityEngine::SceneManagement::Scene scene, ::Fusion::SceneRef sceneRef);
    // public System.Collections.Generic.List`1<Fusion.NetworkObject> FindNetworkObjects(UnityEngine.SceneManagement.Scene scene, System.Boolean disable, System.Boolean addVisibilityNodes)
    // Offset: 0x2817D14
    ::System::Collections::Generic::List_1<::Fusion::NetworkObject*>* FindNetworkObjects(::UnityEngine::SceneManagement::Scene scene, bool disable, bool addVisibilityNodes);
    // private System.Void Fusion.INetworkSceneManager.Initialize(Fusion.NetworkRunner runner)
    // Offset: 0x2818194
    void Fusion_INetworkSceneManager_Initialize(::Fusion::NetworkRunner* runner);
    // private System.Void Fusion.INetworkSceneManager.Shutdown(Fusion.NetworkRunner runner)
    // Offset: 0x28181A0
    void Fusion_INetworkSceneManager_Shutdown(::Fusion::NetworkRunner* runner);
    // private System.Boolean Fusion.INetworkSceneManager.IsReady(Fusion.NetworkRunner runner)
    // Offset: 0x28181B0
    bool Fusion_INetworkSceneManager_IsReady(::Fusion::NetworkRunner* runner);
    // protected System.Void Initialize(Fusion.NetworkRunner runner)
    // Offset: 0x2818204
    void Initialize(::Fusion::NetworkRunner* runner);
    // protected System.Void Shutdown(Fusion.NetworkRunner runner)
    // Offset: 0x281820C
    void Shutdown(::Fusion::NetworkRunner* runner);
    // protected System.Collections.IEnumerator SwitchScene(Fusion.SceneRef prevScene, Fusion.SceneRef newScene, Fusion.NetworkSceneManagerBase/FinishedLoadingDelegate finished)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Collections::IEnumerator* SwitchScene(::Fusion::SceneRef prevScene, ::Fusion::SceneRef newScene, ::Fusion::NetworkSceneManagerBase::FinishedLoadingDelegate* finished);
    // protected System.Void LogTrace(System.String msg)
    // Offset: 0x2818508
    void LogTrace(::StringW msg);
    // protected System.Void LogError(System.String msg)
    // Offset: 0x281850C
    void LogError(::StringW msg);
    // protected System.Void LogWarn(System.String msg)
    // Offset: 0x28183F8
    void LogWarn(::StringW msg);
    // private System.Collections.IEnumerator SwitchSceneWrapper(Fusion.SceneRef prevScene, Fusion.SceneRef newScene)
    // Offset: 0x2817A44
    ::System::Collections::IEnumerator* SwitchSceneWrapper(::Fusion::SceneRef prevScene, ::Fusion::SceneRef newScene);
    // protected System.Void .ctor()
    // Offset: 0x2818644
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NetworkSceneManagerBase* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerBase::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NetworkSceneManagerBase*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x2818654
    static void _cctor();
  }; // Fusion.NetworkSceneManagerBase
  #pragma pack(pop)
  static check_size<sizeof(NetworkSceneManagerBase), 56 + sizeof(::Fusion::NetworkRunner*)> __Fusion_NetworkSceneManagerBaseSizeCheck;
  static_assert(sizeof(NetworkSceneManagerBase) == 0x40);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::NetworkSceneManagerBase::get_Runner
// Il2CppName: get_Runner
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::NetworkRunner* (Fusion::NetworkSceneManagerBase::*)()>(&Fusion::NetworkSceneManagerBase::get_Runner)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkSceneManagerBase*), "get_Runner", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkSceneManagerBase::set_Runner
// Il2CppName: set_Runner
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkSceneManagerBase::*)(::Fusion::NetworkRunner*)>(&Fusion::NetworkSceneManagerBase::set_Runner)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkSceneManagerBase*), "set_Runner", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkSceneManagerBase::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkSceneManagerBase::*)()>(&Fusion::NetworkSceneManagerBase::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkSceneManagerBase*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkSceneManagerBase::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkSceneManagerBase::*)()>(&Fusion::NetworkSceneManagerBase::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkSceneManagerBase*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkSceneManagerBase::LateUpdate
// Il2CppName: LateUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkSceneManagerBase::*)()>(&Fusion::NetworkSceneManagerBase::LateUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkSceneManagerBase*), "LateUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkSceneManagerBase::IsScenePathOrNameEqual
// Il2CppName: IsScenePathOrNameEqual
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::SceneManagement::Scene, ::StringW)>(&Fusion::NetworkSceneManagerBase::IsScenePathOrNameEqual)> {
  static const MethodInfo* get() {
    static auto* scene = &::il2cpp_utils::GetClassFromName("UnityEngine.SceneManagement", "Scene")->byval_arg;
    static auto* nameOrPath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkSceneManagerBase*), "IsScenePathOrNameEqual", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{scene, nameOrPath});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkSceneManagerBase::TryGetScenePathFromBuildSettings
// Il2CppName: TryGetScenePathFromBuildSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Fusion::SceneRef, ByRef<::StringW>)>(&Fusion::NetworkSceneManagerBase::TryGetScenePathFromBuildSettings)> {
  static const MethodInfo* get() {
    static auto* sceneRef = &::il2cpp_utils::GetClassFromName("Fusion", "SceneRef")->byval_arg;
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkSceneManagerBase*), "TryGetScenePathFromBuildSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sceneRef, path});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkSceneManagerBase::TryGetScenePath
// Il2CppName: TryGetScenePath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::NetworkSceneManagerBase::*)(::Fusion::SceneRef, ByRef<::StringW>)>(&Fusion::NetworkSceneManagerBase::TryGetScenePath)> {
  static const MethodInfo* get() {
    static auto* sceneRef = &::il2cpp_utils::GetClassFromName("Fusion", "SceneRef")->byval_arg;
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkSceneManagerBase*), "TryGetScenePath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sceneRef, path});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkSceneManagerBase::TryGetSceneRef
// Il2CppName: TryGetSceneRef
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::NetworkSceneManagerBase::*)(::StringW, ByRef<::Fusion::SceneRef>)>(&Fusion::NetworkSceneManagerBase::TryGetSceneRef)> {
  static const MethodInfo* get() {
    static auto* nameOrPath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* sceneRef = &::il2cpp_utils::GetClassFromName("Fusion", "SceneRef")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkSceneManagerBase*), "TryGetSceneRef", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameOrPath, sceneRef});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkSceneManagerBase::IsScenePathOrNameEqual
// Il2CppName: IsScenePathOrNameEqual
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::NetworkSceneManagerBase::*)(::UnityEngine::SceneManagement::Scene, ::Fusion::SceneRef)>(&Fusion::NetworkSceneManagerBase::IsScenePathOrNameEqual)> {
  static const MethodInfo* get() {
    static auto* scene = &::il2cpp_utils::GetClassFromName("UnityEngine.SceneManagement", "Scene")->byval_arg;
    static auto* sceneRef = &::il2cpp_utils::GetClassFromName("Fusion", "SceneRef")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkSceneManagerBase*), "IsScenePathOrNameEqual", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{scene, sceneRef});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkSceneManagerBase::FindNetworkObjects
// Il2CppName: FindNetworkObjects
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::Fusion::NetworkObject*>* (Fusion::NetworkSceneManagerBase::*)(::UnityEngine::SceneManagement::Scene, bool, bool)>(&Fusion::NetworkSceneManagerBase::FindNetworkObjects)> {
  static const MethodInfo* get() {
    static auto* scene = &::il2cpp_utils::GetClassFromName("UnityEngine.SceneManagement", "Scene")->byval_arg;
    static auto* disable = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* addVisibilityNodes = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkSceneManagerBase*), "FindNetworkObjects", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{scene, disable, addVisibilityNodes});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkSceneManagerBase::Fusion_INetworkSceneManager_Initialize
// Il2CppName: Fusion.INetworkSceneManager.Initialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkSceneManagerBase::*)(::Fusion::NetworkRunner*)>(&Fusion::NetworkSceneManagerBase::Fusion_INetworkSceneManager_Initialize)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkSceneManagerBase*), "Fusion.INetworkSceneManager.Initialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkSceneManagerBase::Fusion_INetworkSceneManager_Shutdown
// Il2CppName: Fusion.INetworkSceneManager.Shutdown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkSceneManagerBase::*)(::Fusion::NetworkRunner*)>(&Fusion::NetworkSceneManagerBase::Fusion_INetworkSceneManager_Shutdown)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkSceneManagerBase*), "Fusion.INetworkSceneManager.Shutdown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkSceneManagerBase::Fusion_INetworkSceneManager_IsReady
// Il2CppName: Fusion.INetworkSceneManager.IsReady
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::NetworkSceneManagerBase::*)(::Fusion::NetworkRunner*)>(&Fusion::NetworkSceneManagerBase::Fusion_INetworkSceneManager_IsReady)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkSceneManagerBase*), "Fusion.INetworkSceneManager.IsReady", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkSceneManagerBase::Initialize
// Il2CppName: Initialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkSceneManagerBase::*)(::Fusion::NetworkRunner*)>(&Fusion::NetworkSceneManagerBase::Initialize)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkSceneManagerBase*), "Initialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkSceneManagerBase::Shutdown
// Il2CppName: Shutdown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkSceneManagerBase::*)(::Fusion::NetworkRunner*)>(&Fusion::NetworkSceneManagerBase::Shutdown)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkSceneManagerBase*), "Shutdown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkSceneManagerBase::SwitchScene
// Il2CppName: SwitchScene
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (Fusion::NetworkSceneManagerBase::*)(::Fusion::SceneRef, ::Fusion::SceneRef, ::Fusion::NetworkSceneManagerBase::FinishedLoadingDelegate*)>(&Fusion::NetworkSceneManagerBase::SwitchScene)> {
  static const MethodInfo* get() {
    static auto* prevScene = &::il2cpp_utils::GetClassFromName("Fusion", "SceneRef")->byval_arg;
    static auto* newScene = &::il2cpp_utils::GetClassFromName("Fusion", "SceneRef")->byval_arg;
    static auto* finished = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkSceneManagerBase/FinishedLoadingDelegate")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkSceneManagerBase*), "SwitchScene", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{prevScene, newScene, finished});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkSceneManagerBase::LogTrace
// Il2CppName: LogTrace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkSceneManagerBase::*)(::StringW)>(&Fusion::NetworkSceneManagerBase::LogTrace)> {
  static const MethodInfo* get() {
    static auto* msg = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkSceneManagerBase*), "LogTrace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{msg});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkSceneManagerBase::LogError
// Il2CppName: LogError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkSceneManagerBase::*)(::StringW)>(&Fusion::NetworkSceneManagerBase::LogError)> {
  static const MethodInfo* get() {
    static auto* msg = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkSceneManagerBase*), "LogError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{msg});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkSceneManagerBase::LogWarn
// Il2CppName: LogWarn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkSceneManagerBase::*)(::StringW)>(&Fusion::NetworkSceneManagerBase::LogWarn)> {
  static const MethodInfo* get() {
    static auto* msg = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkSceneManagerBase*), "LogWarn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{msg});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkSceneManagerBase::SwitchSceneWrapper
// Il2CppName: SwitchSceneWrapper
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (Fusion::NetworkSceneManagerBase::*)(::Fusion::SceneRef, ::Fusion::SceneRef)>(&Fusion::NetworkSceneManagerBase::SwitchSceneWrapper)> {
  static const MethodInfo* get() {
    static auto* prevScene = &::il2cpp_utils::GetClassFromName("Fusion", "SceneRef")->byval_arg;
    static auto* newScene = &::il2cpp_utils::GetClassFromName("Fusion", "SceneRef")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkSceneManagerBase*), "SwitchSceneWrapper", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{prevScene, newScene});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkSceneManagerBase::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Fusion::NetworkSceneManagerBase::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Fusion::NetworkSceneManagerBase::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkSceneManagerBase*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
