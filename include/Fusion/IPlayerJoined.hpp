// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Fusion
namespace Fusion {
  // Forward declaring type: PlayerRef
  struct PlayerRef;
}
// Completed forward declares
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: IPlayerJoined
  class IPlayerJoined;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::IPlayerJoined);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::IPlayerJoined*, "Fusion", "IPlayerJoined");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.IPlayerJoined
  // [TokenAttribute] Offset: FFFFFFFF
  class IPlayerJoined {
    public:
    // public System.Void PlayerJoined(Fusion.PlayerRef player)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void PlayerJoined(::Fusion::PlayerRef player);
  }; // Fusion.IPlayerJoined
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::IPlayerJoined::PlayerJoined
// Il2CppName: PlayerJoined
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::IPlayerJoined::*)(::Fusion::PlayerRef)>(&Fusion::IPlayerJoined::PlayerJoined)> {
  static const MethodInfo* get() {
    static auto* player = &::il2cpp_utils::GetClassFromName("Fusion", "PlayerRef")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::IPlayerJoined*), "PlayerJoined", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{player});
  }
};
