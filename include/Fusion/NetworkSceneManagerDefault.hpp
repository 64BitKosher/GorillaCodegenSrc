// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Fusion.NetworkSceneManagerBase
#include "Fusion/NetworkSceneManagerBase.hpp"
// Including type: UnityEngine.SceneManagement.Scene
#include "UnityEngine/SceneManagement/Scene.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Fusion
namespace Fusion {
  // Skipping declaration: SceneRef because it is already included!
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: YieldInstruction
  class YieldInstruction;
}
// Forward declaring namespace: UnityEngine::SceneManagement
namespace UnityEngine::SceneManagement {
  // Forward declaring type: LoadSceneParameters
  struct LoadSceneParameters;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: NetworkSceneManagerDefault
  class NetworkSceneManagerDefault;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::NetworkSceneManagerDefault);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::NetworkSceneManagerDefault*, "Fusion", "NetworkSceneManagerDefault");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x44
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.NetworkSceneManagerDefault
  // [TokenAttribute] Offset: FFFFFFFF
  class NetworkSceneManagerDefault : public ::Fusion::NetworkSceneManagerBase {
    public:
    // Nested type: ::Fusion::NetworkSceneManagerDefault::$$c__DisplayClass1_0
    class $$c__DisplayClass1_0;
    // Nested type: ::Fusion::NetworkSceneManagerDefault::$$c__DisplayClass4_0
    class $$c__DisplayClass4_0;
    // Nested type: ::Fusion::NetworkSceneManagerDefault::$$c__DisplayClass5_0
    class $$c__DisplayClass5_0;
    // Nested type: ::Fusion::NetworkSceneManagerDefault::$SwitchSceneMultiplePeer$d__4
    class $SwitchSceneMultiplePeer$d__4;
    // Nested type: ::Fusion::NetworkSceneManagerDefault::$SwitchSceneSinglePeer$d__5
    class $SwitchSceneSinglePeer$d__5;
    public:
    // public System.Int32 PostLoadDelayFrames
    // Size: 0x4
    // Offset: 0x40
    int PostLoadDelayFrames;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Get instance field reference: public System.Int32 PostLoadDelayFrames
    [[deprecated("Use field access instead!")]] int& dyn_PostLoadDelayFrames();
    // protected UnityEngine.YieldInstruction LoadSceneAsync(Fusion.SceneRef sceneRef, UnityEngine.SceneManagement.LoadSceneParameters parameters, System.Action`1<UnityEngine.SceneManagement.Scene> loaded)
    // Offset: 0x28191FC
    ::UnityEngine::YieldInstruction* LoadSceneAsync(::Fusion::SceneRef sceneRef, ::UnityEngine::SceneManagement::LoadSceneParameters parameters, ::System::Action_1<::UnityEngine::SceneManagement::Scene>* loaded);
    // protected UnityEngine.YieldInstruction UnloadSceneAsync(UnityEngine.SceneManagement.Scene scene)
    // Offset: 0x2819428
    ::UnityEngine::YieldInstruction* UnloadSceneAsync(::UnityEngine::SceneManagement::Scene scene);
    // protected System.Collections.IEnumerator SwitchSceneMultiplePeer(Fusion.SceneRef prevScene, Fusion.SceneRef newScene, Fusion.NetworkSceneManagerBase/FinishedLoadingDelegate finished)
    // Offset: 0x28194C8
    ::System::Collections::IEnumerator* SwitchSceneMultiplePeer(::Fusion::SceneRef prevScene, ::Fusion::SceneRef newScene, ::Fusion::NetworkSceneManagerBase::FinishedLoadingDelegate* finished);
    // protected System.Collections.IEnumerator SwitchSceneSinglePeer(Fusion.SceneRef prevScene, Fusion.SceneRef newScene, Fusion.NetworkSceneManagerBase/FinishedLoadingDelegate finished)
    // Offset: 0x2819590
    ::System::Collections::IEnumerator* SwitchSceneSinglePeer(::Fusion::SceneRef prevScene, ::Fusion::SceneRef newScene, ::Fusion::NetworkSceneManagerBase::FinishedLoadingDelegate* finished);
    // protected override System.Collections.IEnumerator SwitchScene(Fusion.SceneRef prevScene, Fusion.SceneRef newScene, Fusion.NetworkSceneManagerBase/FinishedLoadingDelegate finished)
    // Offset: 0x2819480
    // Implemented from: Fusion.NetworkSceneManagerBase
    // Base method: System.Collections.IEnumerator NetworkSceneManagerBase::SwitchScene(Fusion.SceneRef prevScene, Fusion.SceneRef newScene, Fusion.NetworkSceneManagerBase/FinishedLoadingDelegate finished)
    ::System::Collections::IEnumerator* SwitchScene(::Fusion::SceneRef prevScene, ::Fusion::SceneRef newScene, ::Fusion::NetworkSceneManagerBase::FinishedLoadingDelegate* finished);
    // public System.Void .ctor()
    // Offset: 0x2819658
    // Implemented from: Fusion.NetworkSceneManagerBase
    // Base method: System.Void NetworkSceneManagerBase::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NetworkSceneManagerDefault* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSceneManagerDefault::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NetworkSceneManagerDefault*, creationType>()));
    }
  }; // Fusion.NetworkSceneManagerDefault
  #pragma pack(pop)
  static check_size<sizeof(NetworkSceneManagerDefault), 64 + sizeof(int)> __Fusion_NetworkSceneManagerDefaultSizeCheck;
  static_assert(sizeof(NetworkSceneManagerDefault) == 0x44);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::NetworkSceneManagerDefault::LoadSceneAsync
// Il2CppName: LoadSceneAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::YieldInstruction* (Fusion::NetworkSceneManagerDefault::*)(::Fusion::SceneRef, ::UnityEngine::SceneManagement::LoadSceneParameters, ::System::Action_1<::UnityEngine::SceneManagement::Scene>*)>(&Fusion::NetworkSceneManagerDefault::LoadSceneAsync)> {
  static const MethodInfo* get() {
    static auto* sceneRef = &::il2cpp_utils::GetClassFromName("Fusion", "SceneRef")->byval_arg;
    static auto* parameters = &::il2cpp_utils::GetClassFromName("UnityEngine.SceneManagement", "LoadSceneParameters")->byval_arg;
    static auto* loaded = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.SceneManagement", "Scene")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkSceneManagerDefault*), "LoadSceneAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sceneRef, parameters, loaded});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkSceneManagerDefault::UnloadSceneAsync
// Il2CppName: UnloadSceneAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::YieldInstruction* (Fusion::NetworkSceneManagerDefault::*)(::UnityEngine::SceneManagement::Scene)>(&Fusion::NetworkSceneManagerDefault::UnloadSceneAsync)> {
  static const MethodInfo* get() {
    static auto* scene = &::il2cpp_utils::GetClassFromName("UnityEngine.SceneManagement", "Scene")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkSceneManagerDefault*), "UnloadSceneAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{scene});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkSceneManagerDefault::SwitchSceneMultiplePeer
// Il2CppName: SwitchSceneMultiplePeer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (Fusion::NetworkSceneManagerDefault::*)(::Fusion::SceneRef, ::Fusion::SceneRef, ::Fusion::NetworkSceneManagerBase::FinishedLoadingDelegate*)>(&Fusion::NetworkSceneManagerDefault::SwitchSceneMultiplePeer)> {
  static const MethodInfo* get() {
    static auto* prevScene = &::il2cpp_utils::GetClassFromName("Fusion", "SceneRef")->byval_arg;
    static auto* newScene = &::il2cpp_utils::GetClassFromName("Fusion", "SceneRef")->byval_arg;
    static auto* finished = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkSceneManagerBase/FinishedLoadingDelegate")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkSceneManagerDefault*), "SwitchSceneMultiplePeer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{prevScene, newScene, finished});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkSceneManagerDefault::SwitchSceneSinglePeer
// Il2CppName: SwitchSceneSinglePeer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (Fusion::NetworkSceneManagerDefault::*)(::Fusion::SceneRef, ::Fusion::SceneRef, ::Fusion::NetworkSceneManagerBase::FinishedLoadingDelegate*)>(&Fusion::NetworkSceneManagerDefault::SwitchSceneSinglePeer)> {
  static const MethodInfo* get() {
    static auto* prevScene = &::il2cpp_utils::GetClassFromName("Fusion", "SceneRef")->byval_arg;
    static auto* newScene = &::il2cpp_utils::GetClassFromName("Fusion", "SceneRef")->byval_arg;
    static auto* finished = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkSceneManagerBase/FinishedLoadingDelegate")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkSceneManagerDefault*), "SwitchSceneSinglePeer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{prevScene, newScene, finished});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkSceneManagerDefault::SwitchScene
// Il2CppName: SwitchScene
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (Fusion::NetworkSceneManagerDefault::*)(::Fusion::SceneRef, ::Fusion::SceneRef, ::Fusion::NetworkSceneManagerBase::FinishedLoadingDelegate*)>(&Fusion::NetworkSceneManagerDefault::SwitchScene)> {
  static const MethodInfo* get() {
    static auto* prevScene = &::il2cpp_utils::GetClassFromName("Fusion", "SceneRef")->byval_arg;
    static auto* newScene = &::il2cpp_utils::GetClassFromName("Fusion", "SceneRef")->byval_arg;
    static auto* finished = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkSceneManagerBase/FinishedLoadingDelegate")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkSceneManagerDefault*), "SwitchScene", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{prevScene, newScene, finished});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkSceneManagerDefault::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
