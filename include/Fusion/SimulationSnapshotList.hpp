// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Fusion
namespace Fusion {
  // Forward declaring type: SimulationSnapshot
  class SimulationSnapshot;
}
// Completed forward declares
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: SimulationSnapshotList
  class SimulationSnapshotList;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::SimulationSnapshotList);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::SimulationSnapshotList*, "Fusion", "SimulationSnapshotList");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.SimulationSnapshotList
  // [TokenAttribute] Offset: FFFFFFFF
  class SimulationSnapshotList : public ::Il2CppObject {
    public:
    public:
    // public System.Int32 Count
    // Size: 0x4
    // Offset: 0x10
    int Count;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: Count and: Head
    char __padding0[0x4] = {};
    // public Fusion.SimulationSnapshot Head
    // Size: 0x8
    // Offset: 0x18
    ::Fusion::SimulationSnapshot* Head;
    // Field size check
    static_assert(sizeof(::Fusion::SimulationSnapshot*) == 0x8);
    // public Fusion.SimulationSnapshot Tail
    // Size: 0x8
    // Offset: 0x20
    ::Fusion::SimulationSnapshot* Tail;
    // Field size check
    static_assert(sizeof(::Fusion::SimulationSnapshot*) == 0x8);
    public:
    // Get instance field reference: public System.Int32 Count
    [[deprecated("Use field access instead!")]] int& dyn_Count();
    // Get instance field reference: public Fusion.SimulationSnapshot Head
    [[deprecated("Use field access instead!")]] ::Fusion::SimulationSnapshot*& dyn_Head();
    // Get instance field reference: public Fusion.SimulationSnapshot Tail
    [[deprecated("Use field access instead!")]] ::Fusion::SimulationSnapshot*& dyn_Tail();
    // public System.Void AddFirst(Fusion.SimulationSnapshot item)
    // Offset: 0x2B6EBAC
    void AddFirst(::Fusion::SimulationSnapshot* item);
    // public System.Void AddLast(Fusion.SimulationSnapshot item)
    // Offset: 0x2B6EC40
    void AddLast(::Fusion::SimulationSnapshot* item);
    // public System.Void AddBefore(Fusion.SimulationSnapshot item, Fusion.SimulationSnapshot before)
    // Offset: 0x2B6ECC0
    void AddBefore(::Fusion::SimulationSnapshot* item, ::Fusion::SimulationSnapshot* before);
    // public System.Void AddAfter(Fusion.SimulationSnapshot item, Fusion.SimulationSnapshot after)
    // Offset: 0x2B6ED5C
    void AddAfter(::Fusion::SimulationSnapshot* item, ::Fusion::SimulationSnapshot* after);
    // public Fusion.SimulationSnapshot RemoveHead()
    // Offset: 0x2B6EE08
    ::Fusion::SimulationSnapshot* RemoveHead();
    // public System.Void Remove(Fusion.SimulationSnapshot item)
    // Offset: 0x2B6EE24
    void Remove(::Fusion::SimulationSnapshot* item);
    // private System.Boolean IsInList(Fusion.SimulationSnapshot item)
    // Offset: 0x2B6EEE4
    bool IsInList(::Fusion::SimulationSnapshot* item);
    // public Fusion.SimulationSnapshotList RemoveAll()
    // Offset: 0x2B6EF08
    ::Fusion::SimulationSnapshotList* RemoveAll();
    // public System.Void Concat(Fusion.SimulationSnapshotList other)
    // Offset: 0x2B6EF3C
    void Concat(::Fusion::SimulationSnapshotList* other);
    // public System.Void .ctor()
    // Offset: 0x2B6EFE8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SimulationSnapshotList* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshotList::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SimulationSnapshotList*, creationType>()));
    }
  }; // Fusion.SimulationSnapshotList
  #pragma pack(pop)
  static check_size<sizeof(SimulationSnapshotList), 32 + sizeof(::Fusion::SimulationSnapshot*)> __Fusion_SimulationSnapshotListSizeCheck;
  static_assert(sizeof(SimulationSnapshotList) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::SimulationSnapshotList::AddFirst
// Il2CppName: AddFirst
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::SimulationSnapshotList::*)(::Fusion::SimulationSnapshot*)>(&Fusion::SimulationSnapshotList::AddFirst)> {
  static const MethodInfo* get() {
    static auto* item = &::il2cpp_utils::GetClassFromName("Fusion", "SimulationSnapshot")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationSnapshotList*), "AddFirst", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{item});
  }
};
// Writing MetadataGetter for method: Fusion::SimulationSnapshotList::AddLast
// Il2CppName: AddLast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::SimulationSnapshotList::*)(::Fusion::SimulationSnapshot*)>(&Fusion::SimulationSnapshotList::AddLast)> {
  static const MethodInfo* get() {
    static auto* item = &::il2cpp_utils::GetClassFromName("Fusion", "SimulationSnapshot")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationSnapshotList*), "AddLast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{item});
  }
};
// Writing MetadataGetter for method: Fusion::SimulationSnapshotList::AddBefore
// Il2CppName: AddBefore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::SimulationSnapshotList::*)(::Fusion::SimulationSnapshot*, ::Fusion::SimulationSnapshot*)>(&Fusion::SimulationSnapshotList::AddBefore)> {
  static const MethodInfo* get() {
    static auto* item = &::il2cpp_utils::GetClassFromName("Fusion", "SimulationSnapshot")->byval_arg;
    static auto* before = &::il2cpp_utils::GetClassFromName("Fusion", "SimulationSnapshot")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationSnapshotList*), "AddBefore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{item, before});
  }
};
// Writing MetadataGetter for method: Fusion::SimulationSnapshotList::AddAfter
// Il2CppName: AddAfter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::SimulationSnapshotList::*)(::Fusion::SimulationSnapshot*, ::Fusion::SimulationSnapshot*)>(&Fusion::SimulationSnapshotList::AddAfter)> {
  static const MethodInfo* get() {
    static auto* item = &::il2cpp_utils::GetClassFromName("Fusion", "SimulationSnapshot")->byval_arg;
    static auto* after = &::il2cpp_utils::GetClassFromName("Fusion", "SimulationSnapshot")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationSnapshotList*), "AddAfter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{item, after});
  }
};
// Writing MetadataGetter for method: Fusion::SimulationSnapshotList::RemoveHead
// Il2CppName: RemoveHead
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::SimulationSnapshot* (Fusion::SimulationSnapshotList::*)()>(&Fusion::SimulationSnapshotList::RemoveHead)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationSnapshotList*), "RemoveHead", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::SimulationSnapshotList::Remove
// Il2CppName: Remove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::SimulationSnapshotList::*)(::Fusion::SimulationSnapshot*)>(&Fusion::SimulationSnapshotList::Remove)> {
  static const MethodInfo* get() {
    static auto* item = &::il2cpp_utils::GetClassFromName("Fusion", "SimulationSnapshot")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationSnapshotList*), "Remove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{item});
  }
};
// Writing MetadataGetter for method: Fusion::SimulationSnapshotList::IsInList
// Il2CppName: IsInList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::SimulationSnapshotList::*)(::Fusion::SimulationSnapshot*)>(&Fusion::SimulationSnapshotList::IsInList)> {
  static const MethodInfo* get() {
    static auto* item = &::il2cpp_utils::GetClassFromName("Fusion", "SimulationSnapshot")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationSnapshotList*), "IsInList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{item});
  }
};
// Writing MetadataGetter for method: Fusion::SimulationSnapshotList::RemoveAll
// Il2CppName: RemoveAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::SimulationSnapshotList* (Fusion::SimulationSnapshotList::*)()>(&Fusion::SimulationSnapshotList::RemoveAll)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationSnapshotList*), "RemoveAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::SimulationSnapshotList::Concat
// Il2CppName: Concat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::SimulationSnapshotList::*)(::Fusion::SimulationSnapshotList*)>(&Fusion::SimulationSnapshotList::Concat)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("Fusion", "SimulationSnapshotList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::SimulationSnapshotList*), "Concat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: Fusion::SimulationSnapshotList::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
