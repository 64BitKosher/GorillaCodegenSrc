// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: Fusion.RpcLocalInvokeResult
#include "Fusion/RpcLocalInvokeResult.hpp"
// Including type: Fusion.RpcSendCullResult
#include "Fusion/RpcSendCullResult.hpp"
// Including type: Fusion.RpcSendResult
#include "Fusion/RpcSendResult.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: RpcInvokeInfo
  struct RpcInvokeInfo;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Fusion::RpcInvokeInfo, "Fusion", "RpcInvokeInfo");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x38
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: Fusion.RpcInvokeInfo
  // [TokenAttribute] Offset: FFFFFFFF
  struct RpcInvokeInfo/*, public ::System::ValueType*/ {
    public:
    public:
    // public Fusion.RpcLocalInvokeResult LocalInvokeResult
    // Size: 0x4
    // Offset: 0x0
    ::Fusion::RpcLocalInvokeResult LocalInvokeResult;
    // Field size check
    static_assert(sizeof(::Fusion::RpcLocalInvokeResult) == 0x4);
    // public Fusion.RpcSendCullResult SendCullResult
    // Size: 0x4
    // Offset: 0x4
    ::Fusion::RpcSendCullResult SendCullResult;
    // Field size check
    static_assert(sizeof(::Fusion::RpcSendCullResult) == 0x4);
    // public Fusion.RpcSendResult SendResult
    // Size: 0x30
    // Offset: 0x8
    ::Fusion::RpcSendResult SendResult;
    // Field size check
    static_assert(sizeof(::Fusion::RpcSendResult) == 0x30);
    public:
    // Creating value type constructor for type: RpcInvokeInfo
    constexpr RpcInvokeInfo(::Fusion::RpcLocalInvokeResult LocalInvokeResult_ = {}, ::Fusion::RpcSendCullResult SendCullResult_ = {}, ::Fusion::RpcSendResult SendResult_ = {}) noexcept : LocalInvokeResult{LocalInvokeResult_}, SendCullResult{SendCullResult_}, SendResult{SendResult_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public Fusion.RpcLocalInvokeResult LocalInvokeResult
    [[deprecated("Use field access instead!")]] ::Fusion::RpcLocalInvokeResult& dyn_LocalInvokeResult();
    // Get instance field reference: public Fusion.RpcSendCullResult SendCullResult
    [[deprecated("Use field access instead!")]] ::Fusion::RpcSendCullResult& dyn_SendCullResult();
    // Get instance field reference: public Fusion.RpcSendResult SendResult
    [[deprecated("Use field access instead!")]] ::Fusion::RpcSendResult& dyn_SendResult();
    // public override System.String ToString()
    // Offset: 0x2B510C8
    // Implemented from: System.ValueType
    // Base method: System.String ValueType::ToString()
    ::StringW ToString();
  }; // Fusion.RpcInvokeInfo
  #pragma pack(pop)
  static check_size<sizeof(RpcInvokeInfo), 8 + sizeof(::Fusion::RpcSendResult)> __Fusion_RpcInvokeInfoSizeCheck;
  static_assert(sizeof(RpcInvokeInfo) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::RpcInvokeInfo::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Fusion::RpcInvokeInfo::*)()>(&Fusion::RpcInvokeInfo::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::RpcInvokeInfo), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
