// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Fusion.NetworkString`1
#include "Fusion/NetworkString_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: ValueType
  class ValueType;
}
// Forward declaring namespace: Fusion
namespace Fusion {
  // Forward declaring type: IFixedStorage
  class IFixedStorage;
}
// Completed forward declares
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: INetworkString
  class INetworkString;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::INetworkString);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::INetworkString*, "Fusion", "INetworkString");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.INetworkString
  // [TokenAttribute] Offset: FFFFFFFF
  class INetworkString {
    public:
    // public System.Boolean Equals(ref Fusion.NetworkString`1<OtherSize> other)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class OtherSize>
    bool Equals(ByRef<::Fusion::NetworkString_1<OtherSize>> other) {
      static_assert(std::is_convertible_v<OtherSize, ::System::ValueType*> && std::is_convertible_v<std::remove_pointer_t<OtherSize>, ::Fusion::IFixedStorage>);
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::INetworkString::Equals");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::INetworkString*), -1));
      auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<OtherSize>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___generic__method, byref(other));
    }
  }; // Fusion.INetworkString
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::INetworkString::Equals
// Il2CppName: Equals
// Cannot write MetadataGetter for generic methods!
