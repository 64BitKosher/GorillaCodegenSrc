// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Fusion.LagCompensationUtils
#include "Fusion/LagCompensationUtils.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Fusion::LagCompensationUtils::CustomEdgesBox, "Fusion", "LagCompensationUtils/CustomEdgesBox");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x60
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: Fusion.LagCompensationUtils/CustomEdgesBox
  // [TokenAttribute] Offset: FFFFFFFF
  struct LagCompensationUtils::CustomEdgesBox/*, public ::System::ValueType*/ {
    public:
    public:
    // public UnityEngine.Vector3 P0
    // Size: 0xC
    // Offset: 0x0
    ::UnityEngine::Vector3 P0;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // public UnityEngine.Vector3 P1
    // Size: 0xC
    // Offset: 0xC
    ::UnityEngine::Vector3 P1;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // public UnityEngine.Vector3 P2
    // Size: 0xC
    // Offset: 0x18
    ::UnityEngine::Vector3 P2;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // public UnityEngine.Vector3 P3
    // Size: 0xC
    // Offset: 0x24
    ::UnityEngine::Vector3 P3;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // public UnityEngine.Vector3 P4
    // Size: 0xC
    // Offset: 0x30
    ::UnityEngine::Vector3 P4;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // public UnityEngine.Vector3 P5
    // Size: 0xC
    // Offset: 0x3C
    ::UnityEngine::Vector3 P5;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // public UnityEngine.Vector3 P6
    // Size: 0xC
    // Offset: 0x48
    ::UnityEngine::Vector3 P6;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // public UnityEngine.Vector3 P7
    // Size: 0xC
    // Offset: 0x54
    ::UnityEngine::Vector3 P7;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    public:
    // Creating value type constructor for type: CustomEdgesBox
    constexpr CustomEdgesBox(::UnityEngine::Vector3 P0_ = {}, ::UnityEngine::Vector3 P1_ = {}, ::UnityEngine::Vector3 P2_ = {}, ::UnityEngine::Vector3 P3_ = {}, ::UnityEngine::Vector3 P4_ = {}, ::UnityEngine::Vector3 P5_ = {}, ::UnityEngine::Vector3 P6_ = {}, ::UnityEngine::Vector3 P7_ = {}) noexcept : P0{P0_}, P1{P1_}, P2{P2_}, P3{P3_}, P4{P4_}, P5{P5_}, P6{P6_}, P7{P7_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public UnityEngine.Vector3 P0
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_P0();
    // Get instance field reference: public UnityEngine.Vector3 P1
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_P1();
    // Get instance field reference: public UnityEngine.Vector3 P2
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_P2();
    // Get instance field reference: public UnityEngine.Vector3 P3
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_P3();
    // Get instance field reference: public UnityEngine.Vector3 P4
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_P4();
    // Get instance field reference: public UnityEngine.Vector3 P5
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_P5();
    // Get instance field reference: public UnityEngine.Vector3 P6
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_P6();
    // Get instance field reference: public UnityEngine.Vector3 P7
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_P7();
    // public Fusion.LagCompensationUtils/CustomLine get_E00()
    // Offset: 0x2B3B8DC
    ::Fusion::LagCompensationUtils::CustomLine get_E00();
    // public Fusion.LagCompensationUtils/CustomLine get_E01()
    // Offset: 0x2B3B900
    ::Fusion::LagCompensationUtils::CustomLine get_E01();
    // public Fusion.LagCompensationUtils/CustomLine get_E02()
    // Offset: 0x2B3B914
    ::Fusion::LagCompensationUtils::CustomLine get_E02();
    // public Fusion.LagCompensationUtils/CustomLine get_E03()
    // Offset: 0x2B3B928
    ::Fusion::LagCompensationUtils::CustomLine get_E03();
    // public Fusion.LagCompensationUtils/CustomLine get_E04()
    // Offset: 0x2B3B94C
    ::Fusion::LagCompensationUtils::CustomLine get_E04();
    // public Fusion.LagCompensationUtils/CustomLine get_E05()
    // Offset: 0x2B3B960
    ::Fusion::LagCompensationUtils::CustomLine get_E05();
    // public Fusion.LagCompensationUtils/CustomLine get_E06()
    // Offset: 0x2B3B974
    ::Fusion::LagCompensationUtils::CustomLine get_E06();
    // public Fusion.LagCompensationUtils/CustomLine get_E07()
    // Offset: 0x2B3B988
    ::Fusion::LagCompensationUtils::CustomLine get_E07();
    // public Fusion.LagCompensationUtils/CustomLine get_E08()
    // Offset: 0x2B3B9AC
    ::Fusion::LagCompensationUtils::CustomLine get_E08();
    // public Fusion.LagCompensationUtils/CustomLine get_E09()
    // Offset: 0x2B3B9D0
    ::Fusion::LagCompensationUtils::CustomLine get_E09();
    // public Fusion.LagCompensationUtils/CustomLine get_E10()
    // Offset: 0x2B3B9F4
    ::Fusion::LagCompensationUtils::CustomLine get_E10();
    // public Fusion.LagCompensationUtils/CustomLine get_E11()
    // Offset: 0x2B3BA18
    ::Fusion::LagCompensationUtils::CustomLine get_E11();
  }; // Fusion.LagCompensationUtils/CustomEdgesBox
  #pragma pack(pop)
  static check_size<sizeof(LagCompensationUtils::CustomEdgesBox), 84 + sizeof(::UnityEngine::Vector3)> __Fusion_LagCompensationUtils_CustomEdgesBoxSizeCheck;
  static_assert(sizeof(LagCompensationUtils::CustomEdgesBox) == 0x60);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::LagCompensationUtils::CustomEdgesBox::get_E00
// Il2CppName: get_E00
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::LagCompensationUtils::CustomLine (Fusion::LagCompensationUtils::CustomEdgesBox::*)()>(&Fusion::LagCompensationUtils::CustomEdgesBox::get_E00)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::LagCompensationUtils::CustomEdgesBox), "get_E00", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::LagCompensationUtils::CustomEdgesBox::get_E01
// Il2CppName: get_E01
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::LagCompensationUtils::CustomLine (Fusion::LagCompensationUtils::CustomEdgesBox::*)()>(&Fusion::LagCompensationUtils::CustomEdgesBox::get_E01)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::LagCompensationUtils::CustomEdgesBox), "get_E01", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::LagCompensationUtils::CustomEdgesBox::get_E02
// Il2CppName: get_E02
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::LagCompensationUtils::CustomLine (Fusion::LagCompensationUtils::CustomEdgesBox::*)()>(&Fusion::LagCompensationUtils::CustomEdgesBox::get_E02)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::LagCompensationUtils::CustomEdgesBox), "get_E02", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::LagCompensationUtils::CustomEdgesBox::get_E03
// Il2CppName: get_E03
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::LagCompensationUtils::CustomLine (Fusion::LagCompensationUtils::CustomEdgesBox::*)()>(&Fusion::LagCompensationUtils::CustomEdgesBox::get_E03)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::LagCompensationUtils::CustomEdgesBox), "get_E03", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::LagCompensationUtils::CustomEdgesBox::get_E04
// Il2CppName: get_E04
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::LagCompensationUtils::CustomLine (Fusion::LagCompensationUtils::CustomEdgesBox::*)()>(&Fusion::LagCompensationUtils::CustomEdgesBox::get_E04)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::LagCompensationUtils::CustomEdgesBox), "get_E04", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::LagCompensationUtils::CustomEdgesBox::get_E05
// Il2CppName: get_E05
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::LagCompensationUtils::CustomLine (Fusion::LagCompensationUtils::CustomEdgesBox::*)()>(&Fusion::LagCompensationUtils::CustomEdgesBox::get_E05)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::LagCompensationUtils::CustomEdgesBox), "get_E05", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::LagCompensationUtils::CustomEdgesBox::get_E06
// Il2CppName: get_E06
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::LagCompensationUtils::CustomLine (Fusion::LagCompensationUtils::CustomEdgesBox::*)()>(&Fusion::LagCompensationUtils::CustomEdgesBox::get_E06)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::LagCompensationUtils::CustomEdgesBox), "get_E06", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::LagCompensationUtils::CustomEdgesBox::get_E07
// Il2CppName: get_E07
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::LagCompensationUtils::CustomLine (Fusion::LagCompensationUtils::CustomEdgesBox::*)()>(&Fusion::LagCompensationUtils::CustomEdgesBox::get_E07)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::LagCompensationUtils::CustomEdgesBox), "get_E07", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::LagCompensationUtils::CustomEdgesBox::get_E08
// Il2CppName: get_E08
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::LagCompensationUtils::CustomLine (Fusion::LagCompensationUtils::CustomEdgesBox::*)()>(&Fusion::LagCompensationUtils::CustomEdgesBox::get_E08)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::LagCompensationUtils::CustomEdgesBox), "get_E08", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::LagCompensationUtils::CustomEdgesBox::get_E09
// Il2CppName: get_E09
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::LagCompensationUtils::CustomLine (Fusion::LagCompensationUtils::CustomEdgesBox::*)()>(&Fusion::LagCompensationUtils::CustomEdgesBox::get_E09)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::LagCompensationUtils::CustomEdgesBox), "get_E09", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::LagCompensationUtils::CustomEdgesBox::get_E10
// Il2CppName: get_E10
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::LagCompensationUtils::CustomLine (Fusion::LagCompensationUtils::CustomEdgesBox::*)()>(&Fusion::LagCompensationUtils::CustomEdgesBox::get_E10)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::LagCompensationUtils::CustomEdgesBox), "get_E10", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::LagCompensationUtils::CustomEdgesBox::get_E11
// Il2CppName: get_E11
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::LagCompensationUtils::CustomLine (Fusion::LagCompensationUtils::CustomEdgesBox::*)()>(&Fusion::LagCompensationUtils::CustomEdgesBox::get_E11)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::LagCompensationUtils::CustomEdgesBox), "get_E11", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
