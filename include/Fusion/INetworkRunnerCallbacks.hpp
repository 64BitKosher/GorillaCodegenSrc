// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Fusion.NetworkRunnerCallbackArgs
#include "Fusion/NetworkRunnerCallbackArgs.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Fusion
namespace Fusion {
  // Forward declaring type: NetworkRunner
  class NetworkRunner;
  // Forward declaring type: PlayerRef
  struct PlayerRef;
  // Forward declaring type: NetworkInput
  struct NetworkInput;
  // Forward declaring type: ShutdownReason
  struct ShutdownReason;
  // Forward declaring type: SimulationMessagePtr
  struct SimulationMessagePtr;
  // Forward declaring type: SessionInfo
  class SessionInfo;
  // Forward declaring type: HostMigrationToken
  class HostMigrationToken;
}
// Forward declaring namespace: Fusion::Sockets
namespace Fusion::Sockets {
  // Forward declaring type: NetAddress
  struct NetAddress;
  // Forward declaring type: NetConnectFailedReason
  struct NetConnectFailedReason;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: ArraySegment`1<T>
  template<typename T>
  struct ArraySegment_1;
}
// Completed forward declares
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: INetworkRunnerCallbacks
  class INetworkRunnerCallbacks;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::INetworkRunnerCallbacks);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::INetworkRunnerCallbacks*, "Fusion", "INetworkRunnerCallbacks");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.INetworkRunnerCallbacks
  // [TokenAttribute] Offset: FFFFFFFF
  class INetworkRunnerCallbacks {
    public:
    // public System.Void OnPlayerJoined(Fusion.NetworkRunner runner, Fusion.PlayerRef player)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void OnPlayerJoined(::Fusion::NetworkRunner* runner, ::Fusion::PlayerRef player);
    // public System.Void OnPlayerLeft(Fusion.NetworkRunner runner, Fusion.PlayerRef player)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void OnPlayerLeft(::Fusion::NetworkRunner* runner, ::Fusion::PlayerRef player);
    // public System.Void OnInput(Fusion.NetworkRunner runner, Fusion.NetworkInput input)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void OnInput(::Fusion::NetworkRunner* runner, ::Fusion::NetworkInput input);
    // public System.Void OnInputMissing(Fusion.NetworkRunner runner, Fusion.PlayerRef player, Fusion.NetworkInput input)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void OnInputMissing(::Fusion::NetworkRunner* runner, ::Fusion::PlayerRef player, ::Fusion::NetworkInput input);
    // public System.Void OnShutdown(Fusion.NetworkRunner runner, Fusion.ShutdownReason shutdownReason)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void OnShutdown(::Fusion::NetworkRunner* runner, ::Fusion::ShutdownReason shutdownReason);
    // public System.Void OnConnectedToServer(Fusion.NetworkRunner runner)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void OnConnectedToServer(::Fusion::NetworkRunner* runner);
    // public System.Void OnDisconnectedFromServer(Fusion.NetworkRunner runner)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void OnDisconnectedFromServer(::Fusion::NetworkRunner* runner);
    // public System.Void OnConnectRequest(Fusion.NetworkRunner runner, Fusion.NetworkRunnerCallbackArgs/ConnectRequest request, System.Byte[] token)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void OnConnectRequest(::Fusion::NetworkRunner* runner, ::Fusion::NetworkRunnerCallbackArgs::ConnectRequest* request, ::ArrayW<uint8_t> token);
    // public System.Void OnConnectFailed(Fusion.NetworkRunner runner, Fusion.Sockets.NetAddress remoteAddress, Fusion.Sockets.NetConnectFailedReason reason)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void OnConnectFailed(::Fusion::NetworkRunner* runner, ::Fusion::Sockets::NetAddress remoteAddress, ::Fusion::Sockets::NetConnectFailedReason reason);
    // public System.Void OnUserSimulationMessage(Fusion.NetworkRunner runner, Fusion.SimulationMessagePtr message)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void OnUserSimulationMessage(::Fusion::NetworkRunner* runner, ::Fusion::SimulationMessagePtr message);
    // public System.Void OnSessionListUpdated(Fusion.NetworkRunner runner, System.Collections.Generic.List`1<Fusion.SessionInfo> sessionList)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void OnSessionListUpdated(::Fusion::NetworkRunner* runner, ::System::Collections::Generic::List_1<::Fusion::SessionInfo*>* sessionList);
    // public System.Void OnCustomAuthenticationResponse(Fusion.NetworkRunner runner, System.Collections.Generic.Dictionary`2<System.String,System.Object> data)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void OnCustomAuthenticationResponse(::Fusion::NetworkRunner* runner, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* data);
    // public System.Void OnHostMigration(Fusion.NetworkRunner runner, Fusion.HostMigrationToken hostMigrationToken)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void OnHostMigration(::Fusion::NetworkRunner* runner, ::Fusion::HostMigrationToken* hostMigrationToken);
    // public System.Void OnReliableDataReceived(Fusion.NetworkRunner runner, Fusion.PlayerRef player, System.ArraySegment`1<System.Byte> data)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void OnReliableDataReceived(::Fusion::NetworkRunner* runner, ::Fusion::PlayerRef player, ::System::ArraySegment_1<uint8_t> data);
    // public System.Void OnSceneLoadDone(Fusion.NetworkRunner runner)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void OnSceneLoadDone(::Fusion::NetworkRunner* runner);
    // public System.Void OnSceneLoadStart(Fusion.NetworkRunner runner)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void OnSceneLoadStart(::Fusion::NetworkRunner* runner);
  }; // Fusion.INetworkRunnerCallbacks
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::INetworkRunnerCallbacks::OnPlayerJoined
// Il2CppName: OnPlayerJoined
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::INetworkRunnerCallbacks::*)(::Fusion::NetworkRunner*, ::Fusion::PlayerRef)>(&Fusion::INetworkRunnerCallbacks::OnPlayerJoined)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    static auto* player = &::il2cpp_utils::GetClassFromName("Fusion", "PlayerRef")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::INetworkRunnerCallbacks*), "OnPlayerJoined", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner, player});
  }
};
// Writing MetadataGetter for method: Fusion::INetworkRunnerCallbacks::OnPlayerLeft
// Il2CppName: OnPlayerLeft
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::INetworkRunnerCallbacks::*)(::Fusion::NetworkRunner*, ::Fusion::PlayerRef)>(&Fusion::INetworkRunnerCallbacks::OnPlayerLeft)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    static auto* player = &::il2cpp_utils::GetClassFromName("Fusion", "PlayerRef")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::INetworkRunnerCallbacks*), "OnPlayerLeft", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner, player});
  }
};
// Writing MetadataGetter for method: Fusion::INetworkRunnerCallbacks::OnInput
// Il2CppName: OnInput
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::INetworkRunnerCallbacks::*)(::Fusion::NetworkRunner*, ::Fusion::NetworkInput)>(&Fusion::INetworkRunnerCallbacks::OnInput)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    static auto* input = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkInput")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::INetworkRunnerCallbacks*), "OnInput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner, input});
  }
};
// Writing MetadataGetter for method: Fusion::INetworkRunnerCallbacks::OnInputMissing
// Il2CppName: OnInputMissing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::INetworkRunnerCallbacks::*)(::Fusion::NetworkRunner*, ::Fusion::PlayerRef, ::Fusion::NetworkInput)>(&Fusion::INetworkRunnerCallbacks::OnInputMissing)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    static auto* player = &::il2cpp_utils::GetClassFromName("Fusion", "PlayerRef")->byval_arg;
    static auto* input = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkInput")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::INetworkRunnerCallbacks*), "OnInputMissing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner, player, input});
  }
};
// Writing MetadataGetter for method: Fusion::INetworkRunnerCallbacks::OnShutdown
// Il2CppName: OnShutdown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::INetworkRunnerCallbacks::*)(::Fusion::NetworkRunner*, ::Fusion::ShutdownReason)>(&Fusion::INetworkRunnerCallbacks::OnShutdown)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    static auto* shutdownReason = &::il2cpp_utils::GetClassFromName("Fusion", "ShutdownReason")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::INetworkRunnerCallbacks*), "OnShutdown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner, shutdownReason});
  }
};
// Writing MetadataGetter for method: Fusion::INetworkRunnerCallbacks::OnConnectedToServer
// Il2CppName: OnConnectedToServer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::INetworkRunnerCallbacks::*)(::Fusion::NetworkRunner*)>(&Fusion::INetworkRunnerCallbacks::OnConnectedToServer)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::INetworkRunnerCallbacks*), "OnConnectedToServer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner});
  }
};
// Writing MetadataGetter for method: Fusion::INetworkRunnerCallbacks::OnDisconnectedFromServer
// Il2CppName: OnDisconnectedFromServer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::INetworkRunnerCallbacks::*)(::Fusion::NetworkRunner*)>(&Fusion::INetworkRunnerCallbacks::OnDisconnectedFromServer)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::INetworkRunnerCallbacks*), "OnDisconnectedFromServer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner});
  }
};
// Writing MetadataGetter for method: Fusion::INetworkRunnerCallbacks::OnConnectRequest
// Il2CppName: OnConnectRequest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::INetworkRunnerCallbacks::*)(::Fusion::NetworkRunner*, ::Fusion::NetworkRunnerCallbackArgs::ConnectRequest*, ::ArrayW<uint8_t>)>(&Fusion::INetworkRunnerCallbacks::OnConnectRequest)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    static auto* request = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunnerCallbackArgs/ConnectRequest")->byval_arg;
    static auto* token = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::INetworkRunnerCallbacks*), "OnConnectRequest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner, request, token});
  }
};
// Writing MetadataGetter for method: Fusion::INetworkRunnerCallbacks::OnConnectFailed
// Il2CppName: OnConnectFailed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::INetworkRunnerCallbacks::*)(::Fusion::NetworkRunner*, ::Fusion::Sockets::NetAddress, ::Fusion::Sockets::NetConnectFailedReason)>(&Fusion::INetworkRunnerCallbacks::OnConnectFailed)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    static auto* remoteAddress = &::il2cpp_utils::GetClassFromName("Fusion.Sockets", "NetAddress")->byval_arg;
    static auto* reason = &::il2cpp_utils::GetClassFromName("Fusion.Sockets", "NetConnectFailedReason")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::INetworkRunnerCallbacks*), "OnConnectFailed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner, remoteAddress, reason});
  }
};
// Writing MetadataGetter for method: Fusion::INetworkRunnerCallbacks::OnUserSimulationMessage
// Il2CppName: OnUserSimulationMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::INetworkRunnerCallbacks::*)(::Fusion::NetworkRunner*, ::Fusion::SimulationMessagePtr)>(&Fusion::INetworkRunnerCallbacks::OnUserSimulationMessage)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    static auto* message = &::il2cpp_utils::GetClassFromName("Fusion", "SimulationMessagePtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::INetworkRunnerCallbacks*), "OnUserSimulationMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner, message});
  }
};
// Writing MetadataGetter for method: Fusion::INetworkRunnerCallbacks::OnSessionListUpdated
// Il2CppName: OnSessionListUpdated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::INetworkRunnerCallbacks::*)(::Fusion::NetworkRunner*, ::System::Collections::Generic::List_1<::Fusion::SessionInfo*>*)>(&Fusion::INetworkRunnerCallbacks::OnSessionListUpdated)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    static auto* sessionList = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Fusion", "SessionInfo")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::INetworkRunnerCallbacks*), "OnSessionListUpdated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner, sessionList});
  }
};
// Writing MetadataGetter for method: Fusion::INetworkRunnerCallbacks::OnCustomAuthenticationResponse
// Il2CppName: OnCustomAuthenticationResponse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::INetworkRunnerCallbacks::*)(::Fusion::NetworkRunner*, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*)>(&Fusion::INetworkRunnerCallbacks::OnCustomAuthenticationResponse)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    static auto* data = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Object")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::INetworkRunnerCallbacks*), "OnCustomAuthenticationResponse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner, data});
  }
};
// Writing MetadataGetter for method: Fusion::INetworkRunnerCallbacks::OnHostMigration
// Il2CppName: OnHostMigration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::INetworkRunnerCallbacks::*)(::Fusion::NetworkRunner*, ::Fusion::HostMigrationToken*)>(&Fusion::INetworkRunnerCallbacks::OnHostMigration)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    static auto* hostMigrationToken = &::il2cpp_utils::GetClassFromName("Fusion", "HostMigrationToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::INetworkRunnerCallbacks*), "OnHostMigration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner, hostMigrationToken});
  }
};
// Writing MetadataGetter for method: Fusion::INetworkRunnerCallbacks::OnReliableDataReceived
// Il2CppName: OnReliableDataReceived
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::INetworkRunnerCallbacks::*)(::Fusion::NetworkRunner*, ::Fusion::PlayerRef, ::System::ArraySegment_1<uint8_t>)>(&Fusion::INetworkRunnerCallbacks::OnReliableDataReceived)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    static auto* player = &::il2cpp_utils::GetClassFromName("Fusion", "PlayerRef")->byval_arg;
    static auto* data = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ArraySegment`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Byte")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::INetworkRunnerCallbacks*), "OnReliableDataReceived", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner, player, data});
  }
};
// Writing MetadataGetter for method: Fusion::INetworkRunnerCallbacks::OnSceneLoadDone
// Il2CppName: OnSceneLoadDone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::INetworkRunnerCallbacks::*)(::Fusion::NetworkRunner*)>(&Fusion::INetworkRunnerCallbacks::OnSceneLoadDone)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::INetworkRunnerCallbacks*), "OnSceneLoadDone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner});
  }
};
// Writing MetadataGetter for method: Fusion::INetworkRunnerCallbacks::OnSceneLoadStart
// Il2CppName: OnSceneLoadStart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::INetworkRunnerCallbacks::*)(::Fusion::NetworkRunner*)>(&Fusion::INetworkRunnerCallbacks::OnSceneLoadStart)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::INetworkRunnerCallbacks*), "OnSceneLoadStart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner});
  }
};
