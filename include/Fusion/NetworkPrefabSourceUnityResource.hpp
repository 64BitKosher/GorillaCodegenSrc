// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Fusion.NetworkPrefabSourceUnityBase
#include "Fusion/NetworkPrefabSourceUnityBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Fusion
namespace Fusion {
  // Forward declaring type: NetworkObject
  class NetworkObject;
  // Forward declaring type: NetworkPrefabLoadContext
  struct NetworkPrefabLoadContext;
}
// Completed forward declares
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: NetworkPrefabSourceUnityResource
  class NetworkPrefabSourceUnityResource;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::NetworkPrefabSourceUnityResource);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::NetworkPrefabSourceUnityResource*, "Fusion", "NetworkPrefabSourceUnityResource");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.NetworkPrefabSourceUnityResource
  // [TokenAttribute] Offset: FFFFFFFF
  class NetworkPrefabSourceUnityResource : public ::Fusion::NetworkPrefabSourceUnityBase {
    public:
    // Nested type: ::Fusion::NetworkPrefabSourceUnityResource::$$c__DisplayClass4_0
    class $$c__DisplayClass4_0;
    public:
    // public System.String ResourcePath
    // Size: 0x8
    // Offset: 0x28
    ::StringW ResourcePath;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Object _state
    // Size: 0x8
    // Offset: 0x30
    ::Il2CppObject* state;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    public:
    // Get instance field reference: public System.String ResourcePath
    [[deprecated("Use field access instead!")]] ::StringW& dyn_ResourcePath();
    // Get instance field reference: private System.Object _state
    [[deprecated("Use field access instead!")]] ::Il2CppObject*& dyn__state();
    // private System.Void UnloadPrefab(Fusion.NetworkObject asset)
    // Offset: 0x2B4F600
    void UnloadPrefab(::Fusion::NetworkObject* asset);
    // public override System.String get_EditorSummary()
    // Offset: 0x2B4F30C
    // Implemented from: Fusion.NetworkPrefabSourceUnityBase
    // Base method: System.String NetworkPrefabSourceUnityBase::get_EditorSummary()
    ::StringW get_EditorSummary();
    // public override System.Void Load(in Fusion.NetworkPrefabLoadContext context)
    // Offset: 0x2B4F378
    // Implemented from: Fusion.NetworkPrefabSourceUnityBase
    // Base method: System.Void NetworkPrefabSourceUnityBase::Load(in Fusion.NetworkPrefabLoadContext context)
    void Load(ByRef<::Fusion::NetworkPrefabLoadContext> context);
    // public override System.Void Unload()
    // Offset: 0x2B4F59C
    // Implemented from: Fusion.NetworkPrefabSourceUnityBase
    // Base method: System.Void NetworkPrefabSourceUnityBase::Unload()
    void Unload();
    // public System.Void .ctor()
    // Offset: 0x2B4F604
    // Implemented from: Fusion.NetworkPrefabSourceUnityBase
    // Base method: System.Void NetworkPrefabSourceUnityBase::.ctor()
    // Base method: System.Void AssetObject::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NetworkPrefabSourceUnityResource* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkPrefabSourceUnityResource::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NetworkPrefabSourceUnityResource*, creationType>()));
    }
  }; // Fusion.NetworkPrefabSourceUnityResource
  #pragma pack(pop)
  static check_size<sizeof(NetworkPrefabSourceUnityResource), 48 + sizeof(::Il2CppObject*)> __Fusion_NetworkPrefabSourceUnityResourceSizeCheck;
  static_assert(sizeof(NetworkPrefabSourceUnityResource) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::NetworkPrefabSourceUnityResource::UnloadPrefab
// Il2CppName: UnloadPrefab
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkPrefabSourceUnityResource::*)(::Fusion::NetworkObject*)>(&Fusion::NetworkPrefabSourceUnityResource::UnloadPrefab)> {
  static const MethodInfo* get() {
    static auto* asset = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkPrefabSourceUnityResource*), "UnloadPrefab", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{asset});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkPrefabSourceUnityResource::get_EditorSummary
// Il2CppName: get_EditorSummary
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Fusion::NetworkPrefabSourceUnityResource::*)()>(&Fusion::NetworkPrefabSourceUnityResource::get_EditorSummary)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkPrefabSourceUnityResource*), "get_EditorSummary", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkPrefabSourceUnityResource::Load
// Il2CppName: Load
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkPrefabSourceUnityResource::*)(ByRef<::Fusion::NetworkPrefabLoadContext>)>(&Fusion::NetworkPrefabSourceUnityResource::Load)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkPrefabLoadContext")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkPrefabSourceUnityResource*), "Load", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkPrefabSourceUnityResource::Unload
// Il2CppName: Unload
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkPrefabSourceUnityResource::*)()>(&Fusion::NetworkPrefabSourceUnityResource::Unload)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkPrefabSourceUnityResource*), "Unload", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkPrefabSourceUnityResource::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
