// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Fusion
namespace Fusion {
  // Forward declaring type: NetworkRunner
  class NetworkRunner;
}
// Completed forward declares
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: NetworkRunnerExtensions
  class NetworkRunnerExtensions;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::NetworkRunnerExtensions);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::NetworkRunnerExtensions*, "Fusion", "NetworkRunnerExtensions");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.NetworkRunnerExtensions
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class NetworkRunnerExtensions : public ::Il2CppObject {
    public:
    // static public System.Boolean SetActiveScene(Fusion.NetworkRunner runner, System.String sceneNameOrPath)
    // Offset: 0x2817698
    static bool SetActiveScene(::Fusion::NetworkRunner* runner, ::StringW sceneNameOrPath);
  }; // Fusion.NetworkRunnerExtensions
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::NetworkRunnerExtensions::SetActiveScene
// Il2CppName: SetActiveScene
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Fusion::NetworkRunner*, ::StringW)>(&Fusion::NetworkRunnerExtensions::SetActiveScene)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    static auto* sceneNameOrPath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkRunnerExtensions*), "SetActiveScene", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner, sceneNameOrPath});
  }
};
