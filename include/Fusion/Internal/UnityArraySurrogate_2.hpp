// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Fusion.Internal.UnitySurrogateBase
#include "Fusion/Internal/UnitySurrogateBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: ValueType
  class ValueType;
}
// Forward declaring namespace: Fusion
namespace Fusion {
  // Forward declaring type: IElementReaderWriter`1<T>
  template<typename T>
  class IElementReaderWriter_1;
}
// Completed forward declares
// Type namespace: Fusion.Internal
namespace Fusion::Internal {
  // Forward declaring type: UnityArraySurrogate`2<T, ReaderWriter>
  template<typename T, typename ReaderWriter>
  class UnityArraySurrogate_2;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::Fusion::Internal::UnityArraySurrogate_2, "Fusion.Internal", "UnityArraySurrogate`2");
// Type namespace: Fusion.Internal
namespace Fusion::Internal {
  // WARNING Size may be invalid!
  // Autogenerated type: Fusion.Internal.UnityArraySurrogate`2
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename T, typename ReaderWriter>
  class UnityArraySurrogate_2 : public ::Fusion::Internal::UnitySurrogateBase {
    public:
    // Autogenerated static field getter
    // Get static field: static private ReaderWriter _readerWriter
    static ReaderWriter _get__readerWriter() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Internal::UnityArraySurrogate_2::_get__readerWriter");
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<ReaderWriter>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<UnityArraySurrogate_2<T, ReaderWriter>*>::get(), "_readerWriter")));
    }
    // Autogenerated static field setter
    // Set static field: static private ReaderWriter _readerWriter
    static void _set__readerWriter(ReaderWriter value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Internal::UnityArraySurrogate_2::_set__readerWriter");
      THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<UnityArraySurrogate_2<T, ReaderWriter>*>::get(), "_readerWriter", value)));
    }
    // public T[] get_DataProperty()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::ArrayW<T> get_DataProperty() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Internal::UnityArraySurrogate_2::get_DataProperty");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Internal::UnityArraySurrogate_2<T, ReaderWriter>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<::ArrayW<T>, false>(this, ___internal__method);
    }
    // public System.Void set_DataProperty(T[] value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_DataProperty(::ArrayW<T> value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Internal::UnityArraySurrogate_2::set_DataProperty");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Internal::UnityArraySurrogate_2<T, ReaderWriter>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public override System.Void Read(System.Int32* data, System.Int32 capacity)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: Fusion.Internal.UnitySurrogateBase
    // Base method: System.Void UnitySurrogateBase::Read(System.Int32* data, System.Int32 capacity)
    void Read(int* data, int capacity) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Internal::UnityArraySurrogate_2::Read");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Internal::UnitySurrogateBase*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, capacity);
    }
    // public override System.Void Write(System.Int32* data, System.Int32 capacity)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: Fusion.Internal.UnitySurrogateBase
    // Base method: System.Void UnitySurrogateBase::Write(System.Int32* data, System.Int32 capacity)
    void Write(int* data, int capacity) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Internal::UnityArraySurrogate_2::Write");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Internal::UnitySurrogateBase*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, capacity);
    }
    // public override System.Void Init(System.Int32 capacity)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: Fusion.Internal.UnitySurrogateBase
    // Base method: System.Void UnitySurrogateBase::Init(System.Int32 capacity)
    void Init(int capacity) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Internal::UnityArraySurrogate_2::Init");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Internal::UnitySurrogateBase*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capacity);
    }
    // protected System.Void .ctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: Fusion.Internal.UnitySurrogateBase
    // Base method: System.Void UnitySurrogateBase::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static UnityArraySurrogate_2<T, ReaderWriter>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Internal::UnityArraySurrogate_2::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<UnityArraySurrogate_2<T, ReaderWriter>*, creationType>()));
    }
  }; // Fusion.Internal.UnityArraySurrogate`2
  // Could not write size check! Type: Fusion.Internal.UnityArraySurrogate`2 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
