// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Fusion.Internal.IUnitySurrogate
#include "Fusion/Internal/IUnitySurrogate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: Fusion.Internal
namespace Fusion::Internal {
  // Forward declaring type: UnitySurrogateBase
  class UnitySurrogateBase;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::Internal::UnitySurrogateBase);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::Internal::UnitySurrogateBase*, "Fusion.Internal", "UnitySurrogateBase");
// Type namespace: Fusion.Internal
namespace Fusion::Internal {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.Internal.UnitySurrogateBase
  // [TokenAttribute] Offset: FFFFFFFF
  class UnitySurrogateBase : public ::Il2CppObject/*, public ::Fusion::Internal::IUnitySurrogate*/ {
    public:
    // Creating interface conversion operator: operator ::Fusion::Internal::IUnitySurrogate
    operator ::Fusion::Internal::IUnitySurrogate() noexcept {
      return *reinterpret_cast<::Fusion::Internal::IUnitySurrogate*>(this);
    }
    // public System.Void Read(System.Int32* data, System.Int32 capacity)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Read(int* data, int capacity);
    // public System.Void Write(System.Int32* data, System.Int32 capacity)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Write(int* data, int capacity);
    // public System.Void Init(System.Int32 capacity)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Init(int capacity);
    // protected System.Void .ctor()
    // Offset: 0x2B895A8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static UnitySurrogateBase* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Internal::UnitySurrogateBase::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<UnitySurrogateBase*, creationType>()));
    }
  }; // Fusion.Internal.UnitySurrogateBase
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::Internal::UnitySurrogateBase::Read
// Il2CppName: Read
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Internal::UnitySurrogateBase::*)(int*, int)>(&Fusion::Internal::UnitySurrogateBase::Read)> {
  static const MethodInfo* get() {
    static auto* data = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* capacity = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Internal::UnitySurrogateBase*), "Read", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, capacity});
  }
};
// Writing MetadataGetter for method: Fusion::Internal::UnitySurrogateBase::Write
// Il2CppName: Write
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Internal::UnitySurrogateBase::*)(int*, int)>(&Fusion::Internal::UnitySurrogateBase::Write)> {
  static const MethodInfo* get() {
    static auto* data = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Int32"))->byval_arg;
    static auto* capacity = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Internal::UnitySurrogateBase*), "Write", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, capacity});
  }
};
// Writing MetadataGetter for method: Fusion::Internal::UnitySurrogateBase::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::Internal::UnitySurrogateBase::*)(int)>(&Fusion::Internal::UnitySurrogateBase::Init)> {
  static const MethodInfo* get() {
    static auto* capacity = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::Internal::UnitySurrogateBase*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{capacity});
  }
};
// Writing MetadataGetter for method: Fusion::Internal::UnitySurrogateBase::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
