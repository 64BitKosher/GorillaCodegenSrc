// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Fusion
namespace Fusion {
  // Forward declaring type: NetworkRunner
  class NetworkRunner;
}
// Completed forward declares
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: INetworkSceneManager
  class INetworkSceneManager;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::INetworkSceneManager);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::INetworkSceneManager*, "Fusion", "INetworkSceneManager");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.INetworkSceneManager
  // [TokenAttribute] Offset: FFFFFFFF
  class INetworkSceneManager {
    public:
    // public System.Void Initialize(Fusion.NetworkRunner runner)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Initialize(::Fusion::NetworkRunner* runner);
    // public System.Void Shutdown(Fusion.NetworkRunner runner)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Shutdown(::Fusion::NetworkRunner* runner);
    // public System.Boolean IsReady(Fusion.NetworkRunner runner)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool IsReady(::Fusion::NetworkRunner* runner);
  }; // Fusion.INetworkSceneManager
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::INetworkSceneManager::Initialize
// Il2CppName: Initialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::INetworkSceneManager::*)(::Fusion::NetworkRunner*)>(&Fusion::INetworkSceneManager::Initialize)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::INetworkSceneManager*), "Initialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner});
  }
};
// Writing MetadataGetter for method: Fusion::INetworkSceneManager::Shutdown
// Il2CppName: Shutdown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::INetworkSceneManager::*)(::Fusion::NetworkRunner*)>(&Fusion::INetworkSceneManager::Shutdown)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::INetworkSceneManager*), "Shutdown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner});
  }
};
// Writing MetadataGetter for method: Fusion::INetworkSceneManager::IsReady
// Il2CppName: IsReady
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Fusion::INetworkSceneManager::*)(::Fusion::NetworkRunner*)>(&Fusion::INetworkSceneManager::IsReady)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::INetworkSceneManager*), "IsReady", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner});
  }
};
