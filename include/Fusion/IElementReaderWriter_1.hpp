// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include <stdint.h>
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: IElementReaderWriter`1<T>
  template<typename T>
  class IElementReaderWriter_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::Fusion::IElementReaderWriter_1, "Fusion", "IElementReaderWriter`1");
// Type namespace: Fusion
namespace Fusion {
  // WARNING Size may be invalid!
  // Autogenerated type: Fusion.IElementReaderWriter`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename T>
  class IElementReaderWriter_1 {
    public:
    // public T Read(System.Byte* data, System.Int32 index)
    // Offset: 0xFFFFFFFFFFFFFFFF
    T Read(uint8_t* data, int index) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::IElementReaderWriter_1::Read");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::IElementReaderWriter_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(this, ___internal__method, data, index);
    }
    // public System.Void Write(System.Byte* data, System.Int32 index, T element)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Write(uint8_t* data, int index, T element) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::IElementReaderWriter_1::Write");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::IElementReaderWriter_1<T>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, index, element);
    }
    // public System.Int32 GetElementWordCount()
    // Offset: 0xFFFFFFFFFFFFFFFF
    int GetElementWordCount() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::IElementReaderWriter_1::GetElementWordCount");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::IElementReaderWriter_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
    }
    // public T ReadRef(System.Byte* data, System.Int32 index)
    // Offset: 0xFFFFFFFFFFFFFFFF
    T ReadRef(uint8_t* data, int index) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::IElementReaderWriter_1::ReadRef");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::IElementReaderWriter_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(this, ___internal__method, data, index);
    }
  }; // Fusion.IElementReaderWriter`1
  // Could not write size check! Type: Fusion.IElementReaderWriter`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
