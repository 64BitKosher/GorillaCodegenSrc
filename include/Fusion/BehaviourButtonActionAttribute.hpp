// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Fusion.BehaviourActionAttribute
#include "Fusion/BehaviourActionAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: BehaviourButtonActionAttribute
  class BehaviourButtonActionAttribute;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::BehaviourButtonActionAttribute);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::BehaviourButtonActionAttribute*, "Fusion", "BehaviourButtonActionAttribute");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.BehaviourButtonActionAttribute
  // [TokenAttribute] Offset: FFFFFFFF
  // [AttributeUsageAttribute] Offset: FFFFFFFF
  class BehaviourButtonActionAttribute : public ::Fusion::BehaviourActionAttribute {
    public:
    public:
    // readonly System.String ButtonName
    // Size: 0x8
    // Offset: 0x28
    ::StringW ButtonName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Creating conversion operator: operator ::StringW
    constexpr operator ::StringW() const noexcept {
      return ButtonName;
    }
    // Get instance field reference: readonly System.String ButtonName
    [[deprecated("Use field access instead!")]] ::StringW& dyn_ButtonName();
    // public System.Void .ctor(System.String buttonName, System.String executeMethod, System.String conditionMember)
    // Offset: 0x2AFEB90
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BehaviourButtonActionAttribute* New_ctor(::StringW buttonName, ::StringW executeMethod, ::StringW conditionMember) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::BehaviourButtonActionAttribute::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BehaviourButtonActionAttribute*, creationType>(buttonName, executeMethod, conditionMember)));
    }
    // public System.Void .ctor(System.String buttonName, System.String executeMethod, System.Boolean showWhileRunning, System.Boolean showWhileNotRunning, System.String conditionMember)
    // Offset: 0x2AFEBCC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BehaviourButtonActionAttribute* New_ctor(::StringW buttonName, ::StringW executeMethod, bool showWhileRunning, bool showWhileNotRunning, ::StringW conditionMember) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::BehaviourButtonActionAttribute::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BehaviourButtonActionAttribute*, creationType>(buttonName, executeMethod, showWhileRunning, showWhileNotRunning, conditionMember)));
    }
    // public System.Void .ctor(System.String buttonName, System.Boolean showWhileRunning, System.Boolean showWhileNotRunning, System.String conditionMember)
    // Offset: 0x2AFEC14
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BehaviourButtonActionAttribute* New_ctor(::StringW buttonName, bool showWhileRunning, bool showWhileNotRunning, ::StringW conditionMember) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::BehaviourButtonActionAttribute::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BehaviourButtonActionAttribute*, creationType>(buttonName, showWhileRunning, showWhileNotRunning, conditionMember)));
    }
  }; // Fusion.BehaviourButtonActionAttribute
  #pragma pack(pop)
  static check_size<sizeof(BehaviourButtonActionAttribute), 40 + sizeof(::StringW)> __Fusion_BehaviourButtonActionAttributeSizeCheck;
  static_assert(sizeof(BehaviourButtonActionAttribute) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::BehaviourButtonActionAttribute::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Fusion::BehaviourButtonActionAttribute::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Fusion::BehaviourButtonActionAttribute::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
