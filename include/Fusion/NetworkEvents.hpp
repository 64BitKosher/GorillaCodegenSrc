// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Fusion.Behaviour
#include "Fusion/Behaviour.hpp"
// Including type: Fusion.INetworkRunnerCallbacks
#include "Fusion/INetworkRunnerCallbacks.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Fusion
namespace Fusion {
  // Forward declaring type: NetworkRunner
  class NetworkRunner;
  // Forward declaring type: PlayerRef
  struct PlayerRef;
  // Forward declaring type: NetworkInput
  struct NetworkInput;
  // Forward declaring type: ShutdownReason
  struct ShutdownReason;
  // Forward declaring type: SimulationMessagePtr
  struct SimulationMessagePtr;
  // Forward declaring type: SessionInfo
  class SessionInfo;
  // Forward declaring type: HostMigrationToken
  class HostMigrationToken;
}
// Forward declaring namespace: Fusion::Sockets
namespace Fusion::Sockets {
  // Forward declaring type: NetAddress
  struct NetAddress;
  // Forward declaring type: NetConnectFailedReason
  struct NetConnectFailedReason;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: ArraySegment`1<T>
  template<typename T>
  struct ArraySegment_1;
}
// Completed forward declares
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: NetworkEvents
  class NetworkEvents;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::NetworkEvents);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::NetworkEvents*, "Fusion", "NetworkEvents");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0xA0
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.NetworkEvents
  // [TokenAttribute] Offset: FFFFFFFF
  // [AddComponentMenu] Offset: FFFFFFFF
  class NetworkEvents : public ::Fusion::Behaviour/*, public ::Fusion::INetworkRunnerCallbacks*/ {
    public:
    // Nested type: ::Fusion::NetworkEvents::InputEvent
    class InputEvent;
    // Nested type: ::Fusion::NetworkEvents::InputPlayerEvent
    class InputPlayerEvent;
    // Nested type: ::Fusion::NetworkEvents::ConnectRequestEvent
    class ConnectRequestEvent;
    // Nested type: ::Fusion::NetworkEvents::ConnectFailedEvent
    class ConnectFailedEvent;
    // Nested type: ::Fusion::NetworkEvents::ShutdownEvent
    class ShutdownEvent;
    // Nested type: ::Fusion::NetworkEvents::PlayerEvent
    class PlayerEvent;
    // Nested type: ::Fusion::NetworkEvents::RunnerEvent
    class RunnerEvent;
    // Nested type: ::Fusion::NetworkEvents::SimulationMessageEvent
    class SimulationMessageEvent;
    // Nested type: ::Fusion::NetworkEvents::SessionListUpdateEvent
    class SessionListUpdateEvent;
    // Nested type: ::Fusion::NetworkEvents::CustomAuthenticationResponse
    class CustomAuthenticationResponse;
    // Nested type: ::Fusion::NetworkEvents::HostMigrationEvent
    class HostMigrationEvent;
    // Nested type: ::Fusion::NetworkEvents::ReliableDataEvent
    class ReliableDataEvent;
    public:
    // public Fusion.NetworkEvents/InputEvent OnInput
    // Size: 0x8
    // Offset: 0x20
    ::Fusion::NetworkEvents::InputEvent* OnInput;
    // Field size check
    static_assert(sizeof(::Fusion::NetworkEvents::InputEvent*) == 0x8);
    // public Fusion.NetworkEvents/InputPlayerEvent OnInputMissing
    // Size: 0x8
    // Offset: 0x28
    ::Fusion::NetworkEvents::InputPlayerEvent* OnInputMissing;
    // Field size check
    static_assert(sizeof(::Fusion::NetworkEvents::InputPlayerEvent*) == 0x8);
    // public Fusion.NetworkEvents/RunnerEvent OnConnectedToServer
    // Size: 0x8
    // Offset: 0x30
    ::Fusion::NetworkEvents::RunnerEvent* OnConnectedToServer;
    // Field size check
    static_assert(sizeof(::Fusion::NetworkEvents::RunnerEvent*) == 0x8);
    // public Fusion.NetworkEvents/RunnerEvent OnDisconnectedFromServer
    // Size: 0x8
    // Offset: 0x38
    ::Fusion::NetworkEvents::RunnerEvent* OnDisconnectedFromServer;
    // Field size check
    static_assert(sizeof(::Fusion::NetworkEvents::RunnerEvent*) == 0x8);
    // public Fusion.NetworkEvents/ConnectRequestEvent OnConnectRequest
    // Size: 0x8
    // Offset: 0x40
    ::Fusion::NetworkEvents::ConnectRequestEvent* OnConnectRequest;
    // Field size check
    static_assert(sizeof(::Fusion::NetworkEvents::ConnectRequestEvent*) == 0x8);
    // public Fusion.NetworkEvents/ConnectFailedEvent OnConnectFailed
    // Size: 0x8
    // Offset: 0x48
    ::Fusion::NetworkEvents::ConnectFailedEvent* OnConnectFailed;
    // Field size check
    static_assert(sizeof(::Fusion::NetworkEvents::ConnectFailedEvent*) == 0x8);
    // public Fusion.NetworkEvents/PlayerEvent PlayerJoined
    // Size: 0x8
    // Offset: 0x50
    ::Fusion::NetworkEvents::PlayerEvent* PlayerJoined;
    // Field size check
    static_assert(sizeof(::Fusion::NetworkEvents::PlayerEvent*) == 0x8);
    // public Fusion.NetworkEvents/PlayerEvent PlayerLeft
    // Size: 0x8
    // Offset: 0x58
    ::Fusion::NetworkEvents::PlayerEvent* PlayerLeft;
    // Field size check
    static_assert(sizeof(::Fusion::NetworkEvents::PlayerEvent*) == 0x8);
    // public Fusion.NetworkEvents/SimulationMessageEvent OnSimulationMessage
    // Size: 0x8
    // Offset: 0x60
    ::Fusion::NetworkEvents::SimulationMessageEvent* OnSimulationMessage;
    // Field size check
    static_assert(sizeof(::Fusion::NetworkEvents::SimulationMessageEvent*) == 0x8);
    // public Fusion.NetworkEvents/ShutdownEvent OnShutdown
    // Size: 0x8
    // Offset: 0x68
    ::Fusion::NetworkEvents::ShutdownEvent* OnShutdown;
    // Field size check
    static_assert(sizeof(::Fusion::NetworkEvents::ShutdownEvent*) == 0x8);
    // public Fusion.NetworkEvents/SessionListUpdateEvent OnSessionListUpdate
    // Size: 0x8
    // Offset: 0x70
    ::Fusion::NetworkEvents::SessionListUpdateEvent* OnSessionListUpdate;
    // Field size check
    static_assert(sizeof(::Fusion::NetworkEvents::SessionListUpdateEvent*) == 0x8);
    // public Fusion.NetworkEvents/CustomAuthenticationResponse OnCustomAuthenticationResponse
    // Size: 0x8
    // Offset: 0x78
    ::Fusion::NetworkEvents::CustomAuthenticationResponse* OnCustomAuthenticationResponse;
    // Field size check
    static_assert(sizeof(::Fusion::NetworkEvents::CustomAuthenticationResponse*) == 0x8);
    // public Fusion.NetworkEvents/HostMigrationEvent OnHostMigration
    // Size: 0x8
    // Offset: 0x80
    ::Fusion::NetworkEvents::HostMigrationEvent* OnHostMigration;
    // Field size check
    static_assert(sizeof(::Fusion::NetworkEvents::HostMigrationEvent*) == 0x8);
    // public Fusion.NetworkEvents/RunnerEvent OnSceneLoadDone
    // Size: 0x8
    // Offset: 0x88
    ::Fusion::NetworkEvents::RunnerEvent* OnSceneLoadDone;
    // Field size check
    static_assert(sizeof(::Fusion::NetworkEvents::RunnerEvent*) == 0x8);
    // public Fusion.NetworkEvents/RunnerEvent OnSceneLoadStart
    // Size: 0x8
    // Offset: 0x90
    ::Fusion::NetworkEvents::RunnerEvent* OnSceneLoadStart;
    // Field size check
    static_assert(sizeof(::Fusion::NetworkEvents::RunnerEvent*) == 0x8);
    // public Fusion.NetworkEvents/ReliableDataEvent OnReliableData
    // Size: 0x8
    // Offset: 0x98
    ::Fusion::NetworkEvents::ReliableDataEvent* OnReliableData;
    // Field size check
    static_assert(sizeof(::Fusion::NetworkEvents::ReliableDataEvent*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::Fusion::INetworkRunnerCallbacks
    operator ::Fusion::INetworkRunnerCallbacks() noexcept {
      return *reinterpret_cast<::Fusion::INetworkRunnerCallbacks*>(this);
    }
    // Get instance field reference: public Fusion.NetworkEvents/InputEvent OnInput
    [[deprecated("Use field access instead!")]] ::Fusion::NetworkEvents::InputEvent*& dyn_OnInput();
    // Get instance field reference: public Fusion.NetworkEvents/InputPlayerEvent OnInputMissing
    [[deprecated("Use field access instead!")]] ::Fusion::NetworkEvents::InputPlayerEvent*& dyn_OnInputMissing();
    // Get instance field reference: public Fusion.NetworkEvents/RunnerEvent OnConnectedToServer
    [[deprecated("Use field access instead!")]] ::Fusion::NetworkEvents::RunnerEvent*& dyn_OnConnectedToServer();
    // Get instance field reference: public Fusion.NetworkEvents/RunnerEvent OnDisconnectedFromServer
    [[deprecated("Use field access instead!")]] ::Fusion::NetworkEvents::RunnerEvent*& dyn_OnDisconnectedFromServer();
    // Get instance field reference: public Fusion.NetworkEvents/ConnectRequestEvent OnConnectRequest
    [[deprecated("Use field access instead!")]] ::Fusion::NetworkEvents::ConnectRequestEvent*& dyn_OnConnectRequest();
    // Get instance field reference: public Fusion.NetworkEvents/ConnectFailedEvent OnConnectFailed
    [[deprecated("Use field access instead!")]] ::Fusion::NetworkEvents::ConnectFailedEvent*& dyn_OnConnectFailed();
    // Get instance field reference: public Fusion.NetworkEvents/PlayerEvent PlayerJoined
    [[deprecated("Use field access instead!")]] ::Fusion::NetworkEvents::PlayerEvent*& dyn_PlayerJoined();
    // Get instance field reference: public Fusion.NetworkEvents/PlayerEvent PlayerLeft
    [[deprecated("Use field access instead!")]] ::Fusion::NetworkEvents::PlayerEvent*& dyn_PlayerLeft();
    // Get instance field reference: public Fusion.NetworkEvents/SimulationMessageEvent OnSimulationMessage
    [[deprecated("Use field access instead!")]] ::Fusion::NetworkEvents::SimulationMessageEvent*& dyn_OnSimulationMessage();
    // Get instance field reference: public Fusion.NetworkEvents/ShutdownEvent OnShutdown
    [[deprecated("Use field access instead!")]] ::Fusion::NetworkEvents::ShutdownEvent*& dyn_OnShutdown();
    // Get instance field reference: public Fusion.NetworkEvents/SessionListUpdateEvent OnSessionListUpdate
    [[deprecated("Use field access instead!")]] ::Fusion::NetworkEvents::SessionListUpdateEvent*& dyn_OnSessionListUpdate();
    // Get instance field reference: public Fusion.NetworkEvents/CustomAuthenticationResponse OnCustomAuthenticationResponse
    [[deprecated("Use field access instead!")]] ::Fusion::NetworkEvents::CustomAuthenticationResponse*& dyn_OnCustomAuthenticationResponse();
    // Get instance field reference: public Fusion.NetworkEvents/HostMigrationEvent OnHostMigration
    [[deprecated("Use field access instead!")]] ::Fusion::NetworkEvents::HostMigrationEvent*& dyn_OnHostMigration();
    // Get instance field reference: public Fusion.NetworkEvents/RunnerEvent OnSceneLoadDone
    [[deprecated("Use field access instead!")]] ::Fusion::NetworkEvents::RunnerEvent*& dyn_OnSceneLoadDone();
    // Get instance field reference: public Fusion.NetworkEvents/RunnerEvent OnSceneLoadStart
    [[deprecated("Use field access instead!")]] ::Fusion::NetworkEvents::RunnerEvent*& dyn_OnSceneLoadStart();
    // Get instance field reference: public Fusion.NetworkEvents/ReliableDataEvent OnReliableData
    [[deprecated("Use field access instead!")]] ::Fusion::NetworkEvents::ReliableDataEvent*& dyn_OnReliableData();
    // private System.Void Fusion.INetworkRunnerCallbacks.OnPlayerJoined(Fusion.NetworkRunner runner, Fusion.PlayerRef player)
    // Offset: 0x2B51890
    void Fusion_INetworkRunnerCallbacks_OnPlayerJoined(::Fusion::NetworkRunner* runner, ::Fusion::PlayerRef player);
    // private System.Void Fusion.INetworkRunnerCallbacks.OnPlayerLeft(Fusion.NetworkRunner runner, Fusion.PlayerRef player)
    // Offset: 0x2B51904
    void Fusion_INetworkRunnerCallbacks_OnPlayerLeft(::Fusion::NetworkRunner* runner, ::Fusion::PlayerRef player);
    // private System.Void Fusion.INetworkRunnerCallbacks.OnInput(Fusion.NetworkRunner runner, Fusion.NetworkInput input)
    // Offset: 0x2B51978
    void Fusion_INetworkRunnerCallbacks_OnInput(::Fusion::NetworkRunner* runner, ::Fusion::NetworkInput input);
    // private System.Void Fusion.INetworkRunnerCallbacks.OnInputMissing(Fusion.NetworkRunner runner, Fusion.PlayerRef player, Fusion.NetworkInput input)
    // Offset: 0x2B519F4
    void Fusion_INetworkRunnerCallbacks_OnInputMissing(::Fusion::NetworkRunner* runner, ::Fusion::PlayerRef player, ::Fusion::NetworkInput input);
    // private System.Void Fusion.INetworkRunnerCallbacks.OnShutdown(Fusion.NetworkRunner runner, Fusion.ShutdownReason shutdownReason)
    // Offset: 0x2B51A84
    void Fusion_INetworkRunnerCallbacks_OnShutdown(::Fusion::NetworkRunner* runner, ::Fusion::ShutdownReason shutdownReason);
    // private System.Void Fusion.INetworkRunnerCallbacks.OnConnectedToServer(Fusion.NetworkRunner runner)
    // Offset: 0x2B51AF8
    void Fusion_INetworkRunnerCallbacks_OnConnectedToServer(::Fusion::NetworkRunner* runner);
    // private System.Void Fusion.INetworkRunnerCallbacks.OnDisconnectedFromServer(Fusion.NetworkRunner runner)
    // Offset: 0x2B51B58
    void Fusion_INetworkRunnerCallbacks_OnDisconnectedFromServer(::Fusion::NetworkRunner* runner);
    // private System.Void Fusion.INetworkRunnerCallbacks.OnConnectRequest(Fusion.NetworkRunner runner, Fusion.NetworkRunnerCallbackArgs/ConnectRequest request, System.Byte[] token)
    // Offset: 0x2B51BB8
    void Fusion_INetworkRunnerCallbacks_OnConnectRequest(::Fusion::NetworkRunner* runner, ::Fusion::NetworkRunnerCallbackArgs::ConnectRequest* request, ::ArrayW<uint8_t> token);
    // private System.Void Fusion.INetworkRunnerCallbacks.OnConnectFailed(Fusion.NetworkRunner runner, Fusion.Sockets.NetAddress remoteAddress, Fusion.Sockets.NetConnectFailedReason reason)
    // Offset: 0x2B51C34
    void Fusion_INetworkRunnerCallbacks_OnConnectFailed(::Fusion::NetworkRunner* runner, ::Fusion::Sockets::NetAddress remoteAddress, ::Fusion::Sockets::NetConnectFailedReason reason);
    // private System.Void Fusion.INetworkRunnerCallbacks.OnUserSimulationMessage(Fusion.NetworkRunner runner, Fusion.SimulationMessagePtr message)
    // Offset: 0x2B51CEC
    void Fusion_INetworkRunnerCallbacks_OnUserSimulationMessage(::Fusion::NetworkRunner* runner, ::Fusion::SimulationMessagePtr message);
    // private System.Void Fusion.INetworkRunnerCallbacks.OnSessionListUpdated(Fusion.NetworkRunner runner, System.Collections.Generic.List`1<Fusion.SessionInfo> sessionList)
    // Offset: 0x2B51D60
    void Fusion_INetworkRunnerCallbacks_OnSessionListUpdated(::Fusion::NetworkRunner* runner, ::System::Collections::Generic::List_1<::Fusion::SessionInfo*>* sessionList);
    // private System.Void Fusion.INetworkRunnerCallbacks.OnReliableDataReceived(Fusion.NetworkRunner runner, Fusion.PlayerRef player, System.ArraySegment`1<System.Byte> data)
    // Offset: 0x2B51DD4
    void Fusion_INetworkRunnerCallbacks_OnReliableDataReceived(::Fusion::NetworkRunner* runner, ::Fusion::PlayerRef player, ::System::ArraySegment_1<uint8_t> data);
    // private System.Void Fusion.INetworkRunnerCallbacks.OnSceneLoadDone(Fusion.NetworkRunner runner)
    // Offset: 0x2B51E64
    void Fusion_INetworkRunnerCallbacks_OnSceneLoadDone(::Fusion::NetworkRunner* runner);
    // private System.Void Fusion.INetworkRunnerCallbacks.OnSceneLoadStart(Fusion.NetworkRunner runner)
    // Offset: 0x2B51EC4
    void Fusion_INetworkRunnerCallbacks_OnSceneLoadStart(::Fusion::NetworkRunner* runner);
    // private System.Void Fusion.INetworkRunnerCallbacks.OnCustomAuthenticationResponse(Fusion.NetworkRunner runner, System.Collections.Generic.Dictionary`2<System.String,System.Object> data)
    // Offset: 0x2B51F24
    void Fusion_INetworkRunnerCallbacks_OnCustomAuthenticationResponse(::Fusion::NetworkRunner* runner, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* data);
    // private System.Void Fusion.INetworkRunnerCallbacks.OnHostMigration(Fusion.NetworkRunner runner, Fusion.HostMigrationToken hostMigrationToken)
    // Offset: 0x2B51F98
    void Fusion_INetworkRunnerCallbacks_OnHostMigration(::Fusion::NetworkRunner* runner, ::Fusion::HostMigrationToken* hostMigrationToken);
    // public System.Void .ctor()
    // Offset: 0x2B5200C
    // Implemented from: Fusion.Behaviour
    // Base method: System.Void Behaviour::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NetworkEvents* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkEvents::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NetworkEvents*, creationType>()));
    }
  }; // Fusion.NetworkEvents
  #pragma pack(pop)
  static check_size<sizeof(NetworkEvents), 152 + sizeof(::Fusion::NetworkEvents::ReliableDataEvent*)> __Fusion_NetworkEventsSizeCheck;
  static_assert(sizeof(NetworkEvents) == 0xA0);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::NetworkEvents::Fusion_INetworkRunnerCallbacks_OnPlayerJoined
// Il2CppName: Fusion.INetworkRunnerCallbacks.OnPlayerJoined
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkEvents::*)(::Fusion::NetworkRunner*, ::Fusion::PlayerRef)>(&Fusion::NetworkEvents::Fusion_INetworkRunnerCallbacks_OnPlayerJoined)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    static auto* player = &::il2cpp_utils::GetClassFromName("Fusion", "PlayerRef")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkEvents*), "Fusion.INetworkRunnerCallbacks.OnPlayerJoined", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner, player});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkEvents::Fusion_INetworkRunnerCallbacks_OnPlayerLeft
// Il2CppName: Fusion.INetworkRunnerCallbacks.OnPlayerLeft
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkEvents::*)(::Fusion::NetworkRunner*, ::Fusion::PlayerRef)>(&Fusion::NetworkEvents::Fusion_INetworkRunnerCallbacks_OnPlayerLeft)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    static auto* player = &::il2cpp_utils::GetClassFromName("Fusion", "PlayerRef")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkEvents*), "Fusion.INetworkRunnerCallbacks.OnPlayerLeft", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner, player});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkEvents::Fusion_INetworkRunnerCallbacks_OnInput
// Il2CppName: Fusion.INetworkRunnerCallbacks.OnInput
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkEvents::*)(::Fusion::NetworkRunner*, ::Fusion::NetworkInput)>(&Fusion::NetworkEvents::Fusion_INetworkRunnerCallbacks_OnInput)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    static auto* input = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkInput")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkEvents*), "Fusion.INetworkRunnerCallbacks.OnInput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner, input});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkEvents::Fusion_INetworkRunnerCallbacks_OnInputMissing
// Il2CppName: Fusion.INetworkRunnerCallbacks.OnInputMissing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkEvents::*)(::Fusion::NetworkRunner*, ::Fusion::PlayerRef, ::Fusion::NetworkInput)>(&Fusion::NetworkEvents::Fusion_INetworkRunnerCallbacks_OnInputMissing)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    static auto* player = &::il2cpp_utils::GetClassFromName("Fusion", "PlayerRef")->byval_arg;
    static auto* input = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkInput")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkEvents*), "Fusion.INetworkRunnerCallbacks.OnInputMissing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner, player, input});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkEvents::Fusion_INetworkRunnerCallbacks_OnShutdown
// Il2CppName: Fusion.INetworkRunnerCallbacks.OnShutdown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkEvents::*)(::Fusion::NetworkRunner*, ::Fusion::ShutdownReason)>(&Fusion::NetworkEvents::Fusion_INetworkRunnerCallbacks_OnShutdown)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    static auto* shutdownReason = &::il2cpp_utils::GetClassFromName("Fusion", "ShutdownReason")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkEvents*), "Fusion.INetworkRunnerCallbacks.OnShutdown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner, shutdownReason});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkEvents::Fusion_INetworkRunnerCallbacks_OnConnectedToServer
// Il2CppName: Fusion.INetworkRunnerCallbacks.OnConnectedToServer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkEvents::*)(::Fusion::NetworkRunner*)>(&Fusion::NetworkEvents::Fusion_INetworkRunnerCallbacks_OnConnectedToServer)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkEvents*), "Fusion.INetworkRunnerCallbacks.OnConnectedToServer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkEvents::Fusion_INetworkRunnerCallbacks_OnDisconnectedFromServer
// Il2CppName: Fusion.INetworkRunnerCallbacks.OnDisconnectedFromServer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkEvents::*)(::Fusion::NetworkRunner*)>(&Fusion::NetworkEvents::Fusion_INetworkRunnerCallbacks_OnDisconnectedFromServer)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkEvents*), "Fusion.INetworkRunnerCallbacks.OnDisconnectedFromServer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkEvents::Fusion_INetworkRunnerCallbacks_OnConnectRequest
// Il2CppName: Fusion.INetworkRunnerCallbacks.OnConnectRequest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkEvents::*)(::Fusion::NetworkRunner*, ::Fusion::NetworkRunnerCallbackArgs::ConnectRequest*, ::ArrayW<uint8_t>)>(&Fusion::NetworkEvents::Fusion_INetworkRunnerCallbacks_OnConnectRequest)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    static auto* request = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunnerCallbackArgs/ConnectRequest")->byval_arg;
    static auto* token = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkEvents*), "Fusion.INetworkRunnerCallbacks.OnConnectRequest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner, request, token});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkEvents::Fusion_INetworkRunnerCallbacks_OnConnectFailed
// Il2CppName: Fusion.INetworkRunnerCallbacks.OnConnectFailed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkEvents::*)(::Fusion::NetworkRunner*, ::Fusion::Sockets::NetAddress, ::Fusion::Sockets::NetConnectFailedReason)>(&Fusion::NetworkEvents::Fusion_INetworkRunnerCallbacks_OnConnectFailed)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    static auto* remoteAddress = &::il2cpp_utils::GetClassFromName("Fusion.Sockets", "NetAddress")->byval_arg;
    static auto* reason = &::il2cpp_utils::GetClassFromName("Fusion.Sockets", "NetConnectFailedReason")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkEvents*), "Fusion.INetworkRunnerCallbacks.OnConnectFailed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner, remoteAddress, reason});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkEvents::Fusion_INetworkRunnerCallbacks_OnUserSimulationMessage
// Il2CppName: Fusion.INetworkRunnerCallbacks.OnUserSimulationMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkEvents::*)(::Fusion::NetworkRunner*, ::Fusion::SimulationMessagePtr)>(&Fusion::NetworkEvents::Fusion_INetworkRunnerCallbacks_OnUserSimulationMessage)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    static auto* message = &::il2cpp_utils::GetClassFromName("Fusion", "SimulationMessagePtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkEvents*), "Fusion.INetworkRunnerCallbacks.OnUserSimulationMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner, message});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkEvents::Fusion_INetworkRunnerCallbacks_OnSessionListUpdated
// Il2CppName: Fusion.INetworkRunnerCallbacks.OnSessionListUpdated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkEvents::*)(::Fusion::NetworkRunner*, ::System::Collections::Generic::List_1<::Fusion::SessionInfo*>*)>(&Fusion::NetworkEvents::Fusion_INetworkRunnerCallbacks_OnSessionListUpdated)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    static auto* sessionList = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Fusion", "SessionInfo")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkEvents*), "Fusion.INetworkRunnerCallbacks.OnSessionListUpdated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner, sessionList});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkEvents::Fusion_INetworkRunnerCallbacks_OnReliableDataReceived
// Il2CppName: Fusion.INetworkRunnerCallbacks.OnReliableDataReceived
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkEvents::*)(::Fusion::NetworkRunner*, ::Fusion::PlayerRef, ::System::ArraySegment_1<uint8_t>)>(&Fusion::NetworkEvents::Fusion_INetworkRunnerCallbacks_OnReliableDataReceived)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    static auto* player = &::il2cpp_utils::GetClassFromName("Fusion", "PlayerRef")->byval_arg;
    static auto* data = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ArraySegment`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Byte")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkEvents*), "Fusion.INetworkRunnerCallbacks.OnReliableDataReceived", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner, player, data});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkEvents::Fusion_INetworkRunnerCallbacks_OnSceneLoadDone
// Il2CppName: Fusion.INetworkRunnerCallbacks.OnSceneLoadDone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkEvents::*)(::Fusion::NetworkRunner*)>(&Fusion::NetworkEvents::Fusion_INetworkRunnerCallbacks_OnSceneLoadDone)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkEvents*), "Fusion.INetworkRunnerCallbacks.OnSceneLoadDone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkEvents::Fusion_INetworkRunnerCallbacks_OnSceneLoadStart
// Il2CppName: Fusion.INetworkRunnerCallbacks.OnSceneLoadStart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkEvents::*)(::Fusion::NetworkRunner*)>(&Fusion::NetworkEvents::Fusion_INetworkRunnerCallbacks_OnSceneLoadStart)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkEvents*), "Fusion.INetworkRunnerCallbacks.OnSceneLoadStart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkEvents::Fusion_INetworkRunnerCallbacks_OnCustomAuthenticationResponse
// Il2CppName: Fusion.INetworkRunnerCallbacks.OnCustomAuthenticationResponse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkEvents::*)(::Fusion::NetworkRunner*, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*)>(&Fusion::NetworkEvents::Fusion_INetworkRunnerCallbacks_OnCustomAuthenticationResponse)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    static auto* data = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Object")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkEvents*), "Fusion.INetworkRunnerCallbacks.OnCustomAuthenticationResponse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner, data});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkEvents::Fusion_INetworkRunnerCallbacks_OnHostMigration
// Il2CppName: Fusion.INetworkRunnerCallbacks.OnHostMigration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::NetworkEvents::*)(::Fusion::NetworkRunner*, ::Fusion::HostMigrationToken*)>(&Fusion::NetworkEvents::Fusion_INetworkRunnerCallbacks_OnHostMigration)> {
  static const MethodInfo* get() {
    static auto* runner = &::il2cpp_utils::GetClassFromName("Fusion", "NetworkRunner")->byval_arg;
    static auto* hostMigrationToken = &::il2cpp_utils::GetClassFromName("Fusion", "HostMigrationToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::NetworkEvents*), "Fusion.INetworkRunnerCallbacks.OnHostMigration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runner, hostMigrationToken});
  }
};
// Writing MetadataGetter for method: Fusion::NetworkEvents::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
