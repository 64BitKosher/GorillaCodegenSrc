// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Fusion
namespace Fusion {
  // Forward declaring type: HitboxCollider
  struct HitboxCollider;
}
// Completed forward declares
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: IHitboxColliderContainer
  class IHitboxColliderContainer;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::IHitboxColliderContainer);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::IHitboxColliderContainer*, "Fusion", "IHitboxColliderContainer");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.IHitboxColliderContainer
  // [TokenAttribute] Offset: FFFFFFFF
  class IHitboxColliderContainer {
    public:
    // public Fusion.HitboxCollider GetNextCollider(out System.Int32 index)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Fusion::HitboxCollider GetNextCollider(ByRef<int> index);
    // public Fusion.HitboxCollider GetNextTempCollider(out System.Int32 tmpIndex)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Fusion::HitboxCollider GetNextTempCollider(ByRef<int> tmpIndex);
    // public Fusion.HitboxCollider GetCollider(System.Int32 index)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Fusion::HitboxCollider GetCollider(int index);
    // public System.Void ReleaseCollider(System.Int32 index)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ReleaseCollider(int index);
    // public System.Void ReleaseTempColliders()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ReleaseTempColliders();
  }; // Fusion.IHitboxColliderContainer
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::IHitboxColliderContainer::GetNextCollider
// Il2CppName: GetNextCollider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::HitboxCollider (Fusion::IHitboxColliderContainer::*)(ByRef<int>)>(&Fusion::IHitboxColliderContainer::GetNextCollider)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::IHitboxColliderContainer*), "GetNextCollider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: Fusion::IHitboxColliderContainer::GetNextTempCollider
// Il2CppName: GetNextTempCollider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::HitboxCollider (Fusion::IHitboxColliderContainer::*)(ByRef<int>)>(&Fusion::IHitboxColliderContainer::GetNextTempCollider)> {
  static const MethodInfo* get() {
    static auto* tmpIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::IHitboxColliderContainer*), "GetNextTempCollider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tmpIndex});
  }
};
// Writing MetadataGetter for method: Fusion::IHitboxColliderContainer::GetCollider
// Il2CppName: GetCollider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Fusion::HitboxCollider (Fusion::IHitboxColliderContainer::*)(int)>(&Fusion::IHitboxColliderContainer::GetCollider)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::IHitboxColliderContainer*), "GetCollider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: Fusion::IHitboxColliderContainer::ReleaseCollider
// Il2CppName: ReleaseCollider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::IHitboxColliderContainer::*)(int)>(&Fusion::IHitboxColliderContainer::ReleaseCollider)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Fusion::IHitboxColliderContainer*), "ReleaseCollider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: Fusion::IHitboxColliderContainer::ReleaseTempColliders
// Il2CppName: ReleaseTempColliders
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Fusion::IHitboxColliderContainer::*)()>(&Fusion::IHitboxColliderContainer::ReleaseTempColliders)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Fusion::IHitboxColliderContainer*), "ReleaseTempColliders", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
