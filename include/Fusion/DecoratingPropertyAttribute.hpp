// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Fusion.PropertyAttribute
#include "Fusion/PropertyAttribute.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: Fusion
namespace Fusion {
  // Forward declaring type: DecoratingPropertyAttribute
  class DecoratingPropertyAttribute;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Fusion::DecoratingPropertyAttribute);
DEFINE_IL2CPP_ARG_TYPE(::Fusion::DecoratingPropertyAttribute*, "Fusion", "DecoratingPropertyAttribute");
// Type namespace: Fusion
namespace Fusion {
  // Size: 0x14
  #pragma pack(push, 1)
  // Autogenerated type: Fusion.DecoratingPropertyAttribute
  // [TokenAttribute] Offset: FFFFFFFF
  class DecoratingPropertyAttribute : public ::Fusion::PropertyAttribute {
    public:
    // static field const value: static public System.Int32 DefaultOrder
    static constexpr const int DefaultOrder = -10000;
    // Get static field: static public System.Int32 DefaultOrder
    static int _get_DefaultOrder();
    // Set static field: static public System.Int32 DefaultOrder
    static void _set_DefaultOrder(int value);
    // protected System.Void .ctor(System.Int32 order)
    // Offset: 0x2AFED4C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DecoratingPropertyAttribute* New_ctor(int order) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::DecoratingPropertyAttribute::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DecoratingPropertyAttribute*, creationType>(order)));
    }
    // protected System.Void .ctor()
    // Offset: 0x2AFED2C
    // Implemented from: Fusion.PropertyAttribute
    // Base method: System.Void PropertyAttribute::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DecoratingPropertyAttribute* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::DecoratingPropertyAttribute::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DecoratingPropertyAttribute*, creationType>()));
    }
  }; // Fusion.DecoratingPropertyAttribute
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Fusion::DecoratingPropertyAttribute::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Fusion::DecoratingPropertyAttribute::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
