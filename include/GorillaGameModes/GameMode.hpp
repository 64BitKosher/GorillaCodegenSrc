// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: GorillaGameModes.GameModeType
#include "GorillaGameModes/GameModeType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: HashSet`1<T>
  template<typename T>
  class HashSet_1;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: GorillaGameManager
  class GorillaGameManager;
  // Forward declaring type: GameModeSerializer
  class GameModeSerializer;
  // Forward declaring type: VRRig
  class VRRig;
}
// Forward declaring namespace: Photon::Realtime
namespace Photon::Realtime {
  // Forward declaring type: Player
  class Player;
}
// Completed forward declares
// Type namespace: GorillaGameModes
namespace GorillaGameModes {
  // Forward declaring type: GameMode
  class GameMode;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GorillaGameModes::GameMode);
DEFINE_IL2CPP_ARG_TYPE(::GorillaGameModes::GameMode*, "GorillaGameModes", "GameMode");
// Type namespace: GorillaGameModes
namespace GorillaGameModes {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: GorillaGameModes.GameMode
  // [TokenAttribute] Offset: FFFFFFFF
  class GameMode : public ::UnityEngine::MonoBehaviour {
    public:
    // Get static field: static private GorillaGameModes.GameMode instance
    static ::GorillaGameModes::GameMode* _get_instance();
    // Set static field: static private GorillaGameModes.GameMode instance
    static void _set_instance(::GorillaGameModes::GameMode* value);
    // Get static field: static private System.Collections.Generic.Dictionary`2<System.Int32,GorillaGameManager> gameModeTable
    static ::System::Collections::Generic::Dictionary_2<int, ::GlobalNamespace::GorillaGameManager*>* _get_gameModeTable();
    // Set static field: static private System.Collections.Generic.Dictionary`2<System.Int32,GorillaGameManager> gameModeTable
    static void _set_gameModeTable(::System::Collections::Generic::Dictionary_2<int, ::GlobalNamespace::GorillaGameManager*>* value);
    // Get static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Int32> gameModeKeyByName
    static ::System::Collections::Generic::Dictionary_2<::StringW, int>* _get_gameModeKeyByName();
    // Set static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Int32> gameModeKeyByName
    static void _set_gameModeKeyByName(::System::Collections::Generic::Dictionary_2<::StringW, int>* value);
    // Get static field: static private System.Collections.Generic.List`1<GorillaGameManager> gameModes
    static ::System::Collections::Generic::List_1<::GlobalNamespace::GorillaGameManager*>* _get_gameModes();
    // Set static field: static private System.Collections.Generic.List`1<GorillaGameManager> gameModes
    static void _set_gameModes(::System::Collections::Generic::List_1<::GlobalNamespace::GorillaGameManager*>* value);
    // Get static field: static public readonly System.Collections.Generic.List`1<System.String> gameModeNames
    static ::System::Collections::Generic::List_1<::StringW>* _get_gameModeNames();
    // Set static field: static public readonly System.Collections.Generic.List`1<System.String> gameModeNames
    static void _set_gameModeNames(::System::Collections::Generic::List_1<::StringW>* value);
    // Get static field: static private GorillaGameManager activeGameMode
    static ::GlobalNamespace::GorillaGameManager* _get_activeGameMode();
    // Set static field: static private GorillaGameManager activeGameMode
    static void _set_activeGameMode(::GlobalNamespace::GorillaGameManager* value);
    // Get static field: static private GameModeSerializer activeNetworkHandler
    static ::GlobalNamespace::GameModeSerializer* _get_activeNetworkHandler();
    // Set static field: static private GameModeSerializer activeNetworkHandler
    static void _set_activeNetworkHandler(::GlobalNamespace::GameModeSerializer* value);
    // Get static field: static private System.Collections.Generic.List`1<Photon.Realtime.Player> participatingPlayers
    static ::System::Collections::Generic::List_1<::Photon::Realtime::Player*>* _get_participatingPlayers();
    // Set static field: static private System.Collections.Generic.List`1<Photon.Realtime.Player> participatingPlayers
    static void _set_participatingPlayers(::System::Collections::Generic::List_1<::Photon::Realtime::Player*>* value);
    // Get static field: static private readonly System.Collections.Generic.HashSet`1<System.Int32> optOutPlayers
    static ::System::Collections::Generic::HashSet_1<int>* _get_optOutPlayers();
    // Set static field: static private readonly System.Collections.Generic.HashSet`1<System.Int32> optOutPlayers
    static void _set_optOutPlayers(::System::Collections::Generic::HashSet_1<int>* value);
    // Get static field: static public readonly System.Collections.Generic.List`1<Photon.Realtime.Player> ParticipatingPlayers
    static ::System::Collections::Generic::List_1<::Photon::Realtime::Player*>* _get_ParticipatingPlayers();
    // Set static field: static public readonly System.Collections.Generic.List`1<Photon.Realtime.Player> ParticipatingPlayers
    static void _set_ParticipatingPlayers(::System::Collections::Generic::List_1<::Photon::Realtime::Player*>* value);
    // private System.Void Awake()
    // Offset: 0x27CD19C
    void Awake();
    // private System.Void OnDestroy()
    // Offset: 0x27CD560
    void OnDestroy();
    // static public GorillaGameManager get_ActiveGameMode()
    // Offset: 0x27CD62C
    static ::GlobalNamespace::GorillaGameManager* get_ActiveGameMode();
    // static GameModeSerializer get_ActiveNetworkHandler()
    // Offset: 0x27CD684
    static ::GlobalNamespace::GameModeSerializer* get_ActiveNetworkHandler();
    // static private System.Void .cctor()
    // Offset: 0x27CD6DC
    static void _cctor();
    // static private System.Void StaticLoad()
    // Offset: 0x27CD97C
    static void StaticLoad();
    // static System.Boolean LoadGameModeFromProperty()
    // Offset: 0x27CDB8C
    static bool LoadGameModeFromProperty();
    // static System.Boolean ChangeGameFromProperty()
    // Offset: 0x27CDE7C
    static bool ChangeGameFromProperty();
    // static System.Boolean LoadGameModeFromProperty(System.String prop)
    // Offset: 0x27CDFE4
    static bool LoadGameModeFromProperty(::StringW prop);
    // static System.Boolean ChangeGameFromProperty(System.String prop)
    // Offset: 0x27CE130
    static bool ChangeGameFromProperty(::StringW prop);
    // static private System.String FindGameModeFromRoomProperty()
    // Offset: 0x27CDBDC
    static ::StringW FindGameModeFromRoomProperty();
    // static private System.String FindGameModeInString(System.String gmString)
    // Offset: 0x27CE03C
    static ::StringW FindGameModeInString(::StringW gmString);
    // static public System.Boolean LoadGameMode(System.String gameMode)
    // Offset: 0x27CDD28
    static bool LoadGameMode(::StringW gameMode);
    // static public System.Boolean LoadGameMode(System.Int32 key)
    // Offset: 0x27CE188
    static bool LoadGameMode(int key);
    // static System.Boolean ChangeGameMode(System.String gameMode)
    // Offset: 0x27CDECC
    static bool ChangeGameMode(::StringW gameMode);
    // static System.Boolean ChangeGameMode(System.Int32 key)
    // Offset: 0x27CE578
    static bool ChangeGameMode(int key);
    // static System.Void SetupGameModeRemote(GameModeSerializer networkSerializer)
    // Offset: 0x27CE784
    static void SetupGameModeRemote(::GlobalNamespace::GameModeSerializer* networkSerializer);
    // static System.Void RemoveNetworkLink(GameModeSerializer networkSerializer)
    // Offset: 0x27CE910
    static void RemoveNetworkLink(::GlobalNamespace::GameModeSerializer* networkSerializer);
    // static public GorillaGameManager GetGameModeInstance(GorillaGameModes.GameModeType type)
    // Offset: 0x27CE9FC
    static ::GlobalNamespace::GorillaGameManager* GetGameModeInstance(::GorillaGameModes::GameModeType type);
    // static public GorillaGameManager GetGameModeInstance(System.Int32 type)
    // Offset: 0x27CEA50
    static ::GlobalNamespace::GorillaGameManager* GetGameModeInstance(int type);
    // static public T GetGameModeInstance(GorillaGameModes.GameModeType type)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static T GetGameModeInstance(::GorillaGameModes::GameModeType type) {
      static_assert(std::is_convertible_v<T, ::GlobalNamespace::GorillaGameManager*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaGameModes::GameMode::GetGameModeInstance");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaGameModes", "GameMode", "GetGameModeInstance", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, type);
    }
    // static public T GetGameModeInstance(System.Int32 type)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static T GetGameModeInstance(int type) {
      static_assert(std::is_convertible_v<T, ::GlobalNamespace::GorillaGameManager*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaGameModes::GameMode::GetGameModeInstance");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaGameModes", "GameMode", "GetGameModeInstance", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, type);
    }
    // static public System.Void ResetGameModes()
    // Offset: 0x27CEC80
    static void ResetGameModes();
    // static public System.Void ReportTag(Photon.Realtime.Player player)
    // Offset: 0x27CEE1C
    static void ReportTag(::Photon::Realtime::Player* player);
    // static public System.Void ReportHit()
    // Offset: 0x27CEF74
    static void ReportHit();
    // static public System.Void RefreshPlayers()
    // Offset: 0x27CF0C0
    static void RefreshPlayers();
    // static public System.Void OptOut(VRRig rig)
    // Offset: 0x27CF44C
    static void OptOut(::GlobalNamespace::VRRig* rig);
    // static public System.Void OptOut(Photon.Realtime.Player player)
    // Offset: 0x27CF558
    static void OptOut(::Photon::Realtime::Player* player);
    // static public System.Void OptOut(System.Int32 playerActorNumber)
    // Offset: 0x27CF4B4
    static void OptOut(int playerActorNumber);
    // static public System.Void OptIn(VRRig rig)
    // Offset: 0x27CF5B8
    static void OptIn(::GlobalNamespace::VRRig* rig);
    // static public System.Void OptIn(Photon.Realtime.Player player)
    // Offset: 0x27CF6C4
    static void OptIn(::Photon::Realtime::Player* player);
    // static public System.Void OptIn(System.Int32 playerActorNumber)
    // Offset: 0x27CF620
    static void OptIn(int playerActorNumber);
    // static private System.Boolean CanParticipate(Photon.Realtime.Player player)
    // Offset: 0x27CF2E4
    static bool CanParticipate(::Photon::Realtime::Player* player);
    // public System.Void .ctor()
    // Offset: 0x27CF724
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GameMode* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaGameModes::GameMode::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GameMode*, creationType>()));
    }
  }; // GorillaGameModes.GameMode
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GorillaGameModes::GameMode::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaGameModes::GameMode::*)()>(&GorillaGameModes::GameMode::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaGameModes::GameMode*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaGameModes::GameMode::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaGameModes::GameMode::*)()>(&GorillaGameModes::GameMode::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaGameModes::GameMode*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaGameModes::GameMode::get_ActiveGameMode
// Il2CppName: get_ActiveGameMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::GorillaGameManager* (*)()>(&GorillaGameModes::GameMode::get_ActiveGameMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaGameModes::GameMode*), "get_ActiveGameMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaGameModes::GameMode::get_ActiveNetworkHandler
// Il2CppName: get_ActiveNetworkHandler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::GameModeSerializer* (*)()>(&GorillaGameModes::GameMode::get_ActiveNetworkHandler)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaGameModes::GameMode*), "get_ActiveNetworkHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaGameModes::GameMode::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GorillaGameModes::GameMode::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaGameModes::GameMode*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaGameModes::GameMode::StaticLoad
// Il2CppName: StaticLoad
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GorillaGameModes::GameMode::StaticLoad)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaGameModes::GameMode*), "StaticLoad", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaGameModes::GameMode::LoadGameModeFromProperty
// Il2CppName: LoadGameModeFromProperty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&GorillaGameModes::GameMode::LoadGameModeFromProperty)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaGameModes::GameMode*), "LoadGameModeFromProperty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaGameModes::GameMode::ChangeGameFromProperty
// Il2CppName: ChangeGameFromProperty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&GorillaGameModes::GameMode::ChangeGameFromProperty)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaGameModes::GameMode*), "ChangeGameFromProperty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaGameModes::GameMode::LoadGameModeFromProperty
// Il2CppName: LoadGameModeFromProperty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW)>(&GorillaGameModes::GameMode::LoadGameModeFromProperty)> {
  static const MethodInfo* get() {
    static auto* prop = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaGameModes::GameMode*), "LoadGameModeFromProperty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{prop});
  }
};
// Writing MetadataGetter for method: GorillaGameModes::GameMode::ChangeGameFromProperty
// Il2CppName: ChangeGameFromProperty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW)>(&GorillaGameModes::GameMode::ChangeGameFromProperty)> {
  static const MethodInfo* get() {
    static auto* prop = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaGameModes::GameMode*), "ChangeGameFromProperty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{prop});
  }
};
// Writing MetadataGetter for method: GorillaGameModes::GameMode::FindGameModeFromRoomProperty
// Il2CppName: FindGameModeFromRoomProperty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&GorillaGameModes::GameMode::FindGameModeFromRoomProperty)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaGameModes::GameMode*), "FindGameModeFromRoomProperty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaGameModes::GameMode::FindGameModeInString
// Il2CppName: FindGameModeInString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&GorillaGameModes::GameMode::FindGameModeInString)> {
  static const MethodInfo* get() {
    static auto* gmString = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaGameModes::GameMode*), "FindGameModeInString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gmString});
  }
};
// Writing MetadataGetter for method: GorillaGameModes::GameMode::LoadGameMode
// Il2CppName: LoadGameMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW)>(&GorillaGameModes::GameMode::LoadGameMode)> {
  static const MethodInfo* get() {
    static auto* gameMode = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaGameModes::GameMode*), "LoadGameMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameMode});
  }
};
// Writing MetadataGetter for method: GorillaGameModes::GameMode::LoadGameMode
// Il2CppName: LoadGameMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int)>(&GorillaGameModes::GameMode::LoadGameMode)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaGameModes::GameMode*), "LoadGameMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key});
  }
};
// Writing MetadataGetter for method: GorillaGameModes::GameMode::ChangeGameMode
// Il2CppName: ChangeGameMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW)>(&GorillaGameModes::GameMode::ChangeGameMode)> {
  static const MethodInfo* get() {
    static auto* gameMode = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaGameModes::GameMode*), "ChangeGameMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameMode});
  }
};
// Writing MetadataGetter for method: GorillaGameModes::GameMode::ChangeGameMode
// Il2CppName: ChangeGameMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int)>(&GorillaGameModes::GameMode::ChangeGameMode)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaGameModes::GameMode*), "ChangeGameMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key});
  }
};
// Writing MetadataGetter for method: GorillaGameModes::GameMode::SetupGameModeRemote
// Il2CppName: SetupGameModeRemote
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::GlobalNamespace::GameModeSerializer*)>(&GorillaGameModes::GameMode::SetupGameModeRemote)> {
  static const MethodInfo* get() {
    static auto* networkSerializer = &::il2cpp_utils::GetClassFromName("", "GameModeSerializer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaGameModes::GameMode*), "SetupGameModeRemote", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{networkSerializer});
  }
};
// Writing MetadataGetter for method: GorillaGameModes::GameMode::RemoveNetworkLink
// Il2CppName: RemoveNetworkLink
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::GlobalNamespace::GameModeSerializer*)>(&GorillaGameModes::GameMode::RemoveNetworkLink)> {
  static const MethodInfo* get() {
    static auto* networkSerializer = &::il2cpp_utils::GetClassFromName("", "GameModeSerializer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaGameModes::GameMode*), "RemoveNetworkLink", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{networkSerializer});
  }
};
// Writing MetadataGetter for method: GorillaGameModes::GameMode::GetGameModeInstance
// Il2CppName: GetGameModeInstance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::GorillaGameManager* (*)(::GorillaGameModes::GameModeType)>(&GorillaGameModes::GameMode::GetGameModeInstance)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("GorillaGameModes", "GameModeType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaGameModes::GameMode*), "GetGameModeInstance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: GorillaGameModes::GameMode::GetGameModeInstance
// Il2CppName: GetGameModeInstance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::GorillaGameManager* (*)(int)>(&GorillaGameModes::GameMode::GetGameModeInstance)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaGameModes::GameMode*), "GetGameModeInstance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: GorillaGameModes::GameMode::GetGameModeInstance
// Il2CppName: GetGameModeInstance
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: GorillaGameModes::GameMode::GetGameModeInstance
// Il2CppName: GetGameModeInstance
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: GorillaGameModes::GameMode::ResetGameModes
// Il2CppName: ResetGameModes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GorillaGameModes::GameMode::ResetGameModes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaGameModes::GameMode*), "ResetGameModes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaGameModes::GameMode::ReportTag
// Il2CppName: ReportTag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Photon::Realtime::Player*)>(&GorillaGameModes::GameMode::ReportTag)> {
  static const MethodInfo* get() {
    static auto* player = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaGameModes::GameMode*), "ReportTag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{player});
  }
};
// Writing MetadataGetter for method: GorillaGameModes::GameMode::ReportHit
// Il2CppName: ReportHit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GorillaGameModes::GameMode::ReportHit)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaGameModes::GameMode*), "ReportHit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaGameModes::GameMode::RefreshPlayers
// Il2CppName: RefreshPlayers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GorillaGameModes::GameMode::RefreshPlayers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaGameModes::GameMode*), "RefreshPlayers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaGameModes::GameMode::OptOut
// Il2CppName: OptOut
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::GlobalNamespace::VRRig*)>(&GorillaGameModes::GameMode::OptOut)> {
  static const MethodInfo* get() {
    static auto* rig = &::il2cpp_utils::GetClassFromName("", "VRRig")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaGameModes::GameMode*), "OptOut", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rig});
  }
};
// Writing MetadataGetter for method: GorillaGameModes::GameMode::OptOut
// Il2CppName: OptOut
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Photon::Realtime::Player*)>(&GorillaGameModes::GameMode::OptOut)> {
  static const MethodInfo* get() {
    static auto* player = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaGameModes::GameMode*), "OptOut", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{player});
  }
};
// Writing MetadataGetter for method: GorillaGameModes::GameMode::OptOut
// Il2CppName: OptOut
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&GorillaGameModes::GameMode::OptOut)> {
  static const MethodInfo* get() {
    static auto* playerActorNumber = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaGameModes::GameMode*), "OptOut", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{playerActorNumber});
  }
};
// Writing MetadataGetter for method: GorillaGameModes::GameMode::OptIn
// Il2CppName: OptIn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::GlobalNamespace::VRRig*)>(&GorillaGameModes::GameMode::OptIn)> {
  static const MethodInfo* get() {
    static auto* rig = &::il2cpp_utils::GetClassFromName("", "VRRig")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaGameModes::GameMode*), "OptIn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rig});
  }
};
// Writing MetadataGetter for method: GorillaGameModes::GameMode::OptIn
// Il2CppName: OptIn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Photon::Realtime::Player*)>(&GorillaGameModes::GameMode::OptIn)> {
  static const MethodInfo* get() {
    static auto* player = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaGameModes::GameMode*), "OptIn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{player});
  }
};
// Writing MetadataGetter for method: GorillaGameModes::GameMode::OptIn
// Il2CppName: OptIn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&GorillaGameModes::GameMode::OptIn)> {
  static const MethodInfo* get() {
    static auto* playerActorNumber = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaGameModes::GameMode*), "OptIn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{playerActorNumber});
  }
};
// Writing MetadataGetter for method: GorillaGameModes::GameMode::CanParticipate
// Il2CppName: CanParticipate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Photon::Realtime::Player*)>(&GorillaGameModes::GameMode::CanParticipate)> {
  static const MethodInfo* get() {
    static auto* player = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaGameModes::GameMode*), "CanParticipate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{player});
  }
};
// Writing MetadataGetter for method: GorillaGameModes::GameMode::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
