// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: BuildSafe.Callbacks
#include "BuildSafe/Callbacks.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::BuildSafe::Callbacks::DidReloadScripts);
DEFINE_IL2CPP_ARG_TYPE(::BuildSafe::Callbacks::DidReloadScripts*, "BuildSafe", "Callbacks/DidReloadScripts");
// Type namespace: BuildSafe
namespace BuildSafe {
  // Size: 0x11
  #pragma pack(push, 1)
  // Autogenerated type: BuildSafe.Callbacks/DidReloadScripts
  // [TokenAttribute] Offset: FFFFFFFF
  // [ConditionalAttribute] Offset: FFFFFFFF
  class Callbacks::DidReloadScripts : public ::System::Attribute {
    public:
    public:
    // public System.Boolean activeOnly
    // Size: 0x1
    // Offset: 0x10
    bool activeOnly;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating conversion operator: operator bool
    constexpr operator bool() const noexcept {
      return activeOnly;
    }
    // Get instance field reference: public System.Boolean activeOnly
    [[deprecated("Use field access instead!")]] bool& dyn_activeOnly();
    // public System.Void .ctor(System.Boolean activeOnly)
    // Offset: 0x2816578
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Callbacks::DidReloadScripts* New_ctor(bool activeOnly) {
      static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::Callbacks::DidReloadScripts::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Callbacks::DidReloadScripts*, creationType>(activeOnly)));
    }
  }; // BuildSafe.Callbacks/DidReloadScripts
  #pragma pack(pop)
  static check_size<sizeof(Callbacks::DidReloadScripts), 16 + sizeof(bool)> __BuildSafe_Callbacks_DidReloadScriptsSizeCheck;
  static_assert(sizeof(Callbacks::DidReloadScripts) == 0x11);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: BuildSafe::Callbacks::DidReloadScripts::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
