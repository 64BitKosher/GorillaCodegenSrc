// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: BuildSafe
namespace BuildSafe {
  // Forward declaring type: ListUtilsUnsafe`1<T>
  template<typename T>
  class ListUtilsUnsafe_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::BuildSafe::ListUtilsUnsafe_1, "BuildSafe", "ListUtilsUnsafe`1");
// Type namespace: BuildSafe
namespace BuildSafe {
  // WARNING Size may be invalid!
  // Autogenerated type: BuildSafe.ListUtilsUnsafe`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename T>
  class ListUtilsUnsafe_1 : public ::Il2CppObject {
    public:
    // static public T[] GetInternalArray(System.Collections.Generic.List`1<T> list)
    // Offset: 0xFFFFFFFFFFFFFFFF
    static ::ArrayW<T> GetInternalArray(::System::Collections::Generic::List_1<T>* list) {
      static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::ListUtilsUnsafe_1::GetInternalArray");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ListUtilsUnsafe_1<T>*>::get(), "GetInternalArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
      return ::il2cpp_utils::RunMethodRethrow<::ArrayW<T>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, list);
    }
  }; // BuildSafe.ListUtilsUnsafe`1
  // Could not write size check! Type: BuildSafe.ListUtilsUnsafe`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
