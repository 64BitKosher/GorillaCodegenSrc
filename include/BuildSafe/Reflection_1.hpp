// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Forward declaring namespace: System::Reflection
namespace System::Reflection {
  // Forward declaring type: MethodInfo
  class MethodInfo;
  // Forward declaring type: FieldInfo
  class FieldInfo;
  // Forward declaring type: PropertyInfo
  class PropertyInfo;
  // Forward declaring type: EventInfo
  class EventInfo;
}
// Completed forward declares
// Type namespace: BuildSafe
namespace BuildSafe {
  // Forward declaring type: Reflection`1<T>
  template<typename T>
  class Reflection_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::BuildSafe::Reflection_1, "BuildSafe", "Reflection`1");
// Type namespace: BuildSafe
namespace BuildSafe {
  // WARNING Size may be invalid!
  // Autogenerated type: BuildSafe.Reflection`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename T>
  class Reflection_1 : public ::Il2CppObject {
    public:
    // Autogenerated static field getter
    // Get static field: static private System.Type gCachedType
    static ::System::Type* _get_gCachedType() {
      static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::Reflection_1::_get_gCachedType");
      return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<Reflection_1<T>*>::get(), "gCachedType"));
    }
    // Autogenerated static field setter
    // Set static field: static private System.Type gCachedType
    static void _set_gCachedType(::System::Type* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::Reflection_1::_set_gCachedType");
      THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<Reflection_1<T>*>::get(), "gCachedType", value));
    }
    // Autogenerated static field getter
    // Get static field: static private System.Reflection.MethodInfo[] gMethodsCache
    static ::ArrayW<::System::Reflection::MethodInfo*> _get_gMethodsCache() {
      static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::Reflection_1::_get_gMethodsCache");
      return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Reflection::MethodInfo*>>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<Reflection_1<T>*>::get(), "gMethodsCache"));
    }
    // Autogenerated static field setter
    // Set static field: static private System.Reflection.MethodInfo[] gMethodsCache
    static void _set_gMethodsCache(::ArrayW<::System::Reflection::MethodInfo*> value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::Reflection_1::_set_gMethodsCache");
      THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<Reflection_1<T>*>::get(), "gMethodsCache", value));
    }
    // Autogenerated static field getter
    // Get static field: static private System.Reflection.FieldInfo[] gFieldsCache
    static ::ArrayW<::System::Reflection::FieldInfo*> _get_gFieldsCache() {
      static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::Reflection_1::_get_gFieldsCache");
      return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Reflection::FieldInfo*>>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<Reflection_1<T>*>::get(), "gFieldsCache"));
    }
    // Autogenerated static field setter
    // Set static field: static private System.Reflection.FieldInfo[] gFieldsCache
    static void _set_gFieldsCache(::ArrayW<::System::Reflection::FieldInfo*> value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::Reflection_1::_set_gFieldsCache");
      THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<Reflection_1<T>*>::get(), "gFieldsCache", value));
    }
    // Autogenerated static field getter
    // Get static field: static private System.Reflection.PropertyInfo[] gPropertiesCache
    static ::ArrayW<::System::Reflection::PropertyInfo*> _get_gPropertiesCache() {
      static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::Reflection_1::_get_gPropertiesCache");
      return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Reflection::PropertyInfo*>>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<Reflection_1<T>*>::get(), "gPropertiesCache"));
    }
    // Autogenerated static field setter
    // Set static field: static private System.Reflection.PropertyInfo[] gPropertiesCache
    static void _set_gPropertiesCache(::ArrayW<::System::Reflection::PropertyInfo*> value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::Reflection_1::_set_gPropertiesCache");
      THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<Reflection_1<T>*>::get(), "gPropertiesCache", value));
    }
    // Autogenerated static field getter
    // Get static field: static private System.Reflection.EventInfo[] gEventsCache
    static ::ArrayW<::System::Reflection::EventInfo*> _get_gEventsCache() {
      static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::Reflection_1::_get_gEventsCache");
      return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Reflection::EventInfo*>>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<Reflection_1<T>*>::get(), "gEventsCache"));
    }
    // Autogenerated static field setter
    // Set static field: static private System.Reflection.EventInfo[] gEventsCache
    static void _set_gEventsCache(::ArrayW<::System::Reflection::EventInfo*> value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::Reflection_1::_set_gEventsCache");
      THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<Reflection_1<T>*>::get(), "gEventsCache", value));
    }
    // Autogenerated static field getter
    // Get static field: static private readonly System.Type <Type>k__BackingField
    static ::System::Type* _get_$Type$k__BackingField() {
      static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::Reflection_1::_get_$Type$k__BackingField");
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Type*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<Reflection_1<T>*>::get(), "<Type>k__BackingField")));
    }
    // Autogenerated static field setter
    // Set static field: static private readonly System.Type <Type>k__BackingField
    static void _set_$Type$k__BackingField(::System::Type* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::Reflection_1::_set_$Type$k__BackingField");
      THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<Reflection_1<T>*>::get(), "<Type>k__BackingField", value)));
    }
    // static public System.Type get_Type()
    // Offset: 0xFFFFFFFFFFFFFFFF
    static ::System::Type* get_Type() {
      static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::Reflection_1::get_Type");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<Reflection_1<T>*>::get(), "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
    // static public System.Reflection.EventInfo[] get_Events()
    // Offset: 0xFFFFFFFFFFFFFFFF
    static ::ArrayW<::System::Reflection::EventInfo*> get_Events() {
      static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::Reflection_1::get_Events");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<Reflection_1<T>*>::get(), "get_Events", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::EventInfo*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
    // static public System.Reflection.MethodInfo[] get_Methods()
    // Offset: 0xFFFFFFFFFFFFFFFF
    static ::ArrayW<::System::Reflection::MethodInfo*> get_Methods() {
      static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::Reflection_1::get_Methods");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<Reflection_1<T>*>::get(), "get_Methods", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::MethodInfo*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
    // static public System.Reflection.FieldInfo[] get_Fields()
    // Offset: 0xFFFFFFFFFFFFFFFF
    static ::ArrayW<::System::Reflection::FieldInfo*> get_Fields() {
      static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::Reflection_1::get_Fields");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<Reflection_1<T>*>::get(), "get_Fields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::FieldInfo*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
    // static public System.Reflection.PropertyInfo[] get_Properties()
    // Offset: 0xFFFFFFFFFFFFFFFF
    static ::ArrayW<::System::Reflection::PropertyInfo*> get_Properties() {
      static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::Reflection_1::get_Properties");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<Reflection_1<T>*>::get(), "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::PropertyInfo*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
    // static private System.Reflection.EventInfo[] PreFetchEvents()
    // Offset: 0xFFFFFFFFFFFFFFFF
    static ::ArrayW<::System::Reflection::EventInfo*> PreFetchEvents() {
      static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::Reflection_1::PreFetchEvents");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<Reflection_1<T>*>::get(), "PreFetchEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::EventInfo*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
    // static private System.Reflection.PropertyInfo[] PreFetchProperties()
    // Offset: 0xFFFFFFFFFFFFFFFF
    static ::ArrayW<::System::Reflection::PropertyInfo*> PreFetchProperties() {
      static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::Reflection_1::PreFetchProperties");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<Reflection_1<T>*>::get(), "PreFetchProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::PropertyInfo*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
    // static private System.Reflection.MethodInfo[] PreFetchMethods()
    // Offset: 0xFFFFFFFFFFFFFFFF
    static ::ArrayW<::System::Reflection::MethodInfo*> PreFetchMethods() {
      static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::Reflection_1::PreFetchMethods");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<Reflection_1<T>*>::get(), "PreFetchMethods", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::MethodInfo*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
    // static private System.Reflection.FieldInfo[] PreFetchFields()
    // Offset: 0xFFFFFFFFFFFFFFFF
    static ::ArrayW<::System::Reflection::FieldInfo*> PreFetchFields() {
      static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::Reflection_1::PreFetchFields");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<Reflection_1<T>*>::get(), "PreFetchFields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::FieldInfo*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
    // static private System.Void .cctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    static void _cctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::Reflection_1::.cctor");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<Reflection_1<T>*>::get(), ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
  }; // BuildSafe.Reflection`1
  // Could not write size check! Type: BuildSafe.Reflection`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
