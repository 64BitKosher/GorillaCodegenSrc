// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include <initializer_list>
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Object
  class Object;
}
// Completed forward declares
// Type namespace: BuildSafe
namespace BuildSafe {
  // Forward declaring type: AssetDatabase
  class AssetDatabase;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::BuildSafe::AssetDatabase);
DEFINE_IL2CPP_ARG_TYPE(::BuildSafe::AssetDatabase*, "BuildSafe", "AssetDatabase");
// Type namespace: BuildSafe
namespace BuildSafe {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: BuildSafe.AssetDatabase
  // [TokenAttribute] Offset: FFFFFFFF
  class AssetDatabase : public ::Il2CppObject {
    public:
    // static public T LoadAssetAtPath(System.String assetPath)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static T LoadAssetAtPath(::StringW assetPath) {
      static_assert(std::is_convertible_v<T, ::UnityEngine::Object*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::AssetDatabase::LoadAssetAtPath");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BuildSafe", "AssetDatabase", "LoadAssetAtPath", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetPath)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, assetPath);
    }
    // static public T[] LoadAssetsOfType()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static ::ArrayW<T> LoadAssetsOfType() {
      static_assert(std::is_convertible_v<T, ::UnityEngine::Object*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::AssetDatabase::LoadAssetsOfType");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BuildSafe", "AssetDatabase", "LoadAssetsOfType", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::ArrayW<T>, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method);
    }
    // static public System.String[] FindAssetsOfType()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static ::ArrayW<::StringW> FindAssetsOfType() {
      static_assert(std::is_convertible_v<T, ::UnityEngine::Object*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::AssetDatabase::FindAssetsOfType");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BuildSafe", "AssetDatabase", "FindAssetsOfType", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method);
    }
    // static public System.Void SaveToDisk(params UnityEngine.Object[] assetsToSave)
    // Offset: 0x2816570
    static void SaveToDisk(::ArrayW<::UnityEngine::Object*> assetsToSave);
    // static public System.Void SaveAssetsToDisk(UnityEngine.Object[] assetsToSave, System.Boolean saveProject)
    // Offset: 0x2816574
    static void SaveAssetsToDisk(::ArrayW<::UnityEngine::Object*> assetsToSave, bool saveProject);
  }; // BuildSafe.AssetDatabase
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: BuildSafe::AssetDatabase::LoadAssetAtPath
// Il2CppName: LoadAssetAtPath
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: BuildSafe::AssetDatabase::LoadAssetsOfType
// Il2CppName: LoadAssetsOfType
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: BuildSafe::AssetDatabase::FindAssetsOfType
// Il2CppName: FindAssetsOfType
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: BuildSafe::AssetDatabase::SaveToDisk
// Il2CppName: SaveToDisk
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<::UnityEngine::Object*>)>(&BuildSafe::AssetDatabase::SaveToDisk)> {
  static const MethodInfo* get() {
    static auto* assetsToSave = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Object"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BuildSafe::AssetDatabase*), "SaveToDisk", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetsToSave});
  }
};
// Writing MetadataGetter for method: BuildSafe::AssetDatabase::SaveAssetsToDisk
// Il2CppName: SaveAssetsToDisk
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<::UnityEngine::Object*>, bool)>(&BuildSafe::AssetDatabase::SaveAssetsToDisk)> {
  static const MethodInfo* get() {
    static auto* assetsToSave = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Object"), 1)->byval_arg;
    static auto* saveProject = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BuildSafe::AssetDatabase*), "SaveAssetsToDisk", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetsToSave, saveProject});
  }
};
