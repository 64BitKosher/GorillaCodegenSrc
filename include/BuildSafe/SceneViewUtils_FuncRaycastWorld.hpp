// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: BuildSafe.SceneViewUtils
#include "BuildSafe/SceneViewUtils.hpp"
// Including type: System.MulticastDelegate
#include "System/MulticastDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Vector2
  struct Vector2;
  // Forward declaring type: RaycastHit
  struct RaycastHit;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IAsyncResult
  class IAsyncResult;
  // Forward declaring type: AsyncCallback
  class AsyncCallback;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::BuildSafe::SceneViewUtils::FuncRaycastWorld);
DEFINE_IL2CPP_ARG_TYPE(::BuildSafe::SceneViewUtils::FuncRaycastWorld*, "BuildSafe", "SceneViewUtils/FuncRaycastWorld");
// Type namespace: BuildSafe
namespace BuildSafe {
  // Size: 0x80
  #pragma pack(push, 1)
  // Autogenerated type: BuildSafe.SceneViewUtils/FuncRaycastWorld
  // [TokenAttribute] Offset: FFFFFFFF
  class SceneViewUtils::FuncRaycastWorld : public ::System::MulticastDelegate {
    public:
    // public System.Void .ctor(System.Object object, System.IntPtr method)
    // Offset: 0x2816E58
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SceneViewUtils::FuncRaycastWorld* New_ctor(::Il2CppObject* object, ::System::IntPtr method) {
      static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::SceneViewUtils::FuncRaycastWorld::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SceneViewUtils::FuncRaycastWorld*, creationType>(object, method)));
    }
    // public System.Boolean Invoke(UnityEngine.Vector2 screenPos, out UnityEngine.RaycastHit hit)
    // Offset: 0x2816EF8
    bool Invoke(::UnityEngine::Vector2 screenPos, ByRef<::UnityEngine::RaycastHit> hit);
    // public System.IAsyncResult BeginInvoke(UnityEngine.Vector2 screenPos, out UnityEngine.RaycastHit hit, System.AsyncCallback callback, System.Object object)
    // Offset: 0x2816F0C
    ::System::IAsyncResult* BeginInvoke(::UnityEngine::Vector2 screenPos, ByRef<::UnityEngine::RaycastHit> hit, ::System::AsyncCallback* callback, ::Il2CppObject* object);
    // public System.Boolean EndInvoke(out UnityEngine.RaycastHit hit, System.IAsyncResult result)
    // Offset: 0x2816FC8
    bool EndInvoke(ByRef<::UnityEngine::RaycastHit> hit, ::System::IAsyncResult* result);
  }; // BuildSafe.SceneViewUtils/FuncRaycastWorld
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: BuildSafe::SceneViewUtils::FuncRaycastWorld::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: BuildSafe::SceneViewUtils::FuncRaycastWorld::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BuildSafe::SceneViewUtils::FuncRaycastWorld::*)(::UnityEngine::Vector2, ByRef<::UnityEngine::RaycastHit>)>(&BuildSafe::SceneViewUtils::FuncRaycastWorld::Invoke)> {
  static const MethodInfo* get() {
    static auto* screenPos = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* hit = &::il2cpp_utils::GetClassFromName("UnityEngine", "RaycastHit")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(BuildSafe::SceneViewUtils::FuncRaycastWorld*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{screenPos, hit});
  }
};
// Writing MetadataGetter for method: BuildSafe::SceneViewUtils::FuncRaycastWorld::BeginInvoke
// Il2CppName: BeginInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IAsyncResult* (BuildSafe::SceneViewUtils::FuncRaycastWorld::*)(::UnityEngine::Vector2, ByRef<::UnityEngine::RaycastHit>, ::System::AsyncCallback*, ::Il2CppObject*)>(&BuildSafe::SceneViewUtils::FuncRaycastWorld::BeginInvoke)> {
  static const MethodInfo* get() {
    static auto* screenPos = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* hit = &::il2cpp_utils::GetClassFromName("UnityEngine", "RaycastHit")->this_arg;
    static auto* callback = &::il2cpp_utils::GetClassFromName("System", "AsyncCallback")->byval_arg;
    static auto* object = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BuildSafe::SceneViewUtils::FuncRaycastWorld*), "BeginInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{screenPos, hit, callback, object});
  }
};
// Writing MetadataGetter for method: BuildSafe::SceneViewUtils::FuncRaycastWorld::EndInvoke
// Il2CppName: EndInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BuildSafe::SceneViewUtils::FuncRaycastWorld::*)(ByRef<::UnityEngine::RaycastHit>, ::System::IAsyncResult*)>(&BuildSafe::SceneViewUtils::FuncRaycastWorld::EndInvoke)> {
  static const MethodInfo* get() {
    static auto* hit = &::il2cpp_utils::GetClassFromName("UnityEngine", "RaycastHit")->this_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "IAsyncResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BuildSafe::SceneViewUtils::FuncRaycastWorld*), "EndInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{hit, result});
  }
};
