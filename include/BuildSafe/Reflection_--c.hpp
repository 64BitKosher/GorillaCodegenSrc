// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: BuildSafe.Reflection
#include "BuildSafe/Reflection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
  // Forward declaring type: Type
  class Type;
}
// Forward declaring namespace: System::Reflection
namespace System::Reflection {
  // Forward declaring type: Assembly
  class Assembly;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IEnumerable`1<T>
  template<typename T>
  class IEnumerable_1;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::BuildSafe::Reflection::$$c);
DEFINE_IL2CPP_ARG_TYPE(::BuildSafe::Reflection::$$c*, "BuildSafe", "Reflection/<>c");
// Type namespace: BuildSafe
namespace BuildSafe {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: BuildSafe.Reflection/<>c
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class Reflection::$$c : public ::Il2CppObject {
    public:
    // Get static field: static public readonly BuildSafe.Reflection/<>c <>9
    static ::BuildSafe::Reflection::$$c* _get_$$9();
    // Set static field: static public readonly BuildSafe.Reflection/<>c <>9
    static void _set_$$9(::BuildSafe::Reflection::$$c* value);
    // Get static field: static public System.Func`2<System.Reflection.Assembly,System.Boolean> <>9__7_0
    static ::System::Func_2<::System::Reflection::Assembly*, bool>* _get_$$9__7_0();
    // Set static field: static public System.Func`2<System.Reflection.Assembly,System.Boolean> <>9__7_0
    static void _set_$$9__7_0(::System::Func_2<::System::Reflection::Assembly*, bool>* value);
    // Get static field: static public System.Func`2<System.Reflection.Assembly,System.Collections.Generic.IEnumerable`1<System.Type>> <>9__8_0
    static ::System::Func_2<::System::Reflection::Assembly*, ::System::Collections::Generic::IEnumerable_1<::System::Type*>*>* _get_$$9__8_0();
    // Set static field: static public System.Func`2<System.Reflection.Assembly,System.Collections.Generic.IEnumerable`1<System.Type>> <>9__8_0
    static void _set_$$9__8_0(::System::Func_2<::System::Reflection::Assembly*, ::System::Collections::Generic::IEnumerable_1<::System::Type*>*>* value);
    // Get static field: static public System.Func`2<System.Type,System.Boolean> <>9__8_1
    static ::System::Func_2<::System::Type*, bool>* _get_$$9__8_1();
    // Set static field: static public System.Func`2<System.Type,System.Boolean> <>9__8_1
    static void _set_$$9__8_1(::System::Func_2<::System::Type*, bool>* value);
    // static private System.Void .cctor()
    // Offset: 0x2816AB0
    static void _cctor();
    // public System.Void .ctor()
    // Offset: 0x2816B18
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Reflection::$$c* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::BuildSafe::Reflection::$$c::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Reflection::$$c*, creationType>()));
    }
    // System.Boolean <PreFetchAllAssemblies>b__7_0(System.Reflection.Assembly a)
    // Offset: 0x2816B20
    bool $PreFetchAllAssemblies$b__7_0(::System::Reflection::Assembly* a);
    // System.Collections.Generic.IEnumerable`1<System.Type> <PreFetchAllTypes>b__8_0(System.Reflection.Assembly a)
    // Offset: 0x2816B30
    ::System::Collections::Generic::IEnumerable_1<::System::Type*>* $PreFetchAllTypes$b__8_0(::System::Reflection::Assembly* a);
    // System.Boolean <PreFetchAllTypes>b__8_1(System.Type t)
    // Offset: 0x2816B58
    bool $PreFetchAllTypes$b__8_1(::System::Type* t);
  }; // BuildSafe.Reflection/<>c
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: BuildSafe::Reflection::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&BuildSafe::Reflection::$$c::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BuildSafe::Reflection::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BuildSafe::Reflection::$$c::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: BuildSafe::Reflection::$$c::$PreFetchAllAssemblies$b__7_0
// Il2CppName: <PreFetchAllAssemblies>b__7_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BuildSafe::Reflection::$$c::*)(::System::Reflection::Assembly*)>(&BuildSafe::Reflection::$$c::$PreFetchAllAssemblies$b__7_0)> {
  static const MethodInfo* get() {
    static auto* a = &::il2cpp_utils::GetClassFromName("System.Reflection", "Assembly")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BuildSafe::Reflection::$$c*), "<PreFetchAllAssemblies>b__7_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{a});
  }
};
// Writing MetadataGetter for method: BuildSafe::Reflection::$$c::$PreFetchAllTypes$b__8_0
// Il2CppName: <PreFetchAllTypes>b__8_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<::System::Type*>* (BuildSafe::Reflection::$$c::*)(::System::Reflection::Assembly*)>(&BuildSafe::Reflection::$$c::$PreFetchAllTypes$b__8_0)> {
  static const MethodInfo* get() {
    static auto* a = &::il2cpp_utils::GetClassFromName("System.Reflection", "Assembly")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BuildSafe::Reflection::$$c*), "<PreFetchAllTypes>b__8_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{a});
  }
};
// Writing MetadataGetter for method: BuildSafe::Reflection::$$c::$PreFetchAllTypes$b__8_1
// Il2CppName: <PreFetchAllTypes>b__8_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BuildSafe::Reflection::$$c::*)(::System::Type*)>(&BuildSafe::Reflection::$$c::$PreFetchAllTypes$b__8_1)> {
  static const MethodInfo* get() {
    static auto* t = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BuildSafe::Reflection::$$c*), "<PreFetchAllTypes>b__8_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{t});
  }
};
