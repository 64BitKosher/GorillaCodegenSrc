// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: MaterialPropertyBlock
  class MaterialPropertyBlock;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: GorillaTag
namespace GorillaTag {
  // Forward declaring type: TextureTransitioner
  class TextureTransitioner;
}
// Completed forward declares
// Type namespace: GorillaTag
namespace GorillaTag {
  // Forward declaring type: TextureTransitionerManager
  class TextureTransitionerManager;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GorillaTag::TextureTransitionerManager);
DEFINE_IL2CPP_ARG_TYPE(::GorillaTag::TextureTransitionerManager*, "GorillaTag", "TextureTransitionerManager");
// Type namespace: GorillaTag
namespace GorillaTag {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: GorillaTag.TextureTransitionerManager
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExecuteAlways] Offset: FFFFFFFF
  class TextureTransitionerManager : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private UnityEngine.MaterialPropertyBlock matPropBlock
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::MaterialPropertyBlock* matPropBlock;
    // Field size check
    static_assert(sizeof(::UnityEngine::MaterialPropertyBlock*) == 0x8);
    public:
    // Get static field: static private GorillaTag.TextureTransitionerManager <instance>k__BackingField
    static ::GorillaTag::TextureTransitionerManager* _get_$instance$k__BackingField();
    // Set static field: static private GorillaTag.TextureTransitionerManager <instance>k__BackingField
    static void _set_$instance$k__BackingField(::GorillaTag::TextureTransitionerManager* value);
    // Get static field: static public readonly System.Collections.Generic.List`1<GorillaTag.TextureTransitioner> components
    static ::System::Collections::Generic::List_1<::GorillaTag::TextureTransitioner*>* _get_components();
    // Set static field: static public readonly System.Collections.Generic.List`1<GorillaTag.TextureTransitioner> components
    static void _set_components(::System::Collections::Generic::List_1<::GorillaTag::TextureTransitioner*>* value);
    // Get instance field reference: private UnityEngine.MaterialPropertyBlock matPropBlock
    [[deprecated("Use field access instead!")]] ::UnityEngine::MaterialPropertyBlock*& dyn_matPropBlock();
    // static public GorillaTag.TextureTransitionerManager get_instance()
    // Offset: 0x287C2B0
    static ::GorillaTag::TextureTransitionerManager* get_instance();
    // static private System.Void set_instance(GorillaTag.TextureTransitionerManager value)
    // Offset: 0x287C308
    static void set_instance(::GorillaTag::TextureTransitionerManager* value);
    // protected System.Void Awake()
    // Offset: 0x287C370
    void Awake();
    // protected System.Void LateUpdate()
    // Offset: 0x287C56C
    void LateUpdate();
    // static public System.Void EnsureInstanceIsAvailable()
    // Offset: 0x287BA9C
    static void EnsureInstanceIsAvailable();
    // static public System.Void Register(GorillaTag.TextureTransitioner component)
    // Offset: 0x287C060
    static void Register(::GorillaTag::TextureTransitioner* component);
    // static public System.Void Unregister(GorillaTag.TextureTransitioner component)
    // Offset: 0x287C188
    static void Unregister(::GorillaTag::TextureTransitioner* component);
    // public System.Void .ctor()
    // Offset: 0x287C998
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TextureTransitionerManager* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTag::TextureTransitionerManager::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TextureTransitionerManager*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x287C9A0
    static void _cctor();
  }; // GorillaTag.TextureTransitionerManager
  #pragma pack(pop)
  static check_size<sizeof(TextureTransitionerManager), 32 + sizeof(::UnityEngine::MaterialPropertyBlock*)> __GorillaTag_TextureTransitionerManagerSizeCheck;
  static_assert(sizeof(TextureTransitionerManager) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GorillaTag::TextureTransitionerManager::get_instance
// Il2CppName: get_instance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GorillaTag::TextureTransitionerManager* (*)()>(&GorillaTag::TextureTransitionerManager::get_instance)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::TextureTransitionerManager*), "get_instance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaTag::TextureTransitionerManager::set_instance
// Il2CppName: set_instance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::GorillaTag::TextureTransitionerManager*)>(&GorillaTag::TextureTransitionerManager::set_instance)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("GorillaTag", "TextureTransitionerManager")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::TextureTransitionerManager*), "set_instance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GorillaTag::TextureTransitionerManager::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaTag::TextureTransitionerManager::*)()>(&GorillaTag::TextureTransitionerManager::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::TextureTransitionerManager*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaTag::TextureTransitionerManager::LateUpdate
// Il2CppName: LateUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaTag::TextureTransitionerManager::*)()>(&GorillaTag::TextureTransitionerManager::LateUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::TextureTransitionerManager*), "LateUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaTag::TextureTransitionerManager::EnsureInstanceIsAvailable
// Il2CppName: EnsureInstanceIsAvailable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GorillaTag::TextureTransitionerManager::EnsureInstanceIsAvailable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::TextureTransitionerManager*), "EnsureInstanceIsAvailable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaTag::TextureTransitionerManager::Register
// Il2CppName: Register
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::GorillaTag::TextureTransitioner*)>(&GorillaTag::TextureTransitionerManager::Register)> {
  static const MethodInfo* get() {
    static auto* component = &::il2cpp_utils::GetClassFromName("GorillaTag", "TextureTransitioner")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::TextureTransitionerManager*), "Register", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{component});
  }
};
// Writing MetadataGetter for method: GorillaTag::TextureTransitionerManager::Unregister
// Il2CppName: Unregister
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::GorillaTag::TextureTransitioner*)>(&GorillaTag::TextureTransitionerManager::Unregister)> {
  static const MethodInfo* get() {
    static auto* component = &::il2cpp_utils::GetClassFromName("GorillaTag", "TextureTransitioner")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::TextureTransitionerManager*), "Unregister", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{component});
  }
};
// Writing MetadataGetter for method: GorillaTag::TextureTransitionerManager::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GorillaTag::TextureTransitionerManager::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GorillaTag::TextureTransitionerManager::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::TextureTransitionerManager*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
