// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GorillaTag::MonkeFX
namespace GorillaTag::MonkeFX {
  // Forward declaring type: MonkeFXSettingsSO
  class MonkeFXSettingsSO;
}
// Completed forward declares
// Type namespace: GorillaTag.MonkeFX
namespace GorillaTag::MonkeFX {
  // Forward declaring type: MonkeFXMono
  class MonkeFXMono;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GorillaTag::MonkeFX::MonkeFXMono);
DEFINE_IL2CPP_ARG_TYPE(::GorillaTag::MonkeFX::MonkeFXMono*, "GorillaTag.MonkeFX", "MonkeFXMono");
// Type namespace: GorillaTag.MonkeFX
namespace GorillaTag::MonkeFX {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: GorillaTag.MonkeFX.MonkeFXMono
  // [TokenAttribute] Offset: FFFFFFFF
  class MonkeFXMono : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public GorillaTag.MonkeFX.MonkeFXSettingsSO[] settings
    // Size: 0x8
    // Offset: 0x20
    ::ArrayW<::GorillaTag::MonkeFX::MonkeFXSettingsSO*> settings;
    // Field size check
    static_assert(sizeof(::ArrayW<::GorillaTag::MonkeFX::MonkeFXSettingsSO*>) == 0x8);
    public:
    // Get instance field reference: public GorillaTag.MonkeFX.MonkeFXSettingsSO[] settings
    [[deprecated("Use field access instead!")]] ::ArrayW<::GorillaTag::MonkeFX::MonkeFXSettingsSO*>& dyn_settings();
    // public System.Void .ctor()
    // Offset: 0x28A74F8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MonkeFXMono* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTag::MonkeFX::MonkeFXMono::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MonkeFXMono*, creationType>()));
    }
  }; // GorillaTag.MonkeFX.MonkeFXMono
  #pragma pack(pop)
  static check_size<sizeof(MonkeFXMono), 32 + sizeof(::ArrayW<::GorillaTag::MonkeFX::MonkeFXSettingsSO*>)> __GorillaTag_MonkeFX_MonkeFXMonoSizeCheck;
  static_assert(sizeof(MonkeFXMono) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GorillaTag::MonkeFX::MonkeFXMono::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
