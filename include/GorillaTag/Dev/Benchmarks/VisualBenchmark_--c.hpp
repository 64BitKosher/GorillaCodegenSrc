// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: GorillaTag.Dev.Benchmarks.VisualBenchmark
#include "GorillaTag/Dev/Benchmarks/VisualBenchmark.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GorillaTag::Dev::Benchmarks::VisualBenchmark::$$c);
DEFINE_IL2CPP_ARG_TYPE(::GorillaTag::Dev::Benchmarks::VisualBenchmark::$$c*, "GorillaTag.Dev.Benchmarks", "VisualBenchmark/<>c");
// Type namespace: GorillaTag.Dev.Benchmarks
namespace GorillaTag::Dev::Benchmarks {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: GorillaTag.Dev.Benchmarks.VisualBenchmark/<>c
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class VisualBenchmark::$$c : public ::Il2CppObject {
    public:
    // Get static field: static public readonly GorillaTag.Dev.Benchmarks.VisualBenchmark/<>c <>9
    static ::GorillaTag::Dev::Benchmarks::VisualBenchmark::$$c* _get_$$9();
    // Set static field: static public readonly GorillaTag.Dev.Benchmarks.VisualBenchmark/<>c <>9
    static void _set_$$9(::GorillaTag::Dev::Benchmarks::VisualBenchmark::$$c* value);
    // Get static field: static public System.Action <>9__13_0
    static ::System::Action* _get_$$9__13_0();
    // Set static field: static public System.Action <>9__13_0
    static void _set_$$9__13_0(::System::Action* value);
    // static private System.Void .cctor()
    // Offset: 0x28AA314
    static void _cctor();
    // public System.Void .ctor()
    // Offset: 0x28AA37C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static VisualBenchmark::$$c* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTag::Dev::Benchmarks::VisualBenchmark::$$c::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<VisualBenchmark::$$c*, creationType>()));
    }
    // System.Void <Awake>b__13_0()
    // Offset: 0x28AA384
    void $Awake$b__13_0();
  }; // GorillaTag.Dev.Benchmarks.VisualBenchmark/<>c
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GorillaTag::Dev::Benchmarks::VisualBenchmark::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GorillaTag::Dev::Benchmarks::VisualBenchmark::$$c::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::Dev::Benchmarks::VisualBenchmark::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaTag::Dev::Benchmarks::VisualBenchmark::$$c::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GorillaTag::Dev::Benchmarks::VisualBenchmark::$$c::$Awake$b__13_0
// Il2CppName: <Awake>b__13_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaTag::Dev::Benchmarks::VisualBenchmark::$$c::*)()>(&GorillaTag::Dev::Benchmarks::VisualBenchmark::$$c::$Awake$b__13_0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::Dev::Benchmarks::VisualBenchmark::$$c*), "<Awake>b__13_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
