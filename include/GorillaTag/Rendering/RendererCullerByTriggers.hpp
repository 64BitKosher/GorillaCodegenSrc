// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Renderer
  class Renderer;
  // Forward declaring type: Collider
  class Collider;
}
// Completed forward declares
// Type namespace: GorillaTag.Rendering
namespace GorillaTag::Rendering {
  // Forward declaring type: RendererCullerByTriggers
  class RendererCullerByTriggers;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GorillaTag::Rendering::RendererCullerByTriggers);
DEFINE_IL2CPP_ARG_TYPE(::GorillaTag::Rendering::RendererCullerByTriggers*, "GorillaTag.Rendering", "RendererCullerByTriggers");
// Type namespace: GorillaTag.Rendering
namespace GorillaTag::Rendering {
  // Size: 0x31
  #pragma pack(push, 1)
  // Autogenerated type: GorillaTag.Rendering.RendererCullerByTriggers
  // [TokenAttribute] Offset: FFFFFFFF
  class RendererCullerByTriggers : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public UnityEngine.Renderer[] renderers
    // Size: 0x8
    // Offset: 0x20
    ::ArrayW<::UnityEngine::Renderer*> renderers;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Renderer*>) == 0x8);
    // public UnityEngine.Collider[] colliders
    // Size: 0x8
    // Offset: 0x28
    ::ArrayW<::UnityEngine::Collider*> colliders;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Collider*>) == 0x8);
    // private System.Boolean camWasTouching
    // Size: 0x1
    // Offset: 0x30
    bool camWasTouching;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // static field const value: static private System.Single cameraRadiusSq
    static constexpr const float cameraRadiusSq = 0.010000001;
    // Get static field: static private System.Single cameraRadiusSq
    static float _get_cameraRadiusSq();
    // Set static field: static private System.Single cameraRadiusSq
    static void _set_cameraRadiusSq(float value);
    // Get instance field reference: public UnityEngine.Renderer[] renderers
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Renderer*>& dyn_renderers();
    // Get instance field reference: public UnityEngine.Collider[] colliders
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Collider*>& dyn_colliders();
    // Get instance field reference: private System.Boolean camWasTouching
    [[deprecated("Use field access instead!")]] bool& dyn_camWasTouching();
    // protected System.Void OnEnable()
    // Offset: 0x28AE6B0
    void OnEnable();
    // protected System.Void LateUpdate()
    // Offset: 0x28AE718
    void LateUpdate();
    // public System.Void .ctor()
    // Offset: 0x28AE864
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RendererCullerByTriggers* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTag::Rendering::RendererCullerByTriggers::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RendererCullerByTriggers*, creationType>()));
    }
  }; // GorillaTag.Rendering.RendererCullerByTriggers
  #pragma pack(pop)
  static check_size<sizeof(RendererCullerByTriggers), 48 + sizeof(bool)> __GorillaTag_Rendering_RendererCullerByTriggersSizeCheck;
  static_assert(sizeof(RendererCullerByTriggers) == 0x31);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GorillaTag::Rendering::RendererCullerByTriggers::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaTag::Rendering::RendererCullerByTriggers::*)()>(&GorillaTag::Rendering::RendererCullerByTriggers::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::Rendering::RendererCullerByTriggers*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaTag::Rendering::RendererCullerByTriggers::LateUpdate
// Il2CppName: LateUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaTag::Rendering::RendererCullerByTriggers::*)()>(&GorillaTag::Rendering::RendererCullerByTriggers::LateUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::Rendering::RendererCullerByTriggers*), "LateUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaTag::Rendering::RendererCullerByTriggers::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
