// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
// Including type: System.Boolean
#include "System/Boolean.hpp"
// Including type: UnityEngine.Hash128
#include "UnityEngine/Hash128.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Mesh
  class Mesh;
}
// Completed forward declares
// Type namespace: GorillaTag.Rendering.MeshCombiner
namespace GorillaTag::Rendering::MeshCombiner {
  // Forward declaring type: EdMeshCombinerSceneProcessor
  class EdMeshCombinerSceneProcessor;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GorillaTag::Rendering::MeshCombiner::EdMeshCombinerSceneProcessor);
DEFINE_IL2CPP_ARG_TYPE(::GorillaTag::Rendering::MeshCombiner::EdMeshCombinerSceneProcessor*, "GorillaTag.Rendering.MeshCombiner", "EdMeshCombinerSceneProcessor");
// Type namespace: GorillaTag.Rendering.MeshCombiner
namespace GorillaTag::Rendering::MeshCombiner {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: GorillaTag.Rendering.MeshCombiner.EdMeshCombinerSceneProcessor
  // [TokenAttribute] Offset: FFFFFFFF
  // [DefaultExecutionOrder] Offset: FFFFFFFF
  class EdMeshCombinerSceneProcessor : public ::UnityEngine::MonoBehaviour {
    public:
    // Get static field: static private System.String _dummyProp
    static ::StringW _get__dummyProp();
    // Set static field: static private System.String _dummyProp
    static void _set__dummyProp(::StringW value);
    // static field const value: static public System.Int32 kMaxVertCount
    static constexpr const int kMaxVertCount = 65535;
    // Get static field: static public System.Int32 kMaxVertCount
    static int _get_kMaxVertCount();
    // Set static field: static public System.Int32 kMaxVertCount
    static void _set_kMaxVertCount(int value);
    // static field const value: static public System.Boolean kDebugAllowMeshCombining
    static constexpr const bool kDebugAllowMeshCombining = true;
    // Get static field: static public System.Boolean kDebugAllowMeshCombining
    static bool _get_kDebugAllowMeshCombining();
    // Set static field: static public System.Boolean kDebugAllowMeshCombining
    static void _set_kDebugAllowMeshCombining(bool value);
    // static field const value: static public System.Boolean debugVisualsOnly
    static constexpr const bool debugVisualsOnly = true;
    // Get static field: static public System.Boolean debugVisualsOnly
    static bool _get_debugVisualsOnly();
    // Set static field: static public System.Boolean debugVisualsOnly
    static void _set_debugVisualsOnly(bool value);
    // Get static field: static private System.Collections.Generic.Dictionary`2<UnityEngine.Hash128,UnityEngine.Mesh> meshCache
    static ::System::Collections::Generic::Dictionary_2<::UnityEngine::Hash128, ::UnityEngine::Mesh*>* _get_meshCache();
    // Set static field: static private System.Collections.Generic.Dictionary`2<UnityEngine.Hash128,UnityEngine.Mesh> meshCache
    static void _set_meshCache(::System::Collections::Generic::Dictionary_2<::UnityEngine::Hash128, ::UnityEngine::Mesh*>* value);
    // Get static field: static private System.Int32 aliveInstanceCount
    static int _get_aliveInstanceCount();
    // Set static field: static private System.Int32 aliveInstanceCount
    static void _set_aliveInstanceCount(int value);
    // protected System.Void Awake()
    // Offset: 0x28B255C
    void Awake();
    // protected System.Void OnEnable()
    // Offset: 0x28B25F0
    void OnEnable();
    // public System.Void .ctor()
    // Offset: 0x28B25F4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static EdMeshCombinerSceneProcessor* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTag::Rendering::MeshCombiner::EdMeshCombinerSceneProcessor::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<EdMeshCombinerSceneProcessor*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x28B25FC
    static void _cctor();
  }; // GorillaTag.Rendering.MeshCombiner.EdMeshCombinerSceneProcessor
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GorillaTag::Rendering::MeshCombiner::EdMeshCombinerSceneProcessor::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaTag::Rendering::MeshCombiner::EdMeshCombinerSceneProcessor::*)()>(&GorillaTag::Rendering::MeshCombiner::EdMeshCombinerSceneProcessor::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::Rendering::MeshCombiner::EdMeshCombinerSceneProcessor*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaTag::Rendering::MeshCombiner::EdMeshCombinerSceneProcessor::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaTag::Rendering::MeshCombiner::EdMeshCombinerSceneProcessor::*)()>(&GorillaTag::Rendering::MeshCombiner::EdMeshCombinerSceneProcessor::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::Rendering::MeshCombiner::EdMeshCombinerSceneProcessor*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaTag::Rendering::MeshCombiner::EdMeshCombinerSceneProcessor::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GorillaTag::Rendering::MeshCombiner::EdMeshCombinerSceneProcessor::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GorillaTag::Rendering::MeshCombiner::EdMeshCombinerSceneProcessor::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::Rendering::MeshCombiner::EdMeshCombinerSceneProcessor*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
