// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: GorillaTag.GuidedRefs.IGuidedRefTargetMono
#include "GorillaTag/GuidedRefs/IGuidedRefTargetMono.hpp"
// Including type: GorillaTag.GuidedRefs.GuidedRefBasicTargetInfo
#include "GorillaTag/GuidedRefs/GuidedRefBasicTargetInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Object because it is already included!
  // Forward declaring type: Transform
  class Transform;
}
// Completed forward declares
// Type namespace: GorillaTag.GuidedRefs
namespace GorillaTag::GuidedRefs {
  // Forward declaring type: GuidedRefTargetMonoGameObject
  class GuidedRefTargetMonoGameObject;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GorillaTag::GuidedRefs::GuidedRefTargetMonoGameObject);
DEFINE_IL2CPP_ARG_TYPE(::GorillaTag::GuidedRefs::GuidedRefTargetMonoGameObject*, "GorillaTag.GuidedRefs", "GuidedRefTargetMonoGameObject");
// Type namespace: GorillaTag.GuidedRefs
namespace GorillaTag::GuidedRefs {
  // Size: 0x31
  #pragma pack(push, 1)
  // Autogenerated type: GorillaTag.GuidedRefs.GuidedRefTargetMonoGameObject
  // [TokenAttribute] Offset: FFFFFFFF
  class GuidedRefTargetMonoGameObject : public ::UnityEngine::MonoBehaviour/*, public ::GorillaTag::GuidedRefs::IGuidedRefTargetMono*/ {
    public:
    public:
    // private GorillaTag.GuidedRefs.GuidedRefBasicTargetInfo guidedRefTargetInfo
    // Size: 0x11
    // Offset: 0x20
    ::GorillaTag::GuidedRefs::GuidedRefBasicTargetInfo guidedRefTargetInfo;
    // Field size check
    static_assert(sizeof(::GorillaTag::GuidedRefs::GuidedRefBasicTargetInfo) == 0x11);
    public:
    // Creating interface conversion operator: operator ::GorillaTag::GuidedRefs::IGuidedRefTargetMono
    operator ::GorillaTag::GuidedRefs::IGuidedRefTargetMono() noexcept {
      return *reinterpret_cast<::GorillaTag::GuidedRefs::IGuidedRefTargetMono*>(this);
    }
    // Get instance field reference: private GorillaTag.GuidedRefs.GuidedRefBasicTargetInfo guidedRefTargetInfo
    [[deprecated("Use field access instead!")]] ::GorillaTag::GuidedRefs::GuidedRefBasicTargetInfo& dyn_guidedRefTargetInfo();
    // private GorillaTag.GuidedRefs.GuidedRefBasicTargetInfo GorillaTag.GuidedRefs.IGuidedRefTargetMono.get_GRefTargetInfo()
    // Offset: 0x28A8D60
    ::GorillaTag::GuidedRefs::GuidedRefBasicTargetInfo GorillaTag_GuidedRefs_IGuidedRefTargetMono_get_GRefTargetInfo();
    // private System.Void GorillaTag.GuidedRefs.IGuidedRefTargetMono.set_GRefTargetInfo(GorillaTag.GuidedRefs.GuidedRefBasicTargetInfo value)
    // Offset: 0x28A8D74
    void GorillaTag_GuidedRefs_IGuidedRefTargetMono_set_GRefTargetInfo(::GorillaTag::GuidedRefs::GuidedRefBasicTargetInfo value);
    // public UnityEngine.Object get_GuidedRefTargetObject()
    // Offset: 0x28A8D94
    ::UnityEngine::Object* get_GuidedRefTargetObject();
    // protected System.Void Awake()
    // Offset: 0x28A8D9C
    void Awake();
    // protected System.Void OnDestroy()
    // Offset: 0x28A8E34
    void OnDestroy();
    // private System.Void GorillaTag.GuidedRefs.IGuidedRefObject.GuidedRefInitialize()
    // Offset: 0x28A8EA4
    void GorillaTag_GuidedRefs_IGuidedRefObject_GuidedRefInitialize();
    // public System.Void .ctor()
    // Offset: 0x28A8F1C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GuidedRefTargetMonoGameObject* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTag::GuidedRefs::GuidedRefTargetMonoGameObject::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GuidedRefTargetMonoGameObject*, creationType>()));
    }
    // private UnityEngine.Transform GorillaTag.GuidedRefs.IGuidedRefMonoBehaviour.get_transform()
    // Offset: 0x28A8F24
    ::UnityEngine::Transform* GorillaTag_GuidedRefs_IGuidedRefMonoBehaviour_get_transform();
    // private System.Int32 GorillaTag.GuidedRefs.IGuidedRefObject.GetInstanceID()
    // Offset: 0x28A8F2C
    int GorillaTag_GuidedRefs_IGuidedRefObject_GetInstanceID();
  }; // GorillaTag.GuidedRefs.GuidedRefTargetMonoGameObject
  #pragma pack(pop)
  static check_size<sizeof(GuidedRefTargetMonoGameObject), 32 + sizeof(::GorillaTag::GuidedRefs::GuidedRefBasicTargetInfo)> __GorillaTag_GuidedRefs_GuidedRefTargetMonoGameObjectSizeCheck;
  static_assert(sizeof(GuidedRefTargetMonoGameObject) == 0x31);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GorillaTag::GuidedRefs::GuidedRefTargetMonoGameObject::GorillaTag_GuidedRefs_IGuidedRefTargetMono_get_GRefTargetInfo
// Il2CppName: GorillaTag.GuidedRefs.IGuidedRefTargetMono.get_GRefTargetInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GorillaTag::GuidedRefs::GuidedRefBasicTargetInfo (GorillaTag::GuidedRefs::GuidedRefTargetMonoGameObject::*)()>(&GorillaTag::GuidedRefs::GuidedRefTargetMonoGameObject::GorillaTag_GuidedRefs_IGuidedRefTargetMono_get_GRefTargetInfo)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::GuidedRefs::GuidedRefTargetMonoGameObject*), "GorillaTag.GuidedRefs.IGuidedRefTargetMono.get_GRefTargetInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaTag::GuidedRefs::GuidedRefTargetMonoGameObject::GorillaTag_GuidedRefs_IGuidedRefTargetMono_set_GRefTargetInfo
// Il2CppName: GorillaTag.GuidedRefs.IGuidedRefTargetMono.set_GRefTargetInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaTag::GuidedRefs::GuidedRefTargetMonoGameObject::*)(::GorillaTag::GuidedRefs::GuidedRefBasicTargetInfo)>(&GorillaTag::GuidedRefs::GuidedRefTargetMonoGameObject::GorillaTag_GuidedRefs_IGuidedRefTargetMono_set_GRefTargetInfo)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("GorillaTag.GuidedRefs", "GuidedRefBasicTargetInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::GuidedRefs::GuidedRefTargetMonoGameObject*), "GorillaTag.GuidedRefs.IGuidedRefTargetMono.set_GRefTargetInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GorillaTag::GuidedRefs::GuidedRefTargetMonoGameObject::get_GuidedRefTargetObject
// Il2CppName: get_GuidedRefTargetObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Object* (GorillaTag::GuidedRefs::GuidedRefTargetMonoGameObject::*)()>(&GorillaTag::GuidedRefs::GuidedRefTargetMonoGameObject::get_GuidedRefTargetObject)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::GuidedRefs::GuidedRefTargetMonoGameObject*), "get_GuidedRefTargetObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaTag::GuidedRefs::GuidedRefTargetMonoGameObject::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaTag::GuidedRefs::GuidedRefTargetMonoGameObject::*)()>(&GorillaTag::GuidedRefs::GuidedRefTargetMonoGameObject::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::GuidedRefs::GuidedRefTargetMonoGameObject*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaTag::GuidedRefs::GuidedRefTargetMonoGameObject::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaTag::GuidedRefs::GuidedRefTargetMonoGameObject::*)()>(&GorillaTag::GuidedRefs::GuidedRefTargetMonoGameObject::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::GuidedRefs::GuidedRefTargetMonoGameObject*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaTag::GuidedRefs::GuidedRefTargetMonoGameObject::GorillaTag_GuidedRefs_IGuidedRefObject_GuidedRefInitialize
// Il2CppName: GorillaTag.GuidedRefs.IGuidedRefObject.GuidedRefInitialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaTag::GuidedRefs::GuidedRefTargetMonoGameObject::*)()>(&GorillaTag::GuidedRefs::GuidedRefTargetMonoGameObject::GorillaTag_GuidedRefs_IGuidedRefObject_GuidedRefInitialize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::GuidedRefs::GuidedRefTargetMonoGameObject*), "GorillaTag.GuidedRefs.IGuidedRefObject.GuidedRefInitialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaTag::GuidedRefs::GuidedRefTargetMonoGameObject::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GorillaTag::GuidedRefs::GuidedRefTargetMonoGameObject::GorillaTag_GuidedRefs_IGuidedRefMonoBehaviour_get_transform
// Il2CppName: GorillaTag.GuidedRefs.IGuidedRefMonoBehaviour.get_transform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (GorillaTag::GuidedRefs::GuidedRefTargetMonoGameObject::*)()>(&GorillaTag::GuidedRefs::GuidedRefTargetMonoGameObject::GorillaTag_GuidedRefs_IGuidedRefMonoBehaviour_get_transform)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::GuidedRefs::GuidedRefTargetMonoGameObject*), "GorillaTag.GuidedRefs.IGuidedRefMonoBehaviour.get_transform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaTag::GuidedRefs::GuidedRefTargetMonoGameObject::GorillaTag_GuidedRefs_IGuidedRefObject_GetInstanceID
// Il2CppName: GorillaTag.GuidedRefs.IGuidedRefObject.GetInstanceID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GorillaTag::GuidedRefs::GuidedRefTargetMonoGameObject::*)()>(&GorillaTag::GuidedRefs::GuidedRefTargetMonoGameObject::GorillaTag_GuidedRefs_IGuidedRefObject_GetInstanceID)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::GuidedRefs::GuidedRefTargetMonoGameObject*), "GorillaTag.GuidedRefs.IGuidedRefObject.GetInstanceID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
