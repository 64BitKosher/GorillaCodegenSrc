// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: GorillaTag.GuidedRefs.GRef/EResolveModes
#include "GorillaTag/GuidedRefs/GRef_EResolveModes.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GorillaTag::GuidedRefs
namespace GorillaTag::GuidedRefs {
  // Forward declaring type: GuidedRefHubIdSO
  class GuidedRefHubIdSO;
  // Forward declaring type: GuidedRefTargetIdSO
  class GuidedRefTargetIdSO;
}
// Completed forward declares
// Type namespace: GorillaTag.GuidedRefs
namespace GorillaTag::GuidedRefs {
  // Forward declaring type: GuidedRefReceiverArrayInfo
  struct GuidedRefReceiverArrayInfo;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GorillaTag::GuidedRefs::GuidedRefReceiverArrayInfo, "GorillaTag.GuidedRefs", "GuidedRefReceiverArrayInfo");
// Type namespace: GorillaTag.GuidedRefs
namespace GorillaTag::GuidedRefs {
  // Size: 0x20
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: GorillaTag.GuidedRefs.GuidedRefReceiverArrayInfo
  // [TokenAttribute] Offset: FFFFFFFF
  struct GuidedRefReceiverArrayInfo/*, public ::System::ValueType*/ {
    public:
    public:
    // public GorillaTag.GuidedRefs.GRef/EResolveModes resolveModes
    // Size: 0x4
    // Offset: 0x0
    ::GorillaTag::GuidedRefs::GRef::EResolveModes resolveModes;
    // Field size check
    static_assert(sizeof(::GorillaTag::GuidedRefs::GRef::EResolveModes) == 0x4);
    // Padding between fields: resolveModes and: hubId
    char __padding0[0x4] = {};
    // public GorillaTag.GuidedRefs.GuidedRefHubIdSO hubId
    // Size: 0x8
    // Offset: 0x8
    ::GorillaTag::GuidedRefs::GuidedRefHubIdSO* hubId;
    // Field size check
    static_assert(sizeof(::GorillaTag::GuidedRefs::GuidedRefHubIdSO*) == 0x8);
    // public GorillaTag.GuidedRefs.GuidedRefTargetIdSO[] targets
    // Size: 0x8
    // Offset: 0x10
    ::ArrayW<::GorillaTag::GuidedRefs::GuidedRefTargetIdSO*> targets;
    // Field size check
    static_assert(sizeof(::ArrayW<::GorillaTag::GuidedRefs::GuidedRefTargetIdSO*>) == 0x8);
    // public System.Int32 fieldId
    // Size: 0x4
    // Offset: 0x18
    int fieldId;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 resolveCount
    // Size: 0x4
    // Offset: 0x1C
    int resolveCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: GuidedRefReceiverArrayInfo
    constexpr GuidedRefReceiverArrayInfo(::GorillaTag::GuidedRefs::GRef::EResolveModes resolveModes_ = {}, ::GorillaTag::GuidedRefs::GuidedRefHubIdSO* hubId_ = {}, ::ArrayW<::GorillaTag::GuidedRefs::GuidedRefTargetIdSO*> targets_ = ::ArrayW<::GorillaTag::GuidedRefs::GuidedRefTargetIdSO*>(static_cast<void*>(nullptr)), int fieldId_ = {}, int resolveCount_ = {}) noexcept : resolveModes{resolveModes_}, hubId{hubId_}, targets{targets_}, fieldId{fieldId_}, resolveCount{resolveCount_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public GorillaTag.GuidedRefs.GRef/EResolveModes resolveModes
    [[deprecated("Use field access instead!")]] ::GorillaTag::GuidedRefs::GRef::EResolveModes& dyn_resolveModes();
    // Get instance field reference: public GorillaTag.GuidedRefs.GuidedRefHubIdSO hubId
    [[deprecated("Use field access instead!")]] ::GorillaTag::GuidedRefs::GuidedRefHubIdSO*& dyn_hubId();
    // Get instance field reference: public GorillaTag.GuidedRefs.GuidedRefTargetIdSO[] targets
    [[deprecated("Use field access instead!")]] ::ArrayW<::GorillaTag::GuidedRefs::GuidedRefTargetIdSO*>& dyn_targets();
    // Get instance field reference: public System.Int32 fieldId
    [[deprecated("Use field access instead!")]] int& dyn_fieldId();
    // Get instance field reference: public System.Int32 resolveCount
    [[deprecated("Use field access instead!")]] int& dyn_resolveCount();
    // public System.Void .ctor(System.Boolean useRecommendedDefaults)
    // Offset: 0x28A9108
    GuidedRefReceiverArrayInfo(bool useRecommendedDefaults);
  }; // GorillaTag.GuidedRefs.GuidedRefReceiverArrayInfo
  #pragma pack(pop)
  static check_size<sizeof(GuidedRefReceiverArrayInfo), 28 + sizeof(int)> __GorillaTag_GuidedRefs_GuidedRefReceiverArrayInfoSizeCheck;
  static_assert(sizeof(GuidedRefReceiverArrayInfo) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GorillaTag::GuidedRefs::GuidedRefReceiverArrayInfo::GuidedRefReceiverArrayInfo
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
