// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: GorillaTag.GuidedRefs.RegisteredReceiverFieldInfo
#include "GorillaTag/GuidedRefs/RegisteredReceiverFieldInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GorillaTag::GuidedRefs
namespace GorillaTag::GuidedRefs {
  // Forward declaring type: IGuidedRefTargetMono
  class IGuidedRefTargetMono;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: GorillaTag.GuidedRefs.Internal
namespace GorillaTag::GuidedRefs::Internal {
  // Forward declaring type: RelayInfo
  class RelayInfo;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GorillaTag::GuidedRefs::Internal::RelayInfo);
DEFINE_IL2CPP_ARG_TYPE(::GorillaTag::GuidedRefs::Internal::RelayInfo*, "GorillaTag.GuidedRefs.Internal", "RelayInfo");
// Type namespace: GorillaTag.GuidedRefs.Internal
namespace GorillaTag::GuidedRefs::Internal {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: GorillaTag.GuidedRefs.Internal.RelayInfo
  // [TokenAttribute] Offset: FFFFFFFF
  class RelayInfo : public ::Il2CppObject {
    public:
    public:
    // public GorillaTag.GuidedRefs.IGuidedRefTargetMono targetMono
    // Size: 0x8
    // Offset: 0x10
    ::GorillaTag::GuidedRefs::IGuidedRefTargetMono* targetMono;
    // Field size check
    static_assert(sizeof(::GorillaTag::GuidedRefs::IGuidedRefTargetMono*) == 0x8);
    // public System.Collections.Generic.List`1<GorillaTag.GuidedRefs.RegisteredReceiverFieldInfo> registeredFields
    // Size: 0x8
    // Offset: 0x18
    ::System::Collections::Generic::List_1<::GorillaTag::GuidedRefs::RegisteredReceiverFieldInfo>* registeredFields;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::GorillaTag::GuidedRefs::RegisteredReceiverFieldInfo>*) == 0x8);
    // public System.Collections.Generic.List`1<GorillaTag.GuidedRefs.RegisteredReceiverFieldInfo> resolvedFields
    // Size: 0x8
    // Offset: 0x20
    ::System::Collections::Generic::List_1<::GorillaTag::GuidedRefs::RegisteredReceiverFieldInfo>* resolvedFields;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::GorillaTag::GuidedRefs::RegisteredReceiverFieldInfo>*) == 0x8);
    public:
    // Get instance field reference: public GorillaTag.GuidedRefs.IGuidedRefTargetMono targetMono
    [[deprecated("Use field access instead!")]] ::GorillaTag::GuidedRefs::IGuidedRefTargetMono*& dyn_targetMono();
    // Get instance field reference: public System.Collections.Generic.List`1<GorillaTag.GuidedRefs.RegisteredReceiverFieldInfo> registeredFields
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaTag::GuidedRefs::RegisteredReceiverFieldInfo>*& dyn_registeredFields();
    // Get instance field reference: public System.Collections.Generic.List`1<GorillaTag.GuidedRefs.RegisteredReceiverFieldInfo> resolvedFields
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaTag::GuidedRefs::RegisteredReceiverFieldInfo>*& dyn_resolvedFields();
    // public System.Void .ctor()
    // Offset: 0x28A881C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RelayInfo* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTag::GuidedRefs::Internal::RelayInfo::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RelayInfo*, creationType>()));
    }
  }; // GorillaTag.GuidedRefs.Internal.RelayInfo
  #pragma pack(pop)
  static check_size<sizeof(RelayInfo), 32 + sizeof(::System::Collections::Generic::List_1<::GorillaTag::GuidedRefs::RegisteredReceiverFieldInfo>*)> __GorillaTag_GuidedRefs_Internal_RelayInfoSizeCheck;
  static_assert(sizeof(RelayInfo) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GorillaTag::GuidedRefs::Internal::RelayInfo::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
