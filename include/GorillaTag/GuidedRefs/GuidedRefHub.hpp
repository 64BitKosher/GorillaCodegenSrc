// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: GorillaTag.GuidedRefs.IGuidedRefMonoBehaviour
#include "GorillaTag/GuidedRefs/IGuidedRefMonoBehaviour.hpp"
// Including type: GorillaTag.GuidedRefs.GuidedRefReceiverFieldInfo
#include "GorillaTag/GuidedRefs/GuidedRefReceiverFieldInfo.hpp"
// Including type: GorillaTag.GuidedRefs.GuidedRefReceiverArrayInfo
#include "GorillaTag/GuidedRefs/GuidedRefReceiverArrayInfo.hpp"
// Including type: GorillaTag.GuidedRefs.GuidedRefTryResolveInfo
#include "GorillaTag/GuidedRefs/GuidedRefTryResolveInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GorillaTag::GuidedRefs
namespace GorillaTag::GuidedRefs {
  // Forward declaring type: GuidedRefHubIdSO
  class GuidedRefHubIdSO;
  // Forward declaring type: GuidedRefTargetIdSO
  class GuidedRefTargetIdSO;
  // Forward declaring type: IGuidedRefReceiverMono
  class IGuidedRefReceiverMono;
  // Forward declaring type: IGuidedRefTargetMono
  class IGuidedRefTargetMono;
  // Forward declaring type: RegisteredReceiverFieldInfo
  struct RegisteredReceiverFieldInfo;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: HashSet`1<T>
  template<typename T>
  class HashSet_1;
  // Forward declaring type: IList`1<T>
  template<typename T>
  class IList_1;
}
// Forward declaring namespace: GorillaTag::GuidedRefs::Internal
namespace GorillaTag::GuidedRefs::Internal {
  // Forward declaring type: RelayInfo
  class RelayInfo;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Component because it is already included!
  // Skipping declaration: Object because it is already included!
  // Forward declaring type: Transform
  class Transform;
}
// Completed forward declares
// Type namespace: GorillaTag.GuidedRefs
namespace GorillaTag::GuidedRefs {
  // Forward declaring type: GuidedRefHub
  class GuidedRefHub;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GorillaTag::GuidedRefs::GuidedRefHub);
DEFINE_IL2CPP_ARG_TYPE(::GorillaTag::GuidedRefs::GuidedRefHub*, "GorillaTag.GuidedRefs", "GuidedRefHub");
// Type namespace: GorillaTag.GuidedRefs
namespace GorillaTag::GuidedRefs {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: GorillaTag.GuidedRefs.GuidedRefHub
  // [TokenAttribute] Offset: FFFFFFFF
  // [DefaultExecutionOrder] Offset: FFFFFFFF
  class GuidedRefHub : public ::UnityEngine::MonoBehaviour/*, public ::GorillaTag::GuidedRefs::IGuidedRefMonoBehaviour*/ {
    public:
    // Nested type: ::GorillaTag::GuidedRefs::GuidedRefHub::$$c__DisplayClass25_0_1<TIGuidedRefReceiverMono>
    template<typename TIGuidedRefReceiverMono>
    class $$c__DisplayClass25_0_1;
    public:
    // private System.Boolean isRootInstance
    // Size: 0x1
    // Offset: 0x20
    bool isRootInstance;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: isRootInstance and: hubId
    char __padding0[0x7] = {};
    // public GorillaTag.GuidedRefs.GuidedRefHubIdSO hubId
    // Size: 0x8
    // Offset: 0x28
    ::GorillaTag::GuidedRefs::GuidedRefHubIdSO* hubId;
    // Field size check
    static_assert(sizeof(::GorillaTag::GuidedRefs::GuidedRefHubIdSO*) == 0x8);
    // private readonly System.Collections.Generic.Dictionary`2<GorillaTag.GuidedRefs.GuidedRefTargetIdSO,GorillaTag.GuidedRefs.Internal.RelayInfo> lookupRelayInfoByTargetId
    // Size: 0x8
    // Offset: 0x30
    ::System::Collections::Generic::Dictionary_2<::GorillaTag::GuidedRefs::GuidedRefTargetIdSO*, ::GorillaTag::GuidedRefs::Internal::RelayInfo*>* lookupRelayInfoByTargetId;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::GorillaTag::GuidedRefs::GuidedRefTargetIdSO*, ::GorillaTag::GuidedRefs::Internal::RelayInfo*>*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::GorillaTag::GuidedRefs::IGuidedRefMonoBehaviour
    operator ::GorillaTag::GuidedRefs::IGuidedRefMonoBehaviour() noexcept {
      return *reinterpret_cast<::GorillaTag::GuidedRefs::IGuidedRefMonoBehaviour*>(this);
    }
    // Get static field: static public GorillaTag.GuidedRefs.GuidedRefHub rootInstance
    static ::GorillaTag::GuidedRefs::GuidedRefHub* _get_rootInstance();
    // Set static field: static public GorillaTag.GuidedRefs.GuidedRefHub rootInstance
    static void _set_rootInstance(::GorillaTag::GuidedRefs::GuidedRefHub* value);
    // Get static field: static public System.Boolean hasRootInstance
    static bool _get_hasRootInstance();
    // Set static field: static public System.Boolean hasRootInstance
    static void _set_hasRootInstance(bool value);
    // Get static field: static private readonly System.Collections.Generic.Dictionary`2<GorillaTag.GuidedRefs.Internal.RelayInfo,GorillaTag.GuidedRefs.GuidedRefTargetIdSO> static_relayInfo_to_targetId
    static ::System::Collections::Generic::Dictionary_2<::GorillaTag::GuidedRefs::Internal::RelayInfo*, ::GorillaTag::GuidedRefs::GuidedRefTargetIdSO*>* _get_static_relayInfo_to_targetId();
    // Set static field: static private readonly System.Collections.Generic.Dictionary`2<GorillaTag.GuidedRefs.Internal.RelayInfo,GorillaTag.GuidedRefs.GuidedRefTargetIdSO> static_relayInfo_to_targetId
    static void _set_static_relayInfo_to_targetId(::System::Collections::Generic::Dictionary_2<::GorillaTag::GuidedRefs::Internal::RelayInfo*, ::GorillaTag::GuidedRefs::GuidedRefTargetIdSO*>* value);
    // Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.Int32,System.Collections.Generic.List`1<GorillaTag.GuidedRefs.GuidedRefHub>> globalLookupHubsThatHaveRegisteredInstId
    static ::System::Collections::Generic::Dictionary_2<int, ::System::Collections::Generic::List_1<::GorillaTag::GuidedRefs::GuidedRefHub*>*>* _get_globalLookupHubsThatHaveRegisteredInstId();
    // Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.Int32,System.Collections.Generic.List`1<GorillaTag.GuidedRefs.GuidedRefHub>> globalLookupHubsThatHaveRegisteredInstId
    static void _set_globalLookupHubsThatHaveRegisteredInstId(::System::Collections::Generic::Dictionary_2<int, ::System::Collections::Generic::List_1<::GorillaTag::GuidedRefs::GuidedRefHub*>*>* value);
    // Get static field: static private readonly System.Collections.Generic.Dictionary`2<GorillaTag.GuidedRefs.GuidedRefHub,System.Collections.Generic.List`1<System.Int32>> globalLookupRefInstIDsByHub
    static ::System::Collections::Generic::Dictionary_2<::GorillaTag::GuidedRefs::GuidedRefHub*, ::System::Collections::Generic::List_1<int>*>* _get_globalLookupRefInstIDsByHub();
    // Set static field: static private readonly System.Collections.Generic.Dictionary`2<GorillaTag.GuidedRefs.GuidedRefHub,System.Collections.Generic.List`1<System.Int32>> globalLookupRefInstIDsByHub
    static void _set_globalLookupRefInstIDsByHub(::System::Collections::Generic::Dictionary_2<::GorillaTag::GuidedRefs::GuidedRefHub*, ::System::Collections::Generic::List_1<int>*>* value);
    // Get static field: static private readonly System.Collections.Generic.List`1<GorillaTag.GuidedRefs.GuidedRefHub> globalHubsTransientList
    static ::System::Collections::Generic::List_1<::GorillaTag::GuidedRefs::GuidedRefHub*>* _get_globalHubsTransientList();
    // Set static field: static private readonly System.Collections.Generic.List`1<GorillaTag.GuidedRefs.GuidedRefHub> globalHubsTransientList
    static void _set_globalHubsTransientList(::System::Collections::Generic::List_1<::GorillaTag::GuidedRefs::GuidedRefHub*>* value);
    // static field const value: static private System.String kUnsuppliedCallerName
    static constexpr const char* kUnsuppliedCallerName = "UNSUPPLIED_CALLER_NAME";
    // Get static field: static private System.String kUnsuppliedCallerName
    static ::StringW _get_kUnsuppliedCallerName();
    // Set static field: static private System.String kUnsuppliedCallerName
    static void _set_kUnsuppliedCallerName(::StringW value);
    // Get static field: static readonly System.Collections.Generic.HashSet`1<GorillaTag.GuidedRefs.IGuidedRefReceiverMono> kReceiversWaitingToFullyResolve
    static ::System::Collections::Generic::HashSet_1<::GorillaTag::GuidedRefs::IGuidedRefReceiverMono*>* _get_kReceiversWaitingToFullyResolve();
    // Set static field: static readonly System.Collections.Generic.HashSet`1<GorillaTag.GuidedRefs.IGuidedRefReceiverMono> kReceiversWaitingToFullyResolve
    static void _set_kReceiversWaitingToFullyResolve(::System::Collections::Generic::HashSet_1<::GorillaTag::GuidedRefs::IGuidedRefReceiverMono*>* value);
    // Get static field: static readonly System.Collections.Generic.HashSet`1<GorillaTag.GuidedRefs.IGuidedRefReceiverMono> kReceiversFullyRegistered
    static ::System::Collections::Generic::HashSet_1<::GorillaTag::GuidedRefs::IGuidedRefReceiverMono*>* _get_kReceiversFullyRegistered();
    // Set static field: static readonly System.Collections.Generic.HashSet`1<GorillaTag.GuidedRefs.IGuidedRefReceiverMono> kReceiversFullyRegistered
    static void _set_kReceiversFullyRegistered(::System::Collections::Generic::HashSet_1<::GorillaTag::GuidedRefs::IGuidedRefReceiverMono*>* value);
    // Get instance field reference: private System.Boolean isRootInstance
    [[deprecated("Use field access instead!")]] bool& dyn_isRootInstance();
    // Get instance field reference: public GorillaTag.GuidedRefs.GuidedRefHubIdSO hubId
    [[deprecated("Use field access instead!")]] ::GorillaTag::GuidedRefs::GuidedRefHubIdSO*& dyn_hubId();
    // Get instance field reference: private readonly System.Collections.Generic.Dictionary`2<GorillaTag.GuidedRefs.GuidedRefTargetIdSO,GorillaTag.GuidedRefs.Internal.RelayInfo> lookupRelayInfoByTargetId
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::GorillaTag::GuidedRefs::GuidedRefTargetIdSO*, ::GorillaTag::GuidedRefs::Internal::RelayInfo*>*& dyn_lookupRelayInfoByTargetId();
    // protected System.Void Awake()
    // Offset: 0x28A7798
    void Awake();
    // protected System.Void OnDestroy()
    // Offset: 0x28A7A88
    void OnDestroy();
    // public System.Void GuidedRefInitialize()
    // Offset: 0x28A779C
    void GuidedRefInitialize();
    // static public System.Boolean IsInstanceIDRegisteredWithAnyHub(System.Int32 instanceID)
    // Offset: 0x28A7D74
    static bool IsInstanceIDRegisteredWithAnyHub(int instanceID);
    // private System.Void RegisterTarget_Internal(TIGuidedRefTargetMono targetMono)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class TIGuidedRefTargetMono>
    void RegisterTarget_Internal(TIGuidedRefTargetMono targetMono) {
      static_assert(std::is_convertible_v<std::remove_pointer_t<TIGuidedRefTargetMono>, ::GorillaTag::GuidedRefs::IGuidedRefTargetMono>);
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTag::GuidedRefs::GuidedRefHub::RegisterTarget_Internal");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterTarget_Internal", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TIGuidedRefTargetMono>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetMono)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TIGuidedRefTargetMono>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___generic__method, targetMono);
    }
    // static public System.Void RegisterTarget(TIGuidedRefTargetMono targetMono, GorillaTag.GuidedRefs.GuidedRefHubIdSO[] hubIds, UnityEngine.Component debugCaller)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class TIGuidedRefTargetMono>
    static void RegisterTarget(TIGuidedRefTargetMono targetMono, ::ArrayW<::GorillaTag::GuidedRefs::GuidedRefHubIdSO*> hubIds, ::UnityEngine::Component* debugCaller) {
      static_assert(std::is_convertible_v<std::remove_pointer_t<TIGuidedRefTargetMono>, ::GorillaTag::GuidedRefs::IGuidedRefTargetMono>);
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTag::GuidedRefs::GuidedRefHub::RegisterTarget");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaTag.GuidedRefs", "GuidedRefHub", "RegisterTarget", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TIGuidedRefTargetMono>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetMono), ::il2cpp_utils::ExtractType(hubIds), ::il2cpp_utils::ExtractType(debugCaller)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TIGuidedRefTargetMono>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, targetMono, hubIds, debugCaller);
    }
    // static public System.Void UnregisterTarget(TIGuidedRefTargetMono targetMono, System.Boolean destroyed)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class TIGuidedRefTargetMono>
    static void UnregisterTarget(TIGuidedRefTargetMono targetMono, bool destroyed) {
      static_assert(std::is_convertible_v<std::remove_pointer_t<TIGuidedRefTargetMono>, ::GorillaTag::GuidedRefs::IGuidedRefTargetMono>);
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTag::GuidedRefs::GuidedRefHub::UnregisterTarget");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaTag.GuidedRefs", "GuidedRefHub", "UnregisterTarget", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TIGuidedRefTargetMono>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetMono), ::il2cpp_utils::ExtractType(destroyed)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TIGuidedRefTargetMono>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, targetMono, destroyed);
    }
    // static public System.Void ReceiverFullyRegistered(TIGuidedRefReceiverMono receiverMono)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class TIGuidedRefReceiverMono>
    static void ReceiverFullyRegistered(TIGuidedRefReceiverMono receiverMono) {
      static_assert(std::is_convertible_v<std::remove_pointer_t<TIGuidedRefReceiverMono>, ::GorillaTag::GuidedRefs::IGuidedRefReceiverMono>);
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTag::GuidedRefs::GuidedRefHub::ReceiverFullyRegistered");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaTag.GuidedRefs", "GuidedRefHub", "ReceiverFullyRegistered", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TIGuidedRefReceiverMono>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(receiverMono)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TIGuidedRefReceiverMono>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, receiverMono);
    }
    // static private System.Void CheckAndNotifyIfReceiverFullyResolved(TIGuidedRefReceiverMono receiverMono)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class TIGuidedRefReceiverMono>
    static void CheckAndNotifyIfReceiverFullyResolved(TIGuidedRefReceiverMono receiverMono) {
      static_assert(std::is_convertible_v<std::remove_pointer_t<TIGuidedRefReceiverMono>, ::GorillaTag::GuidedRefs::IGuidedRefReceiverMono>);
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTag::GuidedRefs::GuidedRefHub::CheckAndNotifyIfReceiverFullyResolved");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaTag.GuidedRefs", "GuidedRefHub", "CheckAndNotifyIfReceiverFullyResolved", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TIGuidedRefReceiverMono>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(receiverMono)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TIGuidedRefReceiverMono>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, receiverMono);
    }
    // private System.Void RegisterReceiverField(GorillaTag.GuidedRefs.RegisteredReceiverFieldInfo registeredReceiverFieldInfo, GorillaTag.GuidedRefs.GuidedRefTargetIdSO targetId)
    // Offset: 0x28A7DF4
    void RegisterReceiverField(::GorillaTag::GuidedRefs::RegisteredReceiverFieldInfo registeredReceiverFieldInfo, ::GorillaTag::GuidedRefs::GuidedRefTargetIdSO* targetId);
    // static private System.Void RegisterReceiverField_Internal(GorillaTag.GuidedRefs.GuidedRefHubIdSO hubId, TIGuidedRefReceiverMono receiverMono, System.Int32 fieldId, GorillaTag.GuidedRefs.GuidedRefTargetIdSO targetId, System.Int32 index)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class TIGuidedRefReceiverMono>
    static void RegisterReceiverField_Internal(::GorillaTag::GuidedRefs::GuidedRefHubIdSO* hubId, TIGuidedRefReceiverMono receiverMono, int fieldId, ::GorillaTag::GuidedRefs::GuidedRefTargetIdSO* targetId, int index) {
      static_assert(std::is_convertible_v<std::remove_pointer_t<TIGuidedRefReceiverMono>, ::GorillaTag::GuidedRefs::IGuidedRefReceiverMono>);
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTag::GuidedRefs::GuidedRefHub::RegisterReceiverField_Internal");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaTag.GuidedRefs", "GuidedRefHub", "RegisterReceiverField_Internal", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TIGuidedRefReceiverMono>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hubId), ::il2cpp_utils::ExtractType(receiverMono), ::il2cpp_utils::ExtractType(fieldId), ::il2cpp_utils::ExtractType(targetId), ::il2cpp_utils::ExtractType(index)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TIGuidedRefReceiverMono>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, hubId, receiverMono, fieldId, targetId, index);
    }
    // static public System.Void RegisterReceiverField(TIGuidedRefReceiverMono receiverMono, System.String fieldIdName, ref GorillaTag.GuidedRefs.GuidedRefReceiverFieldInfo fieldInfo)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class TIGuidedRefReceiverMono>
    static void RegisterReceiverField(TIGuidedRefReceiverMono receiverMono, ::StringW fieldIdName, ByRef<::GorillaTag::GuidedRefs::GuidedRefReceiverFieldInfo> fieldInfo) {
      static_assert(std::is_convertible_v<std::remove_pointer_t<TIGuidedRefReceiverMono>, ::GorillaTag::GuidedRefs::IGuidedRefReceiverMono>);
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTag::GuidedRefs::GuidedRefHub::RegisterReceiverField");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaTag.GuidedRefs", "GuidedRefHub", "RegisterReceiverField", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TIGuidedRefReceiverMono>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(receiverMono), ::il2cpp_utils::ExtractType(fieldIdName), ::il2cpp_utils::ExtractType(fieldInfo)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TIGuidedRefReceiverMono>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, receiverMono, fieldIdName, byref(fieldInfo));
    }
    // static public System.Void RegisterReceiverArray(TIGuidedRefReceiverMono receiverMono, System.String fieldIdName, ref T[] receiverArray, ref GorillaTag.GuidedRefs.GuidedRefReceiverArrayInfo arrayInfo)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class TIGuidedRefReceiverMono, class T>
    static void RegisterReceiverArray(TIGuidedRefReceiverMono receiverMono, ::StringW fieldIdName, ByRef<::ArrayW<T>> receiverArray, ByRef<::GorillaTag::GuidedRefs::GuidedRefReceiverArrayInfo> arrayInfo) {
      static_assert(std::is_convertible_v<std::remove_pointer_t<TIGuidedRefReceiverMono>, ::GorillaTag::GuidedRefs::IGuidedRefReceiverMono>);
      static_assert(std::is_convertible_v<T, ::UnityEngine::Object*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTag::GuidedRefs::GuidedRefHub::RegisterReceiverArray");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaTag.GuidedRefs", "GuidedRefHub", "RegisterReceiverArray", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TIGuidedRefReceiverMono>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(receiverMono), ::il2cpp_utils::ExtractType(fieldIdName), ::il2cpp_utils::ExtractType(receiverArray), ::il2cpp_utils::ExtractType(arrayInfo)})));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TIGuidedRefReceiverMono>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, receiverMono, fieldIdName, byref(receiverArray), byref(arrayInfo));
    }
    // static public System.Void UnregisterReceiver(TIGuidedRefReceiverMono receiverMono)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class TIGuidedRefReceiverMono>
    static void UnregisterReceiver(TIGuidedRefReceiverMono receiverMono) {
      static_assert(std::is_convertible_v<std::remove_pointer_t<TIGuidedRefReceiverMono>, ::GorillaTag::GuidedRefs::IGuidedRefReceiverMono>);
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTag::GuidedRefs::GuidedRefHub::UnregisterReceiver");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaTag.GuidedRefs", "GuidedRefHub", "UnregisterReceiver", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TIGuidedRefReceiverMono>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(receiverMono)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TIGuidedRefReceiverMono>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, receiverMono);
    }
    // private GorillaTag.GuidedRefs.Internal.RelayInfo GetOrAddRelayInfoByTargetId(GorillaTag.GuidedRefs.GuidedRefTargetIdSO targetId)
    // Offset: 0x28A8200
    ::GorillaTag::GuidedRefs::Internal::RelayInfo* GetOrAddRelayInfoByTargetId(::GorillaTag::GuidedRefs::GuidedRefTargetIdSO* targetId);
    // static public System.Collections.Generic.List`1<GorillaTag.GuidedRefs.GuidedRefHub> GetHubsThatHaveRegisteredInstId(System.Int32 instanceId)
    // Offset: 0x28A80DC
    static ::System::Collections::Generic::List_1<::GorillaTag::GuidedRefs::GuidedRefHub*>* GetHubsThatHaveRegisteredInstId(int instanceId);
    // static private System.Void ResolveReferences(GorillaTag.GuidedRefs.Internal.RelayInfo relayInfo)
    // Offset: 0x28A843C
    static void ResolveReferences(::GorillaTag::GuidedRefs::Internal::RelayInfo* relayInfo);
    // static public System.Boolean TryResolveField(TIGuidedRefReceiverMono receiverMono, ref T refReceiverObj, GorillaTag.GuidedRefs.GuidedRefReceiverFieldInfo receiverFieldInfo, GorillaTag.GuidedRefs.GuidedRefTryResolveInfo tryResolveInfo)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class TIGuidedRefReceiverMono, class T>
    static bool TryResolveField(TIGuidedRefReceiverMono receiverMono, ByRef<T> refReceiverObj, ::GorillaTag::GuidedRefs::GuidedRefReceiverFieldInfo receiverFieldInfo, ::GorillaTag::GuidedRefs::GuidedRefTryResolveInfo tryResolveInfo) {
      static_assert(std::is_convertible_v<std::remove_pointer_t<TIGuidedRefReceiverMono>, ::GorillaTag::GuidedRefs::IGuidedRefReceiverMono>);
      static_assert(std::is_convertible_v<T, ::UnityEngine::Object*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTag::GuidedRefs::GuidedRefHub::TryResolveField");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaTag.GuidedRefs", "GuidedRefHub", "TryResolveField", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TIGuidedRefReceiverMono>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(receiverMono), ::il2cpp_utils::ExtractType(refReceiverObj), ::il2cpp_utils::ExtractType(receiverFieldInfo), ::il2cpp_utils::ExtractType(tryResolveInfo)})));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TIGuidedRefReceiverMono>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, receiverMono, byref(refReceiverObj), receiverFieldInfo, tryResolveInfo);
    }
    // static public System.Boolean TryResolveArrayItem(TIGuidedRefReceiverMono receiverMono, System.Collections.Generic.IList`1<T> receivingArray, GorillaTag.GuidedRefs.GuidedRefReceiverArrayInfo receiverArrayInfo, GorillaTag.GuidedRefs.GuidedRefTryResolveInfo tryResolveInfo)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class TIGuidedRefReceiverMono, class T>
    static bool TryResolveArrayItem(TIGuidedRefReceiverMono receiverMono, ::System::Collections::Generic::IList_1<T>* receivingArray, ::GorillaTag::GuidedRefs::GuidedRefReceiverArrayInfo receiverArrayInfo, ::GorillaTag::GuidedRefs::GuidedRefTryResolveInfo tryResolveInfo) {
      static_assert(std::is_convertible_v<std::remove_pointer_t<TIGuidedRefReceiverMono>, ::GorillaTag::GuidedRefs::IGuidedRefReceiverMono>);
      static_assert(std::is_convertible_v<T, ::UnityEngine::Object*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTag::GuidedRefs::GuidedRefHub::TryResolveArrayItem");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaTag.GuidedRefs", "GuidedRefHub", "TryResolveArrayItem", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TIGuidedRefReceiverMono>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(receiverMono), ::il2cpp_utils::ExtractType(receivingArray), ::il2cpp_utils::ExtractType(receiverArrayInfo), ::il2cpp_utils::ExtractType(tryResolveInfo)})));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TIGuidedRefReceiverMono>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, receiverMono, receivingArray, receiverArrayInfo, tryResolveInfo);
    }
    // static public System.Boolean TryResolveArrayItem(TIGuidedRefReceiverMono receiverMono, System.Collections.Generic.IList`1<T> receivingArray, GorillaTag.GuidedRefs.GuidedRefReceiverArrayInfo receiverArrayInfo, GorillaTag.GuidedRefs.GuidedRefTryResolveInfo tryResolveInfo, out System.Boolean arrayResolved)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class TIGuidedRefReceiverMono, class T>
    static bool TryResolveArrayItem(TIGuidedRefReceiverMono receiverMono, ::System::Collections::Generic::IList_1<T>* receivingArray, ::GorillaTag::GuidedRefs::GuidedRefReceiverArrayInfo receiverArrayInfo, ::GorillaTag::GuidedRefs::GuidedRefTryResolveInfo tryResolveInfo, ByRef<bool> arrayResolved) {
      static_assert(std::is_convertible_v<std::remove_pointer_t<TIGuidedRefReceiverMono>, ::GorillaTag::GuidedRefs::IGuidedRefReceiverMono>);
      static_assert(std::is_convertible_v<T, ::UnityEngine::Object*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTag::GuidedRefs::GuidedRefHub::TryResolveArrayItem");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaTag.GuidedRefs", "GuidedRefHub", "TryResolveArrayItem", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TIGuidedRefReceiverMono>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(receiverMono), ::il2cpp_utils::ExtractType(receivingArray), ::il2cpp_utils::ExtractType(receiverArrayInfo), ::il2cpp_utils::ExtractType(tryResolveInfo), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TIGuidedRefReceiverMono>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, receiverMono, receivingArray, receiverArrayInfo, tryResolveInfo, byref(arrayResolved));
    }
    // static public System.String GetFieldNameByID(System.Int32 fieldId)
    // Offset: 0x28A8824
    static ::StringW GetFieldNameByID(int fieldId);
    // public System.Void .ctor()
    // Offset: 0x28A8864
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GuidedRefHub* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTag::GuidedRefs::GuidedRefHub::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GuidedRefHub*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x28A88F0
    static void _cctor();
    // private UnityEngine.Transform GorillaTag.GuidedRefs.IGuidedRefMonoBehaviour.get_transform()
    // Offset: 0x28A8B18
    ::UnityEngine::Transform* GorillaTag_GuidedRefs_IGuidedRefMonoBehaviour_get_transform();
    // private System.Int32 GorillaTag.GuidedRefs.IGuidedRefObject.GetInstanceID()
    // Offset: 0x28A8B20
    int GorillaTag_GuidedRefs_IGuidedRefObject_GetInstanceID();
  }; // GorillaTag.GuidedRefs.GuidedRefHub
  #pragma pack(pop)
  static check_size<sizeof(GuidedRefHub), 48 + sizeof(::System::Collections::Generic::Dictionary_2<::GorillaTag::GuidedRefs::GuidedRefTargetIdSO*, ::GorillaTag::GuidedRefs::Internal::RelayInfo*>*)> __GorillaTag_GuidedRefs_GuidedRefHubSizeCheck;
  static_assert(sizeof(GuidedRefHub) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GorillaTag::GuidedRefs::GuidedRefHub::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaTag::GuidedRefs::GuidedRefHub::*)()>(&GorillaTag::GuidedRefs::GuidedRefHub::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::GuidedRefs::GuidedRefHub*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaTag::GuidedRefs::GuidedRefHub::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaTag::GuidedRefs::GuidedRefHub::*)()>(&GorillaTag::GuidedRefs::GuidedRefHub::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::GuidedRefs::GuidedRefHub*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaTag::GuidedRefs::GuidedRefHub::GuidedRefInitialize
// Il2CppName: GuidedRefInitialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaTag::GuidedRefs::GuidedRefHub::*)()>(&GorillaTag::GuidedRefs::GuidedRefHub::GuidedRefInitialize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::GuidedRefs::GuidedRefHub*), "GuidedRefInitialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaTag::GuidedRefs::GuidedRefHub::IsInstanceIDRegisteredWithAnyHub
// Il2CppName: IsInstanceIDRegisteredWithAnyHub
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int)>(&GorillaTag::GuidedRefs::GuidedRefHub::IsInstanceIDRegisteredWithAnyHub)> {
  static const MethodInfo* get() {
    static auto* instanceID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::GuidedRefs::GuidedRefHub*), "IsInstanceIDRegisteredWithAnyHub", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{instanceID});
  }
};
// Writing MetadataGetter for method: GorillaTag::GuidedRefs::GuidedRefHub::RegisterTarget_Internal
// Il2CppName: RegisterTarget_Internal
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: GorillaTag::GuidedRefs::GuidedRefHub::RegisterTarget
// Il2CppName: RegisterTarget
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: GorillaTag::GuidedRefs::GuidedRefHub::UnregisterTarget
// Il2CppName: UnregisterTarget
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: GorillaTag::GuidedRefs::GuidedRefHub::ReceiverFullyRegistered
// Il2CppName: ReceiverFullyRegistered
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: GorillaTag::GuidedRefs::GuidedRefHub::CheckAndNotifyIfReceiverFullyResolved
// Il2CppName: CheckAndNotifyIfReceiverFullyResolved
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: GorillaTag::GuidedRefs::GuidedRefHub::RegisterReceiverField
// Il2CppName: RegisterReceiverField
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaTag::GuidedRefs::GuidedRefHub::*)(::GorillaTag::GuidedRefs::RegisteredReceiverFieldInfo, ::GorillaTag::GuidedRefs::GuidedRefTargetIdSO*)>(&GorillaTag::GuidedRefs::GuidedRefHub::RegisterReceiverField)> {
  static const MethodInfo* get() {
    static auto* registeredReceiverFieldInfo = &::il2cpp_utils::GetClassFromName("GorillaTag.GuidedRefs", "RegisteredReceiverFieldInfo")->byval_arg;
    static auto* targetId = &::il2cpp_utils::GetClassFromName("GorillaTag.GuidedRefs", "GuidedRefTargetIdSO")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::GuidedRefs::GuidedRefHub*), "RegisterReceiverField", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{registeredReceiverFieldInfo, targetId});
  }
};
// Writing MetadataGetter for method: GorillaTag::GuidedRefs::GuidedRefHub::RegisterReceiverField_Internal
// Il2CppName: RegisterReceiverField_Internal
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: GorillaTag::GuidedRefs::GuidedRefHub::RegisterReceiverField
// Il2CppName: RegisterReceiverField
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: GorillaTag::GuidedRefs::GuidedRefHub::RegisterReceiverArray
// Il2CppName: RegisterReceiverArray
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: GorillaTag::GuidedRefs::GuidedRefHub::UnregisterReceiver
// Il2CppName: UnregisterReceiver
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: GorillaTag::GuidedRefs::GuidedRefHub::GetOrAddRelayInfoByTargetId
// Il2CppName: GetOrAddRelayInfoByTargetId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GorillaTag::GuidedRefs::Internal::RelayInfo* (GorillaTag::GuidedRefs::GuidedRefHub::*)(::GorillaTag::GuidedRefs::GuidedRefTargetIdSO*)>(&GorillaTag::GuidedRefs::GuidedRefHub::GetOrAddRelayInfoByTargetId)> {
  static const MethodInfo* get() {
    static auto* targetId = &::il2cpp_utils::GetClassFromName("GorillaTag.GuidedRefs", "GuidedRefTargetIdSO")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::GuidedRefs::GuidedRefHub*), "GetOrAddRelayInfoByTargetId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{targetId});
  }
};
// Writing MetadataGetter for method: GorillaTag::GuidedRefs::GuidedRefHub::GetHubsThatHaveRegisteredInstId
// Il2CppName: GetHubsThatHaveRegisteredInstId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::GorillaTag::GuidedRefs::GuidedRefHub*>* (*)(int)>(&GorillaTag::GuidedRefs::GuidedRefHub::GetHubsThatHaveRegisteredInstId)> {
  static const MethodInfo* get() {
    static auto* instanceId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::GuidedRefs::GuidedRefHub*), "GetHubsThatHaveRegisteredInstId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{instanceId});
  }
};
// Writing MetadataGetter for method: GorillaTag::GuidedRefs::GuidedRefHub::ResolveReferences
// Il2CppName: ResolveReferences
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::GorillaTag::GuidedRefs::Internal::RelayInfo*)>(&GorillaTag::GuidedRefs::GuidedRefHub::ResolveReferences)> {
  static const MethodInfo* get() {
    static auto* relayInfo = &::il2cpp_utils::GetClassFromName("GorillaTag.GuidedRefs.Internal", "RelayInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::GuidedRefs::GuidedRefHub*), "ResolveReferences", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{relayInfo});
  }
};
// Writing MetadataGetter for method: GorillaTag::GuidedRefs::GuidedRefHub::TryResolveField
// Il2CppName: TryResolveField
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: GorillaTag::GuidedRefs::GuidedRefHub::TryResolveArrayItem
// Il2CppName: TryResolveArrayItem
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: GorillaTag::GuidedRefs::GuidedRefHub::TryResolveArrayItem
// Il2CppName: TryResolveArrayItem
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: GorillaTag::GuidedRefs::GuidedRefHub::GetFieldNameByID
// Il2CppName: GetFieldNameByID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(int)>(&GorillaTag::GuidedRefs::GuidedRefHub::GetFieldNameByID)> {
  static const MethodInfo* get() {
    static auto* fieldId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::GuidedRefs::GuidedRefHub*), "GetFieldNameByID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fieldId});
  }
};
// Writing MetadataGetter for method: GorillaTag::GuidedRefs::GuidedRefHub::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GorillaTag::GuidedRefs::GuidedRefHub::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GorillaTag::GuidedRefs::GuidedRefHub::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::GuidedRefs::GuidedRefHub*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaTag::GuidedRefs::GuidedRefHub::GorillaTag_GuidedRefs_IGuidedRefMonoBehaviour_get_transform
// Il2CppName: GorillaTag.GuidedRefs.IGuidedRefMonoBehaviour.get_transform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (GorillaTag::GuidedRefs::GuidedRefHub::*)()>(&GorillaTag::GuidedRefs::GuidedRefHub::GorillaTag_GuidedRefs_IGuidedRefMonoBehaviour_get_transform)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::GuidedRefs::GuidedRefHub*), "GorillaTag.GuidedRefs.IGuidedRefMonoBehaviour.get_transform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaTag::GuidedRefs::GuidedRefHub::GorillaTag_GuidedRefs_IGuidedRefObject_GetInstanceID
// Il2CppName: GorillaTag.GuidedRefs.IGuidedRefObject.GetInstanceID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GorillaTag::GuidedRefs::GuidedRefHub::*)()>(&GorillaTag::GuidedRefs::GuidedRefHub::GorillaTag_GuidedRefs_IGuidedRefObject_GetInstanceID)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::GuidedRefs::GuidedRefHub*), "GorillaTag.GuidedRefs.IGuidedRefObject.GetInstanceID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
