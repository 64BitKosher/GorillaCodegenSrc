// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
// Including type: GorillaTag.GuidedRefs.IGuidedRefObject
#include "GorillaTag/GuidedRefs/IGuidedRefObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: GorillaTag.GuidedRefs
namespace GorillaTag::GuidedRefs {
  // Forward declaring type: GuidedRefIdBaseSO
  class GuidedRefIdBaseSO;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GorillaTag::GuidedRefs::GuidedRefIdBaseSO);
DEFINE_IL2CPP_ARG_TYPE(::GorillaTag::GuidedRefs::GuidedRefIdBaseSO*, "GorillaTag.GuidedRefs", "GuidedRefIdBaseSO");
// Type namespace: GorillaTag.GuidedRefs
namespace GorillaTag::GuidedRefs {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: GorillaTag.GuidedRefs.GuidedRefIdBaseSO
  // [TokenAttribute] Offset: FFFFFFFF
  class GuidedRefIdBaseSO : public ::UnityEngine::ScriptableObject/*, public ::GorillaTag::GuidedRefs::IGuidedRefObject*/ {
    public:
    // Creating interface conversion operator: operator ::GorillaTag::GuidedRefs::IGuidedRefObject
    operator ::GorillaTag::GuidedRefs::IGuidedRefObject() noexcept {
      return *reinterpret_cast<::GorillaTag::GuidedRefs::IGuidedRefObject*>(this);
    }
    // public System.Void GuidedRefInitialize()
    // Offset: 0x28A8B38
    void GuidedRefInitialize();
    // protected System.Void .ctor()
    // Offset: 0x28A8B30
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GuidedRefIdBaseSO* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTag::GuidedRefs::GuidedRefIdBaseSO::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GuidedRefIdBaseSO*, creationType>()));
    }
    // private System.Int32 GorillaTag.GuidedRefs.IGuidedRefObject.GetInstanceID()
    // Offset: 0x28A8B3C
    int GorillaTag_GuidedRefs_IGuidedRefObject_GetInstanceID();
  }; // GorillaTag.GuidedRefs.GuidedRefIdBaseSO
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GorillaTag::GuidedRefs::GuidedRefIdBaseSO::GuidedRefInitialize
// Il2CppName: GuidedRefInitialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaTag::GuidedRefs::GuidedRefIdBaseSO::*)()>(&GorillaTag::GuidedRefs::GuidedRefIdBaseSO::GuidedRefInitialize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::GuidedRefs::GuidedRefIdBaseSO*), "GuidedRefInitialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaTag::GuidedRefs::GuidedRefIdBaseSO::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GorillaTag::GuidedRefs::GuidedRefIdBaseSO::GorillaTag_GuidedRefs_IGuidedRefObject_GetInstanceID
// Il2CppName: GorillaTag.GuidedRefs.IGuidedRefObject.GetInstanceID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GorillaTag::GuidedRefs::GuidedRefIdBaseSO::*)()>(&GorillaTag::GuidedRefs::GuidedRefIdBaseSO::GorillaTag_GuidedRefs_IGuidedRefObject_GetInstanceID)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::GuidedRefs::GuidedRefIdBaseSO*), "GorillaTag.GuidedRefs.IGuidedRefObject.GetInstanceID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
