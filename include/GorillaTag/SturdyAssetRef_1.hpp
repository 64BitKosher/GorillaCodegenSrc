// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Object
  class Object;
}
// Completed forward declares
// Type namespace: GorillaTag
namespace GorillaTag {
  // Forward declaring type: SturdyAssetRef`1<T>
  template<typename T>
  struct SturdyAssetRef_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_STRUCT(::GorillaTag::SturdyAssetRef_1, "GorillaTag", "SturdyAssetRef`1");
// Type namespace: GorillaTag
namespace GorillaTag {
  // WARNING Size may be invalid!
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: GorillaTag.SturdyAssetRef`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename T>
  struct SturdyAssetRef_1/*, public ::System::ValueType*/ {
    public:
    public:
    // private T _obj
    // Size: 0xFFFFFFFF
    // Offset: 0x0
    T obj;
    public:
    // Creating value type constructor for type: SturdyAssetRef_1
    constexpr SturdyAssetRef_1(T obj_ = {}) noexcept : obj{obj_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Autogenerated instance field getter
    // Get instance field: private T _obj
    [[deprecated("Use field access instead!")]] T& dyn__obj() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTag::SturdyAssetRef_1::dyn__obj");
      auto ___internal__instance = *this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_obj"))->offset;
      return *reinterpret_cast<T*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // public T get_obj()
    // Offset: 0xFFFFFFFFFFFFFFFF
    T get_obj() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTag::SturdyAssetRef_1::get_obj");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_obj", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(this, ___internal__method);
    }
    // public System.Void set_obj(T value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_obj(T value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTag::SturdyAssetRef_1::set_obj");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_obj", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
  }; // GorillaTag.SturdyAssetRef`1
  // Could not write size check! Type: GorillaTag.SturdyAssetRef`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
