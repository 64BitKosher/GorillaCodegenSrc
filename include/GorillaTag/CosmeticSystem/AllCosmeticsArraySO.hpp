// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GorillaTag::CosmeticSystem
namespace GorillaTag::CosmeticSystem {
  // Forward declaring type: CosmeticSO
  class CosmeticSO;
}
// Completed forward declares
// Type namespace: GorillaTag.CosmeticSystem
namespace GorillaTag::CosmeticSystem {
  // Forward declaring type: AllCosmeticsArraySO
  class AllCosmeticsArraySO;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GorillaTag::CosmeticSystem::AllCosmeticsArraySO);
DEFINE_IL2CPP_ARG_TYPE(::GorillaTag::CosmeticSystem::AllCosmeticsArraySO*, "GorillaTag.CosmeticSystem", "AllCosmeticsArraySO");
// Type namespace: GorillaTag.CosmeticSystem
namespace GorillaTag::CosmeticSystem {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: GorillaTag.CosmeticSystem.AllCosmeticsArraySO
  // [TokenAttribute] Offset: FFFFFFFF
  class AllCosmeticsArraySO : public ::UnityEngine::ScriptableObject {
    public:
    public:
    // GorillaTag.CosmeticSystem.CosmeticSO[] cosmetics
    // Size: 0x8
    // Offset: 0x18
    ::ArrayW<::GorillaTag::CosmeticSystem::CosmeticSO*> cosmetics;
    // Field size check
    static_assert(sizeof(::ArrayW<::GorillaTag::CosmeticSystem::CosmeticSO*>) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: GorillaTag.CosmeticSystem.CosmeticSO[] cosmetics
    [[deprecated("Use field access instead!")]] ::ArrayW<::GorillaTag::CosmeticSystem::CosmeticSO*>& dyn_cosmetics();
    // public System.Void .ctor()
    // Offset: 0x28AA3E0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AllCosmeticsArraySO* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTag::CosmeticSystem::AllCosmeticsArraySO::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AllCosmeticsArraySO*, creationType>()));
    }
  }; // GorillaTag.CosmeticSystem.AllCosmeticsArraySO
  #pragma pack(pop)
  static check_size<sizeof(AllCosmeticsArraySO), 24 + sizeof(::ArrayW<::GorillaTag::CosmeticSystem::CosmeticSO*>)> __GorillaTag_CosmeticSystem_AllCosmeticsArraySOSizeCheck;
  static_assert(sizeof(AllCosmeticsArraySO) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GorillaTag::CosmeticSystem::AllCosmeticsArraySO::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
