// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: GorillaTag.CosmeticSystem.CosmeticAnchorAntiClipEntry
#include "GorillaTag/CosmeticSystem/CosmeticAnchorAntiClipEntry.hpp"
// Completed includes
// Type namespace: GorillaTag.CosmeticSystem
namespace GorillaTag::CosmeticSystem {
  // Forward declaring type: CosmeticAnchorAntiIntersectOffsets
  struct CosmeticAnchorAntiIntersectOffsets;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GorillaTag::CosmeticSystem::CosmeticAnchorAntiIntersectOffsets, "GorillaTag.CosmeticSystem", "CosmeticAnchorAntiIntersectOffsets");
// Type namespace: GorillaTag.CosmeticSystem
namespace GorillaTag::CosmeticSystem {
  // Size: 0xDC
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: GorillaTag.CosmeticSystem.CosmeticAnchorAntiIntersectOffsets
  // [TokenAttribute] Offset: FFFFFFFF
  struct CosmeticAnchorAntiIntersectOffsets/*, public ::System::ValueType*/ {
    public:
    public:
    // public GorillaTag.CosmeticSystem.CosmeticAnchorAntiClipEntry nameTag
    // Size: 0x2C
    // Offset: 0x0
    ::GorillaTag::CosmeticSystem::CosmeticAnchorAntiClipEntry nameTag;
    // Field size check
    static_assert(sizeof(::GorillaTag::CosmeticSystem::CosmeticAnchorAntiClipEntry) == 0x2C);
    // public GorillaTag.CosmeticSystem.CosmeticAnchorAntiClipEntry leftArm
    // Size: 0x2C
    // Offset: 0x2C
    ::GorillaTag::CosmeticSystem::CosmeticAnchorAntiClipEntry leftArm;
    // Field size check
    static_assert(sizeof(::GorillaTag::CosmeticSystem::CosmeticAnchorAntiClipEntry) == 0x2C);
    // public GorillaTag.CosmeticSystem.CosmeticAnchorAntiClipEntry rightArm
    // Size: 0x2C
    // Offset: 0x58
    ::GorillaTag::CosmeticSystem::CosmeticAnchorAntiClipEntry rightArm;
    // Field size check
    static_assert(sizeof(::GorillaTag::CosmeticSystem::CosmeticAnchorAntiClipEntry) == 0x2C);
    // public GorillaTag.CosmeticSystem.CosmeticAnchorAntiClipEntry chest
    // Size: 0x2C
    // Offset: 0x84
    ::GorillaTag::CosmeticSystem::CosmeticAnchorAntiClipEntry chest;
    // Field size check
    static_assert(sizeof(::GorillaTag::CosmeticSystem::CosmeticAnchorAntiClipEntry) == 0x2C);
    // public GorillaTag.CosmeticSystem.CosmeticAnchorAntiClipEntry huntComputer
    // Size: 0x2C
    // Offset: 0xB0
    ::GorillaTag::CosmeticSystem::CosmeticAnchorAntiClipEntry huntComputer;
    // Field size check
    static_assert(sizeof(::GorillaTag::CosmeticSystem::CosmeticAnchorAntiClipEntry) == 0x2C);
    public:
    // Creating value type constructor for type: CosmeticAnchorAntiIntersectOffsets
    constexpr CosmeticAnchorAntiIntersectOffsets(::GorillaTag::CosmeticSystem::CosmeticAnchorAntiClipEntry nameTag_ = {}, ::GorillaTag::CosmeticSystem::CosmeticAnchorAntiClipEntry leftArm_ = {}, ::GorillaTag::CosmeticSystem::CosmeticAnchorAntiClipEntry rightArm_ = {}, ::GorillaTag::CosmeticSystem::CosmeticAnchorAntiClipEntry chest_ = {}, ::GorillaTag::CosmeticSystem::CosmeticAnchorAntiClipEntry huntComputer_ = {}) noexcept : nameTag{nameTag_}, leftArm{leftArm_}, rightArm{rightArm_}, chest{chest_}, huntComputer{huntComputer_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public GorillaTag.CosmeticSystem.CosmeticAnchorAntiClipEntry nameTag
    [[deprecated("Use field access instead!")]] ::GorillaTag::CosmeticSystem::CosmeticAnchorAntiClipEntry& dyn_nameTag();
    // Get instance field reference: public GorillaTag.CosmeticSystem.CosmeticAnchorAntiClipEntry leftArm
    [[deprecated("Use field access instead!")]] ::GorillaTag::CosmeticSystem::CosmeticAnchorAntiClipEntry& dyn_leftArm();
    // Get instance field reference: public GorillaTag.CosmeticSystem.CosmeticAnchorAntiClipEntry rightArm
    [[deprecated("Use field access instead!")]] ::GorillaTag::CosmeticSystem::CosmeticAnchorAntiClipEntry& dyn_rightArm();
    // Get instance field reference: public GorillaTag.CosmeticSystem.CosmeticAnchorAntiClipEntry chest
    [[deprecated("Use field access instead!")]] ::GorillaTag::CosmeticSystem::CosmeticAnchorAntiClipEntry& dyn_chest();
    // Get instance field reference: public GorillaTag.CosmeticSystem.CosmeticAnchorAntiClipEntry huntComputer
    [[deprecated("Use field access instead!")]] ::GorillaTag::CosmeticSystem::CosmeticAnchorAntiClipEntry& dyn_huntComputer();
  }; // GorillaTag.CosmeticSystem.CosmeticAnchorAntiIntersectOffsets
  #pragma pack(pop)
  static check_size<sizeof(CosmeticAnchorAntiIntersectOffsets), 176 + sizeof(::GorillaTag::CosmeticSystem::CosmeticAnchorAntiClipEntry)> __GorillaTag_CosmeticSystem_CosmeticAnchorAntiIntersectOffsetsSizeCheck;
  static_assert(sizeof(CosmeticAnchorAntiIntersectOffsets) == 0xDC);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
