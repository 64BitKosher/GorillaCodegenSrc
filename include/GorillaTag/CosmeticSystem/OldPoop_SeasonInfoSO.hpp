// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
}
// Completed forward declares
// Type namespace: GorillaTag.CosmeticSystem
namespace GorillaTag::CosmeticSystem {
  // Forward declaring type: OldPoop_SeasonInfoSO
  class OldPoop_SeasonInfoSO;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GorillaTag::CosmeticSystem::OldPoop_SeasonInfoSO);
DEFINE_IL2CPP_ARG_TYPE(::GorillaTag::CosmeticSystem::OldPoop_SeasonInfoSO*, "GorillaTag.CosmeticSystem", "OldPoop_SeasonInfoSO");
// Type namespace: GorillaTag.CosmeticSystem
namespace GorillaTag::CosmeticSystem {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: GorillaTag.CosmeticSystem.OldPoop_SeasonInfoSO
  // [TokenAttribute] Offset: FFFFFFFF
  // [CreateAssetMenuAttribute] Offset: FFFFFFFF
  class OldPoop_SeasonInfoSO : public ::UnityEngine::ScriptableObject {
    public:
    public:
    // public System.String displayName
    // Size: 0x8
    // Offset: 0x18
    ::StringW displayName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String _releaseDateString
    // Size: 0x8
    // Offset: 0x20
    ::StringW releaseDateString;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.DateTime releaseDate
    // Size: 0x8
    // Offset: 0x28
    ::System::DateTime releaseDate;
    // Field size check
    static_assert(sizeof(::System::DateTime) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // static field const value: static private System.String kDateFormat
    static constexpr const char* kDateFormat = "yyyy-MM-dd";
    // Get static field: static private System.String kDateFormat
    static ::StringW _get_kDateFormat();
    // Set static field: static private System.String kDateFormat
    static void _set_kDateFormat(::StringW value);
    // Get instance field reference: public System.String displayName
    [[deprecated("Use field access instead!")]] ::StringW& dyn_displayName();
    // Get instance field reference: private System.String _releaseDateString
    [[deprecated("Use field access instead!")]] ::StringW& dyn__releaseDateString();
    // Get instance field reference: public System.DateTime releaseDate
    [[deprecated("Use field access instead!")]] ::System::DateTime& dyn_releaseDate();
    // private System.String get_LogPrefix()
    // Offset: 0x28AD3F0
    ::StringW get_LogPrefix();
    // protected System.Void Awake()
    // Offset: 0x28AD46C
    void Awake();
    // private System.Boolean TryParseReleaseDate()
    // Offset: 0x28AD53C
    bool TryParseReleaseDate();
    // private System.String GetDateParseErrorMsg()
    // Offset: 0x28AD668
    ::StringW GetDateParseErrorMsg();
    // public System.Void .ctor()
    // Offset: 0x28AD6D4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static OldPoop_SeasonInfoSO* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTag::CosmeticSystem::OldPoop_SeasonInfoSO::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<OldPoop_SeasonInfoSO*, creationType>()));
    }
  }; // GorillaTag.CosmeticSystem.OldPoop_SeasonInfoSO
  #pragma pack(pop)
  static check_size<sizeof(OldPoop_SeasonInfoSO), 40 + sizeof(::System::DateTime)> __GorillaTag_CosmeticSystem_OldPoop_SeasonInfoSOSizeCheck;
  static_assert(sizeof(OldPoop_SeasonInfoSO) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GorillaTag::CosmeticSystem::OldPoop_SeasonInfoSO::get_LogPrefix
// Il2CppName: get_LogPrefix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GorillaTag::CosmeticSystem::OldPoop_SeasonInfoSO::*)()>(&GorillaTag::CosmeticSystem::OldPoop_SeasonInfoSO::get_LogPrefix)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::CosmeticSystem::OldPoop_SeasonInfoSO*), "get_LogPrefix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaTag::CosmeticSystem::OldPoop_SeasonInfoSO::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaTag::CosmeticSystem::OldPoop_SeasonInfoSO::*)()>(&GorillaTag::CosmeticSystem::OldPoop_SeasonInfoSO::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::CosmeticSystem::OldPoop_SeasonInfoSO*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaTag::CosmeticSystem::OldPoop_SeasonInfoSO::TryParseReleaseDate
// Il2CppName: TryParseReleaseDate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GorillaTag::CosmeticSystem::OldPoop_SeasonInfoSO::*)()>(&GorillaTag::CosmeticSystem::OldPoop_SeasonInfoSO::TryParseReleaseDate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::CosmeticSystem::OldPoop_SeasonInfoSO*), "TryParseReleaseDate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaTag::CosmeticSystem::OldPoop_SeasonInfoSO::GetDateParseErrorMsg
// Il2CppName: GetDateParseErrorMsg
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GorillaTag::CosmeticSystem::OldPoop_SeasonInfoSO::*)()>(&GorillaTag::CosmeticSystem::OldPoop_SeasonInfoSO::GetDateParseErrorMsg)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::CosmeticSystem::OldPoop_SeasonInfoSO*), "GetDateParseErrorMsg", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaTag::CosmeticSystem::OldPoop_SeasonInfoSO::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
