// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
// Including type: GorillaTag.CosmeticSystem.CosmeticInfoV2
#include "GorillaTag/CosmeticSystem/CosmeticInfoV2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: GorillaTag.CosmeticSystem
namespace GorillaTag::CosmeticSystem {
  // Forward declaring type: CosmeticSO
  class CosmeticSO;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GorillaTag::CosmeticSystem::CosmeticSO);
DEFINE_IL2CPP_ARG_TYPE(::GorillaTag::CosmeticSystem::CosmeticSO*, "GorillaTag.CosmeticSystem", "CosmeticSO");
// Type namespace: GorillaTag.CosmeticSystem
namespace GorillaTag::CosmeticSystem {
  // WARNING Size may be invalid!
  // Autogenerated type: GorillaTag.CosmeticSystem.CosmeticSO
  // [TokenAttribute] Offset: FFFFFFFF
  // [CreateAssetMenuAttribute] Offset: FFFFFFFF
  class CosmeticSO : public ::UnityEngine::ScriptableObject {
    public:
    public:
    // public GorillaTag.CosmeticSystem.CosmeticInfoV2 info
    // Size: 0xFFFFFFFF
    // Offset: 0x18
    ::GorillaTag::CosmeticSystem::CosmeticInfoV2 info;
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public GorillaTag.CosmeticSystem.CosmeticInfoV2 info
    [[deprecated("Use field access instead!")]] ::GorillaTag::CosmeticSystem::CosmeticInfoV2& dyn_info();
    // public System.Void OnEnable()
    // Offset: 0x28AA544
    void OnEnable();
    // public System.Void .ctor()
    // Offset: 0x28AA568
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CosmeticSO* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTag::CosmeticSystem::CosmeticSO::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CosmeticSO*, creationType>()));
    }
  }; // GorillaTag.CosmeticSystem.CosmeticSO
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GorillaTag::CosmeticSystem::CosmeticSO::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaTag::CosmeticSystem::CosmeticSO::*)()>(&GorillaTag::CosmeticSystem::CosmeticSO::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::CosmeticSystem::CosmeticSO*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaTag::CosmeticSystem::CosmeticSO::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
