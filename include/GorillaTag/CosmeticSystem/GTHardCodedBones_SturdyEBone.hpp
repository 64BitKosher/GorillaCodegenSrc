// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: GorillaTag.CosmeticSystem.GTHardCodedBones
#include "GorillaTag/CosmeticSystem/GTHardCodedBones.hpp"
// Including type: UnityEngine.ISerializationCallbackReceiver
#include "UnityEngine/ISerializationCallbackReceiver.hpp"
// Including type: GorillaTag.CosmeticSystem.GTHardCodedBones/EBone
#include "GorillaTag/CosmeticSystem/GTHardCodedBones_EBone.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GorillaTag::CosmeticSystem::GTHardCodedBones::SturdyEBone, "GorillaTag.CosmeticSystem", "GTHardCodedBones/SturdyEBone");
// Type namespace: GorillaTag.CosmeticSystem
namespace GorillaTag::CosmeticSystem {
  // Size: 0x10
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: GorillaTag.CosmeticSystem.GTHardCodedBones/SturdyEBone
  // [TokenAttribute] Offset: FFFFFFFF
  struct GTHardCodedBones::SturdyEBone/*, public ::System::ValueType, public ::UnityEngine::ISerializationCallbackReceiver*/ {
    public:
    public:
    // private GorillaTag.CosmeticSystem.GTHardCodedBones/EBone _bone
    // Size: 0x4
    // Offset: 0x0
    ::GorillaTag::CosmeticSystem::GTHardCodedBones::EBone bone;
    // Field size check
    static_assert(sizeof(::GorillaTag::CosmeticSystem::GTHardCodedBones::EBone) == 0x4);
    // Padding between fields: bone and: boneName
    char __padding0[0x4] = {};
    // private System.String _boneName
    // Size: 0x8
    // Offset: 0x8
    ::StringW boneName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Creating value type constructor for type: SturdyEBone
    constexpr SturdyEBone(::GorillaTag::CosmeticSystem::GTHardCodedBones::EBone bone_ = {}, ::StringW boneName_ = {}) noexcept : bone{bone_}, boneName{boneName_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::ISerializationCallbackReceiver
    operator ::UnityEngine::ISerializationCallbackReceiver() noexcept {
      return *reinterpret_cast<::UnityEngine::ISerializationCallbackReceiver*>(this);
    }
    // Get instance field reference: private GorillaTag.CosmeticSystem.GTHardCodedBones/EBone _bone
    [[deprecated("Use field access instead!")]] ::GorillaTag::CosmeticSystem::GTHardCodedBones::EBone& dyn__bone();
    // Get instance field reference: private System.String _boneName
    [[deprecated("Use field access instead!")]] ::StringW& dyn__boneName();
    // public GorillaTag.CosmeticSystem.GTHardCodedBones/EBone get_Bone()
    // Offset: 0x28ACEF4
    ::GorillaTag::CosmeticSystem::GTHardCodedBones::EBone get_Bone();
    // public System.Void set_Bone(GorillaTag.CosmeticSystem.GTHardCodedBones/EBone value)
    // Offset: 0x28ACEFC
    void set_Bone(::GorillaTag::CosmeticSystem::GTHardCodedBones::EBone value);
    // public System.String get_BoneName()
    // Offset: 0x28ACFF0
    ::StringW get_BoneName();
    // public System.Void set_BoneName(System.String value)
    // Offset: 0x28ACFF8
    void set_BoneName(::StringW value);
    // public System.Void .ctor(GorillaTag.CosmeticSystem.GTHardCodedBones/EBone bone)
    // Offset: 0x28AD0AC
    SturdyEBone(::GorillaTag::CosmeticSystem::GTHardCodedBones::EBone bone);
    // public System.Void .ctor(System.String boneName)
    // Offset: 0x28AD1A0
    SturdyEBone(::StringW boneName);
    // static public System.Int32 op_Explicit(GorillaTag.CosmeticSystem.GTHardCodedBones/SturdyEBone sturdyBone)
    // Offset: 0x28AD274
    explicit operator int();
    // private System.Void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
    // Offset: 0x28AD280
    void UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize();
    // private System.Void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
    // Offset: 0x28AD284
    void UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize();
    // public override System.String ToString()
    // Offset: 0x28AD278
    // Implemented from: System.ValueType
    // Base method: System.String ValueType::ToString()
    ::StringW ToString();
  }; // GorillaTag.CosmeticSystem.GTHardCodedBones/SturdyEBone
  #pragma pack(pop)
  static check_size<sizeof(GTHardCodedBones::SturdyEBone), 8 + sizeof(::StringW)> __GorillaTag_CosmeticSystem_GTHardCodedBones_SturdyEBoneSizeCheck;
  static_assert(sizeof(GTHardCodedBones::SturdyEBone) == 0x10);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GorillaTag::CosmeticSystem::GTHardCodedBones::SturdyEBone::get_Bone
// Il2CppName: get_Bone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GorillaTag::CosmeticSystem::GTHardCodedBones::EBone (GorillaTag::CosmeticSystem::GTHardCodedBones::SturdyEBone::*)()>(&GorillaTag::CosmeticSystem::GTHardCodedBones::SturdyEBone::get_Bone)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::CosmeticSystem::GTHardCodedBones::SturdyEBone), "get_Bone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaTag::CosmeticSystem::GTHardCodedBones::SturdyEBone::set_Bone
// Il2CppName: set_Bone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaTag::CosmeticSystem::GTHardCodedBones::SturdyEBone::*)(::GorillaTag::CosmeticSystem::GTHardCodedBones::EBone)>(&GorillaTag::CosmeticSystem::GTHardCodedBones::SturdyEBone::set_Bone)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("GorillaTag.CosmeticSystem", "GTHardCodedBones/EBone")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::CosmeticSystem::GTHardCodedBones::SturdyEBone), "set_Bone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GorillaTag::CosmeticSystem::GTHardCodedBones::SturdyEBone::get_BoneName
// Il2CppName: get_BoneName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GorillaTag::CosmeticSystem::GTHardCodedBones::SturdyEBone::*)()>(&GorillaTag::CosmeticSystem::GTHardCodedBones::SturdyEBone::get_BoneName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::CosmeticSystem::GTHardCodedBones::SturdyEBone), "get_BoneName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaTag::CosmeticSystem::GTHardCodedBones::SturdyEBone::set_BoneName
// Il2CppName: set_BoneName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaTag::CosmeticSystem::GTHardCodedBones::SturdyEBone::*)(::StringW)>(&GorillaTag::CosmeticSystem::GTHardCodedBones::SturdyEBone::set_BoneName)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::CosmeticSystem::GTHardCodedBones::SturdyEBone), "set_BoneName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GorillaTag::CosmeticSystem::GTHardCodedBones::SturdyEBone::SturdyEBone
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GorillaTag::CosmeticSystem::GTHardCodedBones::SturdyEBone::SturdyEBone
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GorillaTag::CosmeticSystem::GTHardCodedBones::SturdyEBone::operator int
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: GorillaTag::CosmeticSystem::GTHardCodedBones::SturdyEBone::UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize
// Il2CppName: UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaTag::CosmeticSystem::GTHardCodedBones::SturdyEBone::*)()>(&GorillaTag::CosmeticSystem::GTHardCodedBones::SturdyEBone::UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::CosmeticSystem::GTHardCodedBones::SturdyEBone), "UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaTag::CosmeticSystem::GTHardCodedBones::SturdyEBone::UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize
// Il2CppName: UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaTag::CosmeticSystem::GTHardCodedBones::SturdyEBone::*)()>(&GorillaTag::CosmeticSystem::GTHardCodedBones::SturdyEBone::UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::CosmeticSystem::GTHardCodedBones::SturdyEBone), "UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaTag::CosmeticSystem::GTHardCodedBones::SturdyEBone::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GorillaTag::CosmeticSystem::GTHardCodedBones::SturdyEBone::*)()>(&GorillaTag::CosmeticSystem::GTHardCodedBones::SturdyEBone::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::CosmeticSystem::GTHardCodedBones::SturdyEBone), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
