// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: StringEnum`1
#include "GlobalNamespace/StringEnum_1.hpp"
// Including type: GorillaTag.CosmeticSystem.ECosmeticSelectSide
#include "GorillaTag/CosmeticSystem/ECosmeticSelectSide.hpp"
// Including type: GorillaTag.CosmeticSystem.GTHardCodedBones/SturdyEBone
#include "GorillaTag/CosmeticSystem/GTHardCodedBones_SturdyEBone.hpp"
// Including type: GorillaTag.XformOffset
#include "GorillaTag/XformOffset.hpp"
// Completed includes
// Type namespace: GorillaTag.CosmeticSystem
namespace GorillaTag::CosmeticSystem {
  // Forward declaring type: CosmeticAttachInfo
  struct CosmeticAttachInfo;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GorillaTag::CosmeticSystem::CosmeticAttachInfo, "GorillaTag.CosmeticSystem", "CosmeticAttachInfo");
// Type namespace: GorillaTag.CosmeticSystem
namespace GorillaTag::CosmeticSystem {
  // WARNING Size may be invalid!
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: GorillaTag.CosmeticSystem.CosmeticAttachInfo
  // [TokenAttribute] Offset: FFFFFFFF
  struct CosmeticAttachInfo/*, public ::System::ValueType*/ {
    public:
    public:
    // public StringEnum`1<GorillaTag.CosmeticSystem.ECosmeticSelectSide> selectSide
    // Size: 0xFFFFFFFF
    // Offset: 0x0
    ::GlobalNamespace::StringEnum_1<::GorillaTag::CosmeticSystem::ECosmeticSelectSide> selectSide;
    // public GorillaTag.CosmeticSystem.GTHardCodedBones/SturdyEBone parentBone
    // Size: 0x10
    // Offset: 0x8
    ::GorillaTag::CosmeticSystem::GTHardCodedBones::SturdyEBone parentBone;
    // Field size check
    static_assert(sizeof(::GorillaTag::CosmeticSystem::GTHardCodedBones::SturdyEBone) == 0x10);
    // public GorillaTag.XformOffset offset
    // Size: 0x28
    // Offset: 0x18
    ::GorillaTag::XformOffset offset;
    // Field size check
    static_assert(sizeof(::GorillaTag::XformOffset) == 0x28);
    public:
    // Creating value type constructor for type: CosmeticAttachInfo
    constexpr CosmeticAttachInfo(::GlobalNamespace::StringEnum_1<::GorillaTag::CosmeticSystem::ECosmeticSelectSide> selectSide_ = {}, ::GorillaTag::CosmeticSystem::GTHardCodedBones::SturdyEBone parentBone_ = {}, ::GorillaTag::XformOffset offset_ = {}) noexcept : selectSide{selectSide_}, parentBone{parentBone_}, offset{offset_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public StringEnum`1<GorillaTag.CosmeticSystem.ECosmeticSelectSide> selectSide
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::StringEnum_1<::GorillaTag::CosmeticSystem::ECosmeticSelectSide>& dyn_selectSide();
    // Get instance field reference: public GorillaTag.CosmeticSystem.GTHardCodedBones/SturdyEBone parentBone
    [[deprecated("Use field access instead!")]] ::GorillaTag::CosmeticSystem::GTHardCodedBones::SturdyEBone& dyn_parentBone();
    // Get instance field reference: public GorillaTag.XformOffset offset
    [[deprecated("Use field access instead!")]] ::GorillaTag::XformOffset& dyn_offset();
  }; // GorillaTag.CosmeticSystem.CosmeticAttachInfo
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
