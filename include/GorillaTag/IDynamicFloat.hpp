// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Type namespace: GorillaTag
namespace GorillaTag {
  // Forward declaring type: IDynamicFloat
  class IDynamicFloat;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GorillaTag::IDynamicFloat);
DEFINE_IL2CPP_ARG_TYPE(::GorillaTag::IDynamicFloat*, "GorillaTag", "IDynamicFloat");
// Type namespace: GorillaTag
namespace GorillaTag {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: GorillaTag.IDynamicFloat
  // [TokenAttribute] Offset: FFFFFFFF
  class IDynamicFloat {
    public:
    // public System.Single get_floatValue()
    // Offset: 0xFFFFFFFFFFFFFFFF
    float get_floatValue();
  }; // GorillaTag.IDynamicFloat
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GorillaTag::IDynamicFloat::get_floatValue
// Il2CppName: get_floatValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (GorillaTag::IDynamicFloat::*)()>(&GorillaTag::IDynamicFloat::get_floatValue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::IDynamicFloat*), "get_floatValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
