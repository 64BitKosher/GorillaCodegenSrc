// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: GorillaTag
namespace GorillaTag {
  // Forward declaring type: ButtonColorSettings
  class ButtonColorSettings;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GorillaTag::ButtonColorSettings);
DEFINE_IL2CPP_ARG_TYPE(::GorillaTag::ButtonColorSettings*, "GorillaTag", "ButtonColorSettings");
// Type namespace: GorillaTag
namespace GorillaTag {
  // Size: 0x3C
  #pragma pack(push, 1)
  // Autogenerated type: GorillaTag.ButtonColorSettings
  // [TokenAttribute] Offset: FFFFFFFF
  // [CreateAssetMenuAttribute] Offset: FFFFFFFF
  class ButtonColorSettings : public ::UnityEngine::ScriptableObject {
    public:
    public:
    // public UnityEngine.Color UnpressedColor
    // Size: 0x10
    // Offset: 0x18
    ::UnityEngine::Color UnpressedColor;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // public UnityEngine.Color PressedColor
    // Size: 0x10
    // Offset: 0x28
    ::UnityEngine::Color PressedColor;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // public System.Single PressedTime
    // Size: 0x4
    // Offset: 0x38
    float PressedTime;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public UnityEngine.Color UnpressedColor
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_UnpressedColor();
    // Get instance field reference: public UnityEngine.Color PressedColor
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_PressedColor();
    // Get instance field reference: public System.Single PressedTime
    [[deprecated("Use field access instead!")]] float& dyn_PressedTime();
    // public System.Void .ctor()
    // Offset: 0x28A05EC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ButtonColorSettings* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTag::ButtonColorSettings::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ButtonColorSettings*, creationType>()));
    }
  }; // GorillaTag.ButtonColorSettings
  #pragma pack(pop)
  static check_size<sizeof(ButtonColorSettings), 56 + sizeof(float)> __GorillaTag_ButtonColorSettingsSizeCheck;
  static_assert(sizeof(ButtonColorSettings) == 0x3C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GorillaTag::ButtonColorSettings::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
