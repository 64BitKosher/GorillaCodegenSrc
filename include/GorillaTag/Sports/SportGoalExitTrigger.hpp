// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GorillaTag::Sports
namespace GorillaTag::Sports {
  // Forward declaring type: SportGoalTrigger
  class SportGoalTrigger;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Collider
  class Collider;
}
// Completed forward declares
// Type namespace: GorillaTag.Sports
namespace GorillaTag::Sports {
  // Forward declaring type: SportGoalExitTrigger
  class SportGoalExitTrigger;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GorillaTag::Sports::SportGoalExitTrigger);
DEFINE_IL2CPP_ARG_TYPE(::GorillaTag::Sports::SportGoalExitTrigger*, "GorillaTag.Sports", "SportGoalExitTrigger");
// Type namespace: GorillaTag.Sports
namespace GorillaTag::Sports {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: GorillaTag.Sports.SportGoalExitTrigger
  // [TokenAttribute] Offset: FFFFFFFF
  class SportGoalExitTrigger : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private GorillaTag.Sports.SportGoalTrigger goalTrigger
    // Size: 0x8
    // Offset: 0x20
    ::GorillaTag::Sports::SportGoalTrigger* goalTrigger;
    // Field size check
    static_assert(sizeof(::GorillaTag::Sports::SportGoalTrigger*) == 0x8);
    public:
    // Get instance field reference: private GorillaTag.Sports.SportGoalTrigger goalTrigger
    [[deprecated("Use field access instead!")]] ::GorillaTag::Sports::SportGoalTrigger*& dyn_goalTrigger();
    // private System.Void OnTriggerExit(UnityEngine.Collider other)
    // Offset: 0x28A05FC
    void OnTriggerExit(::UnityEngine::Collider* other);
    // public System.Void .ctor()
    // Offset: 0x28A0764
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SportGoalExitTrigger* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTag::Sports::SportGoalExitTrigger::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SportGoalExitTrigger*, creationType>()));
    }
  }; // GorillaTag.Sports.SportGoalExitTrigger
  #pragma pack(pop)
  static check_size<sizeof(SportGoalExitTrigger), 32 + sizeof(::GorillaTag::Sports::SportGoalTrigger*)> __GorillaTag_Sports_SportGoalExitTriggerSizeCheck;
  static_assert(sizeof(SportGoalExitTrigger) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GorillaTag::Sports::SportGoalExitTrigger::OnTriggerExit
// Il2CppName: OnTriggerExit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaTag::Sports::SportGoalExitTrigger::*)(::UnityEngine::Collider*)>(&GorillaTag::Sports::SportGoalExitTrigger::OnTriggerExit)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::Sports::SportGoalExitTrigger*), "OnTriggerExit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: GorillaTag::Sports::SportGoalExitTrigger::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
