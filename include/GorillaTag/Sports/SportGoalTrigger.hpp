// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GorillaTag::Sports
namespace GorillaTag::Sports {
  // Forward declaring type: SportScoreboard
  class SportScoreboard;
  // Forward declaring type: SportBall
  class SportBall;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: HashSet`1<T>
  template<typename T>
  class HashSet_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Collider
  class Collider;
}
// Completed forward declares
// Type namespace: GorillaTag.Sports
namespace GorillaTag::Sports {
  // Forward declaring type: SportGoalTrigger
  class SportGoalTrigger;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GorillaTag::Sports::SportGoalTrigger);
DEFINE_IL2CPP_ARG_TYPE(::GorillaTag::Sports::SportGoalTrigger*, "GorillaTag.Sports", "SportGoalTrigger");
// Type namespace: GorillaTag.Sports
namespace GorillaTag::Sports {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: GorillaTag.Sports.SportGoalTrigger
  // [TokenAttribute] Offset: FFFFFFFF
  class SportGoalTrigger : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private GorillaTag.Sports.SportScoreboard scoreboard
    // Size: 0x8
    // Offset: 0x20
    ::GorillaTag::Sports::SportScoreboard* scoreboard;
    // Field size check
    static_assert(sizeof(::GorillaTag::Sports::SportScoreboard*) == 0x8);
    // private System.Int32 teamScoringOnThisGoal
    // Size: 0x4
    // Offset: 0x28
    int teamScoringOnThisGoal;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Single ballTriggerExitDistanceFallback
    // Size: 0x4
    // Offset: 0x2C
    float ballTriggerExitDistanceFallback;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Collections.Generic.HashSet`1<GorillaTag.Sports.SportBall> ballsPendingTriggerExit
    // Size: 0x8
    // Offset: 0x30
    ::System::Collections::Generic::HashSet_1<::GorillaTag::Sports::SportBall*>* ballsPendingTriggerExit;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::HashSet_1<::GorillaTag::Sports::SportBall*>*) == 0x8);
    public:
    // Get instance field reference: private GorillaTag.Sports.SportScoreboard scoreboard
    [[deprecated("Use field access instead!")]] ::GorillaTag::Sports::SportScoreboard*& dyn_scoreboard();
    // Get instance field reference: private System.Int32 teamScoringOnThisGoal
    [[deprecated("Use field access instead!")]] int& dyn_teamScoringOnThisGoal();
    // Get instance field reference: private System.Single ballTriggerExitDistanceFallback
    [[deprecated("Use field access instead!")]] float& dyn_ballTriggerExitDistanceFallback();
    // Get instance field reference: private System.Collections.Generic.HashSet`1<GorillaTag.Sports.SportBall> ballsPendingTriggerExit
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::GorillaTag::Sports::SportBall*>*& dyn_ballsPendingTriggerExit();
    // public System.Void BallExitedGoalTrigger(GorillaTag.Sports.SportBall ball)
    // Offset: 0x28A06D4
    void BallExitedGoalTrigger(::GorillaTag::Sports::SportBall* ball);
    // private System.Void PruneBallsPendingTriggerExitByDistance()
    // Offset: 0x28A076C
    void PruneBallsPendingTriggerExitByDistance();
    // private System.Void OnTriggerEnter(UnityEngine.Collider other)
    // Offset: 0x28A0984
    void OnTriggerEnter(::UnityEngine::Collider* other);
    // public System.Void .ctor()
    // Offset: 0x28A0B8C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SportGoalTrigger* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTag::Sports::SportGoalTrigger::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SportGoalTrigger*, creationType>()));
    }
  }; // GorillaTag.Sports.SportGoalTrigger
  #pragma pack(pop)
  static check_size<sizeof(SportGoalTrigger), 48 + sizeof(::System::Collections::Generic::HashSet_1<::GorillaTag::Sports::SportBall*>*)> __GorillaTag_Sports_SportGoalTriggerSizeCheck;
  static_assert(sizeof(SportGoalTrigger) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GorillaTag::Sports::SportGoalTrigger::BallExitedGoalTrigger
// Il2CppName: BallExitedGoalTrigger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaTag::Sports::SportGoalTrigger::*)(::GorillaTag::Sports::SportBall*)>(&GorillaTag::Sports::SportGoalTrigger::BallExitedGoalTrigger)> {
  static const MethodInfo* get() {
    static auto* ball = &::il2cpp_utils::GetClassFromName("GorillaTag.Sports", "SportBall")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::Sports::SportGoalTrigger*), "BallExitedGoalTrigger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ball});
  }
};
// Writing MetadataGetter for method: GorillaTag::Sports::SportGoalTrigger::PruneBallsPendingTriggerExitByDistance
// Il2CppName: PruneBallsPendingTriggerExitByDistance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaTag::Sports::SportGoalTrigger::*)()>(&GorillaTag::Sports::SportGoalTrigger::PruneBallsPendingTriggerExitByDistance)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::Sports::SportGoalTrigger*), "PruneBallsPendingTriggerExitByDistance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaTag::Sports::SportGoalTrigger::OnTriggerEnter
// Il2CppName: OnTriggerEnter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaTag::Sports::SportGoalTrigger::*)(::UnityEngine::Collider*)>(&GorillaTag::Sports::SportGoalTrigger::OnTriggerEnter)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::Sports::SportGoalTrigger*), "OnTriggerEnter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: GorillaTag::Sports::SportGoalTrigger::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
