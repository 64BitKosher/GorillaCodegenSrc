// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: AudioSource
  class AudioSource;
  // Forward declaring type: AnimationCurve
  class AnimationCurve;
  // Forward declaring type: AudioClip
  class AudioClip;
  // Forward declaring type: Vector3
  struct Vector3;
}
// Completed forward declares
// Type namespace: GorillaTag.Audio
namespace GorillaTag::Audio {
  // Forward declaring type: GTAudioOneShot
  class GTAudioOneShot;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GorillaTag::Audio::GTAudioOneShot);
DEFINE_IL2CPP_ARG_TYPE(::GorillaTag::Audio::GTAudioOneShot*, "GorillaTag.Audio", "GTAudioOneShot");
// Type namespace: GorillaTag.Audio
namespace GorillaTag::Audio {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: GorillaTag.Audio.GTAudioOneShot
  // [TokenAttribute] Offset: FFFFFFFF
  class GTAudioOneShot : public ::Il2CppObject {
    public:
    // Get static field: static private System.Boolean <isInitialized>k__BackingField
    static bool _get_$isInitialized$k__BackingField();
    // Set static field: static private System.Boolean <isInitialized>k__BackingField
    static void _set_$isInitialized$k__BackingField(bool value);
    // Get static field: static UnityEngine.AudioSource audioSource
    static ::UnityEngine::AudioSource* _get_audioSource();
    // Set static field: static UnityEngine.AudioSource audioSource
    static void _set_audioSource(::UnityEngine::AudioSource* value);
    // Get static field: static UnityEngine.AnimationCurve defaultCurve
    static ::UnityEngine::AnimationCurve* _get_defaultCurve();
    // Set static field: static UnityEngine.AnimationCurve defaultCurve
    static void _set_defaultCurve(::UnityEngine::AnimationCurve* value);
    // static System.Boolean get_isInitialized()
    // Offset: 0x28AD6E4
    static bool get_isInitialized();
    // static private System.Void set_isInitialized(System.Boolean value)
    // Offset: 0x28AD72C
    static void set_isInitialized(bool value);
    // static private System.Void Initialize()
    // Offset: 0x28AD77C
    static void Initialize();
    // static System.Void Play(UnityEngine.AudioClip clip, UnityEngine.Vector3 position, System.Single volume, System.Single pitch)
    // Offset: 0x28A2B94
    static void Play(::UnityEngine::AudioClip* clip, ::UnityEngine::Vector3 position, float volume, float pitch);
    // static System.Void Play(UnityEngine.AudioClip clip, UnityEngine.Vector3 position, UnityEngine.AnimationCurve curve, System.Single volume, System.Single pitch)
    // Offset: 0x28AD96C
    static void Play(::UnityEngine::AudioClip* clip, ::UnityEngine::Vector3 position, ::UnityEngine::AnimationCurve* curve, float volume, float pitch);
  }; // GorillaTag.Audio.GTAudioOneShot
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GorillaTag::Audio::GTAudioOneShot::get_isInitialized
// Il2CppName: get_isInitialized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&GorillaTag::Audio::GTAudioOneShot::get_isInitialized)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::Audio::GTAudioOneShot*), "get_isInitialized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaTag::Audio::GTAudioOneShot::set_isInitialized
// Il2CppName: set_isInitialized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&GorillaTag::Audio::GTAudioOneShot::set_isInitialized)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::Audio::GTAudioOneShot*), "set_isInitialized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GorillaTag::Audio::GTAudioOneShot::Initialize
// Il2CppName: Initialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GorillaTag::Audio::GTAudioOneShot::Initialize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::Audio::GTAudioOneShot*), "Initialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaTag::Audio::GTAudioOneShot::Play
// Il2CppName: Play
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::AudioClip*, ::UnityEngine::Vector3, float, float)>(&GorillaTag::Audio::GTAudioOneShot::Play)> {
  static const MethodInfo* get() {
    static auto* clip = &::il2cpp_utils::GetClassFromName("UnityEngine", "AudioClip")->byval_arg;
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* volume = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* pitch = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::Audio::GTAudioOneShot*), "Play", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clip, position, volume, pitch});
  }
};
// Writing MetadataGetter for method: GorillaTag::Audio::GTAudioOneShot::Play
// Il2CppName: Play
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::AudioClip*, ::UnityEngine::Vector3, ::UnityEngine::AnimationCurve*, float, float)>(&GorillaTag::Audio::GTAudioOneShot::Play)> {
  static const MethodInfo* get() {
    static auto* clip = &::il2cpp_utils::GetClassFromName("UnityEngine", "AudioClip")->byval_arg;
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* curve = &::il2cpp_utils::GetClassFromName("UnityEngine", "AnimationCurve")->byval_arg;
    static auto* volume = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* pitch = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::Audio::GTAudioOneShot*), "Play", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clip, position, curve, volume, pitch});
  }
};
