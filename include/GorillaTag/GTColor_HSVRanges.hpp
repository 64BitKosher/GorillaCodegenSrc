// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: GorillaTag.GTColor
#include "GorillaTag/GTColor.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GorillaTag::GTColor::HSVRanges, "GorillaTag", "GTColor/HSVRanges");
// Type namespace: GorillaTag
namespace GorillaTag {
  // Size: 0x18
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: GorillaTag.GTColor/HSVRanges
  // [TokenAttribute] Offset: FFFFFFFF
  struct GTColor::HSVRanges/*, public ::System::ValueType*/ {
    public:
    public:
    // public UnityEngine.Vector2 h
    // Size: 0x8
    // Offset: 0x0
    ::UnityEngine::Vector2 h;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector2) == 0x8);
    // public UnityEngine.Vector2 s
    // Size: 0x8
    // Offset: 0x8
    ::UnityEngine::Vector2 s;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector2) == 0x8);
    // public UnityEngine.Vector2 v
    // Size: 0x8
    // Offset: 0x10
    ::UnityEngine::Vector2 v;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector2) == 0x8);
    public:
    // Creating value type constructor for type: HSVRanges
    constexpr HSVRanges(::UnityEngine::Vector2 h_ = {}, ::UnityEngine::Vector2 s_ = {}, ::UnityEngine::Vector2 v_ = {}) noexcept : h{h_}, s{s_}, v{v_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public UnityEngine.Vector2 h
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& dyn_h();
    // Get instance field reference: public UnityEngine.Vector2 s
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& dyn_s();
    // Get instance field reference: public UnityEngine.Vector2 v
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& dyn_v();
    // public System.Void .ctor(System.Single hMin, System.Single hMax, System.Single sMin, System.Single sMax, System.Single vMin, System.Single vMax)
    // Offset: 0x28796A4
    HSVRanges(float hMin, float hMax, float sMin, float sMax, float vMin, float vMax);
  }; // GorillaTag.GTColor/HSVRanges
  #pragma pack(pop)
  static check_size<sizeof(GTColor::HSVRanges), 16 + sizeof(::UnityEngine::Vector2)> __GorillaTag_GTColor_HSVRangesSizeCheck;
  static_assert(sizeof(GTColor::HSVRanges) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GorillaTag::GTColor::HSVRanges::HSVRanges
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
