// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GorillaTag
namespace GorillaTag {
}
// Completed forward declares
// Type namespace: GorillaTag
namespace GorillaTag {
  // Forward declaring type: GTAppState
  class GTAppState;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GorillaTag::GTAppState);
DEFINE_IL2CPP_ARG_TYPE(::GorillaTag::GTAppState*, "GorillaTag", "GTAppState");
// Type namespace: GorillaTag
namespace GorillaTag {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: GorillaTag.GTAppState
  // [TokenAttribute] Offset: FFFFFFFF
  class GTAppState : public ::Il2CppObject {
    public:
    // Nested type: ::GorillaTag::GTAppState::$$c
    class $$c;
    // Get static field: static private System.Boolean <isQuitting>k__BackingField
    static bool _get_$isQuitting$k__BackingField();
    // Set static field: static private System.Boolean <isQuitting>k__BackingField
    static void _set_$isQuitting$k__BackingField(bool value);
    // static public System.Boolean get_isQuitting()
    // Offset: 0x2879250
    static bool get_isQuitting();
    // static private System.Void set_isQuitting(System.Boolean value)
    // Offset: 0x2879298
    static void set_isQuitting(bool value);
    // static private System.Void HandleOnSubsystemRegistration()
    // Offset: 0x28792E8
    static void HandleOnSubsystemRegistration();
    // static private System.Void HandleOnAfterSceneLoad()
    // Offset: 0x287958C
    static void HandleOnAfterSceneLoad();
  }; // GorillaTag.GTAppState
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GorillaTag::GTAppState::get_isQuitting
// Il2CppName: get_isQuitting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&GorillaTag::GTAppState::get_isQuitting)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::GTAppState*), "get_isQuitting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaTag::GTAppState::set_isQuitting
// Il2CppName: set_isQuitting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&GorillaTag::GTAppState::set_isQuitting)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::GTAppState*), "set_isQuitting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GorillaTag::GTAppState::HandleOnSubsystemRegistration
// Il2CppName: HandleOnSubsystemRegistration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GorillaTag::GTAppState::HandleOnSubsystemRegistration)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::GTAppState*), "HandleOnSubsystemRegistration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaTag::GTAppState::HandleOnAfterSceneLoad
// Il2CppName: HandleOnAfterSceneLoad
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GorillaTag::GTAppState::HandleOnAfterSceneLoad)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaTag::GTAppState*), "HandleOnAfterSceneLoad", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
