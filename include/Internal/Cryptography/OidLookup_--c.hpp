// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Internal.Cryptography.OidLookup
#include "Internal/Cryptography/OidLookup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: KeyValuePair`2<TKey, TValue>
  template<typename TKey, typename TValue>
  struct KeyValuePair_2;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Internal::Cryptography::OidLookup::$$c);
DEFINE_IL2CPP_ARG_TYPE(::Internal::Cryptography::OidLookup::$$c*, "Internal.Cryptography", "OidLookup/<>c");
// Type namespace: Internal.Cryptography
namespace Internal::Cryptography {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Internal.Cryptography.OidLookup/<>c
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class OidLookup::$$c : public ::Il2CppObject {
    public:
    // Get static field: static public readonly Internal.Cryptography.OidLookup/<>c <>9
    static ::Internal::Cryptography::OidLookup::$$c* _get_$$9();
    // Set static field: static public readonly Internal.Cryptography.OidLookup/<>c <>9
    static void _set_$$9(::Internal::Cryptography::OidLookup::$$c* value);
    // static private System.Void .cctor()
    // Offset: 0x4C02438
    static void _cctor();
    // public System.Void .ctor()
    // Offset: 0x4C024A0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static OidLookup::$$c* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::OidLookup::$$c::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<OidLookup::$$c*, creationType>()));
    }
    // System.String <.cctor>b__10_0(System.Collections.Generic.KeyValuePair`2<System.String,System.String> kvp)
    // Offset: 0x4C024A8
    ::StringW $_cctor$b__10_0(::System::Collections::Generic::KeyValuePair_2<::StringW, ::StringW> kvp);
    // System.String <.cctor>b__10_1(System.Collections.Generic.KeyValuePair`2<System.String,System.String> kvp)
    // Offset: 0x4C024E4
    ::StringW $_cctor$b__10_1(::System::Collections::Generic::KeyValuePair_2<::StringW, ::StringW> kvp);
  }; // Internal.Cryptography.OidLookup/<>c
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Internal::Cryptography::OidLookup::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Internal::Cryptography::OidLookup::$$c::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Internal::Cryptography::OidLookup::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Internal::Cryptography::OidLookup::$$c::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Internal::Cryptography::OidLookup::$$c::$_cctor$b__10_0
// Il2CppName: <.cctor>b__10_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Internal::Cryptography::OidLookup::$$c::*)(::System::Collections::Generic::KeyValuePair_2<::StringW, ::StringW>)>(&Internal::Cryptography::OidLookup::$$c::$_cctor$b__10_0)> {
  static const MethodInfo* get() {
    static auto* kvp = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "KeyValuePair`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Internal::Cryptography::OidLookup::$$c*), "<.cctor>b__10_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{kvp});
  }
};
// Writing MetadataGetter for method: Internal::Cryptography::OidLookup::$$c::$_cctor$b__10_1
// Il2CppName: <.cctor>b__10_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Internal::Cryptography::OidLookup::$$c::*)(::System::Collections::Generic::KeyValuePair_2<::StringW, ::StringW>)>(&Internal::Cryptography::OidLookup::$$c::$_cctor$b__10_1)> {
  static const MethodInfo* get() {
    static auto* kvp = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "KeyValuePair`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Internal::Cryptography::OidLookup::$$c*), "<.cctor>b__10_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{kvp});
  }
};
