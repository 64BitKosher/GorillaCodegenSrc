// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: Internal.Cryptography.Pal
namespace Internal::Cryptography::Pal {
  // Forward declaring type: GeneralNameType
  struct GeneralNameType;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Internal::Cryptography::Pal::GeneralNameType, "Internal.Cryptography.Pal", "GeneralNameType");
// Type namespace: Internal.Cryptography.Pal
namespace Internal::Cryptography::Pal {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: Internal.Cryptography.Pal.GeneralNameType
  // [TokenAttribute] Offset: FFFFFFFF
  struct GeneralNameType/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: GeneralNameType
    constexpr GeneralNameType(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public Internal.Cryptography.Pal.GeneralNameType OtherName
    static constexpr const int OtherName = 0;
    // Get static field: static public Internal.Cryptography.Pal.GeneralNameType OtherName
    static ::Internal::Cryptography::Pal::GeneralNameType _get_OtherName();
    // Set static field: static public Internal.Cryptography.Pal.GeneralNameType OtherName
    static void _set_OtherName(::Internal::Cryptography::Pal::GeneralNameType value);
    // static field const value: static public Internal.Cryptography.Pal.GeneralNameType Rfc822Name
    static constexpr const int Rfc822Name = 1;
    // Get static field: static public Internal.Cryptography.Pal.GeneralNameType Rfc822Name
    static ::Internal::Cryptography::Pal::GeneralNameType _get_Rfc822Name();
    // Set static field: static public Internal.Cryptography.Pal.GeneralNameType Rfc822Name
    static void _set_Rfc822Name(::Internal::Cryptography::Pal::GeneralNameType value);
    // static field const value: static public Internal.Cryptography.Pal.GeneralNameType Email
    static constexpr const int Email = 1;
    // Get static field: static public Internal.Cryptography.Pal.GeneralNameType Email
    static ::Internal::Cryptography::Pal::GeneralNameType _get_Email();
    // Set static field: static public Internal.Cryptography.Pal.GeneralNameType Email
    static void _set_Email(::Internal::Cryptography::Pal::GeneralNameType value);
    // static field const value: static public Internal.Cryptography.Pal.GeneralNameType DnsName
    static constexpr const int DnsName = 2;
    // Get static field: static public Internal.Cryptography.Pal.GeneralNameType DnsName
    static ::Internal::Cryptography::Pal::GeneralNameType _get_DnsName();
    // Set static field: static public Internal.Cryptography.Pal.GeneralNameType DnsName
    static void _set_DnsName(::Internal::Cryptography::Pal::GeneralNameType value);
    // static field const value: static public Internal.Cryptography.Pal.GeneralNameType X400Address
    static constexpr const int X400Address = 3;
    // Get static field: static public Internal.Cryptography.Pal.GeneralNameType X400Address
    static ::Internal::Cryptography::Pal::GeneralNameType _get_X400Address();
    // Set static field: static public Internal.Cryptography.Pal.GeneralNameType X400Address
    static void _set_X400Address(::Internal::Cryptography::Pal::GeneralNameType value);
    // static field const value: static public Internal.Cryptography.Pal.GeneralNameType DirectoryName
    static constexpr const int DirectoryName = 4;
    // Get static field: static public Internal.Cryptography.Pal.GeneralNameType DirectoryName
    static ::Internal::Cryptography::Pal::GeneralNameType _get_DirectoryName();
    // Set static field: static public Internal.Cryptography.Pal.GeneralNameType DirectoryName
    static void _set_DirectoryName(::Internal::Cryptography::Pal::GeneralNameType value);
    // static field const value: static public Internal.Cryptography.Pal.GeneralNameType EdiPartyName
    static constexpr const int EdiPartyName = 5;
    // Get static field: static public Internal.Cryptography.Pal.GeneralNameType EdiPartyName
    static ::Internal::Cryptography::Pal::GeneralNameType _get_EdiPartyName();
    // Set static field: static public Internal.Cryptography.Pal.GeneralNameType EdiPartyName
    static void _set_EdiPartyName(::Internal::Cryptography::Pal::GeneralNameType value);
    // static field const value: static public Internal.Cryptography.Pal.GeneralNameType UniformResourceIdentifier
    static constexpr const int UniformResourceIdentifier = 6;
    // Get static field: static public Internal.Cryptography.Pal.GeneralNameType UniformResourceIdentifier
    static ::Internal::Cryptography::Pal::GeneralNameType _get_UniformResourceIdentifier();
    // Set static field: static public Internal.Cryptography.Pal.GeneralNameType UniformResourceIdentifier
    static void _set_UniformResourceIdentifier(::Internal::Cryptography::Pal::GeneralNameType value);
    // static field const value: static public Internal.Cryptography.Pal.GeneralNameType IPAddress
    static constexpr const int IPAddress = 7;
    // Get static field: static public Internal.Cryptography.Pal.GeneralNameType IPAddress
    static ::Internal::Cryptography::Pal::GeneralNameType _get_IPAddress();
    // Set static field: static public Internal.Cryptography.Pal.GeneralNameType IPAddress
    static void _set_IPAddress(::Internal::Cryptography::Pal::GeneralNameType value);
    // static field const value: static public Internal.Cryptography.Pal.GeneralNameType RegisteredId
    static constexpr const int RegisteredId = 8;
    // Get static field: static public Internal.Cryptography.Pal.GeneralNameType RegisteredId
    static ::Internal::Cryptography::Pal::GeneralNameType _get_RegisteredId();
    // Set static field: static public Internal.Cryptography.Pal.GeneralNameType RegisteredId
    static void _set_RegisteredId(::Internal::Cryptography::Pal::GeneralNameType value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // Internal.Cryptography.Pal.GeneralNameType
  #pragma pack(pop)
  static check_size<sizeof(GeneralNameType), 0 + sizeof(int)> __Internal_Cryptography_Pal_GeneralNameTypeSizeCheck;
  static_assert(sizeof(GeneralNameType) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
