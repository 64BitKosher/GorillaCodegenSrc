// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Exception
  class Exception;
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: Internal.Runtime.Augments
namespace Internal::Runtime::Augments {
  // Forward declaring type: ReflectionExecutionDomainCallbacks
  class ReflectionExecutionDomainCallbacks;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Internal::Runtime::Augments::ReflectionExecutionDomainCallbacks);
DEFINE_IL2CPP_ARG_TYPE(::Internal::Runtime::Augments::ReflectionExecutionDomainCallbacks*, "Internal.Runtime.Augments", "ReflectionExecutionDomainCallbacks");
// Type namespace: Internal.Runtime.Augments
namespace Internal::Runtime::Augments {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Internal.Runtime.Augments.ReflectionExecutionDomainCallbacks
  // [TokenAttribute] Offset: FFFFFFFF
  class ReflectionExecutionDomainCallbacks : public ::Il2CppObject {
    public:
    // System.Exception CreateMissingMetadataException(System.Type attributeType)
    // Offset: 0x44BF368
    ::System::Exception* CreateMissingMetadataException(::System::Type* attributeType);
    // public System.Void .ctor()
    // Offset: 0x44BF360
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ReflectionExecutionDomainCallbacks* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Runtime::Augments::ReflectionExecutionDomainCallbacks::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ReflectionExecutionDomainCallbacks*, creationType>()));
    }
  }; // Internal.Runtime.Augments.ReflectionExecutionDomainCallbacks
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Internal::Runtime::Augments::ReflectionExecutionDomainCallbacks::CreateMissingMetadataException
// Il2CppName: CreateMissingMetadataException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Exception* (Internal::Runtime::Augments::ReflectionExecutionDomainCallbacks::*)(::System::Type*)>(&Internal::Runtime::Augments::ReflectionExecutionDomainCallbacks::CreateMissingMetadataException)> {
  static const MethodInfo* get() {
    static auto* attributeType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Internal::Runtime::Augments::ReflectionExecutionDomainCallbacks*), "CreateMissingMetadataException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{attributeType});
  }
};
// Writing MetadataGetter for method: Internal::Runtime::Augments::ReflectionExecutionDomainCallbacks::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
