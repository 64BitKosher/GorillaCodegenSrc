// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: Internal.Runtime.Augments
namespace Internal::Runtime::Augments {
  // Forward declaring type: AsyncStatus
  struct AsyncStatus;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Internal::Runtime::Augments::AsyncStatus, "Internal.Runtime.Augments", "AsyncStatus");
// Type namespace: Internal.Runtime.Augments
namespace Internal::Runtime::Augments {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: Internal.Runtime.Augments.AsyncStatus
  // [TokenAttribute] Offset: FFFFFFFF
  struct AsyncStatus/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: AsyncStatus
    constexpr AsyncStatus(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public Internal.Runtime.Augments.AsyncStatus Started
    static constexpr const int Started = 0;
    // Get static field: static public Internal.Runtime.Augments.AsyncStatus Started
    static ::Internal::Runtime::Augments::AsyncStatus _get_Started();
    // Set static field: static public Internal.Runtime.Augments.AsyncStatus Started
    static void _set_Started(::Internal::Runtime::Augments::AsyncStatus value);
    // static field const value: static public Internal.Runtime.Augments.AsyncStatus Completed
    static constexpr const int Completed = 1;
    // Get static field: static public Internal.Runtime.Augments.AsyncStatus Completed
    static ::Internal::Runtime::Augments::AsyncStatus _get_Completed();
    // Set static field: static public Internal.Runtime.Augments.AsyncStatus Completed
    static void _set_Completed(::Internal::Runtime::Augments::AsyncStatus value);
    // static field const value: static public Internal.Runtime.Augments.AsyncStatus Canceled
    static constexpr const int Canceled = 2;
    // Get static field: static public Internal.Runtime.Augments.AsyncStatus Canceled
    static ::Internal::Runtime::Augments::AsyncStatus _get_Canceled();
    // Set static field: static public Internal.Runtime.Augments.AsyncStatus Canceled
    static void _set_Canceled(::Internal::Runtime::Augments::AsyncStatus value);
    // static field const value: static public Internal.Runtime.Augments.AsyncStatus Error
    static constexpr const int Error = 3;
    // Get static field: static public Internal.Runtime.Augments.AsyncStatus Error
    static ::Internal::Runtime::Augments::AsyncStatus _get_Error();
    // Set static field: static public Internal.Runtime.Augments.AsyncStatus Error
    static void _set_Error(::Internal::Runtime::Augments::AsyncStatus value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // Internal.Runtime.Augments.AsyncStatus
  #pragma pack(pop)
  static check_size<sizeof(AsyncStatus), 0 + sizeof(int)> __Internal_Runtime_Augments_AsyncStatusSizeCheck;
  static_assert(sizeof(AsyncStatus) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
